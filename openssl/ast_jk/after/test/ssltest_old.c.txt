TranslationUnitDecl 0x13af9f0f3a8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13af9f0fc40 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13af9f0f940 '__int128'
|-TypedefDecl 0x13af9f0fcb0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13af9f0f960 'unsigned __int128'
|-TypedefDecl 0x13af9f0ffe8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13af9f0fda0 'struct __NSConstantString_tag'
|   `-Record 0x13af9f0fd08 '__NSConstantString_tag'
|-TypedefDecl 0x13af9f10058 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x13af9f0f580 'unsigned long long'
|-TypedefDecl 0x13af9f100f0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13af9f100b0 'char *'
|   `-BuiltinType 0x13af9f0f440 'char'
|-TypedefDecl 0x13af9f10160 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13af9f100b0 'char *'
|   `-BuiltinType 0x13af9f0f440 'char'
|-TypedefDecl 0x13af9f10220 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x13af9f0f580 'unsigned long long'
|-TypedefDecl 0x13af9f10290 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x13af9f100b0 'char *'
|   `-BuiltinType 0x13af9f0f440 'char'
|-FunctionDecl 0x13afbb483f0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x13afbb48490 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x13afbb48500 <col:21> Implicit
|-FunctionDecl 0x13afbb48558 prev 0x13afbb483f0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x13afbb48280 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x13afbb48648 <col:21> Inherited Implicit
|-TypedefDecl 0x13afbb48688 prev 0x13af9f10058 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x13af9f0f580 'unsigned long long'
|-TypedefDecl 0x13afbb48730 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x13afbb48700 'size_t' sugar
|   |-Typedef 0x13afbb48688 'size_t'
|   `-BuiltinType 0x13af9f0f580 'unsigned long long'
|-TypedefDecl 0x13afbb487a0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x13af9f0f4e0 'long long'
|-TypedefDecl 0x13afbb48810 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x13af9f0f4e0 'long long'
|-TypedefDecl 0x13afbb48880 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x13af9f0f520 'unsigned short'
|-TypedefDecl 0x13afbb488f0 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x13af9f0f520 'unsigned short'
|-TypedefDecl 0x13afbb48960 <line:542:1, col:24> col:24 referenced wctype_t 'unsigned short'
| `-BuiltinType 0x13af9f0f520 'unsigned short'
|-TypedefDecl 0x13afbb489d0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x13af9f0f4a0 'int'
|-TypedefDecl 0x13afbb48a40 <line:567:1, col:19> col:19 referenced __time32_t 'long'
| `-BuiltinType 0x13af9f0f4c0 'long'
|-TypedefDecl 0x13afbb48ab0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x13af9f0f4e0 'long long'
|-TypedefDecl 0x13afbb48b40 <line:580:1, col:20> col:20 referenced time_t '__time64_t':'long long'
| `-TypedefType 0x13afbb48b10 '__time64_t' sugar
|   |-Typedef 0x13afbb48ab0 '__time64_t'
|   `-BuiltinType 0x13af9f0f4e0 'long long'
|-FunctionDecl 0x13afbb48cb8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x13afbb48ed8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x13afbb80560 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x13afbb49018 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x13afbb49090 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x13afbb49108 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x13afbb49188 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x13afbb80300 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x13afbb80640 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x13afbb80700 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x13afbb80870 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x13afbb80820 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x13afbb807c0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x13afbb806e0 'struct threadlocaleinfostruct'
|       `-Record 0x13afbb8a3a0 'threadlocaleinfostruct'
|-TypedefDecl 0x13afbb80980 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x13afbb80930 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x13afbb808d0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x13afbb807a0 'struct threadmbcinfostruct'
|       `-Record 0x13afbb80700 'threadmbcinfostruct'
|-RecordDecl 0x13afbb809d8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x13afbb80a90 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x13afbb80b50 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x13afbb80be0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x13afbb80c70 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x13afbb80d28 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x13afbb80cd0 'struct localeinfo_struct' sugar
|   `-RecordType 0x13afbb80b30 'struct localeinfo_struct'
|     `-Record 0x13afbb80a90 'localeinfo_struct'
|-TypedefDecl 0x13afbb80e00 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x13afbb80db0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x13afbb80cd0 'struct localeinfo_struct' sugar
|     `-RecordType 0x13afbb80b30 'struct localeinfo_struct'
|       `-Record 0x13afbb80a90 'localeinfo_struct'
|-RecordDecl 0x13afbb80e78 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x13afbb80f30 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x13afbb80fa8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x13afbb81068 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x13afbb81100 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x13afbb81170 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x13afbb81228 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x13afbb811d0 'struct localerefcount' sugar
|   `-RecordType 0x13afbb80f10 'struct localerefcount'
|     `-Record 0x13afbb80e78 'localerefcount'
|-RecordDecl 0x13afbb8a3a0 prev 0x13afbb80640 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x13afbb8a420 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x13afbb8a498 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x13afbb8a508 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x13afbb8a578 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x13afbb8a5e8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x13afbb8a7a8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x13afbb8a818 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x13afbb8a888 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x13afbb8a8f8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x13afbb8a968 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x13afbb8a9d8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x13afbb8aa30 parent 0x13af9f0f3a8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x13afbb8abc0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x13afbb8ac30 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x13afbb8aca0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x13afbb8ad10 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x13afbb8adb0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x13afbb8ae20 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x13afbb8af30 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x13afbb8b068 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x13afbb8b118 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x13afbb8b0c0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x13afbb806e0 'struct threadlocaleinfostruct'
|     `-Record 0x13afbb8a3a0 'threadlocaleinfostruct'
|-FunctionDecl 0x13afbb8e4c0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:35:9, col:112> col:22 used _wassert 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
| |-ParmVarDecl 0x13afbb8b198 <col:38, col:54> col:54 _Message 'const wchar_t *'
| |-ParmVarDecl 0x13afbb8b210 <col:71, col:86> col:86 _File 'const wchar_t *'
| `-ParmVarDecl 0x13afbb8b290 <col:98, col:107> col:107 _Line 'unsigned int'
|-FunctionDecl 0x13afbb8e6c0 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:31:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x13afbb8e930 <line:34:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x13afbb8e7b8 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x13afbb8eb80 <line:35:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x13afbb8ea08 <col:34, col:40> col:40 _Value 'int *'
|-RecordDecl 0x13afbb8ec68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x13afbb8ed20 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x13afbb8ed98 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x13afbb8ee08 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x13afbb8ee78 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x13afbb8eee8 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x13afbb8ef58 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x13afbb8efc8 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x13afbb8f038 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x13afbb8f0a8 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x13afbb8f150 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x13afbb8f100 'struct _iobuf' sugar
|   `-RecordType 0x13afbb8ed00 'struct _iobuf'
|     `-Record 0x13afbb8ec68 '_iobuf'
|-FunctionDecl 0x13afbb9c4c0 <line:137:9, col:39> col:24 used __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x13afbb9c590 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x13af9f0f4e0 'long long'
|-FunctionDecl 0x13afbb9c778 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x13afbb9c5f8 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x13afbb9ca70 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x13afbb9c850 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x13afbb9c8c8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x13afbb9ce20 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x13afbb9cb50 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x13afbb9cbd0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x13afbb9cc50 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x13afbb9d070 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x13afbb9cf00 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x13afbb9d280 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x13afbb9d140 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x13afbbc7da0 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x13afbb9d350 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x13afbbc7f90 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x13afbbc8288 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x13afbbc8060 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x13afbbc80e0 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x13afbbc8440 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x13afbbc8360 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x13afbbc85f0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x13afbbc8510 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x13afbbc87a0 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x13afbbc86c0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x13afbbc8950 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x13afbbc8870 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x13afbbc8ae0 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x13afbbc6e60 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x13afbbc8ba8 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x13afbbc8c98 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x13afbbc7218 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x13afbbc6f40 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x13afbbc6fc0 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x13afbbc7038 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x13afbbc73d8 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x13afbbc72f8 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x13afbbc76a0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x13afbbc74b0 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x13afbbc7530 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x13afbbc7838 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x13afbbc7c28 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x13afbbc7cc8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x13afbbc9dc0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x13afbbc9e38 prev 0x13afbbc7c28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x13afbbc7a00 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x13afbbc7a80 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x13afbbc9ee8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbca360 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x13afbbca090 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x13afbbca110 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x13afbbca190 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x13afbbca680 <line:215:40> col:40 implicit used fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x13afbbca720 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x13afbbca788 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x13afbbca800 <col:40> Implicit printf 2 3
|-FunctionDecl 0x13afbbca868 prev 0x13afbbca680 <col:28, col:125> col:40 used fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x13afbbca440 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x13afbbca4c0 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x13afbbca960 <col:40> Inherited printf 2 3
|-FunctionDecl 0x13afbbcab28 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x13afbbca9a8 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x13afbbcaa28 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x13afbbcadd0 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x13afbbcac08 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x13afbbcac80 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x13afbbcafc8 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x13afbbcaeb0 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x13afbbcb2c0 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x13afbbcb0a0 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x13afbbcb118 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x13afbbcb758 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x13afbbcb7f8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x13afbbcb860 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x13afbbcb8c8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x13afbbcb930 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x13afbbcb9b8 prev 0x13afbbcb758 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x13afbbcb3a0 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x13afbbcb418 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbbcb490 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbbcb508 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x13afbbccef0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x13afbbcbaa8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x13afbbcbb20 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbbcbb98 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbbcbc10 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbbcbc88 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x13afbbcd3b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x13afbbcd0e0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x13afbbcd160 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x13afbbcd1d8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x13afbbcd468 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbcd928 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x13afbbcd5b0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x13afbbcd630 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x13afbbcd6b0 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x13afbbcd728 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x13afbbcdcd0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x13afbbcdd70 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x13afbbcde00 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x13afbbcde78 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x13afbbcdee0 prev 0x13afbbcdcd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x13afbbcdb08 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x13afbbcdb88 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x13afbbce0c0 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x13afbbcdf90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbce508 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbbce208 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x13afbbce288 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x13afbbce320 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x13afbbce5c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbce880 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x13afbbce700 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x13afbbce780 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x13afbbceb70 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbbce958 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x13afbbce9d8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x13afbbcea50 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbbceee0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x13afbbcec50 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x13afbbced28 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x13afbbcf298 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x13afbbcefb8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x13afbbcf038 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x13afbbcf0b8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x13afbbcf4f8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x13afbbcf378 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x13afbbcf8a8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x13afbbcf5c8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x13afbbcf648 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x13afbbcf6c8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x13afbbcfb08 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x13afbbcf988 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x13afbbcffd8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x13afbbd0078 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x13afbbd00e0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x13afbbd0148 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x13afbbd01b0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x13afbbd0238 prev 0x13afbbcffd8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x13afbbcfc10 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x13afbbcfc88 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbbcfd00 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbbcfd78 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x13afbbd0400 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x13afbbd0320 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x13afbbd0590 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x13afbbd0718 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x13afbbd0a30 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x13afbbd07e8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x13afbbd0880 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x13afbbd0d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x13afbbd0c10 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x13afbbc8db0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbc8fd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x13afbbc8ef0 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x13afbbc91f0 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x13afbbc90a8 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x13afbbc93a0 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x13afbbc92c0 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x13afbbc95f0 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x13afbbc9478 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x13afbbc94f8 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x13afbbc9818 <line:264:40> col:40 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x13afbbc98b8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x13afbbc9928 <col:40> Implicit printf 1 2
|-FunctionDecl 0x13afbbc9990 prev 0x13afbbc9818 <col:28, col:102> col:40 used printf 'int (const char *, ...)'
| |-ParmVarDecl 0x13afbbc96d0 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x13afbbc9a80 <col:40> Inherited printf 1 2
|-FunctionDecl 0x13afbbc9bb0 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x13afbbc9ad0 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x13afbbd4ed8 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x13afbbc9c88 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x13afbbc9d00 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x13afbbd5098 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x13afbbd4fb8 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x13afbbd52b8 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x13afbbd5170 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x13afbbd5508 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x13afbbd5390 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x13afbbd5408 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x13afbbd56c8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x13afbbd55e8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x13afbbd5990 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x13afbbd57a0 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x13afbbd5820 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x13afbbd5b50 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x13afbbd5a70 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x13afbbd1e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x13afbbd5d00 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x13afbbd1ee8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x13afbbd20e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x13afbbd2008 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x13afbbd2270 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x13afbbd2518 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x13afbbd25b8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x13afbbd2628 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x13afbbd2690 prev 0x13afbbd2518 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x13afbbd2400 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x13afbbd2868 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x13afbbd2738 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbd2be0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbbd29b0 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x13afbbd2a28 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x13afbbd2c90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbd0ea8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x13afbbd2dd8 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x13afbbd10f8 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbbd0f80 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x13afbbd0ff8 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbbd14b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x13afbbd1290 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x13afbbd1310 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x13afbbd1568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbd1790 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x13afbbd16b0 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x13afbbd19b8 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x13afbbd1868 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x13afbbd1ba0 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x13afbbd4070 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x13afbbd1c68 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x13afbbd1ce8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x13afbbd1d68 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x13afbbd3e60 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbbd44f0 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x13afbbd4160 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbbd41d8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbbd4250 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbbd42d0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x13afbbd48c8 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x13afbbd45e0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbbd4658 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbbd46d8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x13afbbd4a90 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x13afbbd49b0 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x13afbbd9ec0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x13afbbd9f60 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x13afbbd9fc8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x13afbbda040 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x13afbbda0a8 prev 0x13afbbd9ec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x13afbbd4c28 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x13afbbd4ca8 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x13afbbda288 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x13afbbda158 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbda678 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbbda398 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x13afbbda418 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x13afbbda490 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x13afbbda730 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbda9f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x13afbbda878 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x13afbbda8f8 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x13afbbdacf0 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbbdaad8 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x13afbbdab58 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x13afbbdabd0 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbbd8188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x13afbbd7ea0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x13afbbd7f18 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbbd7f98 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x13afbbd8240 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbd8810 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbbd8480 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x13afbbd84f8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbbd8578 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x13afbbd85f0 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x13afbbd88d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbd8c30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x13afbbd8a18 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x13afbbd8a90 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbbd8b10 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x13afbbd6fd0 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbbd8d18 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x13afbbd8d90 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbbd8e10 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x13afbbd6e90 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbbd7230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x13afbbd72d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbd7590 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x13afbbd7418 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x13afbbd7888 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x13afbbd7668 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x13afbbd76e0 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x13afbbd7b08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x13afbbd7a28 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x13afbbd7bb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbd8eb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x13afbbd7cf8 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x13afbbd7d70 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x13afbbd92c0 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x13afbbd9360 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x13afbbd93c8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13afbbd9430 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x13afbbd94b0 <col:40> Implicit printf 2 0
|-FunctionDecl 0x13afbbd9518 prev 0x13afbbd92c0 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x13afbbd8f88 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x13afbbd9008 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x13afbbd9080 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x13afbbd9618 <col:40> Inherited printf 2 0
|-FunctionDecl 0x13afbbd98c0 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x13afbbd9960 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x13afbbd99c8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x13afbbd9a30 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x13afbbd9ab0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x13afbbd9b18 prev 0x13afbbd98c0 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x13afbbd9660 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x13afbbd96e0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x13afbbd9758 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x13afbbd9c18 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x13afbbd2e50 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x13afbbd9c60 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x13afbbd9ce0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x13afbbd9d58 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbbd3148 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x13afbbd2f30 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x13afbbd2fb0 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x13afbbd3028 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbbd3488 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x13afbbd3528 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13afbbd3590 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x13afbbd3608 <col:40> Implicit printf 1 0
|-FunctionDecl 0x13afbbd3670 prev 0x13afbbd3488 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x13afbbd3230 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x13afbbd32a8 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x13afbbd3768 <col:40> Inherited printf 1 0
|-FunctionDecl 0x13afbbd3968 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x13afbbd3a08 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x13afbbd3a70 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x13afbbd3ae8 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x13afbbd3b50 prev 0x13afbbd3968 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x13afbbd37b8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x13afbbd3830 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x13afbbd3c48 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x13afbbddf00 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x13afbbd3c98 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x13afbbd3d10 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbbde158 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x13afbbddfe0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x13afbbde058 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbbde6b8 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x13afbbde758 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x13afbbde7c0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x13afbbde828 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13afbbde890 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x13afbbde918 <col:77> Implicit printf 3 0
|-FunctionDecl 0x13afbbde980 prev 0x13afbbde6b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x13afbbde2f8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbbde370 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbbde3f0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x13afbbde468 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x13afbbdeb70 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x13afbbdea40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbe2048 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x13afbbdebc0 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbbdec38 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbbdecb0 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbbded30 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x13afbbdeda8 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbbe2488 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x13afbbe2140 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbbe21b8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbbe2230 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbbe22b0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x13afbbe2328 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbbe2858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x13afbbe2640 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x13afbbe26b8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbbe2738 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x13afbbe2910 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbe2dc8 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x13afbbe2b18 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x13afbbe2b90 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbbe2c10 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x13afbbe2c88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x13afbbe2e88 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbe02d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x13afbbe0020 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbbe0098 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbbe0118 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x13afbbe0190 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbbe0698 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x13afbbe03c0 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x13afbbe0440 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x13afbbe04b8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbbe0a40 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x13afbbe0ae0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x13afbbe0b48 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x13afbbe0bc0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x13afbbe0c28 prev 0x13afbbe0a40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x13afbbe0840 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x13afbbe08c0 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x13afbbe0e08 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x13afbbe0cd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbe1250 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x13afbbe12f0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x13afbbe1358 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13afbbe13c0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x13afbbe1440 <col:94> Implicit printf 2 0
|-FunctionDecl 0x13afbbe14a8 prev 0x13afbbe1250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x13afbbe0f30 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x13afbbe0fb0 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x13afbbe1028 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x13afbbe1690 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x13afbbe1560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbe1940 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x13afbbe19e0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x13afbbe1a48 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x13afbbe1ab0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x13afbbe1b30 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x13afbbe1b98 prev 0x13afbbe1940 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x13afbbe16e0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x13afbbe1760 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x13afbbe17d8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x13afbbe1c98 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x13afbbe1e60 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x13afbbe1ce8 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x13afbbe1d60 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbbdb100 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x13afbbdaee8 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbbdaf60 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbbdafe0 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x13afbbdb498 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x13afbbdb1e8 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbbdb260 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbbdb2e0 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x13afbbdb358 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbbdb700 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x13afbbdb580 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x13afbbdb600 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x13afbbdb8c0 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x13afbbdb7e0 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x13afbbdbbb0 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x13afbbdb998 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x13afbbdba10 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbbdba90 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x13afbbe2f50 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x13afbbdbc90 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x13afbbdbd10 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x13afbbdbd88 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbbe31b0 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x13afbbe3038 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x13afbbe30b0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbbe3540 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x13afbbe3290 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x13afbbe3308 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbbe3388 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x13afbbe3400 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbbe3710 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x13afbbe3630 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x13afbbe3960 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x13afbbe37e8 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x13afbbe3860 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbbe3b20 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x13afbbe3a40 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x13afbbe3cb0 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x13afbbdcef0 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbbe3d80 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x13afbbe3df8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbbdd148 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbbdcfd0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x13afbbdd048 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbbdd3a0 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbbdd228 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x13afbbdd2a0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbbdd748 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbbdd480 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x13afbbdd4f8 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x13afbbdd570 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbbdda40 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbbdd830 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x13afbbdd8a8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x13afbbdd920 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbbddd38 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbbddb28 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x13afbbddba0 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x13afbbddc18 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbbdc078 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbbdde18 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x13afbbdbee0 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x13afbbdbf58 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbbdc370 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbbdc158 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x13afbbdc1d8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x13afbbdc250 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbbdc668 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbbdc450 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x13afbbdc4d0 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x13afbbdc548 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbbdcac0 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbbdc748 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x13afbbdc7c8 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x13afbbdc840 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x13afbbdc8b8 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbbe4f70 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbbdcba8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x13afbbdcc28 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x13afbbdcca0 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x13afbbdcd18 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbbe5308 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbbe5058 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x13afbbe50d8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x13afbbe5150 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x13afbbe51c8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbbe5798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbbe54b8 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbbe5538 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x13afbbe55b0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x13afbbe5850 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbe5d20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbbe5998 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbbe5a10 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbbe5a90 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x13afbbe5b08 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbbdf060 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbbe5e10 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbbe5e88 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbbe5f08 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x13afbbdef20 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbbdf5b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbbdf250 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbbdf2d0 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x13afbbdf348 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x13afbbdf3c0 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x13afbbdf670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbdfbd8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbbdf7b8 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbbdf830 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbbdf8b0 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x13afbbdf928 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x13afbbdf9a0 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc111c0 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbbdfcd0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbbdfd48 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbbdfdc8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x13afbbdfe40 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x13afbc11060 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc11430 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbc112b8 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x13afbc11330 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc11688 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbc11510 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x13afbc11588 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc11978 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbc11768 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x13afbc117e0 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x13afbc11858 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc11c70 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbc11a60 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x13afbc11ad8 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x13afbc11b50 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc0b078 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbc11e18 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbc11e90 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc11f10 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x13afbc11f88 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x13afbc0b138 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc0b530 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbc0b280 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbc0b2f8 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc0b378 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x13afbc0b3f0 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc0ba58 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbc0b620 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbc0b698 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc0b710 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc0b790 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x13afbc0b808 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc0e030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbc0bc58 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbc0bcd0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc0bd50 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x13afbc0bdc8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x13afbc0be40 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x13afbc0e0f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc0e578 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbc0e248 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbc0e2c0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc0e340 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x13afbc0e3b8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x13afbc0e430 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc0eb40 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbc0e670 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbc0e6e8 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc0e760 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc0e7e0 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x13afbc0e858 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x13afbc0e8d0 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc0ef00 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x13afbc0ec38 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x13afbc0ecb0 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x13afbc0ed30 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x13afbc0f1b0 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x13afbc0f040 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x13afbc0f3c8 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x13afbc0f6a8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x13afbc0f490 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x13afbc0f508 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x13afbc0f8f0 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x13afbc0f780 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x13afbc0fa98 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x13afbc0f9c0 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x13afbc0fc20 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x13afbc0fe58 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x13afbc0fce8 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x13afbc0fd60 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x13afbc13080 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x13afbc0ff30 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x13afbc13328 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x13afbc13150 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x13afbc131c8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x13afbc136d0 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x13afbc13400 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x13afbc13480 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x13afbc134f8 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x13afbc139d0 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x13afbc137b0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x13afbc13828 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x13afbc13cc8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x13afbc13aa8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x13afbc13b20 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbc13fd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x13afbc13e60 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x13afbc0c010 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc0c2c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x13afbc0c150 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x13afbc0c5d0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x13afbc0c398 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x13afbc0c410 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x13afbc0c820 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x13afbc0c6a8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x13afbc0c720 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x13afbc0ca88 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x13afbc0c8f8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x13afbc0cc38 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x13afbc0cb58 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x13afbc0cde8 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x13afbc0cd08 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x13afbc101c8 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x13afbc0ceb8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x13afbc0cf30 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc0cfa8 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc104b8 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x13afbc102a8 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x13afbc10320 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc10398 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc107a8 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x13afbc10598 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x13afbc10610 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc10688 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc10a98 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x13afbc10888 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x13afbc10900 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc10978 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc10da0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x13afbc10b78 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc10bf0 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc14090 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x13afbc10e78 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc10ef0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc142e0 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x13afbc14168 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc141e0 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc14530 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x13afbc143b8 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc14430 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc148e8 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x13afbc14608 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x13afbc14680 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc146f8 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x13afbc14d40 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x13afbc149c8 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x13afbc14a40 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc14ab8 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc14b30 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc0d098 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x13afbc14e28 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x13afbc14ea0 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc14f18 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc0d388 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x13afbc0d178 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x13afbc0d1f0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc0d268 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc0d678 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x13afbc0d468 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x13afbc0d4e0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc0d558 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x13afbc0da00 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x13afbc0d758 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x13afbc0d7d0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc0d848 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc0d8c0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc0de70 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x13afbc0dae8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x13afbc0db60 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc0dbd8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc0dc50 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x13afbc17468 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x13afbc0df58 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x13afbc170c0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc17138 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc171b0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc17228 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc17828 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x13afbc17618 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x13afbc17690 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc17708 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x13afbc178e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc17d88 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x13afbc17ae0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x13afbc17b58 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc17bd0 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x13afbc17c48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x13afbc17e48 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc1b140 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x13afbc17f88 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x13afbc18000 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x13afbc1b2f8 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x13afbc1b218 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x13afbc1b5d8 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x13afbc1b3c8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x13afbc1b440 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc1b4b8 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc1b830 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x13afbc1b6b8 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc1b730 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc1bb18 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x13afbc1b908 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x13afbc1b980 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc1b9f8 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x13afbc1bea0 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x13afbc1bbf8 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x13afbc1bc70 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc1bce8 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc1bd60 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc190e0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x13afbc1bf88 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x13afbc19328 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x13afbc191b0 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc19228 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc19630 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbc19400 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc19478 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc19880 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbc19708 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc19780 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc19ad0 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbc19958 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc199d0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc19e78 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbc19ba8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x13afbc19c20 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x13afbc19c98 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc1c198 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbc19f58 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x13afbc19fd0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x13afbc1a048 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc1c488 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbc1c278 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x13afbc1c2f0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x13afbc1c368 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc1c848 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbc1c568 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x13afbc1c5e0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc1c658 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc1cb38 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbc1c928 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x13afbc1c9a0 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc1ca18 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc1ce28 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbc1cc18 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x13afbc1cc90 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc1cd08 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc1a260 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbc1cf08 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x13afbc1cf80 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x13afbc1cff8 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x13afbc1d070 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc1a5f0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbc1a348 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x13afbc1a3c0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x13afbc1a438 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x13afbc1a4b0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc1a980 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbc1a6d8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x13afbc1a750 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x13afbc1a7c8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x13afbc1a840 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc1adf0 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbc1aa68 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x13afbc1aae0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc1ab58 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc1abd0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc15130 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbc1aed8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x13afbc1af50 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc1afc8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc1b040 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc154c0 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbc15218 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x13afbc15290 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc15308 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc15380 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc159c8 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbc155a8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x13afbc15620 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc15698 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x13afbc15710 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x13afbc15788 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc15df8 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbc15ab8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x13afbc15b30 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc15ba8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x13afbc15c20 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x13afbc15c98 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc1e308 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbc15ee8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x13afbc15f60 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc15fd8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x13afbc1e130 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x13afbc1e1a8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc1e570 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbc1e3f8 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc1e470 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc1e7c0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbc1e648 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc1e6c0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc1eaa8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbc1e898 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x13afbc1e910 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x13afbc1e988 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc1eef8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbc1ec50 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x13afbc1ecc8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc1ed40 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x13afbc1edb8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x13afbc1efb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc1d548 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbc1d120 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x13afbc1d198 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc1d210 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc1d288 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc1d300 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc1da80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbc1d740 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x13afbc1d7b8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc1d830 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x13afbc1d8a8 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x13afbc1d920 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x13afbc1db48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc1f1a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbc1dc90 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x13afbc1dd08 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc1dd80 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc1ddf8 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x13afbc1de70 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x13afbc1dee8 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc1f6a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x13afbc1f468 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x13afbc1f4e0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x13afbc1f750 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x13afbc1f868 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x13afbc1fde8 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x13afbc1fb20 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x13afbc1fb98 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x13afbc1fc10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x13afbc1fea0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x13afbc1ffb8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x13afbc26638 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbc26358 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x13afbc263d0 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x13afbc26448 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x13afbc266f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x13afbc26810 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x13afbc26e40 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbc26ad0 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x13afbc26b48 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x13afbc26bc0 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x13afbc26c38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x13afbc26f00 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x13afbc27020 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x13afbc24308 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x13afbc27148 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x13afbc241a0 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc24218 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x13afbc24e20 <line:37:1, line:44:1>
|   |-DeclStmt 0x13afbc24450 <line:38:5, col:21>
|   | `-VarDecl 0x13afbc243e8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x13afbc244e8 <line:39:5, col:13>
|   | `-VarDecl 0x13afbc24480 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x13afbc24840 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x13afbc24828 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x13afbc24740 <col:34> '<builtin fn type>' Function 0x13afbc245d8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x13afbc24778 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x13afbc243e8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x13afbc247b0 <col:29> 'const wchar_t *' lvalue ParmVar 0x13afbc24218 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x13afbc24b00 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x13afbc24870 <col:5> 'int' lvalue Var 0x13afbc24480 '_Ret' 'int'
|   | `-CallExpr 0x13afbc24a40 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x13afbc24a28 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13afbc248a8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x13afbc159c8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x13afbc24a88 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x13afbc248c8 <col:27> 'wchar_t *' lvalue ParmVar 0x13afbc27148 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x13afbc24aa0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x13afbc248e8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x13afbc241a0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x13afbc24ab8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x13afbc24908 <col:44> 'const wchar_t *' lvalue ParmVar 0x13afbc24218 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x13afbc24ad0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x13afbc24990 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x13afbc24968 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x13afbc24928 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x13afbc24ae8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x13afbc249b0 <col:59> 'va_list':'char *' lvalue Var 0x13afbc243e8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x13afbc24db0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x13afbc24d98 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x13afbc24ce8 <col:34> '<builtin fn type>' Function 0x13afbc24b80 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x13afbc24d20 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x13afbc243e8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x13afbc24e10 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x13afbc24df8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x13afbc24dd8 <col:12> 'int' lvalue Var 0x13afbc24480 '_Ret' 'int'
|-FunctionDecl 0x13afbc245d8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x13afbc24678 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x13afbc246e8 <col:34> Implicit
|-FunctionDecl 0x13afbc24b80 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x13afbc24c20 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x13afbc24c90 <col:34> Implicit
|-FunctionDecl 0x13afbc22170 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x13afbc24e70 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x13afbc24ee8 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc24f60 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x13afbc24fd8 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x13afbc22458 <line:50:1, line:52:1>
|   `-ReturnStmt 0x13afbc22448 <line:51:5, col:62>
|     `-CallExpr 0x13afbc22388 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x13afbc22370 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x13afbc22248 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x13afbc159c8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x13afbc223d0 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x13afbc22268 <col:27> 'wchar_t *' lvalue ParmVar 0x13afbc24e70 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x13afbc223e8 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x13afbc22288 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x13afbc24ee8 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x13afbc22400 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x13afbc222a8 <col:44> 'const wchar_t *' lvalue ParmVar 0x13afbc24f60 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x13afbc22418 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x13afbc22330 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x13afbc22308 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x13afbc222c8 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x13afbc22430 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x13afbc22350 <col:59> 'va_list':'char *' lvalue ParmVar 0x13afbc24fd8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x13afbc226f8 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x13afbc22480 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x13afbc224f8 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc22570 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x13afbc225e8 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x13afbc22c70 <line:61:1, line:68:1>
|   |-DeclStmt 0x13afbc22848 <line:62:5, col:21>
|   | `-VarDecl 0x13afbc227e0 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x13afbc228e0 <line:63:5, col:13>
|   | `-VarDecl 0x13afbc22878 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x13afbc22988 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x13afbc22970 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x13afbc228f8 <col:34> '<builtin fn type>' Function 0x13afbc245d8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x13afbc22918 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x13afbc227e0 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x13afbc22950 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x13afbc225e8 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x13afbc22b88 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x13afbc229b8 <col:5> 'int' lvalue Var 0x13afbc22878 '_Ret' 'int'
|   | `-CallExpr 0x13afbc22ac8 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x13afbc22ab0 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13afbc229f0 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x13afbc159c8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x13afbc22b10 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x13afbc22a10 <col:27> 'wchar_t *' lvalue ParmVar 0x13afbc22480 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x13afbc22b28 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x13afbc22a30 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x13afbc224f8 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x13afbc22b40 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x13afbc22a50 <col:44> 'const wchar_t *' lvalue ParmVar 0x13afbc22570 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x13afbc22b58 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x13afbc22a70 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x13afbc225e8 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x13afbc22b70 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x13afbc22a90 <col:64> 'va_list':'char *' lvalue Var 0x13afbc227e0 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x13afbc22c00 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x13afbc22be8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x13afbc22ba8 <col:34> '<builtin fn type>' Function 0x13afbc24b80 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x13afbc22bc8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x13afbc227e0 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x13afbc22c60 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x13afbc22c48 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x13afbc22c28 <col:12> 'int' lvalue Var 0x13afbc22878 '_Ret' 'int'
|-FunctionDecl 0x13afbc23000 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x13afbc22cc0 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x13afbc22d38 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc22db0 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x13afbc22e28 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x13afbc22ea0 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x13afbc232a8 <line:74:1, line:76:1>
|   `-ReturnStmt 0x13afbc23298 <line:75:5, col:67>
|     `-CallExpr 0x13afbc231d8 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x13afbc231c0 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x13afbc230e0 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x13afbc159c8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x13afbc23220 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x13afbc23100 <col:27> 'wchar_t *' lvalue ParmVar 0x13afbc22cc0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x13afbc23238 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x13afbc23120 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x13afbc22d38 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x13afbc23250 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x13afbc23140 <col:44> 'const wchar_t *' lvalue ParmVar 0x13afbc22db0 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x13afbc23268 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x13afbc23180 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x13afbc22e28 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x13afbc23280 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x13afbc231a0 <col:64> 'va_list':'char *' lvalue ParmVar 0x13afbc22ea0 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x13afbc234e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x13afbc232d0 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x13afbc23348 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x13afbc23738 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x13afbc235c0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc23638 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc23a20 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x13afbc23810 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x13afbc23888 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x13afbc23900 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x13afbc23d38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x13afbc23bc0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x13afbc23c38 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x13afbc23de8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc25228 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbc23fe8 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x13afbc24060 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x13afbc240d8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x13afbc252e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc25598 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x13afbc25420 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x13afbc25498 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x13afbc25880 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbc25670 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x13afbc256e8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc25760 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc25c50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x13afbc25a20 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x13afbc25a98 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x13afbc25d00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc27208 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbc25f00 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x13afbc25f78 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x13afbc25ff0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x13afbc272c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc27578 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x13afbc27400 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x13afbc27478 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x13afbc27860 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbc27650 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x13afbc276c8 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc27740 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc27cd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x13afbc27a00 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x13afbc27a78 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc27af0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x13afbc27d90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc202a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbc27f90 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x13afbc28008 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc28080 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x13afbc280f8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x13afbc20360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc206b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x13afbc204a0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x13afbc20518 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc20590 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x13afbc20a38 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbc20790 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x13afbc20808 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc20880 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc208f8 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc20cc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x13afbc20be0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x13afbc20d68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc281d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbc20f68 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x13afbc20fe0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x13afbc28280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc284a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x13afbc283c0 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x13afbc286e8 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x13afbc28570 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbc285e8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc289e8 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x13afbc287c8 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x13afbc28840 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x13afbc28d98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x13afbc28b80 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x13afbc28bf8 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x13afbc28e48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc29280 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x13afbc28f90 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x13afbc29008 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x13afbc29080 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x13afbc296e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x13afbc29420 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x13afbc29498 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x13afbc29510 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x13afbc29798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc29c48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x13afbc298e0 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x13afbc29958 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x13afbc299d0 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x13afbc29a48 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x13afbc29ea0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x13afbc29d30 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x13afbc2a0e0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x13afbc29f70 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x13afbc29fe8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x13afbc32a80 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x13afbc329a0 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x13afbc32d68 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x13afbc32b50 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x13afbc32bc8 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbc32fd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x13afbc32f00 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x13afbc33080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc33298 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x13afbc331c0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x13afbc334d8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x13afbc33368 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x13afbc333e0 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x13afbc33720 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x13afbc335b0 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x13afbc33628 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x13afbc338d0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x13afbc337f8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x13afbc2ea38 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x13afbc2e960 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x13afbc2ebe8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x13afbc2eb08 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x13afbc2ed98 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x13afbc2ecb8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x13afbc2f110 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x13afbc2ee70 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x13afbc2eee8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc2ef60 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc2efd8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x13afbc2f538 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x13afbc2f200 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x13afbc2f278 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc2f2f0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc2f368 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc2f3e0 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x13afbc2f848 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x13afbc2f628 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x13afbc2f6a8 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x13afbc2f728 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x13afbc2fa50 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x13afbc2f970 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x13afbc2fd40 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x13afbc2fb20 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x13afbc2fba0 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x13afbc2fc20 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x13afbc2ff00 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x13afbc2fe20 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x13afbc30278 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x13afbc2ffd8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x13afbc30050 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc300c8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc30140 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x13afbc304e0 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x13afbc30368 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x13afbc303e0 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x13afbc30820 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x13afbc306a0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x13afbc30720 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x13afbc308d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x13afbc34c38 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x13afbc34cd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x13afbc35018 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x13afbc34ea0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x13afbc34f20 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x13afbc350c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x13afbc35388 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x13afbc35428 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x13afbc356c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x13afbc355e8 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x13afbc35770 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x13afbc37a20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x13afbc37ac0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x13afbc37d68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x13afbc37c88 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x13afbc37e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x13afbc380e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x13afbc38008 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x13afbc38190 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x13afbc384d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x13afbc38358 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x13afbc383d0 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x13afbc38580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x13afbc38838 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x13afbc388d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-TypedefDecl 0x13afbc36b98 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:52:1, col:24> col:24 referenced _onexit_t 'int (*)(void) __attribute__((cdecl))'
| `-PointerType 0x13afbc36b30 'int (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x13afbc36ad0 'int (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x13afbc36a80 'int (void)' sugar
|     | `-FunctionProtoType 0x13afbbc7ee0 'int (void)' cdecl
|     |   `-BuiltinType 0x13af9f0f4a0 'int'
|     `-ParenType 0x13afbc36a80 'int (void)' sugar
|       `-FunctionProtoType 0x13afbbc7ee0 'int (void)' cdecl
|         `-BuiltinType 0x13af9f0f4a0 'int'
|-RecordDecl 0x13afbc36bf0 <line:75:9, line:78:1> line:75:16 struct _div_t definition
| |-MaxFieldAlignmentAttr 0x13afbc36cb0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x13afbc36d28 <line:76:9, col:13> col:13 quot 'int'
| `-FieldDecl 0x13afbc36d98 <line:77:9, col:13> col:13 rem 'int'
|-TypedefDecl 0x13afbc36e48 <line:75:1, line:78:3> col:3 referenced div_t 'struct _div_t':'struct _div_t'
| `-ElaboratedType 0x13afbc36df0 'struct _div_t' sugar
|   `-RecordType 0x13afbc36c90 'struct _div_t'
|     `-Record 0x13afbc36bf0 '_div_t'
|-RecordDecl 0x13afbc36eb8 <line:80:9, line:83:1> line:80:16 struct _ldiv_t definition
| |-MaxFieldAlignmentAttr 0x13afbc36f70 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x13afbc36fe8 <line:81:9, col:14> col:14 quot 'long'
| `-FieldDecl 0x13afbc37058 <line:82:9, col:14> col:14 rem 'long'
|-TypedefDecl 0x13afbc37108 <line:80:1, line:83:3> col:3 referenced ldiv_t 'struct _ldiv_t':'struct _ldiv_t'
| `-ElaboratedType 0x13afbc370b0 'struct _ldiv_t' sugar
|   `-RecordType 0x13afbc36f50 'struct _ldiv_t'
|     `-Record 0x13afbc36eb8 '_ldiv_t'
|-RecordDecl 0x13afbc37178 <line:85:9, line:88:1> line:85:16 struct _lldiv_t definition
| |-MaxFieldAlignmentAttr 0x13afbc37230 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x13afbc372a8 <line:86:9, col:19> col:19 quot 'long long'
| `-FieldDecl 0x13afbc37318 <line:87:9, col:19> col:19 rem 'long long'
|-TypedefDecl 0x13afbc373c8 <line:85:1, line:88:3> col:3 referenced lldiv_t 'struct _lldiv_t':'struct _lldiv_t'
| `-ElaboratedType 0x13afbc37370 'struct _lldiv_t' sugar
|   `-RecordType 0x13afbc37210 'struct _lldiv_t'
|     `-Record 0x13afbc37178 '_lldiv_t'
|-RecordDecl 0x13afbc37460 <line:103:9, line:105:1> line:103:9 struct definition
| |-MaxFieldAlignmentAttr 0x13afbc37520 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x13afbc37620 <line:104:5, col:24> col:19 ld 'unsigned char [10]'
|-TypedefDecl 0x13afbc376d8 <line:103:1, line:105:3> col:3 referenced _LDOUBLE 'struct _LDOUBLE':'_LDOUBLE'
| `-ElaboratedType 0x13afbc37680 'struct _LDOUBLE' sugar
|   `-RecordType 0x13afbc37500 '_LDOUBLE'
|     `-Record 0x13afbc37460 ''
|-RecordDecl 0x13afbc37748 <line:122:9, line:124:1> line:122:9 struct definition
| `-FieldDecl 0x13afbc37818 <line:123:9, col:16> col:16 x 'double'
|-TypedefDecl 0x13afbc378c8 <line:122:1, line:124:3> col:3 referenced _CRT_DOUBLE 'struct _CRT_DOUBLE':'_CRT_DOUBLE'
| `-ElaboratedType 0x13afbc37870 'struct _CRT_DOUBLE' sugar
|   `-RecordType 0x13afbc377e0 '_CRT_DOUBLE'
|     `-Record 0x13afbc37748 ''
|-RecordDecl 0x13afbc37938 <line:126:9, line:128:1> line:126:9 struct definition
| `-FieldDecl 0x13afbc38a38 <line:127:5, col:11> col:11 f 'float'
|-TypedefDecl 0x13afbc38ae8 <line:126:1, line:128:3> col:3 referenced _CRT_FLOAT 'struct _CRT_FLOAT':'_CRT_FLOAT'
| `-ElaboratedType 0x13afbc38a90 'struct _CRT_FLOAT' sugar
|   `-RecordType 0x13afbc38a00 '_CRT_FLOAT'
|     `-Record 0x13afbc37938 ''
|-RecordDecl 0x13afbc38b58 <line:134:9, line:139:1> line:134:9 struct definition
| `-FieldDecl 0x13afbc38c28 <line:138:9, col:21> col:21 x 'long double'
|-TypedefDecl 0x13afbc38cd8 <line:134:1, line:139:3> col:3 _LONGDOUBLE 'struct _LONGDOUBLE':'_LONGDOUBLE'
| `-ElaboratedType 0x13afbc38c80 'struct _LONGDOUBLE' sugar
|   `-RecordType 0x13afbc38bf0 '_LONGDOUBLE'
|     `-Record 0x13afbc38b58 ''
|-RecordDecl 0x13afbc38d70 <line:144:9, line:146:1> line:144:9 struct definition
| |-MaxFieldAlignmentAttr 0x13afbc38e30 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x13afbc38f30 <line:145:5, col:26> col:19 ld12 'unsigned char [12]'
|-TypedefDecl 0x13afbc38fe8 <line:144:1, line:146:3> col:3 _LDBL12 'struct _LDBL12':'_LDBL12'
| `-ElaboratedType 0x13afbc38f90 'struct _LDBL12' sugar
|   `-RecordType 0x13afbc38e10 '_LDBL12'
|     `-Record 0x13afbc38d70 ''
|-VarDecl 0x13afbc39070 <line:170:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x13afbc391c0 <line:175:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x13afbc393e8 <line:176:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x13afbc39288 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-TypedefDecl 0x13afbc39630 <line:215:1, col:24> col:24 referenced _purecall_handler 'void (*)(void) __attribute__((cdecl))'
| `-PointerType 0x13afbc395d0 'void (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x13afbc39570 'void (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x13afbc39520 'void (void)' sugar
|     | `-FunctionProtoType 0x13afbb48c10 'void (void)' cdecl
|     |   `-BuiltinType 0x13af9f0f400 'void'
|     `-ParenType 0x13afbc39520 'void (void)' sugar
|       `-FunctionProtoType 0x13afbb48c10 'void (void)' cdecl
|         `-BuiltinType 0x13af9f0f400 'void'
|-FunctionDecl 0x13afbc39830 <line:218:9, col:92> col:35 _set_purecall_handler '_purecall_handler (_purecall_handler) __attribute__((cdecl))':'_purecall_handler (_purecall_handler)'
| `-ParmVarDecl 0x13afbc396c0 <col:66, col:84> col:84 _Handler '_purecall_handler':'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x13afbc3aa78 <line:219:9, col:61> col:35 _get_purecall_handler '_purecall_handler (void) __attribute__((cdecl))':'_purecall_handler (void)'
|-TypedefDecl 0x13afbc3aec8 <line:235:1, col:24> col:24 referenced _invalid_parameter_handler 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
| `-PointerType 0x13afbc3ae40 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|   `-AttributedType 0x13afbc3ade0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))' sugar
|     |-ParenType 0x13afbc3ad90 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|     | `-FunctionProtoType 0x13afbb803c0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|     |   |-BuiltinType 0x13af9f0f400 'void'
|     |   |-PointerType 0x13afbb48fe0 'const wchar_t *'
|     |   | `-QualType 0x13afbb48f91 'const wchar_t' const
|     |   |   `-TypedefType 0x13afbb48f90 'wchar_t' sugar
|     |   |     |-Typedef 0x13afbb48880 'wchar_t'
|     |   |     `-BuiltinType 0x13af9f0f520 'unsigned short'
|     |   |-PointerType 0x13afbb48fe0 'const wchar_t *'
|     |   | `-QualType 0x13afbb48f91 'const wchar_t' const
|     |   |   `-TypedefType 0x13afbb48f90 'wchar_t' sugar
|     |   |     |-Typedef 0x13afbb48880 'wchar_t'
|     |   |     `-BuiltinType 0x13af9f0f520 'unsigned short'
|     |   |-PointerType 0x13afbb48fe0 'const wchar_t *'
|     |   | `-QualType 0x13afbb48f91 'const wchar_t' const
|     |   |   `-TypedefType 0x13afbb48f90 'wchar_t' sugar
|     |   |     |-Typedef 0x13afbb48880 'wchar_t'
|     |   |     `-BuiltinType 0x13af9f0f520 'unsigned short'
|     |   |-BuiltinType 0x13af9f0f540 'unsigned int'
|     |   `-TypedefType 0x13afbb491f0 'uintptr_t' sugar
|     |     |-Typedef 0x13af9f10220 'uintptr_t'
|     |     `-BuiltinType 0x13af9f0f580 'unsigned long long'
|     `-ParenType 0x13afbc3ad90 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|       `-FunctionProtoType 0x13afbb803c0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|         |-BuiltinType 0x13af9f0f400 'void'
|         |-PointerType 0x13afbb48fe0 'const wchar_t *'
|         | `-QualType 0x13afbb48f91 'const wchar_t' const
|         |   `-TypedefType 0x13afbb48f90 'wchar_t' sugar
|         |     |-Typedef 0x13afbb48880 'wchar_t'
|         |     `-BuiltinType 0x13af9f0f520 'unsigned short'
|         |-PointerType 0x13afbb48fe0 'const wchar_t *'
|         | `-QualType 0x13afbb48f91 'const wchar_t' const
|         |   `-TypedefType 0x13afbb48f90 'wchar_t' sugar
|         |     |-Typedef 0x13afbb48880 'wchar_t'
|         |     `-BuiltinType 0x13af9f0f520 'unsigned short'
|         |-PointerType 0x13afbb48fe0 'const wchar_t *'
|         | `-QualType 0x13afbb48f91 'const wchar_t' const
|         |   `-TypedefType 0x13afbb48f90 'wchar_t' sugar
|         |     |-Typedef 0x13afbb48880 'wchar_t'
|         |     `-BuiltinType 0x13af9f0f520 'unsigned short'
|         |-BuiltinType 0x13af9f0f540 'unsigned int'
|         `-TypedefType 0x13afbb491f0 'uintptr_t' sugar
|           |-Typedef 0x13af9f10220 'uintptr_t'
|           `-BuiltinType 0x13af9f0f580 'unsigned long long'
|-FunctionDecl 0x13afbc3b0c0 <line:238:9, col:119> col:44 _set_invalid_parameter_handler '_invalid_parameter_handler (_invalid_parameter_handler) __attribute__((cdecl))':'_invalid_parameter_handler (_invalid_parameter_handler)'
| `-ParmVarDecl 0x13afbc3af50 <col:84, col:111> col:111 _Handler '_invalid_parameter_handler':'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|-FunctionDecl 0x13afbc3b2d8 <line:239:9, col:79> col:44 _get_invalid_parameter_handler '_invalid_parameter_handler (void) __attribute__((cdecl))':'_invalid_parameter_handler (void)'
|-FunctionDecl 0x13afbc3b4f0 <line:252:9, col:48> col:33 __doserrno 'unsigned long *(void) __attribute__((cdecl))':'unsigned long *(void)'
|-FunctionDecl 0x13afbc3b730 <line:255:1, col:56> col:17 _set_doserrno 'errno_t (unsigned long) __attribute__((cdecl))':'errno_t (unsigned long)'
| `-ParmVarDecl 0x13afbc3b5c0 <col:36, col:50> col:50 _Value 'unsigned long'
|-FunctionDecl 0x13afbc3b980 <line:256:1, col:59> col:17 _get_doserrno 'errno_t (unsigned long *) __attribute__((cdecl))':'errno_t (unsigned long *)'
| `-ParmVarDecl 0x13afbc3b808 <col:37, col:53> col:53 _Value 'unsigned long *'
|-FunctionDecl 0x13afbc3fc80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:259:77> col:59 __sys_errlist 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x13afbc3fd20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc3ffe0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:262:72> col:57 __sys_nerr 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x13afbc40080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x13afbc401c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:288:9, col:20> col:20 __argc 'int' extern
|-VarDecl 0x13afbc40260 <line:289:9, col:24> col:24 __argv 'char **' extern
|-VarDecl 0x13afbc40350 <line:290:9, col:27> col:27 __wargv 'wchar_t **' extern
|-VarDecl 0x13afbc403e8 <line:306:9, col:24> col:24 _environ 'char **' extern
|-VarDecl 0x13afbc40480 <line:307:9, col:27> col:27 _wenviron 'wchar_t **' extern
|-VarDecl 0x13afbc405d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:311:68> col:68 _pgmptr 'char *' extern
| `-DeprecatedAttr 0x13afbc40640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_pgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x13afbc40840 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:312:72> col:72 _wpgmptr 'wchar_t *' extern
| `-DeprecatedAttr 0x13afbc408a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_wpgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc3cb30 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:339:1, col:61> col:17 _get_pgmptr 'errno_t (char **) __attribute__((cdecl))':'errno_t (char **)'
| `-ParmVarDecl 0x13afbc409f0 <col:47, col:55> col:55 _Value 'char **'
|-FunctionDecl 0x13afbc3cd80 <line:340:1, col:65> col:17 _get_wpgmptr 'errno_t (wchar_t **) __attribute__((cdecl))':'errno_t (wchar_t **)'
| `-ParmVarDecl 0x13afbc3cc08 <col:48, col:59> col:59 _Value 'wchar_t **'
|-VarDecl 0x13afbc3cf18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:346:64> col:64 _fmode 'int' extern
| `-DeprecatedAttr 0x13afbc3cf80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_fmode instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc3d1a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:353:9, col:50> col:25 _set_fmode 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x13afbc3d0c8 <col:41, col:45> col:45 _Mode 'int'
|-FunctionDecl 0x13afbc3d350 <line:354:9, col:54> col:25 _get_fmode 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x13afbc3d278 <col:42, col:48> col:48 _PMode 'int *'
|-FunctionDecl 0x13afbc3d5a0 <line:376:43> col:43 implicit exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x13afbc3d640 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x13afbc3d6b0 prev 0x13afbc3d5a0 <col:9, col:62> col:43 exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x13afbc3d428 <col:53, col:57> col:57 _Code 'int'
|-FunctionDecl 0x13afbc3d860 <line:378:43> col:43 implicit _exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x13afbc3d900 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x13afbc3d970 prev 0x13afbc3d860 <col:9, col:63> col:43 _exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x13afbc3d788 <col:54, col:58> col:58 _Code 'int'
|-FunctionDecl 0x13afbc40b38 <line:379:43> col:43 implicit used abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x13afbc40bd8 prev 0x13afbc40b38 <col:9, col:53> col:43 used abort 'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x13afbc40e90 <line:382:9, col:99> col:30 _set_abort_behavior 'unsigned int (unsigned int, unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int, unsigned int)'
| |-ParmVarDecl 0x13afbc40ca8 <col:55, col:68> col:68 _Flags 'unsigned int'
| `-ParmVarDecl 0x13afbc40d28 <col:81, col:94> col:94 _Mask 'unsigned int'
|-FunctionDecl 0x13afbc41050 <line:384:19> col:19 implicit abs 'int (int)' extern
| |-ParmVarDecl 0x13afbc410f0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x13afbc41160 <col:19> Implicit
| `-ConstAttr 0x13afbc411b8 <col:19> Implicit
|-FunctionDecl 0x13afbc411e0 prev 0x13afbc41050 <col:1, col:34> col:19 abs 'int (int)'
| |-ParmVarDecl 0x13afbc40f70 <col:28, col:32> col:32 _X 'int'
| |-NoThrowAttr 0x13afbc412d0 <col:19> Inherited Implicit
| `-ConstAttr 0x13afbc412f8 <col:19> Inherited Implicit
|-FunctionDecl 0x13afbc41488 <line:385:19> col:19 implicit labs 'long (long)' extern
| |-ParmVarDecl 0x13afbc41528 <<invalid sloc>> <invalid sloc> 'long'
| |-NoThrowAttr 0x13afbc41598 <col:19> Implicit
| `-ConstAttr 0x13afbc415f0 <col:19> Implicit
|-FunctionDecl 0x13afbc41618 prev 0x13afbc41488 <col:1, col:36> col:19 labs 'long (long)'
| |-ParmVarDecl 0x13afbc41338 <col:29, col:34> col:34 _X 'long'
| |-NoThrowAttr 0x13afbc41708 <col:19> Inherited Implicit
| `-ConstAttr 0x13afbc41730 <col:19> Inherited Implicit
|-FunctionDecl 0x13afbc418b8 <line:386:19> col:19 implicit llabs 'long long (long long)' extern
| |-ParmVarDecl 0x13afbc41958 <<invalid sloc>> <invalid sloc> 'long long'
| |-NoThrowAttr 0x13afbc419c8 <col:19> Implicit
| `-ConstAttr 0x13afbc41a20 <col:19> Implicit
|-FunctionDecl 0x13afbc3da50 prev 0x13afbc418b8 <col:1, col:42> col:19 llabs 'long long (long long)'
| |-ParmVarDecl 0x13afbc41770 <col:30, col:40> col:40 _X 'long long'
| |-NoThrowAttr 0x13afbc3db40 <col:19> Inherited Implicit
| `-ConstAttr 0x13afbc3db68 <col:19> Inherited Implicit
|-FunctionDecl 0x13afbc3dc70 <line:388:9, col:42> col:28 _abs64 'long long (long long) __attribute__((cdecl))':'long long (long long)'
| `-ParmVarDecl 0x13afbc3dba8 <col:35> col:42 'long long'
|-FunctionDecl 0x13afbc3df68 <line:426:9, col:53> col:24 atexit 'int (void (*)(void) __attribute__((cdecl))) __attribute__((cdecl))':'int (void (*)(void) __attribute__((cdecl)))'
| `-ParmVarDecl 0x13afbc3de08 <col:31, col:45> col:46 'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x13afbc3e188 <line:428:24, col:71> col:40 atof 'double (const char *) __attribute__((cdecl))':'double (const char *)'
| `-ParmVarDecl 0x13afbc3e040 <col:52, col:64> col:64 _String 'const char *'
|-FunctionDecl 0x13afbc3e480 <line:429:24, col:102> col:40 _atof_l 'double (const char *, _locale_t) __attribute__((cdecl))':'double (const char *, _locale_t)'
| |-ParmVarDecl 0x13afbc3e260 <col:55, col:67> col:67 _String 'const char *'
| `-ParmVarDecl 0x13afbc3e2d8 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc3e640 <line:430:43, col:86> col:58 used atoi 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x13afbc3e560 <col:70, col:82> col:82 _Str 'const char *'
|-FunctionDecl 0x13afbc3e940 <line:431:24, col:98> col:39 _atoi_l 'int (const char *, _locale_t) __attribute__((cdecl))':'int (const char *, _locale_t)'
| |-ParmVarDecl 0x13afbc3e718 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x13afbc3e790 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc39b58 <line:432:24, col:67> col:39 used atol 'long (const char *) __attribute__((cdecl))':'long (const char *)'
| `-ParmVarDecl 0x13afbc39a10 <col:51, col:63> col:63 _Str 'const char *'
|-FunctionDecl 0x13afbc39e50 <line:433:24, col:98> col:39 _atol_l 'long (const char *, _locale_t) __attribute__((cdecl))':'long (const char *, _locale_t)'
| |-ParmVarDecl 0x13afbc39c30 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x13afbc39ca8 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc3a078 <line:434:24, col:71> col:42 atoll 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x13afbc39f30 <col:55, col:67> col:67 _Str 'const char *'
|-FunctionDecl 0x13afbc3a370 <line:435:24, col:102> col:42 _atoll_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x13afbc3a150 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x13afbc3a1c8 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc47cf0 <line:439:24, line:441:97> line:439:39 bsearch_s 'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x13afbc3a450 <col:54, col:67> col:67 _Key 'const void *'
| |-ParmVarDecl 0x13afbc3a4d0 <col:124, col:137> col:137 _Base 'const void *'
| |-ParmVarDecl 0x13afbc3a548 <line:440:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc3a5c0 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc3a920 <line:441:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x13afbc3a9a0 <col:82, col:89> col:89 _Context 'void *'
|-FunctionDecl 0x13afbc48478 <line:443:24, line:445:72> line:443:39 bsearch 'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x13afbc47df0 <col:52, col:65> col:65 _Key 'const void *'
| |-ParmVarDecl 0x13afbc47e70 <col:122, col:135> col:135 _Base 'const void *'
| |-ParmVarDecl 0x13afbc47ee8 <line:444:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc47f60 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc48238 <line:445:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x13afbc44b70 <line:448:9, line:450:96> line:448:22 qsort_s 'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x13afbc48570 <col:85, col:92> col:92 _Base 'void *'
| |-ParmVarDecl 0x13afbc485e8 <line:449:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc48660 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc488c8 <line:450:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x13afbc48948 <col:82, col:88> col:88 _Context 'void *'
|-FunctionDecl 0x13afbc45138 <line:452:9, line:454:72> line:452:22 qsort 'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x13afbc44c68 <col:84, col:91> col:91 _Base 'void *'
| |-ParmVarDecl 0x13afbc44ce0 <line:453:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc44d58 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc44f38 <line:454:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x13afbc45338 <line:456:47> col:47 implicit _byteswap_ushort 'unsigned short (unsigned short)' extern
| |-ParmVarDecl 0x13afbc453d8 <<invalid sloc>> <invalid sloc> 'unsigned short'
| |-NoThrowAttr 0x13afbc45448 <col:47> Implicit
| `-ConstAttr 0x13afbc454a0 <col:47> Implicit
|-FunctionDecl 0x13afbc454c8 prev 0x13afbc45338 <col:24, col:90> col:47 _byteswap_ushort 'unsigned short (unsigned short)'
| |-ParmVarDecl 0x13afbc45228 <col:69, col:84> col:84 _Short 'unsigned short'
| |-NoThrowAttr 0x13afbc455b8 <col:47> Inherited Implicit
| `-ConstAttr 0x13afbc455e0 <col:47> Inherited Implicit
|-FunctionDecl 0x13afbc45768 <line:457:47> col:47 implicit _byteswap_ulong 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x13afbc45808 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x13afbc45878 <col:47> Implicit
| `-ConstAttr 0x13afbc458d0 <col:47> Implicit
|-FunctionDecl 0x13afbc458f8 prev 0x13afbc45768 <col:24, col:88> col:47 _byteswap_ulong 'unsigned long (unsigned long)'
| |-ParmVarDecl 0x13afbc45620 <col:69, col:83> col:83 _Long 'unsigned long'
| |-NoThrowAttr 0x13afbc459e8 <col:47> Inherited Implicit
| `-ConstAttr 0x13afbc45a10 <col:47> Inherited Implicit
|-FunctionDecl 0x13afbc48be8 <line:458:49> col:49 implicit _byteswap_uint64 'unsigned long long (unsigned long long)' extern
| |-ParmVarDecl 0x13afbc48c88 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-NoThrowAttr 0x13afbc48cf8 <col:49> Implicit
| `-ConstAttr 0x13afbc48d50 <col:49> Implicit
|-FunctionDecl 0x13afbc48d78 prev 0x13afbc48be8 <col:24, col:94> col:49 _byteswap_uint64 'unsigned long long (unsigned long long)'
| |-ParmVarDecl 0x13afbc45a50 <col:71, col:88> col:88 _Int64 'unsigned long long'
| |-NoThrowAttr 0x13afbc48e68 <col:49> Inherited Implicit
| `-ConstAttr 0x13afbc48e90 <col:49> Inherited Implicit
|-FunctionDecl 0x13afbc49118 <line:459:24, col:85> col:39 div 'div_t (int, int) __attribute__((cdecl))':'div_t (int, int)'
| |-ParmVarDecl 0x13afbc48ef8 <col:48, col:52> col:52 _Numerator 'int'
| `-ParmVarDecl 0x13afbc48f78 <col:69, col:73> col:73 _Denominator 'int'
|-FunctionDecl 0x13afbc49408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:462:109> col:74 used getenv 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x13afbc492b8 <col:88, col:101> col:101 _VarName 'const char *'
| `-DeprecatedAttr 0x13afbc494b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _dupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc499c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:464:28, col:177> col:44 getenv_s 'errno_t (size_t *, char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (size_t *, char *, rsize_t, const char *)'
| |-ParmVarDecl 0x13afbc49648 <col:59, col:68> col:68 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x13afbc496c8 <col:110, col:117> col:117 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbc49740 <col:131, col:139> col:139 _DstSize 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc497c0 <col:156, col:169> col:169 _VarName 'const char *'
|-FunctionDecl 0x13afbc49de0 <line:472:28, col:212> col:44 _dupenv_s 'errno_t (char **, size_t *, const char *) __attribute__((cdecl))':'errno_t (char **, size_t *, const char *)'
| |-ParmVarDecl 0x13afbc49b10 <col:127, col:134> col:134 _PBuffer 'char **'
| |-ParmVarDecl 0x13afbc49b88 <col:154, col:163> col:163 _PBufferSizeInBytes 'size_t *'
| `-ParmVarDecl 0x13afbc49c08 <col:191, col:204> col:204 _VarName 'const char *'
|-FunctionDecl 0x13afbc4a248 <line:479:28, col:141> col:44 _itoa_s 'errno_t (int, char *, size_t, int) __attribute__((cdecl))':'errno_t (int, char *, size_t, int)'
| |-ParmVarDecl 0x13afbc49ec8 <col:57, col:61> col:61 _Value 'int'
| |-ParmVarDecl 0x13afbc49f48 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbc49fc0 <col:112, col:119> col:119 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc4a040 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x13afbc4a698 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:481:79 _itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x13afbc4a3f8 <col:91, col:96> col:96 _Value 'int'
| |-ParmVarDecl 0x13afbc4a478 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x13afbc4a4f8 <col:146, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x13afbc4a750 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc43be8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:482:28, col:145> col:44 _i64toa_s 'errno_t (long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long long, char *, size_t, int)'
| |-ParmVarDecl 0x13afbc4a898 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x13afbc4a918 <col:95, col:102> col:102 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbc4a990 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc4aa10 <col:135, col:139> col:139 _Radix 'int'
|-FunctionDecl 0x13afbc44038 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:483:140> col:59 _i64toa 'char *(long long, char *, int) __attribute__((cdecl))':'char *(long long, char *, int)'
| |-ParmVarDecl 0x13afbc43d98 <col:72, col:80> col:80 _Val 'long long'
| |-ParmVarDecl 0x13afbc43e18 <col:109, col:116> col:116 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbc43e98 <col:130, col:134> col:134 _Radix 'int'
| `-DeprecatedAttr 0x13afbc440f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc445b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:484:28, col:155> col:44 _ui64toa_s 'errno_t (unsigned long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, char *, size_t, int)'
| |-ParmVarDecl 0x13afbc44238 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x13afbc442b8 <col:105, col:112> col:112 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbc44330 <col:126, col:133> col:133 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc443b0 <col:145, col:149> col:149 _Radix 'int'
|-FunctionDecl 0x13afbc44a08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:485:151> col:60 _ui64toa 'char *(unsigned long long, char *, int) __attribute__((cdecl))':'char *(unsigned long long, char *, int)'
| |-ParmVarDecl 0x13afbc44768 <col:74, col:91> col:91 _Val 'unsigned long long'
| |-ParmVarDecl 0x13afbc447e8 <col:120, col:127> col:127 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbc44868 <col:141, col:145> col:145 _Radix 'int'
| `-DeprecatedAttr 0x13afbc45ae8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc45d10 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:486:24, col:75> col:40 _atoi64 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x13afbc45c30 <col:55, col:68> col:68 _String 'const char *'
|-FunctionDecl 0x13afbc45f60 <line:487:24, col:105> col:40 _atoi64_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x13afbc45de8 <col:57, col:70> col:70 _String 'const char *'
| `-ParmVarDecl 0x13afbc45e60 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc462d8 <line:488:24, col:136> col:40 _strtoi64 'long long (const char *, char **, int) __attribute__((cdecl))':'long long (const char *, char **, int)'
| |-ParmVarDecl 0x13afbc46040 <col:57, col:70> col:70 _String 'const char *'
| |-ParmVarDecl 0x13afbc460c0 <col:104, col:112> col:112 _EndPtr 'char **'
| `-ParmVarDecl 0x13afbc46140 <col:126, col:130> col:130 _Radix 'int'
|-FunctionDecl 0x13afbc46740 <line:489:24, col:166> col:40 _strtoi64_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x13afbc463c0 <col:59, col:72> col:72 _String 'const char *'
| |-ParmVarDecl 0x13afbc46440 <col:106, col:114> col:114 _EndPtr 'char **'
| |-ParmVarDecl 0x13afbc464c0 <col:128, col:132> col:132 _Radix 'int'
| `-ParmVarDecl 0x13afbc46538 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc42aa0 <line:490:24, col:146> col:49 _strtoui64 'unsigned long long (const char *, char **, int) __attribute__((cdecl))':'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x13afbc46830 <col:67, col:80> col:80 _String 'const char *'
| |-ParmVarDecl 0x13afbc468b0 <col:114, col:122> col:122 _EndPtr 'char **'
| `-ParmVarDecl 0x13afbc46930 <col:136, col:140> col:140 _Radix 'int'
|-FunctionDecl 0x13afbc42f10 <line:491:24, col:177> col:49 _strtoui64_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x13afbc42b88 <col:69, col:82> col:82 _String 'const char *'
| |-ParmVarDecl 0x13afbc42c08 <col:116, col:124> col:124 _EndPtr 'char **'
| |-ParmVarDecl 0x13afbc42c88 <col:138, col:143> col:143 _Radix 'int'
| `-ParmVarDecl 0x13afbc42d00 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc43248 <line:492:24, col:88> col:39 ldiv 'ldiv_t (long, long) __attribute__((cdecl))':'ldiv_t (long, long)'
| |-ParmVarDecl 0x13afbc43028 <col:49, col:54> col:54 _Numerator 'long'
| `-ParmVarDecl 0x13afbc430a8 <col:71, col:76> col:76 _Denominator 'long'
|-FunctionDecl 0x13afbc43568 <line:493:24, col:100> col:40 lldiv 'lldiv_t (long long, long long) __attribute__((cdecl))':'lldiv_t (long long, long long)'
| |-ParmVarDecl 0x13afbc43348 <col:51, col:61> col:61 _Numerator 'long long'
| `-ParmVarDecl 0x13afbc433c8 <col:78, col:88> col:88 _Denominator 'long long'
|-FunctionDecl 0x13afbc439c8 <line:515:28, col:140> col:44 _ltoa_s 'errno_t (long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long, char *, size_t, int)'
| |-ParmVarDecl 0x13afbc43648 <col:57, col:62> col:62 _Val 'long'
| |-ParmVarDecl 0x13afbc436c8 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbc43740 <col:111, col:118> col:118 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc437c0 <col:130, col:134> col:134 _Radix 'int'
|-FunctionDecl 0x13afbc4ae98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:517:79 _ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x13afbc4abf8 <col:91, col:97> col:97 _Value 'long'
| |-ParmVarDecl 0x13afbc4ac78 <col:129, col:135> col:135 _Dest 'char *'
| |-ParmVarDecl 0x13afbc4acf8 <col:147, col:152> col:152 _Radix 'int'
| `-DeprecatedAttr 0x13afbc4af50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc4b2c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:518:24, col:128> col:39 mblen 'int (const char *, size_t) __attribute__((cdecl))':'int (const char *, size_t)'
| |-ParmVarDecl 0x13afbc4b098 <col:89, col:102> col:102 _Ch 'const char *'
| `-ParmVarDecl 0x13afbc4b110 <col:112, col:119> col:119 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbc4b668 <line:519:24, col:159> col:39 _mblen_l 'int (const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x13afbc4b3a0 <col:92, col:105> col:105 _Ch 'const char *'
| |-ParmVarDecl 0x13afbc4b418 <col:115, col:122> col:122 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc4b490 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc4b8c0 <line:520:24, col:73> col:39 _mbstrlen 'size_t (const char *) __attribute__((cdecl))':'size_t (const char *)'
| `-ParmVarDecl 0x13afbc4b750 <col:56, col:69> col:69 _Str 'const char *'
|-FunctionDecl 0x13afbc4cc08 <line:521:24, col:102> col:39 _mbstrlen_l 'size_t (const char *, _locale_t) __attribute__((cdecl))':'size_t (const char *, _locale_t)'
| |-ParmVarDecl 0x13afbc4b998 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x13afbc4ba10 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc4cf08 <line:522:24, col:96> col:39 _mbstrnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x13afbc4cce8 <col:57, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x13afbc4cd60 <col:80, col:87> col:87 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbc4d2b0 <line:523:24, col:126> col:39 _mbstrnlen_l 'size_t (const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x13afbc4cfe8 <col:59, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x13afbc4d060 <col:82, col:89> col:89 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc4d0d8 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc4d668 <line:524:9, col:170> col:24 mbtowc 'int (wchar_t *, const char *, size_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x13afbc4d390 <col:54, col:64> col:64 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x13afbc4d410 <col:122, col:135> col:135 _SrcCh 'const char *'
| `-ParmVarDecl 0x13afbc4d488 <col:148, col:155> col:155 _SrcSizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbc4db50 <line:525:9, col:201> col:24 _mbtowc_l 'int (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x13afbc4d748 <col:57, col:67> col:67 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x13afbc4d7c8 <col:125, col:138> col:138 _SrcCh 'const char *'
| |-ParmVarDecl 0x13afbc4d840 <col:151, col:158> col:158 _SrcSizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc4d8b8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc4e050 <line:526:28, col:271> col:44 mbstowcs_s 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t)'
| |-ParmVarDecl 0x13afbc4dc38 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x13afbc4dcb0 <col:155, col:165> col:165 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x13afbc4dd28 <col:179, col:186> col:186 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc4dda8 <col:227, col:240> col:240 _SrcBuf 'const char *'
| `-ParmVarDecl 0x13afbc4de20 <col:254, col:261> col:261 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbc4e4d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:528:56 mbstowcs 'size_t (wchar_t *, const char *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x13afbc4e200 <col:97, col:106> col:106 _Dest 'wchar_t *'
| |-ParmVarDecl 0x13afbc4e280 <col:120, col:134> col:134 _Source 'const char *'
| |-ParmVarDecl 0x13afbc4e2f8 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x13afbc4e588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using mbstowcs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc46b38 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:530:28, col:301> col:44 _mbstowcs_s_l 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x13afbc4e6c8 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x13afbc4e740 <col:158, col:168> col:168 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x13afbc4e7b8 <col:182, col:189> col:189 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc4e838 <col:230, col:243> col:243 _SrcBuf 'const char *'
| |-ParmVarDecl 0x13afbc4e8b0 <col:257, col:264> col:264 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc4e928 <col:284, col:294> col:294 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc47068 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:532:59 _mbstowcs_l 'size_t (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x13afbc46cf0 <col:149, col:158> col:158 _Dest 'wchar_t *'
| |-ParmVarDecl 0x13afbc46d70 <col:172, col:186> col:186 _Source 'const char *'
| |-ParmVarDecl 0x13afbc46de8 <col:200, col:208> col:208 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc46e60 <col:228, col:239> col:239 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x13afbc47128 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _mbstowcs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc47328 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:534:24, col:48> col:39 rand 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x13afbc474d8 <line:539:28, col:73> col:43 _set_error_mode 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x13afbc473f8 <col:64, col:68> col:68 _Mode 'int'
|-FunctionDecl 0x13afbc476f0 <line:541:9, col:53> col:24 srand 'void (unsigned int) __attribute__((cdecl))':'void (unsigned int)'
| `-ParmVarDecl 0x13afbc475b0 <col:35, col:48> col:48 _Seed 'unsigned int'
|-FunctionDecl 0x13afbc479b0 <line:542:39> col:39 implicit strtod 'double (const char *, char **)' extern
| |-ParmVarDecl 0x13afbc47a50 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x13afbc50b80 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x13afbc50bf8 prev 0x13afbc479b0 <col:24, col:112> col:39 strtod 'double (const char *, char **)'
| |-ParmVarDecl 0x13afbc477c8 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x13afbc47848 <col:97, col:105> col:105 _EndPtr 'char **'
|-FunctionDecl 0x13afbc50fa8 <line:543:24, col:143> col:39 _strtod_l 'double (const char *, char **, _locale_t) __attribute__((cdecl))':'double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x13afbc50cd8 <col:56, col:69> col:69 _Str 'const char *'
| |-ParmVarDecl 0x13afbc50d58 <col:100, col:108> col:108 _EndPtr 'char **'
| `-ParmVarDecl 0x13afbc50dd0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc51328 <line:544:39> col:39 implicit strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x13afbc513c8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13afbc51430 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x13afbc51498 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x13afbc51518 prev 0x13afbc51328 <col:24, col:130> col:39 strtol 'long (const char *, char **, int)'
| |-ParmVarDecl 0x13afbc51090 <col:53, col:66> col:66 _Str 'const char *'
| |-ParmVarDecl 0x13afbc51110 <col:97, col:105> col:105 _EndPtr 'char **'
| `-ParmVarDecl 0x13afbc51190 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x13afbc51980 <line:545:24, col:158> col:39 _strtol_l 'long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x13afbc51600 <col:56, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x13afbc51680 <col:99, col:106> col:106 _EndPtr 'char **'
| |-ParmVarDecl 0x13afbc51700 <col:120, col:124> col:124 _Radix 'int'
| `-ParmVarDecl 0x13afbc51778 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc52cc0 <line:546:43> col:43 implicit strtoll 'long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x13afbc52d60 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13afbc52dc8 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x13afbc52e30 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x13afbc52eb0 prev 0x13afbc52cc0 <col:24, col:135> col:43 strtoll 'long long (const char *, char **, int)'
| |-ParmVarDecl 0x13afbc51a70 <col:58, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x13afbc51af0 <col:102, col:110> col:110 _EndPtr 'char **'
| `-ParmVarDecl 0x13afbc52ba0 <col:124, col:128> col:128 _Radix 'int'
|-FunctionDecl 0x13afbc53250 <line:547:24, col:166> col:43 _strtoll_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x13afbc52f98 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x13afbc53018 <col:105, col:113> col:113 _EndPtr 'char **'
| |-ParmVarDecl 0x13afbc53098 <col:127, col:131> col:131 _Radix 'int'
| `-ParmVarDecl 0x13afbc53110 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc535d8 <line:548:46> col:46 implicit strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0x13afbc53678 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13afbc536e0 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x13afbc53748 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x13afbc537c8 prev 0x13afbc535d8 <col:24, col:137> col:46 strtoul 'unsigned long (const char *, char **, int)'
| |-ParmVarDecl 0x13afbc53340 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x13afbc533c0 <col:105, col:113> col:113 _EndPtr 'char **'
| `-ParmVarDecl 0x13afbc53440 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x13afbc51c40 <line:549:24, col:160> col:46 _strtoul_l 'unsigned long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x13afbc538b0 <col:57, col:70> col:70 _Str 'const char *'
| |-ParmVarDecl 0x13afbc53930 <col:101, col:108> col:108 _EndPtr 'char **'
| |-ParmVarDecl 0x13afbc539b0 <col:122, col:126> col:126 _Radix 'int'
| `-ParmVarDecl 0x13afbc53a28 <col:143, col:153> col:153 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc51f50 <line:550:51> col:51 implicit strtoull 'unsigned long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x13afbc51ff0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13afbc52058 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x13afbc520c0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x13afbc52140 prev 0x13afbc51f50 <col:24, col:143> col:51 strtoull 'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x13afbc51d30 <col:67, col:80> col:80 _Str 'const char *'
| |-ParmVarDecl 0x13afbc51db0 <col:111, col:119> col:119 _EndPtr 'char **'
| `-ParmVarDecl 0x13afbc51e30 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x13afbc524e0 <line:551:24, col:174> col:51 _strtoull_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x13afbc52228 <col:70, col:83> col:83 _Str 'const char *'
| |-ParmVarDecl 0x13afbc522a8 <col:114, col:122> col:122 _EndPtr 'char **'
| |-ParmVarDecl 0x13afbc52328 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x13afbc523a0 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc527c0 <line:552:44> col:44 implicit strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0x13afbc52860 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x13afbc528c8 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x13afbc52940 prev 0x13afbc527c0 <col:24, col:118> col:44 strtold 'long double (const char *, char **)'
| |-ParmVarDecl 0x13afbc525d0 <col:59, col:72> col:72 _Str 'const char *'
| `-ParmVarDecl 0x13afbc52650 <col:103, col:111> col:111 _EndPtr 'char **'
|-FunctionDecl 0x13afbc4bca8 <line:553:24, col:149> col:44 _strtold_l 'long double (const char *, char **, _locale_t) __attribute__((cdecl))':'long double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x13afbc52a20 <col:62, col:75> col:75 _Str 'const char *'
| |-ParmVarDecl 0x13afbc52aa0 <col:106, col:114> col:114 _EndPtr 'char **'
| `-ParmVarDecl 0x13afbc52b18 <col:132, col:142> col:142 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc4bf80 <line:554:38> col:38 implicit strtof 'float (const char *, char **)' extern
| |-ParmVarDecl 0x13afbc4c020 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x13afbc4c088 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x13afbc4c100 prev 0x13afbc4bf80 <col:24, col:111> col:38 strtof 'float (const char *, char **)'
| |-ParmVarDecl 0x13afbc4bd90 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x13afbc4be10 <col:96, col:104> col:104 _EndPtr 'char **'
|-FunctionDecl 0x13afbc4c4b8 <line:555:24, col:142> col:38 _strtof_l 'float (const char *, char **, _locale_t) __attribute__((cdecl))':'float (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x13afbc4c1e0 <col:55, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x13afbc4c260 <col:99, col:107> col:107 _EndPtr 'char **'
| `-ParmVarDecl 0x13afbc4c2d8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc4c680 <line:560:9, col:60> col:21 system 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x13afbc4c5a0 <col:39, col:52> col:52 _Command 'const char *'
|-FunctionDecl 0x13afbc53bb0 <line:564:28, col:150> col:44 _ultoa_s 'errno_t (unsigned long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, char *, size_t, int)'
| |-ParmVarDecl 0x13afbc4c758 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x13afbc4c7d8 <col:100, col:107> col:107 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbc4c850 <col:121, col:128> col:128 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc4c8d0 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x13afbc53ff8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:566:79 _ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x13afbc53d60 <col:92, col:107> col:107 _Value 'unsigned long'
| |-ParmVarDecl 0x13afbc53de0 <col:139, col:145> col:145 _Dest 'char *'
| |-ParmVarDecl 0x13afbc53e60 <col:157, col:162> col:162 _Radix 'int'
| `-DeprecatedAttr 0x13afbc540b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc544e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:567:127> col:58 wctomb 'int (char *, wchar_t) __attribute__((cdecl))':'int (char *, wchar_t)'
| |-ParmVarDecl 0x13afbc542b8 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x13afbc54330 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x13afbc54590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wctomb_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc54a68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:568:155> col:61 _wctomb_l 'int (char *, wchar_t, _locale_t) __attribute__((cdecl))':'int (char *, wchar_t, _locale_t)'
| |-ParmVarDecl 0x13afbc54798 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x13afbc54810 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x13afbc54888 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x13afbc54b20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctomb_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc55038 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:570:28, col:200> col:44 wctomb_s 'errno_t (int *, char *, rsize_t, wchar_t) __attribute__((cdecl))':'errno_t (int *, char *, rsize_t, wchar_t)'
| |-ParmVarDecl 0x13afbc54cc0 <col:63, col:69> col:69 _SizeConverted 'int *'
| |-ParmVarDecl 0x13afbc54d40 <col:142, col:149> col:149 _MbCh 'char *'
| |-ParmVarDecl 0x13afbc54db8 <col:161, col:169> col:169 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc54e30 <col:188, col:196> col:196 _WCh 'wchar_t':'unsigned short'
|-FunctionDecl 0x13afbc55540 <line:572:28, col:206> col:44 _wctomb_s_l 'errno_t (int *, char *, size_t, wchar_t, _locale_t) __attribute__((cdecl))':'errno_t (int *, char *, size_t, wchar_t, _locale_t)'
| |-ParmVarDecl 0x13afbc55128 <col:66, col:72> col:72 _SizeConverted 'int *'
| |-ParmVarDecl 0x13afbc551a8 <col:121, col:128> col:128 _MbCh 'char *'
| |-ParmVarDecl 0x13afbc55220 <col:140, col:147> col:147 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc55298 <col:166, col:174> col:174 _WCh 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x13afbc55310 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc55a50 <line:573:28, col:263> col:44 wcstombs_s 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t)'
| |-ParmVarDecl 0x13afbc55630 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x13afbc556b0 <col:164, col:171> col:171 _Dst 'char *'
| |-ParmVarDecl 0x13afbc55728 <col:182, col:189> col:189 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc557a0 <col:213, col:229> col:229 _Src 'const wchar_t *'
| `-ParmVarDecl 0x13afbc55818 <col:240, col:247> col:247 _MaxCountInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbc55f70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:575:56 wcstombs 'size_t (char *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x13afbc55ca8 <col:97, col:103> col:103 _Dest 'char *'
| |-ParmVarDecl 0x13afbc55d20 <col:117, col:134> col:134 _Source 'const wchar_t *'
| |-ParmVarDecl 0x13afbc55d98 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x13afbc56028 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstombs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc56628 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:576:28, col:294> col:44 _wcstombs_s_l 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x13afbc56168 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x13afbc561e8 <col:167, col:174> col:174 _Dst 'char *'
| |-ParmVarDecl 0x13afbc56260 <col:185, col:192> col:192 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc562d8 <col:216, col:232> col:232 _Src 'const wchar_t *'
| |-ParmVarDecl 0x13afbc56350 <col:243, col:250> col:250 _MaxCountInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc563c8 <col:277, col:287> col:287 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc4eb60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:578:59 _wcstombs_l 'size_t (char *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x13afbc567e8 <col:146, col:152> col:152 _Dest 'char *'
| |-ParmVarDecl 0x13afbc56860 <col:166, col:183> col:183 _Source 'const wchar_t *'
| |-ParmVarDecl 0x13afbc568d8 <col:197, col:205> col:205 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc56950 <col:225, col:236> col:236 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x13afbc4ec20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcstombs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc4ef80 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:142> col:142 implicit calloc 'void *(unsigned long long, unsigned long long)' extern
| |-ParmVarDecl 0x13afbc4f020 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x13afbc4f088 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x13afbc4f100 prev 0x13afbc4ef80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:224> col:142 calloc 'void *(unsigned long long, unsigned long long)'
| |-ParmVarDecl 0x13afbc4ed60 <col:173, col:180> col:180 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc4edd8 <col:212, col:219> col:219 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x13afbc4f1b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x13afbc4f208 <line:615:33> restrict
|-FunctionDecl 0x13afbc4f3a0 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:641:182> col:132 free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x13afbc4f260 <col:168, col:175> col:175 _Memory 'void *'
| `-NoAliasAttr 0x13afbc4f448 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x13afbc4f648 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:161> col:161 implicit malloc 'void *(unsigned long long)' extern
| `-ParmVarDecl 0x13afbc4f6e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x13afbc4f758 prev 0x13afbc4f648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:204> col:161 malloc 'void *(unsigned long long)'
| |-ParmVarDecl 0x13afbc4f4c8 <col:192, col:199> col:199 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x13afbc4f800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x13afbc4f858 <line:615:33> restrict
|-FunctionDecl 0x13afbc56be0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:142> col:142 implicit realloc 'void *(void *, unsigned long long)' extern
| |-ParmVarDecl 0x13afbc56c80 <<invalid sloc>> <invalid sloc> 'void *'
| `-ParmVarDecl 0x13afbc56ce8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x13afbc56d60 prev 0x13afbc56be0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:236> col:142 realloc 'void *(void *, unsigned long long)'
| |-ParmVarDecl 0x13afbc4f8b0 <col:181, col:188> col:188 _Memory 'void *'
| |-ParmVarDecl 0x13afbc4f928 <col:221, col:228> col:228 _NewSize 'size_t':'unsigned long long'
| |-NoAliasAttr 0x13afbc56e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x13afbc56e68 <line:615:33> restrict
|-FunctionDecl 0x13afbc57188 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:646:274> col:142 _recalloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x13afbc56ec0 <col:183, col:190> col:190 _Memory 'void *'
| |-ParmVarDecl 0x13afbc56f38 <col:223, col:230> col:230 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc56fb0 <col:262, col:269> col:269 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x13afbc57240 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x13afbc57298 <line:615:33> restrict
|-FunctionDecl 0x13afbc573c8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:647:191> col:132 _aligned_free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x13afbc572f0 <col:177, col:184> col:184 _Memory 'void *'
| `-NoAliasAttr 0x13afbc57470 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x13afbc57668 <col:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:648:218> col:142 _aligned_malloc 'void *(size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t)'
| |-ParmVarDecl 0x13afbc574f0 <col:182, col:189> col:189 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc57568 <col:201, col:208> col:208 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x13afbc57718 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x13afbc57770 <line:615:33> restrict
|-FunctionDecl 0x13afbc57a88 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:649:246> col:142 _aligned_offset_malloc 'void *(size_t, size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t, size_t)'
| |-ParmVarDecl 0x13afbc577c0 <col:189, col:196> col:196 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc57838 <col:208, col:215> col:215 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc578b0 <col:232, col:239> col:239 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x13afbc57b40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x13afbc57b98 <line:615:33> restrict
|-FunctionDecl 0x13afbc5de78 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:651:272> col:145 _aligned_realloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x13afbc5dc68 <col:193, col:200> col:200 _Memory 'void *'
| |-ParmVarDecl 0x13afbc5dce0 <col:233, col:240> col:240 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc5dd58 <col:255, col:262> col:262 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x13afbc5df30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x13afbc5df88 <line:615:33> restrict
|-FunctionDecl 0x13afbc5e350 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:653:306> col:142 _aligned_recalloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x13afbc5dfe0 <col:191, col:198> col:198 _Memory 'void *'
| |-ParmVarDecl 0x13afbc5e058 <col:231, col:238> col:238 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc5e0d0 <col:270, col:277> col:277 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc5e148 <col:289, col:296> col:296 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x13afbc5e410 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x13afbc5e468 <line:615:33> restrict
|-FunctionDecl 0x13afbc5e768 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:655:300> col:145 _aligned_offset_realloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x13afbc5e4c0 <col:200, col:207> col:207 _Memory 'void *'
| |-ParmVarDecl 0x13afbc5e538 <col:240, col:247> col:247 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc5e5b0 <col:262, col:269> col:269 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc5e628 <col:286, col:293> col:293 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x13afbc5e828 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x13afbc5e880 <line:615:33> restrict
|-FunctionDecl 0x13afbc59cc8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:657:334> col:142 _aligned_offset_recalloc 'void *(void *, size_t, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t, size_t)'
| |-ParmVarDecl 0x13afbc5e8d8 <col:198, col:205> col:205 _Memory 'void *'
| |-ParmVarDecl 0x13afbc5e950 <col:238, col:245> col:245 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc5e9c8 <col:277, col:284> col:284 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc5ea40 <col:296, col:303> col:303 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc5eab8 <col:320, col:327> col:327 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x13afbc59d90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x13afbc59de8 <line:615:33> restrict
|-FunctionDecl 0x13afbc5a100 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:658:73, col:176> col:88 _aligned_msize 'size_t (void *, size_t, size_t) __attribute__((cdecl))':'size_t (void *, size_t, size_t)'
| |-ParmVarDecl 0x13afbc59e40 <col:117, col:124> col:124 _Memory 'void *'
| |-ParmVarDecl 0x13afbc59eb8 <col:138, col:145> col:145 _Alignment 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc59f30 <col:162, col:169> col:169 _Offset 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbc5a558 <line:685:28, col:157> col:44 _itow_s 'errno_t (int, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (int, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x13afbc5a1e8 <col:58, col:62> col:62 _Val 'int'
| |-ParmVarDecl 0x13afbc5a260 <col:97, col:107> col:107 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x13afbc5a2d8 <col:121, col:128> col:128 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc5a358 <col:147, col:151> col:151 _Radix 'int'
|-FunctionDecl 0x13afbc5a9d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:687:82 _itow 'wchar_t *(int, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(int, wchar_t *, int)'
| |-ParmVarDecl 0x13afbc5a708 <col:94, col:99> col:99 _Value 'int'
| |-ParmVarDecl 0x13afbc5a780 <col:131, col:140> col:140 _Dest 'wchar_t *'
| |-ParmVarDecl 0x13afbc5a800 <col:152, col:157> col:157 _Radix 'int'
| `-DeprecatedAttr 0x13afbc5aa88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc5af98 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:688:28, col:158> col:44 _ltow_s 'errno_t (long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x13afbc5ac20 <col:58, col:63> col:63 _Val 'long'
| |-ParmVarDecl 0x13afbc5ac98 <col:98, col:108> col:108 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x13afbc5ad10 <col:122, col:129> col:129 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc5ad90 <col:148, col:152> col:152 _Radix 'int'
|-FunctionDecl 0x13afbc5b410 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:690:82 _ltow 'wchar_t *(long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long, wchar_t *, int)'
| |-ParmVarDecl 0x13afbc5b148 <col:94, col:100> col:100 _Value 'long'
| |-ParmVarDecl 0x13afbc5b1c0 <col:132, col:141> col:141 _Dest 'wchar_t *'
| |-ParmVarDecl 0x13afbc5b240 <col:153, col:158> col:158 _Radix 'int'
| `-DeprecatedAttr 0x13afbc5b4c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc5b988 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:691:28, col:168> col:44 _ultow_s 'errno_t (unsigned long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x13afbc5b610 <col:59, col:73> col:73 _Val 'unsigned long'
| |-ParmVarDecl 0x13afbc5b688 <col:108, col:118> col:118 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x13afbc5b700 <col:132, col:139> col:139 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc5b780 <col:158, col:162> col:162 _Radix 'int'
|-FunctionDecl 0x13afbc5ce30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:693:82 _ultow 'wchar_t *(unsigned long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long, wchar_t *, int)'
| |-ParmVarDecl 0x13afbc5bb38 <col:95, col:110> col:110 _Value 'unsigned long'
| |-ParmVarDecl 0x13afbc5bbb0 <col:142, col:151> col:151 _Dest 'wchar_t *'
| |-ParmVarDecl 0x13afbc5cc58 <col:163, col:168> col:168 _Radix 'int'
| `-DeprecatedAttr 0x13afbc5cee8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc5d250 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:694:24, col:118> col:39 wcstod 'double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x13afbc5d028 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x13afbc5d0a8 <col:100, col:111> col:111 _EndPtr 'wchar_t **'
|-FunctionDecl 0x13afbc5d5f8 <line:695:24, col:148> col:39 _wcstod_l 'double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x13afbc5d328 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x13afbc5d3a8 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x13afbc5d420 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc5d9b8 <line:696:24, col:129> col:39 wcstol 'long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x13afbc5d6d8 <col:53, col:68> col:68 _Str 'const wchar_t *'
| |-ParmVarDecl 0x13afbc5d758 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x13afbc5d7d8 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x13afbc58e10 <line:697:24, col:159> col:39 _wcstol_l 'long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x13afbc5da98 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x13afbc5db18 <col:102, col:112> col:112 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x13afbc5db98 <col:121, col:125> col:125 _Radix 'int'
| `-ParmVarDecl 0x13afbc58c00 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc591d8 <line:698:24, col:133> col:43 wcstoll 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x13afbc58ef8 <col:58, col:73> col:73 _Str 'const wchar_t *'
| |-ParmVarDecl 0x13afbc58f78 <col:104, col:114> col:114 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x13afbc58ff8 <col:123, col:127> col:127 _Radix 'int'
|-FunctionDecl 0x13afbc59640 <line:699:24, col:164> col:43 _wcstoll_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x13afbc592b8 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x13afbc59338 <col:107, col:117> col:117 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x13afbc593b8 <col:126, col:130> col:130 _Radix 'int'
| `-ParmVarDecl 0x13afbc59430 <col:147, col:157> col:157 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc59a08 <line:700:24, col:137> col:46 wcstoul 'unsigned long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x13afbc59728 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x13afbc597a8 <col:107, col:118> col:118 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x13afbc59828 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x13afbc57e70 <line:701:24, col:167> col:46 _wcstoul_l 'unsigned long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x13afbc59ae8 <col:64, col:79> col:79 _Str 'const wchar_t *'
| |-ParmVarDecl 0x13afbc59b68 <col:110, col:120> col:120 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x13afbc57bf0 <col:129, col:133> col:133 _Radix 'int'
| `-ParmVarDecl 0x13afbc57c68 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc58238 <line:702:24, col:143> col:51 wcstoull 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x13afbc57f58 <col:67, col:82> col:82 _Str 'const wchar_t *'
| |-ParmVarDecl 0x13afbc57fd8 <col:113, col:124> col:124 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x13afbc58058 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x13afbc586a0 <line:703:24, col:174> col:51 _wcstoull_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x13afbc58318 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x13afbc58398 <col:116, col:127> col:127 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x13afbc58418 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x13afbc58490 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc589b0 <line:704:24, col:124> col:44 wcstold 'long double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x13afbc58788 <col:59, col:75> col:75 _Str 'const wchar_t *'
| `-ParmVarDecl 0x13afbc58808 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
|-FunctionDecl 0x13afbc5fde8 <line:705:24, col:155> col:44 _wcstold_l 'long double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x13afbc58a88 <col:62, col:78> col:78 _Str 'const wchar_t *'
| |-ParmVarDecl 0x13afbc58b08 <col:109, col:120> col:120 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x13afbc58b80 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc600f0 <line:706:24, col:117> col:38 wcstof 'float (const wchar_t *, wchar_t **) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x13afbc5fec8 <col:52, col:68> col:68 _Str 'const wchar_t *'
| `-ParmVarDecl 0x13afbc5ff48 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
|-FunctionDecl 0x13afbc60498 <line:707:24, col:148> col:38 _wcstof_l 'float (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x13afbc601c8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x13afbc60248 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x13afbc602c0 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc607b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:711:118> col:78 _wgetenv 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x13afbc60638 <col:94, col:110> col:110 _VarName 'const wchar_t *'
| `-DeprecatedAttr 0x13afbc60858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wdupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc5ed08 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:712:28, col:198> col:44 _wgetenv_s 'errno_t (size_t *, wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x13afbc60998 <col:61, col:70> col:70 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x13afbc60a10 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x13afbc60a88 <col:143, col:150> col:150 _DstSizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc60b00 <col:174, col:190> col:190 _VarName 'const wchar_t *'
|-FunctionDecl 0x13afbc5f0c0 <line:720:28, col:214> col:44 _wdupenv_s 'errno_t (wchar_t **, size_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t **, size_t *, const wchar_t *)'
| |-ParmVarDecl 0x13afbc5edf8 <col:127, col:137> col:137 _Buffer 'wchar_t **'
| |-ParmVarDecl 0x13afbc5ee70 <col:156, col:164> col:164 _BufferSizeInWords 'size_t *'
| `-ParmVarDecl 0x13afbc5eee8 <col:191, col:206> col:206 _VarName 'const wchar_t *'
|-FunctionDecl 0x13afbc5f280 <line:728:9, col:65> col:21 _wsystem 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x13afbc5f1a0 <col:41, col:57> col:57 _Command 'const wchar_t *'
|-FunctionDecl 0x13afbc5f4c8 <line:733:24, col:71> col:39 _wtof 'double (const wchar_t *) __attribute__((cdecl))':'double (const wchar_t *)'
| `-ParmVarDecl 0x13afbc5f350 <col:52, col:67> col:67 _Str 'const wchar_t *'
|-FunctionDecl 0x13afbc5f7c0 <line:734:24, col:101> col:39 _wtof_l 'double (const wchar_t *, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x13afbc5f598 <col:54, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x13afbc5f610 <col:84, col:94> col:94 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc5f978 <line:735:24, col:68> col:36 _wtoi 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x13afbc5f898 <col:49, col:64> col:64 _Str 'const wchar_t *'
|-FunctionDecl 0x13afbc5bc70 <line:736:24, col:98> col:36 _wtoi_l 'int (const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x13afbc5fa48 <col:51, col:66> col:66 _Str 'const wchar_t *'
| `-ParmVarDecl 0x13afbc5fac0 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc5bec8 <line:737:24, col:69> col:37 _wtol 'long (const wchar_t *) __attribute__((cdecl))':'long (const wchar_t *)'
| `-ParmVarDecl 0x13afbc5bd48 <col:50, col:65> col:65 _Str 'const wchar_t *'
|-FunctionDecl 0x13afbc5c1c0 <line:738:24, col:99> col:37 _wtol_l 'long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x13afbc5bf98 <col:52, col:67> col:67 _Str 'const wchar_t *'
| `-ParmVarDecl 0x13afbc5c010 <col:82, col:92> col:92 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc5c418 <line:739:24, col:75> col:42 _wtoll 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x13afbc5c298 <col:56, col:71> col:71 _Str 'const wchar_t *'
|-FunctionDecl 0x13afbc5c710 <line:740:24, col:105> col:42 _wtoll_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x13afbc5c4e8 <col:58, col:73> col:73 _Str 'const wchar_t *'
| `-ParmVarDecl 0x13afbc5c560 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc5cb68 <line:742:28, col:162> col:44 _i64tow_s 'errno_t (long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x13afbc5c7f0 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x13afbc5c868 <col:102, col:112> col:112 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x13afbc5c8e0 <col:126, col:133> col:133 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc5c960 <col:152, col:156> col:156 _Radix 'int'
|-FunctionDecl 0x13afbc680b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:743:146> col:62 _i64tow 'wchar_t *(long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long long, wchar_t *, int)'
| |-ParmVarDecl 0x13afbc67de0 <col:75, col:83> col:83 _Val 'long long'
| |-ParmVarDecl 0x13afbc67e58 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x13afbc67ed8 <col:136, col:140> col:140 _Radix 'int'
| `-DeprecatedAttr 0x13afbc68168 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc68628 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:744:28, col:172> col:44 _ui64tow_s 'errno_t (unsigned long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x13afbc682b0 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x13afbc68328 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x13afbc683a0 <col:136, col:143> col:143 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc68420 <col:162, col:166> col:166 _Radix 'int'
|-FunctionDecl 0x13afbc68aa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:745:157> col:63 _ui64tow 'wchar_t *(unsigned long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long long, wchar_t *, int)'
| |-ParmVarDecl 0x13afbc687d8 <col:77, col:94> col:94 _Val 'unsigned long long'
| |-ParmVarDecl 0x13afbc68850 <col:123, col:133> col:133 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x13afbc688d0 <col:147, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x13afbc68b58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc63d90 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:746:24, col:76> col:42 _wtoi64 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x13afbc63cb0 <col:57, col:72> col:72 _Str 'const wchar_t *'
|-FunctionDecl 0x13afbc63fd8 <line:747:24, col:106> col:42 _wtoi64_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x13afbc63e60 <col:59, col:74> col:74 _Str 'const wchar_t *'
| `-ParmVarDecl 0x13afbc63ed8 <col:89, col:99> col:99 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc642d0 <line:748:24, col:141> col:42 _wcstoi64 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x13afbc640b0 <col:59, col:75> col:75 _Str 'const wchar_t *'
| |-ParmVarDecl 0x13afbc64130 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x13afbc641b0 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x13afbc64668 <line:749:24, col:171> col:42 _wcstoi64_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x13afbc643b0 <col:61, col:77> col:77 _Str 'const wchar_t *'
| |-ParmVarDecl 0x13afbc64430 <col:108, col:119> col:119 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x13afbc644b0 <col:133, col:137> col:137 _Radix 'int'
| `-ParmVarDecl 0x13afbc64528 <col:154, col:164> col:164 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc64970 <line:750:24, col:150> col:50 _wcstoui64 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x13afbc64750 <col:68, col:84> col:84 _Str 'const wchar_t *'
| |-ParmVarDecl 0x13afbc647d0 <col:115, col:126> col:126 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x13afbc64850 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x13afbc61d08 <line:751:24, col:180> col:50 _wcstoui64_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x13afbc64a50 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x13afbc64ad0 <col:117, col:128> col:128 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x13afbc64b50 <col:142, col:146> col:146 _Radix 'int'
| `-ParmVarDecl 0x13afbc64bc8 <col:163, col:173> col:173 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc620c8 <line:770:24, col:151> col:39 _fullpath 'char *(char *, const char *, size_t) __attribute__((cdecl))':'char *(char *, const char *, size_t)'
| |-ParmVarDecl 0x13afbc61df8 <col:82, col:89> col:89 _FullPath 'char *'
| |-ParmVarDecl 0x13afbc61e78 <col:107, col:120> col:120 _Path 'const char *'
| `-ParmVarDecl 0x13afbc61ef0 <col:132, col:139> col:139 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbc62688 <line:778:28, col:189> col:44 _ecvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x13afbc621b0 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbc62228 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc622a8 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x13afbc62328 <col:132, col:136> col:136 _NumOfDights 'int'
| |-ParmVarDecl 0x13afbc623a8 <col:156, col:162> col:162 _PtDec 'int *'
| `-ParmVarDecl 0x13afbc62428 <col:176, col:182> col:182 _PtSign 'int *'
|-FunctionDecl 0x13afbc62b80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:780:158> col:72 _ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x13afbc62848 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x13afbc628c8 <col:101, col:105> col:105 _NumOfDigits 'int'
| |-ParmVarDecl 0x13afbc62948 <col:125, col:131> col:131 _PtDec 'int *'
| |-ParmVarDecl 0x13afbc629c8 <col:145, col:151> col:151 _PtSign 'int *'
| `-DeprecatedAttr 0x13afbc62c40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc671d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:781:28, col:186> col:44 _fcvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x13afbc66de0 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbc66e58 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc66ed8 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x13afbc66f58 <col:132, col:136> col:136 _NumOfDec 'int'
| |-ParmVarDecl 0x13afbc66fd8 <col:153, col:159> col:159 _PtDec 'int *'
| `-ParmVarDecl 0x13afbc67058 <col:173, col:179> col:179 _PtSign 'int *'
|-FunctionDecl 0x13afbc67650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:783:155> col:72 _fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x13afbc67390 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x13afbc67410 <col:101, col:105> col:105 _NumOfDec 'int'
| |-ParmVarDecl 0x13afbc67490 <col:122, col:128> col:128 _PtDec 'int *'
| |-ParmVarDecl 0x13afbc67510 <col:142, col:148> col:148 _PtSign 'int *'
| `-DeprecatedAttr 0x13afbc67710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc67bd8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:784:9, col:129> col:25 _gcvt_s 'errno_t (char *, size_t, double, int) __attribute__((cdecl))':'errno_t (char *, size_t, double, int)'
| |-ParmVarDecl 0x13afbc67858 <col:55, col:62> col:62 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbc678d0 <col:76, col:83> col:83 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc67950 <col:95, col:102> col:102 _Val 'double'
| `-ParmVarDecl 0x13afbc679d0 <col:113, col:117> col:117 _NumOfDigits 'int'
|-FunctionDecl 0x13afbc60ff8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:786:141> col:57 _gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x13afbc60d58 <col:68, col:75> col:75 _Val 'double'
| |-ParmVarDecl 0x13afbc60dd8 <col:86, col:90> col:90 _NumOfDigits 'int'
| |-ParmVarDecl 0x13afbc60e58 <col:127, col:134> col:134 _DstBuf 'char *'
| `-DeprecatedAttr 0x13afbc610b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc61490 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:788:24, col:91> col:36 _atodbl 'int (_CRT_DOUBLE *, char *) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *)'
| |-ParmVarDecl 0x13afbc61268 <col:50, col:64> col:64 _Result '_CRT_DOUBLE *'
| `-ParmVarDecl 0x13afbc612e8 <col:80, col:87> col:87 _Str 'char *'
|-FunctionDecl 0x13afbc61810 <line:789:24, col:89> col:36 _atoldbl 'int (_LDOUBLE *, char *) __attribute__((cdecl))':'int (_LDOUBLE *, char *)'
| |-ParmVarDecl 0x13afbc615e8 <col:51, col:62> col:62 _Result '_LDOUBLE *'
| `-ParmVarDecl 0x13afbc61668 <col:78, col:85> col:85 _Str 'char *'
|-FunctionDecl 0x13afbc61b90 <line:790:24, col:96> col:36 _atoflt 'int (_CRT_FLOAT *, const char *) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *)'
| |-ParmVarDecl 0x13afbc61968 <col:50, col:63> col:63 _Result '_CRT_FLOAT *'
| `-ParmVarDecl 0x13afbc619e8 <col:79, col:92> col:92 _Str 'const char *'
|-FunctionDecl 0x13afbc68fd8 <line:791:24, col:121> col:36 _atodbl_l 'int (_CRT_DOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x13afbc68d00 <col:52, col:66> col:66 _Result '_CRT_DOUBLE *'
| |-ParmVarDecl 0x13afbc68d80 <col:82, col:89> col:89 _Str 'char *'
| `-ParmVarDecl 0x13afbc68df8 <col:104, col:114> col:114 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc69388 <line:792:24, col:119> col:36 _atoldbl_l 'int (_LDOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_LDOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x13afbc690b8 <col:53, col:64> col:64 _Result '_LDOUBLE *'
| |-ParmVarDecl 0x13afbc69138 <col:80, col:87> col:87 _Str 'char *'
| `-ParmVarDecl 0x13afbc691b0 <col:102, col:112> col:112 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc69738 <line:793:24, col:126> col:36 _atoflt_l 'int (_CRT_FLOAT *, const char *, _locale_t) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *, _locale_t)'
| |-ParmVarDecl 0x13afbc69468 <col:52, col:65> col:65 _Result '_CRT_FLOAT *'
| |-ParmVarDecl 0x13afbc694e8 <col:81, col:94> col:94 _Str 'const char *'
| `-ParmVarDecl 0x13afbc69560 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc69a10 <line:794:46> col:46 implicit _lrotl 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x13afbc69ab0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x13afbc69b18 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x13afbc69b90 <col:46> Implicit
|-FunctionDecl 0x13afbc69be8 prev 0x13afbc69a10 <col:24, col:93> col:46 _lrotl 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x13afbc69820 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x13afbc698a0 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x13afbc69d10 <col:46> Inherited Implicit
|-FunctionDecl 0x13afbc69ed0 <line:795:46> col:46 implicit _lrotr 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x13afbc69f70 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x13afbc69fd8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x13afbc6a050 <col:46> Implicit
|-FunctionDecl 0x13afbc6a0a8 prev 0x13afbc69ed0 <col:24, col:93> col:46 _lrotr 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x13afbc69d50 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x13afbc69dd0 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x13afbc6a1a0 <col:46> Inherited Implicit
|-FunctionDecl 0x13afbc6a6b8 <line:796:40, line:797:37> line:796:58 _makepath_s 'errno_t (char *, size_t, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x13afbc6a1e0 <col:99, col:106> col:106 _PathResult 'char *'
| |-ParmVarDecl 0x13afbc6a258 <col:124, col:131> col:131 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc6a2d8 <col:156, col:169> col:169 _Drive 'const char *'
| |-ParmVarDecl 0x13afbc6a358 <col:188, col:201> col:201 _Dir 'const char *'
| |-ParmVarDecl 0x13afbc6a3d8 <col:218, col:231> col:231 _Filename 'const char *'
| `-ParmVarDecl 0x13afbc6a458 <line:797:20, col:33> col:33 _Ext 'const char *'
|-FunctionDecl 0x13afbc6ac60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:799:78 _makepath 'void (char *, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'void (char *, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x13afbc6a878 <col:113, col:119> col:119 _Path 'char *'
| |-ParmVarDecl 0x13afbc6a8f8 <col:137, col:151> col:151 _Drive 'const char *'
| |-ParmVarDecl 0x13afbc6a978 <col:170, col:184> col:184 _Dir 'const char *'
| |-ParmVarDecl 0x13afbc6a9f8 <col:201, col:215> col:215 _Filename 'const char *'
| |-ParmVarDecl 0x13afbc6aa78 <col:237, col:251> col:251 _Ext 'const char *'
| `-DeprecatedAttr 0x13afbc6ad48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _makepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc6b020 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:826:9, col:59> col:27 _onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x13afbc6aeb0 <col:44, col:54> col:54 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x13afbc6b1d8 <line:838:24, col:77> col:39 _putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x13afbc6b0f8 <col:54, col:67> col:67 _EnvString 'const char *'
|-FunctionDecl 0x13afbc6b498 <line:839:28, col:107> col:44 _putenv_s 'errno_t (const char *, const char *) __attribute__((cdecl))':'errno_t (const char *, const char *)'
| |-ParmVarDecl 0x13afbc6b2b0 <col:61, col:74> col:74 _Name 'const char *'
| `-ParmVarDecl 0x13afbc6b330 <col:88, col:101> col:101 _Value 'const char *'
|-FunctionDecl 0x13afbc6b760 <line:842:30> col:30 implicit _rotl 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x13afbc6b800 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x13afbc6b868 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x13afbc6b8e0 <col:30> Implicit
|-FunctionDecl 0x13afbc6b938 prev 0x13afbc6b760 <col:9, col:75> col:30 _rotl 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x13afbc6b578 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x13afbc6b5f8 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x13afbc6ba30 <col:30> Inherited Implicit
|-FunctionDecl 0x13afbc6bc60 <line:843:34> col:34 implicit _rotl64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x13afbc6bd30 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x13afbc6bd98 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x13afbc6be10 <col:34> Implicit
|-FunctionDecl 0x13afbc6be68 prev 0x13afbc6bc60 <col:9, col:85> col:34 _rotl64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x13afbc6ba70 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x13afbc6baf0 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x13afbc6bf60 <col:34> Inherited Implicit
|-FunctionDecl 0x13afbc6c120 <line:844:30> col:30 implicit _rotr 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x13afbc6c1c0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x13afbc6c228 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x13afbc6c2a0 <col:30> Implicit
|-FunctionDecl 0x13afbc6c2f8 prev 0x13afbc6c120 <col:9, col:75> col:30 _rotr 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x13afbc6bfa0 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x13afbc6c020 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x13afbc6c3f0 <col:30> Inherited Implicit
|-FunctionDecl 0x13afbc6c5b0 <line:845:34> col:34 implicit _rotr64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x13afbc6c650 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x13afbc6c6b8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x13afbc6c730 <col:34> Implicit
|-FunctionDecl 0x13afbc6c788 prev 0x13afbc6c5b0 <col:9, col:85> col:34 _rotr64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x13afbc6c430 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x13afbc6c4b0 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x13afbc6c880 <col:34> Inherited Implicit
|-FunctionDecl 0x13afbc6cc38 <line:849:9, col:171> col:25 _searchenv_s 'errno_t (const char *, const char *, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, const char *, char *, size_t)'
| |-ParmVarDecl 0x13afbc6c8c0 <col:45, col:58> col:58 _Filename 'const char *'
| |-ParmVarDecl 0x13afbc6c940 <col:76, col:89> col:89 _EnvVar 'const char *'
| |-ParmVarDecl 0x13afbc6c9c0 <col:127, col:134> col:134 _ResultPath 'char *'
| `-ParmVarDecl 0x13afbc6ca38 <col:152, col:159> col:159 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbc65030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:851:78 _searchenv 'void (const char *, const char *, char *) __attribute__((cdecl))':'void (const char *, const char *, char *)'
| |-ParmVarDecl 0x13afbc64d98 <col:97, col:111> col:111 _Filename 'const char *'
| |-ParmVarDecl 0x13afbc64e18 <col:129, col:143> col:143 _EnvVar 'const char *'
| |-ParmVarDecl 0x13afbc64e98 <col:176, col:182> col:182 _ResultPath 'char *'
| `-DeprecatedAttr 0x13afbc650e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _searchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc656d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:854:261> col:62 _splitpath 'void (const char *, char *, char *, char *, char *) __attribute__((cdecl))':'void (const char *, char *, char *, char *, char *)'
| |-ParmVarDecl 0x13afbc652f0 <col:80, col:93> col:93 _FullPath 'const char *'
| |-ParmVarDecl 0x13afbc65370 <col:129, col:136> col:136 _Drive 'char *'
| |-ParmVarDecl 0x13afbc653f0 <col:169, col:176> col:176 _Dir 'char *'
| |-ParmVarDecl 0x13afbc65470 <col:207, col:214> col:214 _Filename 'char *'
| |-ParmVarDecl 0x13afbc654f0 <col:250, col:257> col:257 _Ext 'char *'
| `-DeprecatedAttr 0x13afbc65798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _splitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc6d030 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:855:40, line:859:79> line:855:57 _splitpath_s 'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t)'
| |-ParmVarDecl 0x13afbc658e0 <col:77, col:90> col:90 _FullPath 'const char *'
| |-ParmVarDecl 0x13afbc65960 <line:856:48, col:55> col:55 _Drive 'char *'
| |-ParmVarDecl 0x13afbc659d8 <col:68, col:75> col:75 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc65a58 <line:857:46, col:53> col:53 _Dir 'char *'
| |-ParmVarDecl 0x13afbc65ad0 <col:64, col:71> col:71 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc65b50 <line:858:51, col:58> col:58 _Filename 'char *'
| |-ParmVarDecl 0x13afbc65bc8 <col:74, col:81> col:81 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc65c48 <line:859:46, col:53> col:53 _Ext 'char *'
| `-ParmVarDecl 0x13afbc6cd40 <col:64, col:71> col:71 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbc6d3e0 <line:862:9, col:204> col:24 _swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x13afbc6d148 <col:95, col:102> col:102 _Buf1 'char *'
| |-ParmVarDecl 0x13afbc6d1c8 <col:174, col:181> col:181 _Buf2 'char *'
| `-ParmVarDecl 0x13afbc6d248 <col:188, col:192> col:192 _SizeInBytes 'int'
|-FunctionDecl 0x13afbc6d780 <line:873:24, col:161> col:42 _wfullpath 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x13afbc6d4c0 <col:86, col:96> col:96 _FullPath 'wchar_t *'
| |-ParmVarDecl 0x13afbc6d538 <col:114, col:130> col:130 _Path 'const wchar_t *'
| `-ParmVarDecl 0x13afbc6d5b0 <col:142, col:149> col:149 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbc65cd0 <line:879:40, line:880:40> line:879:56 _wmakepath_s 'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x13afbc6d860 <col:91, col:101> col:101 _PathResult 'wchar_t *'
| |-ParmVarDecl 0x13afbc6d8d8 <col:119, col:126> col:126 _SIZE 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc6d950 <col:144, col:160> col:160 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x13afbc6d9c8 <col:179, col:195> col:195 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x13afbc6da40 <col:212, col:228> col:228 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x13afbc6dab8 <line:880:20, col:36> col:36 _Ext 'const wchar_t *'
|-FunctionDecl 0x13afbc662a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:882:78 _wmakepath 'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x13afbc65e88 <col:114, col:123> col:123 _ResultPath 'wchar_t *'
| |-ParmVarDecl 0x13afbc65f00 <col:147, col:164> col:164 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x13afbc65f78 <col:183, col:200> col:200 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x13afbc65ff0 <col:217, col:234> col:234 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x13afbc66068 <col:256, col:273> col:273 _Ext 'const wchar_t *'
| `-DeprecatedAttr 0x13afbc66368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wmakepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc66588 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:889:24, col:81> col:39 _wputenv 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x13afbc664a8 <col:55, col:71> col:71 _EnvString 'const wchar_t *'
|-FunctionDecl 0x13afbc66878 <line:890:28, col:114> col:44 _wputenv_s 'errno_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x13afbc66658 <col:62, col:78> col:78 _Name 'const wchar_t *'
| `-ParmVarDecl 0x13afbc666d0 <col:92, col:108> col:108 _Value 'const wchar_t *'
|-FunctionDecl 0x13afbc6dd50 <line:891:9, col:181> col:25 _wsearchenv_s 'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t)'
| |-ParmVarDecl 0x13afbc66950 <col:46, col:62> col:62 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x13afbc669c8 <col:80, col:96> col:96 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x13afbc66a40 <col:134, col:144> col:144 _ResultPath 'wchar_t *'
| `-ParmVarDecl 0x13afbc66ab8 <col:162, col:169> col:169 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbc6e1c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:893:78 _wsearchenv 'void (const wchar_t *, const wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x13afbc6def8 <col:98, col:115> col:115 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x13afbc6df70 <col:133, col:150> col:150 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x13afbc6dfe8 <col:183, col:192> col:192 _ResultPath 'wchar_t *'
| `-DeprecatedAttr 0x13afbc6e278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsearchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc6e890 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:896:278> col:63 _wsplitpath 'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x13afbc6e478 <col:82, col:98> col:98 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x13afbc6e4f0 <col:134, col:144> col:144 _Drive 'wchar_t *'
| |-ParmVarDecl 0x13afbc6e568 <col:177, col:187> col:187 _Dir 'wchar_t *'
| |-ParmVarDecl 0x13afbc6e5e0 <col:218, col:228> col:228 _Filename 'wchar_t *'
| |-ParmVarDecl 0x13afbc6e658 <col:264, col:274> col:274 _Ext 'wchar_t *'
| `-DeprecatedAttr 0x13afbc6e958 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsplitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc124d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:897:21, line:901:82> line:897:37 _wsplitpath_s 'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t)'
| |-ParmVarDecl 0x13afbc6ea98 <col:58, col:74> col:74 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x13afbc6eb10 <line:898:48, col:58> col:58 _Drive 'wchar_t *'
| |-ParmVarDecl 0x13afbc6eb88 <col:71, col:78> col:78 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc6ec00 <line:899:46, col:56> col:56 _Dir 'wchar_t *'
| |-ParmVarDecl 0x13afbc6ec78 <col:67, col:74> col:74 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc12070 <line:900:51, col:61> col:61 _Filename 'wchar_t *'
| |-ParmVarDecl 0x13afbc120e8 <col:77, col:84> col:84 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc12160 <line:901:46, col:56> col:56 _Ext 'wchar_t *'
| `-ParmVarDecl 0x13afbc121d8 <col:67, col:74> col:74 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbc127f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:909:78> col:50 _seterrormode 'void (int) __attribute__((cdecl))':'void (int)'
| |-ParmVarDecl 0x13afbc126e8 <col:69, col:73> col:73 _Mode 'int'
| `-DeprecatedAttr 0x13afbc12898 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetErrorMode instead. See online help for details." ""
|-FunctionDecl 0x13afbc12c88 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:910:97> col:42 _beep 'void (unsigned int, unsigned int) __attribute__((cdecl))':'void (unsigned int, unsigned int)'
| |-ParmVarDecl 0x13afbc12aa8 <col:53, col:62> col:62 _Frequency 'unsigned int'
| |-ParmVarDecl 0x13afbc12b28 <col:79, col:88> col:88 _Duration 'unsigned int'
| `-DeprecatedAttr 0x13afbc12d38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Beep instead. See online help for details." ""
|-FunctionDecl 0x13afbd24140 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:911:78> col:43 _sleep 'void (unsigned long) __attribute__((cdecl))':'void (unsigned long)'
| |-ParmVarDecl 0x13afbc12f40 <col:55, col:69> col:69 _Duration 'unsigned long'
| `-DeprecatedAttr 0x13afbd241e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Sleep instead. See online help for details." ""
|-FunctionDecl 0x13afbd24750 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:934:187> col:102 ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x13afbd24490 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x13afbd24510 <col:130, col:134> col:134 _NumOfDigits 'int'
| |-ParmVarDecl 0x13afbd24590 <col:154, col:160> col:160 _PtDec 'int *'
| |-ParmVarDecl 0x13afbd24610 <col:174, col:180> col:180 _PtSign 'int *'
| |-DeprecatedAttr 0x13afbd24810 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ecvt. See online help for details." ""
| `-DeprecatedAttr 0x13afbd24908 <col:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd24e40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:935:184> col:102 fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x13afbd24b80 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x13afbd24c00 <col:130, col:134> col:134 _NumOfDec 'int'
| |-ParmVarDecl 0x13afbd24c80 <col:151, col:157> col:157 _PtDec 'int *'
| |-ParmVarDecl 0x13afbd24d00 <col:171, col:177> col:177 _PtSign 'int *'
| |-DeprecatedAttr 0x13afbd24f00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcvt. See online help for details." ""
| `-DeprecatedAttr 0x13afbd24ff8 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd23498 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:936:179> col:96 gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x13afbd23278 <col:106, col:113> col:113 _Val 'double'
| |-ParmVarDecl 0x13afbd232f8 <col:124, col:128> col:128 _NumOfDigits 'int'
| |-ParmVarDecl 0x13afbd23378 <col:165, col:172> col:172 _DstBuf 'char *'
| |-DeprecatedAttr 0x13afbd23550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _gcvt. See online help for details." ""
| `-DeprecatedAttr 0x13afbd23648 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd23ae0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:937:170> col:96 itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x13afbd238c0 <col:106, col:110> col:110 _Val 'int'
| |-ParmVarDecl 0x13afbd23940 <col:139, col:146> col:146 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbd239c0 <col:160, col:164> col:164 _Radix 'int'
| |-DeprecatedAttr 0x13afbd23b98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _itoa. See online help for details." ""
| `-DeprecatedAttr 0x13afbd23c90 <col:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd21128 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:938:171> col:96 ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x13afbd23f08 <col:106, col:111> col:111 _Val 'long'
| |-ParmVarDecl 0x13afbd23f88 <col:140, col:147> col:147 _DstBuf 'char *'
| |-ParmVarDecl 0x13afbd24008 <col:161, col:165> col:165 _Radix 'int'
| |-DeprecatedAttr 0x13afbd211e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ltoa. See online help for details." ""
| `-DeprecatedAttr 0x13afbd212d8 <col:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd21570 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:941:108> col:71 putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x13afbd21490 <col:85, col:98> col:98 _EnvString 'const char *'
| `-DeprecatedAttr 0x13afbd21618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putenv. See online help for details." ""
|-FunctionDecl 0x13afbd219f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:944:245> col:128 swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x13afbd217e0 <col:165, col:172> col:172 _Buf1 'char *'
| |-ParmVarDecl 0x13afbd21860 <col:210, col:217> col:217 _Buf2 'char *'
| |-ParmVarDecl 0x13afbd218e0 <col:229, col:233> col:233 _SizeInBytes 'int'
| `-DeprecatedAttr 0x13afbd21ab0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _swab. See online help for details." ""
|-FunctionDecl 0x13afbd21f58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:945:181> col:96 ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x13afbd21d38 <col:107, col:121> col:121 _Val 'unsigned long'
| |-ParmVarDecl 0x13afbd21db8 <col:150, col:157> col:157 _Dstbuf 'char *'
| |-ParmVarDecl 0x13afbd21e38 <col:171, col:175> col:175 _Radix 'int'
| |-DeprecatedAttr 0x13afbd22010 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ultoa. See online help for details." ""
| `-DeprecatedAttr 0x13afbd25150 <col:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd25338 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:64:18, line:947:48> col:18 onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x13afbd25260 <line:64:18, line:947:43> col:43 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x13afbd25790 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x13afbd25410 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x13afbd25490 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x13afbd25510 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x13afbd25588 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbd25b58 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x13afbd25bf8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x13afbd25c60 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x13afbd25cc8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x13afbd25d48 prev 0x13afbd25b58 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x13afbd25880 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x13afbd25900 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x13afbd25978 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbd26130 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x13afbd25e30 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x13afbd25eb0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x13afbd25f28 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbd26590 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x13afbd26218 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x13afbd26298 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x13afbd26310 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbd26388 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd26898 <line:51:32> col:32 implicit used memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x13afbd26938 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x13afbd269a0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x13afbd26a08 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x13afbd26a88 prev 0x13afbd26898 <col:16, col:144> col:32 used memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x13afbd26680 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x13afbd26700 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x13afbd26778 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbd26e48 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x13afbd26ee8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x13afbd26f50 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x13afbd26fb8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x13afbd27038 prev 0x13afbd26e48 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x13afbd26b70 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x13afbd26bf0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x13afbd26c68 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbd284c8 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x13afbd28150 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x13afbd281c8 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x13afbd28248 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x13afbd282c0 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x13afbd28888 <line:94:25> col:25 implicit used memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x13afbd28928 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x13afbd28990 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x13afbd289f8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x13afbd28a78 prev 0x13afbd28888 <col:9, col:107> col:25 used memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x13afbd285b8 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x13afbd28638 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x13afbd286b0 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbd28eb8 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x13afbd28f58 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x13afbd28fc0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x13afbd29028 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x13afbd29090 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x13afbd29160 prev 0x13afbd28eb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x13afbd28c00 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x13afbd28c80 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x13afbd28d00 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x13afbd28d78 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x13afbd29220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x13afbd29600 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x13afbd293e8 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x13afbd29468 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x13afbd294e0 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x13afbd296b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x13afbd29ab0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x13afbd297e0 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x13afbd29858 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbd298d8 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x13afbd29e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x13afbd29c58 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x13afbd29cd8 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x13afbd29ef0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd222c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x13afbd2a038 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x13afbd2a0b0 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x13afbd220f0 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x13afbd22650 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x13afbd226f0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x13afbd22758 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x13afbd227d0 prev 0x13afbd22650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x13afbd22468 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x13afbd224e8 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x13afbd22880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd22bd8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x13afbd229c8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x13afbd22a40 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x13afbd22ac0 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x13afbd22f00 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x13afbd22fa0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x13afbd23008 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x13afbd2d1a0 prev 0x13afbd22f00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x13afbd22d80 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x13afbd22e00 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x13afbd2d250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd2d518 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x13afbd2d5b8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x13afbd2d620 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x13afbd2d698 prev 0x13afbd2d518 <col:16, col:91> col:32 used strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x13afbd2d398 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x13afbd2d418 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x13afbd2d850 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x13afbd2d8f0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x13afbd2d960 prev 0x13afbd2d850 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x13afbd2d778 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x13afbd2dba8 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x13afbd2da38 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x13afbd2dab0 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbd2ddf8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x13afbd2dc88 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x13afbd2dd00 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x13afbd2e128 <line:131:1, line:133:1>
|   `-ReturnStmt 0x13afbd2e118 <line:132:5, col:51>
|     `-ConditionalOperator 0x13afbd2e0e8 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x13afbd2df58 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x13afbd2df38 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x13afbd2df08 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x13afbd2dec0 <col:13> 'const char *' lvalue ParmVar 0x13afbd2dc88 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x13afbd2df20 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x13afbd2dee0 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x13afbd2e0d0 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x13afbd2df78 <col:24> 'int' 0
|       `-CallExpr 0x13afbd2e070 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x13afbd2e058 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x13afbd2dfa0 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x13afbd2dba8 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x13afbd2e0a0 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x13afbd2dfc0 <col:36> 'const char *' lvalue ParmVar 0x13afbd2dc88 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x13afbd2e0b8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x13afbd2dfe0 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x13afbd2dd00 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbd31488 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x13afbd311e0 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x13afbd31258 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x13afbd312d8 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x13afbd31350 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x13afbd31790 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x13afbd31830 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x13afbd31898 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x13afbd31900 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x13afbd31980 prev 0x13afbd31790 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x13afbd31578 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x13afbd315f8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x13afbd31670 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbd31b48 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x13afbd31a68 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x13afbd31e10 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x13afbd31eb0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x13afbd31f18 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x13afbd31f90 prev 0x13afbd31e10 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x13afbd31c20 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x13afbd31ca0 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x13afbd32230 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x13afbd32070 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x13afbd320f0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x13afbd32490 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x13afbd32310 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x13afbd32390 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x13afbd32848 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x13afbd32570 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x13afbd325f0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x13afbd32668 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd32ab0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x13afbd32930 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x13afbd329b0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x13afbd32da8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x13afbd32b90 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x13afbd32c10 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x13afbd32c88 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd33010 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x13afbd32e90 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x13afbd32f10 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x13afbc80630 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x13afbd330f0 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x13afbd33170 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x13afbc80510 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc809e8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x13afbc80718 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x13afbc80798 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x13afbc80810 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbc80e50 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x13afbc80ad0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x13afbc80b50 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x13afbc80bc8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc80c40 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc81158 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x13afbc80f40 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x13afbc80fc0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x13afbc81038 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbc814f0 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x13afbc81240 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x13afbc812c0 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x13afbc81338 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc813b0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc81808 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x13afbc818a8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x13afbc81910 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x13afbc81988 prev 0x13afbc81808 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x13afbc815e0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x13afbc81660 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x13afbc81c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x13afbc81b28 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x13afbc81cb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc82080 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x13afbc81df8 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x13afbc81e70 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc81ef0 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x13afbc82358 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x13afbc823f8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x13afbc82468 prev 0x13afbc82358 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x13afbc82228 <col:90> col:93 'int'
| `-DeprecatedAttr 0x13afbbebda0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbec0f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x13afbbebee8 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x13afbbebf60 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbbebfe0 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x13afbbec3b8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x13afbbec1e0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x13afbbec258 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbbec638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x13afbbec558 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x13afbbec6e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbecaf0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x13afbbec828 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x13afbbec8a0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbbec918 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbbecec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x13afbbecc98 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x13afbbecd10 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x13afbbecf70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbed428 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x13afbbed0b8 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x13afbbed130 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x13afbbed1b0 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x13afbbed228 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x13afbbed7f0 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x13afbbed890 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x13afbbed8f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x13afbbed960 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x13afbbed9e0 prev 0x13afbbed7f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x13afbbed5d8 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x13afbbed658 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x13afbbed6d0 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x13afbbeda98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbede20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit used strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x13afbbedec0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x13afbbedf28 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x13afbbedf90 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x13afbbee010 prev 0x13afbbede20 <col:24, col:163> col:40 used strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x13afbbedbe0 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x13afbbedc60 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x13afbbedcd8 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbbee310 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x13afbbee0f8 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x13afbbee178 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x13afbbee1f0 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbbee6a8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x13afbbee3f8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x13afbbee478 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x13afbbee4f0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbbee568 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbbeea40 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x13afbbee798 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x13afbbee810 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x13afbbee890 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x13afbbee908 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x13afbbeee08 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x13afbbeeea8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x13afbbeef10 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x13afbbeef78 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x13afbbeeff8 prev 0x13afbbeee08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x13afbbeebf0 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x13afbbeec70 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x13afbbeece8 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x13afbbef0b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbef568 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x13afbbef1f8 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x13afbbef270 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbbef2f0 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x13afbbef368 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbbef9e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x13afbbef718 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x13afbbef798 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x13afbbef810 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x13afbbefaa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbf1dd0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x13afbbf1e70 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x13afbbf1ed8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x13afbbf1f50 prev 0x13afbbf1dd0 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x13afbbefbe8 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x13afbbefc68 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x13afbbf21b0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x13afbbf2250 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x13afbbf22b8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x13afbbf2330 prev 0x13afbbf21b0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x13afbbf2030 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x13afbbf20b0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x13afbbf24f0 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x13afbbf2410 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x13afbbf2740 <line:202:40> col:40 implicit used strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x13afbbf27e0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x13afbbf2848 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x13afbbf28c0 prev 0x13afbbf2740 <col:24, col:101> col:40 used strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x13afbbf25c8 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x13afbbf2648 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x13afbbf2b20 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x13afbbf2bc0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x13afbbf2c28 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x13afbbf2ca0 prev 0x13afbbf2b20 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x13afbbf29a0 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x13afbbf2a20 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x13afbbf2fc0 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x13afbbf3060 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x13afbbf30c8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x13afbbf3140 prev 0x13afbbf2fc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x13afbbf2e40 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x13afbbf2ec0 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x13afbbf31f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbf35d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x13afbbf3338 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x13afbbf33b8 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x13afbbf3438 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x13afbbf3830 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x13afbbf36c0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x13afbbf3738 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbbf3ab0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x13afbbf39d0 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x13afbbf3b58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbf3ef8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x13afbbf3ca0 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x13afbbf3d18 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbbf3de0 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbbf4218 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x13afbbf40a0 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x13afbbf4118 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x13afbbf42c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbf46e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x13afbbf4780 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x13afbbf47e8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x13afbbf4850 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x13afbbf48d0 prev 0x13afbbf46e0 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x13afbbf4410 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x13afbbf4490 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x13afbbf4508 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbbf4d28 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x13afbbf49b8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x13afbbf4a38 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x13afbbf4ab0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbbf4b28 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbbf4f98 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x13afbbf5038 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x13afbbf50a8 prev 0x13afbbf4f98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x13afbbf4eb8 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x13afbbf5150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x13afbbf5498 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x13afbbf5318 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x13afbbf5398 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x13afbbf5548 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x13afbbf5890 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x13afbbf5710 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x13afbbf5790 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x13afbbf5940 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x13afbbf5be8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x13afbbf5b08 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x13afbbf5c90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x13afbbf60c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x13afbbf5ea8 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x13afbbf5f28 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x13afbbf5fa0 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x13afbbf6178 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x13afbbf6558 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x13afbbf6340 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x13afbbf63c0 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x13afbbf6438 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x13afbbf6610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x13afbbf68b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x13afbbf67d8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x13afbbf6960 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x13afbbf6ca8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x13afbbf6b28 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x13afbbf6ba8 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x13afbbf6d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x13afbbf7000 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x13afbbf6f20 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x13afbbf70a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x13afbbf72a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x13afbbf71c8 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x13afbbf7630 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x13afbbf7370 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x13afbbf73e8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x13afbbf7460 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x13afbbf79e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x13afbbf77d0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x13afbbf7848 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x13afbbf7a98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbf9e48 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x13afbbf9ee8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x13afbbf9f50 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x13afbbf9fc8 prev 0x13afbbf9e48 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x13afbbf7bd8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x13afbbf7c50 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x13afbbfa280 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x13afbbfa320 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x13afbbfa388 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x13afbbfa400 prev 0x13afbbfa280 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x13afbbfa0a0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x13afbbfa118 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x13afbbfa6e0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x13afbbfa4d8 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x13afbbfa550 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x13afbbfa5c8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x13afbbfa9f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x13afbbfa880 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x13afbbfa8f8 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x13afbbfaaa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbfadf8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x13afbbfabe0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x13afbbfac58 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x13afbbfb040 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x13afbbfb0e0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x13afbbfb150 prev 0x13afbbfb040 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x13afbbfaed0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x13afbbfb438 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x13afbbfb220 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x13afbbfb298 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbbfb680 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x13afbbfb510 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x13afbbfb588 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x13afbbfba18 <line:306:1, line:308:1>
|   `-ReturnStmt 0x13afbbfba08 <line:307:5, col:56>
|     `-ConditionalOperator 0x13afbbfb9d8 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x13afbbfb840 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x13afbbfb820 <col:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x13afbbfb7f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x13afbbfb748 <col:13> 'const wchar_t *' lvalue ParmVar 0x13afbbfb510 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x13afbbfb808 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x13afbbfb7d0 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x13afbbfb7a8 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x13afbbfb768 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x13afbbfb9c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x13afbbfb860 <col:29> 'int' 0
|       `-CallExpr 0x13afbbfb960 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x13afbbfb948 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x13afbbfb888 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x13afbbfb438 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x13afbbfb990 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x13afbbfb8a8 <col:41> 'const wchar_t *' lvalue ParmVar 0x13afbbfb510 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x13afbbfb9a8 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x13afbbfb8c8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x13afbbfb588 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbbfbe20 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x13afbbfba40 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x13afbbfbab8 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x13afbbfbb30 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x13afbbfbba8 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x13afbbfc1d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x13afbbfbfc8 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x13afbbfc040 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x13afbbfc0b8 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x13afbbfc288 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbfc698 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x13afbbfc738 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x13afbbfc7a0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x13afbbfc808 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x13afbbfc888 prev 0x13afbbfc698 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x13afbbfc3c8 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x13afbbfc440 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x13afbbfc4b8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbbfcc08 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x13afbbfc968 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x13afbbfc9e0 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x13afbbfca58 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x13afbbfcad0 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x13afbbfcfb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x13afbbfcdb0 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x13afbbfce28 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x13afbbfcea0 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x13afbbfd070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbfd320 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x13afbbfd1b0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x13afbbfd228 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x13afbbfd568 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x13afbbfd3f8 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x13afbbfd470 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x13afbbfd7b0 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x13afbbfd640 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x13afbbfd6b8 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x13afbbfd9f8 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x13afbbfd888 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x13afbbfd900 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x13afbbfdd00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x13afbbfdb90 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x13afbbfdc08 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x13afbbfddb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbfe1f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x13afbbfdf28 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x13afbbfdfa0 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x13afbbfe020 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x13afbbfe510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x13afbbfe398 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x13afbbfe5b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbfe9c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x13afbbfe6f8 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x13afbbfe770 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbbfe7f0 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x13afbbfec38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x13afbbfeb60 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x13afbbfece0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbbff0a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x13afbbfee20 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x13afbbfee98 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbbfef10 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x13afbbff2f8 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x13afbbff180 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x13afbbff1f8 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x13afbbff698 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x13afbbff3d0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x13afbbff448 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x13afbbff4c0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbbff988 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x13afbbff778 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x13afbbff7f0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x13afbbff868 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbbffe40 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x13afbbffa68 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x13afbbffae0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x13afbbffb58 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbbffbd0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc00298 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x13afbbfff28 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x13afbbfffa0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc00018 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x13afbc00090 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbc00700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x13afbc00440 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x13afbc004b8 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x13afbc00530 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x13afbc007b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc009d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x13afbc008f8 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x13afbc00d60 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x13afbc00aa0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x13afbc00b18 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc00b90 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x13afbc01118 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x13afbc00f00 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x13afbc00f78 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x13afbc011c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc01478 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x13afbc01308 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x13afbc01380 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbc016e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x13afbc01610 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x13afbc01790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc01b90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x13afbc018d0 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x13afbc01948 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc019c0 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc01f58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x13afbc01d30 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x13afbc01da8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x13afbc02008 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc022b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x13afbc02148 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x13afbc021c0 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbc02528 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x13afbc02450 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x13afbc025d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc02918 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x13afbc02710 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x13afbc02788 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc02800 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc02c28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x13afbc02ab8 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x13afbc02b30 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x13afbc02cd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc030e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x13afbc02e18 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x13afbc02e90 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x13afbc02f08 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbc03528 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x13afbc031c0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x13afbc03238 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x13afbc032b0 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc03328 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc03788 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x13afbc03610 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x13afbc03688 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x13afbc03a70 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x13afbc03860 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x13afbc038d8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x13afbc03950 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc03cc8 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x13afbc03b50 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x13afbc03bc8 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x13afbc03ff8 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x13afbc03da0 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x13afbc03e60 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x13afbc03ed8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc042e8 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x13afbc040d8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x13afbc04150 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x13afbc041c8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbc04670 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x13afbc043c8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x13afbc04440 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x13afbc044b8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc04530 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc04968 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x13afbc04758 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x13afbc047d0 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x13afbc04848 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbc04cf0 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x13afbc04a48 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x13afbc04ac0 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x13afbc04b38 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbc04bb0 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbc04f50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x13afbc04e78 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x13afbc04ff8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x13afbc05330 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x13afbc051b8 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x13afbc05230 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x13afbc053e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x13afbc057b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x13afbc055a0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x13afbc05618 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x13afbc05690 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x13afbc05868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x13afbc05c30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x13afbc05a28 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x13afbc05aa0 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x13afbc05b18 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x13afbc05ce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x13afbc07018 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x13afbc06f40 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x13afbc070c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x13afbc073f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x13afbc07280 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x13afbc072f8 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x13afbc074a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x13afbc07738 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x13afbc07660 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x13afbc077e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x13afbc07a78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x13afbc079a0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x13afbc07b20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x13afbc07e58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x13afbc07ce0 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x13afbc07d58 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x13afbc07f08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-TypedefDecl 0x13afbc08058 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:89:1, col:14> col:14 referenced clock_t 'long'
| `-BuiltinType 0x13af9f0f4c0 'long'
|-RecordDecl 0x13afbc080b0 <line:113:1, line:123:9> line:113:8 struct tm definition
| |-MaxFieldAlignmentAttr 0x13afbc08170 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x13afbc081e8 <line:114:9, col:13> col:13 tm_sec 'int'
| |-FieldDecl 0x13afbc08258 <line:115:9, col:13> col:13 tm_min 'int'
| |-FieldDecl 0x13afbc082c8 <line:116:9, col:13> col:13 tm_hour 'int'
| |-FieldDecl 0x13afbc08338 <line:117:9, col:13> col:13 tm_mday 'int'
| |-FieldDecl 0x13afbc083a8 <line:118:9, col:13> col:13 tm_mon 'int'
| |-FieldDecl 0x13afbc08418 <line:119:9, col:13> col:13 tm_year 'int'
| |-FieldDecl 0x13afbc08488 <line:120:9, col:13> col:13 tm_wday 'int'
| |-FieldDecl 0x13afbc084f8 <line:121:9, col:13> col:13 tm_yday 'int'
| `-FieldDecl 0x13afbc08568 <line:122:9, col:13> col:13 tm_isdst 'int'
|-FunctionDecl 0x13afbc08750 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:147:99> col:84 __daylight 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x13afbc087f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_daylight instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbc08b40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:151:98> col:84 __dstbias 'long *(void) __attribute__((cdecl))':'long *(void)'
| `-DeprecatedAttr 0x13afbc08be0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_dstbias instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd674a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:155:100> col:85 __timezone 'long *(void) __attribute__((cdecl))':'long *(void)'
| `-DeprecatedAttr 0x13afbd67540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_timezone instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd67800 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:159:112> col:99 __tzname 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x13afbd678a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_tzname instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd67ac0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:162:9, col:60> col:25 _get_daylight 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x13afbd679e8 <col:45, col:51> col:51 _Daylight 'int *'
|-FunctionDecl 0x13afbd67d10 <line:163:9, col:73> col:25 _get_dstbias 'errno_t (long *) __attribute__((cdecl))':'errno_t (long *)'
| `-ParmVarDecl 0x13afbd67b98 <col:44, col:51> col:51 _Daylight_savings_bias 'long *'
|-FunctionDecl 0x13afbd67ec0 <line:164:9, col:61> col:25 _get_timezone 'errno_t (long *) __attribute__((cdecl))':'errno_t (long *)'
| `-ParmVarDecl 0x13afbd67de8 <col:45, col:52> col:52 _Timezone 'long *'
|-FunctionDecl 0x13afbd68308 <line:165:9, col:150> col:25 _get_tzname 'errno_t (size_t *, char *, size_t, int) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, int)'
| |-ParmVarDecl 0x13afbd67f90 <col:43, col:51> col:51 _ReturnValue 'size_t *'
| |-ParmVarDecl 0x13afbd68010 <col:94, col:100> col:100 _Buffer 'char *'
| |-ParmVarDecl 0x13afbd68088 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbd68108 <col:140, col:144> col:144 _Index 'int'
|-FunctionDecl 0x13afbd686c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:174:108> col:74 asctime 'char *(const struct tm *) __attribute__((cdecl))':'char *(const struct tm *)'
| |-ParmVarDecl 0x13afbd68550 <col:87, col:105> col:105 _Tm 'const struct tm *'
| `-DeprecatedAttr 0x13afbd68770 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using asctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd68b90 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:176:28, col:170> col:44 asctime_s 'errno_t (char *, size_t, const struct tm *) __attribute__((cdecl))':'errno_t (char *, size_t, const struct tm *)'
| |-ParmVarDecl 0x13afbd688b8 <col:106, col:112> col:112 _Buf 'char *'
| |-ParmVarDecl 0x13afbd68930 <col:123, col:130> col:130 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbd689c0 <col:149, col:167> col:167 _Tm 'const struct tm *'
|-FunctionDecl 0x13afbd68f28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:180:98> col:60 _ctime32 'char *(const __time32_t *) __attribute__((cdecl))':'char *(const __time32_t *)'
| |-ParmVarDecl 0x13afbd68da8 <col:74, col:93> col:93 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x13afbd68fd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ctime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd71510 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:181:9, col:154> col:25 _ctime32_s 'errno_t (char *, size_t, const __time32_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time32_t *)'
| |-ParmVarDecl 0x13afbd69118 <col:88, col:94> col:94 _Buf 'char *'
| |-ParmVarDecl 0x13afbd69190 <col:105, col:112> col:112 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbd69208 <col:131, col:149> col:149 _Time 'const __time32_t *'
|-FunctionDecl 0x13afbd71758 <line:184:24, col:50> col:40 used clock 'clock_t (void) __attribute__((cdecl))':'clock_t (void)'
|-FunctionDecl 0x13afbd71a40 <line:185:9, col:82> col:24 _difftime32 'double (__time32_t, __time32_t) __attribute__((cdecl))':'double (__time32_t, __time32_t)'
| |-ParmVarDecl 0x13afbd71820 <col:41, col:52> col:52 _Time1 '__time32_t':'long'
| `-ParmVarDecl 0x13afbd71898 <col:65, col:76> col:76 _Time2 '__time32_t':'long'
|-FunctionDecl 0x13afbd71dc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:187:120> col:81 _gmtime32 'struct tm *(const __time32_t *) __attribute__((cdecl))':'struct tm *(const __time32_t *)'
| |-ParmVarDecl 0x13afbd71bd8 <col:96, col:115> col:115 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x13afbd71e70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gmtime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd721e8 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:188:28, col:106> col:44 _gmtime32_s 'errno_t (struct tm *, const __time32_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time32_t *)'
| |-ParmVarDecl 0x13afbd71fc8 <col:61, col:72> col:72 _Tm 'struct tm *'
| `-ParmVarDecl 0x13afbd72040 <col:82, col:101> col:101 _Time 'const __time32_t *'
|-FunctionDecl 0x13afbd72478 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:190:111> col:69 _localtime32 'struct tm *(const __time32_t *) __attribute__((cdecl))':'struct tm *(const __time32_t *)'
| |-ParmVarDecl 0x13afbd72388 <col:87, col:106> col:106 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x13afbd72520 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _localtime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd727f0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:191:9, col:91> col:25 _localtime32_s 'errno_t (struct tm *, const __time32_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time32_t *)'
| |-ParmVarDecl 0x13afbd72680 <col:46, col:57> col:57 _Tm 'struct tm *'
| `-ParmVarDecl 0x13afbd726f8 <col:67, col:86> col:86 _Time 'const __time32_t *'
|-FunctionDecl 0x13afbd72c58 <line:193:9, col:179> col:24 strftime 'size_t (char *, size_t, const char *, const struct tm *) __attribute__((cdecl))':'size_t (char *, size_t, const char *, const struct tm *)'
| |-ParmVarDecl 0x13afbd728d0 <col:62, col:69> col:69 _Buf 'char *'
| |-ParmVarDecl 0x13afbd72948 <col:80, col:87> col:87 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbd729c8 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x13afbd72a58 <col:158, col:176> col:176 _Tm 'const struct tm *'
|-FunctionDecl 0x13afbd73180 <line:194:9, col:199> col:24 _strftime_l 'size_t (char *, size_t, const char *, const struct tm *, _locale_t) __attribute__((cdecl))':'size_t (char *, size_t, const char *, const struct tm *, _locale_t)'
| |-ParmVarDecl 0x13afbd72d48 <col:59, col:65> col:65 _Buf 'char *'
| |-ParmVarDecl 0x13afbd72dc0 <col:76, col:83> col:83 _Max_size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbd72e40 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x13afbd72ed0 <col:151, col:168> col:168 _Tm 'const struct tm *'
| `-ParmVarDecl 0x13afbd72f48 <col:182, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd733e8 <line:196:28, col:142> col:44 _strdate_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x13afbd73278 <col:106, col:112> col:112 _Buf 'char *'
| `-ParmVarDecl 0x13afbd732f0 <col:123, col:130> col:130 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbd736d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:198:79 _strdate 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x13afbd735f8 <col:108, col:114> col:114 _Buffer 'char *'
| `-DeprecatedAttr 0x13afbd73780 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strdate_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd73a38 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:200:28, col:143> col:44 _strtime_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x13afbd738c8 <col:106, col:112> col:112 _Buf 'char *'
| `-ParmVarDecl 0x13afbd73940 <col:124, col:131> col:131 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbd73cb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:202:79 _strtime 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x13afbd73bd8 <col:108, col:114> col:114 _Buffer 'char *'
| `-DeprecatedAttr 0x13afbd73d60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd74040 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:204:9, col:64> col:28 _time32 '__time32_t (__time32_t *) __attribute__((cdecl))':'__time32_t (__time32_t *)'
| `-ParmVarDecl 0x13afbd73ec8 <col:46, col:59> col:59 _Time '__time32_t *'
|-FunctionDecl 0x13afbd742a0 <line:205:9, col:61> col:28 _mktime32 '__time32_t (struct tm *) __attribute__((cdecl))':'__time32_t (struct tm *)'
| `-ParmVarDecl 0x13afbd74128 <col:46, col:58> col:58 _Tm 'struct tm *'
|-FunctionDecl 0x13afbd74460 <line:206:9, col:63> col:28 _mkgmtime32 '__time32_t (struct tm *) __attribute__((cdecl))':'__time32_t (struct tm *)'
| `-ParmVarDecl 0x13afbd74388 <col:48, col:60> col:60 _Tm 'struct tm *'
|-FunctionDecl 0x13afbd745e8 <line:210:9, col:33> col:22 _tzset 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x13afbd748d0 <line:214:24, col:97> col:39 used _difftime64 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)'
| |-ParmVarDecl 0x13afbd746b0 <col:56, col:67> col:67 _Time1 '__time64_t':'long long'
| `-ParmVarDecl 0x13afbd74728 <col:80, col:91> col:91 _Time2 '__time64_t':'long long'
|-FunctionDecl 0x13afbd74c18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:215:98> col:60 used _ctime64 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)'
| |-ParmVarDecl 0x13afbd74a98 <col:74, col:93> col:93 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x13afbd74cc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ctime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd750d0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:216:9, col:132> col:25 used _ctime64_s 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)'
| |-ParmVarDecl 0x13afbd74e08 <col:65, col:71> col:71 _Buf 'char *'
| |-ParmVarDecl 0x13afbd74e80 <col:82, col:89> col:89 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbd74ef8 <col:108, col:127> col:127 _Time 'const __time64_t *'
|-FunctionDecl 0x13afbd753f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:219:105> col:66 used _gmtime64 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |-ParmVarDecl 0x13afbd75270 <col:81, col:100> col:100 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x13afbd754a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gmtime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd75858 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:220:9, col:87> col:25 used _gmtime64_s 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
| |-ParmVarDecl 0x13afbd75640 <col:43, col:54> col:54 _Tm 'struct tm *'
| `-ParmVarDecl 0x13afbd756b8 <col:64, col:82> col:82 _Time 'const __time64_t *'
|-FunctionDecl 0x13afbd75ae8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:222:111> col:69 used _localtime64 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |-ParmVarDecl 0x13afbd759f8 <col:87, col:106> col:106 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x13afbd75b90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _localtime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd75e60 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:223:9, col:90> col:25 used _localtime64_s 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
| |-ParmVarDecl 0x13afbd75cf0 <col:46, col:57> col:57 _Tm 'struct tm *'
| `-ParmVarDecl 0x13afbd75d68 <col:67, col:85> col:85 _Time 'const __time64_t *'
|-FunctionDecl 0x13afbd760c0 <line:225:9, col:61> col:28 used _mktime64 '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
| `-ParmVarDecl 0x13afbd75f50 <col:46, col:58> col:58 _Tm 'struct tm *'
|-FunctionDecl 0x13afbd76280 <line:226:9, col:63> col:28 used _mkgmtime64 '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
| `-ParmVarDecl 0x13afbd761a8 <col:48, col:60> col:60 _Tm 'struct tm *'
|-FunctionDecl 0x13afbd764f0 <line:227:9, col:64> col:28 used _time64 '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)'
| `-ParmVarDecl 0x13afbd76378 <col:46, col:59> col:59 _Time '__time64_t *'
|-FunctionDecl 0x13afbd76818 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:231:79> col:46 _getsystime 'unsigned int (struct tm *) __attribute__((cdecl))':'unsigned int (struct tm *)'
| |-ParmVarDecl 0x13afbd766a0 <col:64, col:76> col:76 _Tm 'struct tm *'
| `-DeprecatedAttr 0x13afbd768c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using GetLocalTime instead. See online help for details." ""
|-FunctionDecl 0x13afbd76d10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:232:98> col:46 _setsystime 'unsigned int (struct tm *, unsigned int) __attribute__((cdecl))':'unsigned int (struct tm *, unsigned int)'
| |-ParmVarDecl 0x13afbd76ae8 <col:63, col:75> col:75 _Tm 'struct tm *'
| |-ParmVarDecl 0x13afbd76b68 <col:80, col:89> col:89 _MilliSec 'unsigned int'
| `-DeprecatedAttr 0x13afbd76dc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetLocalTime instead. See online help for details." ""
|-FunctionDecl 0x13afbd77150 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:245:100> col:64 _wasctime 'wchar_t *(const struct tm *) __attribute__((cdecl))':'wchar_t *(const struct tm *)'
| |-ParmVarDecl 0x13afbd76fe0 <col:79, col:97> col:97 _Tm 'const struct tm *'
| `-DeprecatedAttr 0x13afbd771f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wasctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd77620 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:246:9, col:156> col:25 _wasctime_s 'errno_t (wchar_t *, size_t, const struct tm *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const struct tm *)'
| |-ParmVarDecl 0x13afbd77338 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x13afbd773b0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbd77440 <col:135, col:153> col:153 _Tm 'const struct tm *'
|-FunctionDecl 0x13afbd77930 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:249:102> col:64 _wctime32 'wchar_t *(const __time32_t *) __attribute__((cdecl))':'wchar_t *(const __time32_t *)'
| |-ParmVarDecl 0x13afbd777c0 <col:79, col:97> col:97 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x13afbd779d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd77de0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:250:9, col:159> col:25 _wctime32_s 'errno_t (wchar_t *, size_t, const __time32_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time32_t *)'
| |-ParmVarDecl 0x13afbd77b18 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x13afbd77b90 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbd77c08 <col:135, col:154> col:154 _Time 'const __time32_t *'
|-FunctionDecl 0x13afbd78248 <line:253:9, col:186> col:24 wcsftime 'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *) __attribute__((cdecl))':'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *)'
| |-ParmVarDecl 0x13afbd77ec0 <col:62, col:72> col:72 _Buf 'wchar_t *'
| |-ParmVarDecl 0x13afbd77f38 <col:83, col:90> col:90 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbd77fb0 <col:134, col:150> col:150 _Format 'const wchar_t *'
| `-ParmVarDecl 0x13afbd78040 <col:165, col:183> col:183 _Tm 'const struct tm *'
|-FunctionDecl 0x13afbd78760 <line:254:9, col:214> col:24 _wcsftime_l 'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *, _locale_t)'
| |-ParmVarDecl 0x13afbd78330 <col:65, col:75> col:75 _Buf 'wchar_t *'
| |-ParmVarDecl 0x13afbd783a8 <col:86, col:93> col:93 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbd78420 <col:137, col:152> col:152 _Format 'const wchar_t *'
| |-ParmVarDecl 0x13afbd784b0 <col:166, col:183> col:183 _Tm 'const struct tm *'
| `-ParmVarDecl 0x13afbd78528 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd789c0 <line:256:9, col:128> col:25 _wstrdate_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x13afbd78850 <col:88, col:98> col:98 _Buf 'wchar_t *'
| `-ParmVarDecl 0x13afbd788c8 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbd78c30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:258:82 _wstrdate 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x13afbd78b58 <col:112, col:121> col:121 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x13afbd78cd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wstrdate_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd78f88 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:260:9, col:128> col:25 _wstrtime_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x13afbd78e18 <col:88, col:98> col:98 _Buf 'wchar_t *'
| `-ParmVarDecl 0x13afbd78e90 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x13afbd791f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:262:82 _wstrtime 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x13afbd79120 <col:112, col:121> col:121 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x13afbd792a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wstrtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd695c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:264:103> col:64 used _wctime64 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)'
| |-ParmVarDecl 0x13afbd794a0 <col:79, col:98> col:98 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x13afbd69668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd69a70 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:265:9, col:158> col:25 used _wctime64_s 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)'
| |-ParmVarDecl 0x13afbd697a8 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x13afbd69820 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x13afbd69898 <col:135, col:153> col:153 _Time 'const __time64_t *'
|-FunctionDecl 0x13afbd69ce0 <D:\Microsoft Visual Studio 12.0\VC\include\wtime.inl:44:1, line:50:1> line:44:37 _wctime 'wchar_t *(const time_t *) __attribute__((cdecl))':'wchar_t *(const time_t *)' static inline
| |-ParmVarDecl 0x13afbd69b98 <col:45, col:60> col:60 used _Time 'const time_t *'
| `-CompoundStmt 0x13afbd69ea0 <line:45:1, line:50:1>
|   `-ReturnStmt 0x13afbd69e90 <line:48:5, col:27>
|     `-CallExpr 0x13afbd69e50 <col:12, col:27> 'wchar_t *'
|       |-ImplicitCastExpr 0x13afbd69e38 <col:12> 'wchar_t *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x13afbd69da0 <col:12> 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)' Function 0x13afbd695c0 '_wctime64' 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)'
|       `-ImplicitCastExpr 0x13afbd69e78 <col:22> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x13afbd69dc0 <col:22> 'const time_t *' lvalue ParmVar 0x13afbd69b98 '_Time' 'const time_t *'
|-FunctionDecl 0x13afbd6a150 <line:52:1, line:55:1> line:52:35 _wctime_s 'errno_t (wchar_t *, size_t, const time_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const time_t *)' static inline
| |-ParmVarDecl 0x13afbd69ec8 <col:97, col:106> col:106 used _Buffer 'wchar_t *'
| |-ParmVarDecl 0x13afbd69f40 <col:115, col:122> col:122 used _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbd69fb8 <col:136, col:151> col:151 used _Time 'const time_t *'
| `-CompoundStmt 0x13afbd6a3a0 <line:53:1, line:55:1>
|   `-ReturnStmt 0x13afbd6a390 <line:54:5, col:52>
|     `-CallExpr 0x13afbd6a310 <col:12, col:52> 'errno_t':'int'
|       |-ImplicitCastExpr 0x13afbd6a2f8 <col:12> 'errno_t (*)(wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x13afbd6a220 <col:12> 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)' Function 0x13afbd69a70 '_wctime64_s' 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)'
|       |-ImplicitCastExpr 0x13afbd6a348 <col:24> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x13afbd6a240 <col:24> 'wchar_t *' lvalue ParmVar 0x13afbd69ec8 '_Buffer' 'wchar_t *'
|       |-ImplicitCastExpr 0x13afbd6a360 <col:33> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x13afbd6a260 <col:33> 'size_t':'unsigned long long' lvalue ParmVar 0x13afbd69f40 '_SizeInWords' 'size_t':'unsigned long long'
|       `-ImplicitCastExpr 0x13afbd6a378 <col:47> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x13afbd6a280 <col:47> 'const time_t *' lvalue ParmVar 0x13afbd69fb8 '_Time' 'const time_t *'
|-FunctionDecl 0x13afbd6a5b0 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:82:1, line:85:1> line:82:34 difftime 'double (time_t, time_t) __attribute__((cdecl))':'double (time_t, time_t)' static inline
| |-ParmVarDecl 0x13afbd6a3c8 <col:43, col:50> col:50 used _Time1 'time_t':'long long'
| |-ParmVarDecl 0x13afbd6a440 <col:58, col:65> col:65 used _Time2 'time_t':'long long'
| `-CompoundStmt 0x13afbd6a7c0 <line:83:1, line:85:1>
|   `-ReturnStmt 0x13afbd6a7b0 <line:84:5, col:37>
|     `-CallExpr 0x13afbd6a750 <col:12, col:37> 'double'
|       |-ImplicitCastExpr 0x13afbd6a738 <col:12> 'double (*)(__time64_t, __time64_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x13afbd6a678 <col:12> 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)' Function 0x13afbd748d0 '_difftime64' 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)'
|       |-ImplicitCastExpr 0x13afbd6a780 <col:24> 'time_t':'long long' <LValueToRValue>
|       | `-DeclRefExpr 0x13afbd6a698 <col:24> 'time_t':'long long' lvalue ParmVar 0x13afbd6a3c8 '_Time1' 'time_t':'long long'
|       `-ImplicitCastExpr 0x13afbd6a798 <col:31> 'time_t':'long long' <LValueToRValue>
|         `-DeclRefExpr 0x13afbd6a6b8 <col:31> 'time_t':'long long' lvalue ParmVar 0x13afbd6a440 '_Time2' 'time_t':'long long'
|-FunctionDecl 0x13afbd6a9f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:92:1> line:86:67 ctime 'char *(const time_t *) __attribute__((cdecl))':'char *(const time_t *)' static inline
| |-ParmVarDecl 0x13afbd6a8a8 <col:73, col:88> col:88 used _Time 'const time_t *'
| |-CompoundStmt 0x13afbd6acd0 <line:87:1, line:92:1>
| | `-ReturnStmt 0x13afbd6acc0 <line:90:5, col:26>
| |   `-CallExpr 0x13afbd6ac80 <col:12, col:26> 'char *'
| |     |-ImplicitCastExpr 0x13afbd6ac68 <col:12> 'char *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x13afbd6abd0 <col:12> 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)' Function 0x13afbd74c18 '_ctime64' 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x13afbd6aca8 <col:21> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x13afbd6abf0 <col:21> 'const time_t *' lvalue ParmVar 0x13afbd6a8a8 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x13afbd6aaa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using ctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd6af80 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:94:1, line:97:1> line:94:35 ctime_s 'errno_t (char *, size_t, const time_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const time_t *)' static inline
| |-ParmVarDecl 0x13afbd6ad00 <col:43, col:49> col:49 used _Buffer 'char *'
| |-ParmVarDecl 0x13afbd6ad78 <col:58, col:65> col:65 used _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbd6adf0 <col:79, col:94> col:94 used _Time 'const time_t *'
| `-CompoundStmt 0x13afbd6b1d0 <line:95:1, line:97:1>
|   `-ReturnStmt 0x13afbd6b1c0 <line:96:5, col:51>
|     `-CallExpr 0x13afbd6b140 <col:12, col:51> 'errno_t':'int'
|       |-ImplicitCastExpr 0x13afbd6b128 <col:12> 'errno_t (*)(char *, size_t, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x13afbd6b050 <col:12> 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)' Function 0x13afbd750d0 '_ctime64_s' 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)'
|       |-ImplicitCastExpr 0x13afbd6b178 <col:23> 'char *' <LValueToRValue>
|       | `-DeclRefExpr 0x13afbd6b070 <col:23> 'char *' lvalue ParmVar 0x13afbd6ad00 '_Buffer' 'char *'
|       |-ImplicitCastExpr 0x13afbd6b190 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x13afbd6b090 <col:32> 'size_t':'unsigned long long' lvalue ParmVar 0x13afbd6ad78 '_SizeInBytes' 'size_t':'unsigned long long'
|       `-ImplicitCastExpr 0x13afbd6b1a8 <col:46> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x13afbd6b0b0 <col:46> 'const time_t *' lvalue ParmVar 0x13afbd6adf0 '_Time' 'const time_t *'
|-FunctionDecl 0x13afbd6b418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:105:1> line:99:73 gmtime 'struct tm *(const time_t *) __attribute__((cdecl))':'struct tm *(const time_t *)' static inline
| |-ParmVarDecl 0x13afbd6b2b8 <col:80, col:95> col:95 used _Time 'const time_t *'
| |-CompoundStmt 0x13afbd6d720 <line:100:1, line:105:1>
| | `-ReturnStmt 0x13afbd6d710 <line:103:5, col:27>
| |   `-CallExpr 0x13afbd6d6d0 <col:12, col:27> 'struct tm *'
| |     |-ImplicitCastExpr 0x13afbd6d6b8 <col:12> 'struct tm *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x13afbd6d620 <col:12> 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)' Function 0x13afbd753f8 '_gmtime64' 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x13afbd6d6f8 <col:22> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x13afbd6d640 <col:22> 'const time_t *' lvalue ParmVar 0x13afbd6b2b8 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x13afbd6d4f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gmtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd6d938 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:107:1, line:110:1> line:107:35 gmtime_s 'errno_t (struct tm *, const time_t *) __attribute__((cdecl))':'errno_t (struct tm *, const time_t *)' static inline
| |-ParmVarDecl 0x13afbd6d760 <col:44, col:56> col:56 used _Tm 'struct tm *'
| |-ParmVarDecl 0x13afbd6d7d8 <col:61, col:76> col:76 used _Time 'const time_t *'
| `-CompoundStmt 0x13afbd6db40 <line:108:1, line:110:1>
|   `-ReturnStmt 0x13afbd6db30 <line:109:5, col:34>
|     `-CallExpr 0x13afbd6dad0 <col:12, col:34> 'errno_t':'int'
|       |-ImplicitCastExpr 0x13afbd6dab8 <col:12> 'errno_t (*)(struct tm *, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x13afbd6da00 <col:12> 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)' Function 0x13afbd75858 '_gmtime64_s' 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
|       |-ImplicitCastExpr 0x13afbd6db00 <col:24> 'struct tm *' <LValueToRValue>
|       | `-DeclRefExpr 0x13afbd6da20 <col:24> 'struct tm *' lvalue ParmVar 0x13afbd6d760 '_Tm' 'struct tm *'
|       `-ImplicitCastExpr 0x13afbd6db18 <col:29> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x13afbd6da40 <col:29> 'const time_t *' lvalue ParmVar 0x13afbd6d7d8 '_Time' 'const time_t *'
|-FunctionDecl 0x13afbd6dd18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:118:1> line:112:76 localtime 'struct tm *(const time_t *) __attribute__((cdecl))':'struct tm *(const time_t *)' static inline
| |-ParmVarDecl 0x13afbd6dc28 <col:86, col:101> col:101 used _Time 'const time_t *'
| |-CompoundStmt 0x13afbd6df98 <line:113:1, line:118:1>
| | `-ReturnStmt 0x13afbd6df88 <line:116:5, col:30>
| |   `-CallExpr 0x13afbd6df48 <col:12, col:30> 'struct tm *'
| |     |-ImplicitCastExpr 0x13afbd6df30 <col:12> 'struct tm *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x13afbd6def0 <col:12> 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)' Function 0x13afbd75ae8 '_localtime64' 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x13afbd6df70 <col:25> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x13afbd6df10 <col:25> 'const time_t *' lvalue ParmVar 0x13afbd6dc28 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x13afbd6ddc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using localtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd6e148 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:119:1, line:122:1> line:119:35 localtime_s 'errno_t (struct tm *, const time_t *) __attribute__((cdecl))':'errno_t (struct tm *, const time_t *)' static inline
| |-ParmVarDecl 0x13afbd6dfd8 <col:47, col:59> col:59 used _Tm 'struct tm *'
| |-ParmVarDecl 0x13afbd6e050 <col:64, col:79> col:79 used _Time 'const time_t *'
| `-CompoundStmt 0x13afbd6e2f8 <line:120:1, line:122:1>
|   `-ReturnStmt 0x13afbd6e2e8 <line:121:5, col:37>
|     `-CallExpr 0x13afbd6e288 <col:12, col:37> 'errno_t':'int'
|       |-ImplicitCastExpr 0x13afbd6e270 <col:12> 'errno_t (*)(struct tm *, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x13afbd6e210 <col:12> 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)' Function 0x13afbd75e60 '_localtime64_s' 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
|       |-ImplicitCastExpr 0x13afbd6e2b8 <col:27> 'struct tm *' <LValueToRValue>
|       | `-DeclRefExpr 0x13afbd6e230 <col:27> 'struct tm *' lvalue ParmVar 0x13afbd6dfd8 '_Tm' 'struct tm *'
|       `-ImplicitCastExpr 0x13afbd6e2d0 <col:32> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x13afbd6e250 <col:32> 'const time_t *' lvalue ParmVar 0x13afbd6e050 '_Time' 'const time_t *'
|-FunctionDecl 0x13afbd6e480 <line:123:1, line:126:1> line:123:34 mktime 'time_t (struct tm *) __attribute__((cdecl))':'time_t (struct tm *)' static inline
| |-ParmVarDecl 0x13afbd6e338 <col:41, col:53> col:53 used _Tm 'struct tm *'
| `-CompoundStmt 0x13afbd6e640 <line:124:1, line:126:1>
|   `-ReturnStmt 0x13afbd6e630 <line:125:5, col:25>
|     `-CallExpr 0x13afbd6e5f0 <col:12, col:25> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x13afbd6e5d8 <col:12> '__time64_t (*)(struct tm *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x13afbd6e540 <col:12> '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)' Function 0x13afbd760c0 '_mktime64' '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
|       `-ImplicitCastExpr 0x13afbd6e618 <col:22> 'struct tm *' <LValueToRValue>
|         `-DeclRefExpr 0x13afbd6e560 <col:22> 'struct tm *' lvalue ParmVar 0x13afbd6e338 '_Tm' 'struct tm *'
|-FunctionDecl 0x13afbd6e758 <line:127:1, line:130:1> line:127:34 _mkgmtime 'time_t (struct tm *) __attribute__((cdecl))':'time_t (struct tm *)' static inline
| |-ParmVarDecl 0x13afbd6e680 <col:44, col:56> col:56 used _Tm 'struct tm *'
| `-CompoundStmt 0x13afbd6e8c0 <line:128:1, line:130:1>
|   `-ReturnStmt 0x13afbd6e8b0 <line:129:5, col:27>
|     `-CallExpr 0x13afbd6e870 <col:12, col:27> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x13afbd6e858 <col:12> '__time64_t (*)(struct tm *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x13afbd6e818 <col:12> '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)' Function 0x13afbd76280 '_mkgmtime64' '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
|       `-ImplicitCastExpr 0x13afbd6e898 <col:24> 'struct tm *' <LValueToRValue>
|         `-DeclRefExpr 0x13afbd6e838 <col:24> 'struct tm *' lvalue ParmVar 0x13afbd6e680 '_Tm' 'struct tm *'
|-FunctionDecl 0x13afbd6ea60 <line:131:1, line:134:1> line:131:34 time 'time_t (time_t *) __attribute__((cdecl))':'time_t (time_t *)' static inline
| |-ParmVarDecl 0x13afbd6e918 <col:39, col:48> col:48 used _Time 'time_t *'
| `-CompoundStmt 0x13afbd6ec20 <line:132:1, line:134:1>
|   `-ReturnStmt 0x13afbd6ec10 <line:133:5, col:25>
|     `-CallExpr 0x13afbd6ebd0 <col:12, col:25> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x13afbd6ebb8 <col:12> '__time64_t (*)(__time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x13afbd6eb20 <col:12> '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)' Function 0x13afbd764f0 '_time64' '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)'
|       `-ImplicitCastExpr 0x13afbd6ebf8 <col:20> 'time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x13afbd6eb40 <col:20> 'time_t *' lvalue ParmVar 0x13afbd6e918 '_Time' 'time_t *'
|-VarDecl 0x13afbd6ed10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:291:67> col:67 daylight 'int' extern
| `-DeprecatedAttr 0x13afbd6ed78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_daylight instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x13afbd6ef80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:292:68> col:68 timezone 'long' extern
| `-DeprecatedAttr 0x13afbd6efe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_timezone instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x13afbd6f280 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:293:76> col:68 tzname 'char *[2]' extern
| `-DeprecatedAttr 0x13afbd6f2e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_tzname instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x13afbd6f5b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:297:63> col:53 tzset 'void (void) __attribute__((cdecl))':'void (void)'
| `-DeprecatedAttr 0x13afbd6f658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tzset. See online help for details." ""
|-FunctionDecl 0x13afbd6f890 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:49:9, col:58> col:40 __pctype_func 'const unsigned short *(void) __attribute__((cdecl))':'const unsigned short *(void)'
|-VarDecl 0x13afbd6f960 <line:51:9, col:38> col:38 _pctype 'const unsigned short *' extern
|-VarDecl 0x13afbd6fa60 <line:62:9, col:45> col:37 _wctype 'const unsigned short []' extern
|-FunctionDecl 0x13afbd6fc58 <line:73:9, col:53> col:34 __pwctype_func 'const wctype_t *(void) __attribute__((cdecl))':'const wctype_t *(void)'
|-VarDecl 0x13afbd6fd20 <line:75:9, col:32> col:32 _pwctype 'const wctype_t *' extern
|-FunctionDecl 0x13afbd6ffa0 <line:119:24, col:72> col:36 _isctype 'int (int, int) __attribute__((cdecl))':'int (int, int)'
| |-ParmVarDecl 0x13afbd6fdb8 <col:50, col:54> col:54 _C 'int'
| `-ParmVarDecl 0x13afbd6fe38 <col:63, col:67> col:67 _Type 'int'
|-FunctionDecl 0x13afbd70358 <line:120:24, col:102> col:36 _isctype_l 'int (int, int, _locale_t) __attribute__((cdecl))':'int (int, int, _locale_t)'
| |-ParmVarDecl 0x13afbd70080 <col:52, col:56> col:56 _C 'int'
| |-ParmVarDecl 0x13afbd70100 <col:65, col:69> col:69 _Type 'int'
| `-ParmVarDecl 0x13afbd70178 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd70520 <line:121:55> col:55 implicit isalpha 'int (int)' extern
| |-ParmVarDecl 0x13afbd705c0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x13afbd70630 <col:55> Implicit
| `-PureAttr 0x13afbd70688 <col:55> Implicit
|-FunctionDecl 0x13afbd706b0 prev 0x13afbd70520 <col:43, col:74> col:55 isalpha 'int (int)'
| |-ParmVarDecl 0x13afbd70440 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x13afbd707a0 <col:55> Inherited Implicit
| `-PureAttr 0x13afbd707c8 <col:55> Inherited Implicit
|-FunctionDecl 0x13afbd70a30 <line:122:24, col:86> col:36 _isalpha_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x13afbd70808 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x13afbd70880 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd70bf0 <line:123:55> col:55 implicit isupper 'int (int)' extern
| |-ParmVarDecl 0x13afbd70c90 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x13afbd70d00 <col:55> Implicit
| `-PureAttr 0x13afbd70d58 <col:55> Implicit
|-FunctionDecl 0x13afbd70d80 prev 0x13afbd70bf0 <col:43, col:74> col:55 isupper 'int (int)'
| |-ParmVarDecl 0x13afbd70b10 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x13afbd70e70 <col:55> Inherited Implicit
| `-PureAttr 0x13afbd70e98 <col:55> Inherited Implicit
|-FunctionDecl 0x13afbd71050 <line:124:24, col:86> col:36 _isupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x13afbd70ed8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x13afbd70f50 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd71210 <line:125:55> col:55 implicit islower 'int (int)' extern
| |-ParmVarDecl 0x13afbd712b0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x13afbd71320 <col:55> Implicit
| `-PureAttr 0x13afbd71378 <col:55> Implicit
|-FunctionDecl 0x13afbd713a0 prev 0x13afbd71210 <col:43, col:74> col:55 islower 'int (int)'
| |-ParmVarDecl 0x13afbd71130 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x13afbd71490 <col:55> Inherited Implicit
| `-PureAttr 0x13afbd714b8 <col:55> Inherited Implicit
|-FunctionDecl 0x13afbd796c8 <line:126:24, col:86> col:36 _islower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x13afbd79550 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x13afbd795c8 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd79888 <line:127:55> col:55 implicit isdigit 'int (int)' extern
| |-ParmVarDecl 0x13afbd79928 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x13afbd79998 <col:55> Implicit
| `-PureAttr 0x13afbd799f0 <col:55> Implicit
|-FunctionDecl 0x13afbd79a18 prev 0x13afbd79888 <col:43, col:74> col:55 isdigit 'int (int)'
| |-ParmVarDecl 0x13afbd797a8 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x13afbd79b08 <col:55> Inherited Implicit
| `-PureAttr 0x13afbd79b30 <col:55> Inherited Implicit
|-FunctionDecl 0x13afbd79ce8 <line:128:24, col:86> col:36 _isdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x13afbd79b70 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x13afbd79be8 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd79ea8 <line:129:36> col:36 implicit isxdigit 'int (int)' extern
| |-ParmVarDecl 0x13afbd79f48 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x13afbd79fb8 <col:36> Implicit
| `-PureAttr 0x13afbd7a010 <col:36> Implicit
|-FunctionDecl 0x13afbd7a038 prev 0x13afbd79ea8 <col:24, col:56> col:36 isxdigit 'int (int)'
| |-ParmVarDecl 0x13afbd79dc8 <col:50, col:54> col:54 _C 'int'
| |-NoThrowAttr 0x13afbd7a128 <col:36> Inherited Implicit
| `-PureAttr 0x13afbd7a150 <col:36> Inherited Implicit
|-FunctionDecl 0x13afbd7a308 <line:130:24, col:87> col:36 _isxdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x13afbd7a190 <col:53, col:57> col:57 _C 'int'
| `-ParmVarDecl 0x13afbd7a208 <col:70, col:80> col:80 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd7a4c8 <line:131:55> col:55 implicit isspace 'int (int)' extern
| |-ParmVarDecl 0x13afbd7a568 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x13afbd7a5d8 <col:55> Implicit
| `-PureAttr 0x13afbd7a630 <col:55> Implicit
|-FunctionDecl 0x13afbd7a658 prev 0x13afbd7a4c8 <col:43, col:74> col:55 isspace 'int (int)'
| |-ParmVarDecl 0x13afbd7a3e8 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x13afbd7a748 <col:55> Inherited Implicit
| `-PureAttr 0x13afbd7a770 <col:55> Inherited Implicit
|-FunctionDecl 0x13afbd7a928 <line:132:24, col:86> col:36 _isspace_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x13afbd7a7b0 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x13afbd7a828 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd7aae8 <line:133:36> col:36 implicit ispunct 'int (int)' extern
| |-ParmVarDecl 0x13afbd7ab88 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x13afbd7abf8 <col:36> Implicit
| `-PureAttr 0x13afbd7ac50 <col:36> Implicit
|-FunctionDecl 0x13afbd7ac78 prev 0x13afbd7aae8 <col:24, col:55> col:36 ispunct 'int (int)'
| |-ParmVarDecl 0x13afbd7aa08 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x13afbd7ad68 <col:36> Inherited Implicit
| `-PureAttr 0x13afbd7ad90 <col:36> Inherited Implicit
|-FunctionDecl 0x13afbd7af48 <line:134:24, col:86> col:36 _ispunct_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x13afbd7add0 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x13afbd7ae48 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd7b108 <line:135:36> col:36 implicit isblank 'int (int)' extern
| |-ParmVarDecl 0x13afbd7b1a8 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x13afbd7b218 <col:36> Implicit
| `-PureAttr 0x13afbd7b270 <col:36> Implicit
|-FunctionDecl 0x13afbd7b298 prev 0x13afbd7b108 <col:24, col:55> col:36 isblank 'int (int)'
| |-ParmVarDecl 0x13afbd7b028 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x13afbd7b388 <col:36> Inherited Implicit
| `-PureAttr 0x13afbd7b3b0 <col:36> Inherited Implicit
|-FunctionDecl 0x13afbd6b520 <line:136:24, col:86> col:36 _isblank_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x13afbd7b3f0 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x13afbd7b468 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd6b6e0 <line:137:55> col:55 implicit isalnum 'int (int)' extern
| |-ParmVarDecl 0x13afbd6b780 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x13afbd6b7f0 <col:55> Implicit
| `-PureAttr 0x13afbd6b848 <col:55> Implicit
|-FunctionDecl 0x13afbd6b870 prev 0x13afbd6b6e0 <col:43, col:74> col:55 isalnum 'int (int)'
| |-ParmVarDecl 0x13afbd6b600 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x13afbd6b960 <col:55> Inherited Implicit
| `-PureAttr 0x13afbd6b988 <col:55> Inherited Implicit
|-FunctionDecl 0x13afbd6bb40 <line:138:24, col:86> col:36 _isalnum_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x13afbd6b9c8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x13afbd6ba40 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd6bd00 <line:139:36> col:36 implicit isprint 'int (int)' extern
| |-ParmVarDecl 0x13afbd6bda0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x13afbd6be10 <col:36> Implicit
| `-PureAttr 0x13afbd6be68 <col:36> Implicit
|-FunctionDecl 0x13afbd6be90 prev 0x13afbd6bd00 <col:24, col:55> col:36 isprint 'int (int)'
| |-ParmVarDecl 0x13afbd6bc20 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x13afbd6bf80 <col:36> Inherited Implicit
| `-PureAttr 0x13afbd6bfa8 <col:36> Inherited Implicit
|-FunctionDecl 0x13afbd6c160 <line:140:24, col:86> col:36 _isprint_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x13afbd6bfe8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x13afbd6c060 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd6c320 <line:141:36> col:36 implicit isgraph 'int (int)' extern
| |-ParmVarDecl 0x13afbd6c3c0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x13afbd6c430 <col:36> Implicit
| `-PureAttr 0x13afbd6c488 <col:36> Implicit
|-FunctionDecl 0x13afbd6c4b0 prev 0x13afbd6c320 <col:24, col:55> col:36 isgraph 'int (int)'
| |-ParmVarDecl 0x13afbd6c240 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x13afbd6c5a0 <col:36> Inherited Implicit
| `-PureAttr 0x13afbd6c5c8 <col:36> Inherited Implicit
|-FunctionDecl 0x13afbd6c780 <line:142:24, col:86> col:36 _isgraph_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x13afbd6c608 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x13afbd6c680 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd6c940 <line:143:36> col:36 implicit iscntrl 'int (int)' extern
| |-ParmVarDecl 0x13afbd6c9e0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x13afbd6ca50 <col:36> Implicit
| `-PureAttr 0x13afbd6caa8 <col:36> Implicit
|-FunctionDecl 0x13afbd6cad0 prev 0x13afbd6c940 <col:24, col:55> col:36 iscntrl 'int (int)'
| |-ParmVarDecl 0x13afbd6c860 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x13afbd6cbc0 <col:36> Inherited Implicit
| `-PureAttr 0x13afbd6cbe8 <col:36> Inherited Implicit
|-FunctionDecl 0x13afbd6cda0 <line:144:24, col:86> col:36 _iscntrl_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x13afbd6cc28 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x13afbd6cca0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd6cf60 <line:145:55> col:55 implicit toupper 'int (int)' extern
| |-ParmVarDecl 0x13afbd6d000 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x13afbd6d070 <col:55> Implicit
| `-PureAttr 0x13afbd6d0c8 <col:55> Implicit
|-FunctionDecl 0x13afbd6d0f0 prev 0x13afbd6cf60 <col:43, col:74> col:55 toupper 'int (int)'
| |-ParmVarDecl 0x13afbd6ce80 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x13afbd6d1e0 <col:55> Inherited Implicit
| `-PureAttr 0x13afbd6d208 <col:55> Inherited Implicit
|-FunctionDecl 0x13afbd6d328 <line:146:55> col:55 implicit tolower 'int (int)' extern
| |-ParmVarDecl 0x13afbd6d3c8 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x13afbd6d438 <col:55> Implicit
| `-PureAttr 0x13afbd6d490 <col:55> Implicit
|-FunctionDecl 0x13afbd81590 prev 0x13afbd6d328 <col:43, col:74> col:55 tolower 'int (int)'
| |-ParmVarDecl 0x13afbd6d248 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x13afbd81680 <col:55> Inherited Implicit
| `-PureAttr 0x13afbd816a8 <col:55> Inherited Implicit
|-FunctionDecl 0x13afbd817c8 <line:147:43, col:75> col:55 _tolower 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x13afbd816e8 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x13afbd81a18 <line:148:24, col:86> col:36 _tolower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x13afbd818a0 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x13afbd81918 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd81bd8 <line:149:43, col:75> col:55 _toupper 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x13afbd81af8 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x13afbd81e28 <line:150:24, col:86> col:36 _toupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x13afbd81cb0 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x13afbd81d28 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd81fe8 <line:151:24, col:57> col:36 __isascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x13afbd81f08 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x13afbd821a0 <line:152:24, col:57> col:36 __toascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x13afbd820c0 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x13afbd82358 <line:153:24, col:57> col:36 __iscsymf 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x13afbd82278 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x13afbd82510 <line:154:24, col:56> col:36 __iscsym 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x13afbd82430 <col:50, col:54> col:54 _C 'int'
|-FunctionDecl 0x13afbd82758 <line:164:24, col:59> col:36 iswalpha 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x13afbd825e0 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x13afbd82a50 <line:165:24, col:90> col:36 _iswalpha_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x13afbd82828 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x13afbd828a0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd82c08 <line:166:24, col:59> col:36 iswupper 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x13afbd82b28 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x13afbd82e50 <line:167:24, col:90> col:36 _iswupper_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x13afbd82cd8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x13afbd82d50 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd83008 <line:168:24, col:59> col:36 iswlower 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x13afbd82f28 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x13afbd83250 <line:169:24, col:90> col:36 _iswlower_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x13afbd830d8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x13afbd83150 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd83408 <line:170:24, col:59> col:36 iswdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x13afbd83328 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x13afbd836a0 <line:171:24, col:90> col:36 _iswdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x13afbd834d8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x13afbd835a0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd83858 <line:172:24, col:60> col:36 iswxdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x13afbd83778 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x13afbd83aa0 <line:173:24, col:91> col:36 _iswxdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x13afbd83928 <col:54, col:61> col:61 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x13afbd839a0 <col:74, col:84> col:84 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd83c58 <line:174:24, col:59> col:36 iswspace 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x13afbd83b78 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x13afbd83ea0 <line:175:24, col:90> col:36 _iswspace_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x13afbd83d28 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x13afbd83da0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd84058 <line:176:24, col:59> col:36 iswpunct 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x13afbd83f78 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x13afbd842a0 <line:177:24, col:90> col:36 _iswpunct_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x13afbd84128 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x13afbd841a0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd84458 <line:178:24, col:59> col:36 iswblank 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x13afbd84378 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x13afbd846a0 <line:179:24, col:90> col:36 _iswblank_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x13afbd84528 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x13afbd845a0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd84858 <line:180:24, col:59> col:36 iswalnum 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x13afbd84778 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x13afbd84aa0 <line:181:24, col:90> col:36 _iswalnum_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x13afbd84928 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x13afbd849a0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd84c58 <line:182:24, col:59> col:36 iswprint 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x13afbd84b78 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x13afbd84ea0 <line:183:24, col:90> col:36 _iswprint_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x13afbd84d28 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x13afbd84da0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd85058 <line:184:24, col:59> col:36 iswgraph 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x13afbd84f78 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x13afbd852a0 <line:185:24, col:90> col:36 _iswgraph_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x13afbd85128 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x13afbd851a0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd85458 <line:186:24, col:59> col:36 iswcntrl 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x13afbd85378 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x13afbd7b660 <line:187:24, col:90> col:36 _iswcntrl_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x13afbd85528 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x13afbd7b560 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd7b818 <line:188:24, col:59> col:36 iswascii 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x13afbd7b738 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x13afbd7ba30 <line:190:24, col:62> col:39 towupper 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x13afbd7b8e8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x13afbd7bd18 <line:191:24, col:93> col:39 _towupper_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x13afbd7bb00 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x13afbd7bb78 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd7bec8 <line:192:24, col:62> col:39 towlower 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x13afbd7bdf0 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x13afbd7c108 <line:193:24, col:93> col:39 _towlower_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x13afbd7bf98 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x13afbd7c010 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd7c400 <line:194:24, col:80> col:36 iswctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x13afbd7c1e0 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x13afbd7c258 <col:66, col:75> col:75 _Type 'wctype_t':'unsigned short'
|-FunctionDecl 0x13afbd7c7a8 <line:195:24, col:111> col:36 _iswctype_l 'int (wint_t, wctype_t, _locale_t) __attribute__((cdecl))':'int (wint_t, wctype_t, _locale_t)'
| |-ParmVarDecl 0x13afbd7c4d8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x13afbd7c550 <col:69, col:78> col:78 _Type 'wctype_t':'unsigned short'
| `-ParmVarDecl 0x13afbd7c5c8 <col:94, col:104> col:104 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd7c968 <line:197:24, col:61> col:36 __iswcsymf 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x13afbd7c888 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x13afbd7cbb0 <line:198:24, col:90> col:36 _iswcsymf_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x13afbd7ca38 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x13afbd7cab0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd7cd68 <line:199:24, col:60> col:36 __iswcsym 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x13afbd7cc88 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x13afbd7cfb0 <line:200:24, col:89> col:36 _iswcsym_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x13afbd7ce38 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x13afbd7ceb0 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd7d170 <line:203:24, col:58> col:36 isleadbyte 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x13afbd7d090 <col:52, col:56> col:56 _C 'int'
|-FunctionDecl 0x13afbd7d3c0 <line:204:24, col:89> col:36 _isleadbyte_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x13afbd7d248 <col:55, col:59> col:59 _C 'int'
| `-ParmVarDecl 0x13afbd7d2c0 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x13afbd7d6e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:205:90> col:45 is_wctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x13afbd7d570 <col:60, col:67> col:67 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x13afbd7d5e8 <col:76, col:85> col:85 _Type 'wctype_t':'unsigned short'
| `-DeprecatedAttr 0x13afbd7d798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using iswctype instead. See online help for details." ""
|-VarDecl 0x13afbd7d8e0 <.//openssl//file_jk/after\test\ssltest_old.c:109:1, col:17> col:17 invalid s_ctx 'int *' static
|-VarDecl 0x13afbd7d9e8 <line:110:1, col:17> col:17 invalid s_ctx2 'int *' static
|-FunctionDecl 0x13afbd7dc50 <line:118:1, col:55> col:12 invalid verify_callback 'int (int, int *)' static
| |-ParmVarDecl 0x13afbd7daf0 <col:28, col:32> col:32 ok 'int'
| `-ParmVarDecl 0x13afbd7db70 <col:36, col:52> col:52 invalid ctx 'int *'
|-FunctionDecl 0x13afbd7de70 <line:119:1, col:62> col:12 invalid app_verify_callback 'int (int *, void *)' static
| |-ParmVarDecl 0x13afbd7dd18 <col:32, col:48> col:48 invalid ctx 'int *'
| `-ParmVarDecl 0x13afbd7dd98 <col:53, col:59> col:59 arg 'void *'
|-RecordDecl 0x13afbd7df20 <line:121:1, line:124:1> line:121:8 struct app_verify_arg definition
| |-FieldDecl 0x13afbd7dff8 <line:122:5, col:11> col:11 referenced string 'char *'
| `-FieldDecl 0x13afbd7e068 <line:123:5, col:9> col:9 referenced app_verify 'int'
|-FunctionDecl 0x13afbd7e160 <line:127:1, col:26> col:12 invalid get_dh512 'int *(void)' static
|-FunctionDecl 0x13afbd7e2a0 <line:128:1, col:27> col:12 invalid get_dh1024 'int *(void)' static
|-FunctionDecl 0x13afbd7e3e0 <line:129:1, col:30> col:12 invalid get_dh1024dsa 'int *(void)' static
|-VarDecl 0x13afbd7e498 <line:132:1, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\test\ssltest_old.c:132:14 used psk_key 'char *' static cinit
| `-ImplicitCastExpr 0x13afbd7e5a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   `-ParenExpr 0x13afbd7e568 <col:17, col:27> 'void *'
|     `-CStyleCastExpr 0x13afbd7e540 <col:18, col:26> 'void *' <NullToPointer>
|       `-IntegerLiteral 0x13afbd7e500 <col:26> 'int' 0
|-FunctionDecl 0x13afbd7e9a0 <.//openssl//file_jk/after\test\ssltest_old.c:134:1, line:138:65> line:134:21 invalid psk_client_callback 'unsigned int (int *, const char *, char *, unsigned int, unsigned char *, unsigned int)' static
| |-ParmVarDecl 0x13afbd7e5d0 <col:41, col:46> col:46 invalid ssl 'int *'
| |-ParmVarDecl 0x13afbd7e650 <col:51, col:63> col:63 hint 'const char *'
| |-ParmVarDecl 0x13afbd7e6d0 <line:135:41, col:47> col:47 identity 'char *'
| |-ParmVarDecl 0x13afbd7e750 <line:136:41, col:54> col:54 max_identity_len 'unsigned int'
| |-ParmVarDecl 0x13afbd7e800 <line:137:41, col:56> col:56 psk 'unsigned char *'
| `-ParmVarDecl 0x13afbd7e880 <line:138:41, col:54> col:54 max_psk_len 'unsigned int'
|-FunctionDecl 0x13afbd7ed00 <line:139:1, line:141:65> line:139:21 invalid psk_server_callback 'unsigned int (int *, const char *, unsigned char *, unsigned int)' static
| |-ParmVarDecl 0x13afbd7ea88 <col:41, col:46> col:46 invalid ssl 'int *'
| |-ParmVarDecl 0x13afbd7eb08 <col:51, col:63> col:63 identity 'const char *'
| |-ParmVarDecl 0x13afbd7eb88 <line:140:41, col:56> col:56 psk 'unsigned char *'
| `-ParmVarDecl 0x13afbd7ec08 <line:141:41, col:54> col:54 max_psk_len 'unsigned int'
|-RecordDecl 0x13afbd7edc0 <line:147:9, line:150:1> line:147:16 struct srp_client_arg_st definition
| |-FieldDecl 0x13afbd7ee98 <line:148:5, col:11> col:11 referenced srppassin 'char *'
| `-FieldDecl 0x13afbd7ef08 <line:149:5, col:11> col:11 referenced srplogin 'char *'
|-TypedefDecl 0x13afbd7efb8 <line:147:1, line:150:3> col:3 referenced SRP_CLIENT_ARG 'struct srp_client_arg_st':'struct srp_client_arg_st'
| `-ElaboratedType 0x13afbd7ef60 'struct srp_client_arg_st' sugar
|   `-RecordType 0x13afbd7ee60 'struct srp_client_arg_st'
|     `-Record 0x13afbd7edc0 'srp_client_arg_st'
|-FunctionDecl 0x13afbd7f1a0 <line:154:1, line:158:1> line:154:14 invalid ssl_give_srp_client_pwd_cb 'char *(int *, void *)' static
| |-ParmVarDecl 0x13afbd7f040 <col:41, col:46> col:46 invalid s 'int *'
| |-ParmVarDecl 0x13afbd7f0c0 <col:49, col:55> col:55 used arg 'void *'
| `-CompoundStmt 0x13afbc91190 <line:155:1, line:158:1>
|   |-DeclStmt 0x13afbd7f3e8 <line:156:5, col:59>
|   | `-VarDecl 0x13afbd7f2f8 <col:5, col:56> col:21 used srp_client_arg 'SRP_CLIENT_ARG *' cinit
|   |   `-CStyleCastExpr 0x13afbd7f3c0 <col:38, col:56> 'SRP_CLIENT_ARG *' <BitCast>
|   |     `-ImplicitCastExpr 0x13afbd7f3a8 <col:56> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x13afbd7f360 <col:56> 'void *' lvalue ParmVar 0x13afbd7f0c0 'arg' 'void *'
|   `-ReturnStmt 0x13afbc91180 <line:157:5, col:60>
|     `-ImplicitCastExpr 0x13afbc91168 <col:12, col:60> 'char *' <IntegralToPointer>
|       `-CallExpr 0x13afbc91140 <col:12, col:60> 'int'
|         |-ImplicitCastExpr 0x13afbc91128 <col:12> 'int (*)()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x13afbd7f518 <col:12> 'int ()' Function 0x13afbd7f450 'OPENSSL_strdup' 'int ()'
|         `-CStyleCastExpr 0x13afbc910d8 <col:27, col:51> 'char *' <NoOp>
|           `-ImplicitCastExpr 0x13afbc910c0 <col:35, col:51> 'char *' <LValueToRValue> part_of_explicit_cast
|             `-MemberExpr 0x13afbc91078 <col:35, col:51> 'char *' lvalue ->srppassin 0x13afbd7ee98
|               `-ImplicitCastExpr 0x13afbc91060 <col:35> 'SRP_CLIENT_ARG *' <LValueToRValue>
|                 `-DeclRefExpr 0x13afbd7f538 <col:35> 'SRP_CLIENT_ARG *' lvalue Var 0x13afbd7f2f8 'srp_client_arg' 'SRP_CLIENT_ARG *'
|-RecordDecl 0x13afbc911b0 <line:162:9, line:165:1> line:162:16 struct srp_server_arg_st definition
| |-FieldDecl 0x13afbc91288 <line:163:5, col:11> col:11 referenced expected_user 'char *'
| `-FieldDecl 0x13afbc912f8 <line:164:5, col:11> col:11 referenced pass 'char *'
|-TypedefDecl 0x13afbc913a8 <line:162:1, line:165:3> col:3 referenced SRP_SERVER_ARG 'struct srp_server_arg_st':'struct srp_server_arg_st'
| `-ElaboratedType 0x13afbc91350 'struct srp_server_arg_st' sugar
|   `-RecordType 0x13afbc91250 'struct srp_server_arg_st'
|     `-Record 0x13afbc911b0 'srp_server_arg_st'
|-FunctionDecl 0x13afbc91620 <line:167:1, line:180:1> line:167:12 invalid ssl_srp_server_param_cb 'int (int *, int *, void *)' static
| |-ParmVarDecl 0x13afbc91430 <col:36, col:41> col:41 invalid s 'int *'
| |-ParmVarDecl 0x13afbc914b0 <col:44, col:49> col:49 used ad 'int *'
| |-ParmVarDecl 0x13afbc91530 <col:53, col:59> col:59 used arg 'void *'
| `-CompoundStmt 0x13afbc91f88 <line:168:1, line:180:1>
|   |-DeclStmt 0x13afbc91868 <line:169:5, col:46>
|   | `-VarDecl 0x13afbc91778 <col:5, col:43> col:21 used p 'SRP_SERVER_ARG *' cinit
|   |   `-CStyleCastExpr 0x13afbc91840 <col:25, col:43> 'SRP_SERVER_ARG *' <BitCast>
|   |     `-ImplicitCastExpr 0x13afbc91828 <col:43> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x13afbc917e0 <col:43> 'void *' lvalue ParmVar 0x13afbc91530 'arg' 'void *'
|   |-IfStmt 0x13afbc91c60 <line:171:5, line:174:5>
|   | |-OpaqueValueExpr 0x13afbc91c48 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbc91c38 <line:171:65, line:174:5>
|   `-IfStmt 0x13afbc91f70 <line:175:5, line:178:5>
|     |-OpaqueValueExpr 0x13afbc91f58 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x13afbc91f48 <line:175:80, line:178:5>
|-VarDecl 0x13afbc91fc8 <line:183:1, col:13> col:13 invalid bio_err 'int *' static
|-VarDecl 0x13afbc920d0 <line:184:1, col:13> col:13 invalid bio_stdout 'int *' static
|-VarDecl 0x13afbc92238 <line:188:1, col:41> col:19 used NEXT_PROTO_STRING 'const char [11]' static cinit
| `-StringLiteral 0x13afbc922d8 <col:41> 'const char [11]' "\ttestproto"
|-VarDecl 0x13afbc92370 <line:189:1, col:25> col:12 used npn_client 'int' static cinit
| `-IntegerLiteral 0x13afbc923d8 <col:25> 'int' 0
|-VarDecl 0x13afbc92430 <line:190:1, col:25> col:12 used npn_server 'int' static cinit
| `-IntegerLiteral 0x13afbc92498 <col:25> 'int' 0
|-VarDecl 0x13afbc924f0 <line:191:1, col:32> col:12 used npn_server_reject 'int' static cinit
| `-IntegerLiteral 0x13afbc92558 <col:32> 'int' 0
|-FunctionDecl 0x13afbc92980 <line:193:1, line:205:1> line:193:12 invalid cb_client_npn 'int (int *, unsigned char **, unsigned char *, const unsigned char *, unsigned int, void *)' static
| |-ParmVarDecl 0x13afbc925b0 <col:26, col:31> col:31 invalid s 'int *'
| |-ParmVarDecl 0x13afbc92668 <col:34, col:50> col:50 used out 'unsigned char **'
| |-ParmVarDecl 0x13afbc926e8 <col:55, col:70> col:70 used outlen 'unsigned char *'
| |-ParmVarDecl 0x13afbc92768 <line:194:26, col:47> col:47 in 'const unsigned char *'
| |-ParmVarDecl 0x13afbc927e8 <col:51, col:64> col:64 inlen 'unsigned int'
| |-ParmVarDecl 0x13afbc92868 <line:195:26, col:32> col:32 arg 'void *'
| `-CompoundStmt 0x13afbc92d10 <line:196:1, line:205:1>
|   |-BinaryOperator 0x13afbc92b90 <line:202:5, col:49> 'unsigned char *' '='
|   | |-UnaryOperator 0x13afbc92ab8 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x13afbc92aa0 <col:6> 'unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbc92a68 <col:6> 'unsigned char **' lvalue ParmVar 0x13afbc92668 'out' 'unsigned char **'
|   | `-BinaryOperator 0x13afbc92b70 <col:12, col:49> 'unsigned char *' '+'
|   |   |-CStyleCastExpr 0x13afbc92b20 <col:12, col:29> 'unsigned char *' <BitCast>
|   |   | `-ImplicitCastExpr 0x13afbc92b08 <col:29> 'const char *' <ArrayToPointerDecay> part_of_explicit_cast
|   |   |   `-DeclRefExpr 0x13afbc92ad0 <col:29> 'const char [11]' lvalue Var 0x13afbc92238 'NEXT_PROTO_STRING' 'const char [11]'
|   |   `-IntegerLiteral 0x13afbc92b48 <col:49> 'int' 1
|   `-BinaryOperator 0x13afbc92cf0 <line:203:5, col:43> 'unsigned char' '='
|     |-UnaryOperator 0x13afbc92c00 <col:5, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x13afbc92be8 <col:6> 'unsigned char *' <LValueToRValue>
|     |   `-DeclRefExpr 0x13afbc92bb0 <col:6> 'unsigned char *' lvalue ParmVar 0x13afbc926e8 'outlen' 'unsigned char *'
|     `-ImplicitCastExpr 0x13afbc92cd8 <col:15, col:43> 'unsigned char' <IntegralCast>
|       `-BinaryOperator 0x13afbc92cb8 <col:15, col:43> 'unsigned long long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x13afbc92c58 <col:15, col:39> 'unsigned long long' sizeof
|         | `-ParenExpr 0x13afbc92c38 <col:21, col:39> 'const char [11]' lvalue
|         |   `-DeclRefExpr 0x13afbc92c18 <col:22> 'const char [11]' lvalue Var 0x13afbc92238 'NEXT_PROTO_STRING' 'const char [11]' non_odr_use_unevaluated
|         `-ImplicitCastExpr 0x13afbc92ca0 <col:43> 'unsigned long long' <IntegralCast>
|           `-IntegerLiteral 0x13afbc92c78 <col:43> 'int' 2
|-FunctionDecl 0x13afbc82ff0 <line:207:1, line:213:1> line:207:12 invalid cb_server_npn 'int (int *, const unsigned char **, unsigned int *, void *)' static
| |-ParmVarDecl 0x13afbc92d48 <col:26, col:31> col:31 invalid s 'int *'
| |-ParmVarDecl 0x13afbc92df8 <col:34, col:56> col:56 used data 'const unsigned char **'
| |-ParmVarDecl 0x13afbc92ea0 <line:208:26, col:40> col:40 used len 'unsigned int *'
| |-ParmVarDecl 0x13afbc92f20 <col:45, col:51> col:51 arg 'void *'
| `-CompoundStmt 0x13afbc83328 <line:209:1, line:213:1>
|   |-BinaryOperator 0x13afbc831a8 <line:210:5, col:36> 'const unsigned char *' '='
|   | |-UnaryOperator 0x13afbc83118 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x13afbc83100 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbc830c8 <col:6> 'const unsigned char **' lvalue ParmVar 0x13afbc92df8 'data' 'const unsigned char **'
|   | `-CStyleCastExpr 0x13afbc83180 <col:13, col:36> 'const unsigned char *' <BitCast>
|   |   `-ImplicitCastExpr 0x13afbc83168 <col:36> 'const char *' <ArrayToPointerDecay> part_of_explicit_cast
|   |     `-DeclRefExpr 0x13afbc83130 <col:36> 'const char [11]' lvalue Var 0x13afbc92238 'NEXT_PROTO_STRING' 'const char [11]'
|   `-BinaryOperator 0x13afbc83308 <line:211:5, col:40> 'unsigned int' '='
|     |-UnaryOperator 0x13afbc83218 <col:5, col:6> 'unsigned int' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x13afbc83200 <col:6> 'unsigned int *' <LValueToRValue>
|     |   `-DeclRefExpr 0x13afbc831c8 <col:6> 'unsigned int *' lvalue ParmVar 0x13afbc92ea0 'len' 'unsigned int *'
|     `-ImplicitCastExpr 0x13afbc832f0 <col:12, col:40> 'unsigned int' <IntegralCast>
|       `-BinaryOperator 0x13afbc832d0 <col:12, col:40> 'unsigned long long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x13afbc83270 <col:12, col:36> 'unsigned long long' sizeof
|         | `-ParenExpr 0x13afbc83250 <col:18, col:36> 'const char [11]' lvalue
|         |   `-DeclRefExpr 0x13afbc83230 <col:19> 'const char [11]' lvalue Var 0x13afbc92238 'NEXT_PROTO_STRING' 'const char [11]' non_odr_use_unevaluated
|         `-ImplicitCastExpr 0x13afbc832b8 <col:40> 'unsigned long long' <IntegralCast>
|           `-IntegerLiteral 0x13afbc83290 <col:40> 'int' 1
|-FunctionDecl 0x13afbc83598 <line:215:1, line:219:1> line:215:12 invalid cb_server_rejects_npn 'int (int *, const unsigned char **, unsigned int *, void *)' static
| |-ParmVarDecl 0x13afbc83360 <col:34, col:39> col:39 invalid s 'int *'
| |-ParmVarDecl 0x13afbc833e8 <col:42, col:64> col:64 data 'const unsigned char **'
| |-ParmVarDecl 0x13afbc83468 <line:216:34, col:48> col:48 len 'unsigned int *'
| |-ParmVarDecl 0x13afbc834e8 <col:53, col:59> col:59 arg 'void *'
| `-CompoundStmt 0x13afbc83670 <line:217:1, line:219:1>
|-FunctionDecl 0x13afbc837f0 <line:221:1, line:264:1> line:221:12 invalid verify_npn 'int (int *, int *)' static
| |-ParmVarDecl 0x13afbc83698 <col:23, col:28> col:28 invalid client 'int *'
| |-ParmVarDecl 0x13afbc83718 <col:36, col:41> col:41 invalid server 'int *'
| `-CompoundStmt 0x13afbc8b030 <line:222:1, line:264:1>
|   |-DeclStmt 0x13afbc83938 <line:223:5, col:34>
|   | `-VarDecl 0x13afbc838d0 <col:5, col:26> col:26 used client_s 'const unsigned char *'
|   |-DeclStmt 0x13afbc839d0 <line:224:5, col:24>
|   | `-VarDecl 0x13afbc83968 <col:5, col:14> col:14 used client_len 'unsigned int'
|   |-DeclStmt 0x13afbc83a68 <line:225:5, col:34>
|   | `-VarDecl 0x13afbc83a00 <col:5, col:26> col:26 used server_s 'const unsigned char *'
|   |-DeclStmt 0x13afbc83b00 <line:226:5, col:24>
|   | `-VarDecl 0x13afbc83a98 <col:5, col:14> col:14 used server_len 'unsigned int'
|   |-IfStmt 0x13afbc84108 <line:231:5, line:235:5>
|   | |-ImplicitCastExpr 0x13afbc83da8 <line:231:9> 'unsigned int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13afbc83d88 <col:9> 'unsigned int' lvalue Var 0x13afbc83968 'client_len' 'unsigned int'
|   | `-CompoundStmt 0x13afbc840f8 <col:21, line:235:5>
|   |-IfStmt 0x13afbc84250 <line:237:5, line:241:5>
|   | |-ImplicitCastExpr 0x13afbc84140 <line:237:9> 'unsigned int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13afbc84120 <col:9> 'unsigned int' lvalue Var 0x13afbc83a98 'server_len' 'unsigned int'
|   | `-CompoundStmt 0x13afbc84240 <col:21, line:241:5>
|   |-IfStmt 0x13afbc84688 <line:247:5, line:249:17>
|   | |-BinaryOperator 0x13afbc84618 <line:247:9, line:248:75> 'int' '&&'
|   | | |-ImplicitCastExpr 0x13afbc84600 <line:247:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbc84268 <col:9> 'unsigned int' lvalue Var 0x13afbc83968 'client_len' 'unsigned int'
|   | | `-ParenExpr 0x13afbc845e0 <col:23, line:248:75> 'int'
|   | |   `-BinaryOperator 0x13afbc845c0 <line:247:24, line:248:74> 'int' '||'
|   | |     |-BinaryOperator 0x13afbc84398 <line:247:24, col:66> 'int' '!='
|   | |     | |-ImplicitCastExpr 0x13afbc84380 <col:24> 'unsigned long long' <IntegralCast>
|   | |     | | `-ImplicitCastExpr 0x13afbc84368 <col:24> 'unsigned int' <LValueToRValue>
|   | |     | |   `-DeclRefExpr 0x13afbc84288 <col:24> 'unsigned int' lvalue Var 0x13afbc83968 'client_len' 'unsigned int'
|   | |     | `-BinaryOperator 0x13afbc84348 <col:38, col:66> 'unsigned long long' '-'
|   | |     |   |-UnaryExprOrTypeTraitExpr 0x13afbc842e8 <col:38, col:62> 'unsigned long long' sizeof
|   | |     |   | `-ParenExpr 0x13afbc842c8 <col:44, col:62> 'const char [11]' lvalue
|   | |     |   |   `-DeclRefExpr 0x13afbc842a8 <col:45> 'const char [11]' lvalue Var 0x13afbc92238 'NEXT_PROTO_STRING' 'const char [11]' non_odr_use_unevaluated
|   | |     |   `-ImplicitCastExpr 0x13afbc84330 <col:66> 'unsigned long long' <IntegralCast>
|   | |     |     `-IntegerLiteral 0x13afbc84308 <col:66> 'int' 2
|   | |     `-CallExpr 0x13afbc84510 <line:248:24, col:74> 'int'
|   | |       |-ImplicitCastExpr 0x13afbc844f8 <col:24> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x13afbc843b8 <col:24> 'int (const void *, const void *, unsigned long long)' Function 0x13afbd26a88 'memcmp' 'int (const void *, const void *, unsigned long long)'
|   | |       |-ImplicitCastExpr 0x13afbc84560 <col:31> 'const void *' <BitCast>
|   | |       | `-ImplicitCastExpr 0x13afbc84548 <col:31> 'const unsigned char *' <LValueToRValue>
|   | |       |   `-DeclRefExpr 0x13afbc843d8 <col:31> 'const unsigned char *' lvalue Var 0x13afbc838d0 'client_s' 'const unsigned char *'
|   | |       |-ImplicitCastExpr 0x13afbc84578 <col:41, col:61> 'const void *' <BitCast>
|   | |       | `-BinaryOperator 0x13afbc84458 <col:41, col:61> 'const char *' '+'
|   | |       |   |-ImplicitCastExpr 0x13afbc84440 <col:41> 'const char *' <ArrayToPointerDecay>
|   | |       |   | `-DeclRefExpr 0x13afbc843f8 <col:41> 'const char [11]' lvalue Var 0x13afbc92238 'NEXT_PROTO_STRING' 'const char [11]'
|   | |       |   `-IntegerLiteral 0x13afbc84418 <col:61> 'int' 1
|   | |       `-ImplicitCastExpr 0x13afbc845a8 <col:64> 'unsigned long long' <IntegralCast>
|   | |         `-ImplicitCastExpr 0x13afbc84590 <col:64> 'unsigned int' <LValueToRValue>
|   | |           `-DeclRefExpr 0x13afbc84478 <col:64> 'unsigned int' lvalue Var 0x13afbc83968 'client_len' 'unsigned int'
|   | `-ReturnStmt 0x13afbc84678 <line:249:9, col:17>
|   |   `-UnaryOperator 0x13afbc84660 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x13afbc84638 <col:17> 'int' 1
|   |-IfStmt 0x13afbc84a90 <line:250:5, line:252:17>
|   | |-BinaryOperator 0x13afbc84a20 <line:250:9, line:251:75> 'int' '&&'
|   | | |-ImplicitCastExpr 0x13afbc84a08 <line:250:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbc846a0 <col:9> 'unsigned int' lvalue Var 0x13afbc83a98 'server_len' 'unsigned int'
|   | | `-ParenExpr 0x13afbc849e8 <col:23, line:251:75> 'int'
|   | |   `-BinaryOperator 0x13afbc849c8 <line:250:24, line:251:74> 'int' '||'
|   | |     |-BinaryOperator 0x13afbc847d0 <line:250:24, col:66> 'int' '!='
|   | |     | |-ImplicitCastExpr 0x13afbc847b8 <col:24> 'unsigned long long' <IntegralCast>
|   | |     | | `-ImplicitCastExpr 0x13afbc847a0 <col:24> 'unsigned int' <LValueToRValue>
|   | |     | |   `-DeclRefExpr 0x13afbc846c0 <col:24> 'unsigned int' lvalue Var 0x13afbc83a98 'server_len' 'unsigned int'
|   | |     | `-BinaryOperator 0x13afbc84780 <col:38, col:66> 'unsigned long long' '-'
|   | |     |   |-UnaryExprOrTypeTraitExpr 0x13afbc84720 <col:38, col:62> 'unsigned long long' sizeof
|   | |     |   | `-ParenExpr 0x13afbc84700 <col:44, col:62> 'const char [11]' lvalue
|   | |     |   |   `-DeclRefExpr 0x13afbc846e0 <col:45> 'const char [11]' lvalue Var 0x13afbc92238 'NEXT_PROTO_STRING' 'const char [11]' non_odr_use_unevaluated
|   | |     |   `-ImplicitCastExpr 0x13afbc84768 <col:66> 'unsigned long long' <IntegralCast>
|   | |     |     `-IntegerLiteral 0x13afbc84740 <col:66> 'int' 2
|   | |     `-CallExpr 0x13afbc84918 <line:251:24, col:74> 'int'
|   | |       |-ImplicitCastExpr 0x13afbc84900 <col:24> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x13afbc847f0 <col:24> 'int (const void *, const void *, unsigned long long)' Function 0x13afbd26a88 'memcmp' 'int (const void *, const void *, unsigned long long)'
|   | |       |-ImplicitCastExpr 0x13afbc84968 <col:31> 'const void *' <BitCast>
|   | |       | `-ImplicitCastExpr 0x13afbc84950 <col:31> 'const unsigned char *' <LValueToRValue>
|   | |       |   `-DeclRefExpr 0x13afbc84810 <col:31> 'const unsigned char *' lvalue Var 0x13afbc83a00 'server_s' 'const unsigned char *'
|   | |       |-ImplicitCastExpr 0x13afbc84980 <col:41, col:61> 'const void *' <BitCast>
|   | |       | `-BinaryOperator 0x13afbc84890 <col:41, col:61> 'const char *' '+'
|   | |       |   |-ImplicitCastExpr 0x13afbc84878 <col:41> 'const char *' <ArrayToPointerDecay>
|   | |       |   | `-DeclRefExpr 0x13afbc84830 <col:41> 'const char [11]' lvalue Var 0x13afbc92238 'NEXT_PROTO_STRING' 'const char [11]'
|   | |       |   `-IntegerLiteral 0x13afbc84850 <col:61> 'int' 1
|   | |       `-ImplicitCastExpr 0x13afbc849b0 <col:64> 'unsigned long long' <IntegralCast>
|   | |         `-ImplicitCastExpr 0x13afbc84998 <col:64> 'unsigned int' <LValueToRValue>
|   | |           `-DeclRefExpr 0x13afbc848b0 <col:64> 'unsigned int' lvalue Var 0x13afbc83a98 'server_len' 'unsigned int'
|   | `-ReturnStmt 0x13afbc84a80 <line:252:9, col:17>
|   |   `-UnaryOperator 0x13afbc84a68 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x13afbc84a40 <col:17> 'int' 1
|   |-IfStmt 0x13afbc84ba0 <line:254:5, line:255:17>
|   | |-BinaryOperator 0x13afbc84b30 <line:254:9, col:24> 'int' '&&'
|   | | |-UnaryOperator 0x13afbc84ae0 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x13afbc84ac8 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x13afbc84aa8 <col:10> 'int' lvalue Var 0x13afbc92370 'npn_client' 'int'
|   | | `-ImplicitCastExpr 0x13afbc84b18 <col:24> 'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbc84af8 <col:24> 'unsigned int' lvalue Var 0x13afbc83968 'client_len' 'unsigned int'
|   | `-ReturnStmt 0x13afbc84b90 <line:255:9, col:17>
|   |   `-UnaryOperator 0x13afbc84b78 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x13afbc84b50 <col:17> 'int' 1
|   |-IfStmt 0x13afbc84cb0 <line:256:5, line:257:17>
|   | |-BinaryOperator 0x13afbc84c40 <line:256:9, col:24> 'int' '&&'
|   | | |-UnaryOperator 0x13afbc84bf0 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x13afbc84bd8 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x13afbc84bb8 <col:10> 'int' lvalue Var 0x13afbc92430 'npn_server' 'int'
|   | | `-ImplicitCastExpr 0x13afbc84c28 <col:24> 'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbc84c08 <col:24> 'unsigned int' lvalue Var 0x13afbc83a98 'server_len' 'unsigned int'
|   | `-ReturnStmt 0x13afbc84ca0 <line:257:9, col:17>
|   |   `-UnaryOperator 0x13afbc84c88 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x13afbc84c60 <col:17> 'int' 1
|   |-IfStmt 0x13afbc84da8 <line:258:5, line:259:17>
|   | |-BinaryOperator 0x13afbc84d38 <line:258:9, col:30> 'int' '&&'
|   | | |-ImplicitCastExpr 0x13afbc84d08 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbc84cc8 <col:9> 'int' lvalue Var 0x13afbc924f0 'npn_server_reject' 'int'
|   | | `-ImplicitCastExpr 0x13afbc84d20 <col:30> 'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbc84ce8 <col:30> 'unsigned int' lvalue Var 0x13afbc83a98 'server_len' 'unsigned int'
|   | `-ReturnStmt 0x13afbc84d98 <line:259:9, col:17>
|   |   `-UnaryOperator 0x13afbc84d80 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x13afbc84d58 <col:17> 'int' 1
|   |-IfStmt 0x13afbc84fa0 <line:260:5, line:261:17>
|   | |-BinaryOperator 0x13afbc84f30 <line:260:9, col:64> 'int' '&&'
|   | | |-BinaryOperator 0x13afbc84e30 <col:9, col:23> 'int' '&&'
|   | | | |-ImplicitCastExpr 0x13afbc84e00 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x13afbc84dc0 <col:9> 'int' lvalue Var 0x13afbc92370 'npn_client' 'int'
|   | | | `-ImplicitCastExpr 0x13afbc84e18 <col:23> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x13afbc84de0 <col:23> 'int' lvalue Var 0x13afbc92430 'npn_server' 'int'
|   | | `-ParenExpr 0x13afbc84f10 <col:37, col:64> 'int'
|   | |   `-BinaryOperator 0x13afbc84ef0 <col:38, col:54> 'int' '||'
|   | |     |-UnaryOperator 0x13afbc84e88 <col:38, col:39> 'int' prefix '!' cannot overflow
|   | |     | `-ImplicitCastExpr 0x13afbc84e70 <col:39> 'unsigned int' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x13afbc84e50 <col:39> 'unsigned int' lvalue Var 0x13afbc83968 'client_len' 'unsigned int'
|   | |     `-UnaryOperator 0x13afbc84ed8 <col:53, col:54> 'int' prefix '!' cannot overflow
|   | |       `-ImplicitCastExpr 0x13afbc84ec0 <col:54> 'unsigned int' <LValueToRValue>
|   | |         `-DeclRefExpr 0x13afbc84ea0 <col:54> 'unsigned int' lvalue Var 0x13afbc83a98 'server_len' 'unsigned int'
|   | `-ReturnStmt 0x13afbc84f90 <line:261:9, col:17>
|   |   `-UnaryOperator 0x13afbc84f78 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x13afbc84f50 <col:17> 'int' 1
|   `-ReturnStmt 0x13afbc84fe0 <line:263:5, col:12>
|     `-IntegerLiteral 0x13afbc84fb8 <col:12> 'int' 0
|-VarDecl 0x13afbc8b0c0 <line:267:1, col:20> col:20 used alpn_client 'const char *' static
|-VarDecl 0x13afbc8b158 <line:268:1, col:14> col:14 used alpn_server 'char *' static
|-VarDecl 0x13afbc8b1f0 <line:269:1, col:14> col:14 used alpn_server2 'char *' static
|-VarDecl 0x13afbc8b288 <line:270:1, col:20> col:20 used alpn_expected 'const char *' static
|-VarDecl 0x13afbc8b320 <line:271:1, col:23> col:23 used alpn_selected 'unsigned char *' static
|-VarDecl 0x13afbc8b3b8 <line:272:1, col:20> col:20 used server_min_proto 'const char *' static
|-VarDecl 0x13afbc8b450 <line:273:1, col:20> col:20 used server_max_proto 'const char *' static
|-VarDecl 0x13afbc8b4e8 <line:274:1, col:20> col:20 used client_min_proto 'const char *' static
|-VarDecl 0x13afbc8b580 <line:275:1, col:20> col:20 used client_max_proto 'const char *' static
|-VarDecl 0x13afbc8b618 <line:276:1, col:20> col:20 used should_negotiate 'const char *' static
|-VarDecl 0x13afbc8b6b0 <line:277:1, col:20> col:20 used sn_client 'const char *' static
|-VarDecl 0x13afbc8b748 <line:278:1, col:20> col:20 used sn_server1 'const char *' static
|-VarDecl 0x13afbc8b7e0 <line:279:1, col:20> col:20 used sn_server2 'const char *' static
|-VarDecl 0x13afbc8b878 <line:280:1, col:24> col:12 used sn_expect 'int' static cinit
| `-IntegerLiteral 0x13afbc8b8e0 <col:24> 'int' 0
|-VarDecl 0x13afbc8b938 <line:281:1, col:20> col:20 used server_sess_out 'const char *' static
|-VarDecl 0x13afbc8b9d0 <line:282:1, col:20> col:20 used server_sess_in 'const char *' static
|-VarDecl 0x13afbc8ba68 <line:283:1, col:20> col:20 used client_sess_out 'const char *' static
|-VarDecl 0x13afbc8bb00 <line:284:1, col:20> col:20 used client_sess_in 'const char *' static
|-VarDecl 0x13afbc8bb98 <line:285:1, col:21> col:21 invalid server_sess 'int *' static
|-VarDecl 0x13afbc8bc18 <line:286:1, col:21> col:21 invalid client_sess 'int *' static
|-FunctionDecl 0x13afbc8be40 <line:288:1, line:304:1> line:288:12 invalid servername_cb 'int (int *, int *, void *)' static
| |-ParmVarDecl 0x13afbc8bc98 <col:26, col:31> col:31 invalid s 'int *'
| |-ParmVarDecl 0x13afbc8bd18 <col:34, col:39> col:39 ad 'int *'
| |-ParmVarDecl 0x13afbc8bd98 <col:43, col:49> col:49 arg 'void *'
| `-CompoundStmt 0x13afbc8c930 <line:289:1, line:304:1>
|   |-DeclStmt 0x13afbc8c0a0 <line:290:5, col:78>
|   | `-VarDecl 0x13afbc8bf28 <col:5, col:17> col:17 used servername 'const char *'
|   |-IfStmt 0x13afbc8c248 <line:291:5, line:294:5>
|   | |-BinaryOperator 0x13afbc8c190 <line:291:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x13afbc8c160 <.//openssl//file_jk/after\test\ssltest_old.c:291:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbc8c0b8 <col:9> 'const char *' lvalue Var 0x13afbc8b7e0 'sn_server2' 'const char *'
|   | | `-ImplicitCastExpr 0x13afbc8c178 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x13afbc8c140 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x13afbc8c118 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x13afbc8c0d8 <col:26> 'int' 0
|   | `-CompoundStmt 0x13afbc8c238 <.//openssl//file_jk/after\test\ssltest_old.c:291:29, line:294:5>
|   `-IfStmt 0x13afbc8c918 <line:296:5, line:302:5>
|     |-ImplicitCastExpr 0x13afbc8c298 <line:296:9> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x13afbc8c260 <col:9> 'const char *' lvalue Var 0x13afbc8bf28 'servername' 'const char *'
|     `-CompoundStmt 0x13afbc8c900 <col:21, line:302:5>
|       `-IfStmt 0x13afbc8c8e8 <line:297:9, line:301:9>
|         |-OpaqueValueExpr 0x13afbc8c8d0 <<invalid sloc>> '_Bool'
|         `-CompoundStmt 0x13afbc8c8c0 <line:298:50, line:301:9>
|-FunctionDecl 0x13afbc8c430 <line:298:14> col:14 implicit used strcasecmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x13afbc8c4d0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x13afbc8c538 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x13afbc8ca90 <line:305:1, line:323:1> line:305:12 invalid verify_servername 'int (int *, int *)' static
| |-ParmVarDecl 0x13afbc8c970 <col:30, col:35> col:35 invalid client 'int *'
| |-ParmVarDecl 0x13afbc8c9f0 <col:43, col:48> col:48 invalid server 'int *'
| `-CompoundStmt 0x13afbc89190 <line:306:1, line:323:1>
|   |-IfStmt 0x13afbc8cd20 <line:309:5, line:310:16>
|   | |-BinaryOperator 0x13afbc8ccc8 <line:309:9, col:22> 'int' '=='
|   | | |-ImplicitCastExpr 0x13afbc8ccb0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbc8cc68 <col:9> 'int' lvalue Var 0x13afbc8b878 'sn_expect' 'int'
|   | | `-IntegerLiteral 0x13afbc8cc88 <col:22> 'int' 0
|   | `-ReturnStmt 0x13afbc8cd10 <line:310:9, col:16>
|   |   `-IntegerLiteral 0x13afbc8cce8 <col:16> 'int' 0
|   |-IfStmt 0x13afbc8ce08 <line:311:5, line:312:16>
|   | |-OpaqueValueExpr 0x13afbc8cdf0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x13afbc8cde0 <col:9, col:16>
|   |   `-IntegerLiteral 0x13afbc8cdb8 <col:16> 'int' 0
|   |-IfStmt 0x13afbc8cef0 <line:313:5, line:314:16>
|   | |-OpaqueValueExpr 0x13afbc8ced8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x13afbc8cec8 <col:9, col:16>
|   |   `-IntegerLiteral 0x13afbc8cea0 <col:16> 'int' 0
|   `-ReturnStmt 0x13afbc89180 <line:322:5, col:13>
|     `-UnaryOperator 0x13afbc89168 <col:12, col:13> 'int' prefix '-'
|       `-IntegerLiteral 0x13afbc89140 <col:13> 'int' 1
|-FunctionDecl 0x13afbc893a0 <line:334:1, line:363:1> line:334:23 used next_protos_parse 'unsigned char *(size_t *, const char *)' static
| |-ParmVarDecl 0x13afbc891d0 <col:41, col:49> col:49 used outlen 'size_t *'
| |-ParmVarDecl 0x13afbc89250 <line:335:41, col:53> col:53 used in 'const char *'
| `-CompoundStmt 0x13afbc8a9d8 <line:336:1, line:363:1>
|   |-DeclStmt 0x13afbc894e0 <line:337:5, col:15>
|   | `-VarDecl 0x13afbc89478 <col:5, col:12> col:12 used len 'size_t':'unsigned long long'
|   |-DeclStmt 0x13afbc89578 <line:338:5, col:23>
|   | `-VarDecl 0x13afbc89510 <col:5, col:20> col:20 used out 'unsigned char *'
|   |-DeclStmt 0x13afbc896d8 <line:339:5, col:24>
|   | |-VarDecl 0x13afbc895a0 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   | `-VarDecl 0x13afbc89618 <col:5, col:23> col:15 used start 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x13afbc896a8 <col:23> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x13afbc89680 <col:23> 'int' 0
|   |-BinaryOperator 0x13afbc89800 <line:341:5, col:20> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x13afbc896f0 <col:5> 'size_t':'unsigned long long' lvalue Var 0x13afbc89478 'len' 'size_t':'unsigned long long'
|   | `-CallExpr 0x13afbc897c0 <col:11, col:20> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x13afbc897a8 <col:11> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13afbc89728 <col:11> 'unsigned long long (const char *)' Function 0x13afbd2d960 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x13afbc897e8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x13afbc89748 <col:18> 'const char *' lvalue ParmVar 0x13afbc89250 'in' 'const char *'
|   |-IfStmt 0x13afbc89968 <line:342:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x13afbc89898 <.//openssl//file_jk/after\test\ssltest_old.c:342:9, col:16> 'int' '>='
|   | | |-ImplicitCastExpr 0x13afbc89868 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbc89820 <col:9> 'size_t':'unsigned long long' lvalue Var 0x13afbc89478 'len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x13afbc89880 <col:16> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x13afbc89840 <col:16> 'int' 65535
|   | `-ReturnStmt 0x13afbc89958 <line:343:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x13afbc89940 <col:17, col:27> 'unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x13afbc89920 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x13afbc898f8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x13afbc898b8 <col:26> 'int' 0
|   |-BinaryOperator 0x13afbc89c30 <.//openssl//file_jk/after\test\ssltest_old.c:345:5, col:40> 'unsigned char *' '='
|   | |-DeclRefExpr 0x13afbc89980 <col:5> 'unsigned char *' lvalue Var 0x13afbc89510 'out' 'unsigned char *'
|   | `-ImplicitCastExpr 0x13afbc89c18 <col:11, col:40> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x13afbc89bf0 <col:11, col:40> 'int'
|   |     |-ImplicitCastExpr 0x13afbc89bd8 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13afbc89aa8 <col:11> 'int ()' Function 0x13afbc899e0 'OPENSSL_malloc' 'int ()'
|   |     `-BinaryOperator 0x13afbc89bb8 <col:26, col:39> 'unsigned long long' '+'
|   |       |-CallExpr 0x13afbc89b38 <col:26, col:35> 'unsigned long long'
|   |       | |-ImplicitCastExpr 0x13afbc89b20 <col:26> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x13afbc89ac8 <col:26> 'unsigned long long (const char *)' Function 0x13afbd2d960 'strlen' 'unsigned long long (const char *)'
|   |       | `-ImplicitCastExpr 0x13afbc89b60 <col:33> 'const char *' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x13afbc89ae8 <col:33> 'const char *' lvalue ParmVar 0x13afbc89250 'in' 'const char *'
|   |       `-ImplicitCastExpr 0x13afbc89ba0 <col:39> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x13afbc89b78 <col:39> 'int' 1
|   |-IfStmt 0x13afbc89d50 <line:346:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-UnaryOperator 0x13afbc89c88 <.//openssl//file_jk/after\test\ssltest_old.c:346:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x13afbc89c70 <col:10> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbc89c50 <col:10> 'unsigned char *' lvalue Var 0x13afbc89510 'out' 'unsigned char *'
|   | `-ReturnStmt 0x13afbc89d40 <line:347:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x13afbc89d28 <col:17, col:27> 'unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x13afbc89d08 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x13afbc89ce0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x13afbc89ca0 <col:26> 'int' 0
|   |-ForStmt 0x13afbc8a850 <.//openssl//file_jk/after\test\ssltest_old.c:349:5, line:359:5>
|   | |-BinaryOperator 0x13afbc89de0 <line:349:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x13afbc89d68 <col:10> 'size_t':'unsigned long long' lvalue Var 0x13afbc895a0 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x13afbc89dc8 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x13afbc89da0 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x13afbc89e70 <col:17, col:22> 'int' '<='
|   | | |-ImplicitCastExpr 0x13afbc89e40 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbc89e00 <col:17> 'size_t':'unsigned long long' lvalue Var 0x13afbc895a0 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x13afbc89e58 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbc89e20 <col:22> 'size_t':'unsigned long long' lvalue Var 0x13afbc89478 'len' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x13afbc89eb0 <col:27, col:29> 'size_t':'unsigned long long' prefix '++'
|   | | `-DeclRefExpr 0x13afbc89e90 <col:29> 'size_t':'unsigned long long' lvalue Var 0x13afbc895a0 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x13afbc8a838 <col:32, line:359:5>
|   |   `-IfStmt 0x13afbc8a810 <line:350:9, line:358:30> has_else
|   |     |-BinaryOperator 0x13afbc8a050 <line:350:13, col:34> 'int' '||'
|   |     | |-BinaryOperator 0x13afbc89f38 <col:13, col:18> 'int' '=='
|   |     | | |-ImplicitCastExpr 0x13afbc89f08 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x13afbc89ec8 <col:13> 'size_t':'unsigned long long' lvalue Var 0x13afbc895a0 'i' 'size_t':'unsigned long long'
|   |     | | `-ImplicitCastExpr 0x13afbc89f20 <col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x13afbc89ee8 <col:18> 'size_t':'unsigned long long' lvalue Var 0x13afbc89478 'len' 'size_t':'unsigned long long'
|   |     | `-BinaryOperator 0x13afbc8a030 <col:25, col:34> 'int' '=='
|   |     |   |-ImplicitCastExpr 0x13afbc8a018 <col:25, col:29> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x13afbc8a000 <col:25, col:29> 'char' <LValueToRValue>
|   |     |   |   `-ArraySubscriptExpr 0x13afbc89fc8 <col:25, col:29> 'const char' lvalue
|   |     |   |     |-ImplicitCastExpr 0x13afbc89f98 <col:25> 'const char *' <LValueToRValue>
|   |     |   |     | `-DeclRefExpr 0x13afbc89f58 <col:25> 'const char *' lvalue ParmVar 0x13afbc89250 'in' 'const char *'
|   |     |   |     `-ImplicitCastExpr 0x13afbc89fb0 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   |       `-DeclRefExpr 0x13afbc89f78 <col:28> 'size_t':'unsigned long long' lvalue Var 0x13afbc895a0 'i' 'size_t':'unsigned long long'
|   |     |   `-CharacterLiteral 0x13afbc89fe8 <col:34> 'int' 44
|   |     |-CompoundStmt 0x13afbc8a618 <col:39, line:357:9>
|   |     | |-IfStmt 0x13afbc8a3d0 <line:351:13, line:354:13>
|   |     | | |-BinaryOperator 0x13afbc8a158 <line:351:17, col:29> 'int' '>'
|   |     | | | |-BinaryOperator 0x13afbc8a0f8 <col:17, col:21> 'unsigned long long' '-'
|   |     | | | | |-ImplicitCastExpr 0x13afbc8a0c8 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | | | | `-DeclRefExpr 0x13afbc8a070 <col:17> 'size_t':'unsigned long long' lvalue Var 0x13afbc895a0 'i' 'size_t':'unsigned long long'
|   |     | | | | `-ImplicitCastExpr 0x13afbc8a0e0 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | | |   `-DeclRefExpr 0x13afbc8a090 <col:21> 'size_t':'unsigned long long' lvalue Var 0x13afbc89618 'start' 'size_t':'unsigned long long'
|   |     | | | `-ImplicitCastExpr 0x13afbc8a140 <col:29> 'unsigned long long' <IntegralCast>
|   |     | | |   `-IntegerLiteral 0x13afbc8a118 <col:29> 'int' 255
|   |     | | `-CompoundStmt 0x13afbc8a3b0 <col:34, line:354:13>
|   |     | |   |-CallExpr 0x13afbc8a2c0 <line:352:17, col:33> 'int'
|   |     | |   | |-ImplicitCastExpr 0x13afbc8a2a8 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |     | |   | | `-DeclRefExpr 0x13afbc8a268 <col:17> 'int ()' Function 0x13afbc8a1a0 'OPENSSL_free' 'int ()'
|   |     | |   | `-ImplicitCastExpr 0x13afbc8a2e8 <col:30> 'unsigned char *' <LValueToRValue>
|   |     | |   |   `-DeclRefExpr 0x13afbc8a288 <col:30> 'unsigned char *' lvalue Var 0x13afbc89510 'out' 'unsigned char *'
|   |     | |   `-ReturnStmt 0x13afbc8a3a0 <line:353:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     | |     `-ImplicitCastExpr 0x13afbc8a388 <col:17, col:27> 'unsigned char *' <NullToPointer>
|   |     | |       `-ParenExpr 0x13afbc8a368 <col:17, col:27> 'void *'
|   |     | |         `-CStyleCastExpr 0x13afbc8a340 <col:18, col:26> 'void *' <NullToPointer>
|   |     | |           `-IntegerLiteral 0x13afbc8a300 <col:26> 'int' 0
|   |     | |-BinaryOperator 0x13afbc8a520 <.//openssl//file_jk/after\test\ssltest_old.c:355:13, col:30> 'unsigned char' '='
|   |     | | |-ArraySubscriptExpr 0x13afbc8a458 <col:13, col:22> 'unsigned char' lvalue
|   |     | | | |-ImplicitCastExpr 0x13afbc8a428 <col:13> 'unsigned char *' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x13afbc8a3e8 <col:13> 'unsigned char *' lvalue Var 0x13afbc89510 'out' 'unsigned char *'
|   |     | | | `-ImplicitCastExpr 0x13afbc8a440 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x13afbc8a408 <col:17> 'size_t':'unsigned long long' lvalue Var 0x13afbc89618 'start' 'size_t':'unsigned long long'
|   |     | | `-ImplicitCastExpr 0x13afbc8a508 <col:26, col:30> 'unsigned char' <IntegralCast>
|   |     | |   `-BinaryOperator 0x13afbc8a4e8 <col:26, col:30> 'unsigned long long' '-'
|   |     | |     |-ImplicitCastExpr 0x13afbc8a4b8 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |     | `-DeclRefExpr 0x13afbc8a478 <col:26> 'size_t':'unsigned long long' lvalue Var 0x13afbc895a0 'i' 'size_t':'unsigned long long'
|   |     | |     `-ImplicitCastExpr 0x13afbc8a4d0 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x13afbc8a498 <col:30> 'size_t':'unsigned long long' lvalue Var 0x13afbc89618 'start' 'size_t':'unsigned long long'
|   |     | `-BinaryOperator 0x13afbc8a5f8 <line:356:13, col:25> 'size_t':'unsigned long long' '='
|   |     |   |-DeclRefExpr 0x13afbc8a540 <col:13> 'size_t':'unsigned long long' lvalue Var 0x13afbc89618 'start' 'size_t':'unsigned long long'
|   |     |   `-BinaryOperator 0x13afbc8a5d8 <col:21, col:25> 'unsigned long long' '+'
|   |     |     |-ImplicitCastExpr 0x13afbc8a5a8 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |     | `-DeclRefExpr 0x13afbc8a560 <col:21> 'size_t':'unsigned long long' lvalue Var 0x13afbc895a0 'i' 'size_t':'unsigned long long'
|   |     |     `-ImplicitCastExpr 0x13afbc8a5c0 <col:25> 'unsigned long long' <IntegralCast>
|   |     |       `-IntegerLiteral 0x13afbc8a580 <col:25> 'int' 1
|   |     `-BinaryOperator 0x13afbc8a7f0 <line:358:13, col:30> 'unsigned char' '='
|   |       |-ArraySubscriptExpr 0x13afbc8a710 <col:13, col:22> 'unsigned char' lvalue
|   |       | |-ImplicitCastExpr 0x13afbc8a6f8 <col:13> 'unsigned char *' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x13afbc8a640 <col:13> 'unsigned char *' lvalue Var 0x13afbc89510 'out' 'unsigned char *'
|   |       | `-BinaryOperator 0x13afbc8a6d8 <col:17, col:21> 'unsigned long long' '+'
|   |       |   |-ImplicitCastExpr 0x13afbc8a6a8 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x13afbc8a660 <col:17> 'size_t':'unsigned long long' lvalue Var 0x13afbc895a0 'i' 'size_t':'unsigned long long'
|   |       |   `-ImplicitCastExpr 0x13afbc8a6c0 <col:21> 'unsigned long long' <IntegralCast>
|   |       |     `-IntegerLiteral 0x13afbc8a680 <col:21> 'int' 1
|   |       `-ImplicitCastExpr 0x13afbc8a7d8 <col:26, col:30> 'unsigned char' <IntegralCast>
|   |         `-ImplicitCastExpr 0x13afbc8a7c0 <col:26, col:30> 'char' <LValueToRValue>
|   |           `-ArraySubscriptExpr 0x13afbc8a7a0 <col:26, col:30> 'const char' lvalue
|   |             |-ImplicitCastExpr 0x13afbc8a770 <col:26> 'const char *' <LValueToRValue>
|   |             | `-DeclRefExpr 0x13afbc8a730 <col:26> 'const char *' lvalue ParmVar 0x13afbc89250 'in' 'const char *'
|   |             `-ImplicitCastExpr 0x13afbc8a788 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|   |               `-DeclRefExpr 0x13afbc8a750 <col:29> 'size_t':'unsigned long long' lvalue Var 0x13afbc895a0 'i' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x13afbc8a970 <line:361:5, col:21> 'size_t':'unsigned long long' '='
|   | |-UnaryOperator 0x13afbc8a8c0 <col:5, col:6> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x13afbc8a8a8 <col:6> 'size_t *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbc8a888 <col:6> 'size_t *' lvalue ParmVar 0x13afbc891d0 'outlen' 'size_t *'
|   | `-BinaryOperator 0x13afbc8a950 <col:15, col:21> 'unsigned long long' '+'
|   |   |-ImplicitCastExpr 0x13afbc8a920 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x13afbc8a8d8 <col:15> 'size_t':'unsigned long long' lvalue Var 0x13afbc89478 'len' 'size_t':'unsigned long long'
|   |   `-ImplicitCastExpr 0x13afbc8a938 <col:21> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x13afbc8a8f8 <col:21> 'int' 1
|   `-ReturnStmt 0x13afbc8a9c8 <line:362:5, col:12>
|     `-ImplicitCastExpr 0x13afbc8a9b0 <col:12> 'unsigned char *' <LValueToRValue>
|       `-DeclRefExpr 0x13afbc8a990 <col:12> 'unsigned char *' lvalue Var 0x13afbc89510 'out' 'unsigned char *'
|-FunctionDecl 0x13afbc8adf0 <line:365:1, line:397:1> line:365:12 invalid cb_server_alpn 'int (int *, const unsigned char **, unsigned char *, const unsigned char *, unsigned int, void *)' static
| |-ParmVarDecl 0x13afbc8aa50 <col:27, col:32> col:32 invalid s 'int *'
| |-ParmVarDecl 0x13afbc8aad8 <col:35, col:57> col:57 used out 'const unsigned char **'
| |-ParmVarDecl 0x13afbc8ab58 <line:366:27, col:42> col:42 used outlen 'unsigned char *'
| |-ParmVarDecl 0x13afbc8abd8 <col:50, col:71> col:71 used in 'const unsigned char *'
| |-ParmVarDecl 0x13afbc8ac58 <line:367:27, col:40> col:40 used inlen 'unsigned int'
| |-ParmVarDecl 0x13afbc8acd8 <col:47, col:53> col:53 used arg 'void *'
| `-CompoundStmt 0x13afbc8e070 <line:368:1, line:397:1>
|   |-DeclStmt 0x13afbc8af58 <line:369:5, col:26>
|   | `-VarDecl 0x13afbc8aef0 <col:5, col:20> col:20 used protos 'unsigned char *'
|   |-DeclStmt 0x13afbc8afe8 <line:370:5, col:22>
|   | `-VarDecl 0x13afbc8af80 <col:5, col:12> col:12 used protos_len 'size_t':'unsigned long long'
|   |-DeclStmt 0x13afbc8d110 <line:371:5, col:25>
|   | `-VarDecl 0x13afbc8d040 <col:5, col:22> col:11 used alpn_str 'char *' cinit
|   |   `-ImplicitCastExpr 0x13afbc8d0f8 <col:22> 'char *' <BitCast>
|   |     `-ImplicitCastExpr 0x13afbc8d0e0 <col:22> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13afbc8d0a8 <col:22> 'void *' lvalue ParmVar 0x13afbc8acd8 'arg' 'void *'
|   |-BinaryOperator 0x13afbc8d2e0 <line:373:5, col:53> 'unsigned char *' '='
|   | |-DeclRefExpr 0x13afbc8d128 <col:5> 'unsigned char *' lvalue Var 0x13afbc8aef0 'protos' 'unsigned char *'
|   | `-CallExpr 0x13afbc8d280 <col:14, col:53> 'unsigned char *'
|   |   |-ImplicitCastExpr 0x13afbc8d268 <col:14> 'unsigned char *(*)(size_t *, const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13afbc8d160 <col:14> 'unsigned char *(size_t *, const char *)' Function 0x13afbc893a0 'next_protos_parse' 'unsigned char *(size_t *, const char *)'
|   |   |-UnaryOperator 0x13afbc8d1b8 <col:32, col:33> 'size_t *' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x13afbc8d180 <col:33> 'size_t':'unsigned long long' lvalue Var 0x13afbc8af80 'protos_len' 'size_t':'unsigned long long'
|   |   `-ImplicitCastExpr 0x13afbc8d2c8 <col:45> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x13afbc8d2b0 <col:45> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13afbc8d1d0 <col:45> 'char *' lvalue Var 0x13afbc8d040 'alpn_str' 'char *'
|   |-IfStmt 0x13afbc8d740 <line:374:5, line:378:5>
|   | |-BinaryOperator 0x13afbc8d3d8 <line:374:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x13afbc8d3a8 <.//openssl//file_jk/after\test\ssltest_old.c:374:9> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbc8d300 <col:9> 'unsigned char *' lvalue Var 0x13afbc8aef0 'protos' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x13afbc8d3c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x13afbc8d388 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x13afbc8d360 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x13afbc8d320 <col:26> 'int' 0
|   | `-CompoundStmt 0x13afbc8d720 <.//openssl//file_jk/after\test\ssltest_old.c:374:25, line:378:5>
|   |   |-CallExpr 0x13afbc8d620 <line:375:9, line:376:25> 'int'
|   |   | |-ImplicitCastExpr 0x13afbc8d608 <line:375:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13afbc8d3f8 <col:9> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x13afbc8d4d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x13afbc8d4b8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x13afbc8d498 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x13afbc8d450 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x13afbc8d438 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x13afbc8d418 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x13afbc8d470 <col:31> 'int' 2
|   |   | |-ImplicitCastExpr 0x13afbc8d670 <.//openssl//file_jk/after\test\ssltest_old.c:375:25> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x13afbc8d658 <col:25> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x13afbc8d528 <col:25> 'char [50]' lvalue "failed to parser ALPN server protocol string: %s\n"
|   |   | `-ImplicitCastExpr 0x13afbc8d688 <line:376:17> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x13afbc8d578 <col:17> 'char *' lvalue Var 0x13afbc8d040 'alpn_str' 'char *'
|   |   `-CallExpr 0x13afbc8d700 <line:377:9, col:15> 'void'
|   |     `-ImplicitCastExpr 0x13afbc8d6e8 <col:9> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x13afbc8d6a0 <col:9> 'void (void) __attribute__((noreturn))' Function 0x13afbc40bd8 'abort' 'void (void) __attribute__((noreturn))'
|   |-IfStmt 0x13afbc8db90 <line:380:5, line:385:5>
|   | |-OpaqueValueExpr 0x13afbc8db78 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbc8db60 <line:382:44, line:385:5>
|   |   `-CallExpr 0x13afbc8db20 <line:383:9, col:28> 'int'
|   |     |-ImplicitCastExpr 0x13afbc8db08 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13afbc8dac8 <col:9> 'int ()' Function 0x13afbc8a1a0 'OPENSSL_free' 'int ()'
|   |     `-ImplicitCastExpr 0x13afbc8db48 <col:22> 'unsigned char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13afbc8dae8 <col:22> 'unsigned char *' lvalue Var 0x13afbc8aef0 'protos' 'unsigned char *'
|   |-BinaryOperator 0x13afbc8dcc0 <line:391:5, col:43> 'unsigned char *' '='
|   | |-DeclRefExpr 0x13afbc8dba8 <col:5> 'unsigned char *' lvalue Var 0x13afbc8b320 'alpn_selected' 'unsigned char *'
|   | `-ImplicitCastExpr 0x13afbc8dca8 <col:21, col:43> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x13afbc8dc50 <col:21, col:43> 'int'
|   |     |-ImplicitCastExpr 0x13afbc8dc38 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13afbc8dbc8 <col:21> 'int ()' Function 0x13afbc899e0 'OPENSSL_malloc' 'int ()'
|   |     `-ImplicitCastExpr 0x13afbc8dc90 <col:36, col:37> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x13afbc8dc78 <col:36, col:37> 'unsigned char' <LValueToRValue>
|   |         `-UnaryOperator 0x13afbc8dc20 <col:36, col:37> 'unsigned char' lvalue prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x13afbc8dc08 <col:37> 'unsigned char *' <LValueToRValue>
|   |             `-DeclRefExpr 0x13afbc8dbe8 <col:37> 'unsigned char *' lvalue ParmVar 0x13afbc8ab58 'outlen' 'unsigned char *'
|   |-CallExpr 0x13afbc8de50 <line:392:5, col:40> 'void *'
|   | |-ImplicitCastExpr 0x13afbc8de38 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc8dce0 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x13afbd27038 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x13afbc8dea0 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x13afbc8de88 <col:12> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbc8dd00 <col:12> 'unsigned char *' lvalue Var 0x13afbc8b320 'alpn_selected' 'unsigned char *'
|   | |-ImplicitCastExpr 0x13afbc8ded0 <col:27, col:28> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x13afbc8deb8 <col:27, col:28> 'const unsigned char *' <LValueToRValue>
|   | |   `-UnaryOperator 0x13afbc8dd58 <col:27, col:28> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x13afbc8dd40 <col:28> 'const unsigned char **' <LValueToRValue>
|   | |       `-DeclRefExpr 0x13afbc8dd20 <col:28> 'const unsigned char **' lvalue ParmVar 0x13afbc8aad8 'out' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x13afbc8df00 <col:33, col:34> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x13afbc8dee8 <col:33, col:34> 'unsigned char' <LValueToRValue>
|   |     `-UnaryOperator 0x13afbc8dda8 <col:33, col:34> 'unsigned char' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x13afbc8dd90 <col:34> 'unsigned char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x13afbc8dd70 <col:34> 'unsigned char *' lvalue ParmVar 0x13afbc8ab58 'outlen' 'unsigned char *'
|   |-BinaryOperator 0x13afbc8dfb8 <line:393:5, col:12> 'const unsigned char *' '='
|   | |-UnaryOperator 0x13afbc8df50 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x13afbc8df38 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbc8df18 <col:6> 'const unsigned char **' lvalue ParmVar 0x13afbc8aad8 'out' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x13afbc8dfa0 <col:12> 'const unsigned char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc8df88 <col:12> 'unsigned char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x13afbc8df68 <col:12> 'unsigned char *' lvalue Var 0x13afbc8b320 'alpn_selected' 'unsigned char *'
|   `-CallExpr 0x13afbc8e030 <line:395:5, col:24> 'int'
|     |-ImplicitCastExpr 0x13afbc8e018 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x13afbc8dfd8 <col:5> 'int ()' Function 0x13afbc8a1a0 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x13afbc8e058 <col:18> 'unsigned char *' <LValueToRValue>
|       `-DeclRefExpr 0x13afbc8dff8 <col:18> 'unsigned char *' lvalue Var 0x13afbc8aef0 'protos' 'unsigned char *'
|-FunctionDecl 0x13afbc8e208 <line:399:1, line:452:1> line:399:12 invalid verify_alpn 'int (int *, int *)' static
| |-ParmVarDecl 0x13afbc8e0e8 <col:24, col:29> col:29 invalid client 'int *'
| |-ParmVarDecl 0x13afbc8e168 <col:37, col:42> col:42 invalid server 'int *'
| `-CompoundStmt 0x13afbc87b58 <line:400:1, line:452:1>
|   |-DeclStmt 0x13afbc8e3e8 <line:401:5, col:53>
|   | |-VarDecl 0x13afbc8e2e8 <col:5, col:26> col:26 used client_proto 'const unsigned char *'
|   | `-VarDecl 0x13afbc8e368 <col:5, col:41> col:41 used server_proto 'const unsigned char *'
|   |-DeclStmt 0x13afbc8e598 <line:402:5, col:60>
|   | |-VarDecl 0x13afbc8e418 <col:5, col:37> col:18 used client_proto_len 'unsigned int' cinit
|   | | `-ImplicitCastExpr 0x13afbc8e4a8 <col:37> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x13afbc8e480 <col:37> 'int' 0
|   | `-VarDecl 0x13afbc8e4d8 <col:5, col:59> col:40 used server_proto_len 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x13afbc8e568 <col:59> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x13afbc8e540 <col:59> 'int' 0
|   |-CallExpr 0x13afbc8e878 <line:406:5, col:31> 'int'
|   | |-ImplicitCastExpr 0x13afbc8e860 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc8e820 <col:5> 'int ()' Function 0x13afbc8a1a0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x13afbc8e8a0 <col:18> 'unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x13afbc8e840 <col:18> 'unsigned char *' lvalue Var 0x13afbc8b320 'alpn_selected' 'unsigned char *'
|   |-BinaryOperator 0x13afbc8e978 <line:407:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'unsigned char *' '='
|   | |-DeclRefExpr 0x13afbc8e8b8 <.//openssl//file_jk/after\test\ssltest_old.c:407:5> 'unsigned char *' lvalue Var 0x13afbc8b320 'alpn_selected' 'unsigned char *'
|   | `-ImplicitCastExpr 0x13afbc8e960 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <NullToPointer>
|   |   `-ParenExpr 0x13afbc8e940 <col:17, col:27> 'void *'
|   |     `-CStyleCastExpr 0x13afbc8e918 <col:18, col:26> 'void *' <NullToPointer>
|   |       `-IntegerLiteral 0x13afbc8e8d8 <col:26> 'int' 0
|   |-IfStmt 0x13afbc8eb00 <.//openssl//file_jk/after\test\ssltest_old.c:409:5, line:412:5>
|   | |-BinaryOperator 0x13afbc8ea08 <line:409:9, col:29> 'int' '!='
|   | | |-ImplicitCastExpr 0x13afbc8e9d8 <col:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbc8e998 <col:9> 'unsigned int' lvalue Var 0x13afbc8e418 'client_proto_len' 'unsigned int'
|   | | `-ImplicitCastExpr 0x13afbc8e9f0 <col:29> 'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbc8e9b8 <col:29> 'unsigned int' lvalue Var 0x13afbc8e4d8 'server_proto_len' 'unsigned int'
|   | `-CompoundStmt 0x13afbc8eae8 <col:47, line:412:5>
|   |   `-GotoStmt 0x13afbc8ead0 <line:411:9, col:14> 'err' 0x13afbc8ea80
|   |-IfStmt 0x13afbc8eea8 <line:414:5, line:418:5>
|   | |-BinaryOperator 0x13afbc8ee00 <line:414:9, line:415:65> 'int' '&&'
|   | | |-BinaryOperator 0x13afbc8ebf0 <line:414:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | | |-ImplicitCastExpr 0x13afbc8ebc0 <.//openssl//file_jk/after\test\ssltest_old.c:414:9> 'const unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x13afbc8eb18 <col:9> 'const unsigned char *' lvalue Var 0x13afbc8e2e8 'client_proto' 'const unsigned char *'
|   | | | `-ImplicitCastExpr 0x13afbc8ebd8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const unsigned char *' <BitCast>
|   | | |   `-ParenExpr 0x13afbc8eba0 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x13afbc8eb78 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x13afbc8eb38 <col:26> 'int' 0
|   | | `-BinaryOperator 0x13afbc8ede0 <.//openssl//file_jk/after\test\ssltest_old.c:415:9, col:65> 'int' '!='
|   | |   |-CallExpr 0x13afbc8ecf0 <col:9, col:60> 'int'
|   | |   | |-ImplicitCastExpr 0x13afbc8ecd8 <col:9> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x13afbc8ec10 <col:9> 'int (const void *, const void *, unsigned long long)' Function 0x13afbd26a88 'memcmp' 'int (const void *, const void *, unsigned long long)'
|   | |   | |-ImplicitCastExpr 0x13afbc8ed40 <col:16> 'const void *' <BitCast>
|   | |   | | `-ImplicitCastExpr 0x13afbc8ed28 <col:16> 'const unsigned char *' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x13afbc8ec30 <col:16> 'const unsigned char *' lvalue Var 0x13afbc8e2e8 'client_proto' 'const unsigned char *'
|   | |   | |-ImplicitCastExpr 0x13afbc8ed70 <col:30> 'const void *' <BitCast>
|   | |   | | `-ImplicitCastExpr 0x13afbc8ed58 <col:30> 'const unsigned char *' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x13afbc8ec50 <col:30> 'const unsigned char *' lvalue Var 0x13afbc8e368 'server_proto' 'const unsigned char *'
|   | |   | `-ImplicitCastExpr 0x13afbc8eda0 <col:44> 'unsigned long long' <IntegralCast>
|   | |   |   `-ImplicitCastExpr 0x13afbc8ed88 <col:44> 'unsigned int' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x13afbc8ec70 <col:44> 'unsigned int' lvalue Var 0x13afbc8e418 'client_proto_len' 'unsigned int'
|   | |   `-IntegerLiteral 0x13afbc8edb8 <col:65> 'int' 0
|   | `-CompoundStmt 0x13afbc8ee90 <col:68, line:418:5>
|   |   `-GotoStmt 0x13afbc8ee78 <line:417:9, col:14> 'err' 0x13afbc8ea80
|   |-IfStmt 0x13afbc87110 <line:420:5, line:423:5>
|   | |-BinaryOperator 0x13afbc87030 <line:420:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '&&'
|   | | |-BinaryOperator 0x13afbc8ef38 <.//openssl//file_jk/after\test\ssltest_old.c:420:9, col:28> 'int' '>'
|   | | | |-ImplicitCastExpr 0x13afbc8ef08 <col:9> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x13afbc8eec0 <col:9> 'unsigned int' lvalue Var 0x13afbc8e418 'client_proto_len' 'unsigned int'
|   | | | `-ImplicitCastExpr 0x13afbc8ef20 <col:28> 'unsigned int' <IntegralCast>
|   | | |   `-IntegerLiteral 0x13afbc8eee0 <col:28> 'int' 0
|   | | `-BinaryOperator 0x13afbc87010 <col:33, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | |   |-ImplicitCastExpr 0x13afbc8f000 <.//openssl//file_jk/after\test\ssltest_old.c:420:33> 'const char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x13afbc8ef58 <col:33> 'const char *' lvalue Var 0x13afbc8b288 'alpn_expected' 'const char *'
|   | |   `-ImplicitCastExpr 0x13afbc8f018 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |     `-ParenExpr 0x13afbc8efe0 <col:17, col:27> 'void *'
|   | |       `-CStyleCastExpr 0x13afbc8efb8 <col:18, col:26> 'void *' <NullToPointer>
|   | |         `-IntegerLiteral 0x13afbc8ef78 <col:26> 'int' 0
|   | `-CompoundStmt 0x13afbc870f8 <.//openssl//file_jk/after\test\ssltest_old.c:420:56, line:423:5>
|   |   `-GotoStmt 0x13afbc870e0 <line:422:9, col:14> 'err' 0x13afbc8ea80
|   |-IfStmt 0x13afbc87690 <line:425:5, line:432:5>
|   | |-BinaryOperator 0x13afbc87570 <line:425:9, line:427:68> 'int' '&&'
|   | | |-BinaryOperator 0x13afbc87200 <line:425:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | | |-ImplicitCastExpr 0x13afbc871d0 <.//openssl//file_jk/after\test\ssltest_old.c:425:9> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x13afbc87128 <col:9> 'const char *' lvalue Var 0x13afbc8b288 'alpn_expected' 'const char *'
|   | | | `-ImplicitCastExpr 0x13afbc871e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |   `-ParenExpr 0x13afbc871b0 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x13afbc87188 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x13afbc87148 <col:26> 'int' 0
|   | | `-ParenExpr 0x13afbc87550 <.//openssl//file_jk/after\test\ssltest_old.c:426:9, line:427:68> 'int'
|   | |   `-BinaryOperator 0x13afbc87530 <line:426:10, line:427:67> 'int' '||'
|   | |     |-BinaryOperator 0x13afbc87320 <line:426:10, col:50> 'int' '!='
|   | |     | |-ImplicitCastExpr 0x13afbc87308 <col:10> 'unsigned long long' <IntegralCast>
|   | |     | | `-ImplicitCastExpr 0x13afbc872f0 <col:10> 'unsigned int' <LValueToRValue>
|   | |     | |   `-DeclRefExpr 0x13afbc87220 <col:10> 'unsigned int' lvalue Var 0x13afbc8e418 'client_proto_len' 'unsigned int'
|   | |     | `-CallExpr 0x13afbc872b0 <col:30, col:50> 'unsigned long long'
|   | |     |   |-ImplicitCastExpr 0x13afbc87298 <col:30> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   | |     |   | `-DeclRefExpr 0x13afbc87240 <col:30> 'unsigned long long (const char *)' Function 0x13afbd2d960 'strlen' 'unsigned long long (const char *)'
|   | |     |   `-ImplicitCastExpr 0x13afbc872d8 <col:37> 'const char *' <LValueToRValue>
|   | |     |     `-DeclRefExpr 0x13afbc87260 <col:37> 'const char *' lvalue Var 0x13afbc8b288 'alpn_expected' 'const char *'
|   | |     `-BinaryOperator 0x13afbc87510 <line:427:10, col:67> 'int' '!='
|   | |       |-CallExpr 0x13afbc87420 <col:10, col:62> 'int'
|   | |       | |-ImplicitCastExpr 0x13afbc87408 <col:10> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | |       | | `-DeclRefExpr 0x13afbc87340 <col:10> 'int (const void *, const void *, unsigned long long)' Function 0x13afbd26a88 'memcmp' 'int (const void *, const void *, unsigned long long)'
|   | |       | |-ImplicitCastExpr 0x13afbc87470 <col:17> 'const void *' <BitCast>
|   | |       | | `-ImplicitCastExpr 0x13afbc87458 <col:17> 'const unsigned char *' <LValueToRValue>
|   | |       | |   `-DeclRefExpr 0x13afbc87360 <col:17> 'const unsigned char *' lvalue Var 0x13afbc8e2e8 'client_proto' 'const unsigned char *'
|   | |       | |-ImplicitCastExpr 0x13afbc874a0 <col:31> 'const void *' <BitCast>
|   | |       | | `-ImplicitCastExpr 0x13afbc87488 <col:31> 'const char *' <LValueToRValue>
|   | |       | |   `-DeclRefExpr 0x13afbc87380 <col:31> 'const char *' lvalue Var 0x13afbc8b288 'alpn_expected' 'const char *'
|   | |       | `-ImplicitCastExpr 0x13afbc874d0 <col:46> 'unsigned long long' <IntegralCast>
|   | |       |   `-ImplicitCastExpr 0x13afbc874b8 <col:46> 'unsigned int' <LValueToRValue>
|   | |       |     `-DeclRefExpr 0x13afbc873a0 <col:46> 'unsigned int' lvalue Var 0x13afbc8e418 'client_proto_len' 'unsigned int'
|   | |       `-IntegerLiteral 0x13afbc874e8 <col:67> 'int' 0
|   | `-CompoundStmt 0x13afbc87678 <col:71, line:432:5>
|   |   `-GotoStmt 0x13afbc87660 <line:431:9, col:14> 'err' 0x13afbc8ea80
|   |-ReturnStmt 0x13afbc876d0 <line:434:5, col:12>
|   | `-IntegerLiteral 0x13afbc876a8 <col:12> 'int' 0
|   |-LabelStmt 0x13afbc87770 <line:436:2, col:5> 'err'
|   | `-NullStmt 0x13afbc87768 <col:5>
|   |-IfStmt 0x13afbc87ae0 <line:444:5, line:450:5> has_else
|   | |-OpaqueValueExpr 0x13afbc87ac8 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x13afbc87a48 <line:444:44, line:447:5>
|   | `-CompoundStmt 0x13afbc87ab8 <col:12, line:450:5>
|   `-ReturnStmt 0x13afbc87b48 <line:451:5, col:13>
|     `-UnaryOperator 0x13afbc87b30 <col:12, col:13> 'int' prefix '-'
|       `-IntegerLiteral 0x13afbc87b08 <col:13> 'int' 1
|-VarDecl 0x13afbc87be8 <line:465:1, col:45> col:19 used custom_ext_cli_string 'const char [4]' static cinit
| `-StringLiteral 0x13afbc87c88 <col:45> 'const char [4]' "abc"
|-VarDecl 0x13afbc87d18 <line:466:1, col:45> col:19 used custom_ext_srv_string 'const char [5]' static cinit
| `-StringLiteral 0x13afbc87d80 <col:45> 'const char [5]' "defg"
|-VarDecl 0x13afbc87e10 <line:469:1, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\test\ssltest_old.c:469:14 used serverinfo_file 'char *' static cinit
| `-ImplicitCastExpr 0x13afbc87f18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   `-ParenExpr 0x13afbc87ee0 <col:17, col:27> 'void *'
|     `-CStyleCastExpr 0x13afbc87eb8 <col:18, col:26> 'void *' <NullToPointer>
|       `-IntegerLiteral 0x13afbc87e78 <col:26> 'int' 0
|-VarDecl 0x13afbc87f48 <.//openssl//file_jk/after\test\ssltest_old.c:470:1, col:29> col:12 used serverinfo_sct 'int' static cinit
| `-IntegerLiteral 0x13afbc87fb0 <col:29> 'int' 0
|-VarDecl 0x13afbc88008 <line:471:1, col:30> col:12 used serverinfo_tack 'int' static cinit
| `-IntegerLiteral 0x13afbc88070 <col:30> 'int' 0
|-VarDecl 0x13afbc880c8 <line:474:1, col:34> col:12 used serverinfo_sct_seen 'int' static cinit
| `-IntegerLiteral 0x13afbc88130 <col:34> 'int' 0
|-VarDecl 0x13afbc88188 <line:475:1, col:35> col:12 used serverinfo_tack_seen 'int' static cinit
| `-IntegerLiteral 0x13afbc881f0 <col:35> 'int' 0
|-VarDecl 0x13afbc88248 <line:476:1, col:36> col:12 used serverinfo_other_seen 'int' static cinit
| `-IntegerLiteral 0x13afbc882b0 <col:36> 'int' 0
|-VarDecl 0x13afbc88308 <line:479:1, col:25> col:12 used custom_ext 'int' static cinit
| `-IntegerLiteral 0x13afbc88370 <col:25> 'int' 0
|-VarDecl 0x13afbc883c8 <line:482:1, col:31> col:12 used custom_ext_error 'int' static cinit
| `-IntegerLiteral 0x13afbc88430 <col:31> 'int' 0
|-FunctionDecl 0x13afbc88880 <line:484:1, line:495:1> line:484:12 invalid serverinfo_cli_parse_cb 'int (int *, unsigned int, const unsigned char *, size_t, int *, void *)' static
| |-ParmVarDecl 0x13afbc88488 <col:36, col:41> col:41 invalid s 'int *'
| |-ParmVarDecl 0x13afbc88508 <col:44, col:57> col:57 used ext_type 'unsigned int'
| |-ParmVarDecl 0x13afbc88588 <line:485:36, col:57> col:57 in 'const unsigned char *'
| |-ParmVarDecl 0x13afbc88600 <col:61, col:68> col:68 inlen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc88680 <line:486:36, col:41> col:41 al 'int *'
| |-ParmVarDecl 0x13afbc88700 <col:45, col:51> col:51 arg 'void *'
| `-CompoundStmt 0x13afbc88b80 <line:487:1, line:495:1>
|   |-IfStmt 0x13afbc88b20 <line:488:5, line:493:30> has_else
|   | |-OpaqueValueExpr 0x13afbc88b08 <<invalid sloc>> '_Bool'
|   | |-UnaryOperator 0x13afbc889c0 <line:489:9, col:28> 'int' postfix '++'
|   | | `-DeclRefExpr 0x13afbc889a0 <col:9> 'int' lvalue Var 0x13afbc880c8 'serverinfo_sct_seen' 'int'
|   | `-IfStmt 0x13afbc88ae0 <line:490:10, line:493:30> has_else
|   |   |-BinaryOperator 0x13afbc88a50 <line:490:14, line:459:23> 'int' '=='
|   |   | |-ImplicitCastExpr 0x13afbc88a20 <line:490:14> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x13afbc889d8 <col:14> 'unsigned int' lvalue ParmVar 0x13afbc88508 'ext_type' 'unsigned int'
|   |   | `-ImplicitCastExpr 0x13afbc88a38 <line:459:23> 'unsigned int' <IntegralCast>
|   |   |   `-IntegerLiteral 0x13afbc889f8 <col:23> 'int' 62208
|   |   |-UnaryOperator 0x13afbc88a90 <line:491:9, col:29> 'int' postfix '++'
|   |   | `-DeclRefExpr 0x13afbc88a70 <col:9> 'int' lvalue Var 0x13afbc88188 'serverinfo_tack_seen' 'int'
|   |   `-UnaryOperator 0x13afbc88ac8 <line:493:9, col:30> 'int' postfix '++'
|   |     `-DeclRefExpr 0x13afbc88aa8 <col:9> 'int' lvalue Var 0x13afbc88248 'serverinfo_other_seen' 'int'
|   `-ReturnStmt 0x13afbc88b70 <line:494:5, col:12>
|     `-IntegerLiteral 0x13afbc88b48 <col:12> 'int' 1
|-FunctionDecl 0x13afbc88bc8 <line:497:1, line:506:1> line:497:12 used verify_serverinfo 'int ()' static
| `-CompoundStmt 0x13afbc88f48 <line:498:1, line:506:1>
|   |-IfStmt 0x13afbc88d60 <line:499:5, line:500:17>
|   | |-BinaryOperator 0x13afbc88cf0 <line:499:9, col:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x13afbc88cc0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbc88c80 <col:9> 'int' lvalue Var 0x13afbc87f48 'serverinfo_sct' 'int'
|   | | `-ImplicitCastExpr 0x13afbc88cd8 <col:27> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbc88ca0 <col:27> 'int' lvalue Var 0x13afbc880c8 'serverinfo_sct_seen' 'int'
|   | `-ReturnStmt 0x13afbc88d50 <line:500:9, col:17>
|   |   `-UnaryOperator 0x13afbc88d38 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x13afbc88d10 <col:17> 'int' 1
|   |-IfStmt 0x13afbc88e58 <line:501:5, line:502:17>
|   | |-BinaryOperator 0x13afbc88de8 <line:501:9, col:28> 'int' '!='
|   | | |-ImplicitCastExpr 0x13afbc88db8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbc88d78 <col:9> 'int' lvalue Var 0x13afbc88008 'serverinfo_tack' 'int'
|   | | `-ImplicitCastExpr 0x13afbc88dd0 <col:28> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbc88d98 <col:28> 'int' lvalue Var 0x13afbc88188 'serverinfo_tack_seen' 'int'
|   | `-ReturnStmt 0x13afbc88e48 <line:502:9, col:17>
|   |   `-UnaryOperator 0x13afbc88e30 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x13afbc88e08 <col:17> 'int' 1
|   |-IfStmt 0x13afbc88ef8 <line:503:5, line:504:17>
|   | |-ImplicitCastExpr 0x13afbc88e90 <line:503:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13afbc88e70 <col:9> 'int' lvalue Var 0x13afbc88248 'serverinfo_other_seen' 'int'
|   | `-ReturnStmt 0x13afbc88ee8 <line:504:9, col:17>
|   |   `-UnaryOperator 0x13afbc88ed0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x13afbc88ea8 <col:17> 'int' 1
|   `-ReturnStmt 0x13afbc88f38 <line:505:5, col:12>
|     `-IntegerLiteral 0x13afbc88f10 <col:12> 'int' 0
|-FunctionDecl 0x13afbc933f0 <line:516:1, line:523:1> line:516:12 invalid custom_ext_0_cli_add_cb 'int (int *, unsigned int, const unsigned char **, size_t *, int *, void *)' static
| |-ParmVarDecl 0x13afbc88f90 <col:36, col:41> col:41 invalid s 'int *'
| |-ParmVarDecl 0x13afbc93070 <col:44, col:57> col:57 used ext_type 'unsigned int'
| |-ParmVarDecl 0x13afbc930f8 <line:517:36, col:58> col:58 out 'const unsigned char **'
| |-ParmVarDecl 0x13afbc93170 <line:518:36, col:44> col:44 outlen 'size_t *'
| |-ParmVarDecl 0x13afbc931f0 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x13afbc93270 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x13afbc93640 <line:519:1, line:523:1>
|   |-IfStmt 0x13afbc935f0 <line:520:5, line:521:28>
|   | |-BinaryOperator 0x13afbc93568 <line:520:9, line:460:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x13afbc93538 <line:520:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbc934d8 <col:9> 'unsigned int' lvalue ParmVar 0x13afbc93070 'ext_type' 'unsigned int'
|   | | `-ImplicitCastExpr 0x13afbc93550 <line:460:27> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x13afbc93510 <col:27> 'int' 1000
|   | `-BinaryOperator 0x13afbc935d0 <line:521:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x13afbc93588 <col:9> 'int' lvalue Var 0x13afbc883c8 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x13afbc935a8 <col:28> 'int' 1
|   `-ReturnStmt 0x13afbc93630 <line:522:5, col:12>
|     `-IntegerLiteral 0x13afbc93608 <col:12> 'int' 0
|-FunctionDecl 0x13afbc93a10 <line:525:1, line:530:1> line:525:12 invalid custom_ext_0_cli_parse_cb 'int (int *, unsigned int, const unsigned char *, size_t, int *, void *)' static
| |-ParmVarDecl 0x13afbc936d8 <col:38, col:43> col:43 invalid s 'int *'
| |-ParmVarDecl 0x13afbc93758 <col:46, col:59> col:59 ext_type 'unsigned int'
| |-ParmVarDecl 0x13afbc937d8 <line:526:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x13afbc93850 <line:527:38, col:45> col:45 inlen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc938d0 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x13afbc93950 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x13afbc93b30 <line:528:1, line:530:1>
|   `-ReturnStmt 0x13afbc93b20 <line:529:5, col:12>
|     `-IntegerLiteral 0x13afbc93af8 <col:12> 'int' 1
|-FunctionDecl 0x13afbc93f18 <line:532:1, line:541:1> line:532:12 invalid custom_ext_1_cli_add_cb 'int (int *, unsigned int, const unsigned char **, size_t *, int *, void *)' static
| |-ParmVarDecl 0x13afbc93bd8 <col:36, col:41> col:41 invalid s 'int *'
| |-ParmVarDecl 0x13afbc93c58 <col:44, col:57> col:57 used ext_type 'unsigned int'
| |-ParmVarDecl 0x13afbc93ce0 <line:533:36, col:58> col:58 used out 'const unsigned char **'
| |-ParmVarDecl 0x13afbc93d58 <line:534:36, col:44> col:44 used outlen 'size_t *'
| |-ParmVarDecl 0x13afbc93dd8 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x13afbc93e58 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x13afbc943e8 <line:535:1, line:541:1>
|   |-IfStmt 0x13afbc94118 <line:536:5, line:537:28>
|   | |-BinaryOperator 0x13afbc94090 <line:536:9, line:461:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x13afbc94060 <line:536:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbc94000 <col:9> 'unsigned int' lvalue ParmVar 0x13afbc93c58 'ext_type' 'unsigned int'
|   | | `-ImplicitCastExpr 0x13afbc94078 <line:461:27> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x13afbc94038 <col:27> 'int' 1001
|   | `-BinaryOperator 0x13afbc940f8 <line:537:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x13afbc940b0 <col:9> 'int' lvalue Var 0x13afbc883c8 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x13afbc940d0 <col:28> 'int' 1
|   |-BinaryOperator 0x13afbc94210 <line:538:5, col:35> 'const unsigned char *' '='
|   | |-UnaryOperator 0x13afbc94180 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x13afbc94168 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbc94130 <col:6> 'const unsigned char **' lvalue ParmVar 0x13afbc93ce0 'out' 'const unsigned char **'
|   | `-CStyleCastExpr 0x13afbc941e8 <col:12, col:35> 'const unsigned char *' <BitCast>
|   |   `-ImplicitCastExpr 0x13afbc941d0 <col:35> 'const char *' <ArrayToPointerDecay> part_of_explicit_cast
|   |     `-DeclRefExpr 0x13afbc94198 <col:35> 'const char [4]' lvalue Var 0x13afbc87be8 'custom_ext_cli_string' 'const char [4]'
|   |-BinaryOperator 0x13afbc94348 <line:539:5, col:43> 'size_t':'unsigned long long' '='
|   | |-UnaryOperator 0x13afbc94280 <col:5, col:6> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x13afbc94268 <col:6> 'size_t *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbc94230 <col:6> 'size_t *' lvalue ParmVar 0x13afbc93d58 'outlen' 'size_t *'
|   | `-CallExpr 0x13afbc94308 <col:15, col:43> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x13afbc942f0 <col:15> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13afbc94298 <col:15> 'unsigned long long (const char *)' Function 0x13afbd2d960 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x13afbc94330 <col:22> 'const char *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x13afbc942b8 <col:22> 'const char [4]' lvalue Var 0x13afbc87be8 'custom_ext_cli_string' 'const char [4]'
|   `-ReturnStmt 0x13afbc943d8 <line:540:5, col:12>
|     `-IntegerLiteral 0x13afbc943b0 <col:12> 'int' 1
|-FunctionDecl 0x13afbc94798 <line:543:1, line:548:1> line:543:12 invalid custom_ext_1_cli_parse_cb 'int (int *, unsigned int, const unsigned char *, size_t, int *, void *)' static
| |-ParmVarDecl 0x13afbc94460 <col:38, col:43> col:43 invalid s 'int *'
| |-ParmVarDecl 0x13afbc944e0 <col:46, col:59> col:59 ext_type 'unsigned int'
| |-ParmVarDecl 0x13afbc94560 <line:544:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x13afbc945d8 <line:545:38, col:45> col:45 inlen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc94658 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x13afbc946d8 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x13afbc948b8 <line:546:1, line:548:1>
|   `-ReturnStmt 0x13afbc948a8 <line:547:5, col:12>
|     `-IntegerLiteral 0x13afbc94880 <col:12> 'int' 1
|-FunctionDecl 0x13afbc94ca0 <line:550:1, line:559:1> line:550:12 invalid custom_ext_2_cli_add_cb 'int (int *, unsigned int, const unsigned char **, size_t *, int *, void *)' static
| |-ParmVarDecl 0x13afbc94960 <col:36, col:41> col:41 invalid s 'int *'
| |-ParmVarDecl 0x13afbc949e0 <col:44, col:57> col:57 used ext_type 'unsigned int'
| |-ParmVarDecl 0x13afbc94a68 <line:551:36, col:58> col:58 used out 'const unsigned char **'
| |-ParmVarDecl 0x13afbc94ae0 <line:552:36, col:44> col:44 used outlen 'size_t *'
| |-ParmVarDecl 0x13afbc94b60 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x13afbc94be0 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x13afbc850c8 <line:553:1, line:559:1>
|   |-IfStmt 0x13afbc94ea0 <line:554:5, line:555:28>
|   | |-BinaryOperator 0x13afbc94e18 <line:554:9, line:462:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x13afbc94de8 <line:554:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbc94d88 <col:9> 'unsigned int' lvalue ParmVar 0x13afbc949e0 'ext_type' 'unsigned int'
|   | | `-ImplicitCastExpr 0x13afbc94e00 <line:462:27> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x13afbc94dc0 <col:27> 'int' 1002
|   | `-BinaryOperator 0x13afbc94e80 <line:555:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x13afbc94e38 <col:9> 'int' lvalue Var 0x13afbc883c8 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x13afbc94e58 <col:28> 'int' 1
|   |-BinaryOperator 0x13afbc94f98 <line:556:5, col:35> 'const unsigned char *' '='
|   | |-UnaryOperator 0x13afbc94f08 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x13afbc94ef0 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbc94eb8 <col:6> 'const unsigned char **' lvalue ParmVar 0x13afbc94a68 'out' 'const unsigned char **'
|   | `-CStyleCastExpr 0x13afbc94f70 <col:12, col:35> 'const unsigned char *' <BitCast>
|   |   `-ImplicitCastExpr 0x13afbc94f58 <col:35> 'const char *' <ArrayToPointerDecay> part_of_explicit_cast
|   |     `-DeclRefExpr 0x13afbc94f20 <col:35> 'const char [4]' lvalue Var 0x13afbc87be8 'custom_ext_cli_string' 'const char [4]'
|   |-BinaryOperator 0x13afbc85070 <line:557:5, col:43> 'size_t':'unsigned long long' '='
|   | |-UnaryOperator 0x13afbc95008 <col:5, col:6> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x13afbc94ff0 <col:6> 'size_t *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbc94fb8 <col:6> 'size_t *' lvalue ParmVar 0x13afbc94ae0 'outlen' 'size_t *'
|   | `-CallExpr 0x13afbc85030 <col:15, col:43> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x13afbc85018 <col:15> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13afbc95020 <col:15> 'unsigned long long (const char *)' Function 0x13afbd2d960 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x13afbc85058 <col:22> 'const char *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x13afbc95040 <col:22> 'const char [4]' lvalue Var 0x13afbc87be8 'custom_ext_cli_string' 'const char [4]'
|   `-ReturnStmt 0x13afbc850b8 <line:558:5, col:12>
|     `-IntegerLiteral 0x13afbc85090 <col:12> 'int' 1
|-FunctionDecl 0x13afbc85478 <line:561:1, line:570:1> line:561:12 invalid custom_ext_2_cli_parse_cb 'int (int *, unsigned int, const unsigned char *, size_t, int *, void *)' static
| |-ParmVarDecl 0x13afbc85140 <col:38, col:43> col:43 invalid s 'int *'
| |-ParmVarDecl 0x13afbc851c0 <col:46, col:59> col:59 used ext_type 'unsigned int'
| |-ParmVarDecl 0x13afbc85240 <line:562:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x13afbc852b8 <line:563:38, col:45> col:45 used inlen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc85338 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x13afbc853b8 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x13afbc857f8 <line:564:1, line:570:1>
|   |-IfStmt 0x13afbc85678 <line:565:5, line:566:28>
|   | |-BinaryOperator 0x13afbc855f0 <line:565:9, line:462:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x13afbc855c0 <line:565:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbc85560 <col:9> 'unsigned int' lvalue ParmVar 0x13afbc851c0 'ext_type' 'unsigned int'
|   | | `-ImplicitCastExpr 0x13afbc855d8 <line:462:27> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x13afbc85598 <col:27> 'int' 1002
|   | `-BinaryOperator 0x13afbc85658 <line:566:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x13afbc85610 <col:9> 'int' lvalue Var 0x13afbc883c8 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x13afbc85630 <col:28> 'int' 1
|   |-IfStmt 0x13afbc857a8 <line:567:5, line:568:28>
|   | |-BinaryOperator 0x13afbc85720 <line:567:9, col:18> 'int' '!='
|   | | |-ImplicitCastExpr 0x13afbc856f0 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbc85690 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x13afbc852b8 'inlen' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x13afbc85708 <col:18> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x13afbc856c8 <col:18> 'int' 0
|   | `-BinaryOperator 0x13afbc85788 <line:568:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x13afbc85740 <col:9> 'int' lvalue Var 0x13afbc883c8 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x13afbc85760 <col:28> 'int' 1
|   `-ReturnStmt 0x13afbc857e8 <line:569:5, col:12>
|     `-IntegerLiteral 0x13afbc857c0 <col:12> 'int' 1
|-FunctionDecl 0x13afbc85bc0 <line:572:1, line:581:1> line:572:12 invalid custom_ext_3_cli_add_cb 'int (int *, unsigned int, const unsigned char **, size_t *, int *, void *)' static
| |-ParmVarDecl 0x13afbc85880 <col:36, col:41> col:41 invalid s 'int *'
| |-ParmVarDecl 0x13afbc85900 <col:44, col:57> col:57 used ext_type 'unsigned int'
| |-ParmVarDecl 0x13afbc85988 <line:573:36, col:58> col:58 used out 'const unsigned char **'
| |-ParmVarDecl 0x13afbc85a00 <line:574:36, col:44> col:44 used outlen 'size_t *'
| |-ParmVarDecl 0x13afbc85a80 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x13afbc85b00 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x13afbc86048 <line:575:1, line:581:1>
|   |-IfStmt 0x13afbc85dc0 <line:576:5, line:577:28>
|   | |-BinaryOperator 0x13afbc85d38 <line:576:9, line:463:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x13afbc85d08 <line:576:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbc85ca8 <col:9> 'unsigned int' lvalue ParmVar 0x13afbc85900 'ext_type' 'unsigned int'
|   | | `-ImplicitCastExpr 0x13afbc85d20 <line:463:27> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x13afbc85ce0 <col:27> 'int' 1003
|   | `-BinaryOperator 0x13afbc85da0 <line:577:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x13afbc85d58 <col:9> 'int' lvalue Var 0x13afbc883c8 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x13afbc85d78 <col:28> 'int' 1
|   |-BinaryOperator 0x13afbc85eb8 <line:578:5, col:35> 'const unsigned char *' '='
|   | |-UnaryOperator 0x13afbc85e28 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x13afbc85e10 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbc85dd8 <col:6> 'const unsigned char **' lvalue ParmVar 0x13afbc85988 'out' 'const unsigned char **'
|   | `-CStyleCastExpr 0x13afbc85e90 <col:12, col:35> 'const unsigned char *' <BitCast>
|   |   `-ImplicitCastExpr 0x13afbc85e78 <col:35> 'const char *' <ArrayToPointerDecay> part_of_explicit_cast
|   |     `-DeclRefExpr 0x13afbc85e40 <col:35> 'const char [4]' lvalue Var 0x13afbc87be8 'custom_ext_cli_string' 'const char [4]'
|   |-BinaryOperator 0x13afbc85ff0 <line:579:5, col:43> 'size_t':'unsigned long long' '='
|   | |-UnaryOperator 0x13afbc85f28 <col:5, col:6> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x13afbc85f10 <col:6> 'size_t *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbc85ed8 <col:6> 'size_t *' lvalue ParmVar 0x13afbc85a00 'outlen' 'size_t *'
|   | `-CallExpr 0x13afbc85fb0 <col:15, col:43> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x13afbc85f98 <col:15> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13afbc85f40 <col:15> 'unsigned long long (const char *)' Function 0x13afbd2d960 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x13afbc85fd8 <col:22> 'const char *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x13afbc85f60 <col:22> 'const char [4]' lvalue Var 0x13afbc87be8 'custom_ext_cli_string' 'const char [4]'
|   `-ReturnStmt 0x13afbc86038 <line:580:5, col:12>
|     `-IntegerLiteral 0x13afbc86010 <col:12> 'int' 1
|-FunctionDecl 0x13afbc863f8 <line:583:1, line:594:1> line:583:12 invalid custom_ext_3_cli_parse_cb 'int (int *, unsigned int, const unsigned char *, size_t, int *, void *)' static
| |-ParmVarDecl 0x13afbc860c0 <col:38, col:43> col:43 invalid s 'int *'
| |-ParmVarDecl 0x13afbc86140 <col:46, col:59> col:59 used ext_type 'unsigned int'
| |-ParmVarDecl 0x13afbc861c0 <line:584:38, col:59> col:59 used in 'const unsigned char *'
| |-ParmVarDecl 0x13afbc86238 <line:585:38, col:45> col:45 used inlen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc862b8 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x13afbc86338 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x13afbc86aa0 <line:586:1, line:594:1>
|   |-IfStmt 0x13afbc865f8 <line:587:5, line:588:28>
|   | |-BinaryOperator 0x13afbc86570 <line:587:9, line:463:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x13afbc86540 <line:587:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbc864e0 <col:9> 'unsigned int' lvalue ParmVar 0x13afbc86140 'ext_type' 'unsigned int'
|   | | `-ImplicitCastExpr 0x13afbc86558 <line:463:27> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x13afbc86518 <col:27> 'int' 1003
|   | `-BinaryOperator 0x13afbc865d8 <line:588:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x13afbc86590 <col:9> 'int' lvalue Var 0x13afbc883c8 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x13afbc865b0 <col:28> 'int' 1
|   |-IfStmt 0x13afbc867e0 <line:589:5, line:590:28>
|   | |-BinaryOperator 0x13afbc86710 <line:589:9, col:46> 'int' '!='
|   | | |-ImplicitCastExpr 0x13afbc866f8 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbc86610 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x13afbc86238 'inlen' 'size_t':'unsigned long long'
|   | | `-CallExpr 0x13afbc866b8 <col:18, col:46> 'unsigned long long'
|   | |   |-ImplicitCastExpr 0x13afbc866a0 <col:18> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x13afbc86648 <col:18> 'unsigned long long (const char *)' Function 0x13afbd2d960 'strlen' 'unsigned long long (const char *)'
|   | |   `-ImplicitCastExpr 0x13afbc866e0 <col:25> 'const char *' <ArrayToPointerDecay>
|   | |     `-DeclRefExpr 0x13afbc86668 <col:25> 'const char [5]' lvalue Var 0x13afbc87d18 'custom_ext_srv_string' 'const char [5]'
|   | `-BinaryOperator 0x13afbc867c0 <line:590:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x13afbc86778 <col:9> 'int' lvalue Var 0x13afbc883c8 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x13afbc86798 <col:28> 'int' 1
|   |-IfStmt 0x13afbc86a50 <line:591:5, line:592:28>
|   | |-BinaryOperator 0x13afbc869c8 <line:591:9, col:53> 'int' '!='
|   | | |-CallExpr 0x13afbc868f0 <col:9, col:48> 'int'
|   | | | |-ImplicitCastExpr 0x13afbc868d8 <col:9> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x13afbc867f8 <col:9> 'int (const void *, const void *, unsigned long long)' Function 0x13afbd26a88 'memcmp' 'int (const void *, const void *, unsigned long long)'
|   | | | |-ImplicitCastExpr 0x13afbc86940 <col:16> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x13afbc86928 <col:16> 'const char *' <ArrayToPointerDecay>
|   | | | |   `-DeclRefExpr 0x13afbc86818 <col:16> 'const char [5]' lvalue Var 0x13afbc87d18 'custom_ext_srv_string' 'const char [5]'
|   | | | |-ImplicitCastExpr 0x13afbc86970 <col:39> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x13afbc86958 <col:39> 'const unsigned char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x13afbc86838 <col:39> 'const unsigned char *' lvalue ParmVar 0x13afbc861c0 'in' 'const unsigned char *'
|   | | | `-ImplicitCastExpr 0x13afbc86988 <col:43> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x13afbc86870 <col:43> 'size_t':'unsigned long long' lvalue ParmVar 0x13afbc86238 'inlen' 'size_t':'unsigned long long'
|   | | `-IntegerLiteral 0x13afbc869a0 <col:53> 'int' 0
|   | `-BinaryOperator 0x13afbc86a30 <line:592:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x13afbc869e8 <col:9> 'int' lvalue Var 0x13afbc883c8 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x13afbc86a08 <col:28> 'int' 1
|   `-ReturnStmt 0x13afbc86a90 <line:593:5, col:12>
|     `-IntegerLiteral 0x13afbc86a68 <col:12> 'int' 1
|-FunctionDecl 0x13afbc86e50 <line:600:1, line:606:1> line:600:12 invalid custom_ext_0_srv_parse_cb 'int (int *, unsigned int, const unsigned char *, size_t, int *, void *)' static
| |-ParmVarDecl 0x13afbc86b18 <col:38, col:43> col:43 invalid s 'int *'
| |-ParmVarDecl 0x13afbc86b98 <col:46, col:59> col:59 ext_type 'unsigned int'
| |-ParmVarDecl 0x13afbc86c18 <line:601:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x13afbc86c90 <line:602:38, col:45> col:45 inlen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc86d10 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x13afbc86d90 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x13afbc86fd8 <line:603:1, line:606:1>
|   |-BinaryOperator 0x13afbc86f80 <line:604:5, col:24> 'int' '='
|   | |-DeclRefExpr 0x13afbc86f38 <col:5> 'int' lvalue Var 0x13afbc883c8 'custom_ext_error' 'int'
|   | `-IntegerLiteral 0x13afbc86f58 <col:24> 'int' 1
|   `-ReturnStmt 0x13afbc86fc8 <line:605:5, col:12>
|     `-IntegerLiteral 0x13afbc86fa0 <col:12> 'int' 1
|-FunctionDecl 0x13afbc9b480 <line:609:1, line:616:1> line:609:12 invalid custom_ext_0_srv_add_cb 'int (int *, unsigned int, const unsigned char **, size_t *, int *, void *)' static
| |-ParmVarDecl 0x13afbc9b140 <col:36, col:41> col:41 invalid s 'int *'
| |-ParmVarDecl 0x13afbc9b1c0 <col:44, col:57> col:57 ext_type 'unsigned int'
| |-ParmVarDecl 0x13afbc9b248 <line:610:36, col:58> col:58 out 'const unsigned char **'
| |-ParmVarDecl 0x13afbc9b2c0 <line:611:36, col:44> col:44 outlen 'size_t *'
| |-ParmVarDecl 0x13afbc9b340 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x13afbc9b3c0 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x13afbc9b608 <line:612:1, line:616:1>
|   |-BinaryOperator 0x13afbc9b5b0 <line:614:5, col:24> 'int' '='
|   | |-DeclRefExpr 0x13afbc9b568 <col:5> 'int' lvalue Var 0x13afbc883c8 'custom_ext_error' 'int'
|   | `-IntegerLiteral 0x13afbc9b588 <col:24> 'int' 1
|   `-ReturnStmt 0x13afbc9b5f8 <line:615:5, col:12>
|     `-IntegerLiteral 0x13afbc9b5d0 <col:12> 'int' 0
|-FunctionDecl 0x13afbc9b9f0 <line:618:1, line:630:1> line:618:12 invalid custom_ext_1_srv_parse_cb 'int (int *, unsigned int, const unsigned char *, size_t, int *, void *)' static
| |-ParmVarDecl 0x13afbc9b6b8 <col:38, col:43> col:43 invalid s 'int *'
| |-ParmVarDecl 0x13afbc9b738 <col:46, col:59> col:59 used ext_type 'unsigned int'
| |-ParmVarDecl 0x13afbc9b7b8 <line:619:38, col:59> col:59 used in 'const unsigned char *'
| |-ParmVarDecl 0x13afbc9b830 <line:620:38, col:45> col:45 used inlen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc9b8b0 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x13afbc9b930 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x13afbc9c050 <line:621:1, line:630:1>
|   |-IfStmt 0x13afbc9bbf0 <line:622:5, line:623:28>
|   | |-BinaryOperator 0x13afbc9bb68 <line:622:9, line:461:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x13afbc9bb38 <line:622:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbc9bad8 <col:9> 'unsigned int' lvalue ParmVar 0x13afbc9b738 'ext_type' 'unsigned int'
|   | | `-ImplicitCastExpr 0x13afbc9bb50 <line:461:27> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x13afbc9bb10 <col:27> 'int' 1001
|   | `-BinaryOperator 0x13afbc9bbd0 <line:623:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x13afbc9bb88 <col:9> 'int' lvalue Var 0x13afbc883c8 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x13afbc9bba8 <col:28> 'int' 1
|   |-IfStmt 0x13afbc9bd90 <line:625:5, line:626:28>
|   | |-BinaryOperator 0x13afbc9bd08 <line:625:9, col:46> 'int' '!='
|   | | |-ImplicitCastExpr 0x13afbc9bcf0 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbc9bc08 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x13afbc9b830 'inlen' 'size_t':'unsigned long long'
|   | | `-CallExpr 0x13afbc9bcb0 <col:18, col:46> 'unsigned long long'
|   | |   |-ImplicitCastExpr 0x13afbc9bc98 <col:18> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x13afbc9bc40 <col:18> 'unsigned long long (const char *)' Function 0x13afbd2d960 'strlen' 'unsigned long long (const char *)'
|   | |   `-ImplicitCastExpr 0x13afbc9bcd8 <col:25> 'const char *' <ArrayToPointerDecay>
|   | |     `-DeclRefExpr 0x13afbc9bc60 <col:25> 'const char [4]' lvalue Var 0x13afbc87be8 'custom_ext_cli_string' 'const char [4]'
|   | `-BinaryOperator 0x13afbc9bd70 <line:626:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x13afbc9bd28 <col:9> 'int' lvalue Var 0x13afbc883c8 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x13afbc9bd48 <col:28> 'int' 1
|   |-IfStmt 0x13afbc9c000 <line:627:5, line:628:28>
|   | |-BinaryOperator 0x13afbc9bf78 <line:627:9, col:53> 'int' '!='
|   | | |-CallExpr 0x13afbc9bea0 <col:9, col:48> 'int'
|   | | | |-ImplicitCastExpr 0x13afbc9be88 <col:9> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x13afbc9bda8 <col:9> 'int (const void *, const void *, unsigned long long)' Function 0x13afbd26a88 'memcmp' 'int (const void *, const void *, unsigned long long)'
|   | | | |-ImplicitCastExpr 0x13afbc9bef0 <col:16> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x13afbc9bed8 <col:16> 'const unsigned char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x13afbc9bdc8 <col:16> 'const unsigned char *' lvalue ParmVar 0x13afbc9b7b8 'in' 'const unsigned char *'
|   | | | |-ImplicitCastExpr 0x13afbc9bf20 <col:20> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x13afbc9bf08 <col:20> 'const char *' <ArrayToPointerDecay>
|   | | | |   `-DeclRefExpr 0x13afbc9be00 <col:20> 'const char [4]' lvalue Var 0x13afbc87be8 'custom_ext_cli_string' 'const char [4]'
|   | | | `-ImplicitCastExpr 0x13afbc9bf38 <col:43> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x13afbc9be20 <col:43> 'size_t':'unsigned long long' lvalue ParmVar 0x13afbc9b830 'inlen' 'size_t':'unsigned long long'
|   | | `-IntegerLiteral 0x13afbc9bf50 <col:53> 'int' 0
|   | `-BinaryOperator 0x13afbc9bfe0 <line:628:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x13afbc9bf98 <col:9> 'int' lvalue Var 0x13afbc883c8 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x13afbc9bfb8 <col:28> 'int' 1
|   `-ReturnStmt 0x13afbc9c040 <line:629:5, col:12>
|     `-IntegerLiteral 0x13afbc9c018 <col:12> 'int' 1
|-FunctionDecl 0x13afbc9c408 <line:632:1, line:637:1> line:632:12 invalid custom_ext_1_srv_add_cb 'int (int *, unsigned int, const unsigned char **, size_t *, int *, void *)' static
| |-ParmVarDecl 0x13afbc9c0c8 <col:36, col:41> col:41 invalid s 'int *'
| |-ParmVarDecl 0x13afbc9c148 <col:44, col:57> col:57 ext_type 'unsigned int'
| |-ParmVarDecl 0x13afbc9c1d0 <line:633:36, col:58> col:58 out 'const unsigned char **'
| |-ParmVarDecl 0x13afbc9c248 <line:634:36, col:44> col:44 outlen 'size_t *'
| |-ParmVarDecl 0x13afbc9c2c8 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x13afbc9c348 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x13afbc9c528 <line:635:1, line:637:1>
|   `-ReturnStmt 0x13afbc9c518 <line:636:5, col:12>
|     `-IntegerLiteral 0x13afbc9c4f0 <col:12> 'int' 0
|-FunctionDecl 0x13afbc9c908 <line:639:1, line:651:1> line:639:12 invalid custom_ext_2_srv_parse_cb 'int (int *, unsigned int, const unsigned char *, size_t, int *, void *)' static
| |-ParmVarDecl 0x13afbc9c5d0 <col:38, col:43> col:43 invalid s 'int *'
| |-ParmVarDecl 0x13afbc9c650 <col:46, col:59> col:59 used ext_type 'unsigned int'
| |-ParmVarDecl 0x13afbc9c6d0 <line:640:38, col:59> col:59 used in 'const unsigned char *'
| |-ParmVarDecl 0x13afbc9c748 <line:641:38, col:45> col:45 used inlen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbc9c7c8 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x13afbc9c848 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x13afbc9cf68 <line:642:1, line:651:1>
|   |-IfStmt 0x13afbc9cb08 <line:643:5, line:644:28>
|   | |-BinaryOperator 0x13afbc9ca80 <line:643:9, line:462:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x13afbc9ca50 <line:643:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbc9c9f0 <col:9> 'unsigned int' lvalue ParmVar 0x13afbc9c650 'ext_type' 'unsigned int'
|   | | `-ImplicitCastExpr 0x13afbc9ca68 <line:462:27> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x13afbc9ca28 <col:27> 'int' 1002
|   | `-BinaryOperator 0x13afbc9cae8 <line:644:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x13afbc9caa0 <col:9> 'int' lvalue Var 0x13afbc883c8 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x13afbc9cac0 <col:28> 'int' 1
|   |-IfStmt 0x13afbc9cca8 <line:646:5, line:647:28>
|   | |-BinaryOperator 0x13afbc9cc20 <line:646:9, col:46> 'int' '!='
|   | | |-ImplicitCastExpr 0x13afbc9cc08 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbc9cb20 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x13afbc9c748 'inlen' 'size_t':'unsigned long long'
|   | | `-CallExpr 0x13afbc9cbc8 <col:18, col:46> 'unsigned long long'
|   | |   |-ImplicitCastExpr 0x13afbc9cbb0 <col:18> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x13afbc9cb58 <col:18> 'unsigned long long (const char *)' Function 0x13afbd2d960 'strlen' 'unsigned long long (const char *)'
|   | |   `-ImplicitCastExpr 0x13afbc9cbf0 <col:25> 'const char *' <ArrayToPointerDecay>
|   | |     `-DeclRefExpr 0x13afbc9cb78 <col:25> 'const char [4]' lvalue Var 0x13afbc87be8 'custom_ext_cli_string' 'const char [4]'
|   | `-BinaryOperator 0x13afbc9cc88 <line:647:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x13afbc9cc40 <col:9> 'int' lvalue Var 0x13afbc883c8 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x13afbc9cc60 <col:28> 'int' 1
|   |-IfStmt 0x13afbc9cf18 <line:648:5, line:649:28>
|   | |-BinaryOperator 0x13afbc9ce90 <line:648:9, col:53> 'int' '!='
|   | | |-CallExpr 0x13afbc9cdb8 <col:9, col:48> 'int'
|   | | | |-ImplicitCastExpr 0x13afbc9cda0 <col:9> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x13afbc9ccc0 <col:9> 'int (const void *, const void *, unsigned long long)' Function 0x13afbd26a88 'memcmp' 'int (const void *, const void *, unsigned long long)'
|   | | | |-ImplicitCastExpr 0x13afbc9ce08 <col:16> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x13afbc9cdf0 <col:16> 'const unsigned char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x13afbc9cce0 <col:16> 'const unsigned char *' lvalue ParmVar 0x13afbc9c6d0 'in' 'const unsigned char *'
|   | | | |-ImplicitCastExpr 0x13afbc9ce38 <col:20> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x13afbc9ce20 <col:20> 'const char *' <ArrayToPointerDecay>
|   | | | |   `-DeclRefExpr 0x13afbc9cd18 <col:20> 'const char [4]' lvalue Var 0x13afbc87be8 'custom_ext_cli_string' 'const char [4]'
|   | | | `-ImplicitCastExpr 0x13afbc9ce50 <col:43> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x13afbc9cd38 <col:43> 'size_t':'unsigned long long' lvalue ParmVar 0x13afbc9c748 'inlen' 'size_t':'unsigned long long'
|   | | `-IntegerLiteral 0x13afbc9ce68 <col:53> 'int' 0
|   | `-BinaryOperator 0x13afbc9cef8 <line:649:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x13afbc9ceb0 <col:9> 'int' lvalue Var 0x13afbc883c8 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x13afbc9ced0 <col:28> 'int' 1
|   `-ReturnStmt 0x13afbc9cf58 <line:650:5, col:12>
|     `-IntegerLiteral 0x13afbc9cf30 <col:12> 'int' 1
|-FunctionDecl 0x13afbca33b0 <line:653:1, line:660:1> line:653:12 invalid custom_ext_2_srv_add_cb 'int (int *, unsigned int, const unsigned char **, size_t *, int *, void *)' static
| |-ParmVarDecl 0x13afbc9cfe0 <col:36, col:41> col:41 invalid s 'int *'
| |-ParmVarDecl 0x13afbca30f0 <col:44, col:57> col:57 ext_type 'unsigned int'
| |-ParmVarDecl 0x13afbca3178 <line:654:36, col:58> col:58 used out 'const unsigned char **'
| |-ParmVarDecl 0x13afbca31f0 <line:655:36, col:44> col:44 used outlen 'size_t *'
| |-ParmVarDecl 0x13afbca3270 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x13afbca32f0 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x13afbca36c0 <line:656:1, line:660:1>
|   |-BinaryOperator 0x13afbca35a0 <line:657:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'const unsigned char *' '='
|   | |-UnaryOperator 0x13afbca34e8 <.//openssl//file_jk/after\test\ssltest_old.c:657:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x13afbca34d0 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbca3498 <col:6> 'const unsigned char **' lvalue ParmVar 0x13afbca3178 'out' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x13afbca3588 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const unsigned char *' <NullToPointer>
|   |   `-ParenExpr 0x13afbca3568 <col:17, col:27> 'void *'
|   |     `-CStyleCastExpr 0x13afbca3540 <col:18, col:26> 'void *' <NullToPointer>
|   |       `-IntegerLiteral 0x13afbca3500 <col:26> 'int' 0
|   |-BinaryOperator 0x13afbca3668 <.//openssl//file_jk/after\test\ssltest_old.c:658:5, col:15> 'size_t':'unsigned long long' '='
|   | |-UnaryOperator 0x13afbca3610 <col:5, col:6> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x13afbca35f8 <col:6> 'size_t *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbca35c0 <col:6> 'size_t *' lvalue ParmVar 0x13afbca31f0 'outlen' 'size_t *'
|   | `-ImplicitCastExpr 0x13afbca3650 <col:15> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x13afbca3628 <col:15> 'int' 0
|   `-ReturnStmt 0x13afbca36b0 <line:659:5, col:12>
|     `-IntegerLiteral 0x13afbca3688 <col:12> 'int' 1
|-FunctionDecl 0x13afbca3a80 <line:662:1, line:674:1> line:662:12 invalid custom_ext_3_srv_parse_cb 'int (int *, unsigned int, const unsigned char *, size_t, int *, void *)' static
| |-ParmVarDecl 0x13afbca3748 <col:38, col:43> col:43 invalid s 'int *'
| |-ParmVarDecl 0x13afbca37c8 <col:46, col:59> col:59 used ext_type 'unsigned int'
| |-ParmVarDecl 0x13afbca3848 <line:663:38, col:59> col:59 used in 'const unsigned char *'
| |-ParmVarDecl 0x13afbca38c0 <line:664:38, col:45> col:45 used inlen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x13afbca3940 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x13afbca39c0 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x13afbca40e0 <line:665:1, line:674:1>
|   |-IfStmt 0x13afbca3c80 <line:666:5, line:667:28>
|   | |-BinaryOperator 0x13afbca3bf8 <line:666:9, line:463:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x13afbca3bc8 <line:666:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbca3b68 <col:9> 'unsigned int' lvalue ParmVar 0x13afbca37c8 'ext_type' 'unsigned int'
|   | | `-ImplicitCastExpr 0x13afbca3be0 <line:463:27> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x13afbca3ba0 <col:27> 'int' 1003
|   | `-BinaryOperator 0x13afbca3c60 <line:667:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x13afbca3c18 <col:9> 'int' lvalue Var 0x13afbc883c8 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x13afbca3c38 <col:28> 'int' 1
|   |-IfStmt 0x13afbca3e20 <line:669:5, line:670:28>
|   | |-BinaryOperator 0x13afbca3d98 <line:669:9, col:46> 'int' '!='
|   | | |-ImplicitCastExpr 0x13afbca3d80 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbca3c98 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x13afbca38c0 'inlen' 'size_t':'unsigned long long'
|   | | `-CallExpr 0x13afbca3d40 <col:18, col:46> 'unsigned long long'
|   | |   |-ImplicitCastExpr 0x13afbca3d28 <col:18> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x13afbca3cd0 <col:18> 'unsigned long long (const char *)' Function 0x13afbd2d960 'strlen' 'unsigned long long (const char *)'
|   | |   `-ImplicitCastExpr 0x13afbca3d68 <col:25> 'const char *' <ArrayToPointerDecay>
|   | |     `-DeclRefExpr 0x13afbca3cf0 <col:25> 'const char [4]' lvalue Var 0x13afbc87be8 'custom_ext_cli_string' 'const char [4]'
|   | `-BinaryOperator 0x13afbca3e00 <line:670:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x13afbca3db8 <col:9> 'int' lvalue Var 0x13afbc883c8 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x13afbca3dd8 <col:28> 'int' 1
|   |-IfStmt 0x13afbca4090 <line:671:5, line:672:28>
|   | |-BinaryOperator 0x13afbca4008 <line:671:9, col:53> 'int' '!='
|   | | |-CallExpr 0x13afbca3f30 <col:9, col:48> 'int'
|   | | | |-ImplicitCastExpr 0x13afbca3f18 <col:9> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x13afbca3e38 <col:9> 'int (const void *, const void *, unsigned long long)' Function 0x13afbd26a88 'memcmp' 'int (const void *, const void *, unsigned long long)'
|   | | | |-ImplicitCastExpr 0x13afbca3f80 <col:16> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x13afbca3f68 <col:16> 'const unsigned char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x13afbca3e58 <col:16> 'const unsigned char *' lvalue ParmVar 0x13afbca3848 'in' 'const unsigned char *'
|   | | | |-ImplicitCastExpr 0x13afbca3fb0 <col:20> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x13afbca3f98 <col:20> 'const char *' <ArrayToPointerDecay>
|   | | | |   `-DeclRefExpr 0x13afbca3e90 <col:20> 'const char [4]' lvalue Var 0x13afbc87be8 'custom_ext_cli_string' 'const char [4]'
|   | | | `-ImplicitCastExpr 0x13afbca3fc8 <col:43> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x13afbca3eb0 <col:43> 'size_t':'unsigned long long' lvalue ParmVar 0x13afbca38c0 'inlen' 'size_t':'unsigned long long'
|   | | `-IntegerLiteral 0x13afbca3fe0 <col:53> 'int' 0
|   | `-BinaryOperator 0x13afbca4070 <line:672:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x13afbca4028 <col:9> 'int' lvalue Var 0x13afbc883c8 'custom_ext_error' 'int'
|   |   `-IntegerLiteral 0x13afbca4048 <col:28> 'int' 1
|   `-ReturnStmt 0x13afbca40d0 <line:673:5, col:12>
|     `-IntegerLiteral 0x13afbca40a8 <col:12> 'int' 1
|-FunctionDecl 0x13afbca4498 <line:676:1, line:683:1> line:676:12 invalid custom_ext_3_srv_add_cb 'int (int *, unsigned int, const unsigned char **, size_t *, int *, void *)' static
| |-ParmVarDecl 0x13afbca4158 <col:36, col:41> col:41 invalid s 'int *'
| |-ParmVarDecl 0x13afbca41d8 <col:44, col:57> col:57 ext_type 'unsigned int'
| |-ParmVarDecl 0x13afbca4260 <line:677:36, col:58> col:58 used out 'const unsigned char **'
| |-ParmVarDecl 0x13afbca42d8 <line:678:36, col:44> col:44 used outlen 'size_t *'
| |-ParmVarDecl 0x13afbca4358 <col:52, col:57> col:57 al 'int *'
| |-ParmVarDecl 0x13afbca43d8 <col:61, col:67> col:67 arg 'void *'
| `-CompoundStmt 0x13afbca47f0 <line:679:1, line:683:1>
|   |-BinaryOperator 0x13afbca4660 <line:680:5, col:35> 'const unsigned char *' '='
|   | |-UnaryOperator 0x13afbca45d0 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x13afbca45b8 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbca4580 <col:6> 'const unsigned char **' lvalue ParmVar 0x13afbca4260 'out' 'const unsigned char **'
|   | `-CStyleCastExpr 0x13afbca4638 <col:12, col:35> 'const unsigned char *' <BitCast>
|   |   `-ImplicitCastExpr 0x13afbca4620 <col:35> 'const char *' <ArrayToPointerDecay> part_of_explicit_cast
|   |     `-DeclRefExpr 0x13afbca45e8 <col:35> 'const char [5]' lvalue Var 0x13afbc87d18 'custom_ext_srv_string' 'const char [5]'
|   |-BinaryOperator 0x13afbca4798 <line:681:5, col:43> 'size_t':'unsigned long long' '='
|   | |-UnaryOperator 0x13afbca46d0 <col:5, col:6> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x13afbca46b8 <col:6> 'size_t *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbca4680 <col:6> 'size_t *' lvalue ParmVar 0x13afbca42d8 'outlen' 'size_t *'
|   | `-CallExpr 0x13afbca4758 <col:15, col:43> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x13afbca4740 <col:15> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13afbca46e8 <col:15> 'unsigned long long (const char *)' Function 0x13afbd2d960 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x13afbca4780 <col:22> 'const char *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x13afbca4708 <col:22> 'const char [5]' lvalue Var 0x13afbc87d18 'custom_ext_srv_string' 'const char [5]'
|   `-ReturnStmt 0x13afbca47e0 <line:682:5, col:12>
|     `-IntegerLiteral 0x13afbca47b8 <col:12> 'int' 1
|-VarDecl 0x13afbca4878 <line:685:1, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\test\ssltest_old.c:685:14 used cipher 'char *' static cinit
| `-ImplicitCastExpr 0x13afbca4980 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   `-ParenExpr 0x13afbca4948 <col:17, col:27> 'void *'
|     `-CStyleCastExpr 0x13afbca4920 <col:18, col:26> 'void *' <NullToPointer>
|       `-IntegerLiteral 0x13afbca48e0 <col:26> 'int' 0
|-VarDecl 0x13afbca49b0 <.//openssl//file_jk/after\test\ssltest_old.c:686:1, col:22> col:12 used verbose 'int' static cinit
| `-IntegerLiteral 0x13afbca4a18 <col:22> 'int' 0
|-VarDecl 0x13afbca4a70 <line:687:1, col:20> col:12 used debug 'int' static cinit
| `-IntegerLiteral 0x13afbca4ad8 <col:20> 'int' 0
|-VarDecl 0x13afbca4b38 <line:688:1, line:689:5> line:688:19 used rnd_seed 'const char [64]' static cinit
| `-StringLiteral 0x13afbca4bd8 <line:689:5> 'const char [64]' "string to make the random number generator think it has entropy"
|-FunctionDecl 0x13afbc97090 <line:691:1, line:692:64> line:691:5 invalid doit_localhost 'int (int *, int *, int, long, clock_t *, clock_t *)'
| |-ParmVarDecl 0x13afbca4ca0 <col:20, col:25> col:25 invalid s_ssl 'int *'
| |-ParmVarDecl 0x13afbca4d20 <col:32, col:37> col:37 invalid c_ssl 'int *'
| |-ParmVarDecl 0x13afbca4da0 <col:44, col:48> col:48 family 'int'
| |-ParmVarDecl 0x13afbca4e20 <line:692:20, col:25> col:25 bytes 'long'
| |-ParmVarDecl 0x13afbca4ec8 <col:32, col:41> col:41 s_time 'clock_t *'
| `-ParmVarDecl 0x13afbca4f40 <col:49, col:58> col:58 c_time 'clock_t *'
|-FunctionDecl 0x13afbc974c0 <line:693:1, line:694:33> line:693:5 invalid doit_biopair 'int (int *, int *, long, clock_t *, clock_t *)'
| |-ParmVarDecl 0x13afbc97178 <col:18, col:23> col:23 invalid s_ssl 'int *'
| |-ParmVarDecl 0x13afbc971f8 <col:30, col:35> col:35 invalid c_ssl 'int *'
| |-ParmVarDecl 0x13afbc97278 <col:42, col:47> col:47 bytes 'long'
| |-ParmVarDecl 0x13afbc972f0 <col:54, col:63> col:63 s_time 'clock_t *'
| `-ParmVarDecl 0x13afbc97368 <line:694:18, col:27> col:27 c_time 'clock_t *'
|-FunctionDecl 0x13afbc97790 <line:695:1, col:44> col:5 invalid doit 'int (int *, int *, long)'
| |-ParmVarDecl 0x13afbc975a0 <col:10, col:15> col:15 invalid s_ssl 'int *'
| |-ParmVarDecl 0x13afbc97620 <col:22, col:27> col:27 invalid c_ssl 'int *'
| `-ParmVarDecl 0x13afbc976a0 <col:34, col:39> col:39 bytes 'long'
|-FunctionDecl 0x13afbc978e0 <line:697:1, line:800:1> line:697:13 used sv_usage 'void (void)' static
| `-CompoundStmt 0x13afbc9f8e8 <line:698:1, line:800:1>
|   |-CallExpr 0x13afbc97af8 <line:699:5, col:50> 'int'
|   | |-ImplicitCastExpr 0x13afbc97ae0 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc97998 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc97a70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc97a58 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc97a38 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc979f0 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc979d8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc979b8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc97a10 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc97b40 <.//openssl//file_jk/after\test\ssltest_old.c:699:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc97b28 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc97a90 <col:21> 'char [27]' lvalue "usage: ssltest [args ...]\n"
|   |-CallExpr 0x13afbc97ca0 <line:700:5, col:25> 'int'
|   | |-ImplicitCastExpr 0x13afbc97c88 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc97b58 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc97c30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc97c18 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc97bf8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc97bb0 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc97b98 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc97b78 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc97bd0 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc97ce8 <.//openssl//file_jk/after\test\ssltest_old.c:700:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc97cd0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc97c50 <col:21> 'char [2]' lvalue "\n"
|   |-CallExpr 0x13afbc97eb0 <line:704:5, col:66> 'int'
|   | |-ImplicitCastExpr 0x13afbc97e98 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc97d00 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc97dd8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc97dc0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc97da0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc97d58 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc97d40 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc97d20 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc97d78 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc97ef8 <.//openssl//file_jk/after\test\ssltest_old.c:704:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc97ee0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc97e38 <col:21> 'char [43]' lvalue " -server_auth  - check server certificate\n"
|   |-CallExpr 0x13afbc98080 <line:705:5, col:66> 'int'
|   | |-ImplicitCastExpr 0x13afbc98068 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc97f10 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc97fe8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc97fd0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc97fb0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc97f68 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc97f50 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc97f30 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc97f88 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc980c8 <.//openssl//file_jk/after\test\ssltest_old.c:705:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc980b0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc98008 <col:21> 'char [43]' lvalue " -client_auth  - do client authentication\n"
|   |-CallExpr 0x13afbc98240 <line:706:5, col:53> 'int'
|   | |-ImplicitCastExpr 0x13afbc98228 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc980e0 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc981b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc981a0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc98180 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc98138 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc98120 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc98100 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc98158 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc98288 <.//openssl//file_jk/after\test\ssltest_old.c:706:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc98270 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc981d8 <col:21> 'char [30]' lvalue " -v            - more output\n"
|   |-CallExpr 0x13afbc98440 <line:707:5, col:54> 'int'
|   | |-ImplicitCastExpr 0x13afbc98428 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc982a0 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc98378 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc98360 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc98340 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc982f8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc982e0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc982c0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc98318 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc98488 <.//openssl//file_jk/after\test\ssltest_old.c:707:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc98470 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc983d8 <col:21> 'char [31]' lvalue " -d            - debug output\n"
|   |-CallExpr 0x13afbc98648 <line:708:5, col:62> 'int'
|   | |-ImplicitCastExpr 0x13afbc98630 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc984a0 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc98578 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc98560 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc98540 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc984f8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc984e0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc984c0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc98518 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc98690 <.//openssl//file_jk/after\test\ssltest_old.c:708:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc98678 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc985d8 <col:21> 'char [39]' lvalue " -reuse        - use session-id reuse\n"
|   |-CallExpr 0x13afbc98858 <line:709:5, col:74> 'int'
|   | |-ImplicitCastExpr 0x13afbc98840 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc986a8 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc98780 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc98768 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc98748 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc98700 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc986e8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc986c8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc98720 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc988a0 <.//openssl//file_jk/after\test\ssltest_old.c:709:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc98888 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc987d8 <col:21> 'char [51]' lvalue " -num <val>    - number of connections to perform\n"
|   |-CallExpr 0x13afbc98a38 <line:710:5, line:711:79> 'int'
|   | |-ImplicitCastExpr 0x13afbc98a20 <line:710:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc988b8 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc98990 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc98978 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc98958 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc98910 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc988f8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc988d8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc98930 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc98a80 <.//openssl//file_jk/after\test\ssltest_old.c:711:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc98a68 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc989b0 <col:13> 'char [64]' lvalue " -bytes <val>  - number of bytes to swap between client/server\n"
|   |-CallExpr 0x13afbc98c18 <line:713:5, line:714:75> 'int'
|   | |-ImplicitCastExpr 0x13afbc98c00 <line:713:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc98a98 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc98b70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc98b58 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc98b38 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc98af0 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc98ad8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc98ab8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc98b10 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc98c60 <.//openssl//file_jk/after\test\ssltest_old.c:714:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc98c48 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc98b90 <col:13> 'char [60]' lvalue " -dhe512       - use 512 bit key for DHE (to test failure)\n"
|   |-CallExpr 0x13afbc98e38 <line:715:5, line:716:88> 'int'
|   | |-ImplicitCastExpr 0x13afbc98e20 <line:715:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc98c78 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc98d50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc98d38 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc98d18 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc98cd0 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc98cb8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc98c98 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc98cf0 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc98e80 <.//openssl//file_jk/after\test\ssltest_old.c:716:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc98e68 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc98da8 <col:13> 'char [73]' lvalue " -dhe1024      - use 1024 bit key (safe prime) for DHE (default, no-op)\n"
|   |-CallExpr 0x13afbc99058 <line:717:5, line:718:82> 'int'
|   | |-ImplicitCastExpr 0x13afbc99040 <line:717:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc98e98 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc98f70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc98f58 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc98f38 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc98ef0 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc98ed8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc98eb8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc98f10 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc9d0d8 <.//openssl//file_jk/after\test\ssltest_old.c:718:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc9d0c0 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc98fc8 <col:13> 'char [67]' lvalue " -dhe1024dsa   - use 1024 bit key (with 160-bit subprime) for DHE\n"
|   |-CallExpr 0x13afbc9d250 <line:719:5, col:53> 'int'
|   | |-ImplicitCastExpr 0x13afbc9d238 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc9d0f0 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc9d1c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc9d1b0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc9d190 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc9d148 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc9d130 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc9d110 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc9d168 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc9d298 <.//openssl//file_jk/after\test\ssltest_old.c:719:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc9d280 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc9d1e8 <col:21> 'char [30]' lvalue " -no_dhe       - disable DHE\n"
|   |-CallExpr 0x13afbc9d4a0 <line:722:5, col:132> 'int'
|   | |-ImplicitCastExpr 0x13afbc9d488 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc9d2b0 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc9d388 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc9d370 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc9d350 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc9d308 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc9d2f0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc9d2d0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc9d328 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc9d4e8 <.//openssl//file_jk/after\test\ssltest_old.c:722:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc9d4d0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc9d3e8 <col:21> 'char [108]' lvalue " -no_ecdhe     - disable ECDHE\nTODO(openssl-team): no_ecdhe was broken by auto ecdh. Make this work again.\n"
|   |-CallExpr 0x13afbc9d6b0 <line:725:5, col:65> 'int'
|   | |-ImplicitCastExpr 0x13afbc9d698 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc9d500 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc9d5d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc9d5c0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc9d5a0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc9d558 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc9d540 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc9d520 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc9d578 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc9d6f8 <.//openssl//file_jk/after\test\ssltest_old.c:725:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc9d6e0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc9d638 <col:21> 'char [42]' lvalue " -psk arg      - PSK in hex (without 0x)\n"
|   |-CallExpr 0x13afbc9d8b8 <line:728:5, col:61> 'int'
|   | |-ImplicitCastExpr 0x13afbc9d8a0 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc9d710 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc9d7e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc9d7d0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc9d7b0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc9d768 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc9d750 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc9d730 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc9d788 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc9d900 <.//openssl//file_jk/after\test\ssltest_old.c:728:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc9d8e8 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc9d848 <col:21> 'char [38]' lvalue " -srpuser user - SRP username to use\n"
|   |-CallExpr 0x13afbc9da80 <line:729:5, col:61> 'int'
|   | |-ImplicitCastExpr 0x13afbc9da68 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc9d918 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc9d9f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc9d9d8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc9d9b8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc9d970 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc9d958 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc9d938 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc9d990 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc9dac8 <.//openssl//file_jk/after\test\ssltest_old.c:729:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc9dab0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc9da10 <col:21> 'char [38]' lvalue " -srppass arg  - password for 'user'\n"
|   |-CallExpr 0x13afbc9dc80 <line:732:5, col:51> 'int'
|   | |-ImplicitCastExpr 0x13afbc9dc68 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc9dae0 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc9dbb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc9dba0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc9db80 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc9db38 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc9db20 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc9db00 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc9db58 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc9dcc8 <.//openssl//file_jk/after\test\ssltest_old.c:732:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc9dcb0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc9dc18 <col:21> 'char [28]' lvalue " -ssl3         - use SSLv3\n"
|   |-CallExpr 0x13afbc9de40 <line:735:5, col:51> 'int'
|   | |-ImplicitCastExpr 0x13afbc9de28 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc9dce0 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc9ddb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc9dda0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc9dd80 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc9dd38 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc9dd20 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc9dd00 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc9dd58 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc9de88 <.//openssl//file_jk/after\test\ssltest_old.c:735:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc9de70 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc9ddd8 <col:21> 'char [28]' lvalue " -tls1         - use TLSv1\n"
|   |-CallExpr 0x13afbc9e000 <line:738:5, col:50> 'int'
|   | |-ImplicitCastExpr 0x13afbc9dfe8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc9dea0 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc9df78 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc9df60 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc9df40 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc9def8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc9dee0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc9dec0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc9df18 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc9e048 <.//openssl//file_jk/after\test\ssltest_old.c:738:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc9e030 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc9df98 <col:21> 'char [27]' lvalue " -dtls         - use DTLS\n"
|   |-CallExpr 0x13afbc9e200 <line:740:5, col:52> 'int'
|   | |-ImplicitCastExpr 0x13afbc9e1e8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc9e060 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc9e138 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc9e120 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc9e100 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc9e0b8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc9e0a0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc9e080 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc9e0d8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc9e248 <.//openssl//file_jk/after\test\ssltest_old.c:740:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc9e230 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc9e198 <col:21> 'char [29]' lvalue " -dtls1        - use DTLSv1\n"
|   |-CallExpr 0x13afbc9e3c0 <line:743:5, col:54> 'int'
|   | |-ImplicitCastExpr 0x13afbc9e3a8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc9e260 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc9e338 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc9e320 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc9e300 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc9e2b8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc9e2a0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc9e280 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc9e2d8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc9e408 <.//openssl//file_jk/after\test\ssltest_old.c:743:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc9e3f0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc9e358 <col:21> 'char [31]' lvalue " -dtls12       - use DTLSv1.2\n"
|   |-CallExpr 0x13afbc9e5d0 <line:746:5, col:70> 'int'
|   | |-ImplicitCastExpr 0x13afbc9e5b8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc9e420 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc9e4f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc9e4e0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc9e4c0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc9e478 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc9e460 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc9e440 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc9e498 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc9e618 <.//openssl//file_jk/after\test\ssltest_old.c:746:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc9e600 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc9e558 <col:21> 'char [47]' lvalue " -CApath arg   - PEM format directory of CA's\n"
|   |-CallExpr 0x13afbc9e7a0 <line:747:5, col:65> 'int'
|   | |-ImplicitCastExpr 0x13afbc9e788 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc9e630 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc9e708 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc9e6f0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc9e6d0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc9e688 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc9e670 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc9e650 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc9e6a8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc9e7e8 <.//openssl//file_jk/after\test\ssltest_old.c:747:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc9e7d0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc9e728 <col:21> 'char [42]' lvalue " -CAfile arg   - PEM format file of CA's\n"
|   |-CallExpr 0x13afbc9e970 <line:748:5, col:65> 'int'
|   | |-ImplicitCastExpr 0x13afbc9e958 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc9e800 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc9e8d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc9e8c0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc9e8a0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc9e858 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc9e840 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc9e820 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc9e878 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc9e9b8 <.//openssl//file_jk/after\test\ssltest_old.c:748:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc9e9a0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc9e8f8 <col:21> 'char [42]' lvalue " -cert arg     - Server certificate file\n"
|   |-CallExpr 0x13afbc9eb90 <line:749:5, line:750:74> 'int'
|   | |-ImplicitCastExpr 0x13afbc9eb78 <line:749:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc9e9d0 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc9eaa8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc9ea90 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc9ea70 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc9ea28 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc9ea10 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc9e9f0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc9ea48 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc9ebd8 <.//openssl//file_jk/after\test\ssltest_old.c:750:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc9ebc0 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc9eb08 <col:13> 'char [59]' lvalue " -key arg      - Server key file (default: same as -cert)\n"
|   |-CallExpr 0x13afbc9ed60 <line:751:5, col:65> 'int'
|   | |-ImplicitCastExpr 0x13afbc9ed48 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc9ebf0 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc9ecc8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc9ecb0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc9ec90 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc9ec48 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc9ec30 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc9ec10 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc9ec68 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc9eda8 <.//openssl//file_jk/after\test\ssltest_old.c:751:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc9ed90 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc9ece8 <col:21> 'char [42]' lvalue " -c_cert arg   - Client certificate file\n"
|   |-CallExpr 0x13afbc9ef80 <line:752:5, line:753:76> 'int'
|   | |-ImplicitCastExpr 0x13afbc9ef68 <line:752:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc9edc0 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc9ee98 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc9ee80 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc9ee60 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc9ee18 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc9ee00 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc9ede0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc9ee38 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc9efc8 <.//openssl//file_jk/after\test\ssltest_old.c:753:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc9efb0 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc9eef8 <col:13> 'char [61]' lvalue " -c_key arg    - Client key file (default: same as -c_cert)\n"
|   |-CallExpr 0x13afbc95148 <line:754:5, col:57> 'int'
|   | |-ImplicitCastExpr 0x13afbc95130 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc9efe0 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc95080 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc9f0a0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc9f080 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc9f038 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc9f020 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc9f000 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc9f058 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc95190 <.//openssl//file_jk/after\test\ssltest_old.c:754:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc95178 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc950d8 <col:21> 'char [34]' lvalue " -cipher arg   - The cipher list\n"
|   |-CallExpr 0x13afbc95308 <line:755:5, col:55> 'int'
|   | |-ImplicitCastExpr 0x13afbc952f0 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc951a8 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc95280 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc95268 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc95248 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc95200 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc951e8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc951c8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc95220 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc95350 <.//openssl//file_jk/after\test\ssltest_old.c:755:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc95338 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc952a0 <col:21> 'char [32]' lvalue " -bio_pair     - Use BIO pairs\n"
|   |-CallExpr 0x13afbc954e0 <line:756:5, col:74> 'int'
|   | |-ImplicitCastExpr 0x13afbc954c8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc95368 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc95440 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc95428 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc95408 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc953c0 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc953a8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc95388 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc953e0 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc95528 <.//openssl//file_jk/after\test\ssltest_old.c:756:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc95510 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc95460 <col:21> 'char [51]' lvalue " -ipv4         - Use IPv4 connection on localhost\n"
|   |-CallExpr 0x13afbc956b8 <line:757:5, col:74> 'int'
|   | |-ImplicitCastExpr 0x13afbc956a0 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc95540 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc95618 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc95600 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc955e0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc95598 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc95580 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc95560 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc955b8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc95700 <.//openssl//file_jk/after\test\ssltest_old.c:757:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc956e8 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc95638 <col:21> 'char [51]' lvalue " -ipv6         - Use IPv6 connection on localhost\n"
|   |-CallExpr 0x13afbc95890 <line:758:5, col:73> 'int'
|   | |-ImplicitCastExpr 0x13afbc95878 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc95718 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc957f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc957d8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc957b8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc95770 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc95758 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc95738 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc95790 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc958d8 <.//openssl//file_jk/after\test\ssltest_old.c:758:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc958c0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc95810 <col:21> 'char [50]' lvalue " -f            - Test even cases that can't work\n"
|   |-CallExpr 0x13afbc95a78 <line:759:5, line:760:82> 'int'
|   | |-ImplicitCastExpr 0x13afbc95a60 <line:759:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc958f0 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc959c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc959b0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc95990 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc95948 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc95930 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc95910 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc95968 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc95ac0 <.//openssl//file_jk/after\test\ssltest_old.c:760:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc95aa8 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc959e8 <col:13> 'char [67]' lvalue " -time         - measure processor time used by client and server\n"
|   |-CallExpr 0x13afbc95c40 <line:761:5, col:62> 'int'
|   | |-ImplicitCastExpr 0x13afbc95c28 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc95ad8 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc95bb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc95b98 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc95b78 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc95b30 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc95b18 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc95af8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc95b50 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc95c88 <.//openssl//file_jk/after\test\ssltest_old.c:761:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc95c70 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc95bd0 <col:21> 'char [39]' lvalue " -zlib         - use zlib compression\n"
|   |-CallExpr 0x13afbc95e10 <line:763:5, col:66> 'int'
|   | |-ImplicitCastExpr 0x13afbc95df8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc95ca0 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc95d78 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc95d60 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc95d40 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc95cf8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc95ce0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc95cc0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc95d18 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc95e58 <.//openssl//file_jk/after\test\ssltest_old.c:763:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc95e40 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc95d98 <col:21> 'char [43]' lvalue " -npn_client - have client side offer NPN\n"
|   |-CallExpr 0x13afbc95fe0 <line:764:5, col:66> 'int'
|   | |-ImplicitCastExpr 0x13afbc95fc8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc95e70 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc95f48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc95f30 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc95f10 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc95ec8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc95eb0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc95e90 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc95ee8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc96028 <.//openssl//file_jk/after\test\ssltest_old.c:764:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc96010 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc95f68 <col:21> 'char [43]' lvalue " -npn_server - have server side offer NPN\n"
|   |-CallExpr 0x13afbc961f0 <line:765:5, col:69> 'int'
|   | |-ImplicitCastExpr 0x13afbc961d8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc96040 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc96118 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc96100 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc960e0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc96098 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc96080 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc96060 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc960b8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc96238 <.//openssl//file_jk/after\test\ssltest_old.c:765:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc96220 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc96178 <col:21> 'char [46]' lvalue " -npn_server_reject - have server reject NPN\n"
|   |-CallExpr 0x13afbc96408 <line:767:5, col:75> 'int'
|   | |-ImplicitCastExpr 0x13afbc963f0 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc96250 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc96328 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc96310 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc962f0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc962a8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc96290 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc96270 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc962c8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc96450 <.//openssl//file_jk/after\test\ssltest_old.c:767:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc96438 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc96388 <col:21> 'char [52]' lvalue " -serverinfo_file file - have server use this file\n"
|   |-CallExpr 0x13afbc96618 <line:768:5, col:77> 'int'
|   | |-ImplicitCastExpr 0x13afbc96600 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc96468 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc96540 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc96528 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc96508 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc964c0 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc964a8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc96488 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc964e0 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc96660 <.//openssl//file_jk/after\test\ssltest_old.c:768:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc96648 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc96598 <col:21> 'char [54]' lvalue " -serverinfo_sct  - have client offer and expect SCT\n"
|   |-CallExpr 0x13afbc96828 <line:769:5, line:770:70> 'int'
|   | |-ImplicitCastExpr 0x13afbc96810 <line:769:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc96678 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc96750 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc96738 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc96718 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc966d0 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc966b8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc96698 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc966f0 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc96870 <.//openssl//file_jk/after\test\ssltest_old.c:770:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc96858 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc967a8 <col:13> 'char [55]' lvalue " -serverinfo_tack - have client offer and expect TACK\n"
|   |-CallExpr 0x13afbc96a00 <line:771:5, line:772:70> 'int'
|   | |-ImplicitCastExpr 0x13afbc969e8 <line:771:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc96888 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc96960 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc96948 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc96928 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc968e0 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc968c8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc968a8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc96900 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc96a48 <.//openssl//file_jk/after\test\ssltest_old.c:772:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc96a30 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc96980 <col:13> 'char [55]' lvalue " -custom_ext - try various custom extension callbacks\n"
|   |-CallExpr 0x13afbc96bd8 <line:773:5, col:77> 'int'
|   | |-ImplicitCastExpr 0x13afbc96bc0 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc96a60 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc96b38 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc96b20 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc96b00 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc96ab8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc96aa0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc96a80 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc96ad8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc96c20 <.//openssl//file_jk/after\test\ssltest_old.c:773:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc96c08 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc96b58 <col:21> 'char [54]' lvalue " -alpn_client <string> - have client side offer ALPN\n"
|   |-CallExpr 0x13afbc96db0 <line:774:5, col:77> 'int'
|   | |-ImplicitCastExpr 0x13afbc96d98 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc96c38 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc96d10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc96cf8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc96cd8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc96c90 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc96c78 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc96c58 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc96cb0 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc96df8 <.//openssl//file_jk/after\test\ssltest_old.c:774:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc96de0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc96d30 <col:21> 'char [54]' lvalue " -alpn_server <string> - have server side offer ALPN\n"
|   |-CallExpr 0x13afbc96f88 <line:775:5, col:73> 'int'
|   | |-ImplicitCastExpr 0x13afbc96f70 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc96e10 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc96ee8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc96ed0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc96eb0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc96e68 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc96e50 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc96e30 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc96e88 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc96fd0 <.//openssl//file_jk/after\test\ssltest_old.c:775:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc96fb8 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc96f08 <col:21> 'char [50]' lvalue " -alpn_server1 <string> - alias for -alpn_server\n"
|   |-CallExpr 0x13afbca5240 <line:776:5, col:88> 'int'
|   | |-ImplicitCastExpr 0x13afbca5228 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc96fe8 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbca5160 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbca5148 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbca5128 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc97040 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc97028 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc97008 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbca5100 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbca5288 <.//openssl//file_jk/after\test\ssltest_old.c:776:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbca5270 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbca51b8 <col:21> 'char [65]' lvalue " -alpn_server2 <string> - have server side context 2 offer ALPN\n"
|   |-CallExpr 0x13afbca5468 <line:777:5, line:778:87> 'int'
|   | |-ImplicitCastExpr 0x13afbca5450 <line:777:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbca52a0 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbca5378 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbca5360 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbca5340 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbca52f8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbca52e0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbca52c0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbca5318 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbca54b0 <.//openssl//file_jk/after\test\ssltest_old.c:778:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbca5498 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbca53d8 <col:13> 'char [72]' lvalue " -alpn_expected <string> - the ALPN protocol that should be negotiated\n"
|   |-CallExpr 0x13afbca5650 <line:779:5, col:96> 'int'
|   | |-ImplicitCastExpr 0x13afbca5638 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbca54c8 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbca55a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbca5588 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbca5568 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbca5520 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbca5508 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbca54e8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbca5540 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbca5698 <.//openssl//file_jk/after\test\ssltest_old.c:779:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbca5680 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbca55c0 <col:21> 'char [73]' lvalue " -server_min_proto <string> - Minimum version the server should support\n"
|   |-CallExpr 0x13afbca5838 <line:780:5, col:96> 'int'
|   | |-ImplicitCastExpr 0x13afbca5820 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbca56b0 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbca5788 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbca5770 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbca5750 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbca5708 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbca56f0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbca56d0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbca5728 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbca5880 <.//openssl//file_jk/after\test\ssltest_old.c:780:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbca5868 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbca57a8 <col:21> 'char [73]' lvalue " -server_max_proto <string> - Maximum version the server should support\n"
|   |-CallExpr 0x13afbca5a20 <line:781:5, col:96> 'int'
|   | |-ImplicitCastExpr 0x13afbca5a08 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbca5898 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbca5970 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbca5958 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbca5938 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbca58f0 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbca58d8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbca58b8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbca5910 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbca5a68 <.//openssl//file_jk/after\test\ssltest_old.c:781:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbca5a50 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbca5990 <col:21> 'char [73]' lvalue " -client_min_proto <string> - Minimum version the client should support\n"
|   |-CallExpr 0x13afbca5c08 <line:782:5, col:96> 'int'
|   | |-ImplicitCastExpr 0x13afbca5bf0 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbca5a80 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbca5b58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbca5b40 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbca5b20 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbca5ad8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbca5ac0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbca5aa0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbca5af8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbca5c50 <.//openssl//file_jk/after\test\ssltest_old.c:782:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbca5c38 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbca5b78 <col:21> 'char [73]' lvalue " -client_max_proto <string> - Maximum version the client should support\n"
|   |-CallExpr 0x13afbca5e40 <line:783:5, col:120> 'int'
|   | |-ImplicitCastExpr 0x13afbca5e28 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbca5c68 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbca5d40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbca5d28 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbca5d08 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbca5cc0 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbca5ca8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbca5c88 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbca5ce0 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbca5e88 <.//openssl//file_jk/after\test\ssltest_old.c:783:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbca5e70 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbca5d98 <col:21> 'char [97]' lvalue " -should_negotiate <string> - The version that should be negotiated, fail-client or fail-server\n"
|   |-CallExpr 0x13afbca6010 <line:785:5, col:69> 'int'
|   | |-ImplicitCastExpr 0x13afbca5ff8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbca5ea0 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbca5f78 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbca5f60 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbca5f40 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbca5ef8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbca5ee0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbca5ec0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbca5f18 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbca6058 <.//openssl//file_jk/after\test\ssltest_old.c:785:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbca6040 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbca5f98 <col:21> 'char [46]' lvalue " -noct         - no certificate transparency\n"
|   |-CallExpr 0x13afbca61e8 <line:786:5, col:74> 'int'
|   | |-ImplicitCastExpr 0x13afbca61d0 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbca6070 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbca6148 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbca6130 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbca6110 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbca60c8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbca60b0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbca6090 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbca60e8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbca6230 <.//openssl//file_jk/after\test\ssltest_old.c:786:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbca6218 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbca6168 <col:21> 'char [51]' lvalue " -requestct    - request certificate transparency\n"
|   |-CallExpr 0x13afbca63c0 <line:787:5, col:74> 'int'
|   | |-ImplicitCastExpr 0x13afbca63a8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbca6248 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbca6320 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbca6308 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbca62e8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbca62a0 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbca6288 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbca6268 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbca62c0 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbca6408 <.//openssl//file_jk/after\test\ssltest_old.c:787:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbca63f0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbca6340 <col:21> 'char [51]' lvalue " -requirect    - require certificate transparency\n"
|   |-CallExpr 0x13afbca65a0 <line:789:5, col:84> 'int'
|   | |-ImplicitCastExpr 0x13afbca6588 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbca6420 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbca64f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbca64e0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbca64c0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbca6478 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbca6460 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbca6440 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbca6498 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbca65e8 <.//openssl//file_jk/after\test\ssltest_old.c:789:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbca65d0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbca6518 <col:21> 'char [61]' lvalue " -sn_client <string>  - have client request this servername\n"
|   |-CallExpr 0x13afbca67d0 <line:790:5, col:97> 'int'
|   | |-ImplicitCastExpr 0x13afbca67b8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbca6600 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbca66d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbca66c0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbca66a0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbca6658 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbca6640 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbca6620 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbca6678 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbca6818 <.//openssl//file_jk/after\test\ssltest_old.c:790:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbca6800 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbca6738 <col:21> 'char [74]' lvalue " -sn_server1 <string> - have server context 1 respond to this servername\n"
|   |-CallExpr 0x13afbca69c0 <line:791:5, col:97> 'int'
|   | |-ImplicitCastExpr 0x13afbca69a8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbca6830 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbca6908 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbca68f0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbca68d0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbca6888 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbca6870 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbca6850 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbca68a8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbca6a08 <.//openssl//file_jk/after\test\ssltest_old.c:791:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbca69f0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbca6928 <col:21> 'char [74]' lvalue " -sn_server2 <string> - have server context 2 respond to this servername\n"
|   |-CallExpr 0x13afbca6b90 <line:792:5, col:66> 'int'
|   | |-ImplicitCastExpr 0x13afbca6b78 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbca6a20 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbca6af8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbca6ae0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbca6ac0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbca6a78 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbca6a60 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbca6a40 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbca6a98 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbca6bd8 <.//openssl//file_jk/after\test\ssltest_old.c:792:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbca6bc0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbca6b18 <col:21> 'char [43]' lvalue " -sn_expect1          - expected server 1\n"
|   |-CallExpr 0x13afbca6d60 <line:793:5, col:66> 'int'
|   | |-ImplicitCastExpr 0x13afbca6d48 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbca6bf0 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbca6cc8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbca6cb0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbca6c90 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbca6c48 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbca6c30 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbca6c10 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbca6c68 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbca6da8 <.//openssl//file_jk/after\test\ssltest_old.c:793:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbca6d90 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbca6ce8 <col:21> 'char [43]' lvalue " -sn_expect2          - expected server 2\n"
|   |-CallExpr 0x13afbca6f40 <line:794:5, col:88> 'int'
|   | |-ImplicitCastExpr 0x13afbca6f28 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbca6dc0 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbca6e98 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbca6e80 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbca6e60 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbca6e18 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbca6e00 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbca6de0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbca6e38 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbca6f88 <.//openssl//file_jk/after\test\ssltest_old.c:794:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbca6f70 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbca6eb8 <col:21> 'char [65]' lvalue " -server_sess_out <file>    - Save the server session to a file\n"
|   |-CallExpr 0x13afbc9f100 <line:795:5, col:90> 'int'
|   | |-ImplicitCastExpr 0x13afbc9f0e8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbca6fa0 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbca7078 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbca7060 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbca7040 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbca6ff8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbca6fe0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbca6fc0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbca7018 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc9f148 <.//openssl//file_jk/after\test\ssltest_old.c:795:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc9f130 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbca7098 <col:21> 'char [67]' lvalue " -server_sess_in <file>     - Read the server session from a file\n"
|   |-CallExpr 0x13afbc9f2e0 <line:796:5, col:88> 'int'
|   | |-ImplicitCastExpr 0x13afbc9f2c8 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc9f160 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc9f238 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc9f220 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc9f200 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc9f1b8 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc9f1a0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc9f180 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc9f1d8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc9f328 <.//openssl//file_jk/after\test\ssltest_old.c:796:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc9f310 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc9f258 <col:21> 'char [65]' lvalue " -client_sess_out <file>    - Save the client session to a file\n"
|   |-CallExpr 0x13afbc9f4c8 <line:797:5, col:90> 'int'
|   | |-ImplicitCastExpr 0x13afbc9f4b0 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc9f340 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc9f418 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc9f400 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc9f3e0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc9f398 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc9f380 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc9f360 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc9f3b8 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc9f510 <.//openssl//file_jk/after\test\ssltest_old.c:797:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc9f4f8 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc9f438 <col:21> 'char [67]' lvalue " -client_sess_in <file>     - Read the client session from a file\n"
|   |-CallExpr 0x13afbc9f6b0 <line:798:5, col:96> 'int'
|   | |-ImplicitCastExpr 0x13afbc9f698 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbc9f528 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |-ParenExpr 0x13afbc9f600 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | `-UnaryOperator 0x13afbc9f5e8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   `-ArraySubscriptExpr 0x13afbc9f5c8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |     |-CallExpr 0x13afbc9f580 <col:18, col:29> 'FILE *'
|   | |     | `-ImplicitCastExpr 0x13afbc9f568 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |     |   `-DeclRefExpr 0x13afbc9f548 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |     `-IntegerLiteral 0x13afbc9f5a0 <col:31> 'int' 2
|   | `-ImplicitCastExpr 0x13afbc9f6f8 <.//openssl//file_jk/after\test\ssltest_old.c:798:21> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x13afbc9f6e0 <col:21> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbc9f620 <col:21> 'char [73]' lvalue " -should_reuse <number>     - The expected state of reusing the session\n"
|   `-CallExpr 0x13afbc9f888 <line:799:5, col:73> 'int'
|     |-ImplicitCastExpr 0x13afbc9f870 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x13afbc9f710 <col:5> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|     |-ParenExpr 0x13afbc9f7e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|     | `-UnaryOperator 0x13afbc9f7d0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x13afbc9f7b0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|     |     |-CallExpr 0x13afbc9f768 <col:18, col:29> 'FILE *'
|     |     | `-ImplicitCastExpr 0x13afbc9f750 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|     |     |   `-DeclRefExpr 0x13afbc9f730 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|     |     `-IntegerLiteral 0x13afbc9f788 <col:31> 'int' 2
|     `-ImplicitCastExpr 0x13afbc9f8d0 <.//openssl//file_jk/after\test\ssltest_old.c:799:21> 'const char *' <NoOp>
|       `-ImplicitCastExpr 0x13afbc9f8b8 <col:21> 'char *' <ArrayToPointerDecay>
|         `-StringLiteral 0x13afbc9f808 <col:21> 'char [50]' lvalue " -no_ticket    - do not issue TLS session ticket\n"
|-FunctionDecl 0x13afbc9fc78 <line:802:1, line:836:1> line:802:13 invalid print_key_details 'void (int *, int *)' static
| |-ParmVarDecl 0x13afbc9fb20 <col:31, col:36> col:36 invalid out 'int *'
| |-ParmVarDecl 0x13afbc9fba0 <col:41, col:51> col:51 invalid key 'int *'
| `-CompoundStmt 0x13afbca1010 <line:803:1, line:836:1>
|   |-DeclStmt 0x13afbc9fed0 <line:804:5, col:33>
|   | `-VarDecl 0x13afbc9fd58 <col:5, col:9> col:9 used keyid 'int'
|   `-IfStmt 0x13afbca0fe8 <line:806:5, line:835:5> has_else
|     |-OpaqueValueExpr 0x13afbca0fd0 <<invalid sloc>> '_Bool'
|     |-CompoundStmt 0x13afbca0ac0 <line:806:31, line:816:5>
|     | |-DeclStmt 0x13afbca00b0 <line:808:9, col:16>
|     | | `-VarDecl 0x13afbca0048 <col:9, col:13> col:13 used nid 'int'
|     | |-DeclStmt 0x13afbca0148 <line:809:9, col:26>
|     | | `-VarDecl 0x13afbca00e0 <col:9, col:21> col:21 used cname 'const char *'
|     | |-BinaryOperator 0x13afbca06a0 <line:812:9, col:38> 'const char *' '='
|     | | |-DeclRefExpr 0x13afbca04c8 <col:9> 'const char *' lvalue Var 0x13afbca00e0 'cname' 'const char *'
|     | | `-ImplicitCastExpr 0x13afbca0688 <col:17, col:38> 'const char *' <IntegralToPointer>
|     | |   `-CallExpr 0x13afbca0648 <col:17, col:38> 'int'
|     | |     |-ImplicitCastExpr 0x13afbca0630 <col:17> 'int (*)()' <FunctionToPointerDecay>
|     | |     | `-DeclRefExpr 0x13afbca05f0 <col:17> 'int ()' Function 0x13afbca0528 'EC_curve_nid2nist' 'int ()'
|     | |     `-ImplicitCastExpr 0x13afbca0670 <col:35> 'int' <LValueToRValue>
|     | |       `-DeclRefExpr 0x13afbca0610 <col:35> 'int' lvalue Var 0x13afbca0048 'nid' 'int'
|     | `-IfStmt 0x13afbca08f0 <line:813:9, line:814:35>
|     |   |-UnaryOperator 0x13afbca06f8 <line:813:13, col:14> 'int' prefix '!' cannot overflow
|     |   | `-ImplicitCastExpr 0x13afbca06e0 <col:14> 'const char *' <LValueToRValue>
|     |   |   `-DeclRefExpr 0x13afbca06c0 <col:14> 'const char *' lvalue Var 0x13afbca00e0 'cname' 'const char *'
|     |   `-BinaryOperator 0x13afbca08d0 <line:814:13, col:35> 'const char *' '='
|     |     |-DeclRefExpr 0x13afbca0710 <col:13> 'const char *' lvalue Var 0x13afbca00e0 'cname' 'const char *'
|     |     `-ImplicitCastExpr 0x13afbca08b8 <col:21, col:35> 'const char *' <IntegralToPointer>
|     |       `-CallExpr 0x13afbca0878 <col:21, col:35> 'int'
|     |         |-ImplicitCastExpr 0x13afbca0860 <col:21> 'int (*)()' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x13afbca0820 <col:21> 'int ()' Function 0x13afbca0758 'OBJ_nid2sn' 'int ()'
|     |         `-ImplicitCastExpr 0x13afbca08a0 <col:32> 'int' <LValueToRValue>
|     |           `-DeclRefExpr 0x13afbca0840 <col:32> 'int' lvalue Var 0x13afbca0048 'nid' 'int'
|     `-CompoundStmt 0x13afbca0fb0 <line:818:5, line:835:5>
|       |-DeclStmt 0x13afbca0b70 <line:819:9, col:28>
|       | `-VarDecl 0x13afbca0b08 <col:9, col:21> col:21 used algname 'const char *'
|       `-SwitchStmt 0x13afbca0bc0 <line:820:9, line:833:9>
|         |-ImplicitCastExpr 0x13afbca0ba8 <line:820:17> 'int' <LValueToRValue>
|         | `-DeclRefExpr 0x13afbca0b88 <col:17> 'int' lvalue Var 0x13afbc9fd58 'keyid' 'int'
|         `-CompoundStmt 0x13afbca0ed8 <col:24, line:833:9>
|           |-BinaryOperator 0x13afbca0c68 <line:822:13, col:23> 'const char *' '='
|           | |-DeclRefExpr 0x13afbca0be0 <col:13> 'const char *' lvalue Var 0x13afbca0b08 'algname' 'const char *'
|           | `-ImplicitCastExpr 0x13afbca0c50 <col:23> 'const char *' <NoOp>
|           |   `-ImplicitCastExpr 0x13afbca0c38 <col:23> 'char *' <ArrayToPointerDecay>
|           |     `-StringLiteral 0x13afbca0c18 <col:23> 'char [4]' lvalue "RSA"
|           |-BreakStmt 0x13afbca0c88 <line:823:13>
|           |-BinaryOperator 0x13afbca0d00 <line:825:13, col:23> 'const char *' '='
|           | |-DeclRefExpr 0x13afbca0c90 <col:13> 'const char *' lvalue Var 0x13afbca0b08 'algname' 'const char *'
|           | `-ImplicitCastExpr 0x13afbca0ce8 <col:23> 'const char *' <NoOp>
|           |   `-ImplicitCastExpr 0x13afbca0cd0 <col:23> 'char *' <ArrayToPointerDecay>
|           |     `-StringLiteral 0x13afbca0cb0 <col:23> 'char [4]' lvalue "DSA"
|           |-BreakStmt 0x13afbca0d20 <line:826:13>
|           |-BinaryOperator 0x13afbca0d98 <line:828:13, col:23> 'const char *' '='
|           | |-DeclRefExpr 0x13afbca0d28 <col:13> 'const char *' lvalue Var 0x13afbca0b08 'algname' 'const char *'
|           | `-ImplicitCastExpr 0x13afbca0d80 <col:23> 'const char *' <NoOp>
|           |   `-ImplicitCastExpr 0x13afbca0d68 <col:23> 'char *' <ArrayToPointerDecay>
|           |     `-StringLiteral 0x13afbca0d48 <col:23> 'char [3]' lvalue "DH"
|           |-BreakStmt 0x13afbca0db8 <line:829:13>
|           |-DefaultStmt 0x13afbca0eb0 <line:830:9, line:831:39>
|           | `-BinaryOperator 0x13afbca0e90 <col:13, col:39> 'const char *' '='
|           |   |-DeclRefExpr 0x13afbca0dc0 <col:13> 'const char *' lvalue Var 0x13afbca0b08 'algname' 'const char *'
|           |   `-ImplicitCastExpr 0x13afbca0e78 <col:23, col:39> 'const char *' <IntegralToPointer>
|           |     `-CallExpr 0x13afbca0e38 <col:23, col:39> 'int'
|           |       |-ImplicitCastExpr 0x13afbca0e20 <col:23> 'int (*)()' <FunctionToPointerDecay>
|           |       | `-DeclRefExpr 0x13afbca0de0 <col:23> 'int ()' Function 0x13afbca0758 'OBJ_nid2sn' 'int ()'
|           |       `-ImplicitCastExpr 0x13afbca0e60 <col:34> 'int' <LValueToRValue>
|           |         `-DeclRefExpr 0x13afbca0e00 <col:34> 'int' lvalue Var 0x13afbc9fd58 'keyid' 'int'
|           `-BreakStmt 0x13afbca0ed0 <line:832:13>
|-FunctionDecl 0x13afbca11b8 <line:838:1, line:868:1> line:838:13 invalid print_details 'void (int *, const char *)' static
| |-ParmVarDecl 0x13afbca1048 <col:27, col:32> col:32 invalid c_ssl 'int *'
| |-ParmVarDecl 0x13afbca10e0 <col:39, col:51> col:51 used prefix 'const char *'
| `-CompoundStmt 0x13afbca2408 <line:839:1, line:868:1>
|   |-DeclStmt 0x13afbca1300 <line:840:5, col:27>
|   | `-VarDecl 0x13afbca1298 <col:5, col:23> col:23 invalid ciph 'const int *'
|   |-DeclStmt 0x13afbca1398 <line:841:5, col:14>
|   | `-VarDecl 0x13afbca1330 <col:5, col:9> col:9 used mdnid 'int'
|   |-IfStmt 0x13afbca1e90 <line:851:5, line:859:5>
|   | |-OpaqueValueExpr 0x13afbca1e78 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbca1e60 <line:851:23, line:859:5>
|   |   `-IfStmt 0x13afbca1d38 <line:854:9, line:857:9>
|   |     |-OpaqueValueExpr 0x13afbca1d20 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x13afbca1d10 <line:854:29, line:857:9>
|   `-IfStmt 0x13afbca2138 <line:860:5, line:864:5>
|     |-OpaqueValueExpr 0x13afbca2120 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x13afbca2110 <line:860:47, line:864:5>
|-FunctionDecl 0x13afbca2500 <line:875:1, line:895:1> line:875:12 used protocol_from_string 'int (const char *)' static
| |-ParmVarDecl 0x13afbca2450 <col:33, col:45> col:45 used value 'const char *'
| `-CompoundStmt 0x13afbca7298 <line:876:1, line:895:1>
|   |-DeclStmt 0x13afbca2760 <line:877:5, line:880:6>
|   | `-RecordDecl 0x13afbca25c0 <line:877:5, line:880:5> line:877:12 struct protocol_versions definition
|   |   |-FieldDecl 0x13afbca2698 <line:878:9, col:21> col:21 referenced name 'const char *'
|   |   `-FieldDecl 0x13afbca2708 <line:879:9, col:13> col:13 referenced version 'int'
|   |-DeclStmt 0x13afbca2a18 <line:881:5, line:887:38>
|   | `-VarDecl 0x13afbca2838 <line:881:5, col:52> col:43 used versions 'const struct protocol_versions []' static
|   |-DeclStmt 0x13afbca2aa8 <line:888:5, col:13>
|   | `-VarDecl 0x13afbca2a40 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   |-DeclStmt 0x13afbca2d48 <line:889:5, col:36>
|   | `-VarDecl 0x13afbca2ad0 <col:5, col:35> col:12 used n 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x13afbca2d30 <col:16, col:35> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-CallExpr 0x13afbca2c98 <col:16, col:35> 'int'
|   |       |-ImplicitCastExpr 0x13afbca2c80 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x13afbca2c28 <col:16> 'int ()' Function 0x13afbca2b60 'OSSL_NELEM' 'int ()'
|   |       `-ImplicitCastExpr 0x13afbca2d18 <col:27> 'const struct protocol_versions *' <ArrayToPointerDecay>
|   |         `-DeclRefExpr 0x13afbca2c48 <col:27> 'const struct protocol_versions []' lvalue Var 0x13afbca2838 'versions' 'const struct protocol_versions []'
|   |-ForStmt 0x13afbca7210 <line:891:5, line:893:32>
|   | |-BinaryOperator 0x13afbca2dd8 <line:891:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x13afbca2d60 <col:10> 'size_t':'unsigned long long' lvalue Var 0x13afbca2a40 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x13afbca2dc0 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x13afbca2d98 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x13afbca2e80 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x13afbca2e50 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbca2df8 <col:17> 'size_t':'unsigned long long' lvalue Var 0x13afbca2a40 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x13afbca2e68 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbca2e18 <col:21> 'size_t':'unsigned long long' lvalue Var 0x13afbca2ad0 'n' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x13afbca2ec0 <col:24, col:25> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x13afbca2ea0 <col:24> 'size_t':'unsigned long long' lvalue Var 0x13afbca2a40 'i' 'size_t':'unsigned long long'
|   | `-IfStmt 0x13afbca71f8 <line:892:9, line:893:32>
|   |   |-BinaryOperator 0x13afbca30a8 <line:892:13, col:48> 'int' '=='
|   |   | |-CallExpr 0x13afbca3020 <col:13, col:43> 'int'
|   |   | | |-ImplicitCastExpr 0x13afbca3008 <col:13> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x13afbca2ed8 <col:13> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   | | |-ImplicitCastExpr 0x13afbca3050 <col:20, col:32> 'const char *' <LValueToRValue>
|   |   | | | `-MemberExpr 0x13afbca2f88 <col:20, col:32> 'const char *const' lvalue .name 0x13afbca2698
|   |   | | |   `-ArraySubscriptExpr 0x13afbca2f68 <col:20, col:30> 'const struct protocol_versions':'const struct protocol_versions' lvalue
|   |   | | |     |-ImplicitCastExpr 0x13afbca2f38 <col:20> 'const struct protocol_versions *' <ArrayToPointerDecay>
|   |   | | |     | `-DeclRefExpr 0x13afbca2ef8 <col:20> 'const struct protocol_versions []' lvalue Var 0x13afbca2838 'versions' 'const struct protocol_versions []'
|   |   | | |     `-ImplicitCastExpr 0x13afbca2f50 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x13afbca2f18 <col:29> 'size_t':'unsigned long long' lvalue Var 0x13afbca2a40 'i' 'size_t':'unsigned long long'
|   |   | | `-ImplicitCastExpr 0x13afbca3068 <col:38> 'const char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13afbca2fb8 <col:38> 'const char *' lvalue ParmVar 0x13afbca2450 'value' 'const char *'
|   |   | `-IntegerLiteral 0x13afbca3080 <col:48> 'int' 0
|   |   `-ReturnStmt 0x13afbca71e8 <line:893:13, col:32>
|   |     `-ImplicitCastExpr 0x13afbca71d0 <col:20, col:32> 'int' <LValueToRValue>
|   |       `-MemberExpr 0x13afbca71a0 <col:20, col:32> 'const int' lvalue .version 0x13afbca2708
|   |         `-ArraySubscriptExpr 0x13afbca7180 <col:20, col:30> 'const struct protocol_versions':'const struct protocol_versions' lvalue
|   |           |-ImplicitCastExpr 0x13afbca7150 <col:20> 'const struct protocol_versions *' <ArrayToPointerDecay>
|   |           | `-DeclRefExpr 0x13afbca7110 <col:20> 'const struct protocol_versions []' lvalue Var 0x13afbca2838 'versions' 'const struct protocol_versions []'
|   |           `-ImplicitCastExpr 0x13afbca7168 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|   |             `-DeclRefExpr 0x13afbca7130 <col:29> 'size_t':'unsigned long long' lvalue Var 0x13afbca2a40 'i' 'size_t':'unsigned long long'
|   `-ReturnStmt 0x13afbca7288 <line:894:5, col:13>
|     `-UnaryOperator 0x13afbca7270 <col:12, col:13> 'int' prefix '-'
|       `-IntegerLiteral 0x13afbca7248 <col:13> 'int' 1
|-FunctionDecl 0x13afbca73d0 <line:897:1, line:914:1> line:897:21 invalid read_session 'int *(const char *)' static
| |-ParmVarDecl 0x13afbca72f0 <col:34, col:46> col:46 used filename 'const char *'
| `-CompoundStmt 0x13afbca7e18 <line:898:1, line:914:1>
|   |-IfStmt 0x13afbca7948 <line:902:5, line:906:5>
|   | |-OpaqueValueExpr 0x13afbca7930 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbca7918 <line:902:20, line:906:5>
|   |   `-ReturnStmt 0x13afbca7908 <line:905:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     `-ImplicitCastExpr 0x13afbca78f0 <col:17, col:27> 'int *' <NullToPointer>
|   |       `-ParenExpr 0x13afbca78d0 <col:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x13afbca78a8 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x13afbca7868 <col:26> 'int' 0
|   `-IfStmt 0x13afbca7cf0 <.//openssl//file_jk/after\test\ssltest_old.c:908:5, line:911:5>
|     |-OpaqueValueExpr 0x13afbca7cd8 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x13afbca7cc8 <line:908:23, line:911:5>
|-FunctionDecl 0x13afbca7fb0 <line:916:1, line:932:1> line:916:12 invalid write_session 'int (const char *, int *)' static
| |-ParmVarDecl 0x13afbca7e50 <col:26, col:38> col:38 used filename 'const char *'
| |-ParmVarDecl 0x13afbca7ed0 <col:48, col:61> col:61 invalid sess 'int *'
| `-CompoundStmt 0x13afbca85c8 <line:917:1, line:932:1>
|   |-IfStmt 0x13afbca82a8 <line:920:5, line:923:5>
|   | |-OpaqueValueExpr 0x13afbca8290 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbca8278 <line:920:23, line:923:5>
|   |   `-ReturnStmt 0x13afbca8268 <line:922:9, col:16>
|   |     `-IntegerLiteral 0x13afbca8240 <col:16> 'int' 0
|   |-IfStmt 0x13afbca8448 <line:924:5, line:928:5>
|   | |-OpaqueValueExpr 0x13afbca8430 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbca8418 <line:924:20, line:928:5>
|   |   `-ReturnStmt 0x13afbca8408 <line:927:9, col:16>
|   |     `-IntegerLiteral 0x13afbca83e0 <col:16> 'int' 0
|   `-ReturnStmt 0x13afbca85b8 <line:931:5, col:12>
|     `-IntegerLiteral 0x13afbca8590 <col:12> 'int' 1
|-FunctionDecl 0x13afbca87f0 <line:939:1, line:950:1> line:939:12 invalid set_protocol_version 'int (const char *, int *, int)' static
| |-ParmVarDecl 0x13afbca8608 <col:33, col:45> col:45 used version 'const char *'
| |-ParmVarDecl 0x13afbca8688 <col:54, col:59> col:59 invalid ssl 'int *'
| |-ParmVarDecl 0x13afbca8708 <col:64, col:68> col:68 used setting 'int'
| `-CompoundStmt 0x13afbca8ef8 <line:940:1, line:950:1>
|   |-IfStmt 0x13afbca8ea8 <line:941:5, line:948:5>
|   | |-BinaryOperator 0x13afbca89b0 <line:941:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x13afbca8980 <.//openssl//file_jk/after\test\ssltest_old.c:941:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbca88c0 <col:9> 'const char *' lvalue ParmVar 0x13afbca8608 'version' 'const char *'
|   | | `-ImplicitCastExpr 0x13afbca8998 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x13afbca8960 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x13afbca8938 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x13afbca88f8 <col:26> 'int' 0
|   | `-CompoundStmt 0x13afbca8e88 <.//openssl//file_jk/after\test\ssltest_old.c:941:26, line:948:5>
|   |   |-DeclStmt 0x13afbca8b10 <line:942:9, col:48>
|   |   | `-VarDecl 0x13afbca89e8 <col:9, col:47> col:13 used ver 'int' cinit
|   |   |   `-CallExpr 0x13afbca8ad0 <col:19, col:47> 'int'
|   |   |     |-ImplicitCastExpr 0x13afbca8ab8 <col:19> 'int (*)(const char *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x13afbca8a50 <col:19> 'int (const char *)' Function 0x13afbca2500 'protocol_from_string' 'int (const char *)'
|   |   |     `-ImplicitCastExpr 0x13afbca8af8 <col:40> 'const char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x13afbca8a70 <col:40> 'const char *' lvalue ParmVar 0x13afbca8608 'version' 'const char *'
|   |   `-IfStmt 0x13afbca8c80 <line:943:9, line:946:9>
|   |     |-BinaryOperator 0x13afbca8ba0 <line:943:13, col:19> 'int' '<'
|   |     | |-ImplicitCastExpr 0x13afbca8b88 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x13afbca8b28 <col:13> 'int' lvalue Var 0x13afbca89e8 'ver' 'int'
|   |     | `-IntegerLiteral 0x13afbca8b60 <col:19> 'int' 0
|   |     `-CompoundStmt 0x13afbca8c68 <col:22, line:946:9>
|   |       `-ReturnStmt 0x13afbca8c58 <line:945:13, col:20>
|   |         `-IntegerLiteral 0x13afbca8c30 <col:20> 'int' 0
|   `-ReturnStmt 0x13afbca8ee8 <line:949:5, col:12>
|     `-IntegerLiteral 0x13afbca8ec0 <col:12> 'int' 1
|-FunctionDecl 0x13afbc99110 <line:952:1, line:1958:1> line:952:5 main 'int (int, char **)'
| |-ParmVarDecl 0x13afbca8f30 <col:10, col:14> col:14 used argc 'int'
| |-ParmVarDecl 0x13afbca9020 <col:20, col:31> col:26 used argv 'char **':'char **'
| `-CompoundStmt 0x13afbcd0978 <line:953:1, line:1958:1>
|   |-DeclStmt 0x13afbc99430 <line:954:5, col:46>
|   | |-VarDecl 0x13afbc991f0 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\test\ssltest_old.c:954:17 used CApath 'const char *' cinit
|   | | `-ImplicitCastExpr 0x13afbc992e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <NullToPointer>
|   | |   `-ParenExpr 0x13afbc992c0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x13afbc99298 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x13afbc99258 <col:26> 'int' 0
|   | `-VarDecl 0x13afbc99310 <.//openssl//file_jk/after\test\ssltest_old.c:954:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\test\ssltest_old.c:954:33 used CAfile 'const char *' cinit
|   |   `-ImplicitCastExpr 0x13afbc99400 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <NullToPointer>
|   |     `-ParenExpr 0x13afbc993e0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x13afbc993b8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x13afbc99378 <col:26> 'int' 0
|   |-DeclStmt 0x13afbc994f0 <.//openssl//file_jk/after\test\ssltest_old.c:955:5, col:18>
|   | `-VarDecl 0x13afbc99460 <col:5, col:17> col:9 used badop 'int' cinit
|   |   `-IntegerLiteral 0x13afbc994c8 <col:17> 'int' 0
|   |-DeclStmt 0x13afbc99850 <line:956:5, col:70>
|   | |-EnumDecl 0x13afbc99508 <col:5, col:50> col:5
|   | | |-EnumConstantDecl 0x13afbc995e0 <col:12> col:12 referenced BIO_MEM 'int'
|   | | |-EnumConstantDecl 0x13afbc99638 <col:21> col:21 referenced BIO_PAIR 'int'
|   | | |-EnumConstantDecl 0x13afbc99690 <col:31> col:31 referenced BIO_IPV4 'int'
|   | | `-EnumConstantDecl 0x13afbc996e8 <col:41> col:41 referenced BIO_IPV6 'int'
|   | `-VarDecl 0x13afbc99798 <col:5, col:63> col:52 used bio_type 'enum (anonymous enum at .//openssl//file_jk/after\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/after\test\ssltest_old.c:956:5)' cinit
|   |   `-ImplicitCastExpr 0x13afbc99820 <col:63> 'enum (anonymous enum at .//openssl//file_jk/after\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/after\test\ssltest_old.c:956:5)' <IntegralCast>
|   |     `-DeclRefExpr 0x13afbc99800 <col:63> 'int' EnumConstant 0x13afbc995e0 'BIO_MEM' 'int'
|   |-DeclStmt 0x13afbc99910 <line:957:5, col:18>
|   | `-VarDecl 0x13afbc99880 <col:5, col:17> col:9 used force 'int' cinit
|   |   `-IntegerLiteral 0x13afbc998e8 <col:17> 'int' 0
|   |-DeclStmt 0x13afbc99d50 <line:958:5, col:69>
|   | |-VarDecl 0x13afbc99940 <col:5, col:17> col:9 used dtls1 'int' cinit
|   | | `-IntegerLiteral 0x13afbc999a8 <col:17> 'int' 0
|   | |-VarDecl 0x13afbc999e8 <col:5, col:29> col:20 used dtls12 'int' cinit
|   | | `-IntegerLiteral 0x13afbc99a50 <col:29> 'int' 0
|   | |-VarDecl 0x13afbc99a90 <col:5, col:39> col:32 used dtls 'int' cinit
|   | | `-IntegerLiteral 0x13afbc99af8 <col:39> 'int' 0
|   | |-VarDecl 0x13afbc99b38 <col:5, col:49> col:42 used tls1 'int' cinit
|   | | `-IntegerLiteral 0x13afbc99ba0 <col:49> 'int' 0
|   | |-VarDecl 0x13afbc99be0 <col:5, col:59> col:52 used ssl3 'int' cinit
|   | | `-IntegerLiteral 0x13afbc99c48 <col:59> 'int' 0
|   | `-VarDecl 0x13afbc99c88 <col:5, col:68> col:62 used ret 'int' cinit
|   |   `-IntegerLiteral 0x13afbc99cf0 <col:68> 'int' 1
|   |-DeclStmt 0x13afbc99e10 <line:959:5, col:24>
|   | `-VarDecl 0x13afbc99d80 <col:5, col:23> col:9 used client_auth 'int' cinit
|   |   `-IntegerLiteral 0x13afbc99de8 <col:23> 'int' 0
|   |-DeclStmt 0x13afbc99f68 <line:960:5, col:27>
|   | |-VarDecl 0x13afbc99e40 <col:5, col:23> col:9 used server_auth 'int' cinit
|   | | `-IntegerLiteral 0x13afbc99ea8 <col:23> 'int' 0
|   | `-VarDecl 0x13afbc99ee8 <col:5, col:26> col:26 used i 'int'
|   |-DeclStmt 0x13afbc9a158 <line:961:5, line:962:35>
|   | `-VarDecl 0x13afbc99fd0 <line:961:5, line:962:34> line:961:27 used app_verify_arg 'struct app_verify_arg':'struct app_verify_arg' cinit
|   |   `-InitListExpr 0x13afbc9a0f0 <line:962:9, col:34> 'struct app_verify_arg':'struct app_verify_arg'
|   |     |-ImplicitCastExpr 0x13afbc9a140 <line:120:29> 'char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x13afbc9a038 <col:29> 'char [23]' lvalue "Test Callback Argument"
|   |     `-IntegerLiteral 0x13afbc9a068 <line:962:32> 'int' 0
|   |-DeclStmt 0x13afbc9a1f0 <line:963:5, col:12>
|   | `-VarDecl 0x13afbc9a188 <col:5, col:11> col:11 used p 'char *'
|   |-DeclStmt 0x13afbc9a398 <line:965:5, col:34>
|   | `-VarDecl 0x13afbc9a2a8 <col:5, col:23> col:23 invalid meth 'const int *'
|   |-DeclStmt 0x13afbc9a518 <line:967:5, col:30>
|   | |-VarDecl 0x13afbc9a3c8 <col:5, col:18> col:9 used number 'int' cinit
|   | | `-IntegerLiteral 0x13afbc9a430 <col:18> 'int' 1
|   | `-VarDecl 0x13afbc9a470 <col:5, col:29> col:21 used reuse 'int' cinit
|   |   `-IntegerLiteral 0x13afbc9a4d8 <col:29> 'int' 0
|   |-DeclStmt 0x13afbc9a5f0 <line:968:5, col:26>
|   | `-VarDecl 0x13afbc9a548 <col:5, col:25> col:9 used should_reuse 'int' cinit
|   |   `-UnaryOperator 0x13afbc9a5d8 <col:24, col:25> 'int' prefix '-'
|   |     `-IntegerLiteral 0x13afbc9a5b0 <col:25> 'int' 1
|   |-DeclStmt 0x13afbc9a6b0 <line:969:5, col:22>
|   | `-VarDecl 0x13afbc9a620 <col:5, col:21> col:9 used no_ticket 'int' cinit
|   |   `-IntegerLiteral 0x13afbc9a688 <col:21> 'int' 0
|   |-DeclStmt 0x13afbc9a770 <line:970:5, col:22>
|   | `-VarDecl 0x13afbc9a6e0 <col:5, col:18> col:10 used bytes 'long' cinit
|   |   `-IntegerLiteral 0x13afbc9a748 <col:18> 'long' 256
|   |-DeclStmt 0x13afbc9a8f0 <line:973:5, col:35>
|   | |-VarDecl 0x13afbc9a7a0 <col:5, col:18> col:9 used dhe512 'int' cinit
|   | | `-IntegerLiteral 0x13afbc9a808 <col:18> 'int' 0
|   | `-VarDecl 0x13afbc9a848 <col:5, col:34> col:21 used dhe1024dsa 'int' cinit
|   |   `-IntegerLiteral 0x13afbc9a8b0 <col:34> 'int' 0
|   |-DeclStmt 0x13afbc9ab70 <line:977:5, col:51>
|   | `-VarDecl 0x13afbc9a918 <col:5, col:50> col:20 used srp_client_arg 'SRP_CLIENT_ARG':'struct srp_client_arg_st' cinit
|   |   `-InitListExpr 0x13afbc9aaf0 <col:37, col:50> 'SRP_CLIENT_ARG':'struct srp_client_arg_st'
|   |     |-ImplicitCastExpr 0x13afbc9ab40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     | `-ParenExpr 0x13afbc9a9e8 <col:17, col:27> 'void *'
|   |     |   `-CStyleCastExpr 0x13afbc9a9c0 <col:18, col:26> 'void *' <NullToPointer>
|   |     |     `-IntegerLiteral 0x13afbc9a980 <col:26> 'int' 0
|   |     `-ImplicitCastExpr 0x13afbc9ab58 <col:17, col:27> 'char *' <NullToPointer>
|   |       `-ParenExpr 0x13afbc9aa70 <col:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x13afbc9aa48 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x13afbc9aa08 <col:26> 'int' 0
|   |-DeclStmt 0x13afbc9adf0 <.//openssl//file_jk/after\test\ssltest_old.c:979:5, col:51>
|   | `-VarDecl 0x13afbc9ab98 <col:5, col:50> col:20 used srp_server_arg 'SRP_SERVER_ARG':'struct srp_server_arg_st' cinit
|   |   `-InitListExpr 0x13afbc9ad70 <col:37, col:50> 'SRP_SERVER_ARG':'struct srp_server_arg_st'
|   |     |-ImplicitCastExpr 0x13afbc9adc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     | `-ParenExpr 0x13afbc9ac68 <col:17, col:27> 'void *'
|   |     |   `-CStyleCastExpr 0x13afbc9ac40 <col:18, col:26> 'void *' <NullToPointer>
|   |     |     `-IntegerLiteral 0x13afbc9ac00 <col:26> 'int' 0
|   |     `-ImplicitCastExpr 0x13afbc9add8 <col:17, col:27> 'char *' <NullToPointer>
|   |       `-ParenExpr 0x13afbc9acf0 <col:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x13afbc9acc8 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x13afbc9ac88 <col:26> 'int' 0
|   |-DeclStmt 0x13afbc9aeb0 <.//openssl//file_jk/after\test\ssltest_old.c:981:5, col:19>
|   | `-VarDecl 0x13afbc9ae20 <col:5, col:18> col:9 used no_dhe 'int' cinit
|   |   `-IntegerLiteral 0x13afbc9ae88 <col:18> 'int' 0
|   |-DeclStmt 0x13afbc9af70 <line:982:5, col:19>
|   | `-VarDecl 0x13afbc9aee0 <col:5, col:18> col:9 used no_psk 'int' cinit
|   |   `-IntegerLiteral 0x13afbc9af48 <col:18> 'int' 0
|   |-DeclStmt 0x13afbc9b030 <line:983:5, col:23>
|   | `-VarDecl 0x13afbc9afa0 <col:5, col:22> col:9 used print_time 'int' cinit
|   |   `-IntegerLiteral 0x13afbc9b008 <col:22> 'int' 0
|   |-DeclStmt 0x13afbcad2b8 <line:984:5, col:35>
|   | |-VarDecl 0x13afbcad140 <col:5, col:22> col:13 used s_time 'clock_t':'long' cinit
|   | | `-ImplicitCastExpr 0x13afbcad1d0 <col:22> 'clock_t':'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x13afbcad1a8 <col:22> 'int' 0
|   | `-VarDecl 0x13afbcad1f8 <col:5, col:34> col:25 used c_time 'clock_t':'long' cinit
|   |   `-ImplicitCastExpr 0x13afbcad288 <col:34> 'clock_t':'long' <IntegralCast>
|   |     `-IntegerLiteral 0x13afbcad260 <col:34> 'int' 0
|   |-DeclStmt 0x13afbcad410 <line:986:5, col:20>
|   | |-VarDecl 0x13afbcad2e8 <col:5, col:9> col:9 used n 'int'
|   | `-VarDecl 0x13afbcad368 <col:5, col:19> col:12 used comp 'int' cinit
|   |   `-IntegerLiteral 0x13afbcad3d0 <col:19> 'int' 0
|   |-DeclStmt 0x13afbcad6c8 <line:993:5, col:20>
|   | `-VarDecl 0x13afbcad660 <col:5, col:9> col:9 used no_protocol 'int'
|   |-DeclStmt 0x13afbcad848 <line:994:5, col:41>
|   | |-VarDecl 0x13afbcad6f8 <col:5, col:23> col:9 used min_version 'int' cinit
|   | | `-IntegerLiteral 0x13afbcad760 <col:23> 'int' 0
|   | `-VarDecl 0x13afbcad7a0 <col:5, col:40> col:26 used max_version 'int' cinit
|   |   `-IntegerLiteral 0x13afbcad808 <col:40> 'int' 0
|   |-DeclStmt 0x13afbcad908 <line:1000:5, col:26>
|   | `-VarDecl 0x13afbcad878 <col:5, col:25> col:9 used ct_validation 'int' cinit
|   |   `-IntegerLiteral 0x13afbcad8e0 <col:25> 'int' 0
|   |-DeclStmt 0x13afbcaddb8 <line:1004:5, col:35>
|   | |-VarDecl 0x13afbcadb78 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\test\ssltest_old.c:1004:11 used arg 'char *' cinit
|   | | `-ImplicitCastExpr 0x13afbcadc68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x13afbcadc48 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x13afbcadc20 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x13afbcadbe0 <col:26> 'int' 0
|   | `-VarDecl 0x13afbcadc98 <.//openssl//file_jk/after\test\ssltest_old.c:1004:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\test\ssltest_old.c:1004:24 used argn 'char *' cinit
|   |   `-ImplicitCastExpr 0x13afbcadd88 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x13afbcadd68 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x13afbcadd40 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x13afbcadd00 <col:26> 'int' 0
|   |-BinaryOperator 0x13afbcade18 <.//openssl//file_jk/after\test\ssltest_old.c:1006:5, col:15> 'int' '='
|   | |-DeclRefExpr 0x13afbcaddd0 <col:5> 'int' lvalue Var 0x13afbca49b0 'verbose' 'int'
|   | `-IntegerLiteral 0x13afbcaddf0 <col:15> 'int' 0
|   |-BinaryOperator 0x13afbcade80 <line:1007:5, col:13> 'int' '='
|   | |-DeclRefExpr 0x13afbcade38 <col:5> 'int' lvalue Var 0x13afbca4a70 'debug' 'int'
|   | `-IntegerLiteral 0x13afbcade58 <col:13> 'int' 0
|   |-BinaryOperator 0x13afbcadf00 <line:1008:5, col:14> 'char *' '='
|   | |-DeclRefExpr 0x13afbcadea0 <col:5> 'char *' lvalue Var 0x13afbca4878 'cipher' 'char *'
|   | `-ImplicitCastExpr 0x13afbcadee8 <col:14> 'char *' <NullToPointer>
|   |   `-IntegerLiteral 0x13afbcadec0 <col:14> 'int' 0
|   |-BinaryOperator 0x13afbcae298 <line:1012:5, col:38> 'char *' '='
|   | |-DeclRefExpr 0x13afbcae108 <col:5> 'char *' lvalue Var 0x13afbc9a188 'p' 'char *'
|   | `-CallExpr 0x13afbcae240 <col:9, col:38> 'char *'
|   |   |-ImplicitCastExpr 0x13afbcae228 <col:9> 'char *(*)(const char *) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13afbcae140 <col:9> 'char *(const char *) __attribute__((cdecl))':'char *(const char *)' Function 0x13afbc49408 'getenv' 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
|   |   `-ImplicitCastExpr 0x13afbcae280 <col:16> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x13afbcae268 <col:16> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x13afbcae198 <col:16> 'char [21]' lvalue "OPENSSL_DEBUG_MEMORY"
|   |-IfStmt 0x13afbcae6c8 <line:1013:5, line:1014:31>
|   | |-BinaryOperator 0x13afbcae530 <line:1013:9, col:41> 'int' '&&'
|   | | |-BinaryOperator 0x13afbcae390 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | | |-ImplicitCastExpr 0x13afbcae360 <.//openssl//file_jk/after\test\ssltest_old.c:1013:9> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x13afbcae2b8 <col:9> 'char *' lvalue Var 0x13afbc9a188 'p' 'char *'
|   | | | `-ImplicitCastExpr 0x13afbcae378 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | | |   `-ParenExpr 0x13afbcae340 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x13afbcae318 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x13afbcae2d8 <col:26> 'int' 0
|   | | `-BinaryOperator 0x13afbcae510 <.//openssl//file_jk/after\test\ssltest_old.c:1013:22, col:41> 'int' '=='
|   | |   |-CallExpr 0x13afbcae458 <col:22, col:36> 'int'
|   | |   | |-ImplicitCastExpr 0x13afbcae440 <col:22> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x13afbcae3b0 <col:22> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   | |   | |-ImplicitCastExpr 0x13afbcae4a0 <col:29> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x13afbcae488 <col:29> 'char *' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x13afbcae3d0 <col:29> 'char *' lvalue Var 0x13afbc9a188 'p' 'char *'
|   | |   | `-ImplicitCastExpr 0x13afbcae4d0 <col:32> 'const char *' <NoOp>
|   | |   |   `-ImplicitCastExpr 0x13afbcae4b8 <col:32> 'char *' <ArrayToPointerDecay>
|   | |   |     `-StringLiteral 0x13afbcae3f0 <col:32> 'char [3]' lvalue "on"
|   | |   `-IntegerLiteral 0x13afbcae4e8 <col:41> 'int' 0
|   | `-CallExpr 0x13afbcae6a0 <line:1014:9, col:31> 'int'
|   |   |-ImplicitCastExpr 0x13afbcae688 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13afbcae640 <col:9> 'int ()' Function 0x13afbcae578 'CRYPTO_set_mem_debug' 'int ()'
|   |   `-IntegerLiteral 0x13afbcae660 <col:30> 'int' 1
|   |-CallExpr 0x13afbcae998 <line:1017:5, col:41> 'int'
|   | |-ImplicitCastExpr 0x13afbcae980 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbcae8e0 <col:5> 'int ()' Function 0x13afbcae818 'RAND_seed' 'int ()'
|   | |-ImplicitCastExpr 0x13afbcae9c8 <col:15> 'const char *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x13afbcae900 <col:15> 'const char [64]' lvalue Var 0x13afbca4b38 'rnd_seed' 'const char [64]'
|   | `-UnaryExprOrTypeTraitExpr 0x13afbcae960 <col:25, col:40> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x13afbcae940 <col:31, col:40> 'const char [64]' lvalue
|   |     `-DeclRefExpr 0x13afbcae920 <col:32> 'const char [64]' lvalue Var 0x13afbca4b38 'rnd_seed' 'const char [64]' non_odr_use_unevaluated
|   |-IfStmt 0x13afbcaed88 <line:1025:5, line:1028:5>
|   | |-OpaqueValueExpr 0x13afbcaed70 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbcaed58 <line:1025:41, line:1028:5>
|   |   `-GotoStmt 0x13afbcaed40 <line:1027:9, col:14> 'end' 0x13afbcaecf0
|   |-IfStmt 0x13afbcaf068 <line:1038:5, line:1041:5>
|   | |-OpaqueValueExpr 0x13afbcaf050 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbcaf038 <line:1038:51, line:1041:5>
|   |   `-GotoStmt 0x13afbcaf020 <line:1040:9, col:14> 'end' 0x13afbcaecf0
|   |-IfStmt 0x13afbcaf128 <line:1042:5, line:1045:5>
|   | |-OpaqueValueExpr 0x13afbcaf110 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbcaf0f8 <line:1042:52, line:1045:5>
|   |   `-GotoStmt 0x13afbcaf0e0 <line:1044:9, col:14> 'end' 0x13afbcaecf0
|   |-IfStmt 0x13afbcb3238 <line:1051:5, line:1054:5>
|   | |-OpaqueValueExpr 0x13afbcb3220 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbcb3208 <line:1051:51, line:1054:5>
|   |   `-GotoStmt 0x13afbcb31f0 <line:1053:9, col:14> 'end' 0x13afbcaecf0
|   |-UnaryOperator 0x13afbcb3270 <line:1056:5, col:9> 'int' postfix '--'
|   | `-DeclRefExpr 0x13afbcb3250 <col:5> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |-UnaryOperator 0x13afbcb32a8 <line:1057:5, col:9> 'char **':'char **' postfix '++'
|   | `-DeclRefExpr 0x13afbcb3288 <col:5> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |-WhileStmt 0x13afbcb8620 <line:1059:5, line:1322:5>
|   | |-BinaryOperator 0x13afbcb3320 <line:1059:12, col:20> 'int' '>='
|   | | |-ImplicitCastExpr 0x13afbcb3308 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbcb32c0 <col:12> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   | | `-IntegerLiteral 0x13afbcb32e0 <col:20> 'int' 1
|   | `-CompoundStmt 0x13afbcb85f8 <col:23, line:1322:5>
|   |   |-IfStmt 0x13afbcb8560 <line:1060:9, line:1319:9> has_else
|   |   | |-BinaryOperator 0x13afbcb34d0 <line:1060:13, col:36> 'int' '=='
|   |   | | |-CallExpr 0x13afbcb3418 <col:13, col:31> 'int'
|   |   | | | |-ImplicitCastExpr 0x13afbcb3400 <col:13> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x13afbcb3340 <col:13> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   | | | |-ImplicitCastExpr 0x13afbcb3460 <col:20, col:21> 'const char *' <NoOp>
|   |   | | | | `-ImplicitCastExpr 0x13afbcb3448 <col:20, col:21> 'char *' <LValueToRValue>
|   |   | | | |   `-UnaryOperator 0x13afbcb3398 <col:20, col:21> 'char *' lvalue prefix '*' cannot overflow
|   |   | | | |     `-ImplicitCastExpr 0x13afbcb3380 <col:21> 'char **':'char **' <LValueToRValue>
|   |   | | | |       `-DeclRefExpr 0x13afbcb3360 <col:21> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   | | | `-ImplicitCastExpr 0x13afbcb3490 <col:27> 'const char *' <NoOp>
|   |   | | |   `-ImplicitCastExpr 0x13afbcb3478 <col:27> 'char *' <ArrayToPointerDecay>
|   |   | | |     `-StringLiteral 0x13afbcb33b0 <col:27> 'char [3]' lvalue "-F"
|   |   | | `-IntegerLiteral 0x13afbcb34a8 <col:36> 'int' 0
|   |   | |-CompoundStmt 0x13afbcb3848 <col:39, line:1068:9>
|   |   | | |-CallExpr 0x13afbcb3670 <line:1064:13, line:1065:84> 'int'
|   |   | | | |-ImplicitCastExpr 0x13afbcb3658 <line:1064:13> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x13afbcb34f0 <col:13> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | | | |-ParenExpr 0x13afbcb35c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | | | `-UnaryOperator 0x13afbcb35b0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | | | |   `-ArraySubscriptExpr 0x13afbcb3590 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | | | |     |-CallExpr 0x13afbcb3548 <col:18, col:29> 'FILE *'
|   |   | | | |     | `-ImplicitCastExpr 0x13afbcb3530 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | | | |     |   `-DeclRefExpr 0x13afbcb3510 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | | | |     `-IntegerLiteral 0x13afbcb3568 <col:31> 'int' 2
|   |   | | | `-ImplicitCastExpr 0x13afbcb36b8 <.//openssl//file_jk/after\test\ssltest_old.c:1065:21> 'const char *' <NoOp>
|   |   | | |   `-ImplicitCastExpr 0x13afbcb36a0 <col:21> 'char *' <ArrayToPointerDecay>
|   |   | | |     `-StringLiteral 0x13afbcb35e8 <col:21> 'char [61]' lvalue "not compiled with FIPS support, so exiting without running.\n"
|   |   | | `-CallExpr 0x13afbcb3820 <line:1066:13, col:19> 'int'
|   |   | |   |-ImplicitCastExpr 0x13afbcb3808 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x13afbcb37c0 <col:13> 'int ()' Function 0x13afbcb36f8 'EXIT' 'int ()'
|   |   | |   `-IntegerLiteral 0x13afbcb37e0 <col:18> 'int' 0
|   |   | `-IfStmt 0x13afbcb8538 <line:1068:16, line:1319:9> has_else
|   |   |   |-BinaryOperator 0x13afbcb3a00 <line:1068:20, col:53> 'int' '=='
|   |   |   | |-CallExpr 0x13afbcb3948 <col:20, col:48> 'int'
|   |   |   | | |-ImplicitCastExpr 0x13afbcb3930 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |   | | | `-DeclRefExpr 0x13afbcb3868 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |   | | |-ImplicitCastExpr 0x13afbcb3990 <col:27, col:28> 'const char *' <NoOp>
|   |   |   | | | `-ImplicitCastExpr 0x13afbcb3978 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |   | | |   `-UnaryOperator 0x13afbcb38c0 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |   | | |     `-ImplicitCastExpr 0x13afbcb38a8 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |   | | |       `-DeclRefExpr 0x13afbcb3888 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |   | | `-ImplicitCastExpr 0x13afbcb39c0 <col:34> 'const char *' <NoOp>
|   |   |   | |   `-ImplicitCastExpr 0x13afbcb39a8 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |   | |     `-StringLiteral 0x13afbcb38d8 <col:34> 'char [13]' lvalue "-server_auth"
|   |   |   | `-IntegerLiteral 0x13afbcb39d8 <col:53> 'int' 0
|   |   |   |-BinaryOperator 0x13afbcb3a80 <line:1069:13, col:27> 'int' '='
|   |   |   | |-DeclRefExpr 0x13afbcb3a20 <col:13> 'int' lvalue Var 0x13afbc99e40 'server_auth' 'int'
|   |   |   | `-IntegerLiteral 0x13afbcb3a58 <col:27> 'int' 1
|   |   |   `-IfStmt 0x13afbcb8510 <line:1070:14, line:1319:9> has_else
|   |   |     |-BinaryOperator 0x13afbcb3c38 <line:1070:18, col:51> 'int' '=='
|   |   |     | |-CallExpr 0x13afbcb3b80 <col:18, col:46> 'int'
|   |   |     | | |-ImplicitCastExpr 0x13afbcb3b68 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |     | | | `-DeclRefExpr 0x13afbcb3aa0 <col:18> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |     | | |-ImplicitCastExpr 0x13afbcb3bc8 <col:25, col:26> 'const char *' <NoOp>
|   |   |     | | | `-ImplicitCastExpr 0x13afbcb3bb0 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |     | | |   `-UnaryOperator 0x13afbcb3af8 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |     | | |     `-ImplicitCastExpr 0x13afbcb3ae0 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |     | | |       `-DeclRefExpr 0x13afbcb3ac0 <col:26> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |     | | `-ImplicitCastExpr 0x13afbcb3bf8 <col:32> 'const char *' <NoOp>
|   |   |     | |   `-ImplicitCastExpr 0x13afbcb3be0 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |     | |     `-StringLiteral 0x13afbcb3b10 <col:32> 'char [13]' lvalue "-client_auth"
|   |   |     | `-IntegerLiteral 0x13afbcb3c10 <col:51> 'int' 0
|   |   |     |-BinaryOperator 0x13afbcb3cb8 <line:1071:13, col:27> 'int' '='
|   |   |     | |-DeclRefExpr 0x13afbcb3c58 <col:13> 'int' lvalue Var 0x13afbc99d80 'client_auth' 'int'
|   |   |     | `-IntegerLiteral 0x13afbcb3c90 <col:27> 'int' 1
|   |   |     `-IfStmt 0x13afbcb84e8 <line:1072:14, line:1319:9> has_else
|   |   |       |-BinaryOperator 0x13afbcb3e68 <line:1072:18, col:41> 'int' '=='
|   |   |       | |-CallExpr 0x13afbcb3db0 <col:18, col:36> 'int'
|   |   |       | | |-ImplicitCastExpr 0x13afbcb3d98 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |       | | | `-DeclRefExpr 0x13afbcb3cd8 <col:18> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |       | | |-ImplicitCastExpr 0x13afbcb3df8 <col:25, col:26> 'const char *' <NoOp>
|   |   |       | | | `-ImplicitCastExpr 0x13afbcb3de0 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |       | | |   `-UnaryOperator 0x13afbcb3d30 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |       | | |     `-ImplicitCastExpr 0x13afbcb3d18 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |       | | |       `-DeclRefExpr 0x13afbcb3cf8 <col:26> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |       | | `-ImplicitCastExpr 0x13afbcb3e28 <col:32> 'const char *' <NoOp>
|   |   |       | |   `-ImplicitCastExpr 0x13afbcb3e10 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |       | |     `-StringLiteral 0x13afbcb3d48 <col:32> 'char [3]' lvalue "-v"
|   |   |       | `-IntegerLiteral 0x13afbcb3e40 <col:41> 'int' 0
|   |   |       |-BinaryOperator 0x13afbcb3ed0 <line:1073:13, col:23> 'int' '='
|   |   |       | |-DeclRefExpr 0x13afbcb3e88 <col:13> 'int' lvalue Var 0x13afbca49b0 'verbose' 'int'
|   |   |       | `-IntegerLiteral 0x13afbcb3ea8 <col:23> 'int' 1
|   |   |       `-IfStmt 0x13afbcb84c0 <line:1074:14, line:1319:9> has_else
|   |   |         |-BinaryOperator 0x13afbcb4080 <line:1074:18, col:41> 'int' '=='
|   |   |         | |-CallExpr 0x13afbcb3fc8 <col:18, col:36> 'int'
|   |   |         | | |-ImplicitCastExpr 0x13afbcb3fb0 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |         | | | `-DeclRefExpr 0x13afbcb3ef0 <col:18> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |         | | |-ImplicitCastExpr 0x13afbcb4010 <col:25, col:26> 'const char *' <NoOp>
|   |   |         | | | `-ImplicitCastExpr 0x13afbcb3ff8 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |         | | |   `-UnaryOperator 0x13afbcb3f48 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |         | | |     `-ImplicitCastExpr 0x13afbcb3f30 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |         | | |       `-DeclRefExpr 0x13afbcb3f10 <col:26> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |         | | `-ImplicitCastExpr 0x13afbcb4040 <col:32> 'const char *' <NoOp>
|   |   |         | |   `-ImplicitCastExpr 0x13afbcb4028 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |         | |     `-StringLiteral 0x13afbcb3f60 <col:32> 'char [3]' lvalue "-d"
|   |   |         | `-IntegerLiteral 0x13afbcb4058 <col:41> 'int' 0
|   |   |         |-BinaryOperator 0x13afbcb40e8 <line:1075:13, col:21> 'int' '='
|   |   |         | |-DeclRefExpr 0x13afbcb40a0 <col:13> 'int' lvalue Var 0x13afbca4a70 'debug' 'int'
|   |   |         | `-IntegerLiteral 0x13afbcb40c0 <col:21> 'int' 1
|   |   |         `-IfStmt 0x13afbcb8498 <line:1076:14, line:1319:9> has_else
|   |   |           |-BinaryOperator 0x13afbcb4298 <line:1076:18, col:45> 'int' '=='
|   |   |           | |-CallExpr 0x13afbcb41e0 <col:18, col:40> 'int'
|   |   |           | | |-ImplicitCastExpr 0x13afbcb41c8 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |           | | | `-DeclRefExpr 0x13afbcb4108 <col:18> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |           | | |-ImplicitCastExpr 0x13afbcb4228 <col:25, col:26> 'const char *' <NoOp>
|   |   |           | | | `-ImplicitCastExpr 0x13afbcb4210 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |           | | |   `-UnaryOperator 0x13afbcb4160 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |           | | |     `-ImplicitCastExpr 0x13afbcb4148 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |           | | |       `-DeclRefExpr 0x13afbcb4128 <col:26> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |           | | `-ImplicitCastExpr 0x13afbcb4258 <col:32> 'const char *' <NoOp>
|   |   |           | |   `-ImplicitCastExpr 0x13afbcb4240 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |           | |     `-StringLiteral 0x13afbcb4178 <col:32> 'char [7]' lvalue "-reuse"
|   |   |           | `-IntegerLiteral 0x13afbcb4270 <col:45> 'int' 0
|   |   |           |-BinaryOperator 0x13afbcb4318 <line:1077:13, col:21> 'int' '='
|   |   |           | |-DeclRefExpr 0x13afbcb42b8 <col:13> 'int' lvalue Var 0x13afbc9a470 'reuse' 'int'
|   |   |           | `-IntegerLiteral 0x13afbcb42f0 <col:21> 'int' 1
|   |   |           `-IfStmt 0x13afbcb8470 <line:1078:14, line:1319:9> has_else
|   |   |             |-BinaryOperator 0x13afbcb44c8 <line:1078:18, col:46> 'int' '=='
|   |   |             | |-CallExpr 0x13afbcb4410 <col:18, col:41> 'int'
|   |   |             | | |-ImplicitCastExpr 0x13afbcb43f8 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |             | | | `-DeclRefExpr 0x13afbcb4338 <col:18> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |             | | |-ImplicitCastExpr 0x13afbcb4458 <col:25, col:26> 'const char *' <NoOp>
|   |   |             | | | `-ImplicitCastExpr 0x13afbcb4440 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |             | | |   `-UnaryOperator 0x13afbcb4390 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |             | | |     `-ImplicitCastExpr 0x13afbcb4378 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |             | | |       `-DeclRefExpr 0x13afbcb4358 <col:26> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |             | | `-ImplicitCastExpr 0x13afbcb4488 <col:32> 'const char *' <NoOp>
|   |   |             | |   `-ImplicitCastExpr 0x13afbcb4470 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |             | |     `-StringLiteral 0x13afbcb43a8 <col:32> 'char [8]' lvalue "-dhe512"
|   |   |             | `-IntegerLiteral 0x13afbcb44a0 <col:46> 'int' 0
|   |   |             |-CompoundStmt 0x13afbcb4568 <col:49, line:1085:9>
|   |   |             | `-BinaryOperator 0x13afbcb4548 <line:1080:13, col:22> 'int' '='
|   |   |             |   |-DeclRefExpr 0x13afbcb44e8 <col:13> 'int' lvalue Var 0x13afbc9a7a0 'dhe512' 'int'
|   |   |             |   `-IntegerLiteral 0x13afbcb4520 <col:22> 'int' 1
|   |   |             `-IfStmt 0x13afbcb8448 <line:1085:16, line:1319:9> has_else
|   |   |               |-BinaryOperator 0x13afbcb4718 <line:1085:20, col:52> 'int' '=='
|   |   |               | |-CallExpr 0x13afbcb4660 <col:20, col:47> 'int'
|   |   |               | | |-ImplicitCastExpr 0x13afbcb4648 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |               | | | `-DeclRefExpr 0x13afbcb4580 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |               | | |-ImplicitCastExpr 0x13afbcb46a8 <col:27, col:28> 'const char *' <NoOp>
|   |   |               | | | `-ImplicitCastExpr 0x13afbcb4690 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |               | | |   `-UnaryOperator 0x13afbcb45d8 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |               | | |     `-ImplicitCastExpr 0x13afbcb45c0 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |               | | |       `-DeclRefExpr 0x13afbcb45a0 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |               | | `-ImplicitCastExpr 0x13afbcb46d8 <col:34> 'const char *' <NoOp>
|   |   |               | |   `-ImplicitCastExpr 0x13afbcb46c0 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |               | |     `-StringLiteral 0x13afbcb45f0 <col:34> 'char [12]' lvalue "-dhe1024dsa"
|   |   |               | `-IntegerLiteral 0x13afbcb46f0 <col:52> 'int' 0
|   |   |               |-CompoundStmt 0x13afbcb47b8 <col:55, line:1092:9>
|   |   |               | `-BinaryOperator 0x13afbcb4798 <line:1087:13, col:26> 'int' '='
|   |   |               |   |-DeclRefExpr 0x13afbcb4738 <col:13> 'int' lvalue Var 0x13afbc9a848 'dhe1024dsa' 'int'
|   |   |               |   `-IntegerLiteral 0x13afbcb4770 <col:26> 'int' 1
|   |   |               `-IfStmt 0x13afbcb8420 <line:1092:16, line:1319:9> has_else
|   |   |                 |-BinaryOperator 0x13afbcb4960 <line:1092:20, col:48> 'int' '=='
|   |   |                 | |-CallExpr 0x13afbcb48a8 <col:20, col:43> 'int'
|   |   |                 | | |-ImplicitCastExpr 0x13afbcb4890 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                 | | | `-DeclRefExpr 0x13afbcb47d0 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                 | | |-ImplicitCastExpr 0x13afbcb48f0 <col:27, col:28> 'const char *' <NoOp>
|   |   |                 | | | `-ImplicitCastExpr 0x13afbcb48d8 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                 | | |   `-UnaryOperator 0x13afbcb4828 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                 | | |     `-ImplicitCastExpr 0x13afbcb4810 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                 | | |       `-DeclRefExpr 0x13afbcb47f0 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                 | | `-ImplicitCastExpr 0x13afbcb4920 <col:34> 'const char *' <NoOp>
|   |   |                 | |   `-ImplicitCastExpr 0x13afbcb4908 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                 | |     `-StringLiteral 0x13afbcb4840 <col:34> 'char [8]' lvalue "-no_dhe"
|   |   |                 | `-IntegerLiteral 0x13afbcb4938 <col:48> 'int' 0
|   |   |                 |-BinaryOperator 0x13afbcb49e0 <line:1093:13, col:22> 'int' '='
|   |   |                 | |-DeclRefExpr 0x13afbcb4980 <col:13> 'int' lvalue Var 0x13afbc9ae20 'no_dhe' 'int'
|   |   |                 | `-IntegerLiteral 0x13afbcb49b8 <col:22> 'int' 1
|   |   |                 `-IfStmt 0x13afbcb83f8 <line:1094:14, line:1319:9> has_else
|   |   |                   |-BinaryOperator 0x13afbcb4bd0 <line:1094:18, col:48> 'int' '=='
|   |   |                   | |-CallExpr 0x13afbcb4b18 <col:18, col:43> 'int'
|   |   |                   | | |-ImplicitCastExpr 0x13afbcb4b00 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                   | | | `-DeclRefExpr 0x13afbcb4a00 <col:18> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                   | | |-ImplicitCastExpr 0x13afbcb4b60 <col:25, col:26> 'const char *' <NoOp>
|   |   |                   | | | `-ImplicitCastExpr 0x13afbcb4b48 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |                   | | |   `-UnaryOperator 0x13afbcb4a58 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |                   | | |     `-ImplicitCastExpr 0x13afbcb4a40 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |                   | | |       `-DeclRefExpr 0x13afbcb4a20 <col:26> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                   | | `-ImplicitCastExpr 0x13afbcb4b90 <col:32> 'const char *' <NoOp>
|   |   |                   | |   `-ImplicitCastExpr 0x13afbcb4b78 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |                   | |     `-StringLiteral 0x13afbcb4aa8 <col:32> 'char [10]' lvalue "-no_ecdhe"
|   |   |                   | `-IntegerLiteral 0x13afbcb4ba8 <col:48> 'int' 0
|   |   |                   |-NullStmt 0x13afbcb4bf0 <line:1095:27>
|   |   |                   `-IfStmt 0x13afbcb83d0 <line:1096:14, line:1319:9> has_else
|   |   |                     |-BinaryOperator 0x13afbcb4d88 <line:1096:18, col:43> 'int' '=='
|   |   |                     | |-CallExpr 0x13afbcb4cd0 <col:18, col:38> 'int'
|   |   |                     | | |-ImplicitCastExpr 0x13afbcb4cb8 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                     | | | `-DeclRefExpr 0x13afbcb4bf8 <col:18> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                     | | |-ImplicitCastExpr 0x13afbcb4d18 <col:25, col:26> 'const char *' <NoOp>
|   |   |                     | | | `-ImplicitCastExpr 0x13afbcb4d00 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |                     | | |   `-UnaryOperator 0x13afbcb4c50 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |                     | | |     `-ImplicitCastExpr 0x13afbcb4c38 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |                     | | |       `-DeclRefExpr 0x13afbcb4c18 <col:26> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                     | | `-ImplicitCastExpr 0x13afbcb4d48 <col:32> 'const char *' <NoOp>
|   |   |                     | |   `-ImplicitCastExpr 0x13afbcb4d30 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |                     | |     `-StringLiteral 0x13afbcb4c68 <col:32> 'char [5]' lvalue "-psk"
|   |   |                     | `-IntegerLiteral 0x13afbcb4d60 <col:43> 'int' 0
|   |   |                     |-CompoundStmt 0x13afbca9280 <col:46, line:1108:9>
|   |   |                     | |-IfStmt 0x13afbcb4e90 <line:1097:13, line:1098:22>
|   |   |                     | | |-BinaryOperator 0x13afbcb4e08 <line:1097:17, col:26> 'int' '<'
|   |   |                     | | | |-UnaryOperator 0x13afbcb4dc8 <col:17, col:19> 'int' prefix '--'
|   |   |                     | | | | `-DeclRefExpr 0x13afbcb4da8 <col:19> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |   |                     | | | `-IntegerLiteral 0x13afbcb4de0 <col:26> 'int' 1
|   |   |                     | | `-GotoStmt 0x13afbcb4e78 <line:1098:17, col:22> 'bad' 0x13afbcb4e28
|   |   |                     | |-BinaryOperator 0x13afbcb4f50 <line:1099:13, col:31> 'char *' '='
|   |   |                     | | |-DeclRefExpr 0x13afbcb4ea8 <col:13> 'char *' lvalue Var 0x13afbd7e498 'psk_key' 'char *'
|   |   |                     | | `-ImplicitCastExpr 0x13afbcb4f38 <col:23, col:31> 'char *' <LValueToRValue>
|   |   |                     | |   `-UnaryOperator 0x13afbcb4f20 <col:23, col:31> 'char *' lvalue prefix '*' cannot overflow
|   |   |                     | |     `-ParenExpr 0x13afbcb4f00 <col:24, col:31> 'char **':'char **'
|   |   |                     | |       `-UnaryOperator 0x13afbcb4ee8 <col:25, col:27> 'char **':'char **' prefix '++'
|   |   |                     | |         `-DeclRefExpr 0x13afbcb4ec8 <col:27> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                     | `-IfStmt 0x13afbca9268 <line:1101:13, line:1104:13>
|   |   |                     |   |-BinaryOperator 0x13afbca9178 <line:1101:17, col:76> 'int' '!='
|   |   |                     |   | |-CallExpr 0x13afbcb5050 <col:17, col:57> 'unsigned long long'
|   |   |                     |   | | |-ImplicitCastExpr 0x13afbcb5038 <col:17> 'unsigned long long (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                     |   | | | `-DeclRefExpr 0x13afbcb4f70 <col:17> 'unsigned long long (const char *, const char *)' Function 0x13afbbf28c0 'strspn' 'unsigned long long (const char *, const char *)'
|   |   |                     |   | | |-ImplicitCastExpr 0x13afbcb5098 <col:24> 'const char *' <NoOp>
|   |   |                     |   | | | `-ImplicitCastExpr 0x13afbcb5080 <col:24> 'char *' <LValueToRValue>
|   |   |                     |   | | |   `-DeclRefExpr 0x13afbcb4f90 <col:24> 'char *' lvalue Var 0x13afbd7e498 'psk_key' 'char *'
|   |   |                     |   | | `-ImplicitCastExpr 0x13afbcb50c8 <col:33> 'const char *' <NoOp>
|   |   |                     |   | |   `-ImplicitCastExpr 0x13afbcb50b0 <col:33> 'char *' <ArrayToPointerDecay>
|   |   |                     |   | |     `-StringLiteral 0x13afbcb4fb0 <col:33> 'char [23]' lvalue "abcdefABCDEF1234567890"
|   |   |                     |   | `-CallExpr 0x13afbca9120 <col:62, col:76> 'unsigned long long'
|   |   |                     |   |   |-ImplicitCastExpr 0x13afbcb5138 <col:62> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   |                     |   |   | `-DeclRefExpr 0x13afbcb50e0 <col:62> 'unsigned long long (const char *)' Function 0x13afbd2d960 'strlen' 'unsigned long long (const char *)'
|   |   |                     |   |   `-ImplicitCastExpr 0x13afbca9160 <col:69> 'const char *' <NoOp>
|   |   |                     |   |     `-ImplicitCastExpr 0x13afbca9148 <col:69> 'char *' <LValueToRValue>
|   |   |                     |   |       `-DeclRefExpr 0x13afbcb5100 <col:69> 'char *' lvalue Var 0x13afbd7e498 'psk_key' 'char *'
|   |   |                     |   `-CompoundStmt 0x13afbca9250 <col:79, line:1104:13>
|   |   |                     |     `-GotoStmt 0x13afbca9238 <line:1103:17, col:22> 'bad' 0x13afbcb4e28
|   |   |                     `-IfStmt 0x13afbcb83a8 <line:1110:14, line:1319:9> has_else
|   |   |                       |-BinaryOperator 0x13afbca9478 <line:1110:18, col:47> 'int' '=='
|   |   |                       | |-CallExpr 0x13afbca93c0 <col:18, col:42> 'int'
|   |   |                       | | |-ImplicitCastExpr 0x13afbca93a8 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                       | | | `-DeclRefExpr 0x13afbca92a8 <col:18> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                       | | |-ImplicitCastExpr 0x13afbca9408 <col:25, col:26> 'const char *' <NoOp>
|   |   |                       | | | `-ImplicitCastExpr 0x13afbca93f0 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |                       | | |   `-UnaryOperator 0x13afbca9300 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |                       | | |     `-ImplicitCastExpr 0x13afbca92e8 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |                       | | |       `-DeclRefExpr 0x13afbca92c8 <col:26> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                       | | `-ImplicitCastExpr 0x13afbca9438 <col:32> 'const char *' <NoOp>
|   |   |                       | |   `-ImplicitCastExpr 0x13afbca9420 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |                       | |     `-StringLiteral 0x13afbca9358 <col:32> 'char [9]' lvalue "-srpuser"
|   |   |                       | `-IntegerLiteral 0x13afbca9450 <col:47> 'int' 0
|   |   |                       |-CompoundStmt 0x13afbca9718 <col:50, line:1116:9>
|   |   |                       | |-IfStmt 0x13afbca9530 <line:1111:13, line:1112:22>
|   |   |                       | | |-BinaryOperator 0x13afbca94f8 <line:1111:17, col:26> 'int' '<'
|   |   |                       | | | |-UnaryOperator 0x13afbca94b8 <col:17, col:19> 'int' prefix '--'
|   |   |                       | | | | `-DeclRefExpr 0x13afbca9498 <col:19> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |   |                       | | | `-IntegerLiteral 0x13afbca94d0 <col:26> 'int' 1
|   |   |                       | | `-GotoStmt 0x13afbca9518 <line:1112:17, col:22> 'bad' 0x13afbcb4e28
|   |   |                       | `-BinaryOperator 0x13afbca96c0 <line:1113:13, line:1114:25> 'char *' '='
|   |   |                       |   |-MemberExpr 0x13afbca9580 <line:1113:13, col:28> 'char *' lvalue .expected_user 0x13afbc91288
|   |   |                       |   | `-DeclRefExpr 0x13afbca9548 <col:13> 'SRP_SERVER_ARG':'struct srp_server_arg_st' lvalue Var 0x13afbc9ab98 'srp_server_arg' 'SRP_SERVER_ARG':'struct srp_server_arg_st'
|   |   |                       |   `-BinaryOperator 0x13afbca96a0 <col:44, line:1114:25> 'char *' '='
|   |   |                       |     |-MemberExpr 0x13afbca95e8 <line:1113:44, col:59> 'char *' lvalue .srplogin 0x13afbd7ef08
|   |   |                       |     | `-DeclRefExpr 0x13afbca95b0 <col:44> 'SRP_CLIENT_ARG':'struct srp_client_arg_st' lvalue Var 0x13afbc9a918 'srp_client_arg' 'SRP_CLIENT_ARG':'struct srp_client_arg_st'
|   |   |                       |     `-ImplicitCastExpr 0x13afbca9688 <line:1114:17, col:25> 'char *' <LValueToRValue>
|   |   |                       |       `-UnaryOperator 0x13afbca9670 <col:17, col:25> 'char *' lvalue prefix '*' cannot overflow
|   |   |                       |         `-ParenExpr 0x13afbca9650 <col:18, col:25> 'char **':'char **'
|   |   |                       |           `-UnaryOperator 0x13afbca9638 <col:19, col:21> 'char **':'char **' prefix '++'
|   |   |                       |             `-DeclRefExpr 0x13afbca9618 <col:21> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                       `-IfStmt 0x13afbcb8380 <line:1116:16, line:1319:9> has_else
|   |   |                         |-BinaryOperator 0x13afbca98c8 <line:1116:20, col:49> 'int' '=='
|   |   |                         | |-CallExpr 0x13afbca9810 <col:20, col:44> 'int'
|   |   |                         | | |-ImplicitCastExpr 0x13afbca97f8 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                         | | | `-DeclRefExpr 0x13afbca9738 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                         | | |-ImplicitCastExpr 0x13afbca9858 <col:27, col:28> 'const char *' <NoOp>
|   |   |                         | | | `-ImplicitCastExpr 0x13afbca9840 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                         | | |   `-UnaryOperator 0x13afbca9790 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                         | | |     `-ImplicitCastExpr 0x13afbca9778 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                         | | |       `-DeclRefExpr 0x13afbca9758 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                         | | `-ImplicitCastExpr 0x13afbca9888 <col:34> 'const char *' <NoOp>
|   |   |                         | |   `-ImplicitCastExpr 0x13afbca9870 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                         | |     `-StringLiteral 0x13afbca97a8 <col:34> 'char [9]' lvalue "-srppass"
|   |   |                         | `-IntegerLiteral 0x13afbca98a0 <col:49> 'int' 0
|   |   |                         |-CompoundStmt 0x13afbca9b20 <col:52, line:1121:9>
|   |   |                         | |-IfStmt 0x13afbca9980 <line:1117:13, line:1118:22>
|   |   |                         | | |-BinaryOperator 0x13afbca9948 <line:1117:17, col:26> 'int' '<'
|   |   |                         | | | |-UnaryOperator 0x13afbca9908 <col:17, col:19> 'int' prefix '--'
|   |   |                         | | | | `-DeclRefExpr 0x13afbca98e8 <col:19> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |   |                         | | | `-IntegerLiteral 0x13afbca9920 <col:26> 'int' 1
|   |   |                         | | `-GotoStmt 0x13afbca9968 <line:1118:17, col:22> 'bad' 0x13afbcb4e28
|   |   |                         | `-BinaryOperator 0x13afbca9ae0 <line:1119:13, col:70> 'char *' '='
|   |   |                         |   |-MemberExpr 0x13afbca99b8 <col:13, col:28> 'char *' lvalue .pass 0x13afbc912f8
|   |   |                         |   | `-DeclRefExpr 0x13afbca9998 <col:13> 'SRP_SERVER_ARG':'struct srp_server_arg_st' lvalue Var 0x13afbc9ab98 'srp_server_arg' 'SRP_SERVER_ARG':'struct srp_server_arg_st'
|   |   |                         |   `-BinaryOperator 0x13afbca9ac0 <col:35, col:70> 'char *' '='
|   |   |                         |     |-MemberExpr 0x13afbca9a08 <col:35, col:50> 'char *' lvalue .srppassin 0x13afbd7ee98
|   |   |                         |     | `-DeclRefExpr 0x13afbca99e8 <col:35> 'SRP_CLIENT_ARG':'struct srp_client_arg_st' lvalue Var 0x13afbc9a918 'srp_client_arg' 'SRP_CLIENT_ARG':'struct srp_client_arg_st'
|   |   |                         |     `-ImplicitCastExpr 0x13afbca9aa8 <col:62, col:70> 'char *' <LValueToRValue>
|   |   |                         |       `-UnaryOperator 0x13afbca9a90 <col:62, col:70> 'char *' lvalue prefix '*' cannot overflow
|   |   |                         |         `-ParenExpr 0x13afbca9a70 <col:63, col:70> 'char **':'char **'
|   |   |                         |           `-UnaryOperator 0x13afbca9a58 <col:64, col:66> 'char **':'char **' prefix '++'
|   |   |                         |             `-DeclRefExpr 0x13afbca9a38 <col:66> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                         `-IfStmt 0x13afbcb8358 <line:1123:14, line:1319:9> has_else
|   |   |                           |-BinaryOperator 0x13afbca9cd0 <line:1123:18, col:44> 'int' '=='
|   |   |                           | |-CallExpr 0x13afbca9c18 <col:18, col:39> 'int'
|   |   |                           | | |-ImplicitCastExpr 0x13afbca9c00 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                           | | | `-DeclRefExpr 0x13afbca9b40 <col:18> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                           | | |-ImplicitCastExpr 0x13afbca9c60 <col:25, col:26> 'const char *' <NoOp>
|   |   |                           | | | `-ImplicitCastExpr 0x13afbca9c48 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |                           | | |   `-UnaryOperator 0x13afbca9b98 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |                           | | |     `-ImplicitCastExpr 0x13afbca9b80 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |                           | | |       `-DeclRefExpr 0x13afbca9b60 <col:26> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                           | | `-ImplicitCastExpr 0x13afbca9c90 <col:32> 'const char *' <NoOp>
|   |   |                           | |   `-ImplicitCastExpr 0x13afbca9c78 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |                           | |     `-StringLiteral 0x13afbca9bb0 <col:32> 'char [6]' lvalue "-tls1"
|   |   |                           | `-IntegerLiteral 0x13afbca9ca8 <col:44> 'int' 0
|   |   |                           |-CompoundStmt 0x13afbca9d70 <col:47, line:1125:9>
|   |   |                           | `-BinaryOperator 0x13afbca9d50 <line:1124:13, col:20> 'int' '='
|   |   |                           |   |-DeclRefExpr 0x13afbca9cf0 <col:13> 'int' lvalue Var 0x13afbc99b38 'tls1' 'int'
|   |   |                           |   `-IntegerLiteral 0x13afbca9d28 <col:20> 'int' 1
|   |   |                           `-IfStmt 0x13afbcb8330 <line:1125:16, line:1319:9> has_else
|   |   |                             |-BinaryOperator 0x13afbca9f18 <line:1125:20, col:46> 'int' '=='
|   |   |                             | |-CallExpr 0x13afbca9e60 <col:20, col:41> 'int'
|   |   |                             | | |-ImplicitCastExpr 0x13afbca9e48 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                             | | | `-DeclRefExpr 0x13afbca9d88 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                             | | |-ImplicitCastExpr 0x13afbca9ea8 <col:27, col:28> 'const char *' <NoOp>
|   |   |                             | | | `-ImplicitCastExpr 0x13afbca9e90 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                             | | |   `-UnaryOperator 0x13afbca9de0 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                             | | |     `-ImplicitCastExpr 0x13afbca9dc8 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                             | | |       `-DeclRefExpr 0x13afbca9da8 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                             | | `-ImplicitCastExpr 0x13afbca9ed8 <col:34> 'const char *' <NoOp>
|   |   |                             | |   `-ImplicitCastExpr 0x13afbca9ec0 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                             | |     `-StringLiteral 0x13afbca9df8 <col:34> 'char [6]' lvalue "-ssl3"
|   |   |                             | `-IntegerLiteral 0x13afbca9ef0 <col:46> 'int' 0
|   |   |                             |-CompoundStmt 0x13afbca9fb8 <col:49, line:1127:9>
|   |   |                             | `-BinaryOperator 0x13afbca9f98 <line:1126:13, col:20> 'int' '='
|   |   |                             |   |-DeclRefExpr 0x13afbca9f38 <col:13> 'int' lvalue Var 0x13afbc99be0 'ssl3' 'int'
|   |   |                             |   `-IntegerLiteral 0x13afbca9f70 <col:20> 'int' 1
|   |   |                             `-IfStmt 0x13afbcb8308 <line:1127:16, line:1319:9> has_else
|   |   |                               |-BinaryOperator 0x13afbcaa160 <line:1127:20, col:47> 'int' '=='
|   |   |                               | |-CallExpr 0x13afbcaa0a8 <col:20, col:42> 'int'
|   |   |                               | | |-ImplicitCastExpr 0x13afbcaa090 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                               | | | `-DeclRefExpr 0x13afbca9fd0 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                               | | |-ImplicitCastExpr 0x13afbcaa0f0 <col:27, col:28> 'const char *' <NoOp>
|   |   |                               | | | `-ImplicitCastExpr 0x13afbcaa0d8 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                               | | |   `-UnaryOperator 0x13afbcaa028 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                               | | |     `-ImplicitCastExpr 0x13afbcaa010 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                               | | |       `-DeclRefExpr 0x13afbca9ff0 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                               | | `-ImplicitCastExpr 0x13afbcaa120 <col:34> 'const char *' <NoOp>
|   |   |                               | |   `-ImplicitCastExpr 0x13afbcaa108 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                               | |     `-StringLiteral 0x13afbcaa040 <col:34> 'char [7]' lvalue "-dtls1"
|   |   |                               | `-IntegerLiteral 0x13afbcaa138 <col:47> 'int' 0
|   |   |                               |-CompoundStmt 0x13afbcaa200 <col:50, line:1129:9>
|   |   |                               | `-BinaryOperator 0x13afbcaa1e0 <line:1128:13, col:21> 'int' '='
|   |   |                               |   |-DeclRefExpr 0x13afbcaa180 <col:13> 'int' lvalue Var 0x13afbc99940 'dtls1' 'int'
|   |   |                               |   `-IntegerLiteral 0x13afbcaa1b8 <col:21> 'int' 1
|   |   |                               `-IfStmt 0x13afbcb82e0 <line:1129:16, line:1319:9> has_else
|   |   |                                 |-BinaryOperator 0x13afbcaa3a8 <line:1129:20, col:48> 'int' '=='
|   |   |                                 | |-CallExpr 0x13afbcaa2f0 <col:20, col:43> 'int'
|   |   |                                 | | |-ImplicitCastExpr 0x13afbcaa2d8 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                 | | | `-DeclRefExpr 0x13afbcaa218 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                 | | |-ImplicitCastExpr 0x13afbcaa338 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                 | | | `-ImplicitCastExpr 0x13afbcaa320 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                 | | |   `-UnaryOperator 0x13afbcaa270 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                 | | |     `-ImplicitCastExpr 0x13afbcaa258 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                 | | |       `-DeclRefExpr 0x13afbcaa238 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                 | | `-ImplicitCastExpr 0x13afbcaa368 <col:34> 'const char *' <NoOp>
|   |   |                                 | |   `-ImplicitCastExpr 0x13afbcaa350 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                 | |     `-StringLiteral 0x13afbcaa288 <col:34> 'char [8]' lvalue "-dtls12"
|   |   |                                 | `-IntegerLiteral 0x13afbcaa380 <col:48> 'int' 0
|   |   |                                 |-CompoundStmt 0x13afbcaa448 <col:51, line:1131:9>
|   |   |                                 | `-BinaryOperator 0x13afbcaa428 <line:1130:13, col:22> 'int' '='
|   |   |                                 |   |-DeclRefExpr 0x13afbcaa3c8 <col:13> 'int' lvalue Var 0x13afbc999e8 'dtls12' 'int'
|   |   |                                 |   `-IntegerLiteral 0x13afbcaa400 <col:22> 'int' 1
|   |   |                                 `-IfStmt 0x13afbcb82b8 <line:1131:16, line:1319:9> has_else
|   |   |                                   |-BinaryOperator 0x13afbcaa5f0 <line:1131:20, col:46> 'int' '=='
|   |   |                                   | |-CallExpr 0x13afbcaa538 <col:20, col:41> 'int'
|   |   |                                   | | |-ImplicitCastExpr 0x13afbcaa520 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                   | | | `-DeclRefExpr 0x13afbcaa460 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                   | | |-ImplicitCastExpr 0x13afbcaa580 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                   | | | `-ImplicitCastExpr 0x13afbcaa568 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                   | | |   `-UnaryOperator 0x13afbcaa4b8 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                   | | |     `-ImplicitCastExpr 0x13afbcaa4a0 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                   | | |       `-DeclRefExpr 0x13afbcaa480 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                   | | `-ImplicitCastExpr 0x13afbcaa5b0 <col:34> 'const char *' <NoOp>
|   |   |                                   | |   `-ImplicitCastExpr 0x13afbcaa598 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                   | |     `-StringLiteral 0x13afbcaa4d0 <col:34> 'char [6]' lvalue "-dtls"
|   |   |                                   | `-IntegerLiteral 0x13afbcaa5c8 <col:46> 'int' 0
|   |   |                                   |-CompoundStmt 0x13afbcaa690 <col:49, line:1133:9>
|   |   |                                   | `-BinaryOperator 0x13afbcaa670 <line:1132:13, col:20> 'int' '='
|   |   |                                   |   |-DeclRefExpr 0x13afbcaa610 <col:13> 'int' lvalue Var 0x13afbc99a90 'dtls' 'int'
|   |   |                                   |   `-IntegerLiteral 0x13afbcaa648 <col:20> 'int' 1
|   |   |                                   `-IfStmt 0x13afbcb8290 <line:1133:16, line:1319:9> has_else
|   |   |                                     |-BinaryOperator 0x13afbcaa8a8 <line:1133:20, col:49> 'int' '=='
|   |   |                                     | |-CallExpr 0x13afbcaa7d0 <col:20, col:44> 'int'
|   |   |                                     | | |-ImplicitCastExpr 0x13afbcaa7b8 <col:20> 'int (*)(const char *, const char *, unsigned long long)' <FunctionToPointerDecay>
|   |   |                                     | | | `-DeclRefExpr 0x13afbcaa6a8 <col:20> 'int (const char *, const char *, unsigned long long)' Function 0x13afbbee010 'strncmp' 'int (const char *, const char *, unsigned long long)'
|   |   |                                     | | |-ImplicitCastExpr 0x13afbcaa820 <col:28, col:29> 'const char *' <NoOp>
|   |   |                                     | | | `-ImplicitCastExpr 0x13afbcaa808 <col:28, col:29> 'char *' <LValueToRValue>
|   |   |                                     | | |   `-UnaryOperator 0x13afbcaa700 <col:28, col:29> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                     | | |     `-ImplicitCastExpr 0x13afbcaa6e8 <col:29> 'char **':'char **' <LValueToRValue>
|   |   |                                     | | |       `-DeclRefExpr 0x13afbcaa6c8 <col:29> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                     | | |-ImplicitCastExpr 0x13afbcaa850 <col:35> 'const char *' <NoOp>
|   |   |                                     | | | `-ImplicitCastExpr 0x13afbcaa838 <col:35> 'char *' <ArrayToPointerDecay>
|   |   |                                     | | |   `-StringLiteral 0x13afbcaa718 <col:35> 'char [5]' lvalue "-num"
|   |   |                                     | | `-ImplicitCastExpr 0x13afbcaa868 <col:43> 'unsigned long long' <IntegralCast>
|   |   |                                     | |   `-IntegerLiteral 0x13afbcaa738 <col:43> 'int' 4
|   |   |                                     | `-IntegerLiteral 0x13afbcaa880 <col:49> 'int' 0
|   |   |                                     |-CompoundStmt 0x13afbcaabf8 <col:52, line:1139:9>
|   |   |                                     | |-IfStmt 0x13afbcaa960 <line:1134:13, line:1135:22>
|   |   |                                     | | |-BinaryOperator 0x13afbcaa928 <line:1134:17, col:26> 'int' '<'
|   |   |                                     | | | |-UnaryOperator 0x13afbcaa8e8 <col:17, col:19> 'int' prefix '--'
|   |   |                                     | | | | `-DeclRefExpr 0x13afbcaa8c8 <col:19> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |   |                                     | | | `-IntegerLiteral 0x13afbcaa900 <col:26> 'int' 1
|   |   |                                     | | `-GotoStmt 0x13afbcaa948 <line:1135:17, col:22> 'bad' 0x13afbcb4e28
|   |   |                                     | |-BinaryOperator 0x13afbcaaad8 <line:1136:13, col:36> 'int' '='
|   |   |                                     | | |-DeclRefExpr 0x13afbcaa978 <col:13> 'int' lvalue Var 0x13afbc9a3c8 'number' 'int'
|   |   |                                     | | `-CallExpr 0x13afbcaaa80 <col:22, col:36> 'int'
|   |   |                                     | |   |-ImplicitCastExpr 0x13afbcaaa68 <col:22> 'int (*)(const char *) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |                                     | |   | `-DeclRefExpr 0x13afbcaa9b0 <col:22> 'int (const char *) __attribute__((cdecl))':'int (const char *)' Function 0x13afbc3e640 'atoi' 'int (const char *) __attribute__((cdecl))':'int (const char *)'
|   |   |                                     | |   `-ImplicitCastExpr 0x13afbcaaac0 <col:27, col:35> 'const char *' <NoOp>
|   |   |                                     | |     `-ImplicitCastExpr 0x13afbcaaaa8 <col:27, col:35> 'char *' <LValueToRValue>
|   |   |                                     | |       `-UnaryOperator 0x13afbcaaa28 <col:27, col:35> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                     | |         `-ParenExpr 0x13afbcaaa08 <col:28, col:35> 'char **':'char **'
|   |   |                                     | |           `-UnaryOperator 0x13afbcaa9f0 <col:29, col:31> 'char **':'char **' prefix '++'
|   |   |                                     | |             `-DeclRefExpr 0x13afbcaa9d0 <col:31> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                     | `-IfStmt 0x13afbcaabe0 <line:1137:13, line:1138:26>
|   |   |                                     |   |-BinaryOperator 0x13afbcaab58 <line:1137:17, col:27> 'int' '=='
|   |   |                                     |   | |-ImplicitCastExpr 0x13afbcaab40 <col:17> 'int' <LValueToRValue>
|   |   |                                     |   | | `-DeclRefExpr 0x13afbcaaaf8 <col:17> 'int' lvalue Var 0x13afbc9a3c8 'number' 'int'
|   |   |                                     |   | `-IntegerLiteral 0x13afbcaab18 <col:27> 'int' 0
|   |   |                                     |   `-BinaryOperator 0x13afbcaabc0 <line:1138:17, col:26> 'int' '='
|   |   |                                     |     |-DeclRefExpr 0x13afbcaab78 <col:17> 'int' lvalue Var 0x13afbc9a3c8 'number' 'int'
|   |   |                                     |     `-IntegerLiteral 0x13afbcaab98 <col:26> 'int' 1
|   |   |                                     `-IfStmt 0x13afbcb8268 <line:1139:16, line:1319:9> has_else
|   |   |                                       |-BinaryOperator 0x13afbcaadb0 <line:1139:20, col:47> 'int' '=='
|   |   |                                       | |-CallExpr 0x13afbcaacf8 <col:20, col:42> 'int'
|   |   |                                       | | |-ImplicitCastExpr 0x13afbcaace0 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                       | | | `-DeclRefExpr 0x13afbcaac20 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                       | | |-ImplicitCastExpr 0x13afbcaad40 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                       | | | `-ImplicitCastExpr 0x13afbcaad28 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                       | | |   `-UnaryOperator 0x13afbcaac78 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                       | | |     `-ImplicitCastExpr 0x13afbcaac60 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                       | | |       `-DeclRefExpr 0x13afbcaac40 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                       | | `-ImplicitCastExpr 0x13afbcaad70 <col:34> 'const char *' <NoOp>
|   |   |                                       | |   `-ImplicitCastExpr 0x13afbcaad58 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                       | |     `-StringLiteral 0x13afbcaac90 <col:34> 'char [7]' lvalue "-bytes"
|   |   |                                       | `-IntegerLiteral 0x13afbcaad88 <col:47> 'int' 0
|   |   |                                       |-CompoundStmt 0x13afbcb97f8 <col:50, line:1150:9>
|   |   |                                       | |-IfStmt 0x13afbcaae68 <line:1140:13, line:1141:22>
|   |   |                                       | | |-BinaryOperator 0x13afbcaae30 <line:1140:17, col:26> 'int' '<'
|   |   |                                       | | | |-UnaryOperator 0x13afbcaadf0 <col:17, col:19> 'int' prefix '--'
|   |   |                                       | | | | `-DeclRefExpr 0x13afbcaadd0 <col:19> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |   |                                       | | | `-IntegerLiteral 0x13afbcaae08 <col:26> 'int' 1
|   |   |                                       | | `-GotoStmt 0x13afbcaae50 <line:1141:17, col:22> 'bad' 0x13afbcb4e28
|   |   |                                       | |-BinaryOperator 0x13afbcab018 <line:1142:13, col:35> 'long' '='
|   |   |                                       | | |-DeclRefExpr 0x13afbcaae80 <col:13> 'long' lvalue Var 0x13afbc9a6e0 'bytes' 'long'
|   |   |                                       | | `-CallExpr 0x13afbcaafc0 <col:21, col:35> 'long'
|   |   |                                       | |   |-ImplicitCastExpr 0x13afbcaafa8 <col:21> 'long (*)(const char *) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |                                       | |   | `-DeclRefExpr 0x13afbcaaeb8 <col:21> 'long (const char *) __attribute__((cdecl))':'long (const char *)' Function 0x13afbc39b58 'atol' 'long (const char *) __attribute__((cdecl))':'long (const char *)'
|   |   |                                       | |   `-ImplicitCastExpr 0x13afbcab000 <col:26, col:34> 'const char *' <NoOp>
|   |   |                                       | |     `-ImplicitCastExpr 0x13afbcaafe8 <col:26, col:34> 'char *' <LValueToRValue>
|   |   |                                       | |       `-UnaryOperator 0x13afbcaaf30 <col:26, col:34> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                       | |         `-ParenExpr 0x13afbcaaf10 <col:27, col:34> 'char **':'char **'
|   |   |                                       | |           `-UnaryOperator 0x13afbcaaef8 <col:28, col:30> 'char **':'char **' prefix '++'
|   |   |                                       | |             `-DeclRefExpr 0x13afbcaaed8 <col:30> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                       | |-IfStmt 0x13afbcb91a0 <line:1143:13, line:1144:25>
|   |   |                                       | | |-BinaryOperator 0x13afbcab098 <line:1143:17, col:26> 'int' '=='
|   |   |                                       | | | |-ImplicitCastExpr 0x13afbcab080 <col:17> 'long' <LValueToRValue>
|   |   |                                       | | | | `-DeclRefExpr 0x13afbcab038 <col:17> 'long' lvalue Var 0x13afbc9a6e0 'bytes' 'long'
|   |   |                                       | | | `-IntegerLiteral 0x13afbcab058 <col:26> 'long' 0
|   |   |                                       | | `-BinaryOperator 0x13afbcab100 <line:1144:17, col:25> 'long' '='
|   |   |                                       | |   |-DeclRefExpr 0x13afbcab0b8 <col:17> 'long' lvalue Var 0x13afbc9a6e0 'bytes' 'long'
|   |   |                                       | |   `-IntegerLiteral 0x13afbcab0d8 <col:25> 'long' 1
|   |   |                                       | |-BinaryOperator 0x13afbcb9330 <line:1145:13, col:31> 'int' '='
|   |   |                                       | | |-DeclRefExpr 0x13afbcb91b8 <col:13> 'int' lvalue Var 0x13afbc99ee8 'i' 'int'
|   |   |                                       | | `-ImplicitCastExpr 0x13afbcb9318 <col:17, col:31> 'int' <IntegralCast>
|   |   |                                       | |   `-CallExpr 0x13afbcb92c0 <col:17, col:31> 'unsigned long long'
|   |   |                                       | |     |-ImplicitCastExpr 0x13afbcb92a8 <col:17> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   |                                       | |     | `-DeclRefExpr 0x13afbcb91f0 <col:17> 'unsigned long long (const char *)' Function 0x13afbd2d960 'strlen' 'unsigned long long (const char *)'
|   |   |                                       | |     `-ImplicitCastExpr 0x13afbcb9300 <col:24, col:30> 'const char *' <NoOp>
|   |   |                                       | |       `-ImplicitCastExpr 0x13afbcb92e8 <col:24, col:30> 'char *' <LValueToRValue>
|   |   |                                       | |         `-ArraySubscriptExpr 0x13afbcb9270 <col:24, col:30> 'char *' lvalue
|   |   |                                       | |           |-ImplicitCastExpr 0x13afbcb9258 <col:24> 'char **':'char **' <LValueToRValue>
|   |   |                                       | |           | `-DeclRefExpr 0x13afbcb9210 <col:24> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                       | |           `-IntegerLiteral 0x13afbcb9230 <col:29> 'int' 0
|   |   |                                       | |-IfStmt 0x13afbcb9568 <line:1146:13, line:1147:26>
|   |   |                                       | | |-BinaryOperator 0x13afbcb94d0 <line:1146:17, col:35> 'int' '=='
|   |   |                                       | | | |-ImplicitCastExpr 0x13afbcb94b8 <col:17, col:30> 'int' <IntegralCast>
|   |   |                                       | | | | `-ImplicitCastExpr 0x13afbcb94a0 <col:17, col:30> 'char' <LValueToRValue>
|   |   |                                       | | | |   `-ArraySubscriptExpr 0x13afbcb9468 <col:17, col:30> 'char' lvalue
|   |   |                                       | | | |     |-ImplicitCastExpr 0x13afbcb9450 <col:17, col:23> 'char *' <LValueToRValue>
|   |   |                                       | | | |     | `-ArraySubscriptExpr 0x13afbcb93b0 <col:17, col:23> 'char *' lvalue
|   |   |                                       | | | |     |   |-ImplicitCastExpr 0x13afbcb9398 <col:17> 'char **':'char **' <LValueToRValue>
|   |   |                                       | | | |     |   | `-DeclRefExpr 0x13afbcb9350 <col:17> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                       | | | |     |   `-IntegerLiteral 0x13afbcb9370 <col:22> 'int' 0
|   |   |                                       | | | |     `-BinaryOperator 0x13afbcb9430 <col:25, col:29> 'int' '-'
|   |   |                                       | | | |       |-ImplicitCastExpr 0x13afbcb9418 <col:25> 'int' <LValueToRValue>
|   |   |                                       | | | |       | `-DeclRefExpr 0x13afbcb93d0 <col:25> 'int' lvalue Var 0x13afbc99ee8 'i' 'int'
|   |   |                                       | | | |       `-IntegerLiteral 0x13afbcb93f0 <col:29> 'int' 1
|   |   |                                       | | | `-CharacterLiteral 0x13afbcb9488 <col:35> 'int' 107
|   |   |                                       | | `-CompoundAssignOperator 0x13afbcb9538 <line:1147:17, col:26> 'long' '*=' ComputeLHSTy='long' ComputeResultTy='long'
|   |   |                                       | |   |-DeclRefExpr 0x13afbcb94f0 <col:17> 'long' lvalue Var 0x13afbc9a6e0 'bytes' 'long'
|   |   |                                       | |   `-IntegerLiteral 0x13afbcb9510 <col:26> 'long' 1024
|   |   |                                       | `-IfStmt 0x13afbcb97e0 <line:1148:13, line:1149:34>
|   |   |                                       |   |-BinaryOperator 0x13afbcb9700 <line:1148:17, col:35> 'int' '=='
|   |   |                                       |   | |-ImplicitCastExpr 0x13afbcb96e8 <col:17, col:30> 'int' <IntegralCast>
|   |   |                                       |   | | `-ImplicitCastExpr 0x13afbcb96d0 <col:17, col:30> 'char' <LValueToRValue>
|   |   |                                       |   | |   `-ArraySubscriptExpr 0x13afbcb9698 <col:17, col:30> 'char' lvalue
|   |   |                                       |   | |     |-ImplicitCastExpr 0x13afbcb9680 <col:17, col:23> 'char *' <LValueToRValue>
|   |   |                                       |   | |     | `-ArraySubscriptExpr 0x13afbcb95e0 <col:17, col:23> 'char *' lvalue
|   |   |                                       |   | |     |   |-ImplicitCastExpr 0x13afbcb95c8 <col:17> 'char **':'char **' <LValueToRValue>
|   |   |                                       |   | |     |   | `-DeclRefExpr 0x13afbcb9580 <col:17> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                       |   | |     |   `-IntegerLiteral 0x13afbcb95a0 <col:22> 'int' 0
|   |   |                                       |   | |     `-BinaryOperator 0x13afbcb9660 <col:25, col:29> 'int' '-'
|   |   |                                       |   | |       |-ImplicitCastExpr 0x13afbcb9648 <col:25> 'int' <LValueToRValue>
|   |   |                                       |   | |       | `-DeclRefExpr 0x13afbcb9600 <col:25> 'int' lvalue Var 0x13afbc99ee8 'i' 'int'
|   |   |                                       |   | |       `-IntegerLiteral 0x13afbcb9620 <col:29> 'int' 1
|   |   |                                       |   | `-CharacterLiteral 0x13afbcb96b8 <col:35> 'int' 109
|   |   |                                       |   `-CompoundAssignOperator 0x13afbcb97b0 <line:1149:17, col:34> 'long' '*=' ComputeLHSTy='long' ComputeResultTy='long'
|   |   |                                       |     |-DeclRefExpr 0x13afbcb9720 <col:17> 'long' lvalue Var 0x13afbc9a6e0 'bytes' 'long'
|   |   |                                       |     `-BinaryOperator 0x13afbcb9790 <col:26, col:34> 'long' '*'
|   |   |                                       |       |-IntegerLiteral 0x13afbcb9740 <col:26> 'long' 1024
|   |   |                                       |       `-IntegerLiteral 0x13afbcb9768 <col:34> 'long' 1024
|   |   |                                       `-IfStmt 0x13afbcb8240 <line:1150:16, line:1319:9> has_else
|   |   |                                         |-BinaryOperator 0x13afbcb99c8 <line:1150:20, col:48> 'int' '=='
|   |   |                                         | |-CallExpr 0x13afbcb9910 <col:20, col:43> 'int'
|   |   |                                         | | |-ImplicitCastExpr 0x13afbcb98f8 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                         | | | `-DeclRefExpr 0x13afbcb9838 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                         | | |-ImplicitCastExpr 0x13afbcb9958 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                         | | | `-ImplicitCastExpr 0x13afbcb9940 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                         | | |   `-UnaryOperator 0x13afbcb9890 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                         | | |     `-ImplicitCastExpr 0x13afbcb9878 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                         | | |       `-DeclRefExpr 0x13afbcb9858 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                         | | `-ImplicitCastExpr 0x13afbcb9988 <col:34> 'const char *' <NoOp>
|   |   |                                         | |   `-ImplicitCastExpr 0x13afbcb9970 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                         | |     `-StringLiteral 0x13afbcb98a8 <col:34> 'char [8]' lvalue "-cipher"
|   |   |                                         | `-IntegerLiteral 0x13afbcb99a0 <col:48> 'int' 0
|   |   |                                         |-CompoundStmt 0x13afbcb9b60 <col:51, line:1154:9>
|   |   |                                         | |-IfStmt 0x13afbcb9a80 <line:1151:13, line:1152:22>
|   |   |                                         | | |-BinaryOperator 0x13afbcb9a48 <line:1151:17, col:26> 'int' '<'
|   |   |                                         | | | |-UnaryOperator 0x13afbcb9a08 <col:17, col:19> 'int' prefix '--'
|   |   |                                         | | | | `-DeclRefExpr 0x13afbcb99e8 <col:19> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |   |                                         | | | `-IntegerLiteral 0x13afbcb9a20 <col:26> 'int' 1
|   |   |                                         | | `-GotoStmt 0x13afbcb9a68 <line:1152:17, col:22> 'bad' 0x13afbcb4e28
|   |   |                                         | `-BinaryOperator 0x13afbcb9b40 <line:1153:13, col:30> 'char *' '='
|   |   |                                         |   |-DeclRefExpr 0x13afbcb9a98 <col:13> 'char *' lvalue Var 0x13afbca4878 'cipher' 'char *'
|   |   |                                         |   `-ImplicitCastExpr 0x13afbcb9b28 <col:22, col:30> 'char *' <LValueToRValue>
|   |   |                                         |     `-UnaryOperator 0x13afbcb9b10 <col:22, col:30> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                         |       `-ParenExpr 0x13afbcb9af0 <col:23, col:30> 'char **':'char **'
|   |   |                                         |         `-UnaryOperator 0x13afbcb9ad8 <col:24, col:26> 'char **':'char **' prefix '++'
|   |   |                                         |           `-DeclRefExpr 0x13afbcb9ab8 <col:26> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                         `-IfStmt 0x13afbcb8218 <line:1154:16, line:1319:9> has_else
|   |   |                                           |-BinaryOperator 0x13afbcb9d10 <line:1154:20, col:48> 'int' '=='
|   |   |                                           | |-CallExpr 0x13afbcb9c58 <col:20, col:43> 'int'
|   |   |                                           | | |-ImplicitCastExpr 0x13afbcb9c40 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                           | | | `-DeclRefExpr 0x13afbcb9b80 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                           | | |-ImplicitCastExpr 0x13afbcb9ca0 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                           | | | `-ImplicitCastExpr 0x13afbcb9c88 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                           | | |   `-UnaryOperator 0x13afbcb9bd8 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                           | | |     `-ImplicitCastExpr 0x13afbcb9bc0 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                           | | |       `-DeclRefExpr 0x13afbcb9ba0 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                           | | `-ImplicitCastExpr 0x13afbcb9cd0 <col:34> 'const char *' <NoOp>
|   |   |                                           | |   `-ImplicitCastExpr 0x13afbcb9cb8 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                           | |     `-StringLiteral 0x13afbcb9bf0 <col:34> 'char [8]' lvalue "-CApath"
|   |   |                                           | `-IntegerLiteral 0x13afbcb9ce8 <col:48> 'int' 0
|   |   |                                           |-CompoundStmt 0x13afbcb9f08 <col:51, line:1158:9>
|   |   |                                           | |-IfStmt 0x13afbcb9dc8 <line:1155:13, line:1156:22>
|   |   |                                           | | |-BinaryOperator 0x13afbcb9d90 <line:1155:17, col:26> 'int' '<'
|   |   |                                           | | | |-UnaryOperator 0x13afbcb9d50 <col:17, col:19> 'int' prefix '--'
|   |   |                                           | | | | `-DeclRefExpr 0x13afbcb9d30 <col:19> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |   |                                           | | | `-IntegerLiteral 0x13afbcb9d68 <col:26> 'int' 1
|   |   |                                           | | `-GotoStmt 0x13afbcb9db0 <line:1156:17, col:22> 'bad' 0x13afbcb4e28
|   |   |                                           | `-BinaryOperator 0x13afbcb9ee8 <line:1157:13, col:30> 'const char *' '='
|   |   |                                           |   |-DeclRefExpr 0x13afbcb9de0 <col:13> 'const char *' lvalue Var 0x13afbc991f0 'CApath' 'const char *'
|   |   |                                           |   `-ImplicitCastExpr 0x13afbcb9ed0 <col:22, col:30> 'const char *' <NoOp>
|   |   |                                           |     `-ImplicitCastExpr 0x13afbcb9eb8 <col:22, col:30> 'char *' <LValueToRValue>
|   |   |                                           |       `-UnaryOperator 0x13afbcb9ea0 <col:22, col:30> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                           |         `-ParenExpr 0x13afbcb9e80 <col:23, col:30> 'char **':'char **'
|   |   |                                           |           `-UnaryOperator 0x13afbcb9e68 <col:24, col:26> 'char **':'char **' prefix '++'
|   |   |                                           |             `-DeclRefExpr 0x13afbcb9e48 <col:26> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                           `-IfStmt 0x13afbcb81f0 <line:1158:16, line:1319:9> has_else
|   |   |                                             |-BinaryOperator 0x13afbcba0b8 <line:1158:20, col:48> 'int' '=='
|   |   |                                             | |-CallExpr 0x13afbcba000 <col:20, col:43> 'int'
|   |   |                                             | | |-ImplicitCastExpr 0x13afbcb9fe8 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                             | | | `-DeclRefExpr 0x13afbcb9f28 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                             | | |-ImplicitCastExpr 0x13afbcba048 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                             | | | `-ImplicitCastExpr 0x13afbcba030 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                             | | |   `-UnaryOperator 0x13afbcb9f80 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                             | | |     `-ImplicitCastExpr 0x13afbcb9f68 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                             | | |       `-DeclRefExpr 0x13afbcb9f48 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                             | | `-ImplicitCastExpr 0x13afbcba078 <col:34> 'const char *' <NoOp>
|   |   |                                             | |   `-ImplicitCastExpr 0x13afbcba060 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                             | |     `-StringLiteral 0x13afbcb9f98 <col:34> 'char [8]' lvalue "-CAfile"
|   |   |                                             | `-IntegerLiteral 0x13afbcba090 <col:48> 'int' 0
|   |   |                                             |-CompoundStmt 0x13afbcba280 <col:51, line:1162:9>
|   |   |                                             | |-IfStmt 0x13afbcba170 <line:1159:13, line:1160:22>
|   |   |                                             | | |-BinaryOperator 0x13afbcba138 <line:1159:17, col:26> 'int' '<'
|   |   |                                             | | | |-UnaryOperator 0x13afbcba0f8 <col:17, col:19> 'int' prefix '--'
|   |   |                                             | | | | `-DeclRefExpr 0x13afbcba0d8 <col:19> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |   |                                             | | | `-IntegerLiteral 0x13afbcba110 <col:26> 'int' 1
|   |   |                                             | | `-GotoStmt 0x13afbcba158 <line:1160:17, col:22> 'bad' 0x13afbcb4e28
|   |   |                                             | `-BinaryOperator 0x13afbcba260 <line:1161:13, col:30> 'const char *' '='
|   |   |                                             |   |-DeclRefExpr 0x13afbcba188 <col:13> 'const char *' lvalue Var 0x13afbc99310 'CAfile' 'const char *'
|   |   |                                             |   `-ImplicitCastExpr 0x13afbcba248 <col:22, col:30> 'const char *' <NoOp>
|   |   |                                             |     `-ImplicitCastExpr 0x13afbcba230 <col:22, col:30> 'char *' <LValueToRValue>
|   |   |                                             |       `-UnaryOperator 0x13afbcba218 <col:22, col:30> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                             |         `-ParenExpr 0x13afbcba1f8 <col:23, col:30> 'char **':'char **'
|   |   |                                             |           `-UnaryOperator 0x13afbcba1e0 <col:24, col:26> 'char **':'char **' prefix '++'
|   |   |                                             |             `-DeclRefExpr 0x13afbcba1c0 <col:26> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                             `-IfStmt 0x13afbcb81c8 <line:1162:16, line:1319:9> has_else
|   |   |                                               |-BinaryOperator 0x13afbcba438 <line:1162:20, col:50> 'int' '=='
|   |   |                                               | |-CallExpr 0x13afbcba380 <col:20, col:45> 'int'
|   |   |                                               | | |-ImplicitCastExpr 0x13afbcba368 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                               | | | `-DeclRefExpr 0x13afbcba2a0 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                               | | |-ImplicitCastExpr 0x13afbcba3c8 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                               | | | `-ImplicitCastExpr 0x13afbcba3b0 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                               | | |   `-UnaryOperator 0x13afbcba2f8 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                               | | |     `-ImplicitCastExpr 0x13afbcba2e0 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                               | | |       `-DeclRefExpr 0x13afbcba2c0 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                               | | `-ImplicitCastExpr 0x13afbcba3f8 <col:34> 'const char *' <NoOp>
|   |   |                                               | |   `-ImplicitCastExpr 0x13afbcba3e0 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                               | |     `-StringLiteral 0x13afbcba310 <col:34> 'char [10]' lvalue "-bio_pair"
|   |   |                                               | `-IntegerLiteral 0x13afbcba410 <col:50> 'int' 0
|   |   |                                               |-CompoundStmt 0x13afbcba4e8 <col:53, line:1164:9>
|   |   |                                               | `-BinaryOperator 0x13afbcba4c8 <line:1163:13, col:24> 'enum (anonymous enum at .//openssl//file_jk/after\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/after\test\ssltest_old.c:956:5)' '='
|   |   |                                               |   |-DeclRefExpr 0x13afbcba458 <col:13> 'enum (anonymous enum at .//openssl//file_jk/after\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/after\test\ssltest_old.c:956:5)' lvalue Var 0x13afbc99798 'bio_type' 'enum (anonymous enum at .//openssl//file_jk/after\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/after\test\ssltest_old.c:956:5)'
|   |   |                                               |   `-ImplicitCastExpr 0x13afbcba4b0 <col:24> 'enum (anonymous enum at .//openssl//file_jk/after\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/after\test\ssltest_old.c:956:5)' <IntegralCast>
|   |   |                                               |     `-DeclRefExpr 0x13afbcba490 <col:24> 'int' EnumConstant 0x13afbc99638 'BIO_PAIR' 'int'
|   |   |                                               `-IfStmt 0x13afbcb81a0 <line:1166:14, line:1319:9> has_else
|   |   |                                                 |-BinaryOperator 0x13afbcba690 <line:1166:18, col:44> 'int' '=='
|   |   |                                                 | |-CallExpr 0x13afbcba5d8 <col:18, col:39> 'int'
|   |   |                                                 | | |-ImplicitCastExpr 0x13afbcba5c0 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                 | | | `-DeclRefExpr 0x13afbcba500 <col:18> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                 | | |-ImplicitCastExpr 0x13afbcba620 <col:25, col:26> 'const char *' <NoOp>
|   |   |                                                 | | | `-ImplicitCastExpr 0x13afbcba608 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |                                                 | | |   `-UnaryOperator 0x13afbcba558 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                 | | |     `-ImplicitCastExpr 0x13afbcba540 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |                                                 | | |       `-DeclRefExpr 0x13afbcba520 <col:26> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                 | | `-ImplicitCastExpr 0x13afbcba650 <col:32> 'const char *' <NoOp>
|   |   |                                                 | |   `-ImplicitCastExpr 0x13afbcba638 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |                                                 | |     `-StringLiteral 0x13afbcba570 <col:32> 'char [6]' lvalue "-ipv4"
|   |   |                                                 | `-IntegerLiteral 0x13afbcba668 <col:44> 'int' 0
|   |   |                                                 |-CompoundStmt 0x13afbcba728 <col:47, line:1168:9>
|   |   |                                                 | `-BinaryOperator 0x13afbcba708 <line:1167:13, col:24> 'enum (anonymous enum at .//openssl//file_jk/after\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/after\test\ssltest_old.c:956:5)' '='
|   |   |                                                 |   |-DeclRefExpr 0x13afbcba6b0 <col:13> 'enum (anonymous enum at .//openssl//file_jk/after\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/after\test\ssltest_old.c:956:5)' lvalue Var 0x13afbc99798 'bio_type' 'enum (anonymous enum at .//openssl//file_jk/after\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/after\test\ssltest_old.c:956:5)'
|   |   |                                                 |   `-ImplicitCastExpr 0x13afbcba6f0 <col:24> 'enum (anonymous enum at .//openssl//file_jk/after\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/after\test\ssltest_old.c:956:5)' <IntegralCast>
|   |   |                                                 |     `-DeclRefExpr 0x13afbcba6d0 <col:24> 'int' EnumConstant 0x13afbc99690 'BIO_IPV4' 'int'
|   |   |                                                 `-IfStmt 0x13afbcb8178 <line:1168:16, line:1319:9> has_else
|   |   |                                                   |-BinaryOperator 0x13afbcba8d0 <line:1168:20, col:46> 'int' '=='
|   |   |                                                   | |-CallExpr 0x13afbcba818 <col:20, col:41> 'int'
|   |   |                                                   | | |-ImplicitCastExpr 0x13afbcba800 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                   | | | `-DeclRefExpr 0x13afbcba740 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                   | | |-ImplicitCastExpr 0x13afbcba860 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                   | | | `-ImplicitCastExpr 0x13afbcba848 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                   | | |   `-UnaryOperator 0x13afbcba798 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                   | | |     `-ImplicitCastExpr 0x13afbcba780 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                   | | |       `-DeclRefExpr 0x13afbcba760 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                   | | `-ImplicitCastExpr 0x13afbcba890 <col:34> 'const char *' <NoOp>
|   |   |                                                   | |   `-ImplicitCastExpr 0x13afbcba878 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                   | |     `-StringLiteral 0x13afbcba7b0 <col:34> 'char [6]' lvalue "-ipv6"
|   |   |                                                   | `-IntegerLiteral 0x13afbcba8a8 <col:46> 'int' 0
|   |   |                                                   |-CompoundStmt 0x13afbcba968 <col:49, line:1170:9>
|   |   |                                                   | `-BinaryOperator 0x13afbcba948 <line:1169:13, col:24> 'enum (anonymous enum at .//openssl//file_jk/after\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/after\test\ssltest_old.c:956:5)' '='
|   |   |                                                   |   |-DeclRefExpr 0x13afbcba8f0 <col:13> 'enum (anonymous enum at .//openssl//file_jk/after\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/after\test\ssltest_old.c:956:5)' lvalue Var 0x13afbc99798 'bio_type' 'enum (anonymous enum at .//openssl//file_jk/after\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/after\test\ssltest_old.c:956:5)'
|   |   |                                                   |   `-ImplicitCastExpr 0x13afbcba930 <col:24> 'enum (anonymous enum at .//openssl//file_jk/after\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/after\test\ssltest_old.c:956:5)' <IntegralCast>
|   |   |                                                   |     `-DeclRefExpr 0x13afbcba910 <col:24> 'int' EnumConstant 0x13afbc996e8 'BIO_IPV6' 'int'
|   |   |                                                   `-IfStmt 0x13afbcb8150 <line:1172:14, line:1319:9> has_else
|   |   |                                                     |-BinaryOperator 0x13afbcbab10 <line:1172:18, col:41> 'int' '=='
|   |   |                                                     | |-CallExpr 0x13afbcbaa58 <col:18, col:36> 'int'
|   |   |                                                     | | |-ImplicitCastExpr 0x13afbcbaa40 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                     | | | `-DeclRefExpr 0x13afbcba980 <col:18> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                     | | |-ImplicitCastExpr 0x13afbcbaaa0 <col:25, col:26> 'const char *' <NoOp>
|   |   |                                                     | | | `-ImplicitCastExpr 0x13afbcbaa88 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |                                                     | | |   `-UnaryOperator 0x13afbcba9d8 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                     | | |     `-ImplicitCastExpr 0x13afbcba9c0 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |                                                     | | |       `-DeclRefExpr 0x13afbcba9a0 <col:26> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                     | | `-ImplicitCastExpr 0x13afbcbaad0 <col:32> 'const char *' <NoOp>
|   |   |                                                     | |   `-ImplicitCastExpr 0x13afbcbaab8 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |                                                     | |     `-StringLiteral 0x13afbcba9f0 <col:32> 'char [3]' lvalue "-f"
|   |   |                                                     | `-IntegerLiteral 0x13afbcbaae8 <col:41> 'int' 0
|   |   |                                                     |-CompoundStmt 0x13afbcbabb0 <col:44, line:1174:9>
|   |   |                                                     | `-BinaryOperator 0x13afbcbab90 <line:1173:13, col:21> 'int' '='
|   |   |                                                     |   |-DeclRefExpr 0x13afbcbab30 <col:13> 'int' lvalue Var 0x13afbc99880 'force' 'int'
|   |   |                                                     |   `-IntegerLiteral 0x13afbcbab68 <col:21> 'int' 1
|   |   |                                                     `-IfStmt 0x13afbcb8128 <line:1174:16, line:1319:9> has_else
|   |   |                                                       |-BinaryOperator 0x13afbcbad58 <line:1174:20, col:46> 'int' '=='
|   |   |                                                       | |-CallExpr 0x13afbcbaca0 <col:20, col:41> 'int'
|   |   |                                                       | | |-ImplicitCastExpr 0x13afbcbac88 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                       | | | `-DeclRefExpr 0x13afbcbabc8 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                       | | |-ImplicitCastExpr 0x13afbcbace8 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                       | | | `-ImplicitCastExpr 0x13afbcbacd0 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                       | | |   `-UnaryOperator 0x13afbcbac20 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                       | | |     `-ImplicitCastExpr 0x13afbcbac08 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                       | | |       `-DeclRefExpr 0x13afbcbabe8 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                       | | `-ImplicitCastExpr 0x13afbcbad18 <col:34> 'const char *' <NoOp>
|   |   |                                                       | |   `-ImplicitCastExpr 0x13afbcbad00 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                       | |     `-StringLiteral 0x13afbcbac38 <col:34> 'char [6]' lvalue "-time"
|   |   |                                                       | `-IntegerLiteral 0x13afbcbad30 <col:46> 'int' 0
|   |   |                                                       |-CompoundStmt 0x13afbcbadf8 <col:49, line:1176:9>
|   |   |                                                       | `-BinaryOperator 0x13afbcbadd8 <line:1175:13, col:26> 'int' '='
|   |   |                                                       |   |-DeclRefExpr 0x13afbcbad78 <col:13> 'int' lvalue Var 0x13afbc9afa0 'print_time' 'int'
|   |   |                                                       |   `-IntegerLiteral 0x13afbcbadb0 <col:26> 'int' 1
|   |   |                                                       `-IfStmt 0x13afbcb8100 <line:1178:14, line:1319:9> has_else
|   |   |                                                         |-BinaryOperator 0x13afbcbafa0 <line:1178:18, col:44> 'int' '=='
|   |   |                                                         | |-CallExpr 0x13afbcbaee8 <col:18, col:39> 'int'
|   |   |                                                         | | |-ImplicitCastExpr 0x13afbcbaed0 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                         | | | `-DeclRefExpr 0x13afbcbae10 <col:18> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                         | | |-ImplicitCastExpr 0x13afbcbaf30 <col:25, col:26> 'const char *' <NoOp>
|   |   |                                                         | | | `-ImplicitCastExpr 0x13afbcbaf18 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |                                                         | | |   `-UnaryOperator 0x13afbcbae68 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                         | | |     `-ImplicitCastExpr 0x13afbcbae50 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |                                                         | | |       `-DeclRefExpr 0x13afbcbae30 <col:26> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                         | | `-ImplicitCastExpr 0x13afbcbaf60 <col:32> 'const char *' <NoOp>
|   |   |                                                         | |   `-ImplicitCastExpr 0x13afbcbaf48 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |                                                         | |     `-StringLiteral 0x13afbcbae80 <col:32> 'char [6]' lvalue "-noct"
|   |   |                                                         | `-IntegerLiteral 0x13afbcbaf78 <col:44> 'int' 0
|   |   |                                                         |-CompoundStmt 0x13afbcbb040 <col:47, line:1180:9>
|   |   |                                                         | `-BinaryOperator 0x13afbcbb020 <line:1179:13, col:29> 'int' '='
|   |   |                                                         |   |-DeclRefExpr 0x13afbcbafc0 <col:13> 'int' lvalue Var 0x13afbcad878 'ct_validation' 'int'
|   |   |                                                         |   `-IntegerLiteral 0x13afbcbaff8 <col:29> 'int' 0
|   |   |                                                         `-IfStmt 0x13afbcb80d8 <line:1181:14, line:1319:9> has_else
|   |   |                                                           |-BinaryOperator 0x13afbcb11b8 <line:1181:18, col:42> 'int' '=='
|   |   |                                                           | |-CallExpr 0x13afbcbb130 <col:18, col:37> 'int'
|   |   |                                                           | | |-ImplicitCastExpr 0x13afbcbb118 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                           | | | `-DeclRefExpr 0x13afbcbb058 <col:18> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                           | | |-ImplicitCastExpr 0x13afbcbb178 <col:25, col:26> 'const char *' <NoOp>
|   |   |                                                           | | | `-ImplicitCastExpr 0x13afbcbb160 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |                                                           | | |   `-UnaryOperator 0x13afbcbb0b0 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                           | | |     `-ImplicitCastExpr 0x13afbcbb098 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |                                                           | | |       `-DeclRefExpr 0x13afbcbb078 <col:26> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                           | | `-ImplicitCastExpr 0x13afbcb1178 <col:32> 'const char *' <NoOp>
|   |   |                                                           | |   `-ImplicitCastExpr 0x13afbcb1160 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |                                                           | |     `-StringLiteral 0x13afbcbb0c8 <col:32> 'char [4]' lvalue "-ct"
|   |   |                                                           | `-IntegerLiteral 0x13afbcb1190 <col:42> 'int' 0
|   |   |                                                           |-CompoundStmt 0x13afbcb1240 <col:45, line:1183:9>
|   |   |                                                           | `-BinaryOperator 0x13afbcb1220 <line:1182:13, col:29> 'int' '='
|   |   |                                                           |   |-DeclRefExpr 0x13afbcb11d8 <col:13> 'int' lvalue Var 0x13afbcad878 'ct_validation' 'int'
|   |   |                                                           |   `-IntegerLiteral 0x13afbcb11f8 <col:29> 'int' 1
|   |   |                                                           `-IfStmt 0x13afbcb80b0 <line:1186:14, line:1319:9> has_else
|   |   |                                                             |-BinaryOperator 0x13afbcb13e8 <line:1186:18, col:44> 'int' '=='
|   |   |                                                             | |-CallExpr 0x13afbcb1330 <col:18, col:39> 'int'
|   |   |                                                             | | |-ImplicitCastExpr 0x13afbcb1318 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                             | | | `-DeclRefExpr 0x13afbcb1258 <col:18> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                             | | |-ImplicitCastExpr 0x13afbcb1378 <col:25, col:26> 'const char *' <NoOp>
|   |   |                                                             | | | `-ImplicitCastExpr 0x13afbcb1360 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |                                                             | | |   `-UnaryOperator 0x13afbcb12b0 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                             | | |     `-ImplicitCastExpr 0x13afbcb1298 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |                                                             | | |       `-DeclRefExpr 0x13afbcb1278 <col:26> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                             | | `-ImplicitCastExpr 0x13afbcb13a8 <col:32> 'const char *' <NoOp>
|   |   |                                                             | |   `-ImplicitCastExpr 0x13afbcb1390 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |                                                             | |     `-StringLiteral 0x13afbcb12c8 <col:32> 'char [6]' lvalue "-zlib"
|   |   |                                                             | `-IntegerLiteral 0x13afbcb13c0 <col:44> 'int' 0
|   |   |                                                             |-CompoundStmt 0x13afbcb1488 <col:47, line:1188:9>
|   |   |                                                             | `-BinaryOperator 0x13afbcb1468 <line:1187:13, line:116:25> 'int' '='
|   |   |                                                             |   |-DeclRefExpr 0x13afbcb1408 <line:1187:13> 'int' lvalue Var 0x13afbcad368 'comp' 'int'
|   |   |                                                             |   `-IntegerLiteral 0x13afbcb1440 <line:116:25> 'int' 1
|   |   |                                                             `-IfStmt 0x13afbcb8088 <line:1190:14, line:1319:9> has_else
|   |   |                                                               |-BinaryOperator 0x13afbcb1638 <line:1190:18, col:50> 'int' '=='
|   |   |                                                               | |-CallExpr 0x13afbcb1580 <col:18, col:45> 'int'
|   |   |                                                               | | |-ImplicitCastExpr 0x13afbcb1568 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                               | | | `-DeclRefExpr 0x13afbcb14a0 <col:18> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                               | | |-ImplicitCastExpr 0x13afbcb15c8 <col:25, col:26> 'const char *' <NoOp>
|   |   |                                                               | | | `-ImplicitCastExpr 0x13afbcb15b0 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |                                                               | | |   `-UnaryOperator 0x13afbcb14f8 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                               | | |     `-ImplicitCastExpr 0x13afbcb14e0 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |                                                               | | |       `-DeclRefExpr 0x13afbcb14c0 <col:26> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                               | | `-ImplicitCastExpr 0x13afbcb15f8 <col:32> 'const char *' <NoOp>
|   |   |                                                               | |   `-ImplicitCastExpr 0x13afbcb15e0 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |                                                               | |     `-StringLiteral 0x13afbcb1510 <col:32> 'char [12]' lvalue "-app_verify"
|   |   |                                                               | `-IntegerLiteral 0x13afbcb1610 <col:50> 'int' 0
|   |   |                                                               |-CompoundStmt 0x13afbcb1760 <col:53, line:1192:9>
|   |   |                                                               | `-BinaryOperator 0x13afbcb16e8 <line:1191:13, col:41> 'int' '='
|   |   |                                                               |   |-MemberExpr 0x13afbcb1690 <col:13, col:28> 'int' lvalue .app_verify 0x13afbd7e068
|   |   |                                                               |   | `-DeclRefExpr 0x13afbcb1658 <col:13> 'struct app_verify_arg':'struct app_verify_arg' lvalue Var 0x13afbc99fd0 'app_verify_arg' 'struct app_verify_arg':'struct app_verify_arg'
|   |   |                                                               |   `-IntegerLiteral 0x13afbcb16c0 <col:41> 'int' 1
|   |   |                                                               `-IfStmt 0x13afbcb8060 <line:1194:16, line:1319:9> has_else
|   |   |                                                                 |-BinaryOperator 0x13afbcb1910 <line:1194:20, col:52> 'int' '=='
|   |   |                                                                 | |-CallExpr 0x13afbcb1858 <col:20, col:47> 'int'
|   |   |                                                                 | | |-ImplicitCastExpr 0x13afbcb1840 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                 | | | `-DeclRefExpr 0x13afbcb1778 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                 | | |-ImplicitCastExpr 0x13afbcb18a0 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                 | | | `-ImplicitCastExpr 0x13afbcb1888 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                 | | |   `-UnaryOperator 0x13afbcb17d0 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                 | | |     `-ImplicitCastExpr 0x13afbcb17b8 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                 | | |       `-DeclRefExpr 0x13afbcb1798 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                 | | `-ImplicitCastExpr 0x13afbcb18d0 <col:34> 'const char *' <NoOp>
|   |   |                                                                 | |   `-ImplicitCastExpr 0x13afbcb18b8 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                 | |     `-StringLiteral 0x13afbcb17e8 <col:34> 'char [12]' lvalue "-npn_client"
|   |   |                                                                 | `-IntegerLiteral 0x13afbcb18e8 <col:52> 'int' 0
|   |   |                                                                 |-CompoundStmt 0x13afbcb1998 <col:55, line:1196:9>
|   |   |                                                                 | `-BinaryOperator 0x13afbcb1978 <line:1195:13, col:26> 'int' '='
|   |   |                                                                 |   |-DeclRefExpr 0x13afbcb1930 <col:13> 'int' lvalue Var 0x13afbc92370 'npn_client' 'int'
|   |   |                                                                 |   `-IntegerLiteral 0x13afbcb1950 <col:26> 'int' 1
|   |   |                                                                 `-IfStmt 0x13afbcb8038 <line:1196:16, line:1319:9> has_else
|   |   |                                                                   |-BinaryOperator 0x13afbcb1b48 <line:1196:20, col:52> 'int' '=='
|   |   |                                                                   | |-CallExpr 0x13afbcb1a90 <col:20, col:47> 'int'
|   |   |                                                                   | | |-ImplicitCastExpr 0x13afbcb1a78 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                   | | | `-DeclRefExpr 0x13afbcb19b0 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                   | | |-ImplicitCastExpr 0x13afbcb1ad8 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                   | | | `-ImplicitCastExpr 0x13afbcb1ac0 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                   | | |   `-UnaryOperator 0x13afbcb1a08 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                   | | |     `-ImplicitCastExpr 0x13afbcb19f0 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                   | | |       `-DeclRefExpr 0x13afbcb19d0 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                   | | `-ImplicitCastExpr 0x13afbcb1b08 <col:34> 'const char *' <NoOp>
|   |   |                                                                   | |   `-ImplicitCastExpr 0x13afbcb1af0 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                   | |     `-StringLiteral 0x13afbcb1a20 <col:34> 'char [12]' lvalue "-npn_server"
|   |   |                                                                   | `-IntegerLiteral 0x13afbcb1b20 <col:52> 'int' 0
|   |   |                                                                   |-CompoundStmt 0x13afbcb1bd0 <col:55, line:1198:9>
|   |   |                                                                   | `-BinaryOperator 0x13afbcb1bb0 <line:1197:13, col:26> 'int' '='
|   |   |                                                                   |   |-DeclRefExpr 0x13afbcb1b68 <col:13> 'int' lvalue Var 0x13afbc92430 'npn_server' 'int'
|   |   |                                                                   |   `-IntegerLiteral 0x13afbcb1b88 <col:26> 'int' 1
|   |   |                                                                   `-IfStmt 0x13afbcb8010 <line:1198:16, line:1319:9> has_else
|   |   |                                                                     |-BinaryOperator 0x13afbcb1d88 <line:1198:20, col:59> 'int' '=='
|   |   |                                                                     | |-CallExpr 0x13afbcb1cd0 <col:20, col:54> 'int'
|   |   |                                                                     | | |-ImplicitCastExpr 0x13afbcb1cb8 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                     | | | `-DeclRefExpr 0x13afbcb1be8 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                     | | |-ImplicitCastExpr 0x13afbcb1d18 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                     | | | `-ImplicitCastExpr 0x13afbcb1d00 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                     | | |   `-UnaryOperator 0x13afbcb1c40 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                     | | |     `-ImplicitCastExpr 0x13afbcb1c28 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                     | | |       `-DeclRefExpr 0x13afbcb1c08 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                     | | `-ImplicitCastExpr 0x13afbcb1d48 <col:34> 'const char *' <NoOp>
|   |   |                                                                     | |   `-ImplicitCastExpr 0x13afbcb1d30 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                     | |     `-StringLiteral 0x13afbcb1c58 <col:34> 'char [19]' lvalue "-npn_server_reject"
|   |   |                                                                     | `-IntegerLiteral 0x13afbcb1d60 <col:59> 'int' 0
|   |   |                                                                     |-CompoundStmt 0x13afbcb1e10 <col:62, line:1200:9>
|   |   |                                                                     | `-BinaryOperator 0x13afbcb1df0 <line:1199:13, col:33> 'int' '='
|   |   |                                                                     |   |-DeclRefExpr 0x13afbcb1da8 <col:13> 'int' lvalue Var 0x13afbc924f0 'npn_server_reject' 'int'
|   |   |                                                                     |   `-IntegerLiteral 0x13afbcb1dc8 <col:33> 'int' 1
|   |   |                                                                     `-IfStmt 0x13afbcb7fe8 <line:1202:14, line:1319:9> has_else
|   |   |                                                                       |-BinaryOperator 0x13afbcb1fc0 <line:1202:18, col:54> 'int' '=='
|   |   |                                                                       | |-CallExpr 0x13afbcb1f08 <col:18, col:49> 'int'
|   |   |                                                                       | | |-ImplicitCastExpr 0x13afbcb1ef0 <col:18> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                       | | | `-DeclRefExpr 0x13afbcb1e28 <col:18> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                       | | |-ImplicitCastExpr 0x13afbcb1f50 <col:25, col:26> 'const char *' <NoOp>
|   |   |                                                                       | | | `-ImplicitCastExpr 0x13afbcb1f38 <col:25, col:26> 'char *' <LValueToRValue>
|   |   |                                                                       | | |   `-UnaryOperator 0x13afbcb1e80 <col:25, col:26> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                       | | |     `-ImplicitCastExpr 0x13afbcb1e68 <col:26> 'char **':'char **' <LValueToRValue>
|   |   |                                                                       | | |       `-DeclRefExpr 0x13afbcb1e48 <col:26> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                       | | `-ImplicitCastExpr 0x13afbcb1f80 <col:32> 'const char *' <NoOp>
|   |   |                                                                       | |   `-ImplicitCastExpr 0x13afbcb1f68 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |                                                                       | |     `-StringLiteral 0x13afbcb1e98 <col:32> 'char [16]' lvalue "-serverinfo_sct"
|   |   |                                                                       | `-IntegerLiteral 0x13afbcb1f98 <col:54> 'int' 0
|   |   |                                                                       |-CompoundStmt 0x13afbcb2048 <col:57, line:1204:9>
|   |   |                                                                       | `-BinaryOperator 0x13afbcb2028 <line:1203:13, col:30> 'int' '='
|   |   |                                                                       |   |-DeclRefExpr 0x13afbcb1fe0 <col:13> 'int' lvalue Var 0x13afbc87f48 'serverinfo_sct' 'int'
|   |   |                                                                       |   `-IntegerLiteral 0x13afbcb2000 <col:30> 'int' 1
|   |   |                                                                       `-IfStmt 0x13afbcb7fc0 <line:1204:16, line:1319:9> has_else
|   |   |                                                                         |-BinaryOperator 0x13afbcb2230 <line:1204:20, col:57> 'int' '=='
|   |   |                                                                         | |-CallExpr 0x13afbcb2178 <col:20, col:52> 'int'
|   |   |                                                                         | | |-ImplicitCastExpr 0x13afbcb2160 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                         | | | `-DeclRefExpr 0x13afbcb2060 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                         | | |-ImplicitCastExpr 0x13afbcb21c0 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                         | | | `-ImplicitCastExpr 0x13afbcb21a8 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                         | | |   `-UnaryOperator 0x13afbcb20b8 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                         | | |     `-ImplicitCastExpr 0x13afbcb20a0 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                         | | |       `-DeclRefExpr 0x13afbcb2080 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                         | | `-ImplicitCastExpr 0x13afbcb21f0 <col:34> 'const char *' <NoOp>
|   |   |                                                                         | |   `-ImplicitCastExpr 0x13afbcb21d8 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                         | |     `-StringLiteral 0x13afbcb2108 <col:34> 'char [17]' lvalue "-serverinfo_tack"
|   |   |                                                                         | `-IntegerLiteral 0x13afbcb2208 <col:57> 'int' 0
|   |   |                                                                         |-CompoundStmt 0x13afbcb22b8 <col:60, line:1206:9>
|   |   |                                                                         | `-BinaryOperator 0x13afbcb2298 <line:1205:13, col:31> 'int' '='
|   |   |                                                                         |   |-DeclRefExpr 0x13afbcb2250 <col:13> 'int' lvalue Var 0x13afbc88008 'serverinfo_tack' 'int'
|   |   |                                                                         |   `-IntegerLiteral 0x13afbcb2270 <col:31> 'int' 1
|   |   |                                                                         `-IfStmt 0x13afbcb7f98 <line:1206:16, line:1319:9> has_else
|   |   |                                                                           |-BinaryOperator 0x13afbcb2468 <line:1206:20, col:57> 'int' '=='
|   |   |                                                                           | |-CallExpr 0x13afbcb23b0 <col:20, col:52> 'int'
|   |   |                                                                           | | |-ImplicitCastExpr 0x13afbcb2398 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                           | | | `-DeclRefExpr 0x13afbcb22d0 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                           | | |-ImplicitCastExpr 0x13afbcb23f8 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                           | | | `-ImplicitCastExpr 0x13afbcb23e0 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                           | | |   `-UnaryOperator 0x13afbcb2328 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                           | | |     `-ImplicitCastExpr 0x13afbcb2310 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                           | | |       `-DeclRefExpr 0x13afbcb22f0 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                           | | `-ImplicitCastExpr 0x13afbcb2428 <col:34> 'const char *' <NoOp>
|   |   |                                                                           | |   `-ImplicitCastExpr 0x13afbcb2410 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                           | |     `-StringLiteral 0x13afbcb2340 <col:34> 'char [17]' lvalue "-serverinfo_file"
|   |   |                                                                           | `-IntegerLiteral 0x13afbcb2440 <col:57> 'int' 0
|   |   |                                                                           |-CompoundStmt 0x13afbcb2600 <col:60, line:1210:9>
|   |   |                                                                           | |-IfStmt 0x13afbcb2520 <line:1207:13, line:1208:22>
|   |   |                                                                           | | |-BinaryOperator 0x13afbcb24e8 <line:1207:17, col:26> 'int' '<'
|   |   |                                                                           | | | |-UnaryOperator 0x13afbcb24a8 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                           | | | | `-DeclRefExpr 0x13afbcb2488 <col:19> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |   |                                                                           | | | `-IntegerLiteral 0x13afbcb24c0 <col:26> 'int' 1
|   |   |                                                                           | | `-GotoStmt 0x13afbcb2508 <line:1208:17, col:22> 'bad' 0x13afbcb4e28
|   |   |                                                                           | `-BinaryOperator 0x13afbcb25e0 <line:1209:13, col:39> 'char *' '='
|   |   |                                                                           |   |-DeclRefExpr 0x13afbcb2538 <col:13> 'char *' lvalue Var 0x13afbc87e10 'serverinfo_file' 'char *'
|   |   |                                                                           |   `-ImplicitCastExpr 0x13afbcb25c8 <col:31, col:39> 'char *' <LValueToRValue>
|   |   |                                                                           |     `-UnaryOperator 0x13afbcb25b0 <col:31, col:39> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                           |       `-ParenExpr 0x13afbcb2590 <col:32, col:39> 'char **':'char **'
|   |   |                                                                           |         `-UnaryOperator 0x13afbcb2578 <col:33, col:35> 'char **':'char **' prefix '++'
|   |   |                                                                           |           `-DeclRefExpr 0x13afbcb2558 <col:35> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                           `-IfStmt 0x13afbcb7f70 <line:1210:16, line:1319:9> has_else
|   |   |                                                                             |-BinaryOperator 0x13afbcb27b8 <line:1210:20, col:52> 'int' '=='
|   |   |                                                                             | |-CallExpr 0x13afbcb2700 <col:20, col:47> 'int'
|   |   |                                                                             | | |-ImplicitCastExpr 0x13afbcb26e8 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                             | | | `-DeclRefExpr 0x13afbcb2620 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                             | | |-ImplicitCastExpr 0x13afbcb2748 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                             | | | `-ImplicitCastExpr 0x13afbcb2730 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                             | | |   `-UnaryOperator 0x13afbcb2678 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                             | | |     `-ImplicitCastExpr 0x13afbcb2660 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                             | | |       `-DeclRefExpr 0x13afbcb2640 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                             | | `-ImplicitCastExpr 0x13afbcb2778 <col:34> 'const char *' <NoOp>
|   |   |                                                                             | |   `-ImplicitCastExpr 0x13afbcb2760 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                             | |     `-StringLiteral 0x13afbcb2690 <col:34> 'char [12]' lvalue "-custom_ext"
|   |   |                                                                             | `-IntegerLiteral 0x13afbcb2790 <col:52> 'int' 0
|   |   |                                                                             |-CompoundStmt 0x13afbcb2840 <col:55, line:1212:9>
|   |   |                                                                             | `-BinaryOperator 0x13afbcb2820 <line:1211:13, col:26> 'int' '='
|   |   |                                                                             |   |-DeclRefExpr 0x13afbcb27d8 <col:13> 'int' lvalue Var 0x13afbc88308 'custom_ext' 'int'
|   |   |                                                                             |   `-IntegerLiteral 0x13afbcb27f8 <col:26> 'int' 1
|   |   |                                                                             `-IfStmt 0x13afbcb7f48 <line:1212:16, line:1319:9> has_else
|   |   |                                                                               |-BinaryOperator 0x13afbcb29f0 <line:1212:20, col:53> 'int' '=='
|   |   |                                                                               | |-CallExpr 0x13afbcb2938 <col:20, col:48> 'int'
|   |   |                                                                               | | |-ImplicitCastExpr 0x13afbcb2920 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                               | | | `-DeclRefExpr 0x13afbcb2858 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                               | | |-ImplicitCastExpr 0x13afbcb2980 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                               | | | `-ImplicitCastExpr 0x13afbcb2968 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                               | | |   `-UnaryOperator 0x13afbcb28b0 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                               | | |     `-ImplicitCastExpr 0x13afbcb2898 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                               | | |       `-DeclRefExpr 0x13afbcb2878 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                               | | `-ImplicitCastExpr 0x13afbcb29b0 <col:34> 'const char *' <NoOp>
|   |   |                                                                               | |   `-ImplicitCastExpr 0x13afbcb2998 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                               | |     `-StringLiteral 0x13afbcb28c8 <col:34> 'char [13]' lvalue "-alpn_client"
|   |   |                                                                               | `-IntegerLiteral 0x13afbcb29c8 <col:53> 'int' 0
|   |   |                                                                               |-CompoundStmt 0x13afbcb2ba0 <col:56, line:1216:9>
|   |   |                                                                               | |-IfStmt 0x13afbcb2aa8 <line:1213:13, line:1214:22>
|   |   |                                                                               | | |-BinaryOperator 0x13afbcb2a70 <line:1213:17, col:26> 'int' '<'
|   |   |                                                                               | | | |-UnaryOperator 0x13afbcb2a30 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                               | | | | `-DeclRefExpr 0x13afbcb2a10 <col:19> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |   |                                                                               | | | `-IntegerLiteral 0x13afbcb2a48 <col:26> 'int' 1
|   |   |                                                                               | | `-GotoStmt 0x13afbcb2a90 <line:1214:17, col:22> 'bad' 0x13afbcb4e28
|   |   |                                                                               | `-BinaryOperator 0x13afbcb2b80 <line:1215:13, col:35> 'const char *' '='
|   |   |                                                                               |   |-DeclRefExpr 0x13afbcb2ac0 <col:13> 'const char *' lvalue Var 0x13afbc8b0c0 'alpn_client' 'const char *'
|   |   |                                                                               |   `-ImplicitCastExpr 0x13afbcb2b68 <col:27, col:35> 'const char *' <NoOp>
|   |   |                                                                               |     `-ImplicitCastExpr 0x13afbcb2b50 <col:27, col:35> 'char *' <LValueToRValue>
|   |   |                                                                               |       `-UnaryOperator 0x13afbcb2b38 <col:27, col:35> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                               |         `-ParenExpr 0x13afbcb2b18 <col:28, col:35> 'char **':'char **'
|   |   |                                                                               |           `-UnaryOperator 0x13afbcb2b00 <col:29, col:31> 'char **':'char **' prefix '++'
|   |   |                                                                               |             `-DeclRefExpr 0x13afbcb2ae0 <col:31> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                               `-IfStmt 0x13afbcb7f20 <line:1216:16, line:1319:9> has_else
|   |   |                                                                                 |-BinaryOperator 0x13afbcb2f70 <line:1216:20, line:1217:54> 'int' '||'
|   |   |                                                                                 | |-BinaryOperator 0x13afbcb2d58 <line:1216:20, col:53> 'int' '=='
|   |   |                                                                                 | | |-CallExpr 0x13afbcb2ca0 <col:20, col:48> 'int'
|   |   |                                                                                 | | | |-ImplicitCastExpr 0x13afbcb2c88 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                 | | | | `-DeclRefExpr 0x13afbcb2bc0 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                 | | | |-ImplicitCastExpr 0x13afbcb2ce8 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                 | | | | `-ImplicitCastExpr 0x13afbcb2cd0 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                 | | | |   `-UnaryOperator 0x13afbcb2c18 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                 | | | |     `-ImplicitCastExpr 0x13afbcb2c00 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                 | | | |       `-DeclRefExpr 0x13afbcb2be0 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                 | | | `-ImplicitCastExpr 0x13afbcb2d18 <col:34> 'const char *' <NoOp>
|   |   |                                                                                 | | |   `-ImplicitCastExpr 0x13afbcb2d00 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                 | | |     `-StringLiteral 0x13afbcb2c30 <col:34> 'char [13]' lvalue "-alpn_server"
|   |   |                                                                                 | | `-IntegerLiteral 0x13afbcb2d30 <col:53> 'int' 0
|   |   |                                                                                 | `-BinaryOperator 0x13afbcb2f50 <line:1217:20, col:54> 'int' '=='
|   |   |                                                                                 |   |-CallExpr 0x13afbcb2e98 <col:20, col:49> 'int'
|   |   |                                                                                 |   | |-ImplicitCastExpr 0x13afbcb2e80 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                 |   | | `-DeclRefExpr 0x13afbcb2d78 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                 |   | |-ImplicitCastExpr 0x13afbcb2ee0 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                 |   | | `-ImplicitCastExpr 0x13afbcb2ec8 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                 |   | |   `-UnaryOperator 0x13afbcb2dd0 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                 |   | |     `-ImplicitCastExpr 0x13afbcb2db8 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                 |   | |       `-DeclRefExpr 0x13afbcb2d98 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                 |   | `-ImplicitCastExpr 0x13afbcb2f10 <col:34> 'const char *' <NoOp>
|   |   |                                                                                 |   |   `-ImplicitCastExpr 0x13afbcb2ef8 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                 |   |     `-StringLiteral 0x13afbcb2e28 <col:34> 'char [14]' lvalue "-alpn_server1"
|   |   |                                                                                 |   `-IntegerLiteral 0x13afbcb2f28 <col:54> 'int' 0
|   |   |                                                                                 |-CompoundStmt 0x13afbcb3108 <col:57, line:1221:9>
|   |   |                                                                                 | |-IfStmt 0x13afbcb3028 <line:1218:13, line:1219:22>
|   |   |                                                                                 | | |-BinaryOperator 0x13afbcb2ff0 <line:1218:17, col:26> 'int' '<'
|   |   |                                                                                 | | | |-UnaryOperator 0x13afbcb2fb0 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                 | | | | `-DeclRefExpr 0x13afbcb2f90 <col:19> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |   |                                                                                 | | | `-IntegerLiteral 0x13afbcb2fc8 <col:26> 'int' 1
|   |   |                                                                                 | | `-GotoStmt 0x13afbcb3010 <line:1219:17, col:22> 'bad' 0x13afbcb4e28
|   |   |                                                                                 | `-BinaryOperator 0x13afbcb30e8 <line:1220:13, col:35> 'char *' '='
|   |   |                                                                                 |   |-DeclRefExpr 0x13afbcb3040 <col:13> 'char *' lvalue Var 0x13afbc8b158 'alpn_server' 'char *'
|   |   |                                                                                 |   `-ImplicitCastExpr 0x13afbcb30d0 <col:27, col:35> 'char *' <LValueToRValue>
|   |   |                                                                                 |     `-UnaryOperator 0x13afbcb30b8 <col:27, col:35> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                 |       `-ParenExpr 0x13afbcb3098 <col:28, col:35> 'char **':'char **'
|   |   |                                                                                 |         `-UnaryOperator 0x13afbcb3080 <col:29, col:31> 'char **':'char **' prefix '++'
|   |   |                                                                                 |           `-DeclRefExpr 0x13afbcb3060 <col:31> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                 `-IfStmt 0x13afbcb7ef8 <line:1221:16, line:1319:9> has_else
|   |   |                                                                                   |-BinaryOperator 0x13afbcb52f8 <line:1221:20, col:54> 'int' '=='
|   |   |                                                                                   | |-CallExpr 0x13afbcb5240 <col:20, col:49> 'int'
|   |   |                                                                                   | | |-ImplicitCastExpr 0x13afbcb5228 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                   | | | `-DeclRefExpr 0x13afbcb3128 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                   | | |-ImplicitCastExpr 0x13afbcb5288 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                   | | | `-ImplicitCastExpr 0x13afbcb5270 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                   | | |   `-UnaryOperator 0x13afbcb51b8 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                   | | |     `-ImplicitCastExpr 0x13afbcb51a0 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                   | | |       `-DeclRefExpr 0x13afbcb5180 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                   | | `-ImplicitCastExpr 0x13afbcb52b8 <col:34> 'const char *' <NoOp>
|   |   |                                                                                   | |   `-ImplicitCastExpr 0x13afbcb52a0 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                   | |     `-StringLiteral 0x13afbcb51d0 <col:34> 'char [14]' lvalue "-alpn_server2"
|   |   |                                                                                   | `-IntegerLiteral 0x13afbcb52d0 <col:54> 'int' 0
|   |   |                                                                                   |-CompoundStmt 0x13afbcb5490 <col:57, line:1225:9>
|   |   |                                                                                   | |-IfStmt 0x13afbcb53b0 <line:1222:13, line:1223:22>
|   |   |                                                                                   | | |-BinaryOperator 0x13afbcb5378 <line:1222:17, col:26> 'int' '<'
|   |   |                                                                                   | | | |-UnaryOperator 0x13afbcb5338 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                   | | | | `-DeclRefExpr 0x13afbcb5318 <col:19> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |   |                                                                                   | | | `-IntegerLiteral 0x13afbcb5350 <col:26> 'int' 1
|   |   |                                                                                   | | `-GotoStmt 0x13afbcb5398 <line:1223:17, col:22> 'bad' 0x13afbcb4e28
|   |   |                                                                                   | `-BinaryOperator 0x13afbcb5470 <line:1224:13, col:36> 'char *' '='
|   |   |                                                                                   |   |-DeclRefExpr 0x13afbcb53c8 <col:13> 'char *' lvalue Var 0x13afbc8b1f0 'alpn_server2' 'char *'
|   |   |                                                                                   |   `-ImplicitCastExpr 0x13afbcb5458 <col:28, col:36> 'char *' <LValueToRValue>
|   |   |                                                                                   |     `-UnaryOperator 0x13afbcb5440 <col:28, col:36> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                   |       `-ParenExpr 0x13afbcb5420 <col:29, col:36> 'char **':'char **'
|   |   |                                                                                   |         `-UnaryOperator 0x13afbcb5408 <col:30, col:32> 'char **':'char **' prefix '++'
|   |   |                                                                                   |           `-DeclRefExpr 0x13afbcb53e8 <col:32> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                   `-IfStmt 0x13afbcb7ed0 <line:1225:16, line:1319:9> has_else
|   |   |                                                                                     |-BinaryOperator 0x13afbcb5680 <line:1225:20, col:55> 'int' '=='
|   |   |                                                                                     | |-CallExpr 0x13afbcb55c8 <col:20, col:50> 'int'
|   |   |                                                                                     | | |-ImplicitCastExpr 0x13afbcb55b0 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                     | | | `-DeclRefExpr 0x13afbcb54b0 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                     | | |-ImplicitCastExpr 0x13afbcb5610 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                     | | | `-ImplicitCastExpr 0x13afbcb55f8 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                     | | |   `-UnaryOperator 0x13afbcb5508 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                     | | |     `-ImplicitCastExpr 0x13afbcb54f0 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                     | | |       `-DeclRefExpr 0x13afbcb54d0 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                     | | `-ImplicitCastExpr 0x13afbcb5640 <col:34> 'const char *' <NoOp>
|   |   |                                                                                     | |   `-ImplicitCastExpr 0x13afbcb5628 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                     | |     `-StringLiteral 0x13afbcb5558 <col:34> 'char [15]' lvalue "-alpn_expected"
|   |   |                                                                                     | `-IntegerLiteral 0x13afbcb5658 <col:55> 'int' 0
|   |   |                                                                                     |-CompoundStmt 0x13afbcb5830 <col:58, line:1229:9>
|   |   |                                                                                     | |-IfStmt 0x13afbcb5738 <line:1226:13, line:1227:22>
|   |   |                                                                                     | | |-BinaryOperator 0x13afbcb5700 <line:1226:17, col:26> 'int' '<'
|   |   |                                                                                     | | | |-UnaryOperator 0x13afbcb56c0 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                     | | | | `-DeclRefExpr 0x13afbcb56a0 <col:19> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |   |                                                                                     | | | `-IntegerLiteral 0x13afbcb56d8 <col:26> 'int' 1
|   |   |                                                                                     | | `-GotoStmt 0x13afbcb5720 <line:1227:17, col:22> 'bad' 0x13afbcb4e28
|   |   |                                                                                     | `-BinaryOperator 0x13afbcb5810 <line:1228:13, col:37> 'const char *' '='
|   |   |                                                                                     |   |-DeclRefExpr 0x13afbcb5750 <col:13> 'const char *' lvalue Var 0x13afbc8b288 'alpn_expected' 'const char *'
|   |   |                                                                                     |   `-ImplicitCastExpr 0x13afbcb57f8 <col:29, col:37> 'const char *' <NoOp>
|   |   |                                                                                     |     `-ImplicitCastExpr 0x13afbcb57e0 <col:29, col:37> 'char *' <LValueToRValue>
|   |   |                                                                                     |       `-UnaryOperator 0x13afbcb57c8 <col:29, col:37> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                     |         `-ParenExpr 0x13afbcb57a8 <col:30, col:37> 'char **':'char **'
|   |   |                                                                                     |           `-UnaryOperator 0x13afbcb5790 <col:31, col:33> 'char **':'char **' prefix '++'
|   |   |                                                                                     |             `-DeclRefExpr 0x13afbcb5770 <col:33> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                     `-IfStmt 0x13afbcb7ea8 <line:1229:16, line:1319:9> has_else
|   |   |                                                                                       |-BinaryOperator 0x13afbcb5a28 <line:1229:20, col:58> 'int' '=='
|   |   |                                                                                       | |-CallExpr 0x13afbcb5970 <col:20, col:53> 'int'
|   |   |                                                                                       | | |-ImplicitCastExpr 0x13afbcb5958 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                       | | | `-DeclRefExpr 0x13afbcb5850 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                       | | |-ImplicitCastExpr 0x13afbcb59b8 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                       | | | `-ImplicitCastExpr 0x13afbcb59a0 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                       | | |   `-UnaryOperator 0x13afbcb58a8 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                       | | |     `-ImplicitCastExpr 0x13afbcb5890 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                       | | |       `-DeclRefExpr 0x13afbcb5870 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                       | | `-ImplicitCastExpr 0x13afbcb59e8 <col:34> 'const char *' <NoOp>
|   |   |                                                                                       | |   `-ImplicitCastExpr 0x13afbcb59d0 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                       | |     `-StringLiteral 0x13afbcb58f8 <col:34> 'char [18]' lvalue "-server_min_proto"
|   |   |                                                                                       | `-IntegerLiteral 0x13afbcb5a00 <col:58> 'int' 0
|   |   |                                                                                       |-CompoundStmt 0x13afbcb5bd8 <col:61, line:1233:9>
|   |   |                                                                                       | |-IfStmt 0x13afbcb5ae0 <line:1230:13, line:1231:22>
|   |   |                                                                                       | | |-BinaryOperator 0x13afbcb5aa8 <line:1230:17, col:26> 'int' '<'
|   |   |                                                                                       | | | |-UnaryOperator 0x13afbcb5a68 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                       | | | | `-DeclRefExpr 0x13afbcb5a48 <col:19> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |   |                                                                                       | | | `-IntegerLiteral 0x13afbcb5a80 <col:26> 'int' 1
|   |   |                                                                                       | | `-GotoStmt 0x13afbcb5ac8 <line:1231:17, col:22> 'bad' 0x13afbcb4e28
|   |   |                                                                                       | `-BinaryOperator 0x13afbcb5bb8 <line:1232:13, col:40> 'const char *' '='
|   |   |                                                                                       |   |-DeclRefExpr 0x13afbcb5af8 <col:13> 'const char *' lvalue Var 0x13afbc8b3b8 'server_min_proto' 'const char *'
|   |   |                                                                                       |   `-ImplicitCastExpr 0x13afbcb5ba0 <col:32, col:40> 'const char *' <NoOp>
|   |   |                                                                                       |     `-ImplicitCastExpr 0x13afbcb5b88 <col:32, col:40> 'char *' <LValueToRValue>
|   |   |                                                                                       |       `-UnaryOperator 0x13afbcb5b70 <col:32, col:40> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                       |         `-ParenExpr 0x13afbcb5b50 <col:33, col:40> 'char **':'char **'
|   |   |                                                                                       |           `-UnaryOperator 0x13afbcb5b38 <col:34, col:36> 'char **':'char **' prefix '++'
|   |   |                                                                                       |             `-DeclRefExpr 0x13afbcb5b18 <col:36> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                       `-IfStmt 0x13afbcb7e80 <line:1233:16, line:1319:9> has_else
|   |   |                                                                                         |-BinaryOperator 0x13afbcb5d98 <line:1233:20, col:58> 'int' '=='
|   |   |                                                                                         | |-CallExpr 0x13afbcb5ce0 <col:20, col:53> 'int'
|   |   |                                                                                         | | |-ImplicitCastExpr 0x13afbcb5cc8 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                         | | | `-DeclRefExpr 0x13afbcb5bf8 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                         | | |-ImplicitCastExpr 0x13afbcb5d28 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                         | | | `-ImplicitCastExpr 0x13afbcb5d10 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                         | | |   `-UnaryOperator 0x13afbcb5c50 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                         | | |     `-ImplicitCastExpr 0x13afbcb5c38 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                         | | |       `-DeclRefExpr 0x13afbcb5c18 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                         | | `-ImplicitCastExpr 0x13afbcb5d58 <col:34> 'const char *' <NoOp>
|   |   |                                                                                         | |   `-ImplicitCastExpr 0x13afbcb5d40 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                         | |     `-StringLiteral 0x13afbcb5c68 <col:34> 'char [18]' lvalue "-server_max_proto"
|   |   |                                                                                         | `-IntegerLiteral 0x13afbcb5d70 <col:58> 'int' 0
|   |   |                                                                                         |-CompoundStmt 0x13afbcb5f48 <col:61, line:1237:9>
|   |   |                                                                                         | |-IfStmt 0x13afbcb5e50 <line:1234:13, line:1235:22>
|   |   |                                                                                         | | |-BinaryOperator 0x13afbcb5e18 <line:1234:17, col:26> 'int' '<'
|   |   |                                                                                         | | | |-UnaryOperator 0x13afbcb5dd8 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                         | | | | `-DeclRefExpr 0x13afbcb5db8 <col:19> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |   |                                                                                         | | | `-IntegerLiteral 0x13afbcb5df0 <col:26> 'int' 1
|   |   |                                                                                         | | `-GotoStmt 0x13afbcb5e38 <line:1235:17, col:22> 'bad' 0x13afbcb4e28
|   |   |                                                                                         | `-BinaryOperator 0x13afbcb5f28 <line:1236:13, col:40> 'const char *' '='
|   |   |                                                                                         |   |-DeclRefExpr 0x13afbcb5e68 <col:13> 'const char *' lvalue Var 0x13afbc8b450 'server_max_proto' 'const char *'
|   |   |                                                                                         |   `-ImplicitCastExpr 0x13afbcb5f10 <col:32, col:40> 'const char *' <NoOp>
|   |   |                                                                                         |     `-ImplicitCastExpr 0x13afbcb5ef8 <col:32, col:40> 'char *' <LValueToRValue>
|   |   |                                                                                         |       `-UnaryOperator 0x13afbcb5ee0 <col:32, col:40> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                         |         `-ParenExpr 0x13afbcb5ec0 <col:33, col:40> 'char **':'char **'
|   |   |                                                                                         |           `-UnaryOperator 0x13afbcb5ea8 <col:34, col:36> 'char **':'char **' prefix '++'
|   |   |                                                                                         |             `-DeclRefExpr 0x13afbcb5e88 <col:36> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                         `-IfStmt 0x13afbcb7e58 <line:1237:16, line:1319:9> has_else
|   |   |                                                                                           |-BinaryOperator 0x13afbcb6108 <line:1237:20, col:58> 'int' '=='
|   |   |                                                                                           | |-CallExpr 0x13afbcb6050 <col:20, col:53> 'int'
|   |   |                                                                                           | | |-ImplicitCastExpr 0x13afbcb6038 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                           | | | `-DeclRefExpr 0x13afbcb5f68 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                           | | |-ImplicitCastExpr 0x13afbcb6098 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                           | | | `-ImplicitCastExpr 0x13afbcb6080 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                           | | |   `-UnaryOperator 0x13afbcb5fc0 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                           | | |     `-ImplicitCastExpr 0x13afbcb5fa8 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                           | | |       `-DeclRefExpr 0x13afbcb5f88 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                           | | `-ImplicitCastExpr 0x13afbcb60c8 <col:34> 'const char *' <NoOp>
|   |   |                                                                                           | |   `-ImplicitCastExpr 0x13afbcb60b0 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                           | |     `-StringLiteral 0x13afbcb5fd8 <col:34> 'char [18]' lvalue "-client_min_proto"
|   |   |                                                                                           | `-IntegerLiteral 0x13afbcb60e0 <col:58> 'int' 0
|   |   |                                                                                           |-CompoundStmt 0x13afbcb62b8 <col:61, line:1241:9>
|   |   |                                                                                           | |-IfStmt 0x13afbcb61c0 <line:1238:13, line:1239:22>
|   |   |                                                                                           | | |-BinaryOperator 0x13afbcb6188 <line:1238:17, col:26> 'int' '<'
|   |   |                                                                                           | | | |-UnaryOperator 0x13afbcb6148 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                           | | | | `-DeclRefExpr 0x13afbcb6128 <col:19> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |   |                                                                                           | | | `-IntegerLiteral 0x13afbcb6160 <col:26> 'int' 1
|   |   |                                                                                           | | `-GotoStmt 0x13afbcb61a8 <line:1239:17, col:22> 'bad' 0x13afbcb4e28
|   |   |                                                                                           | `-BinaryOperator 0x13afbcb6298 <line:1240:13, col:40> 'const char *' '='
|   |   |                                                                                           |   |-DeclRefExpr 0x13afbcb61d8 <col:13> 'const char *' lvalue Var 0x13afbc8b4e8 'client_min_proto' 'const char *'
|   |   |                                                                                           |   `-ImplicitCastExpr 0x13afbcb6280 <col:32, col:40> 'const char *' <NoOp>
|   |   |                                                                                           |     `-ImplicitCastExpr 0x13afbcb6268 <col:32, col:40> 'char *' <LValueToRValue>
|   |   |                                                                                           |       `-UnaryOperator 0x13afbcb6250 <col:32, col:40> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                           |         `-ParenExpr 0x13afbcb6230 <col:33, col:40> 'char **':'char **'
|   |   |                                                                                           |           `-UnaryOperator 0x13afbcb6218 <col:34, col:36> 'char **':'char **' prefix '++'
|   |   |                                                                                           |             `-DeclRefExpr 0x13afbcb61f8 <col:36> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                           `-IfStmt 0x13afbcb7e30 <line:1241:16, line:1319:9> has_else
|   |   |                                                                                             |-BinaryOperator 0x13afbcb6478 <line:1241:20, col:58> 'int' '=='
|   |   |                                                                                             | |-CallExpr 0x13afbcb63c0 <col:20, col:53> 'int'
|   |   |                                                                                             | | |-ImplicitCastExpr 0x13afbcb63a8 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                             | | | `-DeclRefExpr 0x13afbcb62d8 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                             | | |-ImplicitCastExpr 0x13afbcb6408 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                             | | | `-ImplicitCastExpr 0x13afbcb63f0 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                             | | |   `-UnaryOperator 0x13afbcb6330 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                             | | |     `-ImplicitCastExpr 0x13afbcb6318 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                             | | |       `-DeclRefExpr 0x13afbcb62f8 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                             | | `-ImplicitCastExpr 0x13afbcb6438 <col:34> 'const char *' <NoOp>
|   |   |                                                                                             | |   `-ImplicitCastExpr 0x13afbcb6420 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                             | |     `-StringLiteral 0x13afbcb6348 <col:34> 'char [18]' lvalue "-client_max_proto"
|   |   |                                                                                             | `-IntegerLiteral 0x13afbcb6450 <col:58> 'int' 0
|   |   |                                                                                             |-CompoundStmt 0x13afbcb6628 <col:61, line:1245:9>
|   |   |                                                                                             | |-IfStmt 0x13afbcb6530 <line:1242:13, line:1243:22>
|   |   |                                                                                             | | |-BinaryOperator 0x13afbcb64f8 <line:1242:17, col:26> 'int' '<'
|   |   |                                                                                             | | | |-UnaryOperator 0x13afbcb64b8 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                             | | | | `-DeclRefExpr 0x13afbcb6498 <col:19> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |   |                                                                                             | | | `-IntegerLiteral 0x13afbcb64d0 <col:26> 'int' 1
|   |   |                                                                                             | | `-GotoStmt 0x13afbcb6518 <line:1243:17, col:22> 'bad' 0x13afbcb4e28
|   |   |                                                                                             | `-BinaryOperator 0x13afbcb6608 <line:1244:13, col:40> 'const char *' '='
|   |   |                                                                                             |   |-DeclRefExpr 0x13afbcb6548 <col:13> 'const char *' lvalue Var 0x13afbc8b580 'client_max_proto' 'const char *'
|   |   |                                                                                             |   `-ImplicitCastExpr 0x13afbcb65f0 <col:32, col:40> 'const char *' <NoOp>
|   |   |                                                                                             |     `-ImplicitCastExpr 0x13afbcb65d8 <col:32, col:40> 'char *' <LValueToRValue>
|   |   |                                                                                             |       `-UnaryOperator 0x13afbcb65c0 <col:32, col:40> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                             |         `-ParenExpr 0x13afbcb65a0 <col:33, col:40> 'char **':'char **'
|   |   |                                                                                             |           `-UnaryOperator 0x13afbcb6588 <col:34, col:36> 'char **':'char **' prefix '++'
|   |   |                                                                                             |             `-DeclRefExpr 0x13afbcb6568 <col:36> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                             `-IfStmt 0x13afbcb7e08 <line:1245:16, line:1319:9> has_else
|   |   |                                                                                               |-BinaryOperator 0x13afbcb67e8 <line:1245:20, col:58> 'int' '=='
|   |   |                                                                                               | |-CallExpr 0x13afbcb6730 <col:20, col:53> 'int'
|   |   |                                                                                               | | |-ImplicitCastExpr 0x13afbcb6718 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                               | | | `-DeclRefExpr 0x13afbcb6648 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                               | | |-ImplicitCastExpr 0x13afbcb6778 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                               | | | `-ImplicitCastExpr 0x13afbcb6760 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                               | | |   `-UnaryOperator 0x13afbcb66a0 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                               | | |     `-ImplicitCastExpr 0x13afbcb6688 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                               | | |       `-DeclRefExpr 0x13afbcb6668 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                               | | `-ImplicitCastExpr 0x13afbcb67a8 <col:34> 'const char *' <NoOp>
|   |   |                                                                                               | |   `-ImplicitCastExpr 0x13afbcb6790 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                               | |     `-StringLiteral 0x13afbcb66b8 <col:34> 'char [18]' lvalue "-should_negotiate"
|   |   |                                                                                               | `-IntegerLiteral 0x13afbcb67c0 <col:58> 'int' 0
|   |   |                                                                                               |-CompoundStmt 0x13afbcb6998 <col:61, line:1249:9>
|   |   |                                                                                               | |-IfStmt 0x13afbcb68a0 <line:1246:13, line:1247:22>
|   |   |                                                                                               | | |-BinaryOperator 0x13afbcb6868 <line:1246:17, col:26> 'int' '<'
|   |   |                                                                                               | | | |-UnaryOperator 0x13afbcb6828 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                               | | | | `-DeclRefExpr 0x13afbcb6808 <col:19> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |   |                                                                                               | | | `-IntegerLiteral 0x13afbcb6840 <col:26> 'int' 1
|   |   |                                                                                               | | `-GotoStmt 0x13afbcb6888 <line:1247:17, col:22> 'bad' 0x13afbcb4e28
|   |   |                                                                                               | `-BinaryOperator 0x13afbcb6978 <line:1248:13, col:40> 'const char *' '='
|   |   |                                                                                               |   |-DeclRefExpr 0x13afbcb68b8 <col:13> 'const char *' lvalue Var 0x13afbc8b618 'should_negotiate' 'const char *'
|   |   |                                                                                               |   `-ImplicitCastExpr 0x13afbcb6960 <col:32, col:40> 'const char *' <NoOp>
|   |   |                                                                                               |     `-ImplicitCastExpr 0x13afbcb6948 <col:32, col:40> 'char *' <LValueToRValue>
|   |   |                                                                                               |       `-UnaryOperator 0x13afbcb6930 <col:32, col:40> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                               |         `-ParenExpr 0x13afbcb6910 <col:33, col:40> 'char **':'char **'
|   |   |                                                                                               |           `-UnaryOperator 0x13afbcb68f8 <col:34, col:36> 'char **':'char **' prefix '++'
|   |   |                                                                                               |             `-DeclRefExpr 0x13afbcb68d8 <col:36> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                               `-IfStmt 0x13afbcb7de0 <line:1249:16, line:1319:9> has_else
|   |   |                                                                                                 |-BinaryOperator 0x13afbcb6b50 <line:1249:20, col:51> 'int' '=='
|   |   |                                                                                                 | |-CallExpr 0x13afbcb6a98 <col:20, col:46> 'int'
|   |   |                                                                                                 | | |-ImplicitCastExpr 0x13afbcb6a80 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                                 | | | `-DeclRefExpr 0x13afbcb69b8 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                                 | | |-ImplicitCastExpr 0x13afbcb6ae0 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                                 | | | `-ImplicitCastExpr 0x13afbcb6ac8 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                                 | | |   `-UnaryOperator 0x13afbcb6a10 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                 | | |     `-ImplicitCastExpr 0x13afbcb69f8 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                                 | | |       `-DeclRefExpr 0x13afbcb69d8 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                                 | | `-ImplicitCastExpr 0x13afbcb6b10 <col:34> 'const char *' <NoOp>
|   |   |                                                                                                 | |   `-ImplicitCastExpr 0x13afbcb6af8 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                                 | |     `-StringLiteral 0x13afbcb6a28 <col:34> 'char [11]' lvalue "-sn_client"
|   |   |                                                                                                 | `-IntegerLiteral 0x13afbcb6b28 <col:51> 'int' 0
|   |   |                                                                                                 |-CompoundStmt 0x13afbcb6d00 <col:54, line:1253:9>
|   |   |                                                                                                 | |-IfStmt 0x13afbcb6c08 <line:1250:13, line:1251:22>
|   |   |                                                                                                 | | |-BinaryOperator 0x13afbcb6bd0 <line:1250:17, col:26> 'int' '<'
|   |   |                                                                                                 | | | |-UnaryOperator 0x13afbcb6b90 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                                 | | | | `-DeclRefExpr 0x13afbcb6b70 <col:19> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |   |                                                                                                 | | | `-IntegerLiteral 0x13afbcb6ba8 <col:26> 'int' 1
|   |   |                                                                                                 | | `-GotoStmt 0x13afbcb6bf0 <line:1251:17, col:22> 'bad' 0x13afbcb4e28
|   |   |                                                                                                 | `-BinaryOperator 0x13afbcb6ce0 <line:1252:13, col:33> 'const char *' '='
|   |   |                                                                                                 |   |-DeclRefExpr 0x13afbcb6c20 <col:13> 'const char *' lvalue Var 0x13afbc8b6b0 'sn_client' 'const char *'
|   |   |                                                                                                 |   `-ImplicitCastExpr 0x13afbcb6cc8 <col:25, col:33> 'const char *' <NoOp>
|   |   |                                                                                                 |     `-ImplicitCastExpr 0x13afbcb6cb0 <col:25, col:33> 'char *' <LValueToRValue>
|   |   |                                                                                                 |       `-UnaryOperator 0x13afbcb6c98 <col:25, col:33> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                 |         `-ParenExpr 0x13afbcb6c78 <col:26, col:33> 'char **':'char **'
|   |   |                                                                                                 |           `-UnaryOperator 0x13afbcb6c60 <col:27, col:29> 'char **':'char **' prefix '++'
|   |   |                                                                                                 |             `-DeclRefExpr 0x13afbcb6c40 <col:29> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                                 `-IfStmt 0x13afbcb7db8 <line:1253:16, line:1319:9> has_else
|   |   |                                                                                                   |-BinaryOperator 0x13afbcb6eb8 <line:1253:20, col:52> 'int' '=='
|   |   |                                                                                                   | |-CallExpr 0x13afbcb6e00 <col:20, col:47> 'int'
|   |   |                                                                                                   | | |-ImplicitCastExpr 0x13afbcb6de8 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                                   | | | `-DeclRefExpr 0x13afbcb6d20 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                                   | | |-ImplicitCastExpr 0x13afbcb6e48 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                                   | | | `-ImplicitCastExpr 0x13afbcb6e30 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                                   | | |   `-UnaryOperator 0x13afbcb6d78 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                   | | |     `-ImplicitCastExpr 0x13afbcb6d60 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                                   | | |       `-DeclRefExpr 0x13afbcb6d40 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                                   | | `-ImplicitCastExpr 0x13afbcb6e78 <col:34> 'const char *' <NoOp>
|   |   |                                                                                                   | |   `-ImplicitCastExpr 0x13afbcb6e60 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                                   | |     `-StringLiteral 0x13afbcb6d90 <col:34> 'char [12]' lvalue "-sn_server1"
|   |   |                                                                                                   | `-IntegerLiteral 0x13afbcb6e90 <col:52> 'int' 0
|   |   |                                                                                                   |-CompoundStmt 0x13afbcb7068 <col:55, line:1257:9>
|   |   |                                                                                                   | |-IfStmt 0x13afbcb6f70 <line:1254:13, line:1255:22>
|   |   |                                                                                                   | | |-BinaryOperator 0x13afbcb6f38 <line:1254:17, col:26> 'int' '<'
|   |   |                                                                                                   | | | |-UnaryOperator 0x13afbcb6ef8 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                                   | | | | `-DeclRefExpr 0x13afbcb6ed8 <col:19> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |   |                                                                                                   | | | `-IntegerLiteral 0x13afbcb6f10 <col:26> 'int' 1
|   |   |                                                                                                   | | `-GotoStmt 0x13afbcb6f58 <line:1255:17, col:22> 'bad' 0x13afbcb4e28
|   |   |                                                                                                   | `-BinaryOperator 0x13afbcb7048 <line:1256:13, col:34> 'const char *' '='
|   |   |                                                                                                   |   |-DeclRefExpr 0x13afbcb6f88 <col:13> 'const char *' lvalue Var 0x13afbc8b748 'sn_server1' 'const char *'
|   |   |                                                                                                   |   `-ImplicitCastExpr 0x13afbcb7030 <col:26, col:34> 'const char *' <NoOp>
|   |   |                                                                                                   |     `-ImplicitCastExpr 0x13afbcb7018 <col:26, col:34> 'char *' <LValueToRValue>
|   |   |                                                                                                   |       `-UnaryOperator 0x13afbcb7000 <col:26, col:34> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                   |         `-ParenExpr 0x13afbcb6fe0 <col:27, col:34> 'char **':'char **'
|   |   |                                                                                                   |           `-UnaryOperator 0x13afbcb6fc8 <col:28, col:30> 'char **':'char **' prefix '++'
|   |   |                                                                                                   |             `-DeclRefExpr 0x13afbcb6fa8 <col:30> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                                   `-IfStmt 0x13afbcb7d90 <line:1257:16, line:1319:9> has_else
|   |   |                                                                                                     |-BinaryOperator 0x13afbcaf208 <line:1257:20, col:52> 'int' '=='
|   |   |                                                                                                     | |-CallExpr 0x13afbcaf150 <col:20, col:47> 'int'
|   |   |                                                                                                     | | |-ImplicitCastExpr 0x13afbcb7150 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                                     | | | `-DeclRefExpr 0x13afbcb7088 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                                     | | |-ImplicitCastExpr 0x13afbcaf198 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                                     | | | `-ImplicitCastExpr 0x13afbcaf180 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                                     | | |   `-UnaryOperator 0x13afbcb70e0 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                     | | |     `-ImplicitCastExpr 0x13afbcb70c8 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                                     | | |       `-DeclRefExpr 0x13afbcb70a8 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                                     | | `-ImplicitCastExpr 0x13afbcaf1c8 <col:34> 'const char *' <NoOp>
|   |   |                                                                                                     | |   `-ImplicitCastExpr 0x13afbcaf1b0 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                                     | |     `-StringLiteral 0x13afbcb70f8 <col:34> 'char [12]' lvalue "-sn_server2"
|   |   |                                                                                                     | `-IntegerLiteral 0x13afbcaf1e0 <col:52> 'int' 0
|   |   |                                                                                                     |-CompoundStmt 0x13afbcaf3b8 <col:55, line:1261:9>
|   |   |                                                                                                     | |-IfStmt 0x13afbcaf2c0 <line:1258:13, line:1259:22>
|   |   |                                                                                                     | | |-BinaryOperator 0x13afbcaf288 <line:1258:17, col:26> 'int' '<'
|   |   |                                                                                                     | | | |-UnaryOperator 0x13afbcaf248 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                                     | | | | `-DeclRefExpr 0x13afbcaf228 <col:19> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |   |                                                                                                     | | | `-IntegerLiteral 0x13afbcaf260 <col:26> 'int' 1
|   |   |                                                                                                     | | `-GotoStmt 0x13afbcaf2a8 <line:1259:17, col:22> 'bad' 0x13afbcb4e28
|   |   |                                                                                                     | `-BinaryOperator 0x13afbcaf398 <line:1260:13, col:34> 'const char *' '='
|   |   |                                                                                                     |   |-DeclRefExpr 0x13afbcaf2d8 <col:13> 'const char *' lvalue Var 0x13afbc8b7e0 'sn_server2' 'const char *'
|   |   |                                                                                                     |   `-ImplicitCastExpr 0x13afbcaf380 <col:26, col:34> 'const char *' <NoOp>
|   |   |                                                                                                     |     `-ImplicitCastExpr 0x13afbcaf368 <col:26, col:34> 'char *' <LValueToRValue>
|   |   |                                                                                                     |       `-UnaryOperator 0x13afbcaf350 <col:26, col:34> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                     |         `-ParenExpr 0x13afbcaf330 <col:27, col:34> 'char **':'char **'
|   |   |                                                                                                     |           `-UnaryOperator 0x13afbcaf318 <col:28, col:30> 'char **':'char **' prefix '++'
|   |   |                                                                                                     |             `-DeclRefExpr 0x13afbcaf2f8 <col:30> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                                     `-IfStmt 0x13afbcb7d68 <line:1261:16, line:1319:9> has_else
|   |   |                                                                                                       |-BinaryOperator 0x13afbcaf570 <line:1261:20, col:52> 'int' '=='
|   |   |                                                                                                       | |-CallExpr 0x13afbcaf4b8 <col:20, col:47> 'int'
|   |   |                                                                                                       | | |-ImplicitCastExpr 0x13afbcaf4a0 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                                       | | | `-DeclRefExpr 0x13afbcaf3d8 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                                       | | |-ImplicitCastExpr 0x13afbcaf500 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                                       | | | `-ImplicitCastExpr 0x13afbcaf4e8 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                                       | | |   `-UnaryOperator 0x13afbcaf430 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                       | | |     `-ImplicitCastExpr 0x13afbcaf418 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                                       | | |       `-DeclRefExpr 0x13afbcaf3f8 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                                       | | `-ImplicitCastExpr 0x13afbcaf530 <col:34> 'const char *' <NoOp>
|   |   |                                                                                                       | |   `-ImplicitCastExpr 0x13afbcaf518 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                                       | |     `-StringLiteral 0x13afbcaf448 <col:34> 'char [12]' lvalue "-sn_expect1"
|   |   |                                                                                                       | `-IntegerLiteral 0x13afbcaf548 <col:52> 'int' 0
|   |   |                                                                                                       |-CompoundStmt 0x13afbcaf5f8 <col:55, line:1263:9>
|   |   |                                                                                                       | `-BinaryOperator 0x13afbcaf5d8 <line:1262:13, col:25> 'int' '='
|   |   |                                                                                                       |   |-DeclRefExpr 0x13afbcaf590 <col:13> 'int' lvalue Var 0x13afbc8b878 'sn_expect' 'int'
|   |   |                                                                                                       |   `-IntegerLiteral 0x13afbcaf5b0 <col:25> 'int' 1
|   |   |                                                                                                       `-IfStmt 0x13afbcb7d40 <line:1263:16, line:1319:9> has_else
|   |   |                                                                                                         |-BinaryOperator 0x13afbcaf7a8 <line:1263:20, col:52> 'int' '=='
|   |   |                                                                                                         | |-CallExpr 0x13afbcaf6f0 <col:20, col:47> 'int'
|   |   |                                                                                                         | | |-ImplicitCastExpr 0x13afbcaf6d8 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                                         | | | `-DeclRefExpr 0x13afbcaf610 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                                         | | |-ImplicitCastExpr 0x13afbcaf738 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                                         | | | `-ImplicitCastExpr 0x13afbcaf720 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                                         | | |   `-UnaryOperator 0x13afbcaf668 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                         | | |     `-ImplicitCastExpr 0x13afbcaf650 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                                         | | |       `-DeclRefExpr 0x13afbcaf630 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                                         | | `-ImplicitCastExpr 0x13afbcaf768 <col:34> 'const char *' <NoOp>
|   |   |                                                                                                         | |   `-ImplicitCastExpr 0x13afbcaf750 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                                         | |     `-StringLiteral 0x13afbcaf680 <col:34> 'char [12]' lvalue "-sn_expect2"
|   |   |                                                                                                         | `-IntegerLiteral 0x13afbcaf780 <col:52> 'int' 0
|   |   |                                                                                                         |-CompoundStmt 0x13afbcaf830 <col:55, line:1265:9>
|   |   |                                                                                                         | `-BinaryOperator 0x13afbcaf810 <line:1264:13, col:25> 'int' '='
|   |   |                                                                                                         |   |-DeclRefExpr 0x13afbcaf7c8 <col:13> 'int' lvalue Var 0x13afbc8b878 'sn_expect' 'int'
|   |   |                                                                                                         |   `-IntegerLiteral 0x13afbcaf7e8 <col:25> 'int' 2
|   |   |                                                                                                         `-IfStmt 0x13afbcb7d18 <line:1265:16, line:1319:9> has_else
|   |   |                                                                                                           |-BinaryOperator 0x13afbcaf9e0 <line:1265:20, col:57> 'int' '=='
|   |   |                                                                                                           | |-CallExpr 0x13afbcaf928 <col:20, col:52> 'int'
|   |   |                                                                                                           | | |-ImplicitCastExpr 0x13afbcaf910 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                                           | | | `-DeclRefExpr 0x13afbcaf848 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                                           | | |-ImplicitCastExpr 0x13afbcaf970 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                                           | | | `-ImplicitCastExpr 0x13afbcaf958 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                                           | | |   `-UnaryOperator 0x13afbcaf8a0 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                           | | |     `-ImplicitCastExpr 0x13afbcaf888 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                                           | | |       `-DeclRefExpr 0x13afbcaf868 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                                           | | `-ImplicitCastExpr 0x13afbcaf9a0 <col:34> 'const char *' <NoOp>
|   |   |                                                                                                           | |   `-ImplicitCastExpr 0x13afbcaf988 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                                           | |     `-StringLiteral 0x13afbcaf8b8 <col:34> 'char [17]' lvalue "-server_sess_out"
|   |   |                                                                                                           | `-IntegerLiteral 0x13afbcaf9b8 <col:57> 'int' 0
|   |   |                                                                                                           |-CompoundStmt 0x13afbcafb90 <col:60, line:1269:9>
|   |   |                                                                                                           | |-IfStmt 0x13afbcafa98 <line:1266:13, line:1267:22>
|   |   |                                                                                                           | | |-BinaryOperator 0x13afbcafa60 <line:1266:17, col:26> 'int' '<'
|   |   |                                                                                                           | | | |-UnaryOperator 0x13afbcafa20 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                                           | | | | `-DeclRefExpr 0x13afbcafa00 <col:19> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |   |                                                                                                           | | | `-IntegerLiteral 0x13afbcafa38 <col:26> 'int' 1
|   |   |                                                                                                           | | `-GotoStmt 0x13afbcafa80 <line:1267:17, col:22> 'bad' 0x13afbcb4e28
|   |   |                                                                                                           | `-BinaryOperator 0x13afbcafb70 <line:1268:13, col:39> 'const char *' '='
|   |   |                                                                                                           |   |-DeclRefExpr 0x13afbcafab0 <col:13> 'const char *' lvalue Var 0x13afbc8b938 'server_sess_out' 'const char *'
|   |   |                                                                                                           |   `-ImplicitCastExpr 0x13afbcafb58 <col:31, col:39> 'const char *' <NoOp>
|   |   |                                                                                                           |     `-ImplicitCastExpr 0x13afbcafb40 <col:31, col:39> 'char *' <LValueToRValue>
|   |   |                                                                                                           |       `-UnaryOperator 0x13afbcafb28 <col:31, col:39> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                           |         `-ParenExpr 0x13afbcafb08 <col:32, col:39> 'char **':'char **'
|   |   |                                                                                                           |           `-UnaryOperator 0x13afbcafaf0 <col:33, col:35> 'char **':'char **' prefix '++'
|   |   |                                                                                                           |             `-DeclRefExpr 0x13afbcafad0 <col:35> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                                           `-IfStmt 0x13afbcb7cf0 <line:1269:16, line:1319:9> has_else
|   |   |                                                                                                             |-BinaryOperator 0x13afbcafd48 <line:1269:20, col:56> 'int' '=='
|   |   |                                                                                                             | |-CallExpr 0x13afbcafc90 <col:20, col:51> 'int'
|   |   |                                                                                                             | | |-ImplicitCastExpr 0x13afbcafc78 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                                             | | | `-DeclRefExpr 0x13afbcafbb0 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                                             | | |-ImplicitCastExpr 0x13afbcafcd8 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                                             | | | `-ImplicitCastExpr 0x13afbcafcc0 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                                             | | |   `-UnaryOperator 0x13afbcafc08 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                             | | |     `-ImplicitCastExpr 0x13afbcafbf0 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                                             | | |       `-DeclRefExpr 0x13afbcafbd0 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                                             | | `-ImplicitCastExpr 0x13afbcafd08 <col:34> 'const char *' <NoOp>
|   |   |                                                                                                             | |   `-ImplicitCastExpr 0x13afbcafcf0 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                                             | |     `-StringLiteral 0x13afbcafc20 <col:34> 'char [16]' lvalue "-server_sess_in"
|   |   |                                                                                                             | `-IntegerLiteral 0x13afbcafd20 <col:56> 'int' 0
|   |   |                                                                                                             |-CompoundStmt 0x13afbcafef8 <col:59, line:1273:9>
|   |   |                                                                                                             | |-IfStmt 0x13afbcafe00 <line:1270:13, line:1271:22>
|   |   |                                                                                                             | | |-BinaryOperator 0x13afbcafdc8 <line:1270:17, col:26> 'int' '<'
|   |   |                                                                                                             | | | |-UnaryOperator 0x13afbcafd88 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                                             | | | | `-DeclRefExpr 0x13afbcafd68 <col:19> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |   |                                                                                                             | | | `-IntegerLiteral 0x13afbcafda0 <col:26> 'int' 1
|   |   |                                                                                                             | | `-GotoStmt 0x13afbcafde8 <line:1271:17, col:22> 'bad' 0x13afbcb4e28
|   |   |                                                                                                             | `-BinaryOperator 0x13afbcafed8 <line:1272:13, col:38> 'const char *' '='
|   |   |                                                                                                             |   |-DeclRefExpr 0x13afbcafe18 <col:13> 'const char *' lvalue Var 0x13afbc8b9d0 'server_sess_in' 'const char *'
|   |   |                                                                                                             |   `-ImplicitCastExpr 0x13afbcafec0 <col:30, col:38> 'const char *' <NoOp>
|   |   |                                                                                                             |     `-ImplicitCastExpr 0x13afbcafea8 <col:30, col:38> 'char *' <LValueToRValue>
|   |   |                                                                                                             |       `-UnaryOperator 0x13afbcafe90 <col:30, col:38> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                             |         `-ParenExpr 0x13afbcafe70 <col:31, col:38> 'char **':'char **'
|   |   |                                                                                                             |           `-UnaryOperator 0x13afbcafe58 <col:32, col:34> 'char **':'char **' prefix '++'
|   |   |                                                                                                             |             `-DeclRefExpr 0x13afbcafe38 <col:34> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                                             `-IfStmt 0x13afbcb7cc8 <line:1273:16, line:1319:9> has_else
|   |   |                                                                                                               |-BinaryOperator 0x13afbcb00b0 <line:1273:20, col:57> 'int' '=='
|   |   |                                                                                                               | |-CallExpr 0x13afbcafff8 <col:20, col:52> 'int'
|   |   |                                                                                                               | | |-ImplicitCastExpr 0x13afbcaffe0 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                                               | | | `-DeclRefExpr 0x13afbcaff18 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                                               | | |-ImplicitCastExpr 0x13afbcb0040 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                                               | | | `-ImplicitCastExpr 0x13afbcb0028 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                                               | | |   `-UnaryOperator 0x13afbcaff70 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                               | | |     `-ImplicitCastExpr 0x13afbcaff58 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                                               | | |       `-DeclRefExpr 0x13afbcaff38 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                                               | | `-ImplicitCastExpr 0x13afbcb0070 <col:34> 'const char *' <NoOp>
|   |   |                                                                                                               | |   `-ImplicitCastExpr 0x13afbcb0058 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                                               | |     `-StringLiteral 0x13afbcaff88 <col:34> 'char [17]' lvalue "-client_sess_out"
|   |   |                                                                                                               | `-IntegerLiteral 0x13afbcb0088 <col:57> 'int' 0
|   |   |                                                                                                               |-CompoundStmt 0x13afbcb0260 <col:60, line:1277:9>
|   |   |                                                                                                               | |-IfStmt 0x13afbcb0168 <line:1274:13, line:1275:22>
|   |   |                                                                                                               | | |-BinaryOperator 0x13afbcb0130 <line:1274:17, col:26> 'int' '<'
|   |   |                                                                                                               | | | |-UnaryOperator 0x13afbcb00f0 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                                               | | | | `-DeclRefExpr 0x13afbcb00d0 <col:19> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |   |                                                                                                               | | | `-IntegerLiteral 0x13afbcb0108 <col:26> 'int' 1
|   |   |                                                                                                               | | `-GotoStmt 0x13afbcb0150 <line:1275:17, col:22> 'bad' 0x13afbcb4e28
|   |   |                                                                                                               | `-BinaryOperator 0x13afbcb0240 <line:1276:13, col:39> 'const char *' '='
|   |   |                                                                                                               |   |-DeclRefExpr 0x13afbcb0180 <col:13> 'const char *' lvalue Var 0x13afbc8ba68 'client_sess_out' 'const char *'
|   |   |                                                                                                               |   `-ImplicitCastExpr 0x13afbcb0228 <col:31, col:39> 'const char *' <NoOp>
|   |   |                                                                                                               |     `-ImplicitCastExpr 0x13afbcb0210 <col:31, col:39> 'char *' <LValueToRValue>
|   |   |                                                                                                               |       `-UnaryOperator 0x13afbcb01f8 <col:31, col:39> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                               |         `-ParenExpr 0x13afbcb01d8 <col:32, col:39> 'char **':'char **'
|   |   |                                                                                                               |           `-UnaryOperator 0x13afbcb01c0 <col:33, col:35> 'char **':'char **' prefix '++'
|   |   |                                                                                                               |             `-DeclRefExpr 0x13afbcb01a0 <col:35> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                                               `-IfStmt 0x13afbcb7ca0 <line:1277:16, line:1319:9> has_else
|   |   |                                                                                                                 |-BinaryOperator 0x13afbcb0418 <line:1277:20, col:56> 'int' '=='
|   |   |                                                                                                                 | |-CallExpr 0x13afbcb0360 <col:20, col:51> 'int'
|   |   |                                                                                                                 | | |-ImplicitCastExpr 0x13afbcb0348 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                                                 | | | `-DeclRefExpr 0x13afbcb0280 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                                                 | | |-ImplicitCastExpr 0x13afbcb03a8 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                                                 | | | `-ImplicitCastExpr 0x13afbcb0390 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                                                 | | |   `-UnaryOperator 0x13afbcb02d8 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                                 | | |     `-ImplicitCastExpr 0x13afbcb02c0 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                                                 | | |       `-DeclRefExpr 0x13afbcb02a0 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                                                 | | `-ImplicitCastExpr 0x13afbcb03d8 <col:34> 'const char *' <NoOp>
|   |   |                                                                                                                 | |   `-ImplicitCastExpr 0x13afbcb03c0 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                                                 | |     `-StringLiteral 0x13afbcb02f0 <col:34> 'char [16]' lvalue "-client_sess_in"
|   |   |                                                                                                                 | `-IntegerLiteral 0x13afbcb03f0 <col:56> 'int' 0
|   |   |                                                                                                                 |-CompoundStmt 0x13afbcb05c8 <col:59, line:1281:9>
|   |   |                                                                                                                 | |-IfStmt 0x13afbcb04d0 <line:1278:13, line:1279:22>
|   |   |                                                                                                                 | | |-BinaryOperator 0x13afbcb0498 <line:1278:17, col:26> 'int' '<'
|   |   |                                                                                                                 | | | |-UnaryOperator 0x13afbcb0458 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                                                 | | | | `-DeclRefExpr 0x13afbcb0438 <col:19> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |   |                                                                                                                 | | | `-IntegerLiteral 0x13afbcb0470 <col:26> 'int' 1
|   |   |                                                                                                                 | | `-GotoStmt 0x13afbcb04b8 <line:1279:17, col:22> 'bad' 0x13afbcb4e28
|   |   |                                                                                                                 | `-BinaryOperator 0x13afbcb05a8 <line:1280:13, col:38> 'const char *' '='
|   |   |                                                                                                                 |   |-DeclRefExpr 0x13afbcb04e8 <col:13> 'const char *' lvalue Var 0x13afbc8bb00 'client_sess_in' 'const char *'
|   |   |                                                                                                                 |   `-ImplicitCastExpr 0x13afbcb0590 <col:30, col:38> 'const char *' <NoOp>
|   |   |                                                                                                                 |     `-ImplicitCastExpr 0x13afbcb0578 <col:30, col:38> 'char *' <LValueToRValue>
|   |   |                                                                                                                 |       `-UnaryOperator 0x13afbcb0560 <col:30, col:38> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                                 |         `-ParenExpr 0x13afbcb0540 <col:31, col:38> 'char **':'char **'
|   |   |                                                                                                                 |           `-UnaryOperator 0x13afbcb0528 <col:32, col:34> 'char **':'char **' prefix '++'
|   |   |                                                                                                                 |             `-DeclRefExpr 0x13afbcb0508 <col:34> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                                                 `-IfStmt 0x13afbcb7c78 <line:1281:16, line:1319:9> has_else
|   |   |                                                                                                                   |-BinaryOperator 0x13afbcb0780 <line:1281:20, col:54> 'int' '=='
|   |   |                                                                                                                   | |-CallExpr 0x13afbcb06c8 <col:20, col:49> 'int'
|   |   |                                                                                                                   | | |-ImplicitCastExpr 0x13afbcb06b0 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                                                   | | | `-DeclRefExpr 0x13afbcb05e8 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                                                   | | |-ImplicitCastExpr 0x13afbcb0710 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                                                   | | | `-ImplicitCastExpr 0x13afbcb06f8 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                                                   | | |   `-UnaryOperator 0x13afbcb0640 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                                   | | |     `-ImplicitCastExpr 0x13afbcb0628 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                                                   | | |       `-DeclRefExpr 0x13afbcb0608 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                                                   | | `-ImplicitCastExpr 0x13afbcb0740 <col:34> 'const char *' <NoOp>
|   |   |                                                                                                                   | |   `-ImplicitCastExpr 0x13afbcb0728 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                                                   | |     `-StringLiteral 0x13afbcb0658 <col:34> 'char [14]' lvalue "-should_reuse"
|   |   |                                                                                                                   | `-IntegerLiteral 0x13afbcb0758 <col:54> 'int' 0
|   |   |                                                                                                                   |-CompoundStmt 0x13afbcb09d8 <col:57, line:1285:9>
|   |   |                                                                                                                   | |-IfStmt 0x13afbcb0838 <line:1282:13, line:1283:22>
|   |   |                                                                                                                   | | |-BinaryOperator 0x13afbcb0800 <line:1282:17, col:26> 'int' '<'
|   |   |                                                                                                                   | | | |-UnaryOperator 0x13afbcb07c0 <col:17, col:19> 'int' prefix '--'
|   |   |                                                                                                                   | | | | `-DeclRefExpr 0x13afbcb07a0 <col:19> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |   |                                                                                                                   | | | `-IntegerLiteral 0x13afbcb07d8 <col:26> 'int' 1
|   |   |                                                                                                                   | | `-GotoStmt 0x13afbcb0820 <line:1283:17, col:22> 'bad' 0x13afbcb4e28
|   |   |                                                                                                                   | `-BinaryOperator 0x13afbcb09b8 <line:1284:13, col:44> 'int' '='
|   |   |                                                                                                                   |   |-DeclRefExpr 0x13afbcb0850 <col:13> 'int' lvalue Var 0x13afbc9a548 'should_reuse' 'int'
|   |   |                                                                                                                   |   `-UnaryOperator 0x13afbcb09a0 <col:28, col:44> 'int' prefix '!' cannot overflow
|   |   |                                                                                                                   |     `-UnaryOperator 0x13afbcb0988 <col:29, col:44> 'int' prefix '!' cannot overflow
|   |   |                                                                                                                   |       `-CallExpr 0x13afbcb0930 <col:30, col:44> 'int'
|   |   |                                                                                                                   |         |-ImplicitCastExpr 0x13afbcb0918 <col:30> 'int (*)(const char *) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |                                                                                                                   |         | `-DeclRefExpr 0x13afbcb0888 <col:30> 'int (const char *) __attribute__((cdecl))':'int (const char *)' Function 0x13afbc3e640 'atoi' 'int (const char *) __attribute__((cdecl))':'int (const char *)'
|   |   |                                                                                                                   |         `-ImplicitCastExpr 0x13afbcb0970 <col:35, col:43> 'const char *' <NoOp>
|   |   |                                                                                                                   |           `-ImplicitCastExpr 0x13afbcb0958 <col:35, col:43> 'char *' <LValueToRValue>
|   |   |                                                                                                                   |             `-UnaryOperator 0x13afbcb0900 <col:35, col:43> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                                   |               `-ParenExpr 0x13afbcb08e0 <col:36, col:43> 'char **':'char **'
|   |   |                                                                                                                   |                 `-UnaryOperator 0x13afbcb08c8 <col:37, col:39> 'char **':'char **' prefix '++'
|   |   |                                                                                                                   |                   `-DeclRefExpr 0x13afbcb08a8 <col:39> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                                                   `-IfStmt 0x13afbcb7c50 <line:1285:16, line:1319:9> has_else
|   |   |                                                                                                                     |-BinaryOperator 0x13afbcb0b90 <line:1285:20, col:51> 'int' '=='
|   |   |                                                                                                                     | |-CallExpr 0x13afbcb0ad8 <col:20, col:46> 'int'
|   |   |                                                                                                                     | | |-ImplicitCastExpr 0x13afbcb0ac0 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |                                                                                                                     | | | `-DeclRefExpr 0x13afbcb09f8 <col:20> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |                                                                                                                     | | |-ImplicitCastExpr 0x13afbcb0b20 <col:27, col:28> 'const char *' <NoOp>
|   |   |                                                                                                                     | | | `-ImplicitCastExpr 0x13afbcb0b08 <col:27, col:28> 'char *' <LValueToRValue>
|   |   |                                                                                                                     | | |   `-UnaryOperator 0x13afbcb0a50 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
|   |   |                                                                                                                     | | |     `-ImplicitCastExpr 0x13afbcb0a38 <col:28> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                                                     | | |       `-DeclRefExpr 0x13afbcb0a18 <col:28> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                                                     | | `-ImplicitCastExpr 0x13afbcb0b50 <col:34> 'const char *' <NoOp>
|   |   |                                                                                                                     | |   `-ImplicitCastExpr 0x13afbcb0b38 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |                                                                                                                     | |     `-StringLiteral 0x13afbcb0a68 <col:34> 'char [11]' lvalue "-no_ticket"
|   |   |                                                                                                                     | `-IntegerLiteral 0x13afbcb0b68 <col:51> 'int' 0
|   |   |                                                                                                                     |-CompoundStmt 0x13afbcb0c30 <col:54, line:1287:9>
|   |   |                                                                                                                     | `-BinaryOperator 0x13afbcb0c10 <line:1286:13, col:25> 'int' '='
|   |   |                                                                                                                     |   |-DeclRefExpr 0x13afbcb0bb0 <col:13> 'int' lvalue Var 0x13afbc9a620 'no_ticket' 'int'
|   |   |                                                                                                                     |   `-IntegerLiteral 0x13afbcb0be8 <col:25> 'int' 1
|   |   |                                                                                                                     `-CompoundStmt 0x13afbcb7c10 <line:1287:16, line:1319:9>
|   |   |                                                                                                                       |-DeclStmt 0x13afbcb0cc8 <line:1288:13, col:19>
|   |   |                                                                                                                       | `-VarDecl 0x13afbcb0c60 <col:13, col:17> col:17 used rv 'int'
|   |   |                                                                                                                       |-BinaryOperator 0x13afbcb0db0 <line:1289:13, col:25> 'char *' '='
|   |   |                                                                                                                       | |-DeclRefExpr 0x13afbcb0ce0 <col:13> 'char *' lvalue Var 0x13afbcadb78 'arg' 'char *'
|   |   |                                                                                                                       | `-ImplicitCastExpr 0x13afbcb0d98 <col:19, col:25> 'char *' <LValueToRValue>
|   |   |                                                                                                                       |   `-ArraySubscriptExpr 0x13afbcb0d78 <col:19, col:25> 'char *' lvalue
|   |   |                                                                                                                       |     |-ImplicitCastExpr 0x13afbcb0d60 <col:19> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                                                       |     | `-DeclRefExpr 0x13afbcb0d18 <col:19> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                                                       |     `-IntegerLiteral 0x13afbcb0d38 <col:24> 'int' 0
|   |   |                                                                                                                       |-BinaryOperator 0x13afbcb0ea0 <line:1290:13, col:26> 'char *' '='
|   |   |                                                                                                                       | |-DeclRefExpr 0x13afbcb0dd0 <col:13> 'char *' lvalue Var 0x13afbcadc98 'argn' 'char *'
|   |   |                                                                                                                       | `-ImplicitCastExpr 0x13afbcb0e88 <col:20, col:26> 'char *' <LValueToRValue>
|   |   |                                                                                                                       |   `-ArraySubscriptExpr 0x13afbcb0e68 <col:20, col:26> 'char *' lvalue
|   |   |                                                                                                                       |     |-ImplicitCastExpr 0x13afbcb0e50 <col:20> 'char **':'char **' <LValueToRValue>
|   |   |                                                                                                                       |     | `-DeclRefExpr 0x13afbcb0e08 <col:20> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |   |                                                                                                                       |     `-IntegerLiteral 0x13afbcb0e28 <col:25> 'int' 1
|   |   |                                                                                                                       |-IfStmt 0x13afbcb7850 <line:1297:13, line:1310:13>
|   |   |                                                                                                                       | |-BinaryOperator 0x13afbcb72a0 <line:1297:17, col:22> 'int' '>'
|   |   |                                                                                                                       | | |-ImplicitCastExpr 0x13afbcb7288 <col:17> 'int' <LValueToRValue>
|   |   |                                                                                                                       | | | `-DeclRefExpr 0x13afbcb7240 <col:17> 'int' lvalue Var 0x13afbcb0c60 'rv' 'int'
|   |   |                                                                                                                       | | `-IntegerLiteral 0x13afbcb7260 <col:22> 'int' 0
|   |   |                                                                                                                       | `-CompoundStmt 0x13afbcb7818 <col:25, line:1310:13>
|   |   |                                                                                                                       |   |-IfStmt 0x13afbcb7420 <line:1298:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   |                                                                                                                       |   | |-BinaryOperator 0x13afbcb7320 <.//openssl//file_jk/after\test\ssltest_old.c:1298:21, col:27> 'int' '=='
|   |   |                                                                                                                       |   | | |-ImplicitCastExpr 0x13afbcb7308 <col:21> 'int' <LValueToRValue>
|   |   |                                                                                                                       |   | | | `-DeclRefExpr 0x13afbcb72c0 <col:21> 'int' lvalue Var 0x13afbcb0c60 'rv' 'int'
|   |   |                                                                                                                       |   | | `-IntegerLiteral 0x13afbcb72e0 <col:27> 'int' 1
|   |   |                                                                                                                       |   | `-BinaryOperator 0x13afbcb7400 <line:1299:21, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'char *' '='
|   |   |                                                                                                                       |   |   |-DeclRefExpr 0x13afbcb7340 <.//openssl//file_jk/after\test\ssltest_old.c:1299:21> 'char *' lvalue Var 0x13afbcadc98 'argn' 'char *'
|   |   |                                                                                                                       |   |   `-ImplicitCastExpr 0x13afbcb73e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |   |                                                                                                                       |   |     `-ParenExpr 0x13afbcb73c8 <col:17, col:27> 'void *'
|   |   |                                                                                                                       |   |       `-CStyleCastExpr 0x13afbcb73a0 <col:18, col:26> 'void *' <NullToPointer>
|   |   |                                                                                                                       |   |         `-IntegerLiteral 0x13afbcb7360 <col:26> 'int' 0
|   |   |                                                                                                                       |   |-IfStmt 0x13afbcb75f8 <.//openssl//file_jk/after\test\ssltest_old.c:1300:17, line:1304:17>
|   |   |                                                                                                                       |   | |-OpaqueValueExpr 0x13afbcb75e0 <<invalid sloc>> '_Bool'
|   |   |                                                                                                                       |   | `-CompoundStmt 0x13afbcb75c8 <line:1300:33, line:1304:17>
|   |   |                                                                                                                       |   |   `-IfStmt 0x13afbcb75b0 <line:1302:21, line:1303:30>
|   |   |                                                                                                                       |   |     |-OpaqueValueExpr 0x13afbcb7598 <<invalid sloc>> '_Bool'
|   |   |                                                                                                                       |   |     `-GotoStmt 0x13afbcb7580 <col:25, col:30> 'end' 0x13afbcaecf0
|   |   |                                                                                                                       |   |-IfStmt 0x13afbcb7770 <line:1305:17, line:1306:26>
|   |   |                                                                                                                       |   | |-OpaqueValueExpr 0x13afbcb7758 <<invalid sloc>> '_Bool'
|   |   |                                                                                                                       |   | `-GotoStmt 0x13afbcb7740 <col:21, col:26> 'end' 0x13afbcaecf0
|   |   |                                                                                                                       |   |-IfStmt 0x13afbcb77f8 <line:1307:17, line:1308:26>
|   |   |                                                                                                                       |   | |-OpaqueValueExpr 0x13afbcb77e0 <<invalid sloc>> '_Bool'
|   |   |                                                                                                                       |   | `-GotoStmt 0x13afbcb77c8 <col:21, col:26> 'end' 0x13afbcaecf0
|   |   |                                                                                                                       |   `-ContinueStmt 0x13afbcb7810 <line:1309:17>
|   |   |                                                                                                                       |-BinaryOperator 0x13afbcb7be8 <line:1317:13, col:21> 'int' '='
|   |   |                                                                                                                       | |-DeclRefExpr 0x13afbcb7b88 <col:13> 'int' lvalue Var 0x13afbc99460 'badop' 'int'
|   |   |                                                                                                                       | `-IntegerLiteral 0x13afbcb7bc0 <col:21> 'int' 1
|   |   |                                                                                                                       `-BreakStmt 0x13afbcb7c08 <line:1318:13>
|   |   |-UnaryOperator 0x13afbcb85a8 <line:1320:9, col:13> 'int' postfix '--'
|   |   | `-DeclRefExpr 0x13afbcb8588 <col:9> 'int' lvalue ParmVar 0x13afbca8f30 'argc' 'int'
|   |   `-UnaryOperator 0x13afbcb85e0 <line:1321:9, col:13> 'char **':'char **' postfix '++'
|   |     `-DeclRefExpr 0x13afbcb85c0 <col:9> 'char **':'char **' lvalue ParmVar 0x13afbca9020 'argv' 'char **':'char **'
|   |-IfStmt 0x13afbcb8718 <line:1323:5, line:1327:5>
|   | |-ImplicitCastExpr 0x13afbcb8658 <line:1323:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13afbcb8638 <col:9> 'int' lvalue Var 0x13afbc99460 'badop' 'int'
|   | `-CompoundStmt 0x13afbcb86f8 <col:16, line:1327:5>
|   |   |-LabelStmt 0x13afbcb86c8 <line:1324:2, line:1325:18> 'bad'
|   |   | `-CallExpr 0x13afbcb86a8 <col:9, col:18> 'void'
|   |   |   `-ImplicitCastExpr 0x13afbcb8690 <col:9> 'void (*)(void)' <FunctionToPointerDecay>
|   |   |     `-DeclRefExpr 0x13afbcb8670 <col:9> 'void (void)' Function 0x13afbc978e0 'sv_usage' 'void (void)'
|   |   `-GotoStmt 0x13afbcb86e0 <line:1326:9, col:14> 'end' 0x13afbcaecf0
|   |-IfStmt 0x13afbcb8be8 <line:1329:5, line:1333:5>
|   | |-BinaryOperator 0x13afbcb88f0 <line:1329:9, col:47> 'int' '>'
|   | | |-BinaryOperator 0x13afbcb88a8 <col:9, col:38> 'int' '+'
|   | | | |-BinaryOperator 0x13afbcb8850 <col:9, col:30> 'int' '+'
|   | | | | |-BinaryOperator 0x13afbcb87f8 <col:9, col:23> 'int' '+'
|   | | | | | |-BinaryOperator 0x13afbcb87a0 <col:9, col:16> 'int' '+'
|   | | | | | | |-ImplicitCastExpr 0x13afbcb8770 <col:9> 'int' <LValueToRValue>
|   | | | | | | | `-DeclRefExpr 0x13afbcb8730 <col:9> 'int' lvalue Var 0x13afbc99be0 'ssl3' 'int'
|   | | | | | | `-ImplicitCastExpr 0x13afbcb8788 <col:16> 'int' <LValueToRValue>
|   | | | | | |   `-DeclRefExpr 0x13afbcb8750 <col:16> 'int' lvalue Var 0x13afbc99b38 'tls1' 'int'
|   | | | | | `-ImplicitCastExpr 0x13afbcb87e0 <col:23> 'int' <LValueToRValue>
|   | | | | |   `-DeclRefExpr 0x13afbcb87c0 <col:23> 'int' lvalue Var 0x13afbc99a90 'dtls' 'int'
|   | | | | `-ImplicitCastExpr 0x13afbcb8838 <col:30> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x13afbcb8818 <col:30> 'int' lvalue Var 0x13afbc99940 'dtls1' 'int'
|   | | | `-ImplicitCastExpr 0x13afbcb8890 <col:38> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x13afbcb8870 <col:38> 'int' lvalue Var 0x13afbc999e8 'dtls12' 'int'
|   | | `-IntegerLiteral 0x13afbcb88c8 <col:47> 'int' 1
|   | `-CompoundStmt 0x13afbcb8bc8 <col:50, line:1333:5>
|   |   |-CallExpr 0x13afbcb8ae0 <line:1330:9, line:1331:34> 'int'
|   |   | |-ImplicitCastExpr 0x13afbcb8ac8 <line:1330:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13afbcb8910 <col:9> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x13afbcb89e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x13afbcb89d0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x13afbcb89b0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x13afbcb8968 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x13afbcb8950 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x13afbcb8930 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x13afbcb8988 <col:31> 'int' 2
|   |   | `-ImplicitCastExpr 0x13afbcb8b28 <.//openssl//file_jk/after\test\ssltest_old.c:1330:25, line:1331:17> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x13afbcb8b10 <line:1330:25, line:1331:17> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x13afbcb8a48 <line:1330:25, line:1331:17> 'char [76]' lvalue "At most one of -ssl3, -tls1, -dtls, -dtls1 or -dtls12 should be requested.\n"
|   |   `-CallExpr 0x13afbcb8ba0 <line:1332:9, col:15> 'int'
|   |     |-ImplicitCastExpr 0x13afbcb8b88 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13afbcb8b40 <col:9> 'int ()' Function 0x13afbcb36f8 'EXIT' 'int ()'
|   |     `-IntegerLiteral 0x13afbcb8b60 <col:14> 'int' 1
|   |-BinaryOperator 0x13afbcb8c60 <line:1355:9, col:23> 'int' '='
|   | |-DeclRefExpr 0x13afbcb8c00 <col:9> 'int' lvalue Var 0x13afbcad660 'no_protocol' 'int'
|   | `-IntegerLiteral 0x13afbcb8c38 <col:23> 'int' 0
|   |-IfStmt 0x13afbcb8f60 <line:1362:5, line:1367:5>
|   | |-ImplicitCastExpr 0x13afbcb8ca0 <line:1362:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13afbcb8c80 <col:9> 'int' lvalue Var 0x13afbcad660 'no_protocol' 'int'
|   | `-CompoundStmt 0x13afbcb8f38 <col:22, line:1367:5>
|   |   |-CallExpr 0x13afbcb8e40 <line:1363:9, line:1364:36> 'int'
|   |   | |-ImplicitCastExpr 0x13afbcb8e28 <line:1363:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13afbcb8cb8 <col:9> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x13afbcb8d90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x13afbcb8d78 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x13afbcb8d58 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x13afbcb8d10 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x13afbcb8cf8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x13afbcb8cd8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x13afbcb8d30 <col:31> 'int' 2
|   |   | `-ImplicitCastExpr 0x13afbcb8e88 <.//openssl//file_jk/after\test\ssltest_old.c:1363:25, line:1364:17> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x13afbcb8e70 <line:1363:25, line:1364:17> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x13afbcb8db0 <line:1363:25, line:1364:17> 'char [64]' lvalue "Testing was requested for a disabled protocol. Skipping tests.\n"
|   |   |-BinaryOperator 0x13afbcb8f00 <line:1365:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x13afbcb8ea0 <col:9> 'int' lvalue Var 0x13afbc99c88 'ret' 'int'
|   |   | `-IntegerLiteral 0x13afbcb8ed8 <col:15> 'int' 0
|   |   `-GotoStmt 0x13afbcb8f20 <line:1366:9, col:14> 'end' 0x13afbcaecf0
|   |-IfStmt 0x13afbcab5f8 <line:1369:5, line:1375:5>
|   | |-BinaryOperator 0x13afbcab290 <line:1369:9, col:82> 'int' '&&'
|   | | |-BinaryOperator 0x13afbcab220 <col:9, col:72> 'int' '&&'
|   | | | |-BinaryOperator 0x13afbcab1b0 <col:9, col:66> 'int' '&&'
|   | | | | |-BinaryOperator 0x13afbcb9168 <col:9, col:47> 'int' '&&'
|   | | | | | |-BinaryOperator 0x13afbcb90f8 <col:9, col:37> 'int' '&&'
|   | | | | | | |-BinaryOperator 0x13afbcb9088 <col:9, col:28> 'int' '&&'
|   | | | | | | | |-BinaryOperator 0x13afbcb9018 <col:9, col:19> 'int' '&&'
|   | | | | | | | | |-UnaryOperator 0x13afbcb8fb0 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | | | | | | | `-ImplicitCastExpr 0x13afbcb8f98 <col:10> 'int' <LValueToRValue>
|   | | | | | | | | |   `-DeclRefExpr 0x13afbcb8f78 <col:10> 'int' lvalue Var 0x13afbc99be0 'ssl3' 'int'
|   | | | | | | | | `-UnaryOperator 0x13afbcb9000 <col:18, col:19> 'int' prefix '!' cannot overflow
|   | | | | | | | |   `-ImplicitCastExpr 0x13afbcb8fe8 <col:19> 'int' <LValueToRValue>
|   | | | | | | | |     `-DeclRefExpr 0x13afbcb8fc8 <col:19> 'int' lvalue Var 0x13afbc99b38 'tls1' 'int'
|   | | | | | | | `-UnaryOperator 0x13afbcb9070 <col:27, col:28> 'int' prefix '!' cannot overflow
|   | | | | | | |   `-ImplicitCastExpr 0x13afbcb9058 <col:28> 'int' <LValueToRValue>
|   | | | | | | |     `-DeclRefExpr 0x13afbcb9038 <col:28> 'int' lvalue Var 0x13afbc99a90 'dtls' 'int'
|   | | | | | | `-UnaryOperator 0x13afbcb90e0 <col:36, col:37> 'int' prefix '!' cannot overflow
|   | | | | | |   `-ImplicitCastExpr 0x13afbcb90c8 <col:37> 'int' <LValueToRValue>
|   | | | | | |     `-DeclRefExpr 0x13afbcb90a8 <col:37> 'int' lvalue Var 0x13afbc99940 'dtls1' 'int'
|   | | | | | `-UnaryOperator 0x13afbcb9150 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | | | |   `-ImplicitCastExpr 0x13afbcb9138 <col:47> 'int' <LValueToRValue>
|   | | | | |     `-DeclRefExpr 0x13afbcb9118 <col:47> 'int' lvalue Var 0x13afbc999e8 'dtls12' 'int'
|   | | | | `-BinaryOperator 0x13afbcab190 <col:57, col:66> 'int' '>'
|   | | | |   |-ImplicitCastExpr 0x13afbcab178 <col:57> 'int' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x13afbcab130 <col:57> 'int' lvalue Var 0x13afbc9a3c8 'number' 'int'
|   | | | |   `-IntegerLiteral 0x13afbcab150 <col:66> 'int' 1
|   | | | `-UnaryOperator 0x13afbcab208 <col:71, col:72> 'int' prefix '!' cannot overflow
|   | | |   `-ImplicitCastExpr 0x13afbcab1f0 <col:72> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x13afbcab1d0 <col:72> 'int' lvalue Var 0x13afbc9a470 'reuse' 'int'
|   | | `-UnaryOperator 0x13afbcab278 <col:81, col:82> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x13afbcab260 <col:82> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x13afbcab240 <col:82> 'int' lvalue Var 0x13afbc99880 'force' 'int'
|   | `-CompoundStmt 0x13afbcab5d8 <col:89, line:1375:5>
|   |   |-CallExpr 0x13afbcab4f0 <line:1370:9, line:1373:48> 'int'
|   |   | |-ImplicitCastExpr 0x13afbcab4d8 <line:1370:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13afbcab2b0 <col:9> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x13afbcab388 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x13afbcab370 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x13afbcab350 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x13afbcab308 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x13afbcab2f0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x13afbcab2d0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x13afbcab328 <col:31> 'int' 2
|   |   | `-ImplicitCastExpr 0x13afbcab538 <.//openssl//file_jk/after\test\ssltest_old.c:1370:25, line:1373:17> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x13afbcab520 <line:1370:25, line:1373:17> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x13afbcab3e8 <line:1370:25, line:1373:17> 'char [176]' lvalue "This case cannot work.  Use -f to perform the test anyway (and\n-d to see what happens), or add one of -ssl3, -tls1, -dtls, -dtls1, -dtls12, -reuse\nto avoid protocol mismatch.\n"
|   |   `-CallExpr 0x13afbcab5b0 <line:1374:9, col:15> 'int'
|   |     |-ImplicitCastExpr 0x13afbcab598 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13afbcab550 <col:9> 'int ()' Function 0x13afbcb36f8 'EXIT' 'int ()'
|   |     `-IntegerLiteral 0x13afbcab570 <col:14> 'int' 1
|   |-IfStmt 0x13afbcabc90 <line:1386:5, line:1394:5>
|   | |-ImplicitCastExpr 0x13afbcab630 <line:1386:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13afbcab610 <col:9> 'int' lvalue Var 0x13afbc9afa0 'print_time' 'int'
|   | `-CompoundStmt 0x13afbcabc70 <col:21, line:1394:5>
|   |   |-IfStmt 0x13afbcab930 <line:1387:9, line:1390:9>
|   |   | |-BinaryOperator 0x13afbcab6b8 <line:1387:13, col:25> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x13afbcab6a0 <col:13> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x13afbcab688 <col:13> 'enum (anonymous enum at .//openssl//file_jk/after\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/after\test\ssltest_old.c:956:5)' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x13afbcab648 <col:13> 'enum (anonymous enum at .//openssl//file_jk/after\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/after\test\ssltest_old.c:956:5)' lvalue Var 0x13afbc99798 'bio_type' 'enum (anonymous enum at .//openssl//file_jk/after\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/after\test\ssltest_old.c:956:5)'
|   |   | | `-DeclRefExpr 0x13afbcab668 <col:25> 'int' EnumConstant 0x13afbc99638 'BIO_PAIR' 'int'
|   |   | `-CompoundStmt 0x13afbcab910 <col:35, line:1390:9>
|   |   |   |-CallExpr 0x13afbcab838 <line:1388:13, col:59> 'int'
|   |   |   | |-ImplicitCastExpr 0x13afbcab820 <col:13> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x13afbcab6d8 <col:13> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   |   |   | |-ParenExpr 0x13afbcab7b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   |   | | `-UnaryOperator 0x13afbcab798 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   |   | |   `-ArraySubscriptExpr 0x13afbcab778 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   |   | |     |-CallExpr 0x13afbcab730 <col:18, col:29> 'FILE *'
|   |   |   | |     | `-ImplicitCastExpr 0x13afbcab718 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |   | |     |   `-DeclRefExpr 0x13afbcab6f8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   |   | |     `-IntegerLiteral 0x13afbcab750 <col:31> 'int' 2
|   |   |   | `-ImplicitCastExpr 0x13afbcab880 <.//openssl//file_jk/after\test\ssltest_old.c:1388:29> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x13afbcab868 <col:29> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x13afbcab7d0 <col:29> 'char [28]' lvalue "Using BIO pair (-bio_pair)\n"
|   |   |   `-BinaryOperator 0x13afbcab8f0 <line:1389:13, col:24> 'enum (anonymous enum at .//openssl//file_jk/after\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/after\test\ssltest_old.c:956:5)' '='
|   |   |     |-DeclRefExpr 0x13afbcab898 <col:13> 'enum (anonymous enum at .//openssl//file_jk/after\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/after\test\ssltest_old.c:956:5)' lvalue Var 0x13afbc99798 'bio_type' 'enum (anonymous enum at .//openssl//file_jk/after\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/after\test\ssltest_old.c:956:5)'
|   |   |     `-ImplicitCastExpr 0x13afbcab8d8 <col:24> 'enum (anonymous enum at .//openssl//file_jk/after\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/after\test\ssltest_old.c:956:5)' <IntegralCast>
|   |   |       `-DeclRefExpr 0x13afbcab8b8 <col:24> 'int' EnumConstant 0x13afbc99638 'BIO_PAIR' 'int'
|   |   `-IfStmt 0x13afbcabc58 <line:1391:9, line:1393:93>
|   |     |-BinaryOperator 0x13afbcaba18 <line:1391:13, col:29> 'int' '&&'
|   |     | |-BinaryOperator 0x13afbcab9a8 <col:13, col:22> 'int' '<'
|   |     | | |-ImplicitCastExpr 0x13afbcab990 <col:13> 'int' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x13afbcab948 <col:13> 'int' lvalue Var 0x13afbc9a3c8 'number' 'int'
|   |     | | `-IntegerLiteral 0x13afbcab968 <col:22> 'int' 50
|   |     | `-UnaryOperator 0x13afbcaba00 <col:28, col:29> 'int' prefix '!' cannot overflow
|   |     |   `-ImplicitCastExpr 0x13afbcab9e8 <col:29> 'int' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x13afbcab9c8 <col:29> 'int' lvalue Var 0x13afbc99880 'force' 'int'
|   |     `-CallExpr 0x13afbcabbf8 <line:1392:13, line:1393:93> 'int'
|   |       |-ImplicitCastExpr 0x13afbcabbe0 <line:1392:13> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x13afbcaba38 <col:13> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   |       |-ParenExpr 0x13afbcabb10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |       | `-UnaryOperator 0x13afbcabaf8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |       |   `-ArraySubscriptExpr 0x13afbcabad8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |       |     |-CallExpr 0x13afbcaba90 <col:18, col:29> 'FILE *'
|   |       |     | `-ImplicitCastExpr 0x13afbcaba78 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |       |     |   `-DeclRefExpr 0x13afbcaba58 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |       |     `-IntegerLiteral 0x13afbcabab0 <col:31> 'int' 2
|   |       `-ImplicitCastExpr 0x13afbcabc40 <.//openssl//file_jk/after\test\ssltest_old.c:1393:21> 'const char *' <NoOp>
|   |         `-ImplicitCastExpr 0x13afbcabc28 <col:21> 'char *' <ArrayToPointerDecay>
|   |           `-StringLiteral 0x13afbcabb68 <col:21> 'char [70]' lvalue "Warning: For accurate timings, use more connections (e.g. -num 1000)\n"
|   |-IfStmt 0x13afbcacb30 <line:1401:5, line:1413:5>
|   | |-OpaqueValueExpr 0x13afbcacb18 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbcacb00 <line:1401:21, line:1413:5>
|   |   `-IfStmt 0x13afbcacad8 <line:1402:9, line:1412:9> has_else
|   |     |-OpaqueValueExpr 0x13afbcacac0 <<invalid sloc>> '_Bool'
|   |     |-CompoundStmt 0x13afbcac5a0 <line:1402:45, line:1407:9>
|   |     | `-IfStmt 0x13afbcac588 <line:1403:13, line:1406:13>
|   |     |   |-OpaqueValueExpr 0x13afbcac570 <<invalid sloc>> '_Bool'
|   |     |   `-CompoundStmt 0x13afbcac550 <line:1403:65, line:1406:13>
|   |     |     |-CallExpr 0x13afbcac2c8 <line:1404:17, col:69> 'int'
|   |     |     | |-ImplicitCastExpr 0x13afbcac2b0 <col:17> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |     |     | | `-DeclRefExpr 0x13afbcac160 <col:17> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   |     |     | |-ParenExpr 0x13afbcac238 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |     |     | | `-UnaryOperator 0x13afbcac220 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |     |     | |   `-ArraySubscriptExpr 0x13afbcac200 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |     |     | |     |-CallExpr 0x13afbcac1b8 <col:18, col:29> 'FILE *'
|   |     |     | |     | `-ImplicitCastExpr 0x13afbcac1a0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |     |     | |     |   `-DeclRefExpr 0x13afbcac180 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |     |     | |     `-IntegerLiteral 0x13afbcac1d8 <col:31> 'int' 2
|   |     |     | `-ImplicitCastExpr 0x13afbcac310 <.//openssl//file_jk/after\test\ssltest_old.c:1404:33> 'const char *' <NoOp>
|   |     |     |   `-ImplicitCastExpr 0x13afbcac2f8 <col:33> 'char *' <ArrayToPointerDecay>
|   |     |     |     `-StringLiteral 0x13afbcac258 <col:33> 'char [34]' lvalue "Failed to add compression method\n"
|   |     |     `-CallExpr 0x13afbcac528 <line:1405:17, col:43> 'int'
|   |     |       |-ImplicitCastExpr 0x13afbcac510 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |     |       | `-DeclRefExpr 0x13afbcac418 <col:17> 'int ()' Function 0x13afbcac350 'ERR_print_errors_fp' 'int ()'
|   |     |       `-ParenExpr 0x13afbcac4f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |     |         `-UnaryOperator 0x13afbcac4d8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |     |           `-ArraySubscriptExpr 0x13afbcac4b8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |     |             |-CallExpr 0x13afbcac470 <col:18, col:29> 'FILE *'
|   |     |             | `-ImplicitCastExpr 0x13afbcac458 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |     |             |   `-DeclRefExpr 0x13afbcac438 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |     |             `-IntegerLiteral 0x13afbcac490 <col:31> 'int' 2
|   |     `-CompoundStmt 0x13afbcacaa0 <.//openssl//file_jk/after\test\ssltest_old.c:1407:16, line:1412:9>
|   |       |-CallExpr 0x13afbcac900 <line:1408:13, line:1410:59> 'int'
|   |       | |-ImplicitCastExpr 0x13afbcac8e8 <line:1408:13> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x13afbcac5b8 <col:13> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   |       | |-ParenExpr 0x13afbcac690 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |       | | `-UnaryOperator 0x13afbcac678 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |       | |   `-ArraySubscriptExpr 0x13afbcac658 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |       | |     |-CallExpr 0x13afbcac610 <col:18, col:29> 'FILE *'
|   |       | |     | `-ImplicitCastExpr 0x13afbcac5f8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |       | |     |   `-DeclRefExpr 0x13afbcac5d8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |       | |     `-IntegerLiteral 0x13afbcac630 <col:31> 'int' 2
|   |       | |-ImplicitCastExpr 0x13afbcac950 <.//openssl//file_jk/after\test\ssltest_old.c:1409:21> 'const char *' <NoOp>
|   |       | | `-ImplicitCastExpr 0x13afbcac938 <col:21> 'char *' <ArrayToPointerDecay>
|   |       | |   `-StringLiteral 0x13afbcac6b0 <col:21> 'char [39]' lvalue "Warning: %s compression not supported\n"
|   |       | `-ConditionalOperator 0x13afbcac8a0 <line:1410:21, col:50> 'char *'
|   |       |   |-BinaryOperator 0x13afbcac750 <col:21, line:116:25> 'int' '=='
|   |       |   | |-ImplicitCastExpr 0x13afbcac738 <line:1410:21> 'int' <LValueToRValue>
|   |       |   | | `-DeclRefExpr 0x13afbcac6f0 <col:21> 'int' lvalue Var 0x13afbcad368 'comp' 'int'
|   |       |   | `-IntegerLiteral 0x13afbcac710 <line:116:25> 'int' 1
|   |       |   |-ImplicitCastExpr 0x13afbcac7b0 <line:1410:41> 'char *' <ArrayToPointerDecay>
|   |       |   | `-StringLiteral 0x13afbcac770 <col:41> 'char [5]' lvalue "zlib"
|   |       |   `-ImplicitCastExpr 0x13afbcac7c8 <col:50> 'char *' <ArrayToPointerDecay>
|   |       |     `-StringLiteral 0x13afbcac790 <col:50> 'char [8]' lvalue "unknown"
|   |       `-CallExpr 0x13afbcaca78 <line:1411:13, col:39> 'int'
|   |         |-ImplicitCastExpr 0x13afbcaca60 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x13afbcac968 <col:13> 'int ()' Function 0x13afbcac350 'ERR_print_errors_fp' 'int ()'
|   |         `-ParenExpr 0x13afbcaca40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |           `-UnaryOperator 0x13afbcaca28 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |             `-ArraySubscriptExpr 0x13afbcaca08 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |               |-CallExpr 0x13afbcac9c0 <col:18, col:29> 'FILE *'
|   |               | `-ImplicitCastExpr 0x13afbcac9a8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |               |   `-DeclRefExpr 0x13afbcac988 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |               `-IntegerLiteral 0x13afbcac9e0 <col:31> 'int' 2
|   |-IfStmt 0x13afbcbf678 <.//openssl//file_jk/after\test\ssltest_old.c:1416:5, line:1424:5>
|   | |-ImplicitCastExpr 0x13afbcacdf8 <line:1416:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13afbcacdd8 <col:9> 'int' lvalue Var 0x13afbcad2e8 'n' 'int'
|   | `-CompoundStmt 0x13afbcbf648 <col:12, line:1424:5>
|   |   |-DeclStmt 0x13afbcace90 <line:1417:9, col:14>
|   |   | `-VarDecl 0x13afbcace28 <col:9, col:13> col:13 used j 'int'
|   |   |-CallExpr 0x13afbcacf60 <line:1418:9, col:48> 'int'
|   |   | |-ImplicitCastExpr 0x13afbcacf48 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13afbcacea8 <col:9> 'int (const char *, ...)' Function 0x13afbbc9990 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x13afbcacfa0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x13afbcacf88 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x13afbcacec8 <col:16> 'char [31]' lvalue "Available compression methods:"
|   |   |-ForStmt 0x13afbcbf548 <line:1419:9, line:1422:9>
|   |   | |-BinaryOperator 0x13afbcad018 <line:1419:14, col:18> 'int' '='
|   |   | | |-DeclRefExpr 0x13afbcacfb8 <col:14> 'int' lvalue Var 0x13afbcace28 'j' 'int'
|   |   | | `-IntegerLiteral 0x13afbcacff0 <col:18> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x13afbcad0a8 <col:21, col:25> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x13afbcad078 <col:21> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13afbcad038 <col:21> 'int' lvalue Var 0x13afbcace28 'j' 'int'
|   |   | | `-ImplicitCastExpr 0x13afbcad090 <col:25> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13afbcad058 <col:25> 'int' lvalue Var 0x13afbcad2e8 'n' 'int'
|   |   | |-UnaryOperator 0x13afbcad0e8 <col:28, col:29> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x13afbcad0c8 <col:28> 'int' lvalue Var 0x13afbcace28 'j' 'int'
|   |   | `-CompoundStmt 0x13afbcbf538 <col:33, line:1422:9>
|   |   `-CallExpr 0x13afbcbf5f0 <line:1423:9, col:20> 'int'
|   |     |-ImplicitCastExpr 0x13afbcbf5d8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13afbcbf580 <col:9> 'int (const char *, ...)' Function 0x13afbbc9990 'printf' 'int (const char *, ...)'
|   |     `-ImplicitCastExpr 0x13afbcbf630 <col:16> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x13afbcbf618 <col:16> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x13afbcbf5a0 <col:16> 'char [2]' lvalue "\n"
|   |-IfStmt 0x13afbcbf978 <line:1429:5, line:1438:5> has_else
|   | |-ImplicitCastExpr 0x13afbcbf7f8 <line:1429:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13afbcbf7d8 <col:9> 'int' lvalue Var 0x13afbc99be0 'ssl3' 'int'
|   | |-CompoundStmt 0x13afbcbf868 <col:15, line:1432:5>
|   | `-IfStmt 0x13afbcbf950 <col:12, line:1438:5> has_else
|   |   |-ImplicitCastExpr 0x13afbcbf898 <line:1432:16> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x13afbcbf878 <col:16> 'int' lvalue Var 0x13afbc99b38 'tls1' 'int'
|   |   |-CompoundStmt 0x13afbcbf8f0 <col:22, line:1435:5>
|   |   `-CompoundStmt 0x13afbcbf940 <col:12, line:1438:5>
|   |-IfStmt 0x13afbcbfd98 <line:1441:5, line:1453:5>
|   | |-BinaryOperator 0x13afbcbfa68 <line:1441:9, col:26> 'int' '||'
|   | | |-BinaryOperator 0x13afbcbfa10 <col:9, col:17> 'int' '||'
|   | | | |-ImplicitCastExpr 0x13afbcbf9e0 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x13afbcbf9a0 <col:9> 'int' lvalue Var 0x13afbc99a90 'dtls' 'int'
|   | | | `-ImplicitCastExpr 0x13afbcbf9f8 <col:17> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x13afbcbf9c0 <col:17> 'int' lvalue Var 0x13afbc99940 'dtls1' 'int'
|   | | `-ImplicitCastExpr 0x13afbcbfa50 <col:26> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbcbfa30 <col:26> 'int' lvalue Var 0x13afbc999e8 'dtls12' 'int'
|   | `-CompoundStmt 0x13afbcbfd80 <col:34, line:1453:5>
|   |   `-IfStmt 0x13afbcbfd58 <line:1443:9, line:1452:9> has_else
|   |     |-ImplicitCastExpr 0x13afbcbfbf0 <line:1443:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x13afbcbfbd0 <col:13> 'int' lvalue Var 0x13afbc99940 'dtls1' 'int'
|   |     |-CompoundStmt 0x13afbcbfc48 <col:20, line:1446:9>
|   |     `-IfStmt 0x13afbcbfd30 <col:16, line:1452:9> has_else
|   |       |-ImplicitCastExpr 0x13afbcbfc78 <line:1446:20> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x13afbcbfc58 <col:20> 'int' lvalue Var 0x13afbc999e8 'dtls12' 'int'
|   |       |-CompoundStmt 0x13afbcbfcd0 <col:28, line:1449:9>
|   |       `-CompoundStmt 0x13afbcbfd20 <col:16, line:1452:9>
|   |-IfStmt 0x13afbcc0100 <line:1459:5, line:1462:5>
|   | |-OpaqueValueExpr 0x13afbcc00e8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbcc00d0 <line:1459:65, line:1462:5>
|   |   `-GotoStmt 0x13afbcc00b8 <line:1461:9, col:14> 'end' 0x13afbcaecf0
|   |-IfStmt 0x13afbcc0458 <line:1472:5, line:1475:5>
|   | |-ImplicitCastExpr 0x13afbcc0300 <line:1472:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13afbcc02e0 <col:9> 'int' lvalue Var 0x13afbc9a620 'no_ticket' 'int'
|   | `-CompoundStmt 0x13afbcc0448 <col:20, line:1475:5>
|   |-IfStmt 0x13afbcc0750 <line:1477:5, line:1481:5>
|   | |-OpaqueValueExpr 0x13afbcc0738 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbcc0718 <line:1477:65, line:1481:5>
|   |   |-CallExpr 0x13afbcc0688 <line:1478:9, line:1479:27> 'int'
|   |   | |-ImplicitCastExpr 0x13afbcc0670 <line:1478:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13afbcc05c8 <col:9> 'int (const char *, ...)' Function 0x13afbbc9990 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x13afbcc06d0 <col:16> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x13afbcc06b8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x13afbcc05e8 <col:16> 'char [50]' lvalue "Unable to set client min protocol version (0x%X)\n"
|   |   | `-ImplicitCastExpr 0x13afbcc06e8 <line:1479:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x13afbcc0638 <col:16> 'int' lvalue Var 0x13afbcad6f8 'min_version' 'int'
|   |   `-GotoStmt 0x13afbcc0700 <line:1480:9, col:14> 'end' 0x13afbcaecf0
|   |-IfStmt 0x13afbcc0a48 <line:1482:5, line:1486:5>
|   | |-OpaqueValueExpr 0x13afbcc0a30 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbcc0a10 <line:1482:65, line:1486:5>
|   |   |-CallExpr 0x13afbcc0980 <line:1483:9, line:1484:27> 'int'
|   |   | |-ImplicitCastExpr 0x13afbcc0968 <line:1483:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13afbcc08c0 <col:9> 'int (const char *, ...)' Function 0x13afbbc9990 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x13afbcc09c8 <col:16> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x13afbcc09b0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x13afbcc08e0 <col:16> 'char [50]' lvalue "Unable to set client max protocol version (0x%X)\n"
|   |   | `-ImplicitCastExpr 0x13afbcc09e0 <line:1484:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x13afbcc0930 <col:16> 'int' lvalue Var 0x13afbcad7a0 'max_version' 'int'
|   |   `-GotoStmt 0x13afbcc09f8 <line:1485:9, col:14> 'end' 0x13afbcaecf0
|   |-IfStmt 0x13afbcc0c50 <line:1487:5, line:1491:5>
|   | |-OpaqueValueExpr 0x13afbcc0c38 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbcc0c18 <line:1487:65, line:1491:5>
|   |   |-CallExpr 0x13afbcc0b88 <line:1488:9, line:1489:27> 'int'
|   |   | |-ImplicitCastExpr 0x13afbcc0b70 <line:1488:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13afbcc0ac8 <col:9> 'int (const char *, ...)' Function 0x13afbbc9990 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x13afbcc0bd0 <col:16> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x13afbcc0bb8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x13afbcc0ae8 <col:16> 'char [50]' lvalue "Unable to set server min protocol version (0x%X)\n"
|   |   | `-ImplicitCastExpr 0x13afbcc0be8 <line:1489:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x13afbcc0b38 <col:16> 'int' lvalue Var 0x13afbcad6f8 'min_version' 'int'
|   |   `-GotoStmt 0x13afbcc0c00 <line:1490:9, col:14> 'end' 0x13afbcaecf0
|   |-IfStmt 0x13afbcc0e58 <line:1492:5, line:1496:5>
|   | |-OpaqueValueExpr 0x13afbcc0e40 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbcc0e20 <line:1492:65, line:1496:5>
|   |   |-CallExpr 0x13afbcc0d90 <line:1493:9, line:1494:27> 'int'
|   |   | |-ImplicitCastExpr 0x13afbcc0d78 <line:1493:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13afbcc0cd0 <col:9> 'int (const char *, ...)' Function 0x13afbbc9990 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x13afbcc0dd8 <col:16> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x13afbcc0dc0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x13afbcc0cf0 <col:16> 'char [50]' lvalue "Unable to set server max protocol version (0x%X)\n"
|   |   | `-ImplicitCastExpr 0x13afbcc0df0 <line:1494:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x13afbcc0d40 <col:16> 'int' lvalue Var 0x13afbcad7a0 'max_version' 'int'
|   |   `-GotoStmt 0x13afbcc0e08 <line:1495:9, col:14> 'end' 0x13afbcaecf0
|   |-IfStmt 0x13afbcc11b0 <line:1498:5, line:1505:5>
|   | |-BinaryOperator 0x13afbcc0f48 <line:1498:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x13afbcc0f18 <.//openssl//file_jk/after\test\ssltest_old.c:1498:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbcc0e70 <col:9> 'char *' lvalue Var 0x13afbca4878 'cipher' 'char *'
|   | | `-ImplicitCastExpr 0x13afbcc0f30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x13afbcc0ef8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x13afbcc0ed0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x13afbcc0e90 <col:26> 'int' 0
|   | `-CompoundStmt 0x13afbcc1198 <.//openssl//file_jk/after\test\ssltest_old.c:1498:25, line:1505:5>
|   |   `-IfStmt 0x13afbcc1180 <line:1499:9, line:1504:9>
|   |     |-OpaqueValueExpr 0x13afbcc1168 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x13afbcc1150 <line:1501:58, line:1504:9>
|   |       `-GotoStmt 0x13afbcc1138 <line:1503:13, col:18> 'end' 0x13afbcaecf0
|   |-IfStmt 0x13afbcbb348 <line:1508:5, line:1512:5>
|   | |-OpaqueValueExpr 0x13afbcbb330 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbcbb318 <line:1509:62, line:1512:5>
|   |   `-GotoStmt 0x13afbcbb300 <line:1511:9, col:14> 'end' 0x13afbcaecf0
|   |-IfStmt 0x13afbcbc1c0 <line:1539:5, line:1543:5>
|   | |-OpaqueValueExpr 0x13afbcbc1a8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbcbc190 <line:1539:104, line:1543:5>
|   |   `-GotoStmt 0x13afbcbc178 <line:1542:9, col:14> 'end' 0x13afbcaecf0
|   |-IfStmt 0x13afbcbc530 <line:1545:5, line:1555:5>
|   | |-UnaryOperator 0x13afbcbc210 <line:1545:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x13afbcbc1f8 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbcbc1d8 <col:10> 'int' lvalue Var 0x13afbc9ae20 'no_dhe' 'int'
|   | `-CompoundStmt 0x13afbcbc518 <col:18, line:1555:5>
|   |   `-IfStmt 0x13afbcbc2b0 <line:1546:9, line:1548:16> has_else
|   |     |-ImplicitCastExpr 0x13afbcbc248 <line:1546:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x13afbcbc228 <col:13> 'int' lvalue Var 0x13afbc9a848 'dhe1024dsa' 'int'
|   |     |-CompoundStmt 0x13afbcbc260 <col:25, line:1548:9>
|   |     `-NullStmt 0x13afbcbc2a8 <col:16>
|   |-IfStmt 0x13afbcbc8f0 <line:1560:5, line:1569:5>
|   | |-OpaqueValueExpr 0x13afbcbc8d8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbcbc8c8 <line:1565:53, line:1569:5>
|   |-IfStmt 0x13afbcbcaa0 <line:1572:5, line:1576:5>
|   | |-OpaqueValueExpr 0x13afbcbca88 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbcbca78 <line:1574:54, line:1576:5>
|   |-IfStmt 0x13afbcbcf10 <line:1579:5, line:1591:5>
|   | |-ImplicitCastExpr 0x13afbcbcad8 <line:1579:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13afbcbcab8 <col:9> 'int' lvalue Var 0x13afbc99d80 'client_auth' 'int'
|   | `-CompoundStmt 0x13afbcbcef8 <col:22, line:1591:5>
|   |   `-CallExpr 0x13afbcbcb70 <line:1580:9, col:41> 'int'
|   |     |-ImplicitCastExpr 0x13afbcbcb58 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13afbcbcaf0 <col:9> 'int (const char *, ...)' Function 0x13afbbc9990 'printf' 'int (const char *, ...)'
|   |     `-ImplicitCastExpr 0x13afbcbcbb0 <col:16> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x13afbcbcb98 <col:16> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x13afbcbcb10 <col:16> 'char [23]' lvalue "client authentication\n"
|   |-IfStmt 0x13afbcbd0c8 <line:1592:5, line:1597:5>
|   | |-ImplicitCastExpr 0x13afbcbcf48 <line:1592:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13afbcbcf28 <col:9> 'int' lvalue Var 0x13afbc99e40 'server_auth' 'int'
|   | `-CompoundStmt 0x13afbcbd0b0 <col:22, line:1597:5>
|   |   `-CallExpr 0x13afbcbcfe0 <line:1593:9, col:41> 'int'
|   |     |-ImplicitCastExpr 0x13afbcbcfc8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13afbcbcf60 <col:9> 'int (const char *, ...)' Function 0x13afbbc9990 'printf' 'int (const char *, ...)'
|   |     `-ImplicitCastExpr 0x13afbcbd020 <col:16> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x13afbcbd008 <col:16> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x13afbcbcf80 <col:16> 'char [23]' lvalue "server authentication\n"
|   |-CompoundStmt 0x13afbcbd538 <line:1599:5, line:1608:5>
|   | |-DeclStmt 0x13afbcbd188 <line:1600:9, col:35>
|   | | `-VarDecl 0x13afbcbd0f8 <col:9, col:34> col:13 used session_id_context 'int' cinit
|   | |   `-IntegerLiteral 0x13afbcbd160 <col:34> 'int' 0
|   | `-IfStmt 0x13afbcbd520 <line:1601:9, line:1607:9>
|   |   |-OpaqueValueExpr 0x13afbcbd508 <<invalid sloc>> '_Bool'
|   |   `-CompoundStmt 0x13afbcbd4f0 <line:1604:74, line:1607:9>
|   |     `-GotoStmt 0x13afbcbd4d8 <line:1606:13, col:18> 'end' 0x13afbcaecf0
|   |-IfStmt 0x13afbcbdd00 <line:1611:5, line:1636:5>
|   | |-BinaryOperator 0x13afbcbd630 <line:1611:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x13afbcbd600 <.//openssl//file_jk/after\test\ssltest_old.c:1611:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbcbd558 <col:9> 'char *' lvalue Var 0x13afbd7e498 'psk_key' 'char *'
|   | | `-ImplicitCastExpr 0x13afbcbd618 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x13afbcbd5e0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x13afbcbd5b8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x13afbcbd578 <col:26> 'int' 0
|   | `-CompoundStmt 0x13afbcbdce0 <.//openssl//file_jk/after\test\ssltest_old.c:1611:26, line:1636:5>
|   |   |-IfStmt 0x13afbcbd740 <line:1615:9, line:1622:9>
|   |   | |-ImplicitCastExpr 0x13afbcbd688 <line:1615:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x13afbcbd650 <col:13> 'int' lvalue Var 0x13afbc9aee0 'no_psk' 'int'
|   |   | `-CompoundStmt 0x13afbcbd720 <col:21, line:1622:9>
|   |   |   |-BinaryOperator 0x13afbcbd6e8 <line:1620:13, col:19> 'int' '='
|   |   |   | |-DeclRefExpr 0x13afbcbd6a0 <col:13> 'int' lvalue Var 0x13afbc99c88 'ret' 'int'
|   |   |   | `-IntegerLiteral 0x13afbcbd6c0 <col:19> 'int' 0
|   |   |   `-GotoStmt 0x13afbcbd708 <line:1621:13, col:18> 'end' 0x13afbcaecf0
|   |   `-IfStmt 0x13afbcbdcc8 <line:1629:9, line:1634:9>
|   |     |-OpaqueValueExpr 0x13afbcbdcb0 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x13afbcbdc98 <line:1630:81, line:1634:9>
|   |       `-GotoStmt 0x13afbcbdc80 <line:1633:13, col:18> 'end' 0x13afbcaecf0
|   |-IfStmt 0x13afbcbe208 <line:1638:5, line:1649:5>
|   | |-ImplicitCastExpr 0x13afbcbdd68 <line:1638:9, col:24> 'char *' <LValueToRValue>
|   | | `-MemberExpr 0x13afbcbdd38 <col:9, col:24> 'char *' lvalue .srplogin 0x13afbd7ef08
|   | |   `-DeclRefExpr 0x13afbcbdd18 <col:9> 'SRP_CLIENT_ARG':'struct srp_client_arg_st' lvalue Var 0x13afbc9a918 'srp_client_arg' 'SRP_CLIENT_ARG':'struct srp_client_arg_st'
|   | `-CompoundStmt 0x13afbcbe1f0 <col:34, line:1649:5>
|   |   `-IfStmt 0x13afbcbdf80 <line:1639:9, line:1642:9>
|   |     |-OpaqueValueExpr 0x13afbcbdf68 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x13afbcbdf50 <line:1639:72, line:1642:9>
|   |       `-GotoStmt 0x13afbcbdf38 <line:1641:13, col:18> 'end' 0x13afbcaecf0
|   |-IfStmt 0x13afbcbe5d0 <line:1651:5, line:1658:5>
|   | |-BinaryOperator 0x13afbcbe328 <line:1651:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x13afbcbe2f8 <.//openssl//file_jk/after\test\ssltest_old.c:1651:9, col:24> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x13afbcbe240 <col:9, col:24> 'char *' lvalue .expected_user 0x13afbc91288
|   | | |   `-DeclRefExpr 0x13afbcbe220 <col:9> 'SRP_SERVER_ARG':'struct srp_server_arg_st' lvalue Var 0x13afbc9ab98 'srp_server_arg' 'SRP_SERVER_ARG':'struct srp_server_arg_st'
|   | | `-ImplicitCastExpr 0x13afbcbe310 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x13afbcbe2d8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x13afbcbe2b0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x13afbcbe270 <col:26> 'int' 0
|   | `-CompoundStmt 0x13afbcbe5c0 <.//openssl//file_jk/after\test\ssltest_old.c:1651:47, line:1658:5>
|   |-IfStmt 0x13afbcbe7c8 <line:1662:5, line:1664:5>
|   | |-ImplicitCastExpr 0x13afbcbe608 <line:1662:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13afbcbe5e8 <col:9> 'int' lvalue Var 0x13afbc92370 'npn_client' 'int'
|   | `-CompoundStmt 0x13afbcbe7b8 <col:21, line:1664:5>
|   |-IfStmt 0x13afbcbeb60 <line:1665:5, line:1673:5>
|   | |-ImplicitCastExpr 0x13afbcbe800 <line:1665:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13afbcbe7e0 <col:9> 'int' lvalue Var 0x13afbc92430 'npn_server' 'int'
|   | `-CompoundStmt 0x13afbcbeb48 <col:21, line:1673:5>
|   |   `-IfStmt 0x13afbcbe8f0 <line:1666:9, line:1670:9>
|   |     |-ImplicitCastExpr 0x13afbcbe838 <line:1666:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x13afbcbe818 <col:13> 'int' lvalue Var 0x13afbc924f0 'npn_server_reject' 'int'
|   |     `-CompoundStmt 0x13afbcbe8d8 <col:32, line:1670:9>
|   |       `-GotoStmt 0x13afbcbe8c0 <line:1669:13, col:18> 'end' 0x13afbcaecf0
|   |-IfStmt 0x13afbcbed10 <line:1674:5, line:1679:5>
|   | |-ImplicitCastExpr 0x13afbcbeb98 <line:1674:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13afbcbeb78 <col:9> 'int' lvalue Var 0x13afbc924f0 'npn_server_reject' 'int'
|   | `-CompoundStmt 0x13afbcbed00 <col:28, line:1679:5>
|   |-IfStmt 0x13afbcbf160 <line:1682:5, line:1690:5>
|   | |-ImplicitCastExpr 0x13afbcbed48 <line:1682:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13afbcbed28 <col:9> 'int' lvalue Var 0x13afbc87f48 'serverinfo_sct' 'int'
|   | `-CompoundStmt 0x13afbcbf148 <col:25, line:1690:5>
|   |   `-IfStmt 0x13afbcbf130 <line:1683:9, line:1689:9>
|   |     |-OpaqueValueExpr 0x13afbcbf118 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x13afbcbf100 <line:1686:49, line:1689:9>
|   |       `-GotoStmt 0x13afbcbf0e8 <line:1688:13, col:18> 'end' 0x13afbcaecf0
|   |-IfStmt 0x13afbcca0e8 <line:1691:5, line:1698:5>
|   | |-ImplicitCastExpr 0x13afbcbf198 <line:1691:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13afbcbf178 <col:9> 'int' lvalue Var 0x13afbc88008 'serverinfo_tack' 'int'
|   | `-CompoundStmt 0x13afbcca0d0 <col:26, line:1698:5>
|   |   `-IfStmt 0x13afbcca0b8 <line:1692:9, line:1697:9>
|   |     |-OpaqueValueExpr 0x13afbcca0a0 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x13afbcca088 <line:1694:71, line:1697:9>
|   |       `-GotoStmt 0x13afbcca070 <line:1696:13, col:18> 'end' 0x13afbcaecf0
|   |-IfStmt 0x13afbcca358 <line:1699:5, line:1704:9>
|   | |-ImplicitCastExpr 0x13afbcca120 <line:1699:9> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x13afbcca100 <col:9> 'char *' lvalue Var 0x13afbc87e10 'serverinfo_file' 'char *'
|   | `-IfStmt 0x13afbcca340 <line:1700:9, line:1704:9>
|   |   |-OpaqueValueExpr 0x13afbcca328 <<invalid sloc>> '_Bool'
|   |   `-CompoundStmt 0x13afbcca310 <line:1701:68, line:1704:9>
|   |     `-GotoStmt 0x13afbcca2f8 <line:1703:13, col:18> 'end' 0x13afbcaecf0
|   |-IfStmt 0x13afbccbbe8 <line:1706:5, line:1758:5>
|   | |-ImplicitCastExpr 0x13afbcca390 <line:1706:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13afbcca370 <col:9> 'int' lvalue Var 0x13afbc88308 'custom_ext' 'int'
|   | `-CompoundStmt 0x13afbccbbd0 <col:21, line:1758:5>
|   |   `-IfStmt 0x13afbccbbb8 <line:1707:9, line:1757:9>
|   |     |-OpaqueValueExpr 0x13afbccbba0 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x13afbccbb88 <line:1754:73, line:1757:9>
|   |       `-GotoStmt 0x13afbccbb70 <line:1756:13, col:18> 'end' 0x13afbcaecf0
|   |-IfStmt 0x13afbccc5e8 <line:1765:5, line:1780:5>
|   | |-ImplicitCastExpr 0x13afbccbe20 <line:1765:9> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x13afbccbe00 <col:9> 'const char *' lvalue Var 0x13afbc8b0c0 'alpn_client' 'const char *'
|   | `-CompoundStmt 0x13afbccc5b0 <col:22, line:1780:5>
|   |   |-DeclStmt 0x13afbccbeb0 <line:1766:9, col:24>
|   |   | `-VarDecl 0x13afbccbe48 <col:9, col:16> col:16 used alpn_len 'size_t':'unsigned long long'
|   |   |-DeclStmt 0x13afbccc038 <line:1767:9, col:72>
|   |   | `-VarDecl 0x13afbccbee0 <col:9, col:71> col:24 used alpn 'unsigned char *' cinit
|   |   |   `-CallExpr 0x13afbccbff0 <col:31, col:71> 'unsigned char *'
|   |   |     |-ImplicitCastExpr 0x13afbccbfd8 <col:31> 'unsigned char *(*)(size_t *, const char *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x13afbccbf48 <col:31> 'unsigned char *(size_t *, const char *)' Function 0x13afbc893a0 'next_protos_parse' 'unsigned char *(size_t *, const char *)'
|   |   |     |-UnaryOperator 0x13afbccbfa0 <col:49, col:50> 'size_t *' prefix '&' cannot overflow
|   |   |     | `-DeclRefExpr 0x13afbccbf68 <col:50> 'size_t':'unsigned long long' lvalue Var 0x13afbccbe48 'alpn_len' 'size_t':'unsigned long long'
|   |   |     `-ImplicitCastExpr 0x13afbccc020 <col:60> 'const char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x13afbccbfb8 <col:60> 'const char *' lvalue Var 0x13afbc8b0c0 'alpn_client' 'const char *'
|   |   |-IfStmt 0x13afbccc228 <line:1769:9, line:1772:9>
|   |   | |-BinaryOperator 0x13afbccc140 <line:1769:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x13afbccc110 <.//openssl//file_jk/after\test\ssltest_old.c:1769:13> 'unsigned char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13afbccc050 <col:13> 'unsigned char *' lvalue Var 0x13afbccbee0 'alpn' 'unsigned char *'
|   |   | | `-ImplicitCastExpr 0x13afbccc128 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   |   | |   `-ParenExpr 0x13afbccc0f0 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x13afbccc0c8 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x13afbccc088 <col:26> 'int' 0
|   |   | `-CompoundStmt 0x13afbccc210 <.//openssl//file_jk/after\test\ssltest_old.c:1769:27, line:1772:9>
|   |   |   `-GotoStmt 0x13afbccc1f8 <line:1771:13, col:18> 'end' 0x13afbcaecf0
|   |   |-IfStmt 0x13afbccc500 <line:1774:9, line:1778:9>
|   |   | |-OpaqueValueExpr 0x13afbccc4e8 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x13afbccc4c8 <line:1774:61, line:1778:9>
|   |   |   |-CallExpr 0x13afbccc470 <line:1776:13, col:30> 'int'
|   |   |   | |-ImplicitCastExpr 0x13afbccc458 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x13afbccc418 <col:13> 'int ()' Function 0x13afbc8a1a0 'OPENSSL_free' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x13afbccc498 <col:26> 'unsigned char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x13afbccc438 <col:26> 'unsigned char *' lvalue Var 0x13afbccbee0 'alpn' 'unsigned char *'
|   |   |   `-GotoStmt 0x13afbccc4b0 <line:1777:13, col:18> 'end' 0x13afbcaecf0
|   |   `-CallExpr 0x13afbccc570 <line:1779:9, col:26> 'int'
|   |     |-ImplicitCastExpr 0x13afbccc558 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13afbccc518 <col:9> 'int ()' Function 0x13afbc8a1a0 'OPENSSL_free' 'int ()'
|   |     `-ImplicitCastExpr 0x13afbccc598 <col:22> 'unsigned char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13afbccc538 <col:22> 'unsigned char *' lvalue Var 0x13afbccbee0 'alpn' 'unsigned char *'
|   |-IfStmt 0x13afbccc800 <line:1782:5, line:1786:5>
|   | |-BinaryOperator 0x13afbccc6d8 <line:1782:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x13afbccc6a8 <.//openssl//file_jk/after\test\ssltest_old.c:1782:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbccc600 <col:9> 'const char *' lvalue Var 0x13afbc8b9d0 'server_sess_in' 'const char *'
|   | | `-ImplicitCastExpr 0x13afbccc6c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x13afbccc688 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x13afbccc660 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x13afbccc620 <col:26> 'int' 0
|   | `-CompoundStmt 0x13afbccc7e8 <.//openssl//file_jk/after\test\ssltest_old.c:1782:33, line:1786:5>
|   |   `-IfStmt 0x13afbccc7d0 <line:1784:9, line:1785:18>
|   |     |-OpaqueValueExpr 0x13afbccc7b8 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x13afbccc7a0 <col:13, col:18> 'end' 0x13afbcaecf0
|   |-IfStmt 0x13afbccca18 <line:1787:5, line:1791:5>
|   | |-BinaryOperator 0x13afbccc8f0 <line:1787:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x13afbccc8c0 <.//openssl//file_jk/after\test\ssltest_old.c:1787:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbccc818 <col:9> 'const char *' lvalue Var 0x13afbc8bb00 'client_sess_in' 'const char *'
|   | | `-ImplicitCastExpr 0x13afbccc8d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x13afbccc8a0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x13afbccc878 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x13afbccc838 <col:26> 'int' 0
|   | `-CompoundStmt 0x13afbccca00 <.//openssl//file_jk/after\test\ssltest_old.c:1787:33, line:1791:5>
|   |   `-IfStmt 0x13afbccc9e8 <line:1789:9, line:1790:18>
|   |     |-OpaqueValueExpr 0x13afbccc9d0 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x13afbccc9b8 <col:13, col:18> 'end' 0x13afbcaecf0
|   |-IfStmt 0x13afbccd288 <line:1793:5, line:1802:5>
|   | |-BinaryOperator 0x13afbcccc20 <line:1793:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '||'
|   | | |-BinaryOperator 0x13afbcccb08 <.//openssl//file_jk/after\test\ssltest_old.c:1793:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | | |-ImplicitCastExpr 0x13afbcccad8 <.//openssl//file_jk/after\test\ssltest_old.c:1793:9> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x13afbccca30 <col:9> 'const char *' lvalue Var 0x13afbc8b938 'server_sess_out' 'const char *'
|   | | | `-ImplicitCastExpr 0x13afbcccaf0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |   `-ParenExpr 0x13afbcccab8 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x13afbccca90 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x13afbccca50 <col:26> 'int' 0
|   | | `-BinaryOperator 0x13afbcccc00 <.//openssl//file_jk/after\test\ssltest_old.c:1793:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | |   |-ImplicitCastExpr 0x13afbcccbd0 <.//openssl//file_jk/after\test\ssltest_old.c:1793:36> 'const char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x13afbcccb28 <col:36> 'const char *' lvalue Var 0x13afbc8b9d0 'server_sess_in' 'const char *'
|   | |   `-ImplicitCastExpr 0x13afbcccbe8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |     `-ParenExpr 0x13afbcccbb0 <col:17, col:27> 'void *'
|   | |       `-CStyleCastExpr 0x13afbcccb88 <col:18, col:26> 'void *' <NullToPointer>
|   | |         `-IntegerLiteral 0x13afbcccb48 <col:26> 'int' 0
|   | `-CompoundStmt 0x13afbccd258 <.//openssl//file_jk/after\test\ssltest_old.c:1793:60, line:1802:5>
|   |   |-DeclStmt 0x13afbccccc0 <line:1794:9, col:19>
|   |   | `-VarDecl 0x13afbcccc58 <col:9, col:15> col:15 used keys 'char *'
|   |   |-DeclStmt 0x13afbcccd58 <line:1795:9, col:18>
|   |   | `-VarDecl 0x13afbccccf0 <col:9, col:14> col:14 used size 'long'
|   |   |-BinaryOperator 0x13afbccd140 <line:1799:9, col:35> 'char *' '='
|   |   | |-DeclRefExpr 0x13afbcccf68 <col:9> 'char *' lvalue Var 0x13afbcccc58 'keys' 'char *'
|   |   | `-ImplicitCastExpr 0x13afbccd128 <col:16, col:35> 'char *' <IntegralToPointer>
|   |   |   `-CallExpr 0x13afbccd0e8 <col:16, col:35> 'int'
|   |   |     |-ImplicitCastExpr 0x13afbccd0d0 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x13afbccd090 <col:16> 'int ()' Function 0x13afbcccfc8 'OPENSSL_zalloc' 'int ()'
|   |   |     `-ImplicitCastExpr 0x13afbccd110 <col:31> 'long' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x13afbccd0b0 <col:31> 'long' lvalue Var 0x13afbccccf0 'size' 'long'
|   |   `-CallExpr 0x13afbccd218 <line:1801:9, col:26> 'int'
|   |     |-ImplicitCastExpr 0x13afbccd200 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x13afbccd1c0 <col:9> 'int ()' Function 0x13afbc8a1a0 'OPENSSL_free' 'int ()'
|   |     `-ImplicitCastExpr 0x13afbccd240 <col:22> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13afbccd1e0 <col:22> 'char *' lvalue Var 0x13afbcccc58 'keys' 'char *'
|   |-IfStmt 0x13afbccd8a8 <line:1813:5, line:1814:14>
|   | |-OpaqueValueExpr 0x13afbccd890 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x13afbccd878 <col:9, col:14> 'end' 0x13afbcaecf0
|   |-IfStmt 0x13afbccd910 <line:1815:5, line:1816:14>
|   | |-OpaqueValueExpr 0x13afbccd8f8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x13afbccd8e0 <col:9, col:14> 'end' 0x13afbcaecf0
|   |-IfStmt 0x13afbccd978 <line:1817:5, line:1818:14>
|   | |-OpaqueValueExpr 0x13afbccd960 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x13afbccd948 <col:9, col:14> 'end' 0x13afbcaecf0
|   |-IfStmt 0x13afbccd9e0 <line:1819:5, line:1820:14>
|   | |-OpaqueValueExpr 0x13afbccd9c8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x13afbccd9b0 <col:9, col:14> 'end' 0x13afbcaecf0
|   |-IfStmt 0x13afbccdc38 <line:1822:5, line:1828:5>
|   | |-OpaqueValueExpr 0x13afbccdc20 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbccdc08 <line:1822:22, line:1828:5>
|   |   `-IfStmt 0x13afbccdbf0 <line:1823:9, line:1827:9>
|   |     |-OpaqueValueExpr 0x13afbccdbd8 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x13afbccdbc0 <line:1823:59, line:1827:9>
|   |       `-GotoStmt 0x13afbccdba8 <line:1826:13, col:18> 'end' 0x13afbcaecf0
|   |-ForStmt 0x13afbcce8c0 <line:1831:5, line:1869:5>
|   | |-BinaryOperator 0x13afbccdd30 <line:1831:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x13afbccdce8 <col:10> 'int' lvalue Var 0x13afbc99ee8 'i' 'int'
|   | | `-IntegerLiteral 0x13afbccdd08 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x13afbccddd0 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x13afbccdd90 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbccdd50 <col:17> 'int' lvalue Var 0x13afbc99ee8 'i' 'int'
|   | | `-ImplicitCastExpr 0x13afbccdda8 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbccdd70 <col:21> 'int' lvalue Var 0x13afbc9a3c8 'number' 'int'
|   | |-UnaryOperator 0x13afbccde10 <col:29, col:30> 'int' postfix '++'
|   | | `-DeclRefExpr 0x13afbccddf0 <col:29> 'int' lvalue Var 0x13afbc99ee8 'i' 'int'
|   | `-CompoundStmt 0x13afbcce890 <col:34, line:1869:5>
|   |   |-IfStmt 0x13afbcce0d8 <line:1832:9, line:1837:9>
|   |   | |-UnaryOperator 0x13afbccde60 <line:1832:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x13afbccde48 <col:14> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13afbccde28 <col:14> 'int' lvalue Var 0x13afbc9a470 'reuse' 'int'
|   |   | `-CompoundStmt 0x13afbcce0c0 <col:21, line:1837:9>
|   |   |   `-IfStmt 0x13afbcce0a8 <line:1833:13, line:1836:13>
|   |   |     |-OpaqueValueExpr 0x13afbcce090 <<invalid sloc>> '_Bool'
|   |   |     `-CompoundStmt 0x13afbcce078 <line:1833:48, line:1836:13>
|   |   |       `-GotoStmt 0x13afbcce060 <line:1835:17, col:22> 'end' 0x13afbcaecf0
|   |   |-IfStmt 0x13afbcce320 <line:1838:9, line:1844:9>
|   |   | |-BinaryOperator 0x13afbcce1c8 <line:1838:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x13afbcce198 <.//openssl//file_jk/after\test\ssltest_old.c:1838:13> 'const char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13afbcce0f0 <col:13> 'const char *' lvalue Var 0x13afbc8bb00 'client_sess_in' 'const char *'
|   |   | | `-ImplicitCastExpr 0x13afbcce1b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   |   | |   `-ParenExpr 0x13afbcce178 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x13afbcce150 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x13afbcce110 <col:26> 'int' 0
|   |   | `-CompoundStmt 0x13afbcce308 <.//openssl//file_jk/after\test\ssltest_old.c:1838:37, line:1844:9>
|   |   |   `-IfStmt 0x13afbcce2f0 <line:1839:13, line:1843:13>
|   |   |     |-OpaqueValueExpr 0x13afbcce2d8 <<invalid sloc>> '_Bool'
|   |   |     `-CompoundStmt 0x13afbcce2c0 <line:1839:59, line:1843:13>
|   |   |       `-GotoStmt 0x13afbcce2a8 <line:1842:17, col:22> 'end' 0x13afbcaecf0
|   |   |-SwitchStmt 0x13afbcce388 <line:1845:9, line:1867:9>
|   |   | |-ImplicitCastExpr 0x13afbcce370 <line:1845:17> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x13afbcce358 <col:17> 'enum (anonymous enum at .//openssl//file_jk/after\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/after\test\ssltest_old.c:956:5)' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13afbcce338 <col:17> 'enum (anonymous enum at .//openssl//file_jk/after\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/after\test\ssltest_old.c:956:5)' lvalue Var 0x13afbc99798 'bio_type' 'enum (anonymous enum at .//openssl//file_jk/after\test\ssltest_old.c:956:5)':'enum (anonymous at .//openssl//file_jk/after\test\ssltest_old.c:956:5)'
|   |   | `-CompoundStmt 0x13afbcce7e8 <col:27, line:1867:9>
|   |   |   |-CaseStmt 0x13afbcce3e0 <line:1846:9, <invalid sloc>>
|   |   |   | |-ConstantExpr 0x13afbcce3c8 <col:14> 'int'
|   |   |   | | `-DeclRefExpr 0x13afbcce3a8 <col:14> 'int' EnumConstant 0x13afbc995e0 'BIO_MEM' 'int'
|   |   |   | `-NullStmt 0x13afbcce448 <<invalid sloc>>
|   |   |   |-BreakStmt 0x13afbcce450 <line:1848:13>
|   |   |   |-CaseStmt 0x13afbcce490 <line:1849:9, <invalid sloc>>
|   |   |   | |-ConstantExpr 0x13afbcce478 <col:14> 'int'
|   |   |   | | `-DeclRefExpr 0x13afbcce458 <col:14> 'int' EnumConstant 0x13afbc99638 'BIO_PAIR' 'int'
|   |   |   | `-NullStmt 0x13afbcce598 <<invalid sloc>>
|   |   |   |-BreakStmt 0x13afbcce5a0 <line:1851:13>
|   |   |   |-CaseStmt 0x13afbcce5e0 <line:1853:9, <invalid sloc>>
|   |   |   | |-ConstantExpr 0x13afbcce5c8 <col:14> 'int'
|   |   |   | | `-DeclRefExpr 0x13afbcce5a8 <col:14> 'int' EnumConstant 0x13afbc99690 'BIO_IPV4' 'int'
|   |   |   | `-NullStmt 0x13afbcce6b8 <<invalid sloc>>
|   |   |   |-BreakStmt 0x13afbcce6c0 <line:1856:13>
|   |   |   |-CaseStmt 0x13afbcce700 <line:1857:9, <invalid sloc>>
|   |   |   | |-ConstantExpr 0x13afbcce6e8 <col:14> 'int'
|   |   |   | | `-DeclRefExpr 0x13afbcce6c8 <col:14> 'int' EnumConstant 0x13afbc996e8 'BIO_IPV6' 'int'
|   |   |   | `-NullStmt 0x13afbcce7d8 <<invalid sloc>>
|   |   |   `-BreakStmt 0x13afbcce7e0 <line:1860:13>
|   |   `-IfStmt 0x13afbcce878 <line:1868:9, col:19>
|   |     |-ImplicitCastExpr 0x13afbcce858 <col:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x13afbcce838 <col:13> 'int' lvalue Var 0x13afbc99c88 'ret' 'int'
|   |     `-BreakStmt 0x13afbcce870 <col:19>
|   |-IfStmt 0x13afbccf340 <line:1871:5, line:1886:5>
|   | |-BinaryOperator 0x13afbccecd0 <line:1871:9, line:1873:52> 'int' '&&'
|   | | |-BinaryOperator 0x13afbcceb40 <line:1871:9, line:1872:52> 'int' '&&'
|   | | | |-BinaryOperator 0x13afbcce9b0 <line:1871:9, col:36> 'int' '&&'
|   | | | | |-ImplicitCastExpr 0x13afbcce998 <col:9> 'const char *' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x13afbcce8f8 <col:9> 'const char *' lvalue Var 0x13afbc8b618 'should_negotiate' 'const char *'
|   | | | | `-BinaryOperator 0x13afbcce978 <col:29, col:36> 'int' '=='
|   | | | |   |-ImplicitCastExpr 0x13afbcce960 <col:29> 'int' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x13afbcce918 <col:29> 'int' lvalue Var 0x13afbc99c88 'ret' 'int'
|   | | | |   `-IntegerLiteral 0x13afbcce938 <col:36> 'int' 0
|   | | | `-BinaryOperator 0x13afbcceb20 <line:1872:9, col:52> 'int' '!='
|   | | |   |-CallExpr 0x13afbccea80 <col:9, col:47> 'int'
|   | | |   | |-ImplicitCastExpr 0x13afbccea68 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | |   | | `-DeclRefExpr 0x13afbcce9d0 <col:9> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   | | |   | |-ImplicitCastExpr 0x13afbcceab0 <col:16> 'const char *' <LValueToRValue>
|   | | |   | | `-DeclRefExpr 0x13afbcce9f0 <col:16> 'const char *' lvalue Var 0x13afbc8b618 'should_negotiate' 'const char *'
|   | | |   | `-ImplicitCastExpr 0x13afbcceae0 <col:34> 'const char *' <NoOp>
|   | | |   |   `-ImplicitCastExpr 0x13afbcceac8 <col:34> 'char *' <ArrayToPointerDecay>
|   | | |   |     `-StringLiteral 0x13afbccea10 <col:34> 'char [12]' lvalue "fail-server"
|   | | |   `-IntegerLiteral 0x13afbcceaf8 <col:52> 'int' 0
|   | | `-BinaryOperator 0x13afbccecb0 <line:1873:9, col:52> 'int' '!='
|   | |   |-CallExpr 0x13afbccec10 <col:9, col:47> 'int'
|   | |   | |-ImplicitCastExpr 0x13afbccebf8 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x13afbcceb60 <col:9> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   | |   | |-ImplicitCastExpr 0x13afbccec40 <col:16> 'const char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x13afbcceb80 <col:16> 'const char *' lvalue Var 0x13afbc8b618 'should_negotiate' 'const char *'
|   | |   | `-ImplicitCastExpr 0x13afbccec70 <col:34> 'const char *' <NoOp>
|   | |   |   `-ImplicitCastExpr 0x13afbccec58 <col:34> 'char *' <ArrayToPointerDecay>
|   | |   |     `-StringLiteral 0x13afbcceba0 <col:34> 'char [12]' lvalue "fail-client"
|   | |   `-IntegerLiteral 0x13afbccec88 <col:52> 'int' 0
|   | `-CompoundStmt 0x13afbccf318 <col:55, line:1886:5>
|   |   |-DeclStmt 0x13afbccee08 <line:1874:9, col:61>
|   |   | `-VarDecl 0x13afbcced08 <col:9, col:60> col:13 used version 'int' cinit
|   |   |   `-CallExpr 0x13afbccedc8 <col:23, col:60> 'int'
|   |   |     |-ImplicitCastExpr 0x13afbccedb0 <col:23> 'int (*)(const char *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x13afbcced70 <col:23> 'int (const char *)' Function 0x13afbca2500 'protocol_from_string' 'int (const char *)'
|   |   |     `-ImplicitCastExpr 0x13afbccedf0 <col:44> 'const char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x13afbcced90 <col:44> 'const char *' lvalue Var 0x13afbc8b618 'should_negotiate' 'const char *'
|   |   |-IfStmt 0x13afbccf018 <line:1875:9, line:1879:9>
|   |   | |-BinaryOperator 0x13afbccee98 <line:1875:13, col:23> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x13afbccee80 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13afbccee20 <col:13> 'int' lvalue Var 0x13afbcced08 'version' 'int'
|   |   | | `-IntegerLiteral 0x13afbccee58 <col:23> 'int' 0
|   |   | `-CompoundStmt 0x13afbcceff8 <col:26, line:1879:9>
|   |   |   |-BinaryOperator 0x13afbccef70 <line:1877:13, col:19> 'int' '='
|   |   |   | |-DeclRefExpr 0x13afbccef28 <col:13> 'int' lvalue Var 0x13afbc99c88 'ret' 'int'
|   |   |   | `-IntegerLiteral 0x13afbccef48 <col:19> 'int' 1
|   |   |   `-GotoStmt 0x13afbccefe0 <line:1878:13, col:18> 'err' 0x13afbccef90
|   |   `-IfStmt 0x13afbccf300 <line:1880:9, line:1885:9>
|   |     |-OpaqueValueExpr 0x13afbccf2e8 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x13afbccf2c8 <line:1880:44, line:1885:9>
|   |       |-BinaryOperator 0x13afbccf290 <line:1883:13, col:19> 'int' '='
|   |       | |-DeclRefExpr 0x13afbccf248 <col:13> 'int' lvalue Var 0x13afbc99c88 'ret' 'int'
|   |       | `-IntegerLiteral 0x13afbccf268 <col:19> 'int' 1
|   |       `-GotoStmt 0x13afbccf2b0 <line:1884:13, col:18> 'err' 0x13afbccef90
|   |-IfStmt 0x13afbccf730 <line:1888:5, line:1897:5>
|   | |-BinaryOperator 0x13afbccf3d0 <line:1888:9, col:26> 'int' '!='
|   | | |-ImplicitCastExpr 0x13afbccf3b8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbccf358 <col:9> 'int' lvalue Var 0x13afbc9a548 'should_reuse' 'int'
|   | | `-UnaryOperator 0x13afbccf3a0 <col:25, col:26> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x13afbccf378 <col:26> 'int' 1
|   | `-CompoundStmt 0x13afbccf718 <col:29, line:1897:5>
|   |   `-IfStmt 0x13afbccf700 <line:1889:9, line:1896:9>
|   |     |-OpaqueValueExpr 0x13afbccf6e8 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x13afbccf6c8 <line:1890:56, line:1896:9>
|   |       |-BinaryOperator 0x13afbccf690 <line:1894:13, col:19> 'int' '='
|   |       | |-DeclRefExpr 0x13afbccf648 <col:13> 'int' lvalue Var 0x13afbc99c88 'ret' 'int'
|   |       | `-IntegerLiteral 0x13afbccf668 <col:19> 'int' 1
|   |       `-GotoStmt 0x13afbccf6b0 <line:1895:13, col:18> 'err' 0x13afbccef90
|   |-IfStmt 0x13afbccfa80 <line:1899:5, line:1904:5>
|   | |-BinaryOperator 0x13afbccf820 <line:1899:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x13afbccf7f0 <.//openssl//file_jk/after\test\ssltest_old.c:1899:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbccf748 <col:9> 'const char *' lvalue Var 0x13afbc8b938 'server_sess_out' 'const char *'
|   | | `-ImplicitCastExpr 0x13afbccf808 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x13afbccf7d0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x13afbccf7a8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x13afbccf768 <col:26> 'int' 0
|   | `-CompoundStmt 0x13afbccfa68 <.//openssl//file_jk/after\test\ssltest_old.c:1899:34, line:1904:5>
|   |   `-IfStmt 0x13afbccfa50 <line:1900:9, line:1903:9>
|   |     |-OpaqueValueExpr 0x13afbccfa38 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x13afbccfa18 <line:1900:74, line:1903:9>
|   |       |-BinaryOperator 0x13afbccf9e0 <line:1901:13, col:19> 'int' '='
|   |       | |-DeclRefExpr 0x13afbccf998 <col:13> 'int' lvalue Var 0x13afbc99c88 'ret' 'int'
|   |       | `-IntegerLiteral 0x13afbccf9b8 <col:19> 'int' 1
|   |       `-GotoStmt 0x13afbccfa00 <line:1902:13, col:18> 'err' 0x13afbccef90
|   |-IfStmt 0x13afbccfce0 <line:1905:5, line:1910:5>
|   | |-BinaryOperator 0x13afbccfb70 <line:1905:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x13afbccfb40 <.//openssl//file_jk/after\test\ssltest_old.c:1905:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbccfa98 <col:9> 'const char *' lvalue Var 0x13afbc8ba68 'client_sess_out' 'const char *'
|   | | `-ImplicitCastExpr 0x13afbccfb58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x13afbccfb20 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x13afbccfaf8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x13afbccfab8 <col:26> 'int' 0
|   | `-CompoundStmt 0x13afbccfcc8 <.//openssl//file_jk/after\test\ssltest_old.c:1905:34, line:1910:5>
|   |   `-IfStmt 0x13afbccfcb0 <line:1906:9, line:1909:9>
|   |     |-OpaqueValueExpr 0x13afbccfc98 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x13afbccfc78 <line:1906:74, line:1909:9>
|   |       |-BinaryOperator 0x13afbccfc40 <line:1907:13, col:19> 'int' '='
|   |       | |-DeclRefExpr 0x13afbccfbf8 <col:13> 'int' lvalue Var 0x13afbc99c88 'ret' 'int'
|   |       | `-IntegerLiteral 0x13afbccfc18 <col:19> 'int' 1
|   |       `-GotoStmt 0x13afbccfc60 <line:1908:13, col:18> 'err' 0x13afbccef90
|   |-IfStmt 0x13afbccfd70 <line:1912:5, line:1914:5>
|   | |-UnaryOperator 0x13afbccfd30 <line:1912:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x13afbccfd18 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbccfcf8 <col:10> 'int' lvalue Var 0x13afbca49b0 'verbose' 'int'
|   | `-CompoundStmt 0x13afbccfd60 <col:19, line:1914:5>
|   |-IfStmt 0x13afbcd0068 <line:1915:5, line:1932:5>
|   | |-ImplicitCastExpr 0x13afbccfda8 <line:1915:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13afbccfd88 <col:9> 'int' lvalue Var 0x13afbc9afa0 'print_time' 'int'
|   | `-CompoundStmt 0x13afbcd0058 <col:21, line:1932:5>
|   |-LabelStmt 0x13afbcd0198 <line:1934:2, col:5> 'err'
|   | `-NullStmt 0x13afbcd0190 <col:5>
|   |-LabelStmt 0x13afbcd02e8 <line:1938:2, col:5> 'end'
|   | `-NullStmt 0x13afbcd02e0 <col:5>
|   |-IfStmt 0x13afbcd08a8 <line:1953:5, line:1954:15>
|   | |-OpaqueValueExpr 0x13afbcd0890 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x13afbcd0870 <col:9, col:15> 'int' '='
|   |   |-DeclRefExpr 0x13afbcd0828 <col:9> 'int' lvalue Var 0x13afbc99c88 'ret' 'int'
|   |   `-IntegerLiteral 0x13afbcd0848 <col:15> 'int' 1
|   `-CallExpr 0x13afbcd0938 <line:1957:5, col:13> 'int'
|     |-ImplicitCastExpr 0x13afbcd0920 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x13afbcd08e0 <col:5> 'int ()' Function 0x13afbcb36f8 'EXIT' 'int ()'
|     `-ImplicitCastExpr 0x13afbcd0960 <col:10> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x13afbcd0900 <col:10> 'int' lvalue Var 0x13afbc99c88 'ret' 'int'
|-FunctionDecl 0x13afbcd0fc0 <line:1961:1, line:2246:1> line:1961:5 invalid doit_localhost 'int (int *, int *, int, long, clock_t *, clock_t *)'
| |-ParmVarDecl 0x13afbcd0c90 <col:20, col:25> col:25 invalid s_ssl 'int *'
| |-ParmVarDecl 0x13afbcd0d10 <col:32, col:37> col:37 invalid c_ssl 'int *'
| |-ParmVarDecl 0x13afbcd0d90 <col:44, col:48> col:48 used family 'int'
| |-ParmVarDecl 0x13afbcd0e10 <col:56, col:61> col:61 used count 'long'
| |-ParmVarDecl 0x13afbcd0e88 <line:1962:20, col:29> col:29 used s_time 'clock_t *'
| |-ParmVarDecl 0x13afbcd0f00 <col:37, col:46> col:46 used c_time 'clock_t *'
| `-CompoundStmt 0x13afbce1218 <line:1963:1, line:2246:1>
|   |-DeclStmt 0x13afbcd13c8 <line:1964:5, col:72>
|   | |-VarDecl 0x13afbcd10c0 <col:5, col:19> col:10 used cw_num 'long' cinit
|   | | `-ImplicitCastExpr 0x13afbcd1160 <col:19> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbcd1128 <col:19> 'long' lvalue ParmVar 0x13afbcd0e10 'count' 'long'
|   | |-VarDecl 0x13afbcd1190 <col:5, col:35> col:26 used cr_num 'long' cinit
|   | | `-ImplicitCastExpr 0x13afbcd1218 <col:35> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbcd11f8 <col:35> 'long' lvalue ParmVar 0x13afbcd0e10 'count' 'long'
|   | |-VarDecl 0x13afbcd1248 <col:5, col:51> col:42 used sw_num 'long' cinit
|   | | `-ImplicitCastExpr 0x13afbcd12d0 <col:51> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbcd12b0 <col:51> 'long' lvalue ParmVar 0x13afbcd0e10 'count' 'long'
|   | `-VarDecl 0x13afbcd1300 <col:5, col:67> col:58 used sr_num 'long' cinit
|   |   `-ImplicitCastExpr 0x13afbcd1388 <col:67> 'long' <LValueToRValue>
|   |     `-DeclRefExpr 0x13afbcd1368 <col:67> 'long' lvalue ParmVar 0x13afbcd0e10 'count' 'long'
|   |-DeclStmt 0x13afbcd1790 <line:1967:5, col:22>
|   | `-VarDecl 0x13afbcd1728 <col:5, col:21> col:10 used addr_str 'char [40]'
|   |-DeclStmt 0x13afbcd1850 <line:1968:5, col:16>
|   | `-VarDecl 0x13afbcd17c0 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x13afbcd1828 <col:15> 'int' 1
|   |-DeclStmt 0x13afbcd1910 <line:1969:5, col:26>
|   | `-VarDecl 0x13afbcd1880 <col:5, col:25> col:9 used err_in_client 'int' cinit
|   |   `-IntegerLiteral 0x13afbcd18e8 <col:25> 'int' 0
|   |-DeclStmt 0x13afbcd19d0 <line:1970:5, col:26>
|   | `-VarDecl 0x13afbcd1940 <col:5, col:25> col:9 used err_in_server 'int' cinit
|   |   `-IntegerLiteral 0x13afbcd19a8 <col:25> 'int' 0
|   |-IfStmt 0x13afbcd1c78 <line:1973:5, line:1974:14>
|   | |-OpaqueValueExpr 0x13afbcd1c60 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x13afbcd1c48 <col:9, col:14> 'err' 0x13afbcd1bf8
|   |-IfStmt 0x13afbcd2068 <line:1977:5, line:1978:14>
|   | |-OpaqueValueExpr 0x13afbcd2050 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x13afbcd2038 <col:9, col:14> 'err' 0x13afbcd1bf8
|   |-IfStmt 0x13afbcd2640 <line:1984:5, line:1985:14>
|   | |-OpaqueValueExpr 0x13afbcd2628 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x13afbcd2610 <col:9, col:14> 'err' 0x13afbcd1bf8
|   |-IfStmt 0x13afbcd27e8 <line:1987:5, line:1988:14>
|   | |-OpaqueValueExpr 0x13afbcd27d0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x13afbcd27b8 <col:9, col:14> 'err' 0x13afbcd1bf8
|   |-IfStmt 0x13afbcd28a0 <line:1989:5, line:1990:14>
|   | |-OpaqueValueExpr 0x13afbcd2888 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x13afbcd2870 <col:9, col:14> 'err' 0x13afbcd1bf8
|   |-CompoundStmt 0x13afbcd3150 <line:1992:5, line:2013:5>
|   | |-DeclStmt 0x13afbcd2a20 <line:1993:9, col:42>
|   | | |-VarDecl 0x13afbcd28d0 <col:9, col:26> col:13 used st_connect 'int' cinit
|   | | | `-IntegerLiteral 0x13afbcd2938 <col:26> 'int' 0
|   | | `-VarDecl 0x13afbcd2978 <col:9, col:41> col:29 used st_accept 'int' cinit
|   | |   `-IntegerLiteral 0x13afbcd29e0 <col:41> 'int' 0
|   | `-WhileStmt 0x13afbcd3138 <line:1995:9, line:2012:9>
|   |   |-BinaryOperator 0x13afbcd2b08 <line:1995:15, col:31> 'int' '||'
|   |   | |-UnaryOperator 0x13afbcd2a88 <col:15, col:16> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x13afbcd2a70 <col:16> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13afbcd2a38 <col:16> 'int' lvalue Var 0x13afbcd28d0 'st_connect' 'int'
|   |   | `-UnaryOperator 0x13afbcd2af0 <col:30, col:31> 'int' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x13afbcd2ad8 <col:31> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x13afbcd2aa0 <col:31> 'int' lvalue Var 0x13afbcd2978 'st_accept' 'int'
|   |   `-CompoundStmt 0x13afbcd3118 <col:42, line:2012:9>
|   |     |-IfStmt 0x13afbcd2ef8 <line:1996:13, line:2003:13>
|   |     | |-UnaryOperator 0x13afbcd2b60 <line:1996:17, col:18> 'int' prefix '!' cannot overflow
|   |     | | `-ImplicitCastExpr 0x13afbcd2b48 <col:18> 'int' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x13afbcd2b28 <col:18> 'int' lvalue Var 0x13afbcd28d0 'st_connect' 'int'
|   |     | `-CompoundStmt 0x13afbcd2ee0 <col:30, line:2003:13>
|   |     |   `-IfStmt 0x13afbcd2eb8 <line:1997:17, line:2002:17> has_else
|   |     |     |-OpaqueValueExpr 0x13afbcd2ea0 <<invalid sloc>> '_Bool'
|   |     |     |-CompoundStmt 0x13afbcd2e08 <line:1997:50, line:2000:17>
|   |     |     | `-IfStmt 0x13afbcd2df0 <line:1998:21, line:1999:30>
|   |     |     |   |-OpaqueValueExpr 0x13afbcd2dd8 <<invalid sloc>> '_Bool'
|   |     |     |   `-GotoStmt 0x13afbcd2dc0 <col:25, col:30> 'err' 0x13afbcd1bf8
|   |     |     `-CompoundStmt 0x13afbcd2e88 <line:2000:24, line:2002:17>
|   |     |       `-BinaryOperator 0x13afbcd2e68 <line:2001:21, col:34> 'int' '='
|   |     |         |-DeclRefExpr 0x13afbcd2e20 <col:21> 'int' lvalue Var 0x13afbcd28d0 'st_connect' 'int'
|   |     |         `-IntegerLiteral 0x13afbcd2e40 <col:34> 'int' 1
|   |     `-IfStmt 0x13afbcd3100 <line:2004:13, line:2011:13>
|   |       |-UnaryOperator 0x13afbcd2f48 <line:2004:17, col:18> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x13afbcd2f30 <col:18> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x13afbcd2f10 <col:18> 'int' lvalue Var 0x13afbcd2978 'st_accept' 'int'
|   |       `-CompoundStmt 0x13afbcd30e8 <col:29, line:2011:13>
|   |         `-IfStmt 0x13afbcd30c0 <line:2005:17, line:2010:17> has_else
|   |           |-OpaqueValueExpr 0x13afbcd30a8 <<invalid sloc>> '_Bool'
|   |           |-CompoundStmt 0x13afbcd3010 <line:2005:47, line:2008:17>
|   |           | `-IfStmt 0x13afbcd2ff8 <line:2006:21, line:2007:30>
|   |           |   |-OpaqueValueExpr 0x13afbcd2fe0 <<invalid sloc>> '_Bool'
|   |           |   `-GotoStmt 0x13afbcd2fc8 <col:25, col:30> 'err' 0x13afbcd1bf8
|   |           `-CompoundStmt 0x13afbcd3090 <line:2008:24, line:2010:17>
|   |             `-BinaryOperator 0x13afbcd3070 <line:2009:21, col:33> 'int' '='
|   |               |-DeclRefExpr 0x13afbcd3028 <col:21> 'int' lvalue Var 0x13afbcd2978 'st_accept' 'int'
|   |               `-IntegerLiteral 0x13afbcd3048 <col:33> 'int' 1
|   |-IfStmt 0x13afbcd36e0 <line:2020:5, line:2021:14>
|   | |-OpaqueValueExpr 0x13afbcd36c8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x13afbcd36b0 <col:9, col:14> 'err' 0x13afbcd1bf8
|   |-IfStmt 0x13afbcd37e0 <line:2024:5, line:2025:14>
|   | |-OpaqueValueExpr 0x13afbcd37c8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x13afbcd37b0 <col:9, col:14> 'err' 0x13afbcd1bf8
|   |-DoStmt 0x13afbcdfeb8 <line:2035:5, line:2196:64>
|   | |-CompoundStmt 0x13afbcc9b10 <line:2035:8, line:2195:5>
|   | | |-CompoundStmt 0x13afbcc7ce0 <line:2054:9, line:2131:9>
|   | | | |-DeclStmt 0x13afbcd3dc0 <line:2057:13, col:32>
|   | | | | `-VarDecl 0x13afbcd3d58 <col:13, col:31> col:18 used cbuf 'char [8192]'
|   | | | |-DeclStmt 0x13afbcc5e90 <line:2058:13, col:21>
|   | | | | |-VarDecl 0x13afbcc5d90 <col:13, col:17> col:17 used i 'int'
|   | | | | `-VarDecl 0x13afbcc5e10 <col:13, col:20> col:20 used r 'int'
|   | | | |-DeclStmt 0x13afbcc5fd0 <line:2059:13, col:38>
|   | | | | `-VarDecl 0x13afbcc5eb8 <col:13, col:37> col:21 used c_clock 'clock_t':'long' cinit
|   | | | |   `-CallExpr 0x13afbcc5fb0 <col:31, col:37> 'clock_t':'long'
|   | | | |     `-ImplicitCastExpr 0x13afbcc5f98 <col:31> 'clock_t (*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |       `-DeclRefExpr 0x13afbcc5f20 <col:31> 'clock_t (void) __attribute__((cdecl))':'clock_t (void)' Function 0x13afbd71758 'clock' 'clock_t (void) __attribute__((cdecl))':'clock_t (void)'
|   | | | |-CallExpr 0x13afbcc6120 <line:2061:13, col:41> 'void *'
|   | | | | |-ImplicitCastExpr 0x13afbcc6108 <col:13> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | | | | `-DeclRefExpr 0x13afbcc5fe8 <col:13> 'void *(void *, int, unsigned long long)' Function 0x13afbd28a78 'memset' 'void *(void *, int, unsigned long long)'
|   | | | | |-ImplicitCastExpr 0x13afbcc6170 <col:20> 'void *' <BitCast>
|   | | | | | `-ImplicitCastExpr 0x13afbcc6158 <col:20> 'char *' <ArrayToPointerDecay>
|   | | | | |   `-DeclRefExpr 0x13afbcc6008 <col:20> 'char [8192]' lvalue Var 0x13afbcd3d58 'cbuf' 'char [8192]'
|   | | | | |-IntegerLiteral 0x13afbcc6040 <col:26> 'int' 0
|   | | | | `-UnaryExprOrTypeTraitExpr 0x13afbcc60a8 <col:29, col:40> 'unsigned long long' sizeof
|   | | | |   `-ParenExpr 0x13afbcc6088 <col:35, col:40> 'char [8192]' lvalue
|   | | | |     `-DeclRefExpr 0x13afbcc6068 <col:36> 'char [8192]' lvalue Var 0x13afbcd3d58 'cbuf' 'char [8192]' non_odr_use_unevaluated
|   | | | |-IfStmt 0x13afbcc7090 <line:2068:13, line:2096:13>
|   | | | | |-BinaryOperator 0x13afbcc64d0 <line:2068:17, col:26> 'int' '>'
|   | | | | | |-ImplicitCastExpr 0x13afbcc64a0 <col:17> 'long' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x13afbcc6440 <col:17> 'long' lvalue Var 0x13afbcd10c0 'cw_num' 'long'
|   | | | | | `-ImplicitCastExpr 0x13afbcc64b8 <col:26> 'long' <IntegralCast>
|   | | | | |   `-IntegerLiteral 0x13afbcc6478 <col:26> 'int' 0
|   | | | | `-CompoundStmt 0x13afbcc7070 <col:29, line:2096:13>
|   | | | |   |-IfStmt 0x13afbcc6770 <line:2071:17, line:2074:30> has_else
|   | | | |   | |-BinaryOperator 0x13afbcc65c8 <line:2071:21, col:47> 'int' '>'
|   | | | |   | | |-ImplicitCastExpr 0x13afbcc65b0 <col:21> 'long' <LValueToRValue>
|   | | | |   | | | `-DeclRefExpr 0x13afbcc64f0 <col:21> 'long' lvalue Var 0x13afbcd10c0 'cw_num' 'long'
|   | | | |   | | `-CStyleCastExpr 0x13afbcc6588 <col:30, col:47> 'long' <IntegralCast>
|   | | | |   | |   `-UnaryExprOrTypeTraitExpr 0x13afbcc6550 <col:36, col:47> 'unsigned long long' sizeof
|   | | | |   | |     `-ParenExpr 0x13afbcc6530 <col:42, col:47> 'char [8192]' lvalue
|   | | | |   | |       `-DeclRefExpr 0x13afbcc6510 <col:43> 'char [8192]' lvalue Var 0x13afbcd3d58 'cbuf' 'char [8192]' non_odr_use_unevaluated
|   | | | |   | |-BinaryOperator 0x13afbcc6698 <line:2072:21, col:36> 'int' '='
|   | | | |   | | |-DeclRefExpr 0x13afbcc65e8 <col:21> 'int' lvalue Var 0x13afbcc5d90 'i' 'int'
|   | | | |   | | `-ImplicitCastExpr 0x13afbcc6680 <col:25, col:36> 'int' <IntegralCast>
|   | | | |   | |   `-UnaryExprOrTypeTraitExpr 0x13afbcc6660 <col:25, col:36> 'unsigned long long' sizeof
|   | | | |   | |     `-ParenExpr 0x13afbcc6640 <col:31, col:36> 'char [8192]' lvalue
|   | | | |   | |       `-DeclRefExpr 0x13afbcc6620 <col:32> 'char [8192]' lvalue Var 0x13afbcd3d58 'cbuf' 'char [8192]' non_odr_use_unevaluated
|   | | | |   | `-BinaryOperator 0x13afbcc6750 <line:2074:21, col:30> 'int' '='
|   | | | |   |   |-DeclRefExpr 0x13afbcc66b8 <col:21> 'int' lvalue Var 0x13afbcc5d90 'i' 'int'
|   | | | |   |   `-CStyleCastExpr 0x13afbcc6728 <col:25, col:30> 'int' <IntegralCast>
|   | | | |   |     `-ImplicitCastExpr 0x13afbcc6710 <col:30> 'long' <LValueToRValue> part_of_explicit_cast
|   | | | |   |       `-DeclRefExpr 0x13afbcc66d8 <col:30> 'long' lvalue Var 0x13afbcd10c0 'cw_num' 'long'
|   | | | |   `-IfStmt 0x13afbcc7048 <line:2076:17, line:2095:17> has_else
|   | | | |     |-BinaryOperator 0x13afbcc6890 <line:2076:21, col:25> 'int' '<'
|   | | | |     | |-ImplicitCastExpr 0x13afbcc6878 <col:21> 'int' <LValueToRValue>
|   | | | |     | | `-DeclRefExpr 0x13afbcc6830 <col:21> 'int' lvalue Var 0x13afbcc5e10 'r' 'int'
|   | | | |     | `-IntegerLiteral 0x13afbcc6850 <col:25> 'int' 0
|   | | | |     |-CompoundStmt 0x13afbcc6b70 <col:28, line:2088:17>
|   | | | |     | `-IfStmt 0x13afbcc6b58 <line:2077:21, line:2081:21>
|   | | | |     |   |-OpaqueValueExpr 0x13afbcc6b40 <<invalid sloc>> '_Bool'
|   | | | |     |   `-CompoundStmt 0x13afbcc6b18 <line:2077:55, line:2081:21>
|   | | | |     |     |-CallExpr 0x13afbcc6a20 <line:2078:25, col:60> 'int'
|   | | | |     |     | |-ImplicitCastExpr 0x13afbcc6a08 <col:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | |     |     | | `-DeclRefExpr 0x13afbcc68d0 <col:25> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |     |     | |-ParenExpr 0x13afbcc69a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | |     |     | | `-UnaryOperator 0x13afbcc6990 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |     |     | |   `-ArraySubscriptExpr 0x13afbcc6970 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |     | |     |-CallExpr 0x13afbcc6928 <col:18, col:29> 'FILE *'
|   | | | |     |     | |     | `-ImplicitCastExpr 0x13afbcc6910 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |     | |     |   `-DeclRefExpr 0x13afbcc68f0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     |     | |     `-IntegerLiteral 0x13afbcc6948 <col:31> 'int' 2
|   | | | |     |     | `-ImplicitCastExpr 0x13afbcc6a68 <.//openssl//file_jk/after\test\ssltest_old.c:2078:41> 'const char *' <NoOp>
|   | | | |     |     |   `-ImplicitCastExpr 0x13afbcc6a50 <col:41> 'char *' <ArrayToPointerDecay>
|   | | | |     |     |     `-StringLiteral 0x13afbcc69c8 <col:41> 'char [17]' lvalue "ERROR in CLIENT\n"
|   | | | |     |     |-BinaryOperator 0x13afbcc6ae0 <line:2079:25, col:41> 'int' '='
|   | | | |     |     | |-DeclRefExpr 0x13afbcc6a80 <col:25> 'int' lvalue Var 0x13afbcd1880 'err_in_client' 'int'
|   | | | |     |     | `-IntegerLiteral 0x13afbcc6ab8 <col:41> 'int' 1
|   | | | |     |     `-GotoStmt 0x13afbcc6b00 <line:2080:25, col:30> 'err' 0x13afbcd1bf8
|   | | | |     `-IfStmt 0x13afbcc7020 <line:2088:24, line:2095:17> has_else
|   | | | |       |-BinaryOperator 0x13afbcc6be8 <line:2088:28, col:33> 'int' '=='
|   | | | |       | |-ImplicitCastExpr 0x13afbcc6bd0 <col:28> 'int' <LValueToRValue>
|   | | | |       | | `-DeclRefExpr 0x13afbcc6b88 <col:28> 'int' lvalue Var 0x13afbcc5e10 'r' 'int'
|   | | | |       | `-IntegerLiteral 0x13afbcc6ba8 <col:33> 'int' 0
|   | | | |       |-CompoundStmt 0x13afbcc6de0 <col:36, line:2091:17>
|   | | | |       | |-CallExpr 0x13afbcc6d68 <line:2089:21, col:66> 'int'
|   | | | |       | | |-ImplicitCastExpr 0x13afbcc6d50 <col:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | |       | | | `-DeclRefExpr 0x13afbcc6c08 <col:21> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |       | | |-ParenExpr 0x13afbcc6ce0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | |       | | | `-UnaryOperator 0x13afbcc6cc8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |       | | |   `-ArraySubscriptExpr 0x13afbcc6ca8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |       | | |     |-CallExpr 0x13afbcc6c60 <col:18, col:29> 'FILE *'
|   | | | |       | | |     | `-ImplicitCastExpr 0x13afbcc6c48 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |       | | |     |   `-DeclRefExpr 0x13afbcc6c28 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |       | | |     `-IntegerLiteral 0x13afbcc6c80 <col:31> 'int' 2
|   | | | |       | | `-ImplicitCastExpr 0x13afbcc6db0 <.//openssl//file_jk/after\test\ssltest_old.c:2089:37> 'const char *' <NoOp>
|   | | | |       | |   `-ImplicitCastExpr 0x13afbcc6d98 <col:37> 'char *' <ArrayToPointerDecay>
|   | | | |       | |     `-StringLiteral 0x13afbcc6d00 <col:37> 'char [27]' lvalue "SSL CLIENT STARTUP FAILED\n"
|   | | | |       | `-GotoStmt 0x13afbcc6dc8 <line:2090:21, col:26> 'err' 0x13afbcd1bf8
|   | | | |       `-CompoundStmt 0x13afbcc7000 <line:2091:24, line:2095:17>
|   | | | |         |-IfStmt 0x13afbcc6f48 <line:2092:21, line:2093:54>
|   | | | |         | |-ImplicitCastExpr 0x13afbcc6e20 <line:2092:25> 'int' <LValueToRValue>
|   | | | |         | | `-DeclRefExpr 0x13afbcc6e00 <col:25> 'int' lvalue Var 0x13afbca4a70 'debug' 'int'
|   | | | |         | `-CallExpr 0x13afbcc6ed0 <line:2093:25, col:54> 'int'
|   | | | |         |   |-ImplicitCastExpr 0x13afbcc6eb8 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | | |         |   | `-DeclRefExpr 0x13afbcc6e38 <col:25> 'int (const char *, ...)' Function 0x13afbbc9990 'printf' 'int (const char *, ...)'
|   | | | |         |   |-ImplicitCastExpr 0x13afbcc6f18 <col:32> 'const char *' <NoOp>
|   | | | |         |   | `-ImplicitCastExpr 0x13afbcc6f00 <col:32> 'char *' <ArrayToPointerDecay>
|   | | | |         |   |   `-StringLiteral 0x13afbcc6e58 <col:32> 'char [17]' lvalue "client wrote %d\n"
|   | | | |         |   `-ImplicitCastExpr 0x13afbcc6f30 <col:53> 'int' <LValueToRValue>
|   | | | |         |     `-DeclRefExpr 0x13afbcc6e80 <col:53> 'int' lvalue Var 0x13afbcc5e10 'r' 'int'
|   | | | |         `-CompoundAssignOperator 0x13afbcc6fd0 <line:2094:21, col:31> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | | |           |-DeclRefExpr 0x13afbcc6f60 <col:21> 'long' lvalue Var 0x13afbcd10c0 'cw_num' 'long'
|   | | | |           `-ImplicitCastExpr 0x13afbcc6fb8 <col:31> 'long' <IntegralCast>
|   | | | |             `-ImplicitCastExpr 0x13afbcc6fa0 <col:31> 'int' <LValueToRValue>
|   | | | |               `-DeclRefExpr 0x13afbcc6f80 <col:31> 'int' lvalue Var 0x13afbcc5e10 'r' 'int'
|   | | | |-IfStmt 0x13afbcc7b48 <line:2098:13, line:2119:13>
|   | | | | |-BinaryOperator 0x13afbcc7138 <line:2098:17, col:26> 'int' '>'
|   | | | | | |-ImplicitCastExpr 0x13afbcc7108 <col:17> 'long' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x13afbcc70a8 <col:17> 'long' lvalue Var 0x13afbcd1190 'cr_num' 'long'
|   | | | | | `-ImplicitCastExpr 0x13afbcc7120 <col:26> 'long' <IntegralCast>
|   | | | | |   `-IntegerLiteral 0x13afbcc70e0 <col:26> 'int' 0
|   | | | | `-CompoundStmt 0x13afbcc7b30 <col:29, line:2119:13>
|   | | | |   `-IfStmt 0x13afbcc7b08 <line:2102:17, line:2118:17> has_else
|   | | | |     |-BinaryOperator 0x13afbcc7368 <line:2102:21, col:25> 'int' '<'
|   | | | |     | |-ImplicitCastExpr 0x13afbcc7350 <col:21> 'int' <LValueToRValue>
|   | | | |     | | `-DeclRefExpr 0x13afbcc7308 <col:21> 'int' lvalue Var 0x13afbcc5e10 'r' 'int'
|   | | | |     | `-IntegerLiteral 0x13afbcc7328 <col:25> 'int' 0
|   | | | |     |-CompoundStmt 0x13afbcc7630 <col:28, line:2111:17>
|   | | | |     | `-IfStmt 0x13afbcc7618 <line:2103:21, line:2107:21>
|   | | | |     |   |-OpaqueValueExpr 0x13afbcc7600 <<invalid sloc>> '_Bool'
|   | | | |     |   `-CompoundStmt 0x13afbcc75d8 <line:2103:55, line:2107:21>
|   | | | |     |     |-CallExpr 0x13afbcc74f8 <line:2104:25, col:60> 'int'
|   | | | |     |     | |-ImplicitCastExpr 0x13afbcc74e0 <col:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | |     |     | | `-DeclRefExpr 0x13afbcc73a8 <col:25> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |     |     | |-ParenExpr 0x13afbcc7480 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | |     |     | | `-UnaryOperator 0x13afbcc7468 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |     |     | |   `-ArraySubscriptExpr 0x13afbcc7448 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |     | |     |-CallExpr 0x13afbcc7400 <col:18, col:29> 'FILE *'
|   | | | |     |     | |     | `-ImplicitCastExpr 0x13afbcc73e8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |     | |     |   `-DeclRefExpr 0x13afbcc73c8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     |     | |     `-IntegerLiteral 0x13afbcc7420 <col:31> 'int' 2
|   | | | |     |     | `-ImplicitCastExpr 0x13afbcc7540 <.//openssl//file_jk/after\test\ssltest_old.c:2104:41> 'const char *' <NoOp>
|   | | | |     |     |   `-ImplicitCastExpr 0x13afbcc7528 <col:41> 'char *' <ArrayToPointerDecay>
|   | | | |     |     |     `-StringLiteral 0x13afbcc74a0 <col:41> 'char [17]' lvalue "ERROR in CLIENT\n"
|   | | | |     |     |-BinaryOperator 0x13afbcc75a0 <line:2105:25, col:41> 'int' '='
|   | | | |     |     | |-DeclRefExpr 0x13afbcc7558 <col:25> 'int' lvalue Var 0x13afbcd1880 'err_in_client' 'int'
|   | | | |     |     | `-IntegerLiteral 0x13afbcc7578 <col:41> 'int' 1
|   | | | |     |     `-GotoStmt 0x13afbcc75c0 <line:2106:25, col:30> 'err' 0x13afbcd1bf8
|   | | | |     `-IfStmt 0x13afbcc7ae0 <line:2111:24, line:2118:17> has_else
|   | | | |       |-BinaryOperator 0x13afbcc76a8 <line:2111:28, col:33> 'int' '=='
|   | | | |       | |-ImplicitCastExpr 0x13afbcc7690 <col:28> 'int' <LValueToRValue>
|   | | | |       | | `-DeclRefExpr 0x13afbcc7648 <col:28> 'int' lvalue Var 0x13afbcc5e10 'r' 'int'
|   | | | |       | `-IntegerLiteral 0x13afbcc7668 <col:33> 'int' 0
|   | | | |       |-CompoundStmt 0x13afbcc78a0 <col:36, line:2114:17>
|   | | | |       | |-CallExpr 0x13afbcc7828 <line:2112:21, col:66> 'int'
|   | | | |       | | |-ImplicitCastExpr 0x13afbcc7810 <col:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | |       | | | `-DeclRefExpr 0x13afbcc76c8 <col:21> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |       | | |-ParenExpr 0x13afbcc77a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | |       | | | `-UnaryOperator 0x13afbcc7788 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |       | | |   `-ArraySubscriptExpr 0x13afbcc7768 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |       | | |     |-CallExpr 0x13afbcc7720 <col:18, col:29> 'FILE *'
|   | | | |       | | |     | `-ImplicitCastExpr 0x13afbcc7708 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |       | | |     |   `-DeclRefExpr 0x13afbcc76e8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |       | | |     `-IntegerLiteral 0x13afbcc7740 <col:31> 'int' 2
|   | | | |       | | `-ImplicitCastExpr 0x13afbcc7870 <.//openssl//file_jk/after\test\ssltest_old.c:2112:37> 'const char *' <NoOp>
|   | | | |       | |   `-ImplicitCastExpr 0x13afbcc7858 <col:37> 'char *' <ArrayToPointerDecay>
|   | | | |       | |     `-StringLiteral 0x13afbcc77c0 <col:37> 'char [27]' lvalue "SSL CLIENT STARTUP FAILED\n"
|   | | | |       | `-GotoStmt 0x13afbcc7888 <line:2113:21, col:26> 'err' 0x13afbcd1bf8
|   | | | |       `-CompoundStmt 0x13afbcc7ac0 <line:2114:24, line:2118:17>
|   | | | |         |-IfStmt 0x13afbcc7a08 <line:2115:21, line:2116:53>
|   | | | |         | |-ImplicitCastExpr 0x13afbcc78e0 <line:2115:25> 'int' <LValueToRValue>
|   | | | |         | | `-DeclRefExpr 0x13afbcc78c0 <col:25> 'int' lvalue Var 0x13afbca4a70 'debug' 'int'
|   | | | |         | `-CallExpr 0x13afbcc7990 <line:2116:25, col:53> 'int'
|   | | | |         |   |-ImplicitCastExpr 0x13afbcc7978 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | | |         |   | `-DeclRefExpr 0x13afbcc78f8 <col:25> 'int (const char *, ...)' Function 0x13afbbc9990 'printf' 'int (const char *, ...)'
|   | | | |         |   |-ImplicitCastExpr 0x13afbcc79d8 <col:32> 'const char *' <NoOp>
|   | | | |         |   | `-ImplicitCastExpr 0x13afbcc79c0 <col:32> 'char *' <ArrayToPointerDecay>
|   | | | |         |   |   `-StringLiteral 0x13afbcc7918 <col:32> 'char [16]' lvalue "client read %d\n"
|   | | | |         |   `-ImplicitCastExpr 0x13afbcc79f0 <col:52> 'int' <LValueToRValue>
|   | | | |         |     `-DeclRefExpr 0x13afbcc7940 <col:52> 'int' lvalue Var 0x13afbcc5e10 'r' 'int'
|   | | | |         `-CompoundAssignOperator 0x13afbcc7a90 <line:2117:21, col:31> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | | |           |-DeclRefExpr 0x13afbcc7a20 <col:21> 'long' lvalue Var 0x13afbcd1190 'cr_num' 'long'
|   | | | |           `-ImplicitCastExpr 0x13afbcc7a78 <col:31> 'long' <IntegralCast>
|   | | | |             `-ImplicitCastExpr 0x13afbcc7a60 <col:31> 'int' <LValueToRValue>
|   | | | |               `-DeclRefExpr 0x13afbcc7a40 <col:31> 'int' lvalue Var 0x13afbcc5e10 'r' 'int'
|   | | | `-CompoundAssignOperator 0x13afbcc7cb0 <line:2130:13, col:42> 'clock_t':'long' '+=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | |   |-UnaryOperator 0x13afbcc7bb0 <col:13, col:14> 'clock_t':'long' lvalue prefix '*' cannot overflow
|   | | |   | `-ImplicitCastExpr 0x13afbcc7b98 <col:14> 'clock_t *' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x13afbcc7b60 <col:14> 'clock_t *' lvalue ParmVar 0x13afbcd0f00 'c_time' 'clock_t *'
|   | | |   `-ParenExpr 0x13afbcc7c90 <col:24, col:42> 'long'
|   | | |     `-BinaryOperator 0x13afbcc7c70 <col:25, col:35> 'long' '-'
|   | | |       |-CallExpr 0x13afbcc7c00 <col:25, col:31> 'clock_t':'long'
|   | | |       | `-ImplicitCastExpr 0x13afbcc7be8 <col:25> 'clock_t (*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | |       |   `-DeclRefExpr 0x13afbcc7bc8 <col:25> 'clock_t (void) __attribute__((cdecl))':'clock_t (void)' Function 0x13afbd71758 'clock' 'clock_t (void) __attribute__((cdecl))':'clock_t (void)'
|   | | |       `-ImplicitCastExpr 0x13afbcc7c58 <col:35> 'clock_t':'long' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x13afbcc7c20 <col:35> 'clock_t':'long' lvalue Var 0x13afbcc5eb8 'c_clock' 'clock_t':'long'
|   | | `-CompoundStmt 0x13afbcc9ac8 <line:2133:9, line:2194:9>
|   | |   |-DeclStmt 0x13afbcc7e60 <line:2136:13, col:32>
|   | |   | `-VarDecl 0x13afbcc7df8 <col:13, col:31> col:18 used sbuf 'char [8192]'
|   | |   |-DeclStmt 0x13afbcc7f90 <line:2137:13, col:21>
|   | |   | |-VarDecl 0x13afbcc7e90 <col:13, col:17> col:17 used i 'int'
|   | |   | `-VarDecl 0x13afbcc7f10 <col:13, col:20> col:20 used r 'int'
|   | |   |-DeclStmt 0x13afbcc8078 <line:2138:13, col:38>
|   | |   | `-VarDecl 0x13afbcc7fb8 <col:13, col:37> col:21 used s_clock 'clock_t':'long' cinit
|   | |   |   `-CallExpr 0x13afbcc8058 <col:31, col:37> 'clock_t':'long'
|   | |   |     `-ImplicitCastExpr 0x13afbcc8040 <col:31> 'clock_t (*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |   |       `-DeclRefExpr 0x13afbcc8020 <col:31> 'clock_t (void) __attribute__((cdecl))':'clock_t (void)' Function 0x13afbd71758 'clock' 'clock_t (void) __attribute__((cdecl))':'clock_t (void)'
|   | |   |-CallExpr 0x13afbcc81a0 <line:2140:13, col:41> 'void *'
|   | |   | |-ImplicitCastExpr 0x13afbcc8188 <col:13> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x13afbcc8090 <col:13> 'void *(void *, int, unsigned long long)' Function 0x13afbd28a78 'memset' 'void *(void *, int, unsigned long long)'
|   | |   | |-ImplicitCastExpr 0x13afbcc81f0 <col:20> 'void *' <BitCast>
|   | |   | | `-ImplicitCastExpr 0x13afbcc81d8 <col:20> 'char *' <ArrayToPointerDecay>
|   | |   | |   `-DeclRefExpr 0x13afbcc80b0 <col:20> 'char [8192]' lvalue Var 0x13afbcc7df8 'sbuf' 'char [8192]'
|   | |   | |-IntegerLiteral 0x13afbcc80e8 <col:26> 'int' 0
|   | |   | `-UnaryExprOrTypeTraitExpr 0x13afbcc8150 <col:29, col:40> 'unsigned long long' sizeof
|   | |   |   `-ParenExpr 0x13afbcc8130 <col:35, col:40> 'char [8192]' lvalue
|   | |   |     `-DeclRefExpr 0x13afbcc8110 <col:36> 'char [8192]' lvalue Var 0x13afbcc7df8 'sbuf' 'char [8192]' non_odr_use_unevaluated
|   | |   |-IfStmt 0x13afbcc8f68 <line:2147:13, line:2170:13>
|   | |   | |-BinaryOperator 0x13afbcc83a8 <line:2147:17, col:26> 'int' '>'
|   | |   | | |-ImplicitCastExpr 0x13afbcc8378 <col:17> 'long' <LValueToRValue>
|   | |   | | | `-DeclRefExpr 0x13afbcc8318 <col:17> 'long' lvalue Var 0x13afbcd1248 'sw_num' 'long'
|   | |   | | `-ImplicitCastExpr 0x13afbcc8390 <col:26> 'long' <IntegralCast>
|   | |   | |   `-IntegerLiteral 0x13afbcc8350 <col:26> 'int' 0
|   | |   | `-CompoundStmt 0x13afbcc8f48 <col:29, line:2170:13>
|   | |   |   |-IfStmt 0x13afbcc8648 <line:2150:17, line:2153:30> has_else
|   | |   |   | |-BinaryOperator 0x13afbcc84a0 <line:2150:21, col:47> 'int' '>'
|   | |   |   | | |-ImplicitCastExpr 0x13afbcc8488 <col:21> 'long' <LValueToRValue>
|   | |   |   | | | `-DeclRefExpr 0x13afbcc83c8 <col:21> 'long' lvalue Var 0x13afbcd1248 'sw_num' 'long'
|   | |   |   | | `-CStyleCastExpr 0x13afbcc8460 <col:30, col:47> 'long' <IntegralCast>
|   | |   |   | |   `-UnaryExprOrTypeTraitExpr 0x13afbcc8428 <col:36, col:47> 'unsigned long long' sizeof
|   | |   |   | |     `-ParenExpr 0x13afbcc8408 <col:42, col:47> 'char [8192]' lvalue
|   | |   |   | |       `-DeclRefExpr 0x13afbcc83e8 <col:43> 'char [8192]' lvalue Var 0x13afbcc7df8 'sbuf' 'char [8192]' non_odr_use_unevaluated
|   | |   |   | |-BinaryOperator 0x13afbcc8570 <line:2151:21, col:36> 'int' '='
|   | |   |   | | |-DeclRefExpr 0x13afbcc84c0 <col:21> 'int' lvalue Var 0x13afbcc7e90 'i' 'int'
|   | |   |   | | `-ImplicitCastExpr 0x13afbcc8558 <col:25, col:36> 'int' <IntegralCast>
|   | |   |   | |   `-UnaryExprOrTypeTraitExpr 0x13afbcc8538 <col:25, col:36> 'unsigned long long' sizeof
|   | |   |   | |     `-ParenExpr 0x13afbcc8518 <col:31, col:36> 'char [8192]' lvalue
|   | |   |   | |       `-DeclRefExpr 0x13afbcc84f8 <col:32> 'char [8192]' lvalue Var 0x13afbcc7df8 'sbuf' 'char [8192]' non_odr_use_unevaluated
|   | |   |   | `-BinaryOperator 0x13afbcc8628 <line:2153:21, col:30> 'int' '='
|   | |   |   |   |-DeclRefExpr 0x13afbcc8590 <col:21> 'int' lvalue Var 0x13afbcc7e90 'i' 'int'
|   | |   |   |   `-CStyleCastExpr 0x13afbcc8600 <col:25, col:30> 'int' <IntegralCast>
|   | |   |   |     `-ImplicitCastExpr 0x13afbcc85e8 <col:30> 'long' <LValueToRValue> part_of_explicit_cast
|   | |   |   |       `-DeclRefExpr 0x13afbcc85b0 <col:30> 'long' lvalue Var 0x13afbcd1248 'sw_num' 'long'
|   | |   |   `-IfStmt 0x13afbcc8f20 <line:2155:17, line:2169:17> has_else
|   | |   |     |-BinaryOperator 0x13afbcc8768 <line:2155:21, col:25> 'int' '<'
|   | |   |     | |-ImplicitCastExpr 0x13afbcc8750 <col:21> 'int' <LValueToRValue>
|   | |   |     | | `-DeclRefExpr 0x13afbcc8708 <col:21> 'int' lvalue Var 0x13afbcc7f10 'r' 'int'
|   | |   |     | `-IntegerLiteral 0x13afbcc8728 <col:25> 'int' 0
|   | |   |     |-CompoundStmt 0x13afbcc8a48 <col:28, line:2162:17>
|   | |   |     | `-IfStmt 0x13afbcc8a30 <line:2156:21, line:2160:21>
|   | |   |     |   |-OpaqueValueExpr 0x13afbcc8a18 <<invalid sloc>> '_Bool'
|   | |   |     |   `-CompoundStmt 0x13afbcc89f0 <line:2156:55, line:2160:21>
|   | |   |     |     |-CallExpr 0x13afbcc88f8 <line:2157:25, col:60> 'int'
|   | |   |     |     | |-ImplicitCastExpr 0x13afbcc88e0 <col:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | |   |     |     | | `-DeclRefExpr 0x13afbcc87a8 <col:25> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |   |     |     | |-ParenExpr 0x13afbcc8880 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | |   |     |     | | `-UnaryOperator 0x13afbcc8868 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   |     |     | |   `-ArraySubscriptExpr 0x13afbcc8848 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |   |     |     | |     |-CallExpr 0x13afbcc8800 <col:18, col:29> 'FILE *'
|   | |   |     |     | |     | `-ImplicitCastExpr 0x13afbcc87e8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |   |     |     | |     |   `-DeclRefExpr 0x13afbcc87c8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |   |     |     | |     `-IntegerLiteral 0x13afbcc8820 <col:31> 'int' 2
|   | |   |     |     | `-ImplicitCastExpr 0x13afbcc8940 <.//openssl//file_jk/after\test\ssltest_old.c:2157:41> 'const char *' <NoOp>
|   | |   |     |     |   `-ImplicitCastExpr 0x13afbcc8928 <col:41> 'char *' <ArrayToPointerDecay>
|   | |   |     |     |     `-StringLiteral 0x13afbcc88a0 <col:41> 'char [17]' lvalue "ERROR in SERVER\n"
|   | |   |     |     |-BinaryOperator 0x13afbcc89b8 <line:2158:25, col:41> 'int' '='
|   | |   |     |     | |-DeclRefExpr 0x13afbcc8958 <col:25> 'int' lvalue Var 0x13afbcd1940 'err_in_server' 'int'
|   | |   |     |     | `-IntegerLiteral 0x13afbcc8990 <col:41> 'int' 1
|   | |   |     |     `-GotoStmt 0x13afbcc89d8 <line:2159:25, col:30> 'err' 0x13afbcd1bf8
|   | |   |     `-IfStmt 0x13afbcc8ef8 <line:2162:24, line:2169:17> has_else
|   | |   |       |-BinaryOperator 0x13afbcc8ac0 <line:2162:28, col:33> 'int' '=='
|   | |   |       | |-ImplicitCastExpr 0x13afbcc8aa8 <col:28> 'int' <LValueToRValue>
|   | |   |       | | `-DeclRefExpr 0x13afbcc8a60 <col:28> 'int' lvalue Var 0x13afbcc7f10 'r' 'int'
|   | |   |       | `-IntegerLiteral 0x13afbcc8a80 <col:33> 'int' 0
|   | |   |       |-CompoundStmt 0x13afbcc8cb8 <col:36, line:2165:17>
|   | |   |       | |-CallExpr 0x13afbcc8c40 <line:2163:21, col:66> 'int'
|   | |   |       | | |-ImplicitCastExpr 0x13afbcc8c28 <col:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | |   |       | | | `-DeclRefExpr 0x13afbcc8ae0 <col:21> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |   |       | | |-ParenExpr 0x13afbcc8bb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | |   |       | | | `-UnaryOperator 0x13afbcc8ba0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   |       | | |   `-ArraySubscriptExpr 0x13afbcc8b80 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |   |       | | |     |-CallExpr 0x13afbcc8b38 <col:18, col:29> 'FILE *'
|   | |   |       | | |     | `-ImplicitCastExpr 0x13afbcc8b20 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |   |       | | |     |   `-DeclRefExpr 0x13afbcc8b00 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |   |       | | |     `-IntegerLiteral 0x13afbcc8b58 <col:31> 'int' 2
|   | |   |       | | `-ImplicitCastExpr 0x13afbcc8c88 <.//openssl//file_jk/after\test\ssltest_old.c:2163:37> 'const char *' <NoOp>
|   | |   |       | |   `-ImplicitCastExpr 0x13afbcc8c70 <col:37> 'char *' <ArrayToPointerDecay>
|   | |   |       | |     `-StringLiteral 0x13afbcc8bd8 <col:37> 'char [27]' lvalue "SSL SERVER STARTUP FAILED\n"
|   | |   |       | `-GotoStmt 0x13afbcc8ca0 <line:2164:21, col:26> 'err' 0x13afbcd1bf8
|   | |   |       `-CompoundStmt 0x13afbcc8ed8 <line:2165:24, line:2169:17>
|   | |   |         |-IfStmt 0x13afbcc8e20 <line:2166:21, line:2167:54>
|   | |   |         | |-ImplicitCastExpr 0x13afbcc8cf8 <line:2166:25> 'int' <LValueToRValue>
|   | |   |         | | `-DeclRefExpr 0x13afbcc8cd8 <col:25> 'int' lvalue Var 0x13afbca4a70 'debug' 'int'
|   | |   |         | `-CallExpr 0x13afbcc8da8 <line:2167:25, col:54> 'int'
|   | |   |         |   |-ImplicitCastExpr 0x13afbcc8d90 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | |   |         |   | `-DeclRefExpr 0x13afbcc8d10 <col:25> 'int (const char *, ...)' Function 0x13afbbc9990 'printf' 'int (const char *, ...)'
|   | |   |         |   |-ImplicitCastExpr 0x13afbcc8df0 <col:32> 'const char *' <NoOp>
|   | |   |         |   | `-ImplicitCastExpr 0x13afbcc8dd8 <col:32> 'char *' <ArrayToPointerDecay>
|   | |   |         |   |   `-StringLiteral 0x13afbcc8d30 <col:32> 'char [17]' lvalue "server wrote %d\n"
|   | |   |         |   `-ImplicitCastExpr 0x13afbcc8e08 <col:53> 'int' <LValueToRValue>
|   | |   |         |     `-DeclRefExpr 0x13afbcc8d58 <col:53> 'int' lvalue Var 0x13afbcc7f10 'r' 'int'
|   | |   |         `-CompoundAssignOperator 0x13afbcc8ea8 <line:2168:21, col:31> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   | |   |           |-DeclRefExpr 0x13afbcc8e38 <col:21> 'long' lvalue Var 0x13afbcd1248 'sw_num' 'long'
|   | |   |           `-ImplicitCastExpr 0x13afbcc8e90 <col:31> 'long' <IntegralCast>
|   | |   |             `-ImplicitCastExpr 0x13afbcc8e78 <col:31> 'int' <LValueToRValue>
|   | |   |               `-DeclRefExpr 0x13afbcc8e58 <col:31> 'int' lvalue Var 0x13afbcc7f10 'r' 'int'
|   | |   |-IfStmt 0x13afbcc9930 <line:2172:13, line:2191:13>
|   | |   | |-BinaryOperator 0x13afbcc9010 <line:2172:17, col:26> 'int' '>'
|   | |   | | |-ImplicitCastExpr 0x13afbcc8fe0 <col:17> 'long' <LValueToRValue>
|   | |   | | | `-DeclRefExpr 0x13afbcc8f80 <col:17> 'long' lvalue Var 0x13afbcd1300 'sr_num' 'long'
|   | |   | | `-ImplicitCastExpr 0x13afbcc8ff8 <col:26> 'long' <IntegralCast>
|   | |   | |   `-IntegerLiteral 0x13afbcc8fb8 <col:26> 'int' 0
|   | |   | `-CompoundStmt 0x13afbcc9918 <col:29, line:2191:13>
|   | |   |   `-IfStmt 0x13afbcc98f0 <line:2176:17, line:2190:17> has_else
|   | |   |     |-BinaryOperator 0x13afbcc9150 <line:2176:21, col:25> 'int' '<'
|   | |   |     | |-ImplicitCastExpr 0x13afbcc9138 <col:21> 'int' <LValueToRValue>
|   | |   |     | | `-DeclRefExpr 0x13afbcc90f0 <col:21> 'int' lvalue Var 0x13afbcc7f10 'r' 'int'
|   | |   |     | `-IntegerLiteral 0x13afbcc9110 <col:25> 'int' 0
|   | |   |     |-CompoundStmt 0x13afbcc9418 <col:28, line:2183:17>
|   | |   |     | `-IfStmt 0x13afbcc9400 <line:2177:21, line:2181:21>
|   | |   |     |   |-OpaqueValueExpr 0x13afbcc93e8 <<invalid sloc>> '_Bool'
|   | |   |     |   `-CompoundStmt 0x13afbcc93c0 <line:2177:55, line:2181:21>
|   | |   |     |     |-CallExpr 0x13afbcc92e0 <line:2178:25, col:60> 'int'
|   | |   |     |     | |-ImplicitCastExpr 0x13afbcc92c8 <col:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | |   |     |     | | `-DeclRefExpr 0x13afbcc9190 <col:25> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |   |     |     | |-ParenExpr 0x13afbcc9268 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | |   |     |     | | `-UnaryOperator 0x13afbcc9250 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   |     |     | |   `-ArraySubscriptExpr 0x13afbcc9230 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |   |     |     | |     |-CallExpr 0x13afbcc91e8 <col:18, col:29> 'FILE *'
|   | |   |     |     | |     | `-ImplicitCastExpr 0x13afbcc91d0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |   |     |     | |     |   `-DeclRefExpr 0x13afbcc91b0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |   |     |     | |     `-IntegerLiteral 0x13afbcc9208 <col:31> 'int' 2
|   | |   |     |     | `-ImplicitCastExpr 0x13afbcc9328 <.//openssl//file_jk/after\test\ssltest_old.c:2178:41> 'const char *' <NoOp>
|   | |   |     |     |   `-ImplicitCastExpr 0x13afbcc9310 <col:41> 'char *' <ArrayToPointerDecay>
|   | |   |     |     |     `-StringLiteral 0x13afbcc9288 <col:41> 'char [17]' lvalue "ERROR in SERVER\n"
|   | |   |     |     |-BinaryOperator 0x13afbcc9388 <line:2179:25, col:41> 'int' '='
|   | |   |     |     | |-DeclRefExpr 0x13afbcc9340 <col:25> 'int' lvalue Var 0x13afbcd1940 'err_in_server' 'int'
|   | |   |     |     | `-IntegerLiteral 0x13afbcc9360 <col:41> 'int' 1
|   | |   |     |     `-GotoStmt 0x13afbcc93a8 <line:2180:25, col:30> 'err' 0x13afbcd1bf8
|   | |   |     `-IfStmt 0x13afbcc98c8 <line:2183:24, line:2190:17> has_else
|   | |   |       |-BinaryOperator 0x13afbcc9490 <line:2183:28, col:33> 'int' '=='
|   | |   |       | |-ImplicitCastExpr 0x13afbcc9478 <col:28> 'int' <LValueToRValue>
|   | |   |       | | `-DeclRefExpr 0x13afbcc9430 <col:28> 'int' lvalue Var 0x13afbcc7f10 'r' 'int'
|   | |   |       | `-IntegerLiteral 0x13afbcc9450 <col:33> 'int' 0
|   | |   |       |-CompoundStmt 0x13afbcc9688 <col:36, line:2186:17>
|   | |   |       | |-CallExpr 0x13afbcc9610 <line:2184:21, col:66> 'int'
|   | |   |       | | |-ImplicitCastExpr 0x13afbcc95f8 <col:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | |   |       | | | `-DeclRefExpr 0x13afbcc94b0 <col:21> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |   |       | | |-ParenExpr 0x13afbcc9588 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | |   |       | | | `-UnaryOperator 0x13afbcc9570 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   |       | | |   `-ArraySubscriptExpr 0x13afbcc9550 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |   |       | | |     |-CallExpr 0x13afbcc9508 <col:18, col:29> 'FILE *'
|   | |   |       | | |     | `-ImplicitCastExpr 0x13afbcc94f0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |   |       | | |     |   `-DeclRefExpr 0x13afbcc94d0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |   |       | | |     `-IntegerLiteral 0x13afbcc9528 <col:31> 'int' 2
|   | |   |       | | `-ImplicitCastExpr 0x13afbcc9658 <.//openssl//file_jk/after\test\ssltest_old.c:2184:37> 'const char *' <NoOp>
|   | |   |       | |   `-ImplicitCastExpr 0x13afbcc9640 <col:37> 'char *' <ArrayToPointerDecay>
|   | |   |       | |     `-StringLiteral 0x13afbcc95a8 <col:37> 'char [27]' lvalue "SSL SERVER STARTUP FAILED\n"
|   | |   |       | `-GotoStmt 0x13afbcc9670 <line:2185:21, col:26> 'err' 0x13afbcd1bf8
|   | |   |       `-CompoundStmt 0x13afbcc98a8 <line:2186:24, line:2190:17>
|   | |   |         |-IfStmt 0x13afbcc97f0 <line:2187:21, line:2188:53>
|   | |   |         | |-ImplicitCastExpr 0x13afbcc96c8 <line:2187:25> 'int' <LValueToRValue>
|   | |   |         | | `-DeclRefExpr 0x13afbcc96a8 <col:25> 'int' lvalue Var 0x13afbca4a70 'debug' 'int'
|   | |   |         | `-CallExpr 0x13afbcc9778 <line:2188:25, col:53> 'int'
|   | |   |         |   |-ImplicitCastExpr 0x13afbcc9760 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | |   |         |   | `-DeclRefExpr 0x13afbcc96e0 <col:25> 'int (const char *, ...)' Function 0x13afbbc9990 'printf' 'int (const char *, ...)'
|   | |   |         |   |-ImplicitCastExpr 0x13afbcc97c0 <col:32> 'const char *' <NoOp>
|   | |   |         |   | `-ImplicitCastExpr 0x13afbcc97a8 <col:32> 'char *' <ArrayToPointerDecay>
|   | |   |         |   |   `-StringLiteral 0x13afbcc9700 <col:32> 'char [16]' lvalue "server read %d\n"
|   | |   |         |   `-ImplicitCastExpr 0x13afbcc97d8 <col:52> 'int' <LValueToRValue>
|   | |   |         |     `-DeclRefExpr 0x13afbcc9728 <col:52> 'int' lvalue Var 0x13afbcc7f10 'r' 'int'
|   | |   |         `-CompoundAssignOperator 0x13afbcc9878 <line:2189:21, col:31> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   | |   |           |-DeclRefExpr 0x13afbcc9808 <col:21> 'long' lvalue Var 0x13afbcd1300 'sr_num' 'long'
|   | |   |           `-ImplicitCastExpr 0x13afbcc9860 <col:31> 'long' <IntegralCast>
|   | |   |             `-ImplicitCastExpr 0x13afbcc9848 <col:31> 'int' <LValueToRValue>
|   | |   |               `-DeclRefExpr 0x13afbcc9828 <col:31> 'int' lvalue Var 0x13afbcc7f10 'r' 'int'
|   | |   `-CompoundAssignOperator 0x13afbcc9a98 <line:2193:13, col:42> 'clock_t':'long' '+=' ComputeLHSTy='long' ComputeResultTy='long'
|   | |     |-UnaryOperator 0x13afbcc9998 <col:13, col:14> 'clock_t':'long' lvalue prefix '*' cannot overflow
|   | |     | `-ImplicitCastExpr 0x13afbcc9980 <col:14> 'clock_t *' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x13afbcc9948 <col:14> 'clock_t *' lvalue ParmVar 0x13afbcd0e88 's_time' 'clock_t *'
|   | |     `-ParenExpr 0x13afbcc9a78 <col:24, col:42> 'long'
|   | |       `-BinaryOperator 0x13afbcc9a58 <col:25, col:35> 'long' '-'
|   | |         |-CallExpr 0x13afbcc99e8 <col:25, col:31> 'clock_t':'long'
|   | |         | `-ImplicitCastExpr 0x13afbcc99d0 <col:25> 'clock_t (*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |         |   `-DeclRefExpr 0x13afbcc99b0 <col:25> 'clock_t (void) __attribute__((cdecl))':'clock_t (void)' Function 0x13afbd71758 'clock' 'clock_t (void) __attribute__((cdecl))':'clock_t (void)'
|   | |         `-ImplicitCastExpr 0x13afbcc9a40 <col:35> 'clock_t':'long' <LValueToRValue>
|   | |           `-DeclRefExpr 0x13afbcc9a08 <col:35> 'clock_t':'long' lvalue Var 0x13afbcc7fb8 's_clock' 'clock_t':'long'
|   | `-BinaryOperator 0x13afbcdfe98 <line:2196:12, col:63> 'int' '||'
|   |   |-BinaryOperator 0x13afbcc9d18 <col:12, col:49> 'int' '||'
|   |   | |-BinaryOperator 0x13afbcc9c60 <col:12, col:35> 'int' '||'
|   |   | | |-BinaryOperator 0x13afbcc9ba8 <col:12, col:21> 'int' '>'
|   |   | | | |-ImplicitCastExpr 0x13afbcc9b78 <col:12> 'long' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x13afbcc9b30 <col:12> 'long' lvalue Var 0x13afbcd10c0 'cw_num' 'long'
|   |   | | | `-ImplicitCastExpr 0x13afbcc9b90 <col:21> 'long' <IntegralCast>
|   |   | | |   `-IntegerLiteral 0x13afbcc9b50 <col:21> 'int' 0
|   |   | | `-BinaryOperator 0x13afbcc9c40 <col:26, col:35> 'int' '>'
|   |   | |   |-ImplicitCastExpr 0x13afbcc9c10 <col:26> 'long' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x13afbcc9bc8 <col:26> 'long' lvalue Var 0x13afbcd1190 'cr_num' 'long'
|   |   | |   `-ImplicitCastExpr 0x13afbcc9c28 <col:35> 'long' <IntegralCast>
|   |   | |     `-IntegerLiteral 0x13afbcc9be8 <col:35> 'int' 0
|   |   | `-BinaryOperator 0x13afbcc9cf8 <col:40, col:49> 'int' '>'
|   |   |   |-ImplicitCastExpr 0x13afbcc9cc8 <col:40> 'long' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x13afbcc9c80 <col:40> 'long' lvalue Var 0x13afbcd1248 'sw_num' 'long'
|   |   |   `-ImplicitCastExpr 0x13afbcc9ce0 <col:49> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x13afbcc9ca0 <col:49> 'int' 0
|   |   `-BinaryOperator 0x13afbcdfe78 <col:54, col:63> 'int' '>'
|   |     |-ImplicitCastExpr 0x13afbcc9d80 <col:54> 'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x13afbcc9d38 <col:54> 'long' lvalue Var 0x13afbcd1300 'sr_num' 'long'
|   |     `-ImplicitCastExpr 0x13afbcdfe60 <col:63> 'long' <IntegralCast>
|   |       `-IntegerLiteral 0x13afbcc9d58 <col:63> 'int' 0
|   |-IfStmt 0x13afbce0088 <line:2201:5, line:2204:5>
|   | |-OpaqueValueExpr 0x13afbce0070 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbce0050 <line:2201:39, line:2204:5>
|   |   |-BinaryOperator 0x13afbcdffc8 <line:2202:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x13afbcdff68 <col:9> 'int' lvalue Var 0x13afbcd17c0 'ret' 'int'
|   |   | `-IntegerLiteral 0x13afbcdffa0 <col:15> 'int' 1
|   |   `-GotoStmt 0x13afbce0038 <line:2203:9, col:14> 'end' 0x13afbcdffe8
|   |-IfStmt 0x13afbce03a8 <line:2206:5, line:2210:5>
|   | |-BinaryOperator 0x13afbce0120 <line:2206:9, col:31> 'int' '<'
|   | | |-CallExpr 0x13afbce00d8 <col:9, col:27> 'int'
|   | | | `-ImplicitCastExpr 0x13afbce00c0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | |   `-DeclRefExpr 0x13afbce00a0 <col:9> 'int ()' Function 0x13afbc88bc8 'verify_serverinfo' 'int ()'
|   | | `-IntegerLiteral 0x13afbce00f8 <col:31> 'int' 0
|   | `-CompoundStmt 0x13afbce0380 <col:34, line:2210:5>
|   |   |-CallExpr 0x13afbce02a0 <line:2207:9, col:53> 'int'
|   |   | |-ImplicitCastExpr 0x13afbce0288 <col:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13afbce0140 <col:9> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x13afbce0218 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x13afbce0200 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x13afbce01e0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x13afbce0198 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x13afbce0180 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x13afbce0160 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x13afbce01b8 <col:31> 'int' 2
|   |   | `-ImplicitCastExpr 0x13afbce02e8 <.//openssl//file_jk/after\test\ssltest_old.c:2207:25> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x13afbce02d0 <col:25> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x13afbce0238 <col:25> 'char [26]' lvalue "Server info verify error\n"
|   |   |-BinaryOperator 0x13afbce0348 <line:2208:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x13afbce0300 <col:9> 'int' lvalue Var 0x13afbcd17c0 'ret' 'int'
|   |   | `-IntegerLiteral 0x13afbce0320 <col:15> 'int' 1
|   |   `-GotoStmt 0x13afbce0368 <line:2209:9, col:14> 'err' 0x13afbcd1bf8
|   |-IfStmt 0x13afbce04a0 <line:2211:5, line:2214:5>
|   | |-OpaqueValueExpr 0x13afbce0488 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbce0468 <line:2211:40, line:2214:5>
|   |   |-BinaryOperator 0x13afbce0430 <line:2212:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x13afbce03e8 <col:9> 'int' lvalue Var 0x13afbcd17c0 'ret' 'int'
|   |   | `-IntegerLiteral 0x13afbce0408 <col:15> 'int' 1
|   |   `-GotoStmt 0x13afbce0450 <line:2213:9, col:14> 'err' 0x13afbcd1bf8
|   |-IfStmt 0x13afbce0598 <line:2215:5, line:2218:5>
|   | |-OpaqueValueExpr 0x13afbce0580 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbce0560 <line:2215:46, line:2218:5>
|   |   |-BinaryOperator 0x13afbce0528 <line:2216:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x13afbce04e0 <col:9> 'int' lvalue Var 0x13afbcd17c0 'ret' 'int'
|   |   | `-IntegerLiteral 0x13afbce0500 <col:15> 'int' 1
|   |   `-GotoStmt 0x13afbce0548 <line:2217:9, col:14> 'err' 0x13afbcd1bf8
|   |-IfStmt 0x13afbce0848 <line:2220:5, line:2224:5>
|   | |-ImplicitCastExpr 0x13afbce05d0 <line:2220:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13afbce05b0 <col:9> 'int' lvalue Var 0x13afbc883c8 'custom_ext_error' 'int'
|   | `-CompoundStmt 0x13afbce0820 <col:27, line:2224:5>
|   |   |-CallExpr 0x13afbce0740 <line:2221:9, col:51> 'int'
|   |   | |-ImplicitCastExpr 0x13afbce0728 <col:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13afbce05e8 <col:9> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x13afbce06c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x13afbce06a8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x13afbce0688 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x13afbce0640 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x13afbce0628 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x13afbce0608 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x13afbce0660 <col:31> 'int' 2
|   |   | `-ImplicitCastExpr 0x13afbce0788 <.//openssl//file_jk/after\test\ssltest_old.c:2221:25> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x13afbce0770 <col:25> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x13afbce06e0 <col:25> 'char [24]' lvalue "Custom extension error\n"
|   |   |-BinaryOperator 0x13afbce07e8 <line:2222:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x13afbce07a0 <col:9> 'int' lvalue Var 0x13afbcd17c0 'ret' 'int'
|   |   | `-IntegerLiteral 0x13afbce07c0 <col:15> 'int' 1
|   |   `-GotoStmt 0x13afbce0808 <line:2223:9, col:14> 'err' 0x13afbcd1bf8
|   |-LabelStmt 0x13afbce08c8 <line:2227:2, line:2229:11> 'end'
|   | `-BinaryOperator 0x13afbce08a8 <col:5, col:11> 'int' '='
|   |   |-DeclRefExpr 0x13afbce0860 <col:5> 'int' lvalue Var 0x13afbcd17c0 'ret' 'int'
|   |   `-IntegerLiteral 0x13afbce0880 <col:11> 'int' 0
|   |-LabelStmt 0x13afbce0908 <line:2231:2, col:5> 'err'
|   | `-NullStmt 0x13afbce0900 <col:5>
|   |-IfStmt 0x13afbce11a8 <line:2240:5, line:2243:42> has_else
|   | |-BinaryOperator 0x13afbce0c28 <line:2240:9, col:80> 'int' '&&'
|   | | |-BinaryOperator 0x13afbce0a98 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | | |-ImplicitCastExpr 0x13afbce0a68 <.//openssl//file_jk/after\test\ssltest_old.c:2240:9> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x13afbce09c0 <col:9> 'const char *' lvalue Var 0x13afbc8b618 'should_negotiate' 'const char *'
|   | | | `-ImplicitCastExpr 0x13afbce0a80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |   `-ParenExpr 0x13afbce0a48 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x13afbce0a20 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x13afbce09e0 <col:26> 'int' 0
|   | | `-BinaryOperator 0x13afbce0c08 <.//openssl//file_jk/after\test\ssltest_old.c:2240:37, col:80> 'int' '=='
|   | |   |-CallExpr 0x13afbce0b68 <col:37, col:75> 'int'
|   | |   | |-ImplicitCastExpr 0x13afbce0b50 <col:37> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x13afbce0ab8 <col:37> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   | |   | |-ImplicitCastExpr 0x13afbce0b98 <col:44> 'const char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x13afbce0ad8 <col:44> 'const char *' lvalue Var 0x13afbc8b618 'should_negotiate' 'const char *'
|   | |   | `-ImplicitCastExpr 0x13afbce0bc8 <col:62> 'const char *' <NoOp>
|   | |   |   `-ImplicitCastExpr 0x13afbce0bb0 <col:62> 'char *' <ArrayToPointerDecay>
|   | |   |     `-StringLiteral 0x13afbce0af8 <col:62> 'char [12]' lvalue "fail-client"
|   | |   `-IntegerLiteral 0x13afbce0be0 <col:80> 'int' 0
|   | |-BinaryOperator 0x13afbce0d88 <line:2241:9, col:42> 'int' '='
|   | | |-DeclRefExpr 0x13afbce0c48 <col:9> 'int' lvalue Var 0x13afbcd17c0 'ret' 'int'
|   | | `-ConditionalOperator 0x13afbce0d58 <col:15, col:42> 'int'
|   | |   |-ParenExpr 0x13afbce0ce8 <col:15, col:34> 'int'
|   | |   | `-BinaryOperator 0x13afbce0cc8 <col:16, col:33> 'int' '!='
|   | |   |   |-ImplicitCastExpr 0x13afbce0cb0 <col:16> 'int' <LValueToRValue>
|   | |   |   | `-DeclRefExpr 0x13afbce0c68 <col:16> 'int' lvalue Var 0x13afbcd1880 'err_in_client' 'int'
|   | |   |   `-IntegerLiteral 0x13afbce0c88 <col:33> 'int' 0
|   | |   |-IntegerLiteral 0x13afbce0d08 <col:38> 'int' 0
|   | |   `-IntegerLiteral 0x13afbce0d30 <col:42> 'int' 1
|   | `-IfStmt 0x13afbce1190 <line:2242:10, line:2243:42>
|   |   |-BinaryOperator 0x13afbce1010 <line:2242:14, col:85> 'int' '&&'
|   |   | |-BinaryOperator 0x13afbce0e80 <col:14, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x13afbce0e50 <.//openssl//file_jk/after\test\ssltest_old.c:2242:14> 'const char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13afbce0da8 <col:14> 'const char *' lvalue Var 0x13afbc8b618 'should_negotiate' 'const char *'
|   |   | | `-ImplicitCastExpr 0x13afbce0e68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   |   | |   `-ParenExpr 0x13afbce0e30 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x13afbce0e08 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x13afbce0dc8 <col:26> 'int' 0
|   |   | `-BinaryOperator 0x13afbce0ff0 <.//openssl//file_jk/after\test\ssltest_old.c:2242:42, col:85> 'int' '=='
|   |   |   |-CallExpr 0x13afbce0f50 <col:42, col:80> 'int'
|   |   |   | |-ImplicitCastExpr 0x13afbce0f38 <col:42> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x13afbce0ea0 <col:42> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |   | |-ImplicitCastExpr 0x13afbce0f80 <col:49> 'const char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x13afbce0ec0 <col:49> 'const char *' lvalue Var 0x13afbc8b618 'should_negotiate' 'const char *'
|   |   |   | `-ImplicitCastExpr 0x13afbce0fb0 <col:67> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x13afbce0f98 <col:67> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x13afbce0ee0 <col:67> 'char [12]' lvalue "fail-server"
|   |   |   `-IntegerLiteral 0x13afbce0fc8 <col:85> 'int' 0
|   |   `-BinaryOperator 0x13afbce1170 <line:2243:9, col:42> 'int' '='
|   |     |-DeclRefExpr 0x13afbce1030 <col:9> 'int' lvalue Var 0x13afbcd17c0 'ret' 'int'
|   |     `-ConditionalOperator 0x13afbce1140 <col:15, col:42> 'int'
|   |       |-ParenExpr 0x13afbce10d0 <col:15, col:34> 'int'
|   |       | `-BinaryOperator 0x13afbce10b0 <col:16, col:33> 'int' '!='
|   |       |   |-ImplicitCastExpr 0x13afbce1098 <col:16> 'int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x13afbce1050 <col:16> 'int' lvalue Var 0x13afbcd1940 'err_in_server' 'int'
|   |       |   `-IntegerLiteral 0x13afbce1070 <col:33> 'int' 0
|   |       |-IntegerLiteral 0x13afbce10f0 <col:38> 'int' 0
|   |       `-IntegerLiteral 0x13afbce1118 <col:42> 'int' 1
|   `-ReturnStmt 0x13afbce1208 <line:2245:5, col:12>
|     `-ImplicitCastExpr 0x13afbce11f0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x13afbce11d0 <col:12> 'int' lvalue Var 0x13afbcd17c0 'ret' 'int'
|-FunctionDecl 0x13afbce15a0 <line:2249:1, line:2630:1> line:2249:5 invalid doit_biopair 'int (int *, int *, long, clock_t *, clock_t *)'
| |-ParmVarDecl 0x13afbce12f8 <col:18, col:23> col:23 invalid s_ssl 'int *'
| |-ParmVarDecl 0x13afbce1378 <col:30, col:35> col:35 invalid c_ssl 'int *'
| |-ParmVarDecl 0x13afbce13f8 <col:42, col:47> col:47 used count 'long'
| |-ParmVarDecl 0x13afbce1470 <line:2250:18, col:27> col:27 used s_time 'clock_t *'
| |-ParmVarDecl 0x13afbce14e8 <col:35, col:44> col:44 used c_time 'clock_t *'
| `-CompoundStmt 0x13afbcd7430 <line:2251:1, line:2630:1>
|   |-DeclStmt 0x13afbce19a0 <line:2252:5, col:72>
|   | |-VarDecl 0x13afbce1698 <col:5, col:19> col:10 used cw_num 'long' cinit
|   | | `-ImplicitCastExpr 0x13afbce1738 <col:19> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbce1700 <col:19> 'long' lvalue ParmVar 0x13afbce13f8 'count' 'long'
|   | |-VarDecl 0x13afbce1768 <col:5, col:35> col:26 used cr_num 'long' cinit
|   | | `-ImplicitCastExpr 0x13afbce17f0 <col:35> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbce17d0 <col:35> 'long' lvalue ParmVar 0x13afbce13f8 'count' 'long'
|   | |-VarDecl 0x13afbce1820 <col:5, col:51> col:42 used sw_num 'long' cinit
|   | | `-ImplicitCastExpr 0x13afbce18a8 <col:51> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbce1888 <col:51> 'long' lvalue ParmVar 0x13afbce13f8 'count' 'long'
|   | `-VarDecl 0x13afbce18d8 <col:5, col:67> col:58 used sr_num 'long' cinit
|   |   `-ImplicitCastExpr 0x13afbce1960 <col:67> 'long' <LValueToRValue>
|   |     `-DeclRefExpr 0x13afbce1940 <col:67> 'long' lvalue ParmVar 0x13afbce13f8 'count' 'long'
|   |-DeclStmt 0x13afbce1d90 <line:2255:5, col:16>
|   | `-VarDecl 0x13afbce1d00 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x13afbce1d68 <col:15> 'int' 1
|   |-DeclStmt 0x13afbcdde50 <line:2256:5, col:26>
|   | `-VarDecl 0x13afbce1dc0 <col:5, col:25> col:9 used err_in_client 'int' cinit
|   |   `-IntegerLiteral 0x13afbce1e28 <col:25> 'int' 0
|   |-DeclStmt 0x13afbcddf10 <line:2257:5, col:26>
|   | `-VarDecl 0x13afbcdde80 <col:5, col:25> col:9 used err_in_server 'int' cinit
|   |   `-IntegerLiteral 0x13afbcddee8 <col:25> 'int' 0
|   |-DeclStmt 0x13afbcddfe0 <line:2259:5, col:24>
|   | `-VarDecl 0x13afbcddf38 <col:5, col:21> col:12 used bufsiz 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x13afbcddfc8 <col:21> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x13afbcddfa0 <col:21> 'int' 256
|   |-IfStmt 0x13afbcde1e0 <line:2261:5, line:2262:14>
|   | |-OpaqueValueExpr 0x13afbcde1c8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x13afbcde1b0 <col:9, col:14> 'err' 0x13afbcde160
|   |-IfStmt 0x13afbcde288 <line:2263:5, line:2264:14>
|   | |-OpaqueValueExpr 0x13afbcde270 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x13afbcde258 <col:9, col:14> 'err' 0x13afbcde160
|   |-IfStmt 0x13afbcde388 <line:2267:5, line:2268:14>
|   | |-OpaqueValueExpr 0x13afbcde370 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x13afbcde358 <col:9, col:14> 'err' 0x13afbcde160
|   |-IfStmt 0x13afbcde488 <line:2271:5, line:2272:14>
|   | |-OpaqueValueExpr 0x13afbcde470 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x13afbcde458 <col:9, col:14> 'err' 0x13afbcde160
|   |-DoStmt 0x13afbcd60b0 <line:2282:5, line:2579:64>
|   | |-CompoundStmt 0x13afbce3e10 <line:2282:8, line:2578:5>
|   | | |-CompoundStmt 0x13afbcda288 <line:2325:9, line:2402:9>
|   | | | |-DeclStmt 0x13afbcde670 <line:2328:13, col:32>
|   | | | | `-VarDecl 0x13afbcde608 <col:13, col:31> col:18 used cbuf 'char [8192]'
|   | | | |-DeclStmt 0x13afbcde7a0 <line:2329:13, col:21>
|   | | | | |-VarDecl 0x13afbcde6a0 <col:13, col:17> col:17 used i 'int'
|   | | | | `-VarDecl 0x13afbcde720 <col:13, col:20> col:20 used r 'int'
|   | | | |-DeclStmt 0x13afbcde888 <line:2330:13, col:38>
|   | | | | `-VarDecl 0x13afbcde7c8 <col:13, col:37> col:21 used c_clock 'clock_t':'long' cinit
|   | | | |   `-CallExpr 0x13afbcde868 <col:31, col:37> 'clock_t':'long'
|   | | | |     `-ImplicitCastExpr 0x13afbcde850 <col:31> 'clock_t (*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |       `-DeclRefExpr 0x13afbcde830 <col:31> 'clock_t (void) __attribute__((cdecl))':'clock_t (void)' Function 0x13afbd71758 'clock' 'clock_t (void) __attribute__((cdecl))':'clock_t (void)'
|   | | | |-CallExpr 0x13afbcde9b0 <line:2332:13, col:41> 'void *'
|   | | | | |-ImplicitCastExpr 0x13afbcde998 <col:13> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | | | | `-DeclRefExpr 0x13afbcde8a0 <col:13> 'void *(void *, int, unsigned long long)' Function 0x13afbd28a78 'memset' 'void *(void *, int, unsigned long long)'
|   | | | | |-ImplicitCastExpr 0x13afbcdea00 <col:20> 'void *' <BitCast>
|   | | | | | `-ImplicitCastExpr 0x13afbcde9e8 <col:20> 'char *' <ArrayToPointerDecay>
|   | | | | |   `-DeclRefExpr 0x13afbcde8c0 <col:20> 'char [8192]' lvalue Var 0x13afbcde608 'cbuf' 'char [8192]'
|   | | | | |-IntegerLiteral 0x13afbcde8f8 <col:26> 'int' 0
|   | | | | `-UnaryExprOrTypeTraitExpr 0x13afbcde960 <col:29, col:40> 'unsigned long long' sizeof
|   | | | |   `-ParenExpr 0x13afbcde940 <col:35, col:40> 'char [8192]' lvalue
|   | | | |     `-DeclRefExpr 0x13afbcde920 <col:36> 'char [8192]' lvalue Var 0x13afbcde608 'cbuf' 'char [8192]' non_odr_use_unevaluated
|   | | | |-IfStmt 0x13afbcdf740 <line:2339:13, line:2367:13>
|   | | | | |-BinaryOperator 0x13afbcdeb80 <line:2339:17, col:26> 'int' '>'
|   | | | | | |-ImplicitCastExpr 0x13afbcdeb50 <col:17> 'long' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x13afbcdeaf0 <col:17> 'long' lvalue Var 0x13afbce1698 'cw_num' 'long'
|   | | | | | `-ImplicitCastExpr 0x13afbcdeb68 <col:26> 'long' <IntegralCast>
|   | | | | |   `-IntegerLiteral 0x13afbcdeb28 <col:26> 'int' 0
|   | | | | `-CompoundStmt 0x13afbcdf720 <col:29, line:2367:13>
|   | | | |   |-IfStmt 0x13afbcdee20 <line:2342:17, line:2345:30> has_else
|   | | | |   | |-BinaryOperator 0x13afbcdec78 <line:2342:21, col:47> 'int' '>'
|   | | | |   | | |-ImplicitCastExpr 0x13afbcdec60 <col:21> 'long' <LValueToRValue>
|   | | | |   | | | `-DeclRefExpr 0x13afbcdeba0 <col:21> 'long' lvalue Var 0x13afbce1698 'cw_num' 'long'
|   | | | |   | | `-CStyleCastExpr 0x13afbcdec38 <col:30, col:47> 'long' <IntegralCast>
|   | | | |   | |   `-UnaryExprOrTypeTraitExpr 0x13afbcdec00 <col:36, col:47> 'unsigned long long' sizeof
|   | | | |   | |     `-ParenExpr 0x13afbcdebe0 <col:42, col:47> 'char [8192]' lvalue
|   | | | |   | |       `-DeclRefExpr 0x13afbcdebc0 <col:43> 'char [8192]' lvalue Var 0x13afbcde608 'cbuf' 'char [8192]' non_odr_use_unevaluated
|   | | | |   | |-BinaryOperator 0x13afbcded48 <line:2343:21, col:36> 'int' '='
|   | | | |   | | |-DeclRefExpr 0x13afbcdec98 <col:21> 'int' lvalue Var 0x13afbcde6a0 'i' 'int'
|   | | | |   | | `-ImplicitCastExpr 0x13afbcded30 <col:25, col:36> 'int' <IntegralCast>
|   | | | |   | |   `-UnaryExprOrTypeTraitExpr 0x13afbcded10 <col:25, col:36> 'unsigned long long' sizeof
|   | | | |   | |     `-ParenExpr 0x13afbcdecf0 <col:31, col:36> 'char [8192]' lvalue
|   | | | |   | |       `-DeclRefExpr 0x13afbcdecd0 <col:32> 'char [8192]' lvalue Var 0x13afbcde608 'cbuf' 'char [8192]' non_odr_use_unevaluated
|   | | | |   | `-BinaryOperator 0x13afbcdee00 <line:2345:21, col:30> 'int' '='
|   | | | |   |   |-DeclRefExpr 0x13afbcded68 <col:21> 'int' lvalue Var 0x13afbcde6a0 'i' 'int'
|   | | | |   |   `-CStyleCastExpr 0x13afbcdedd8 <col:25, col:30> 'int' <IntegralCast>
|   | | | |   |     `-ImplicitCastExpr 0x13afbcdedc0 <col:30> 'long' <LValueToRValue> part_of_explicit_cast
|   | | | |   |       `-DeclRefExpr 0x13afbcded88 <col:30> 'long' lvalue Var 0x13afbce1698 'cw_num' 'long'
|   | | | |   `-IfStmt 0x13afbcdf6f8 <line:2347:17, line:2366:17> has_else
|   | | | |     |-BinaryOperator 0x13afbcdef40 <line:2347:21, col:25> 'int' '<'
|   | | | |     | |-ImplicitCastExpr 0x13afbcdef28 <col:21> 'int' <LValueToRValue>
|   | | | |     | | `-DeclRefExpr 0x13afbcdeee0 <col:21> 'int' lvalue Var 0x13afbcde720 'r' 'int'
|   | | | |     | `-IntegerLiteral 0x13afbcdef00 <col:25> 'int' 0
|   | | | |     |-CompoundStmt 0x13afbcdf220 <col:28, line:2359:17>
|   | | | |     | `-IfStmt 0x13afbcdf208 <line:2348:21, line:2352:21>
|   | | | |     |   |-OpaqueValueExpr 0x13afbcdf1f0 <<invalid sloc>> '_Bool'
|   | | | |     |   `-CompoundStmt 0x13afbcdf1c8 <line:2348:55, line:2352:21>
|   | | | |     |     |-CallExpr 0x13afbcdf0d0 <line:2349:25, col:60> 'int'
|   | | | |     |     | |-ImplicitCastExpr 0x13afbcdf0b8 <col:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | |     |     | | `-DeclRefExpr 0x13afbcdef80 <col:25> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |     |     | |-ParenExpr 0x13afbcdf058 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | |     |     | | `-UnaryOperator 0x13afbcdf040 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |     |     | |   `-ArraySubscriptExpr 0x13afbcdf020 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |     | |     |-CallExpr 0x13afbcdefd8 <col:18, col:29> 'FILE *'
|   | | | |     |     | |     | `-ImplicitCastExpr 0x13afbcdefc0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |     | |     |   `-DeclRefExpr 0x13afbcdefa0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     |     | |     `-IntegerLiteral 0x13afbcdeff8 <col:31> 'int' 2
|   | | | |     |     | `-ImplicitCastExpr 0x13afbcdf118 <.//openssl//file_jk/after\test\ssltest_old.c:2349:41> 'const char *' <NoOp>
|   | | | |     |     |   `-ImplicitCastExpr 0x13afbcdf100 <col:41> 'char *' <ArrayToPointerDecay>
|   | | | |     |     |     `-StringLiteral 0x13afbcdf078 <col:41> 'char [17]' lvalue "ERROR in CLIENT\n"
|   | | | |     |     |-BinaryOperator 0x13afbcdf190 <line:2350:25, col:41> 'int' '='
|   | | | |     |     | |-DeclRefExpr 0x13afbcdf130 <col:25> 'int' lvalue Var 0x13afbce1dc0 'err_in_client' 'int'
|   | | | |     |     | `-IntegerLiteral 0x13afbcdf168 <col:41> 'int' 1
|   | | | |     |     `-GotoStmt 0x13afbcdf1b0 <line:2351:25, col:30> 'err' 0x13afbcde160
|   | | | |     `-IfStmt 0x13afbcdf6d0 <line:2359:24, line:2366:17> has_else
|   | | | |       |-BinaryOperator 0x13afbcdf298 <line:2359:28, col:33> 'int' '=='
|   | | | |       | |-ImplicitCastExpr 0x13afbcdf280 <col:28> 'int' <LValueToRValue>
|   | | | |       | | `-DeclRefExpr 0x13afbcdf238 <col:28> 'int' lvalue Var 0x13afbcde720 'r' 'int'
|   | | | |       | `-IntegerLiteral 0x13afbcdf258 <col:33> 'int' 0
|   | | | |       |-CompoundStmt 0x13afbcdf490 <col:36, line:2362:17>
|   | | | |       | |-CallExpr 0x13afbcdf418 <line:2360:21, col:66> 'int'
|   | | | |       | | |-ImplicitCastExpr 0x13afbcdf400 <col:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | |       | | | `-DeclRefExpr 0x13afbcdf2b8 <col:21> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |       | | |-ParenExpr 0x13afbcdf390 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | |       | | | `-UnaryOperator 0x13afbcdf378 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |       | | |   `-ArraySubscriptExpr 0x13afbcdf358 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |       | | |     |-CallExpr 0x13afbcdf310 <col:18, col:29> 'FILE *'
|   | | | |       | | |     | `-ImplicitCastExpr 0x13afbcdf2f8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |       | | |     |   `-DeclRefExpr 0x13afbcdf2d8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |       | | |     `-IntegerLiteral 0x13afbcdf330 <col:31> 'int' 2
|   | | | |       | | `-ImplicitCastExpr 0x13afbcdf460 <.//openssl//file_jk/after\test\ssltest_old.c:2360:37> 'const char *' <NoOp>
|   | | | |       | |   `-ImplicitCastExpr 0x13afbcdf448 <col:37> 'char *' <ArrayToPointerDecay>
|   | | | |       | |     `-StringLiteral 0x13afbcdf3b0 <col:37> 'char [27]' lvalue "SSL CLIENT STARTUP FAILED\n"
|   | | | |       | `-GotoStmt 0x13afbcdf478 <line:2361:21, col:26> 'err' 0x13afbcde160
|   | | | |       `-CompoundStmt 0x13afbcdf6b0 <line:2362:24, line:2366:17>
|   | | | |         |-IfStmt 0x13afbcdf5f8 <line:2363:21, line:2364:54>
|   | | | |         | |-ImplicitCastExpr 0x13afbcdf4d0 <line:2363:25> 'int' <LValueToRValue>
|   | | | |         | | `-DeclRefExpr 0x13afbcdf4b0 <col:25> 'int' lvalue Var 0x13afbca4a70 'debug' 'int'
|   | | | |         | `-CallExpr 0x13afbcdf580 <line:2364:25, col:54> 'int'
|   | | | |         |   |-ImplicitCastExpr 0x13afbcdf568 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | | |         |   | `-DeclRefExpr 0x13afbcdf4e8 <col:25> 'int (const char *, ...)' Function 0x13afbbc9990 'printf' 'int (const char *, ...)'
|   | | | |         |   |-ImplicitCastExpr 0x13afbcdf5c8 <col:32> 'const char *' <NoOp>
|   | | | |         |   | `-ImplicitCastExpr 0x13afbcdf5b0 <col:32> 'char *' <ArrayToPointerDecay>
|   | | | |         |   |   `-StringLiteral 0x13afbcdf508 <col:32> 'char [17]' lvalue "client wrote %d\n"
|   | | | |         |   `-ImplicitCastExpr 0x13afbcdf5e0 <col:53> 'int' <LValueToRValue>
|   | | | |         |     `-DeclRefExpr 0x13afbcdf530 <col:53> 'int' lvalue Var 0x13afbcde720 'r' 'int'
|   | | | |         `-CompoundAssignOperator 0x13afbcdf680 <line:2365:21, col:31> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | | |           |-DeclRefExpr 0x13afbcdf610 <col:21> 'long' lvalue Var 0x13afbce1698 'cw_num' 'long'
|   | | | |           `-ImplicitCastExpr 0x13afbcdf668 <col:31> 'long' <IntegralCast>
|   | | | |             `-ImplicitCastExpr 0x13afbcdf650 <col:31> 'int' <LValueToRValue>
|   | | | |               `-DeclRefExpr 0x13afbcdf630 <col:31> 'int' lvalue Var 0x13afbcde720 'r' 'int'
|   | | | |-IfStmt 0x13afbcda0f0 <line:2369:13, line:2390:13>
|   | | | | |-BinaryOperator 0x13afbcdf7e8 <line:2369:17, col:26> 'int' '>'
|   | | | | | |-ImplicitCastExpr 0x13afbcdf7b8 <col:17> 'long' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x13afbcdf758 <col:17> 'long' lvalue Var 0x13afbce1768 'cr_num' 'long'
|   | | | | | `-ImplicitCastExpr 0x13afbcdf7d0 <col:26> 'long' <IntegralCast>
|   | | | | |   `-IntegerLiteral 0x13afbcdf790 <col:26> 'int' 0
|   | | | | `-CompoundStmt 0x13afbcda0d8 <col:29, line:2390:13>
|   | | | |   `-IfStmt 0x13afbcda0b0 <line:2373:17, line:2389:17> has_else
|   | | | |     |-BinaryOperator 0x13afbcdf928 <line:2373:21, col:25> 'int' '<'
|   | | | |     | |-ImplicitCastExpr 0x13afbcdf910 <col:21> 'int' <LValueToRValue>
|   | | | |     | | `-DeclRefExpr 0x13afbcdf8c8 <col:21> 'int' lvalue Var 0x13afbcde720 'r' 'int'
|   | | | |     | `-IntegerLiteral 0x13afbcdf8e8 <col:25> 'int' 0
|   | | | |     |-CompoundStmt 0x13afbcdfbf0 <col:28, line:2382:17>
|   | | | |     | `-IfStmt 0x13afbcdfbd8 <line:2374:21, line:2378:21>
|   | | | |     |   |-OpaqueValueExpr 0x13afbcdfbc0 <<invalid sloc>> '_Bool'
|   | | | |     |   `-CompoundStmt 0x13afbcdfb98 <line:2374:55, line:2378:21>
|   | | | |     |     |-CallExpr 0x13afbcdfab8 <line:2375:25, col:60> 'int'
|   | | | |     |     | |-ImplicitCastExpr 0x13afbcdfaa0 <col:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | |     |     | | `-DeclRefExpr 0x13afbcdf968 <col:25> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |     |     | |-ParenExpr 0x13afbcdfa40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | |     |     | | `-UnaryOperator 0x13afbcdfa28 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |     |     | |   `-ArraySubscriptExpr 0x13afbcdfa08 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |     | |     |-CallExpr 0x13afbcdf9c0 <col:18, col:29> 'FILE *'
|   | | | |     |     | |     | `-ImplicitCastExpr 0x13afbcdf9a8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |     | |     |   `-DeclRefExpr 0x13afbcdf988 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     |     | |     `-IntegerLiteral 0x13afbcdf9e0 <col:31> 'int' 2
|   | | | |     |     | `-ImplicitCastExpr 0x13afbcdfb00 <.//openssl//file_jk/after\test\ssltest_old.c:2375:41> 'const char *' <NoOp>
|   | | | |     |     |   `-ImplicitCastExpr 0x13afbcdfae8 <col:41> 'char *' <ArrayToPointerDecay>
|   | | | |     |     |     `-StringLiteral 0x13afbcdfa60 <col:41> 'char [17]' lvalue "ERROR in CLIENT\n"
|   | | | |     |     |-BinaryOperator 0x13afbcdfb60 <line:2376:25, col:41> 'int' '='
|   | | | |     |     | |-DeclRefExpr 0x13afbcdfb18 <col:25> 'int' lvalue Var 0x13afbce1dc0 'err_in_client' 'int'
|   | | | |     |     | `-IntegerLiteral 0x13afbcdfb38 <col:41> 'int' 1
|   | | | |     |     `-GotoStmt 0x13afbcdfb80 <line:2377:25, col:30> 'err' 0x13afbcde160
|   | | | |     `-IfStmt 0x13afbcda088 <line:2382:24, line:2389:17> has_else
|   | | | |       |-BinaryOperator 0x13afbcdfc68 <line:2382:28, col:33> 'int' '=='
|   | | | |       | |-ImplicitCastExpr 0x13afbcdfc50 <col:28> 'int' <LValueToRValue>
|   | | | |       | | `-DeclRefExpr 0x13afbcdfc08 <col:28> 'int' lvalue Var 0x13afbcde720 'r' 'int'
|   | | | |       | `-IntegerLiteral 0x13afbcdfc28 <col:33> 'int' 0
|   | | | |       |-CompoundStmt 0x13afbcd9e48 <col:36, line:2385:17>
|   | | | |       | |-CallExpr 0x13afbcdfde8 <line:2383:21, col:66> 'int'
|   | | | |       | | |-ImplicitCastExpr 0x13afbcdfdd0 <col:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | |       | | | `-DeclRefExpr 0x13afbcdfc88 <col:21> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |       | | |-ParenExpr 0x13afbcdfd60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | |       | | | `-UnaryOperator 0x13afbcdfd48 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |       | | |   `-ArraySubscriptExpr 0x13afbcdfd28 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |       | | |     |-CallExpr 0x13afbcdfce0 <col:18, col:29> 'FILE *'
|   | | | |       | | |     | `-ImplicitCastExpr 0x13afbcdfcc8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |       | | |     |   `-DeclRefExpr 0x13afbcdfca8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |       | | |     `-IntegerLiteral 0x13afbcdfd00 <col:31> 'int' 2
|   | | | |       | | `-ImplicitCastExpr 0x13afbcdfe30 <.//openssl//file_jk/after\test\ssltest_old.c:2383:37> 'const char *' <NoOp>
|   | | | |       | |   `-ImplicitCastExpr 0x13afbcdfe18 <col:37> 'char *' <ArrayToPointerDecay>
|   | | | |       | |     `-StringLiteral 0x13afbcdfd80 <col:37> 'char [27]' lvalue "SSL CLIENT STARTUP FAILED\n"
|   | | | |       | `-GotoStmt 0x13afbcd9e30 <line:2384:21, col:26> 'err' 0x13afbcde160
|   | | | |       `-CompoundStmt 0x13afbcda068 <line:2385:24, line:2389:17>
|   | | | |         |-IfStmt 0x13afbcd9fb0 <line:2386:21, line:2387:53>
|   | | | |         | |-ImplicitCastExpr 0x13afbcd9e88 <line:2386:25> 'int' <LValueToRValue>
|   | | | |         | | `-DeclRefExpr 0x13afbcd9e68 <col:25> 'int' lvalue Var 0x13afbca4a70 'debug' 'int'
|   | | | |         | `-CallExpr 0x13afbcd9f38 <line:2387:25, col:53> 'int'
|   | | | |         |   |-ImplicitCastExpr 0x13afbcd9f20 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | | |         |   | `-DeclRefExpr 0x13afbcd9ea0 <col:25> 'int (const char *, ...)' Function 0x13afbbc9990 'printf' 'int (const char *, ...)'
|   | | | |         |   |-ImplicitCastExpr 0x13afbcd9f80 <col:32> 'const char *' <NoOp>
|   | | | |         |   | `-ImplicitCastExpr 0x13afbcd9f68 <col:32> 'char *' <ArrayToPointerDecay>
|   | | | |         |   |   `-StringLiteral 0x13afbcd9ec0 <col:32> 'char [16]' lvalue "client read %d\n"
|   | | | |         |   `-ImplicitCastExpr 0x13afbcd9f98 <col:52> 'int' <LValueToRValue>
|   | | | |         |     `-DeclRefExpr 0x13afbcd9ee8 <col:52> 'int' lvalue Var 0x13afbcde720 'r' 'int'
|   | | | |         `-CompoundAssignOperator 0x13afbcda038 <line:2388:21, col:31> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | | |           |-DeclRefExpr 0x13afbcd9fc8 <col:21> 'long' lvalue Var 0x13afbce1768 'cr_num' 'long'
|   | | | |           `-ImplicitCastExpr 0x13afbcda020 <col:31> 'long' <IntegralCast>
|   | | | |             `-ImplicitCastExpr 0x13afbcda008 <col:31> 'int' <LValueToRValue>
|   | | | |               `-DeclRefExpr 0x13afbcd9fe8 <col:31> 'int' lvalue Var 0x13afbcde720 'r' 'int'
|   | | | `-CompoundAssignOperator 0x13afbcda258 <line:2401:13, col:42> 'clock_t':'long' '+=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | |   |-UnaryOperator 0x13afbcda158 <col:13, col:14> 'clock_t':'long' lvalue prefix '*' cannot overflow
|   | | |   | `-ImplicitCastExpr 0x13afbcda140 <col:14> 'clock_t *' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x13afbcda108 <col:14> 'clock_t *' lvalue ParmVar 0x13afbce14e8 'c_time' 'clock_t *'
|   | | |   `-ParenExpr 0x13afbcda238 <col:24, col:42> 'long'
|   | | |     `-BinaryOperator 0x13afbcda218 <col:25, col:35> 'long' '-'
|   | | |       |-CallExpr 0x13afbcda1a8 <col:25, col:31> 'clock_t':'long'
|   | | |       | `-ImplicitCastExpr 0x13afbcda190 <col:25> 'clock_t (*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | |       |   `-DeclRefExpr 0x13afbcda170 <col:25> 'clock_t (void) __attribute__((cdecl))':'clock_t (void)' Function 0x13afbd71758 'clock' 'clock_t (void) __attribute__((cdecl))':'clock_t (void)'
|   | | |       `-ImplicitCastExpr 0x13afbcda200 <col:35> 'clock_t':'long' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x13afbcda1c8 <col:35> 'clock_t':'long' lvalue Var 0x13afbcde7c8 'c_clock' 'clock_t':'long'
|   | | |-CompoundStmt 0x13afbcd8020 <line:2404:9, line:2465:9>
|   | | | |-DeclStmt 0x13afbcda3e0 <line:2407:13, col:32>
|   | | | | `-VarDecl 0x13afbcda378 <col:13, col:31> col:18 used sbuf 'char [8192]'
|   | | | |-DeclStmt 0x13afbcda510 <line:2408:13, col:21>
|   | | | | |-VarDecl 0x13afbcda410 <col:13, col:17> col:17 used i 'int'
|   | | | | `-VarDecl 0x13afbcda490 <col:13, col:20> col:20 used r 'int'
|   | | | |-DeclStmt 0x13afbcda5f8 <line:2409:13, col:38>
|   | | | | `-VarDecl 0x13afbcda538 <col:13, col:37> col:21 used s_clock 'clock_t':'long' cinit
|   | | | |   `-CallExpr 0x13afbcda5d8 <col:31, col:37> 'clock_t':'long'
|   | | | |     `-ImplicitCastExpr 0x13afbcda5c0 <col:31> 'clock_t (*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |       `-DeclRefExpr 0x13afbcda5a0 <col:31> 'clock_t (void) __attribute__((cdecl))':'clock_t (void)' Function 0x13afbd71758 'clock' 'clock_t (void) __attribute__((cdecl))':'clock_t (void)'
|   | | | |-CallExpr 0x13afbcda720 <line:2411:13, col:41> 'void *'
|   | | | | |-ImplicitCastExpr 0x13afbcda708 <col:13> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | | | | `-DeclRefExpr 0x13afbcda610 <col:13> 'void *(void *, int, unsigned long long)' Function 0x13afbd28a78 'memset' 'void *(void *, int, unsigned long long)'
|   | | | | |-ImplicitCastExpr 0x13afbcda770 <col:20> 'void *' <BitCast>
|   | | | | | `-ImplicitCastExpr 0x13afbcda758 <col:20> 'char *' <ArrayToPointerDecay>
|   | | | | |   `-DeclRefExpr 0x13afbcda630 <col:20> 'char [8192]' lvalue Var 0x13afbcda378 'sbuf' 'char [8192]'
|   | | | | |-IntegerLiteral 0x13afbcda668 <col:26> 'int' 0
|   | | | | `-UnaryExprOrTypeTraitExpr 0x13afbcda6d0 <col:29, col:40> 'unsigned long long' sizeof
|   | | | |   `-ParenExpr 0x13afbcda6b0 <col:35, col:40> 'char [8192]' lvalue
|   | | | |     `-DeclRefExpr 0x13afbcda690 <col:36> 'char [8192]' lvalue Var 0x13afbcda378 'sbuf' 'char [8192]' non_odr_use_unevaluated
|   | | | |-IfStmt 0x13afbcdb4b0 <line:2418:13, line:2441:13>
|   | | | | |-BinaryOperator 0x13afbcda8f0 <line:2418:17, col:26> 'int' '>'
|   | | | | | |-ImplicitCastExpr 0x13afbcda8c0 <col:17> 'long' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x13afbcda860 <col:17> 'long' lvalue Var 0x13afbce1820 'sw_num' 'long'
|   | | | | | `-ImplicitCastExpr 0x13afbcda8d8 <col:26> 'long' <IntegralCast>
|   | | | | |   `-IntegerLiteral 0x13afbcda898 <col:26> 'int' 0
|   | | | | `-CompoundStmt 0x13afbcdb490 <col:29, line:2441:13>
|   | | | |   |-IfStmt 0x13afbcdab90 <line:2421:17, line:2424:30> has_else
|   | | | |   | |-BinaryOperator 0x13afbcda9e8 <line:2421:21, col:47> 'int' '>'
|   | | | |   | | |-ImplicitCastExpr 0x13afbcda9d0 <col:21> 'long' <LValueToRValue>
|   | | | |   | | | `-DeclRefExpr 0x13afbcda910 <col:21> 'long' lvalue Var 0x13afbce1820 'sw_num' 'long'
|   | | | |   | | `-CStyleCastExpr 0x13afbcda9a8 <col:30, col:47> 'long' <IntegralCast>
|   | | | |   | |   `-UnaryExprOrTypeTraitExpr 0x13afbcda970 <col:36, col:47> 'unsigned long long' sizeof
|   | | | |   | |     `-ParenExpr 0x13afbcda950 <col:42, col:47> 'char [8192]' lvalue
|   | | | |   | |       `-DeclRefExpr 0x13afbcda930 <col:43> 'char [8192]' lvalue Var 0x13afbcda378 'sbuf' 'char [8192]' non_odr_use_unevaluated
|   | | | |   | |-BinaryOperator 0x13afbcdaab8 <line:2422:21, col:36> 'int' '='
|   | | | |   | | |-DeclRefExpr 0x13afbcdaa08 <col:21> 'int' lvalue Var 0x13afbcda410 'i' 'int'
|   | | | |   | | `-ImplicitCastExpr 0x13afbcdaaa0 <col:25, col:36> 'int' <IntegralCast>
|   | | | |   | |   `-UnaryExprOrTypeTraitExpr 0x13afbcdaa80 <col:25, col:36> 'unsigned long long' sizeof
|   | | | |   | |     `-ParenExpr 0x13afbcdaa60 <col:31, col:36> 'char [8192]' lvalue
|   | | | |   | |       `-DeclRefExpr 0x13afbcdaa40 <col:32> 'char [8192]' lvalue Var 0x13afbcda378 'sbuf' 'char [8192]' non_odr_use_unevaluated
|   | | | |   | `-BinaryOperator 0x13afbcdab70 <line:2424:21, col:30> 'int' '='
|   | | | |   |   |-DeclRefExpr 0x13afbcdaad8 <col:21> 'int' lvalue Var 0x13afbcda410 'i' 'int'
|   | | | |   |   `-CStyleCastExpr 0x13afbcdab48 <col:25, col:30> 'int' <IntegralCast>
|   | | | |   |     `-ImplicitCastExpr 0x13afbcdab30 <col:30> 'long' <LValueToRValue> part_of_explicit_cast
|   | | | |   |       `-DeclRefExpr 0x13afbcdaaf8 <col:30> 'long' lvalue Var 0x13afbce1820 'sw_num' 'long'
|   | | | |   `-IfStmt 0x13afbcdb468 <line:2426:17, line:2440:17> has_else
|   | | | |     |-BinaryOperator 0x13afbcdacb0 <line:2426:21, col:25> 'int' '<'
|   | | | |     | |-ImplicitCastExpr 0x13afbcdac98 <col:21> 'int' <LValueToRValue>
|   | | | |     | | `-DeclRefExpr 0x13afbcdac50 <col:21> 'int' lvalue Var 0x13afbcda490 'r' 'int'
|   | | | |     | `-IntegerLiteral 0x13afbcdac70 <col:25> 'int' 0
|   | | | |     |-CompoundStmt 0x13afbcdaf90 <col:28, line:2433:17>
|   | | | |     | `-IfStmt 0x13afbcdaf78 <line:2427:21, line:2431:21>
|   | | | |     |   |-OpaqueValueExpr 0x13afbcdaf60 <<invalid sloc>> '_Bool'
|   | | | |     |   `-CompoundStmt 0x13afbcdaf38 <line:2427:55, line:2431:21>
|   | | | |     |     |-CallExpr 0x13afbcdae40 <line:2428:25, col:60> 'int'
|   | | | |     |     | |-ImplicitCastExpr 0x13afbcdae28 <col:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | |     |     | | `-DeclRefExpr 0x13afbcdacf0 <col:25> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |     |     | |-ParenExpr 0x13afbcdadc8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | |     |     | | `-UnaryOperator 0x13afbcdadb0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |     |     | |   `-ArraySubscriptExpr 0x13afbcdad90 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |     | |     |-CallExpr 0x13afbcdad48 <col:18, col:29> 'FILE *'
|   | | | |     |     | |     | `-ImplicitCastExpr 0x13afbcdad30 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |     | |     |   `-DeclRefExpr 0x13afbcdad10 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     |     | |     `-IntegerLiteral 0x13afbcdad68 <col:31> 'int' 2
|   | | | |     |     | `-ImplicitCastExpr 0x13afbcdae88 <.//openssl//file_jk/after\test\ssltest_old.c:2428:41> 'const char *' <NoOp>
|   | | | |     |     |   `-ImplicitCastExpr 0x13afbcdae70 <col:41> 'char *' <ArrayToPointerDecay>
|   | | | |     |     |     `-StringLiteral 0x13afbcdade8 <col:41> 'char [17]' lvalue "ERROR in SERVER\n"
|   | | | |     |     |-BinaryOperator 0x13afbcdaf00 <line:2429:25, col:41> 'int' '='
|   | | | |     |     | |-DeclRefExpr 0x13afbcdaea0 <col:25> 'int' lvalue Var 0x13afbcdde80 'err_in_server' 'int'
|   | | | |     |     | `-IntegerLiteral 0x13afbcdaed8 <col:41> 'int' 1
|   | | | |     |     `-GotoStmt 0x13afbcdaf20 <line:2430:25, col:30> 'err' 0x13afbcde160
|   | | | |     `-IfStmt 0x13afbcdb440 <line:2433:24, line:2440:17> has_else
|   | | | |       |-BinaryOperator 0x13afbcdb008 <line:2433:28, col:33> 'int' '=='
|   | | | |       | |-ImplicitCastExpr 0x13afbcdaff0 <col:28> 'int' <LValueToRValue>
|   | | | |       | | `-DeclRefExpr 0x13afbcdafa8 <col:28> 'int' lvalue Var 0x13afbcda490 'r' 'int'
|   | | | |       | `-IntegerLiteral 0x13afbcdafc8 <col:33> 'int' 0
|   | | | |       |-CompoundStmt 0x13afbcdb200 <col:36, line:2436:17>
|   | | | |       | |-CallExpr 0x13afbcdb188 <line:2434:21, col:66> 'int'
|   | | | |       | | |-ImplicitCastExpr 0x13afbcdb170 <col:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | |       | | | `-DeclRefExpr 0x13afbcdb028 <col:21> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |       | | |-ParenExpr 0x13afbcdb100 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | |       | | | `-UnaryOperator 0x13afbcdb0e8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |       | | |   `-ArraySubscriptExpr 0x13afbcdb0c8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |       | | |     |-CallExpr 0x13afbcdb080 <col:18, col:29> 'FILE *'
|   | | | |       | | |     | `-ImplicitCastExpr 0x13afbcdb068 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |       | | |     |   `-DeclRefExpr 0x13afbcdb048 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |       | | |     `-IntegerLiteral 0x13afbcdb0a0 <col:31> 'int' 2
|   | | | |       | | `-ImplicitCastExpr 0x13afbcdb1d0 <.//openssl//file_jk/after\test\ssltest_old.c:2434:37> 'const char *' <NoOp>
|   | | | |       | |   `-ImplicitCastExpr 0x13afbcdb1b8 <col:37> 'char *' <ArrayToPointerDecay>
|   | | | |       | |     `-StringLiteral 0x13afbcdb120 <col:37> 'char [27]' lvalue "SSL SERVER STARTUP FAILED\n"
|   | | | |       | `-GotoStmt 0x13afbcdb1e8 <line:2435:21, col:26> 'err' 0x13afbcde160
|   | | | |       `-CompoundStmt 0x13afbcdb420 <line:2436:24, line:2440:17>
|   | | | |         |-IfStmt 0x13afbcdb368 <line:2437:21, line:2438:54>
|   | | | |         | |-ImplicitCastExpr 0x13afbcdb240 <line:2437:25> 'int' <LValueToRValue>
|   | | | |         | | `-DeclRefExpr 0x13afbcdb220 <col:25> 'int' lvalue Var 0x13afbca4a70 'debug' 'int'
|   | | | |         | `-CallExpr 0x13afbcdb2f0 <line:2438:25, col:54> 'int'
|   | | | |         |   |-ImplicitCastExpr 0x13afbcdb2d8 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | | |         |   | `-DeclRefExpr 0x13afbcdb258 <col:25> 'int (const char *, ...)' Function 0x13afbbc9990 'printf' 'int (const char *, ...)'
|   | | | |         |   |-ImplicitCastExpr 0x13afbcdb338 <col:32> 'const char *' <NoOp>
|   | | | |         |   | `-ImplicitCastExpr 0x13afbcdb320 <col:32> 'char *' <ArrayToPointerDecay>
|   | | | |         |   |   `-StringLiteral 0x13afbcdb278 <col:32> 'char [17]' lvalue "server wrote %d\n"
|   | | | |         |   `-ImplicitCastExpr 0x13afbcdb350 <col:53> 'int' <LValueToRValue>
|   | | | |         |     `-DeclRefExpr 0x13afbcdb2a0 <col:53> 'int' lvalue Var 0x13afbcda490 'r' 'int'
|   | | | |         `-CompoundAssignOperator 0x13afbcdb3f0 <line:2439:21, col:31> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | | |           |-DeclRefExpr 0x13afbcdb380 <col:21> 'long' lvalue Var 0x13afbce1820 'sw_num' 'long'
|   | | | |           `-ImplicitCastExpr 0x13afbcdb3d8 <col:31> 'long' <IntegralCast>
|   | | | |             `-ImplicitCastExpr 0x13afbcdb3c0 <col:31> 'int' <LValueToRValue>
|   | | | |               `-DeclRefExpr 0x13afbcdb3a0 <col:31> 'int' lvalue Var 0x13afbcda490 'r' 'int'
|   | | | |-IfStmt 0x13afbcd7e88 <line:2443:13, line:2462:13>
|   | | | | |-BinaryOperator 0x13afbcdb558 <line:2443:17, col:26> 'int' '>'
|   | | | | | |-ImplicitCastExpr 0x13afbcdb528 <col:17> 'long' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x13afbcdb4c8 <col:17> 'long' lvalue Var 0x13afbce18d8 'sr_num' 'long'
|   | | | | | `-ImplicitCastExpr 0x13afbcdb540 <col:26> 'long' <IntegralCast>
|   | | | | |   `-IntegerLiteral 0x13afbcdb500 <col:26> 'int' 0
|   | | | | `-CompoundStmt 0x13afbcd7e70 <col:29, line:2462:13>
|   | | | |   `-IfStmt 0x13afbcd7e48 <line:2447:17, line:2461:17> has_else
|   | | | |     |-BinaryOperator 0x13afbcdb698 <line:2447:21, col:25> 'int' '<'
|   | | | |     | |-ImplicitCastExpr 0x13afbcdb680 <col:21> 'int' <LValueToRValue>
|   | | | |     | | `-DeclRefExpr 0x13afbcdb638 <col:21> 'int' lvalue Var 0x13afbcda490 'r' 'int'
|   | | | |     | `-IntegerLiteral 0x13afbcdb658 <col:25> 'int' 0
|   | | | |     |-CompoundStmt 0x13afbcdb960 <col:28, line:2454:17>
|   | | | |     | `-IfStmt 0x13afbcdb948 <line:2448:21, line:2452:21>
|   | | | |     |   |-OpaqueValueExpr 0x13afbcdb930 <<invalid sloc>> '_Bool'
|   | | | |     |   `-CompoundStmt 0x13afbcdb908 <line:2448:55, line:2452:21>
|   | | | |     |     |-CallExpr 0x13afbcdb828 <line:2449:25, col:60> 'int'
|   | | | |     |     | |-ImplicitCastExpr 0x13afbcdb810 <col:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | |     |     | | `-DeclRefExpr 0x13afbcdb6d8 <col:25> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |     |     | |-ParenExpr 0x13afbcdb7b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | |     |     | | `-UnaryOperator 0x13afbcdb798 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |     |     | |   `-ArraySubscriptExpr 0x13afbcdb778 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |     | |     |-CallExpr 0x13afbcdb730 <col:18, col:29> 'FILE *'
|   | | | |     |     | |     | `-ImplicitCastExpr 0x13afbcdb718 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |     | |     |   `-DeclRefExpr 0x13afbcdb6f8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     |     | |     `-IntegerLiteral 0x13afbcdb750 <col:31> 'int' 2
|   | | | |     |     | `-ImplicitCastExpr 0x13afbcdb870 <.//openssl//file_jk/after\test\ssltest_old.c:2449:41> 'const char *' <NoOp>
|   | | | |     |     |   `-ImplicitCastExpr 0x13afbcdb858 <col:41> 'char *' <ArrayToPointerDecay>
|   | | | |     |     |     `-StringLiteral 0x13afbcdb7d0 <col:41> 'char [17]' lvalue "ERROR in SERVER\n"
|   | | | |     |     |-BinaryOperator 0x13afbcdb8d0 <line:2450:25, col:41> 'int' '='
|   | | | |     |     | |-DeclRefExpr 0x13afbcdb888 <col:25> 'int' lvalue Var 0x13afbcdde80 'err_in_server' 'int'
|   | | | |     |     | `-IntegerLiteral 0x13afbcdb8a8 <col:41> 'int' 1
|   | | | |     |     `-GotoStmt 0x13afbcdb8f0 <line:2451:25, col:30> 'err' 0x13afbcde160
|   | | | |     `-IfStmt 0x13afbcd7e20 <line:2454:24, line:2461:17> has_else
|   | | | |       |-BinaryOperator 0x13afbcdb9d8 <line:2454:28, col:33> 'int' '=='
|   | | | |       | |-ImplicitCastExpr 0x13afbcdb9c0 <col:28> 'int' <LValueToRValue>
|   | | | |       | | `-DeclRefExpr 0x13afbcdb978 <col:28> 'int' lvalue Var 0x13afbcda490 'r' 'int'
|   | | | |       | `-IntegerLiteral 0x13afbcdb998 <col:33> 'int' 0
|   | | | |       |-CompoundStmt 0x13afbcdbbd0 <col:36, line:2457:17>
|   | | | |       | |-CallExpr 0x13afbcdbb58 <line:2455:21, col:66> 'int'
|   | | | |       | | |-ImplicitCastExpr 0x13afbcdbb40 <col:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | |       | | | `-DeclRefExpr 0x13afbcdb9f8 <col:21> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |       | | |-ParenExpr 0x13afbcdbad0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | |       | | | `-UnaryOperator 0x13afbcdbab8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |       | | |   `-ArraySubscriptExpr 0x13afbcdba98 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |       | | |     |-CallExpr 0x13afbcdba50 <col:18, col:29> 'FILE *'
|   | | | |       | | |     | `-ImplicitCastExpr 0x13afbcdba38 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |       | | |     |   `-DeclRefExpr 0x13afbcdba18 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |       | | |     `-IntegerLiteral 0x13afbcdba70 <col:31> 'int' 2
|   | | | |       | | `-ImplicitCastExpr 0x13afbcdbba0 <.//openssl//file_jk/after\test\ssltest_old.c:2455:37> 'const char *' <NoOp>
|   | | | |       | |   `-ImplicitCastExpr 0x13afbcdbb88 <col:37> 'char *' <ArrayToPointerDecay>
|   | | | |       | |     `-StringLiteral 0x13afbcdbaf0 <col:37> 'char [27]' lvalue "SSL SERVER STARTUP FAILED\n"
|   | | | |       | `-GotoStmt 0x13afbcdbbb8 <line:2456:21, col:26> 'err' 0x13afbcde160
|   | | | |       `-CompoundStmt 0x13afbcdbdf0 <line:2457:24, line:2461:17>
|   | | | |         |-IfStmt 0x13afbcdbd38 <line:2458:21, line:2459:53>
|   | | | |         | |-ImplicitCastExpr 0x13afbcdbc10 <line:2458:25> 'int' <LValueToRValue>
|   | | | |         | | `-DeclRefExpr 0x13afbcdbbf0 <col:25> 'int' lvalue Var 0x13afbca4a70 'debug' 'int'
|   | | | |         | `-CallExpr 0x13afbcdbcc0 <line:2459:25, col:53> 'int'
|   | | | |         |   |-ImplicitCastExpr 0x13afbcdbca8 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | | |         |   | `-DeclRefExpr 0x13afbcdbc28 <col:25> 'int (const char *, ...)' Function 0x13afbbc9990 'printf' 'int (const char *, ...)'
|   | | | |         |   |-ImplicitCastExpr 0x13afbcdbd08 <col:32> 'const char *' <NoOp>
|   | | | |         |   | `-ImplicitCastExpr 0x13afbcdbcf0 <col:32> 'char *' <ArrayToPointerDecay>
|   | | | |         |   |   `-StringLiteral 0x13afbcdbc48 <col:32> 'char [16]' lvalue "server read %d\n"
|   | | | |         |   `-ImplicitCastExpr 0x13afbcdbd20 <col:52> 'int' <LValueToRValue>
|   | | | |         |     `-DeclRefExpr 0x13afbcdbc70 <col:52> 'int' lvalue Var 0x13afbcda490 'r' 'int'
|   | | | |         `-CompoundAssignOperator 0x13afbcdbdc0 <line:2460:21, col:31> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | | |           |-DeclRefExpr 0x13afbcdbd50 <col:21> 'long' lvalue Var 0x13afbce18d8 'sr_num' 'long'
|   | | | |           `-ImplicitCastExpr 0x13afbcdbda8 <col:31> 'long' <IntegralCast>
|   | | | |             `-ImplicitCastExpr 0x13afbcdbd90 <col:31> 'int' <LValueToRValue>
|   | | | |               `-DeclRefExpr 0x13afbcdbd70 <col:31> 'int' lvalue Var 0x13afbcda490 'r' 'int'
|   | | | `-CompoundAssignOperator 0x13afbcd7ff0 <line:2464:13, col:42> 'clock_t':'long' '+=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | |   |-UnaryOperator 0x13afbcd7ef0 <col:13, col:14> 'clock_t':'long' lvalue prefix '*' cannot overflow
|   | | |   | `-ImplicitCastExpr 0x13afbcd7ed8 <col:14> 'clock_t *' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x13afbcd7ea0 <col:14> 'clock_t *' lvalue ParmVar 0x13afbce1470 's_time' 'clock_t *'
|   | | |   `-ParenExpr 0x13afbcd7fd0 <col:24, col:42> 'long'
|   | | |     `-BinaryOperator 0x13afbcd7fb0 <col:25, col:35> 'long' '-'
|   | | |       |-CallExpr 0x13afbcd7f40 <col:25, col:31> 'clock_t':'long'
|   | | |       | `-ImplicitCastExpr 0x13afbcd7f28 <col:25> 'clock_t (*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | |       |   `-DeclRefExpr 0x13afbcd7f08 <col:25> 'clock_t (void) __attribute__((cdecl))':'clock_t (void)' Function 0x13afbd71758 'clock' 'clock_t (void) __attribute__((cdecl))':'clock_t (void)'
|   | | |       `-ImplicitCastExpr 0x13afbcd7f98 <col:35> 'clock_t':'long' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x13afbcd7f60 <col:35> 'clock_t':'long' lvalue Var 0x13afbcda538 's_clock' 'clock_t':'long'
|   | | `-CompoundStmt 0x13afbce3dc8 <line:2467:9, line:2577:9>
|   | |   |-DeclStmt 0x13afbcd8170 <line:2470:13, col:26>
|   | |   | |-VarDecl 0x13afbcd8078 <col:13, col:20> col:20 used r1 'size_t':'unsigned long long'
|   | |   | `-VarDecl 0x13afbcd80f0 <col:13, col:24> col:24 used r2 'size_t':'unsigned long long'
|   | |   |-DeclStmt 0x13afbcd8230 <line:2477:13, col:41>
|   | |   | `-VarDecl 0x13afbcd81a0 <col:13, col:40> col:24 used prev_progress 'int' static cinit
|   | |   |   `-IntegerLiteral 0x13afbcd8208 <col:40> 'int' 1
|   | |   |-DeclStmt 0x13afbcd82f0 <line:2478:13, col:29>
|   | |   | `-VarDecl 0x13afbcd8260 <col:13, col:28> col:17 used progress 'int' cinit
|   | |   |   `-IntegerLiteral 0x13afbcd82c8 <col:28> 'int' 0
|   | |   |-DoStmt 0x13afbcd9c60 <line:2481:13, line:2518:28>
|   | |   | |-CompoundStmt 0x13afbcd9b98 <line:2481:16, line:2517:13>
|   | |   | | |-DeclStmt 0x13afbcd8380 <line:2482:17, col:27>
|   | |   | | | `-VarDecl 0x13afbcd8318 <col:17, col:24> col:24 used num 'size_t':'unsigned long long'
|   | |   | | |-DeclStmt 0x13afbcd8418 <line:2483:17, col:22>
|   | |   | | | `-VarDecl 0x13afbcd83b0 <col:17, col:21> col:21 used r 'int'
|   | |   | | |-BinaryOperator 0x13afbcd8730 <line:2488:17, col:23> 'size_t':'unsigned long long' '='
|   | |   | | | |-DeclRefExpr 0x13afbcd86c0 <col:17> 'size_t':'unsigned long long' lvalue Var 0x13afbcd8318 'num' 'size_t':'unsigned long long'
|   | |   | | | `-ImplicitCastExpr 0x13afbcd8718 <col:23> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | | |   `-DeclRefExpr 0x13afbcd86f8 <col:23> 'size_t':'unsigned long long' lvalue Var 0x13afbcd8078 'r1' 'size_t':'unsigned long long'
|   | |   | | |-IfStmt 0x13afbcd8858 <line:2489:17, line:2490:27>
|   | |   | | | |-BinaryOperator 0x13afbcd87c0 <line:2489:21, col:26> 'int' '<'
|   | |   | | | | |-ImplicitCastExpr 0x13afbcd8790 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | | | | | `-DeclRefExpr 0x13afbcd8750 <col:21> 'size_t':'unsigned long long' lvalue Var 0x13afbcd80f0 'r2' 'size_t':'unsigned long long'
|   | |   | | | | `-ImplicitCastExpr 0x13afbcd87a8 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | | | |   `-DeclRefExpr 0x13afbcd8770 <col:26> 'size_t':'unsigned long long' lvalue Var 0x13afbcd8318 'num' 'size_t':'unsigned long long'
|   | |   | | | `-BinaryOperator 0x13afbcd8838 <line:2490:21, col:27> 'size_t':'unsigned long long' '='
|   | |   | | |   |-DeclRefExpr 0x13afbcd87e0 <col:21> 'size_t':'unsigned long long' lvalue Var 0x13afbcd8318 'num' 'size_t':'unsigned long long'
|   | |   | | |   `-ImplicitCastExpr 0x13afbcd8820 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | | |     `-DeclRefExpr 0x13afbcd8800 <col:27> 'size_t':'unsigned long long' lvalue Var 0x13afbcd80f0 'r2' 'size_t':'unsigned long long'
|   | |   | | `-IfStmt 0x13afbcd9b80 <line:2491:17, line:2516:17>
|   | |   | |   |-ImplicitCastExpr 0x13afbcd8890 <line:2491:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | |   | `-DeclRefExpr 0x13afbcd8870 <col:21> 'size_t':'unsigned long long' lvalue Var 0x13afbcd8318 'num' 'size_t':'unsigned long long'
|   | |   | |   `-CompoundStmt 0x13afbcd9b38 <col:26, line:2516:17>
|   | |   | |     |-DeclStmt 0x13afbcd8928 <line:2492:21, col:34>
|   | |   | |     | `-VarDecl 0x13afbcd88c0 <col:21, col:27> col:27 used dataptr 'char *'
|   | |   | |     |-IfStmt 0x13afbcd8a58 <line:2494:21, <built-in>:30:21>
|   | |   | |     | |-BinaryOperator 0x13afbcd89b8 <col:21, .//openssl//file_jk/after\test\ssltest_old.c:2494:35> 'int' '<'
|   | |   | |     | | |-ImplicitCastExpr 0x13afbcd89a0 <<built-in>:30:21> 'unsigned long long' <IntegralCast>
|   | |   | |     | | | `-IntegerLiteral 0x13afbcd8940 <col:21> 'int' 2147483647
|   | |   | |     | | `-ImplicitCastExpr 0x13afbcd8988 <.//openssl//file_jk/after\test\ssltest_old.c:2494:35> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | |     | |   `-DeclRefExpr 0x13afbcd8968 <col:35> 'size_t':'unsigned long long' lvalue Var 0x13afbcd8318 'num' 'size_t':'unsigned long long'
|   | |   | |     | `-BinaryOperator 0x13afbcd8a38 <line:2495:25, <built-in>:30:21> 'size_t':'unsigned long long' '='
|   | |   | |     |   |-DeclRefExpr 0x13afbcd89d8 <.//openssl//file_jk/after\test\ssltest_old.c:2495:25> 'size_t':'unsigned long long' lvalue Var 0x13afbcd8318 'num' 'size_t':'unsigned long long'
|   | |   | |     |   `-ImplicitCastExpr 0x13afbcd8a20 <<built-in>:30:21> 'size_t':'unsigned long long' <IntegralCast>
|   | |   | |     |     `-IntegerLiteral 0x13afbcd89f8 <col:21> 'int' 2147483647
|   | |   | |     |-CStyleCastExpr 0x13afbcd90b8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
|   | |   | |     | `-ParenExpr 0x13afbcd9098 <col:35, col:128> 'int'
|   | |   | |     |   `-BinaryOperator 0x13afbcd9048 <col:37, col:126> 'int' '||'
|   | |   | |     |     |-ParenExpr 0x13afbcd8d50 <col:37, col:53> 'int'
|   | |   | |     |     | `-UnaryOperator 0x13afbcd8d38 <col:38, col:52> 'int' prefix '!' cannot overflow
|   | |   | |     |     |   `-UnaryOperator 0x13afbcd8d20 <col:39, col:52> 'int' prefix '!' cannot overflow
|   | |   | |     |     |     `-ParenExpr 0x13afbcd8d00 <col:40, col:52> 'int'
|   | |   | |     |     |       `-BinaryOperator 0x13afbcd8ce0 <.//openssl//file_jk/after\test\ssltest_old.c:2498:28, col:32> 'int' '>'
|   | |   | |     |     |         |-ImplicitCastExpr 0x13afbcd8cc8 <col:28> 'int' <LValueToRValue>
|   | |   | |     |     |         | `-DeclRefExpr 0x13afbcd8c80 <col:28> 'int' lvalue Var 0x13afbcd83b0 'r' 'int'
|   | |   | |     |     |         `-IntegerLiteral 0x13afbcd8ca0 <col:32> 'int' 0
|   | |   | |     |     `-ParenExpr 0x13afbcd9028 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   | |   | |     |       `-BinaryOperator 0x13afbcd9008 <col:59, col:125> 'int' ','
|   | |   | |     |         |-CallExpr 0x13afbcd8f30 <col:59, col:122> 'void'
|   | |   | |     |         | |-ImplicitCastExpr 0x13afbcd8f18 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |   | |     |         | | `-DeclRefExpr 0x13afbcd8d70 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x13afbb8e4c0 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   | |   | |     |         | |-ImplicitCastExpr 0x13afbcd8f80 <<scratch space>:175:1> 'const wchar_t *' <NoOp>
|   | |   | |     |         | | `-ImplicitCastExpr 0x13afbcd8f68 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |   | |     |         | |   `-StringLiteral 0x13afbcd8dc8 <col:1> 'unsigned short [6]' lvalue L"r > 0"
|   | |   | |     |         | |-ImplicitCastExpr 0x13afbcd8fb0 <line:177:1> 'const wchar_t *' <NoOp>
|   | |   | |     |         | | `-ImplicitCastExpr 0x13afbcd8f98 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |   | |     |         | |   `-StringLiteral 0x13afbcd8e28 <col:1> 'unsigned short [45]' lvalue L".//openssl//file_jk/after\\test\\ssltest_old.c"
|   | |   | |     |         | `-ImplicitCastExpr 0x13afbcd8fc8 <line:178:1> 'unsigned int' <IntegralCast>
|   | |   | |     |         |   `-IntegerLiteral 0x13afbcd8e98 <col:1> 'int' 2498
|   | |   | |     |         `-IntegerLiteral 0x13afbcd8fe0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   | |   | |     |-CStyleCastExpr 0x13afbcd94e8 <col:29, col:128> 'void' <ToVoid>
|   | |   | |     | `-ParenExpr 0x13afbcd94c8 <col:35, col:128> 'int'
|   | |   | |     |   `-BinaryOperator 0x13afbcd9478 <col:37, col:126> 'int' '||'
|   | |   | |     |     |-ParenExpr 0x13afbcd9200 <col:37, col:53> 'int'
|   | |   | |     |     | `-UnaryOperator 0x13afbcd91e8 <col:38, col:52> 'int' prefix '!' cannot overflow
|   | |   | |     |     |   `-UnaryOperator 0x13afbcd91d0 <col:39, col:52> 'int' prefix '!' cannot overflow
|   | |   | |     |     |     `-ParenExpr 0x13afbcd91b0 <col:40, col:52> 'int'
|   | |   | |     |     |       `-BinaryOperator 0x13afbcd9190 <.//openssl//file_jk/after\test\ssltest_old.c:2499:28, col:38> 'int' '<='
|   | |   | |     |     |         |-ImplicitCastExpr 0x13afbcd9178 <col:28> 'int' <LValueToRValue>
|   | |   | |     |     |         | `-DeclRefExpr 0x13afbcd90e0 <col:28> 'int' lvalue Var 0x13afbcd83b0 'r' 'int'
|   | |   | |     |     |         `-CStyleCastExpr 0x13afbcd9150 <col:33, col:38> 'int' <IntegralCast>
|   | |   | |     |     |           `-ImplicitCastExpr 0x13afbcd9138 <col:38> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   | |   | |     |     |             `-DeclRefExpr 0x13afbcd9100 <col:38> 'size_t':'unsigned long long' lvalue Var 0x13afbcd8318 'num' 'size_t':'unsigned long long'
|   | |   | |     |     `-ParenExpr 0x13afbcd9458 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   | |   | |     |       `-BinaryOperator 0x13afbcd9438 <col:59, col:125> 'int' ','
|   | |   | |     |         |-CallExpr 0x13afbcd9360 <col:59, col:122> 'void'
|   | |   | |     |         | |-ImplicitCastExpr 0x13afbcd9348 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |   | |     |         | | `-DeclRefExpr 0x13afbcd9220 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x13afbb8e4c0 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   | |   | |     |         | |-ImplicitCastExpr 0x13afbcd93b0 <<scratch space>:180:1> 'const wchar_t *' <NoOp>
|   | |   | |     |         | | `-ImplicitCastExpr 0x13afbcd9398 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |   | |     |         | |   `-StringLiteral 0x13afbcd9278 <col:1> 'unsigned short [14]' lvalue L"r <= (int)num"
|   | |   | |     |         | |-ImplicitCastExpr 0x13afbcd93e0 <line:182:1> 'const wchar_t *' <NoOp>
|   | |   | |     |         | | `-ImplicitCastExpr 0x13afbcd93c8 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |   | |     |         | |   `-StringLiteral 0x13afbcd92b0 <col:1> 'unsigned short [45]' lvalue L".//openssl//file_jk/after\\test\\ssltest_old.c"
|   | |   | |     |         | `-ImplicitCastExpr 0x13afbcd93f8 <line:183:1> 'unsigned int' <IntegralCast>
|   | |   | |     |         |   `-IntegerLiteral 0x13afbcd9320 <col:1> 'int' 2499
|   | |   | |     |         `-IntegerLiteral 0x13afbcd9410 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   | |   | |     |-BinaryOperator 0x13afbcd9580 <.//openssl//file_jk/after\test\ssltest_old.c:2503:21, col:27> 'size_t':'unsigned long long' '='
|   | |   | |     | |-DeclRefExpr 0x13afbcd9510 <col:21> 'size_t':'unsigned long long' lvalue Var 0x13afbcd8318 'num' 'size_t':'unsigned long long'
|   | |   | |     | `-ImplicitCastExpr 0x13afbcd9568 <col:27> 'size_t':'unsigned long long' <IntegralCast>
|   | |   | |     |   `-ImplicitCastExpr 0x13afbcd9550 <col:27> 'int' <LValueToRValue>
|   | |   | |     |     `-DeclRefExpr 0x13afbcd9530 <col:27> 'int' lvalue Var 0x13afbcd83b0 'r' 'int'
|   | |   | |     |-IfStmt 0x13afbcd9970 <line:2505:21, line:2509:21>
|   | |   | |     | |-BinaryOperator 0x13afbcd9728 <line:2505:25, col:35> 'int' '!='
|   | |   | |     | | |-ImplicitCastExpr 0x13afbcd9710 <col:25> 'int' <LValueToRValue>
|   | |   | |     | | | `-DeclRefExpr 0x13afbcd9678 <col:25> 'int' lvalue Var 0x13afbcd83b0 'r' 'int'
|   | |   | |     | | `-CStyleCastExpr 0x13afbcd96e8 <col:30, col:35> 'int' <IntegralCast>
|   | |   | |     | |   `-ImplicitCastExpr 0x13afbcd96d0 <col:35> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   | |   | |     | |     `-DeclRefExpr 0x13afbcd9698 <col:35> 'size_t':'unsigned long long' lvalue Var 0x13afbcd8318 'num' 'size_t':'unsigned long long'
|   | |   | |     | `-CompoundStmt 0x13afbcd9950 <col:40, line:2509:21>
|   | |   | |     |   |-CallExpr 0x13afbcd98d8 <line:2506:25, line:2507:71> 'int'
|   | |   | |     |   | |-ImplicitCastExpr 0x13afbcd98c0 <line:2506:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | |   | |     |   | | `-DeclRefExpr 0x13afbcd9748 <col:25> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |   | |     |   | |-ParenExpr 0x13afbcd9820 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | |   | |     |   | | `-UnaryOperator 0x13afbcd9808 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   | |     |   | |   `-ArraySubscriptExpr 0x13afbcd97e8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |   | |     |   | |     |-CallExpr 0x13afbcd97a0 <col:18, col:29> 'FILE *'
|   | |   | |     |   | |     | `-ImplicitCastExpr 0x13afbcd9788 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |   | |     |   | |     |   `-DeclRefExpr 0x13afbcd9768 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |   | |     |   | |     `-IntegerLiteral 0x13afbcd97c0 <col:31> 'int' 2
|   | |   | |     |   | `-ImplicitCastExpr 0x13afbcd9920 <.//openssl//file_jk/after\test\ssltest_old.c:2506:41, line:2507:33> 'const char *' <NoOp>
|   | |   | |     |   |   `-ImplicitCastExpr 0x13afbcd9908 <line:2506:41, line:2507:33> 'char *' <ArrayToPointerDecay>
|   | |   | |     |   |     `-StringLiteral 0x13afbcd9840 <line:2506:41, line:2507:33> 'char [70]' lvalue "ERROR: BIO_write could not write BIO_ctrl_get_write_guarantee() bytes"
|   | |   | |     |   `-GotoStmt 0x13afbcd9938 <line:2508:25, col:30> 'err' 0x13afbcde160
|   | |   | |     `-BinaryOperator 0x13afbcd99e8 <line:2510:21, col:32> 'int' '='
|   | |   | |       |-DeclRefExpr 0x13afbcd9988 <col:21> 'int' lvalue Var 0x13afbcd8260 'progress' 'int'
|   | |   | |       `-IntegerLiteral 0x13afbcd99c0 <col:32> 'int' 1
|   | |   | `-BinaryOperator 0x13afbcd9c40 <line:2518:20, col:26> 'int' '&&'
|   | |   |   |-ImplicitCastExpr 0x13afbcd9c10 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |   | `-DeclRefExpr 0x13afbcd9bd0 <col:20> 'size_t':'unsigned long long' lvalue Var 0x13afbcd8078 'r1' 'size_t':'unsigned long long'
|   | |   |   `-ImplicitCastExpr 0x13afbcd9c28 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x13afbcd9bf0 <col:26> 'size_t':'unsigned long long' lvalue Var 0x13afbcd80f0 'r2' 'size_t':'unsigned long long'
|   | |   |-CompoundStmt 0x13afbce35b0 <line:2521:13, line:2567:13>
|   | |   | |-DeclStmt 0x13afbcd9cf8 <line:2522:17, col:27>
|   | |   | | `-VarDecl 0x13afbcd9c90 <col:17, col:24> col:24 used num 'size_t':'unsigned long long'
|   | |   | |-DeclStmt 0x13afbcd9d90 <line:2523:17, col:22>
|   | |   | | `-VarDecl 0x13afbcd9d28 <col:17, col:21> col:21 used r 'int'
|   | |   | |-BinaryOperator 0x13afbce1ff0 <line:2532:17, col:23> 'size_t':'unsigned long long' '='
|   | |   | | |-DeclRefExpr 0x13afbce1f80 <col:17> 'size_t':'unsigned long long' lvalue Var 0x13afbcd9c90 'num' 'size_t':'unsigned long long'
|   | |   | | `-ImplicitCastExpr 0x13afbce1fd8 <col:23> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x13afbce1fb8 <col:23> 'size_t':'unsigned long long' lvalue Var 0x13afbcd8078 'r1' 'size_t':'unsigned long long'
|   | |   | |-IfStmt 0x13afbce2118 <line:2533:17, line:2534:27>
|   | |   | | |-BinaryOperator 0x13afbce2080 <line:2533:21, col:26> 'int' '<'
|   | |   | | | |-ImplicitCastExpr 0x13afbce2050 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | | | | `-DeclRefExpr 0x13afbce2010 <col:21> 'size_t':'unsigned long long' lvalue Var 0x13afbcd80f0 'r2' 'size_t':'unsigned long long'
|   | |   | | | `-ImplicitCastExpr 0x13afbce2068 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | | |   `-DeclRefExpr 0x13afbce2030 <col:26> 'size_t':'unsigned long long' lvalue Var 0x13afbcd9c90 'num' 'size_t':'unsigned long long'
|   | |   | | `-BinaryOperator 0x13afbce20f8 <line:2534:21, col:27> 'size_t':'unsigned long long' '='
|   | |   | |   |-DeclRefExpr 0x13afbce20a0 <col:21> 'size_t':'unsigned long long' lvalue Var 0x13afbcd9c90 'num' 'size_t':'unsigned long long'
|   | |   | |   `-ImplicitCastExpr 0x13afbce20e0 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | |     `-DeclRefExpr 0x13afbce20c0 <col:27> 'size_t':'unsigned long long' lvalue Var 0x13afbcd80f0 'r2' 'size_t':'unsigned long long'
|   | |   | `-IfStmt 0x13afbce3598 <line:2535:17, line:2566:17>
|   | |   |   |-ImplicitCastExpr 0x13afbce2150 <line:2535:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |   | `-DeclRefExpr 0x13afbce2130 <col:21> 'size_t':'unsigned long long' lvalue Var 0x13afbcd9c90 'num' 'size_t':'unsigned long long'
|   | |   |   `-CompoundStmt 0x13afbce3548 <col:26, line:2566:17>
|   | |   |     |-DeclStmt 0x13afbce21e8 <line:2536:21, col:34>
|   | |   |     | `-VarDecl 0x13afbce2180 <col:21, col:27> col:27 used dataptr 'char *'
|   | |   |     |-IfStmt 0x13afbce2318 <line:2538:21, <built-in>:30:21>
|   | |   |     | |-BinaryOperator 0x13afbce2278 <col:21, .//openssl//file_jk/after\test\ssltest_old.c:2538:35> 'int' '<'
|   | |   |     | | |-ImplicitCastExpr 0x13afbce2260 <<built-in>:30:21> 'unsigned long long' <IntegralCast>
|   | |   |     | | | `-IntegerLiteral 0x13afbce2200 <col:21> 'int' 2147483647
|   | |   |     | | `-ImplicitCastExpr 0x13afbce2248 <.//openssl//file_jk/after\test\ssltest_old.c:2538:35> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |     | |   `-DeclRefExpr 0x13afbce2228 <col:35> 'size_t':'unsigned long long' lvalue Var 0x13afbcd9c90 'num' 'size_t':'unsigned long long'
|   | |   |     | `-BinaryOperator 0x13afbce22f8 <line:2539:25, <built-in>:30:21> 'size_t':'unsigned long long' '='
|   | |   |     |   |-DeclRefExpr 0x13afbce2298 <.//openssl//file_jk/after\test\ssltest_old.c:2539:25> 'size_t':'unsigned long long' lvalue Var 0x13afbcd9c90 'num' 'size_t':'unsigned long long'
|   | |   |     |   `-ImplicitCastExpr 0x13afbce22e0 <<built-in>:30:21> 'size_t':'unsigned long long' <IntegralCast>
|   | |   |     |     `-IntegerLiteral 0x13afbce22b8 <col:21> 'int' 2147483647
|   | |   |     |-IfStmt 0x13afbce2400 <.//openssl//file_jk/after\test\ssltest_old.c:2541:21, line:2542:27>
|   | |   |     | |-BinaryOperator 0x13afbce23a8 <line:2541:25, col:31> 'int' '>'
|   | |   |     | | |-ImplicitCastExpr 0x13afbce2378 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |     | | | `-DeclRefExpr 0x13afbce2330 <col:25> 'size_t':'unsigned long long' lvalue Var 0x13afbcd9c90 'num' 'size_t':'unsigned long long'
|   | |   |     | | `-ImplicitCastExpr 0x13afbce2390 <col:31> 'unsigned long long' <IntegralCast>
|   | |   |     | |   `-IntegerLiteral 0x13afbce2350 <col:31> 'int' 1
|   | |   |     | `-UnaryOperator 0x13afbce23e8 <line:2542:25, col:27> 'size_t':'unsigned long long' prefix '--'
|   | |   |     |   `-DeclRefExpr 0x13afbce23c8 <col:27> 'size_t':'unsigned long long' lvalue Var 0x13afbcd9c90 'num' 'size_t':'unsigned long long'
|   | |   |     |-CStyleCastExpr 0x13afbce2920 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
|   | |   |     | `-ParenExpr 0x13afbce2900 <col:35, col:128> 'int'
|   | |   |     |   `-BinaryOperator 0x13afbce28b0 <col:37, col:126> 'int' '||'
|   | |   |     |     |-ParenExpr 0x13afbce2680 <col:37, col:53> 'int'
|   | |   |     |     | `-UnaryOperator 0x13afbce2668 <col:38, col:52> 'int' prefix '!' cannot overflow
|   | |   |     |     |   `-UnaryOperator 0x13afbce2650 <col:39, col:52> 'int' prefix '!' cannot overflow
|   | |   |     |     |     `-ParenExpr 0x13afbce2630 <col:40, col:52> 'int'
|   | |   |     |     |       `-BinaryOperator 0x13afbce2610 <.//openssl//file_jk/after\test\ssltest_old.c:2545:28, col:32> 'int' '>'
|   | |   |     |     |         |-ImplicitCastExpr 0x13afbce25f8 <col:28> 'int' <LValueToRValue>
|   | |   |     |     |         | `-DeclRefExpr 0x13afbce25b0 <col:28> 'int' lvalue Var 0x13afbcd9d28 'r' 'int'
|   | |   |     |     |         `-IntegerLiteral 0x13afbce25d0 <col:32> 'int' 0
|   | |   |     |     `-ParenExpr 0x13afbce2890 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   | |   |     |       `-BinaryOperator 0x13afbce2870 <col:59, col:125> 'int' ','
|   | |   |     |         |-CallExpr 0x13afbce2798 <col:59, col:122> 'void'
|   | |   |     |         | |-ImplicitCastExpr 0x13afbce2780 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |   |     |         | | `-DeclRefExpr 0x13afbce26a0 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x13afbb8e4c0 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   | |   |     |         | |-ImplicitCastExpr 0x13afbce27e8 <<scratch space>:185:1> 'const wchar_t *' <NoOp>
|   | |   |     |         | | `-ImplicitCastExpr 0x13afbce27d0 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |   |     |         | |   `-StringLiteral 0x13afbce26c0 <col:1> 'unsigned short [6]' lvalue L"r > 0"
|   | |   |     |         | |-ImplicitCastExpr 0x13afbce2818 <line:187:1> 'const wchar_t *' <NoOp>
|   | |   |     |         | | `-ImplicitCastExpr 0x13afbce2800 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |   |     |         | |   `-StringLiteral 0x13afbce26e8 <col:1> 'unsigned short [45]' lvalue L".//openssl//file_jk/after\\test\\ssltest_old.c"
|   | |   |     |         | `-ImplicitCastExpr 0x13afbce2830 <line:188:1> 'unsigned int' <IntegralCast>
|   | |   |     |         |   `-IntegerLiteral 0x13afbce2758 <col:1> 'int' 2545
|   | |   |     |         `-IntegerLiteral 0x13afbce2848 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   | |   |     |-IfStmt 0x13afbce2aa8 <.//openssl//file_jk/after\test\ssltest_old.c:2546:21, line:2547:31>
|   | |   |     | |-BinaryOperator 0x13afbce29f8 <line:2546:25, col:34> 'int' '<'
|   | |   |     | | |-ImplicitCastExpr 0x13afbce29e0 <col:25> 'int' <LValueToRValue>
|   | |   |     | | | `-DeclRefExpr 0x13afbce2948 <col:25> 'int' lvalue Var 0x13afbcd9d28 'r' 'int'
|   | |   |     | | `-CStyleCastExpr 0x13afbce29b8 <col:29, col:34> 'int' <IntegralCast>
|   | |   |     | |   `-ImplicitCastExpr 0x13afbce29a0 <col:34> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   | |   |     | |     `-DeclRefExpr 0x13afbce2968 <col:34> 'size_t':'unsigned long long' lvalue Var 0x13afbcd9c90 'num' 'size_t':'unsigned long long'
|   | |   |     | `-BinaryOperator 0x13afbce2a88 <line:2547:25, col:31> 'size_t':'unsigned long long' '='
|   | |   |     |   |-DeclRefExpr 0x13afbce2a18 <col:25> 'size_t':'unsigned long long' lvalue Var 0x13afbcd9c90 'num' 'size_t':'unsigned long long'
|   | |   |     |   `-ImplicitCastExpr 0x13afbce2a70 <col:31> 'size_t':'unsigned long long' <IntegralCast>
|   | |   |     |     `-ImplicitCastExpr 0x13afbce2a58 <col:31> 'int' <LValueToRValue>
|   | |   |     |       `-DeclRefExpr 0x13afbce2a38 <col:31> 'int' lvalue Var 0x13afbcd9d28 'r' 'int'
|   | |   |     |-IfStmt 0x13afbce2eb8 <line:2549:21, line:2553:21>
|   | |   |     | |-BinaryOperator 0x13afbce2c48 <line:2549:25, col:35> 'int' '!='
|   | |   |     | | |-ImplicitCastExpr 0x13afbce2c30 <col:25> 'int' <LValueToRValue>
|   | |   |     | | | `-DeclRefExpr 0x13afbce2b98 <col:25> 'int' lvalue Var 0x13afbcd9d28 'r' 'int'
|   | |   |     | | `-CStyleCastExpr 0x13afbce2c08 <col:30, col:35> 'int' <IntegralCast>
|   | |   |     | |   `-ImplicitCastExpr 0x13afbce2bf0 <col:35> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   | |   |     | |     `-DeclRefExpr 0x13afbce2bb8 <col:35> 'size_t':'unsigned long long' lvalue Var 0x13afbcd9c90 'num' 'size_t':'unsigned long long'
|   | |   |     | `-CompoundStmt 0x13afbce2e98 <col:40, line:2553:21>
|   | |   |     |   |-CallExpr 0x13afbce2e20 <line:2550:25, line:2551:59> 'int'
|   | |   |     |   | |-ImplicitCastExpr 0x13afbce2e08 <line:2550:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | |   |     |   | | `-DeclRefExpr 0x13afbce2c68 <col:25> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |   |     |   | |-ParenExpr 0x13afbce2d40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | |   |     |   | | `-UnaryOperator 0x13afbce2d28 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   |     |   | |   `-ArraySubscriptExpr 0x13afbce2d08 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |   |     |   | |     |-CallExpr 0x13afbce2cc0 <col:18, col:29> 'FILE *'
|   | |   |     |   | |     | `-ImplicitCastExpr 0x13afbce2ca8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |   |     |   | |     |   `-DeclRefExpr 0x13afbce2c88 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |   |     |   | |     `-IntegerLiteral 0x13afbce2ce0 <col:31> 'int' 2
|   | |   |     |   | `-ImplicitCastExpr 0x13afbce2e68 <.//openssl//file_jk/after\test\ssltest_old.c:2550:41, line:2551:33> 'const char *' <NoOp>
|   | |   |     |   |   `-ImplicitCastExpr 0x13afbce2e50 <line:2550:41, line:2551:33> 'char *' <ArrayToPointerDecay>
|   | |   |     |   |     `-StringLiteral 0x13afbce2d98 <line:2550:41, line:2551:33> 'char [56]' lvalue "ERROR: BIO_read could not read BIO_ctrl_pending() bytes"
|   | |   |     |   `-GotoStmt 0x13afbce2e80 <line:2552:25, col:30> 'err' 0x13afbcde160
|   | |   |     |-BinaryOperator 0x13afbce2f18 <line:2554:21, col:32> 'int' '='
|   | |   |     | |-DeclRefExpr 0x13afbce2ed0 <col:21> 'int' lvalue Var 0x13afbcd8260 'progress' 'int'
|   | |   |     | `-IntegerLiteral 0x13afbce2ef0 <col:32> 'int' 1
|   | |   |     `-IfStmt 0x13afbce3400 <line:2556:21, line:2560:21>
|   | |   |       |-BinaryOperator 0x13afbce31c8 <line:2556:25, col:35> 'int' '!='
|   | |   |       | |-ImplicitCastExpr 0x13afbce31b0 <col:25> 'int' <LValueToRValue>
|   | |   |       | | `-DeclRefExpr 0x13afbce3118 <col:25> 'int' lvalue Var 0x13afbcd9d28 'r' 'int'
|   | |   |       | `-CStyleCastExpr 0x13afbce3188 <col:30, col:35> 'int' <IntegralCast>
|   | |   |       |   `-ImplicitCastExpr 0x13afbce3170 <col:35> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   | |   |       |     `-DeclRefExpr 0x13afbce3138 <col:35> 'size_t':'unsigned long long' lvalue Var 0x13afbcd9c90 'num' 'size_t':'unsigned long long'
|   | |   |       `-CompoundStmt 0x13afbce33e0 <col:40, line:2560:21>
|   | |   |         |-CallExpr 0x13afbce3368 <line:2557:25, line:2558:54> 'int'
|   | |   |         | |-ImplicitCastExpr 0x13afbce3350 <line:2557:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | |   |         | | `-DeclRefExpr 0x13afbce31e8 <col:25> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |   |         | |-ParenExpr 0x13afbce32c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | |   |         | | `-UnaryOperator 0x13afbce32a8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   |         | |   `-ArraySubscriptExpr 0x13afbce3288 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |   |         | |     |-CallExpr 0x13afbce3240 <col:18, col:29> 'FILE *'
|   | |   |         | |     | `-ImplicitCastExpr 0x13afbce3228 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |   |         | |     |   `-DeclRefExpr 0x13afbce3208 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |   |         | |     `-IntegerLiteral 0x13afbce3260 <col:31> 'int' 2
|   | |   |         | `-ImplicitCastExpr 0x13afbce33b0 <.//openssl//file_jk/after\test\ssltest_old.c:2557:41, line:2558:33> 'const char *' <NoOp>
|   | |   |         |   `-ImplicitCastExpr 0x13afbce3398 <line:2557:41, line:2558:33> 'char *' <ArrayToPointerDecay>
|   | |   |         |     `-StringLiteral 0x13afbce32e0 <line:2557:41, line:2558:33> 'char [55]' lvalue "ERROR: BIO_nwrite() did not accept BIO_nwrite0() bytes"
|   | |   |         `-GotoStmt 0x13afbce33c8 <line:2559:25, col:30> 'err' 0x13afbcde160
|   | |   |-IfStmt 0x13afbce3d38 <line:2570:13, line:2575:17>
|   | |   | |-BinaryOperator 0x13afbce36a0 <line:2570:17, col:31> 'int' '&&'
|   | |   | | |-UnaryOperator 0x13afbce3620 <col:17, col:18> 'int' prefix '!' cannot overflow
|   | |   | | | `-ImplicitCastExpr 0x13afbce3608 <col:18> 'int' <LValueToRValue>
|   | |   | | |   `-DeclRefExpr 0x13afbce35e8 <col:18> 'int' lvalue Var 0x13afbcd8260 'progress' 'int'
|   | |   | | `-UnaryOperator 0x13afbce3688 <col:30, col:31> 'int' prefix '!' cannot overflow
|   | |   | |   `-ImplicitCastExpr 0x13afbce3670 <col:31> 'int' <LValueToRValue>
|   | |   | |     `-DeclRefExpr 0x13afbce3638 <col:31> 'int' lvalue Var 0x13afbcd81a0 'prev_progress' 'int'
|   | |   | `-IfStmt 0x13afbce3d20 <line:2571:17, line:2575:17>
|   | |   |   |-BinaryOperator 0x13afbce3960 <line:2571:21, col:72> 'int' '||'
|   | |   |   | |-BinaryOperator 0x13afbce38a8 <col:21, col:58> 'int' '||'
|   | |   |   | | |-BinaryOperator 0x13afbce37f0 <col:21, col:44> 'int' '||'
|   | |   |   | | | |-BinaryOperator 0x13afbce3738 <col:21, col:30> 'int' '>'
|   | |   |   | | | | |-ImplicitCastExpr 0x13afbce3708 <col:21> 'long' <LValueToRValue>
|   | |   |   | | | | | `-DeclRefExpr 0x13afbce36c0 <col:21> 'long' lvalue Var 0x13afbce1698 'cw_num' 'long'
|   | |   |   | | | | `-ImplicitCastExpr 0x13afbce3720 <col:30> 'long' <IntegralCast>
|   | |   |   | | | |   `-IntegerLiteral 0x13afbce36e0 <col:30> 'int' 0
|   | |   |   | | | `-BinaryOperator 0x13afbce37d0 <col:35, col:44> 'int' '>'
|   | |   |   | | |   |-ImplicitCastExpr 0x13afbce37a0 <col:35> 'long' <LValueToRValue>
|   | |   |   | | |   | `-DeclRefExpr 0x13afbce3758 <col:35> 'long' lvalue Var 0x13afbce1768 'cr_num' 'long'
|   | |   |   | | |   `-ImplicitCastExpr 0x13afbce37b8 <col:44> 'long' <IntegralCast>
|   | |   |   | | |     `-IntegerLiteral 0x13afbce3778 <col:44> 'int' 0
|   | |   |   | | `-BinaryOperator 0x13afbce3888 <col:49, col:58> 'int' '>'
|   | |   |   | |   |-ImplicitCastExpr 0x13afbce3858 <col:49> 'long' <LValueToRValue>
|   | |   |   | |   | `-DeclRefExpr 0x13afbce3810 <col:49> 'long' lvalue Var 0x13afbce1820 'sw_num' 'long'
|   | |   |   | |   `-ImplicitCastExpr 0x13afbce3870 <col:58> 'long' <IntegralCast>
|   | |   |   | |     `-IntegerLiteral 0x13afbce3830 <col:58> 'int' 0
|   | |   |   | `-BinaryOperator 0x13afbce3940 <col:63, col:72> 'int' '>'
|   | |   |   |   |-ImplicitCastExpr 0x13afbce3910 <col:63> 'long' <LValueToRValue>
|   | |   |   |   | `-DeclRefExpr 0x13afbce38c8 <col:63> 'long' lvalue Var 0x13afbce18d8 'sr_num' 'long'
|   | |   |   |   `-ImplicitCastExpr 0x13afbce3928 <col:72> 'long' <IntegralCast>
|   | |   |   |     `-IntegerLiteral 0x13afbce38e8 <col:72> 'int' 0
|   | |   |   `-CompoundStmt 0x13afbce3cf8 <col:75, line:2575:17>
|   | |   |     |-CallExpr 0x13afbce3ad8 <line:2572:21, col:57> 'int'
|   | |   |     | |-ImplicitCastExpr 0x13afbce3ac0 <col:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | |   |     | | `-DeclRefExpr 0x13afbce3980 <col:21> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |   |     | |-ParenExpr 0x13afbce3a58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | |   |     | | `-UnaryOperator 0x13afbce3a40 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   |     | |   `-ArraySubscriptExpr 0x13afbce3a20 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |   |     | |     |-CallExpr 0x13afbce39d8 <col:18, col:29> 'FILE *'
|   | |   |     | |     | `-ImplicitCastExpr 0x13afbce39c0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |   |     | |     |   `-DeclRefExpr 0x13afbce39a0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |   |     | |     `-IntegerLiteral 0x13afbce39f8 <col:31> 'int' 2
|   | |   |     | `-ImplicitCastExpr 0x13afbce3b20 <.//openssl//file_jk/after\test\ssltest_old.c:2572:37> 'const char *' <NoOp>
|   | |   |     |   `-ImplicitCastExpr 0x13afbce3b08 <col:37> 'char *' <ArrayToPointerDecay>
|   | |   |     |     `-StringLiteral 0x13afbce3a78 <col:37> 'char [18]' lvalue "ERROR: got stuck\n"
|   | |   |     |-CallExpr 0x13afbce3c80 <line:2573:21, col:48> 'int'
|   | |   |     | |-ImplicitCastExpr 0x13afbce3c68 <col:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | |   |     | | `-DeclRefExpr 0x13afbce3b38 <col:21> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   | |   |     | |-ParenExpr 0x13afbce3c10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | |   |     | | `-UnaryOperator 0x13afbce3bf8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | |   |     | |   `-ArraySubscriptExpr 0x13afbce3bd8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | |   |     | |     |-CallExpr 0x13afbce3b90 <col:18, col:29> 'FILE *'
|   | |   |     | |     | `-ImplicitCastExpr 0x13afbce3b78 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |   |     | |     |   `-DeclRefExpr 0x13afbce3b58 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | |   |     | |     `-IntegerLiteral 0x13afbce3bb0 <col:31> 'int' 2
|   | |   |     | `-ImplicitCastExpr 0x13afbce3cc8 <.//openssl//file_jk/after\test\ssltest_old.c:2573:37> 'const char *' <NoOp>
|   | |   |     |   `-ImplicitCastExpr 0x13afbce3cb0 <col:37> 'char *' <ArrayToPointerDecay>
|   | |   |     |     `-StringLiteral 0x13afbce3c30 <col:37> 'char [9]' lvalue " ERROR.\n"
|   | |   |     `-GotoStmt 0x13afbce3ce0 <line:2574:21, col:26> 'err' 0x13afbcde160
|   | |   `-BinaryOperator 0x13afbce3da8 <line:2576:13, col:29> 'int' '='
|   | |     |-DeclRefExpr 0x13afbce3d50 <col:13> 'int' lvalue Var 0x13afbcd81a0 'prev_progress' 'int'
|   | |     `-ImplicitCastExpr 0x13afbce3d90 <col:29> 'int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x13afbce3d70 <col:29> 'int' lvalue Var 0x13afbcd8260 'progress' 'int'
|   | `-BinaryOperator 0x13afbcd6090 <line:2579:12, col:63> 'int' '||'
|   |   |-BinaryOperator 0x13afbcd5fd8 <col:12, col:49> 'int' '||'
|   |   | |-BinaryOperator 0x13afbcd5f20 <col:12, col:35> 'int' '||'
|   |   | | |-BinaryOperator 0x13afbcd5e68 <col:12, col:21> 'int' '>'
|   |   | | | |-ImplicitCastExpr 0x13afbcd5e38 <col:12> 'long' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x13afbce3e38 <col:12> 'long' lvalue Var 0x13afbce1698 'cw_num' 'long'
|   |   | | | `-ImplicitCastExpr 0x13afbcd5e50 <col:21> 'long' <IntegralCast>
|   |   | | |   `-IntegerLiteral 0x13afbcd5e10 <col:21> 'int' 0
|   |   | | `-BinaryOperator 0x13afbcd5f00 <col:26, col:35> 'int' '>'
|   |   | |   |-ImplicitCastExpr 0x13afbcd5ed0 <col:26> 'long' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x13afbcd5e88 <col:26> 'long' lvalue Var 0x13afbce1768 'cr_num' 'long'
|   |   | |   `-ImplicitCastExpr 0x13afbcd5ee8 <col:35> 'long' <IntegralCast>
|   |   | |     `-IntegerLiteral 0x13afbcd5ea8 <col:35> 'int' 0
|   |   | `-BinaryOperator 0x13afbcd5fb8 <col:40, col:49> 'int' '>'
|   |   |   |-ImplicitCastExpr 0x13afbcd5f88 <col:40> 'long' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x13afbcd5f40 <col:40> 'long' lvalue Var 0x13afbce1820 'sw_num' 'long'
|   |   |   `-ImplicitCastExpr 0x13afbcd5fa0 <col:49> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x13afbcd5f60 <col:49> 'int' 0
|   |   `-BinaryOperator 0x13afbcd6070 <col:54, col:63> 'int' '>'
|   |     |-ImplicitCastExpr 0x13afbcd6040 <col:54> 'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x13afbcd5ff8 <col:54> 'long' lvalue Var 0x13afbce18d8 'sr_num' 'long'
|   |     `-ImplicitCastExpr 0x13afbcd6058 <col:63> 'long' <IntegralCast>
|   |       `-IntegerLiteral 0x13afbcd6018 <col:63> 'int' 0
|   |-IfStmt 0x13afbcd6280 <line:2584:5, line:2587:5>
|   | |-OpaqueValueExpr 0x13afbcd6268 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbcd6248 <line:2584:39, line:2587:5>
|   |   |-BinaryOperator 0x13afbcd61c0 <line:2585:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x13afbcd6160 <col:9> 'int' lvalue Var 0x13afbce1d00 'ret' 'int'
|   |   | `-IntegerLiteral 0x13afbcd6198 <col:15> 'int' 1
|   |   `-GotoStmt 0x13afbcd6230 <line:2586:9, col:14> 'end' 0x13afbcd61e0
|   |-IfStmt 0x13afbcd65a0 <line:2589:5, line:2593:5>
|   | |-BinaryOperator 0x13afbcd6318 <line:2589:9, col:31> 'int' '<'
|   | | |-CallExpr 0x13afbcd62d0 <col:9, col:27> 'int'
|   | | | `-ImplicitCastExpr 0x13afbcd62b8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | |   `-DeclRefExpr 0x13afbcd6298 <col:9> 'int ()' Function 0x13afbc88bc8 'verify_serverinfo' 'int ()'
|   | | `-IntegerLiteral 0x13afbcd62f0 <col:31> 'int' 0
|   | `-CompoundStmt 0x13afbcd6578 <col:34, line:2593:5>
|   |   |-CallExpr 0x13afbcd6498 <line:2590:9, col:53> 'int'
|   |   | |-ImplicitCastExpr 0x13afbcd6480 <col:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13afbcd6338 <col:9> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x13afbcd6410 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x13afbcd63f8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x13afbcd63d8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x13afbcd6390 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x13afbcd6378 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x13afbcd6358 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x13afbcd63b0 <col:31> 'int' 2
|   |   | `-ImplicitCastExpr 0x13afbcd64e0 <.//openssl//file_jk/after\test\ssltest_old.c:2590:25> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x13afbcd64c8 <col:25> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x13afbcd6430 <col:25> 'char [26]' lvalue "Server info verify error\n"
|   |   |-BinaryOperator 0x13afbcd6540 <line:2591:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x13afbcd64f8 <col:9> 'int' lvalue Var 0x13afbce1d00 'ret' 'int'
|   |   | `-IntegerLiteral 0x13afbcd6518 <col:15> 'int' 1
|   |   `-GotoStmt 0x13afbcd6560 <line:2592:9, col:14> 'err' 0x13afbcde160
|   |-IfStmt 0x13afbcd6698 <line:2594:5, line:2597:5>
|   | |-OpaqueValueExpr 0x13afbcd6680 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbcd6660 <line:2594:40, line:2597:5>
|   |   |-BinaryOperator 0x13afbcd6628 <line:2595:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x13afbcd65e0 <col:9> 'int' lvalue Var 0x13afbce1d00 'ret' 'int'
|   |   | `-IntegerLiteral 0x13afbcd6600 <col:15> 'int' 1
|   |   `-GotoStmt 0x13afbcd6648 <line:2596:9, col:14> 'err' 0x13afbcde160
|   |-IfStmt 0x13afbcd6790 <line:2598:5, line:2601:5>
|   | |-OpaqueValueExpr 0x13afbcd6778 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbcd6758 <line:2598:46, line:2601:5>
|   |   |-BinaryOperator 0x13afbcd6720 <line:2599:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x13afbcd66d8 <col:9> 'int' lvalue Var 0x13afbce1d00 'ret' 'int'
|   |   | `-IntegerLiteral 0x13afbcd66f8 <col:15> 'int' 1
|   |   `-GotoStmt 0x13afbcd6740 <line:2600:9, col:14> 'err' 0x13afbcde160
|   |-IfStmt 0x13afbcd6a40 <line:2603:5, line:2607:5>
|   | |-ImplicitCastExpr 0x13afbcd67c8 <line:2603:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13afbcd67a8 <col:9> 'int' lvalue Var 0x13afbc883c8 'custom_ext_error' 'int'
|   | `-CompoundStmt 0x13afbcd6a18 <col:27, line:2607:5>
|   |   |-CallExpr 0x13afbcd6938 <line:2604:9, col:51> 'int'
|   |   | |-ImplicitCastExpr 0x13afbcd6920 <col:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13afbcd67e0 <col:9> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x13afbcd68b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x13afbcd68a0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x13afbcd6880 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x13afbcd6838 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x13afbcd6820 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x13afbcd6800 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x13afbcd6858 <col:31> 'int' 2
|   |   | `-ImplicitCastExpr 0x13afbcd6980 <.//openssl//file_jk/after\test\ssltest_old.c:2604:25> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x13afbcd6968 <col:25> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x13afbcd68d8 <col:25> 'char [24]' lvalue "Custom extension error\n"
|   |   |-BinaryOperator 0x13afbcd69e0 <line:2605:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x13afbcd6998 <col:9> 'int' lvalue Var 0x13afbce1d00 'ret' 'int'
|   |   | `-IntegerLiteral 0x13afbcd69b8 <col:15> 'int' 1
|   |   `-GotoStmt 0x13afbcd6a00 <line:2606:9, col:14> 'err' 0x13afbcde160
|   |-LabelStmt 0x13afbcd6ac0 <line:2610:2, line:2612:11> 'end'
|   | `-BinaryOperator 0x13afbcd6aa0 <col:5, col:11> 'int' '='
|   |   |-DeclRefExpr 0x13afbcd6a58 <col:5> 'int' lvalue Var 0x13afbce1d00 'ret' 'int'
|   |   `-IntegerLiteral 0x13afbcd6a78 <col:11> 'int' 0
|   |-LabelStmt 0x13afbcd6b00 <line:2614:2, col:5> 'err'
|   | `-NullStmt 0x13afbcd6af8 <col:5>
|   |-IfStmt 0x13afbcd73c0 <line:2624:5, line:2627:42> has_else
|   | |-BinaryOperator 0x13afbcd6e40 <line:2624:9, col:80> 'int' '&&'
|   | | |-BinaryOperator 0x13afbcd6cb0 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | | |-ImplicitCastExpr 0x13afbcd6c80 <.//openssl//file_jk/after\test\ssltest_old.c:2624:9> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x13afbcd6bd8 <col:9> 'const char *' lvalue Var 0x13afbc8b618 'should_negotiate' 'const char *'
|   | | | `-ImplicitCastExpr 0x13afbcd6c98 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |   `-ParenExpr 0x13afbcd6c60 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x13afbcd6c38 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x13afbcd6bf8 <col:26> 'int' 0
|   | | `-BinaryOperator 0x13afbcd6e20 <.//openssl//file_jk/after\test\ssltest_old.c:2624:37, col:80> 'int' '=='
|   | |   |-CallExpr 0x13afbcd6d80 <col:37, col:75> 'int'
|   | |   | |-ImplicitCastExpr 0x13afbcd6d68 <col:37> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x13afbcd6cd0 <col:37> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   | |   | |-ImplicitCastExpr 0x13afbcd6db0 <col:44> 'const char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x13afbcd6cf0 <col:44> 'const char *' lvalue Var 0x13afbc8b618 'should_negotiate' 'const char *'
|   | |   | `-ImplicitCastExpr 0x13afbcd6de0 <col:62> 'const char *' <NoOp>
|   | |   |   `-ImplicitCastExpr 0x13afbcd6dc8 <col:62> 'char *' <ArrayToPointerDecay>
|   | |   |     `-StringLiteral 0x13afbcd6d10 <col:62> 'char [12]' lvalue "fail-client"
|   | |   `-IntegerLiteral 0x13afbcd6df8 <col:80> 'int' 0
|   | |-BinaryOperator 0x13afbcd6fa0 <line:2625:9, col:42> 'int' '='
|   | | |-DeclRefExpr 0x13afbcd6e60 <col:9> 'int' lvalue Var 0x13afbce1d00 'ret' 'int'
|   | | `-ConditionalOperator 0x13afbcd6f70 <col:15, col:42> 'int'
|   | |   |-ParenExpr 0x13afbcd6f00 <col:15, col:34> 'int'
|   | |   | `-BinaryOperator 0x13afbcd6ee0 <col:16, col:33> 'int' '!='
|   | |   |   |-ImplicitCastExpr 0x13afbcd6ec8 <col:16> 'int' <LValueToRValue>
|   | |   |   | `-DeclRefExpr 0x13afbcd6e80 <col:16> 'int' lvalue Var 0x13afbce1dc0 'err_in_client' 'int'
|   | |   |   `-IntegerLiteral 0x13afbcd6ea0 <col:33> 'int' 0
|   | |   |-IntegerLiteral 0x13afbcd6f20 <col:38> 'int' 0
|   | |   `-IntegerLiteral 0x13afbcd6f48 <col:42> 'int' 1
|   | `-IfStmt 0x13afbcd73a8 <line:2626:10, line:2627:42>
|   |   |-BinaryOperator 0x13afbcd7228 <line:2626:14, col:85> 'int' '&&'
|   |   | |-BinaryOperator 0x13afbcd7098 <col:14, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x13afbcd7068 <.//openssl//file_jk/after\test\ssltest_old.c:2626:14> 'const char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13afbcd6fc0 <col:14> 'const char *' lvalue Var 0x13afbc8b618 'should_negotiate' 'const char *'
|   |   | | `-ImplicitCastExpr 0x13afbcd7080 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   |   | |   `-ParenExpr 0x13afbcd7048 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x13afbcd7020 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x13afbcd6fe0 <col:26> 'int' 0
|   |   | `-BinaryOperator 0x13afbcd7208 <.//openssl//file_jk/after\test\ssltest_old.c:2626:42, col:85> 'int' '=='
|   |   |   |-CallExpr 0x13afbcd7168 <col:42, col:80> 'int'
|   |   |   | |-ImplicitCastExpr 0x13afbcd7150 <col:42> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x13afbcd70b8 <col:42> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |   | |-ImplicitCastExpr 0x13afbcd7198 <col:49> 'const char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x13afbcd70d8 <col:49> 'const char *' lvalue Var 0x13afbc8b618 'should_negotiate' 'const char *'
|   |   |   | `-ImplicitCastExpr 0x13afbcd71c8 <col:67> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x13afbcd71b0 <col:67> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x13afbcd70f8 <col:67> 'char [12]' lvalue "fail-server"
|   |   |   `-IntegerLiteral 0x13afbcd71e0 <col:85> 'int' 0
|   |   `-BinaryOperator 0x13afbcd7388 <line:2627:9, col:42> 'int' '='
|   |     |-DeclRefExpr 0x13afbcd7248 <col:9> 'int' lvalue Var 0x13afbce1d00 'ret' 'int'
|   |     `-ConditionalOperator 0x13afbcd7358 <col:15, col:42> 'int'
|   |       |-ParenExpr 0x13afbcd72e8 <col:15, col:34> 'int'
|   |       | `-BinaryOperator 0x13afbcd72c8 <col:16, col:33> 'int' '!='
|   |       |   |-ImplicitCastExpr 0x13afbcd72b0 <col:16> 'int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x13afbcd7268 <col:16> 'int' lvalue Var 0x13afbcdde80 'err_in_server' 'int'
|   |       |   `-IntegerLiteral 0x13afbcd7288 <col:33> 'int' 0
|   |       |-IntegerLiteral 0x13afbcd7308 <col:38> 'int' 0
|   |       `-IntegerLiteral 0x13afbcd7330 <col:42> 'int' 1
|   `-ReturnStmt 0x13afbcd7420 <line:2629:5, col:12>
|     `-ImplicitCastExpr 0x13afbcd7408 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x13afbcd73e8 <col:12> 'int' lvalue Var 0x13afbce1d00 'ret' 'int'
|-FunctionDecl 0x13afbcd7698 <line:2637:1, line:2931:1> line:2637:5 invalid doit 'int (int *, int *, long)'
| |-ParmVarDecl 0x13afbcd74f0 <col:10, col:15> col:15 invalid s_ssl 'int *'
| |-ParmVarDecl 0x13afbcd7570 <col:22, col:27> col:27 invalid c_ssl 'int *'
| |-ParmVarDecl 0x13afbcd75f0 <col:34, col:39> col:39 used count 'long'
| `-CompoundStmt 0x13afbcea6c8 <line:2638:1, line:2931:1>
|   |-DeclStmt 0x13afbcd79c0 <line:2639:5, col:36>
|   | |-VarDecl 0x13afbcd7780 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\test\ssltest_old.c:2639:11 used cbuf 'char *' cinit
|   | | `-ImplicitCastExpr 0x13afbcd7870 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x13afbcd7850 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x13afbcd7828 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x13afbcd77e8 <col:26> 'int' 0
|   | `-VarDecl 0x13afbcd78a0 <.//openssl//file_jk/after\test\ssltest_old.c:2639:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\test\ssltest_old.c:2639:25 used sbuf 'char *' cinit
|   |   `-ImplicitCastExpr 0x13afbcd7990 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x13afbcd7970 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x13afbcd7948 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x13afbcd7908 <col:26> 'int' 0
|   |-DeclStmt 0x13afbcd7a58 <.//openssl//file_jk/after\test\ssltest_old.c:2640:5, col:16>
|   | `-VarDecl 0x13afbcd79f0 <col:5, col:10> col:10 used bufsiz 'long'
|   |-DeclStmt 0x13afbcd7c10 <line:2641:5, col:40>
|   | |-VarDecl 0x13afbcd7a88 <col:5, col:19> col:10 used cw_num 'long' cinit
|   | | `-ImplicitCastExpr 0x13afbcd7b28 <col:19> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbcd7af0 <col:19> 'long' lvalue ParmVar 0x13afbcd75f0 'count' 'long'
|   | `-VarDecl 0x13afbcd7b58 <col:5, col:35> col:26 used cr_num 'long' cinit
|   |   `-ImplicitCastExpr 0x13afbcd7be0 <col:35> 'long' <LValueToRValue>
|   |     `-DeclRefExpr 0x13afbcd7bc0 <col:35> 'long' lvalue ParmVar 0x13afbcd75f0 'count' 'long'
|   |-DeclStmt 0x13afbcd7db0 <line:2642:5, col:40>
|   | |-VarDecl 0x13afbcd7c40 <col:5, col:19> col:10 used sw_num 'long' cinit
|   | | `-ImplicitCastExpr 0x13afbcd7cc8 <col:19> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbcd7ca8 <col:19> 'long' lvalue ParmVar 0x13afbcd75f0 'count' 'long'
|   | `-VarDecl 0x13afbcd7cf8 <col:5, col:35> col:26 used sr_num 'long' cinit
|   |   `-ImplicitCastExpr 0x13afbcd7d80 <col:35> 'long' <LValueToRValue>
|   |     `-DeclRefExpr 0x13afbcd7d60 <col:35> 'long' lvalue ParmVar 0x13afbcd75f0 'count' 'long'
|   |-DeclStmt 0x13afbcd3e90 <line:2643:5, col:16>
|   | `-VarDecl 0x13afbcd3e00 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x13afbcd3e68 <col:15> 'int' 1
|   |-DeclStmt 0x13afbcd42f0 <line:2648:5, col:27>
|   | |-VarDecl 0x13afbcd40e0 <col:5, col:9> col:9 used c_r 'int'
|   | |-VarDecl 0x13afbcd4160 <col:5, col:14> col:14 used c_w 'int'
|   | |-VarDecl 0x13afbcd41e0 <col:5, col:19> col:19 used s_r 'int'
|   | `-VarDecl 0x13afbcd4260 <col:5, col:24> col:24 used s_w 'int'
|   |-DeclStmt 0x13afbcd4420 <line:2649:5, col:13>
|   | |-VarDecl 0x13afbcd4320 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x13afbcd43a0 <col:5, col:12> col:12 used j 'int'
|   |-DeclStmt 0x13afbcd44e0 <line:2650:5, col:17>
|   | `-VarDecl 0x13afbcd4450 <col:5, col:16> col:9 used done 'int' cinit
|   |   `-IntegerLiteral 0x13afbcd44b8 <col:16> 'int' 0
|   |-DeclStmt 0x13afbcd4610 <line:2651:5, col:25>
|   | |-VarDecl 0x13afbcd4510 <col:5, col:9> col:9 used c_write 'int'
|   | `-VarDecl 0x13afbcd4590 <col:5, col:18> col:18 used s_write 'int'
|   |-DeclStmt 0x13afbcd4790 <line:2652:5, col:37>
|   | |-VarDecl 0x13afbcd4640 <col:5, col:21> col:9 used do_server 'int' cinit
|   | | `-IntegerLiteral 0x13afbcd46a8 <col:21> 'int' 0
|   | `-VarDecl 0x13afbcd46e8 <col:5, col:36> col:24 used do_client 'int' cinit
|   |   `-IntegerLiteral 0x13afbcd4750 <col:36> 'int' 0
|   |-DeclStmt 0x13afbcd4898 <line:2653:5, col:28>
|   | `-VarDecl 0x13afbcd47c0 <col:5, col:24> col:9 used max_frag 'int' cinit
|   |   `-BinaryOperator 0x13afbcd4878 <col:20, col:24> 'int' '*'
|   |     |-IntegerLiteral 0x13afbcd4828 <col:20> 'int' 5
|   |     `-IntegerLiteral 0x13afbcd4850 <col:24> 'int' 1024
|   |-DeclStmt 0x13afbcd4958 <line:2654:5, col:26>
|   | `-VarDecl 0x13afbcd48c8 <col:5, col:25> col:9 used err_in_client 'int' cinit
|   |   `-IntegerLiteral 0x13afbcd4930 <col:25> 'int' 0
|   |-DeclStmt 0x13afbcd4a18 <line:2655:5, col:26>
|   | `-VarDecl 0x13afbcd4988 <col:5, col:25> col:9 used err_in_server 'int' cinit
|   |   `-IntegerLiteral 0x13afbcd49f0 <col:25> 'int' 0
|   |-BinaryOperator 0x13afbcd4c38 <line:2657:5, col:46> 'long' '='
|   | |-DeclRefExpr 0x13afbcd4a30 <col:5> 'long' lvalue Var 0x13afbcd79f0 'bufsiz' 'long'
|   | `-ConditionalOperator 0x13afbcd4c08 <col:14, col:46> 'long'
|   |   |-BinaryOperator 0x13afbcd4b28 <col:14, col:27> 'int' '>'
|   |   | |-ImplicitCastExpr 0x13afbcd4af8 <col:14> 'long' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x13afbcd4a68 <col:14> 'long' lvalue ParmVar 0x13afbcd75f0 'count' 'long'
|   |   | `-ImplicitCastExpr 0x13afbcd4b10 <col:22, col:27> 'long' <IntegralCast>
|   |   |   `-BinaryOperator 0x13afbcd4ad8 <col:22, col:27> 'int' '*'
|   |   |     |-IntegerLiteral 0x13afbcd4a88 <col:22> 'int' 40
|   |   |     `-IntegerLiteral 0x13afbcd4ab0 <col:27> 'int' 1024
|   |   |-ImplicitCastExpr 0x13afbcd4bf0 <col:34, col:39> 'long' <IntegralCast>
|   |   | `-BinaryOperator 0x13afbcd4b98 <col:34, col:39> 'int' '*'
|   |   |   |-IntegerLiteral 0x13afbcd4b48 <col:34> 'int' 40
|   |   |   `-IntegerLiteral 0x13afbcd4b70 <col:39> 'int' 1024
|   |   `-ImplicitCastExpr 0x13afbcd4bd8 <col:46> 'long' <LValueToRValue>
|   |     `-DeclRefExpr 0x13afbcd4bb8 <col:46> 'long' lvalue ParmVar 0x13afbcd75f0 'count' 'long'
|   |-IfStmt 0x13afbcd4ea8 <line:2659:5, line:2660:14>
|   | |-BinaryOperator 0x13afbcd4e20 <line:2659:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ParenExpr 0x13afbcd4d60 <.//openssl//file_jk/after\test\ssltest_old.c:2659:9, col:39> 'char *'
|   | | | `-BinaryOperator 0x13afbcd4d40 <col:10, col:38> 'char *' '='
|   | | |   |-DeclRefExpr 0x13afbcd4c58 <col:10> 'char *' lvalue Var 0x13afbcd7780 'cbuf' 'char *'
|   | | |   `-ImplicitCastExpr 0x13afbcd4d28 <col:17, col:38> 'char *' <IntegralToPointer>
|   | | |     `-CallExpr 0x13afbcd4ce8 <col:17, col:38> 'int'
|   | | |       |-ImplicitCastExpr 0x13afbcd4cd0 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x13afbcd4c90 <col:17> 'int ()' Function 0x13afbcccfc8 'OPENSSL_zalloc' 'int ()'
|   | | |       `-ImplicitCastExpr 0x13afbcd4d10 <col:32> 'long' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x13afbcd4cb0 <col:32> 'long' lvalue Var 0x13afbcd79f0 'bufsiz' 'long'
|   | | `-ImplicitCastExpr 0x13afbcd4e08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x13afbcd4de8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x13afbcd4dc0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x13afbcd4d80 <col:26> 'int' 0
|   | `-GotoStmt 0x13afbcd4e90 <.//openssl//file_jk/after\test\ssltest_old.c:2660:9, col:14> 'err' 0x13afbcd4e40
|   |-IfStmt 0x13afbcd50c0 <line:2661:5, line:2662:14>
|   | |-BinaryOperator 0x13afbcd5088 <line:2661:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ParenExpr 0x13afbcd4fc8 <.//openssl//file_jk/after\test\ssltest_old.c:2661:9, col:39> 'char *'
|   | | | `-BinaryOperator 0x13afbcd4fa8 <col:10, col:38> 'char *' '='
|   | | |   |-DeclRefExpr 0x13afbcd4ec0 <col:10> 'char *' lvalue Var 0x13afbcd78a0 'sbuf' 'char *'
|   | | |   `-ImplicitCastExpr 0x13afbcd4f90 <col:17, col:38> 'char *' <IntegralToPointer>
|   | | |     `-CallExpr 0x13afbcd4f50 <col:17, col:38> 'int'
|   | | |       |-ImplicitCastExpr 0x13afbcd4f38 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x13afbcd4ef8 <col:17> 'int ()' Function 0x13afbcccfc8 'OPENSSL_zalloc' 'int ()'
|   | | |       `-ImplicitCastExpr 0x13afbcd4f78 <col:32> 'long' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x13afbcd4f18 <col:32> 'long' lvalue Var 0x13afbcd79f0 'bufsiz' 'long'
|   | | `-ImplicitCastExpr 0x13afbcd5070 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x13afbcd5050 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x13afbcd5028 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x13afbcd4fe8 <col:26> 'int' 0
|   | `-GotoStmt 0x13afbcd50a8 <.//openssl//file_jk/after\test\ssltest_old.c:2662:9, col:14> 'err' 0x13afbcd4e40
|   |-IfStmt 0x13afbcd54b0 <line:2666:5, line:2669:5>
|   | |-OpaqueValueExpr 0x13afbcd5498 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbcd5480 <line:2666:47, line:2669:5>
|   |   `-GotoStmt 0x13afbcd5468 <line:2668:9, col:14> 'err' 0x13afbcd4e40
|   |-IfStmt 0x13afbcd57b0 <line:2673:5, line:2676:5>
|   | |-OpaqueValueExpr 0x13afbcd5798 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbcd5780 <line:2673:45, line:2676:5>
|   |   `-GotoStmt 0x13afbcd5768 <line:2675:9, col:14> 'err' 0x13afbcd4e40
|   |-IfStmt 0x13afbcd5bd8 <line:2687:5, line:2692:5>
|   | |-OpaqueValueExpr 0x13afbcd5bc0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbcd5ba8 <line:2687:30, line:2692:5>
|   |   `-GotoStmt 0x13afbcd5b90 <line:2691:9, col:14> 'err' 0x13afbcd4e40
|   |-IfStmt 0x13afbcd5ce0 <line:2693:5, line:2697:5>
|   | |-OpaqueValueExpr 0x13afbcd5cc8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbcd5cb0 <line:2693:30, line:2697:5>
|   |   `-GotoStmt 0x13afbcd5c98 <line:2696:9, col:14> 'err' 0x13afbcd4e40
|   |-BinaryOperator 0x13afbce3f88 <line:2709:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x13afbce3f28 <col:5> 'int' lvalue Var 0x13afbcd40e0 'c_r' 'int'
|   | `-IntegerLiteral 0x13afbce3f60 <col:11> 'int' 0
|   |-BinaryOperator 0x13afbce4008 <line:2710:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x13afbce3fa8 <col:5> 'int' lvalue Var 0x13afbcd41e0 's_r' 'int'
|   | `-IntegerLiteral 0x13afbce3fe0 <col:11> 'int' 1
|   |-BinaryOperator 0x13afbce4088 <line:2711:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x13afbce4028 <col:5> 'int' lvalue Var 0x13afbcd4160 'c_w' 'int'
|   | `-IntegerLiteral 0x13afbce4060 <col:11> 'int' 1
|   |-BinaryOperator 0x13afbce4108 <line:2712:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x13afbce40a8 <col:5> 'int' lvalue Var 0x13afbcd4260 's_w' 'int'
|   | `-IntegerLiteral 0x13afbce40e0 <col:11> 'int' 0
|   |-BinaryOperator 0x13afbce4228 <line:2713:5, col:28> 'int' ','
|   | |-BinaryOperator 0x13afbce4188 <col:5, col:15> 'int' '='
|   | | |-DeclRefExpr 0x13afbce4128 <col:5> 'int' lvalue Var 0x13afbcd4510 'c_write' 'int'
|   | | `-IntegerLiteral 0x13afbce4160 <col:15> 'int' 1
|   | `-BinaryOperator 0x13afbce4208 <col:18, col:28> 'int' '='
|   |   |-DeclRefExpr 0x13afbce41a8 <col:18> 'int' lvalue Var 0x13afbcd4590 's_write' 'int'
|   |   `-IntegerLiteral 0x13afbce41e0 <col:28> 'int' 0
|   |-ForStmt 0x13afbce7470 <line:2716:5, line:2896:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x13afbce7410 <line:2716:14, line:2896:5>
|   |   |-BinaryOperator 0x13afbce42a8 <line:2717:9, col:21> 'int' '='
|   |   | |-DeclRefExpr 0x13afbce4248 <col:9> 'int' lvalue Var 0x13afbcd4640 'do_server' 'int'
|   |   | `-IntegerLiteral 0x13afbce4280 <col:21> 'int' 0
|   |   |-BinaryOperator 0x13afbce4328 <line:2718:9, col:21> 'int' '='
|   |   | |-DeclRefExpr 0x13afbce42c8 <col:9> 'int' lvalue Var 0x13afbcd46e8 'do_client' 'int'
|   |   | `-IntegerLiteral 0x13afbce4300 <col:21> 'int' 0
|   |   |-IfStmt 0x13afbce4600 <line:2721:9, line:2722:25>
|   |   | |-BinaryOperator 0x13afbce4578 <line:2721:13, col:27> 'int' '||'
|   |   | | |-ParenExpr 0x13afbce4520 <col:13, col:22> 'int'
|   |   | | | `-BinaryOperator 0x13afbce4500 <col:14, col:19> 'int' '&&'
|   |   | | |   |-ImplicitCastExpr 0x13afbce44d0 <col:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x13afbce4490 <col:14> 'int' lvalue Var 0x13afbcd4320 'i' 'int'
|   |   | | |   `-ImplicitCastExpr 0x13afbce44e8 <col:19> 'int' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x13afbce44b0 <col:19> 'int' lvalue Var 0x13afbcd41e0 's_r' 'int'
|   |   | | `-ImplicitCastExpr 0x13afbce4560 <col:27> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13afbce4540 <col:27> 'int' lvalue Var 0x13afbcd4260 's_w' 'int'
|   |   | `-BinaryOperator 0x13afbce45e0 <line:2722:13, col:25> 'int' '='
|   |   |   |-DeclRefExpr 0x13afbce4598 <col:13> 'int' lvalue Var 0x13afbcd4640 'do_server' 'int'
|   |   |   `-IntegerLiteral 0x13afbce45b8 <col:25> 'int' 1
|   |   |-IfStmt 0x13afbce47c8 <line:2725:9, line:2726:25>
|   |   | |-BinaryOperator 0x13afbce4740 <line:2725:13, col:27> 'int' '||'
|   |   | | |-ParenExpr 0x13afbce46e8 <col:13, col:22> 'int'
|   |   | | | `-BinaryOperator 0x13afbce46c8 <col:14, col:19> 'int' '&&'
|   |   | | |   |-ImplicitCastExpr 0x13afbce4698 <col:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x13afbce4658 <col:14> 'int' lvalue Var 0x13afbcd4320 'i' 'int'
|   |   | | |   `-ImplicitCastExpr 0x13afbce46b0 <col:19> 'int' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x13afbce4678 <col:19> 'int' lvalue Var 0x13afbcd40e0 'c_r' 'int'
|   |   | | `-ImplicitCastExpr 0x13afbce4728 <col:27> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13afbce4708 <col:27> 'int' lvalue Var 0x13afbcd4160 'c_w' 'int'
|   |   | `-BinaryOperator 0x13afbce47a8 <line:2726:13, col:25> 'int' '='
|   |   |   |-DeclRefExpr 0x13afbce4760 <col:13> 'int' lvalue Var 0x13afbcd46e8 'do_client' 'int'
|   |   |   `-IntegerLiteral 0x13afbce4780 <col:25> 'int' 1
|   |   |-IfStmt 0x13afbce4920 <line:2728:9, line:2737:9>
|   |   | |-BinaryOperator 0x13afbce4850 <line:2728:13, col:26> 'int' '&&'
|   |   | | |-ImplicitCastExpr 0x13afbce4820 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13afbce47e0 <col:13> 'int' lvalue Var 0x13afbcd4640 'do_server' 'int'
|   |   | | `-ImplicitCastExpr 0x13afbce4838 <col:26> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13afbce4800 <col:26> 'int' lvalue Var 0x13afbca4a70 'debug' 'int'
|   |   | `-CompoundStmt 0x13afbce4910 <col:33, line:2737:9>
|   |   |-IfStmt 0x13afbce4a78 <line:2739:9, line:2748:9>
|   |   | |-BinaryOperator 0x13afbce49a8 <line:2739:13, col:26> 'int' '&&'
|   |   | | |-ImplicitCastExpr 0x13afbce4978 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13afbce4938 <col:13> 'int' lvalue Var 0x13afbcd46e8 'do_client' 'int'
|   |   | | `-ImplicitCastExpr 0x13afbce4990 <col:26> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x13afbce4958 <col:26> 'int' lvalue Var 0x13afbca4a70 'debug' 'int'
|   |   | `-CompoundStmt 0x13afbce4a68 <col:33, line:2748:9>
|   |   |-IfStmt 0x13afbce4d60 <line:2750:9, line:2754:9>
|   |   | |-BinaryOperator 0x13afbce4b30 <line:2750:13, col:28> 'int' '&&'
|   |   | | |-UnaryOperator 0x13afbce4ac8 <col:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x13afbce4ab0 <col:14> 'int' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x13afbce4a90 <col:14> 'int' lvalue Var 0x13afbcd46e8 'do_client' 'int'
|   |   | | `-UnaryOperator 0x13afbce4b18 <col:27, col:28> 'int' prefix '!' cannot overflow
|   |   | |   `-ImplicitCastExpr 0x13afbce4b00 <col:28> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x13afbce4ae0 <col:28> 'int' lvalue Var 0x13afbcd4640 'do_server' 'int'
|   |   | `-CompoundStmt 0x13afbce4d40 <col:39, line:2754:9>
|   |   |   |-CallExpr 0x13afbce4ca8 <line:2751:13, col:49> 'int'
|   |   |   | |-ImplicitCastExpr 0x13afbce4c90 <col:13> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x13afbce4b50 <col:13> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   |   |   | |-ParenExpr 0x13afbce4c28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:150:16, col:33> 'FILE *'
|   |   |   | | `-UnaryOperator 0x13afbce4c10 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   |   | |   `-ArraySubscriptExpr 0x13afbce4bf0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   |   | |     |-CallExpr 0x13afbce4ba8 <col:18, col:29> 'FILE *'
|   |   |   | |     | `-ImplicitCastExpr 0x13afbce4b90 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |   | |     |   `-DeclRefExpr 0x13afbce4b70 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   |   | |     `-IntegerLiteral 0x13afbce4bc8 <col:31> 'int' 1
|   |   |   | `-ImplicitCastExpr 0x13afbce4cf0 <.//openssl//file_jk/after\test\ssltest_old.c:2751:29> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x13afbce4cd8 <col:29> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x13afbce4c48 <col:29> 'char [18]' lvalue "ERROR IN STARTUP\n"
|   |   |   `-GotoStmt 0x13afbce4d28 <line:2753:13, col:18> 'err' 0x13afbcd4e40
|   |   |-IfStmt 0x13afbce9078 <line:2755:9, line:2820:9>
|   |   | |-BinaryOperator 0x13afbce4e80 <line:2755:13, col:41> 'int' '&&'
|   |   | | |-ImplicitCastExpr 0x13afbce4e68 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13afbce4d78 <col:13> 'int' lvalue Var 0x13afbcd46e8 'do_client' 'int'
|   |   | | `-UnaryOperator 0x13afbce4e50 <col:26, col:41> 'int' prefix '!' cannot overflow
|   |   | |   `-ParenExpr 0x13afbce4e30 <col:27, col:41> 'int'
|   |   | |     `-BinaryOperator 0x13afbce4e10 <col:28, line:2634:17> 'int' '&'
|   |   | |       |-ImplicitCastExpr 0x13afbce4df8 <line:2755:28> 'int' <LValueToRValue>
|   |   | |       | `-DeclRefExpr 0x13afbce4d98 <col:28> 'int' lvalue Var 0x13afbcd4450 'done' 'int'
|   |   | |       `-IntegerLiteral 0x13afbce4dd0 <line:2634:17> 'int' 1
|   |   | `-CompoundStmt 0x13afbce9060 <line:2755:44, line:2820:9>
|   |   |   `-IfStmt 0x13afbce9038 <line:2756:13, line:2819:13> has_else
|   |   |     |-ImplicitCastExpr 0x13afbce4ec0 <line:2756:17> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x13afbce4ea0 <col:17> 'int' lvalue Var 0x13afbcd4510 'c_write' 'int'
|   |   |     |-CompoundStmt 0x13afbce8080 <col:26, line:2786:13>
|   |   |     | |-BinaryOperator 0x13afbce50f8 <line:2757:17, col:60> 'int' '='
|   |   |     | | |-DeclRefExpr 0x13afbce4ed8 <col:17> 'int' lvalue Var 0x13afbcd43a0 'j' 'int'
|   |   |     | | `-ConditionalOperator 0x13afbce50c8 <col:21, col:60> 'int'
|   |   |     | |   |-ParenExpr 0x13afbce4fb8 <col:21, col:37> 'int'
|   |   |     | |   | `-BinaryOperator 0x13afbce4f98 <col:22, col:31> 'int' '>'
|   |   |     | |   |   |-ImplicitCastExpr 0x13afbce4f68 <col:22> 'long' <LValueToRValue>
|   |   |     | |   |   | `-DeclRefExpr 0x13afbce4f10 <col:22> 'long' lvalue Var 0x13afbcd7a88 'cw_num' 'long'
|   |   |     | |   |   `-ImplicitCastExpr 0x13afbce4f80 <col:31> 'long' <LValueToRValue>
|   |   |     | |   |     `-DeclRefExpr 0x13afbce4f48 <col:31> 'long' lvalue Var 0x13afbcd79f0 'bufsiz' 'long'
|   |   |     | |   |-CStyleCastExpr 0x13afbce5028 <col:41, col:46> 'int' <IntegralCast>
|   |   |     | |   | `-ImplicitCastExpr 0x13afbce5010 <col:46> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |     | |   |   `-DeclRefExpr 0x13afbce4fd8 <col:46> 'long' lvalue Var 0x13afbcd79f0 'bufsiz' 'long'
|   |   |     | |   `-CStyleCastExpr 0x13afbce50a0 <col:55, col:60> 'int' <IntegralCast>
|   |   |     | |     `-ImplicitCastExpr 0x13afbce5088 <col:60> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |     | |       `-DeclRefExpr 0x13afbce5050 <col:60> 'long' lvalue Var 0x13afbcd7a88 'cw_num' 'long'
|   |   |     | `-IfStmt 0x13afbce8058 <line:2759:17, line:2785:17> has_else
|   |   |     |   |-BinaryOperator 0x13afbce51f8 <line:2759:21, col:25> 'int' '<'
|   |   |     |   | |-ImplicitCastExpr 0x13afbce51e0 <col:21> 'int' <LValueToRValue>
|   |   |     |   | | `-DeclRefExpr 0x13afbce5198 <col:21> 'int' lvalue Var 0x13afbcd4320 'i' 'int'
|   |   |     |   | `-IntegerLiteral 0x13afbce51b8 <col:25> 'int' 0
|   |   |     |   |-CompoundStmt 0x13afbce5948 <col:28, line:2773:17>
|   |   |     |   | |-BinaryOperator 0x13afbce5260 <line:2760:21, col:27> 'int' '='
|   |   |     |   | | |-DeclRefExpr 0x13afbce5218 <col:21> 'int' lvalue Var 0x13afbcd40e0 'c_r' 'int'
|   |   |     |   | | `-IntegerLiteral 0x13afbce5238 <col:27> 'int' 0
|   |   |     |   | |-BinaryOperator 0x13afbce52c8 <line:2761:21, col:27> 'int' '='
|   |   |     |   | | |-DeclRefExpr 0x13afbce5280 <col:21> 'int' lvalue Var 0x13afbcd4160 'c_w' 'int'
|   |   |     |   | | `-IntegerLiteral 0x13afbce52a0 <col:27> 'int' 0
|   |   |     |   | `-IfStmt 0x13afbce5920 <line:2762:21, line:2772:21> has_else
|   |   |     |   |   |-OpaqueValueExpr 0x13afbce5908 <<invalid sloc>> '_Bool'
|   |   |     |   |   |-CompoundStmt 0x13afbce5658 <line:2762:50, line:2767:21>
|   |   |     |   |   | |-IfStmt 0x13afbce5498 <line:2763:25, line:2764:35>
|   |   |     |   |   | | |-OpaqueValueExpr 0x13afbce5480 <<invalid sloc>> '_Bool'
|   |   |     |   |   | | `-BinaryOperator 0x13afbce5460 <col:29, col:35> 'int' '='
|   |   |     |   |   | |   |-DeclRefExpr 0x13afbce5418 <col:29> 'int' lvalue Var 0x13afbcd40e0 'c_r' 'int'
|   |   |     |   |   | |   `-IntegerLiteral 0x13afbce5438 <col:35> 'int' 1
|   |   |     |   |   | `-IfStmt 0x13afbce5640 <line:2765:25, line:2766:35>
|   |   |     |   |   |   |-OpaqueValueExpr 0x13afbce5628 <<invalid sloc>> '_Bool'
|   |   |     |   |   |   `-BinaryOperator 0x13afbce5608 <col:29, col:35> 'int' '='
|   |   |     |   |   |     |-DeclRefExpr 0x13afbce55c0 <col:29> 'int' lvalue Var 0x13afbcd4160 'c_w' 'int'
|   |   |     |   |   |     `-IntegerLiteral 0x13afbce55e0 <col:35> 'int' 1
|   |   |     |   |   `-CompoundStmt 0x13afbce58e0 <line:2767:28, line:2772:21>
|   |   |     |   |     |-CallExpr 0x13afbce57c8 <line:2768:25, col:60> 'int'
|   |   |     |   |     | |-ImplicitCastExpr 0x13afbce57b0 <col:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   |     |   |     | | `-DeclRefExpr 0x13afbce5678 <col:25> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   |   |     |   |     | |-ParenExpr 0x13afbce5750 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   |     |   |     | | `-UnaryOperator 0x13afbce5738 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   |     |   |     | |   `-ArraySubscriptExpr 0x13afbce5718 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   |     |   |     | |     |-CallExpr 0x13afbce56d0 <col:18, col:29> 'FILE *'
|   |   |     |   |     | |     | `-ImplicitCastExpr 0x13afbce56b8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |     |   |     | |     |   `-DeclRefExpr 0x13afbce5698 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   |     |   |     | |     `-IntegerLiteral 0x13afbce56f0 <col:31> 'int' 2
|   |   |     |   |     | `-ImplicitCastExpr 0x13afbce5810 <.//openssl//file_jk/after\test\ssltest_old.c:2768:41> 'const char *' <NoOp>
|   |   |     |   |     |   `-ImplicitCastExpr 0x13afbce57f8 <col:41> 'char *' <ArrayToPointerDecay>
|   |   |     |   |     |     `-StringLiteral 0x13afbce5770 <col:41> 'char [17]' lvalue "ERROR in CLIENT\n"
|   |   |     |   |     |-BinaryOperator 0x13afbce5888 <line:2769:25, col:41> 'int' '='
|   |   |     |   |     | |-DeclRefExpr 0x13afbce5828 <col:25> 'int' lvalue Var 0x13afbcd48c8 'err_in_client' 'int'
|   |   |     |   |     | `-IntegerLiteral 0x13afbce5860 <col:41> 'int' 1
|   |   |     |   |     `-GotoStmt 0x13afbce58c8 <line:2771:25, col:30> 'err' 0x13afbcd4e40
|   |   |     |   `-IfStmt 0x13afbce8030 <line:2773:24, line:2785:17> has_else
|   |   |     |     |-BinaryOperator 0x13afbce59d0 <line:2773:28, col:33> 'int' '=='
|   |   |     |     | |-ImplicitCastExpr 0x13afbce59b8 <col:28> 'int' <LValueToRValue>
|   |   |     |     | | `-DeclRefExpr 0x13afbce5970 <col:28> 'int' lvalue Var 0x13afbcd4320 'i' 'int'
|   |   |     |     | `-IntegerLiteral 0x13afbce5990 <col:33> 'int' 0
|   |   |     |     |-CompoundStmt 0x13afbce5bc8 <col:36, line:2776:17>
|   |   |     |     | |-CallExpr 0x13afbce5b50 <line:2774:21, col:66> 'int'
|   |   |     |     | | |-ImplicitCastExpr 0x13afbce5b38 <col:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   |     |     | | | `-DeclRefExpr 0x13afbce59f0 <col:21> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   |   |     |     | | |-ParenExpr 0x13afbce5ac8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   |     |     | | | `-UnaryOperator 0x13afbce5ab0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   |     |     | | |   `-ArraySubscriptExpr 0x13afbce5a90 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   |     |     | | |     |-CallExpr 0x13afbce5a48 <col:18, col:29> 'FILE *'
|   |   |     |     | | |     | `-ImplicitCastExpr 0x13afbce5a30 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |     |     | | |     |   `-DeclRefExpr 0x13afbce5a10 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   |     |     | | |     `-IntegerLiteral 0x13afbce5a68 <col:31> 'int' 2
|   |   |     |     | | `-ImplicitCastExpr 0x13afbce5b98 <.//openssl//file_jk/after\test\ssltest_old.c:2774:37> 'const char *' <NoOp>
|   |   |     |     | |   `-ImplicitCastExpr 0x13afbce5b80 <col:37> 'char *' <ArrayToPointerDecay>
|   |   |     |     | |     `-StringLiteral 0x13afbce5ae8 <col:37> 'char [27]' lvalue "SSL CLIENT STARTUP FAILED\n"
|   |   |     |     | `-GotoStmt 0x13afbce5bb0 <line:2775:21, col:26> 'err' 0x13afbcd4e40
|   |   |     |     `-CompoundStmt 0x13afbce8000 <line:2776:24, line:2785:17>
|   |   |     |       |-IfStmt 0x13afbce5d30 <line:2777:21, line:2778:54>
|   |   |     |       | |-ImplicitCastExpr 0x13afbce5c08 <line:2777:25> 'int' <LValueToRValue>
|   |   |     |       | | `-DeclRefExpr 0x13afbce5be8 <col:25> 'int' lvalue Var 0x13afbca4a70 'debug' 'int'
|   |   |     |       | `-CallExpr 0x13afbce5cb8 <line:2778:25, col:54> 'int'
|   |   |     |       |   |-ImplicitCastExpr 0x13afbce5ca0 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |     |       |   | `-DeclRefExpr 0x13afbce5c20 <col:25> 'int (const char *, ...)' Function 0x13afbbc9990 'printf' 'int (const char *, ...)'
|   |   |     |       |   |-ImplicitCastExpr 0x13afbce5d00 <col:32> 'const char *' <NoOp>
|   |   |     |       |   | `-ImplicitCastExpr 0x13afbce5ce8 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |     |       |   |   `-StringLiteral 0x13afbce5c40 <col:32> 'char [17]' lvalue "client wrote %d\n"
|   |   |     |       |   `-ImplicitCastExpr 0x13afbce5d18 <col:53> 'int' <LValueToRValue>
|   |   |     |       |     `-DeclRefExpr 0x13afbce5c68 <col:53> 'int' lvalue Var 0x13afbcd4320 'i' 'int'
|   |   |     |       |-BinaryOperator 0x13afbce5d90 <line:2780:21, col:27> 'int' '='
|   |   |     |       | |-DeclRefExpr 0x13afbce5d48 <col:21> 'int' lvalue Var 0x13afbcd41e0 's_r' 'int'
|   |   |     |       | `-IntegerLiteral 0x13afbce5d68 <col:27> 'int' 1
|   |   |     |       |-BinaryOperator 0x13afbce5df8 <line:2781:21, col:31> 'int' '='
|   |   |     |       | |-DeclRefExpr 0x13afbce5db0 <col:21> 'int' lvalue Var 0x13afbcd4510 'c_write' 'int'
|   |   |     |       | `-IntegerLiteral 0x13afbce5dd0 <col:31> 'int' 0
|   |   |     |       `-CompoundAssignOperator 0x13afbce7eb8 <line:2782:21, col:31> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   |   |     |         |-DeclRefExpr 0x13afbce5e18 <col:21> 'long' lvalue Var 0x13afbcd7a88 'cw_num' 'long'
|   |   |     |         `-ImplicitCastExpr 0x13afbce7ea0 <col:31> 'long' <IntegralCast>
|   |   |     |           `-ImplicitCastExpr 0x13afbce5e58 <col:31> 'int' <LValueToRValue>
|   |   |     |             `-DeclRefExpr 0x13afbce5e38 <col:31> 'int' lvalue Var 0x13afbcd4320 'i' 'int'
|   |   |     `-CompoundStmt 0x13afbce9020 <line:2786:20, line:2819:13>
|   |   |       `-IfStmt 0x13afbce8ff8 <line:2788:17, line:2818:17> has_else
|   |   |         |-BinaryOperator 0x13afbce8180 <line:2788:21, col:25> 'int' '<'
|   |   |         | |-ImplicitCastExpr 0x13afbce8168 <col:21> 'int' <LValueToRValue>
|   |   |         | | `-DeclRefExpr 0x13afbce8120 <col:21> 'int' lvalue Var 0x13afbcd4320 'i' 'int'
|   |   |         | `-IntegerLiteral 0x13afbce8140 <col:25> 'int' 0
|   |   |         |-CompoundStmt 0x13afbce86d8 <col:28, line:2802:17>
|   |   |         | |-BinaryOperator 0x13afbce81e8 <line:2789:21, col:27> 'int' '='
|   |   |         | | |-DeclRefExpr 0x13afbce81a0 <col:21> 'int' lvalue Var 0x13afbcd40e0 'c_r' 'int'
|   |   |         | | `-IntegerLiteral 0x13afbce81c0 <col:27> 'int' 0
|   |   |         | |-BinaryOperator 0x13afbce8250 <line:2790:21, col:27> 'int' '='
|   |   |         | | |-DeclRefExpr 0x13afbce8208 <col:21> 'int' lvalue Var 0x13afbcd4160 'c_w' 'int'
|   |   |         | | `-IntegerLiteral 0x13afbce8228 <col:27> 'int' 0
|   |   |         | `-IfStmt 0x13afbce86b0 <line:2791:21, line:2801:21> has_else
|   |   |         |   |-OpaqueValueExpr 0x13afbce8698 <<invalid sloc>> '_Bool'
|   |   |         |   |-CompoundStmt 0x13afbce8400 <line:2791:50, line:2796:21>
|   |   |         |   | |-IfStmt 0x13afbce8330 <line:2792:25, line:2793:35>
|   |   |         |   | | |-OpaqueValueExpr 0x13afbce8318 <<invalid sloc>> '_Bool'
|   |   |         |   | | `-BinaryOperator 0x13afbce82f8 <col:29, col:35> 'int' '='
|   |   |         |   | |   |-DeclRefExpr 0x13afbce82b0 <col:29> 'int' lvalue Var 0x13afbcd40e0 'c_r' 'int'
|   |   |         |   | |   `-IntegerLiteral 0x13afbce82d0 <col:35> 'int' 1
|   |   |         |   | `-IfStmt 0x13afbce83e8 <line:2794:25, line:2795:35>
|   |   |         |   |   |-OpaqueValueExpr 0x13afbce83d0 <<invalid sloc>> '_Bool'
|   |   |         |   |   `-BinaryOperator 0x13afbce83b0 <col:29, col:35> 'int' '='
|   |   |         |   |     |-DeclRefExpr 0x13afbce8368 <col:29> 'int' lvalue Var 0x13afbcd4160 'c_w' 'int'
|   |   |         |   |     `-IntegerLiteral 0x13afbce8388 <col:35> 'int' 1
|   |   |         |   `-CompoundStmt 0x13afbce8670 <line:2796:28, line:2801:21>
|   |   |         |     |-CallExpr 0x13afbce8570 <line:2797:25, col:60> 'int'
|   |   |         |     | |-ImplicitCastExpr 0x13afbce8558 <col:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   |         |     | | `-DeclRefExpr 0x13afbce8420 <col:25> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   |   |         |     | |-ParenExpr 0x13afbce84f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   |         |     | | `-UnaryOperator 0x13afbce84e0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   |         |     | |   `-ArraySubscriptExpr 0x13afbce84c0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   |         |     | |     |-CallExpr 0x13afbce8478 <col:18, col:29> 'FILE *'
|   |   |         |     | |     | `-ImplicitCastExpr 0x13afbce8460 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |         |     | |     |   `-DeclRefExpr 0x13afbce8440 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   |         |     | |     `-IntegerLiteral 0x13afbce8498 <col:31> 'int' 2
|   |   |         |     | `-ImplicitCastExpr 0x13afbce85b8 <.//openssl//file_jk/after\test\ssltest_old.c:2797:41> 'const char *' <NoOp>
|   |   |         |     |   `-ImplicitCastExpr 0x13afbce85a0 <col:41> 'char *' <ArrayToPointerDecay>
|   |   |         |     |     `-StringLiteral 0x13afbce8518 <col:41> 'char [17]' lvalue "ERROR in CLIENT\n"
|   |   |         |     |-BinaryOperator 0x13afbce8618 <line:2798:25, col:41> 'int' '='
|   |   |         |     | |-DeclRefExpr 0x13afbce85d0 <col:25> 'int' lvalue Var 0x13afbcd48c8 'err_in_client' 'int'
|   |   |         |     | `-IntegerLiteral 0x13afbce85f0 <col:41> 'int' 1
|   |   |         |     `-GotoStmt 0x13afbce8658 <line:2800:25, col:30> 'err' 0x13afbcd4e40
|   |   |         `-IfStmt 0x13afbce8fd0 <line:2802:24, line:2818:17> has_else
|   |   |           |-BinaryOperator 0x13afbce8760 <line:2802:28, col:33> 'int' '=='
|   |   |           | |-ImplicitCastExpr 0x13afbce8748 <col:28> 'int' <LValueToRValue>
|   |   |           | | `-DeclRefExpr 0x13afbce8700 <col:28> 'int' lvalue Var 0x13afbcd4320 'i' 'int'
|   |   |           | `-IntegerLiteral 0x13afbce8720 <col:33> 'int' 0
|   |   |           |-CompoundStmt 0x13afbce8958 <col:36, line:2805:17>
|   |   |           | |-CallExpr 0x13afbce88e0 <line:2803:21, col:66> 'int'
|   |   |           | | |-ImplicitCastExpr 0x13afbce88c8 <col:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   |           | | | `-DeclRefExpr 0x13afbce8780 <col:21> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   |   |           | | |-ParenExpr 0x13afbce8858 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   |           | | | `-UnaryOperator 0x13afbce8840 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   |           | | |   `-ArraySubscriptExpr 0x13afbce8820 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   |           | | |     |-CallExpr 0x13afbce87d8 <col:18, col:29> 'FILE *'
|   |   |           | | |     | `-ImplicitCastExpr 0x13afbce87c0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |           | | |     |   `-DeclRefExpr 0x13afbce87a0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   |           | | |     `-IntegerLiteral 0x13afbce87f8 <col:31> 'int' 2
|   |   |           | | `-ImplicitCastExpr 0x13afbce8928 <.//openssl//file_jk/after\test\ssltest_old.c:2803:37> 'const char *' <NoOp>
|   |   |           | |   `-ImplicitCastExpr 0x13afbce8910 <col:37> 'char *' <ArrayToPointerDecay>
|   |   |           | |     `-StringLiteral 0x13afbce8878 <col:37> 'char [27]' lvalue "SSL CLIENT STARTUP FAILED\n"
|   |   |           | `-GotoStmt 0x13afbce8940 <line:2804:21, col:26> 'err' 0x13afbcd4e40
|   |   |           `-CompoundStmt 0x13afbce8fa0 <line:2805:24, line:2818:17>
|   |   |             |-IfStmt 0x13afbce8ac0 <line:2806:21, line:2807:53>
|   |   |             | |-ImplicitCastExpr 0x13afbce8998 <line:2806:25> 'int' <LValueToRValue>
|   |   |             | | `-DeclRefExpr 0x13afbce8978 <col:25> 'int' lvalue Var 0x13afbca4a70 'debug' 'int'
|   |   |             | `-CallExpr 0x13afbce8a48 <line:2807:25, col:53> 'int'
|   |   |             |   |-ImplicitCastExpr 0x13afbce8a30 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |             |   | `-DeclRefExpr 0x13afbce89b0 <col:25> 'int (const char *, ...)' Function 0x13afbbc9990 'printf' 'int (const char *, ...)'
|   |   |             |   |-ImplicitCastExpr 0x13afbce8a90 <col:32> 'const char *' <NoOp>
|   |   |             |   | `-ImplicitCastExpr 0x13afbce8a78 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |             |   |   `-StringLiteral 0x13afbce89d0 <col:32> 'char [16]' lvalue "client read %d\n"
|   |   |             |   `-ImplicitCastExpr 0x13afbce8aa8 <col:52> 'int' <LValueToRValue>
|   |   |             |     `-DeclRefExpr 0x13afbce89f8 <col:52> 'int' lvalue Var 0x13afbcd4320 'i' 'int'
|   |   |             |-CompoundAssignOperator 0x13afbce8b60 <line:2808:21, col:31> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   |   |             | |-DeclRefExpr 0x13afbce8ad8 <col:21> 'long' lvalue Var 0x13afbcd7b58 'cr_num' 'long'
|   |   |             | `-ImplicitCastExpr 0x13afbce8b48 <col:31> 'long' <IntegralCast>
|   |   |             |   `-ImplicitCastExpr 0x13afbce8b30 <col:31> 'int' <LValueToRValue>
|   |   |             |     `-DeclRefExpr 0x13afbce8b10 <col:31> 'int' lvalue Var 0x13afbcd4320 'i' 'int'
|   |   |             |-IfStmt 0x13afbce8d30 <line:2809:21, line:2812:21>
|   |   |             | |-BinaryOperator 0x13afbce8c20 <line:2809:25, col:34> 'int' '>'
|   |   |             | | |-ImplicitCastExpr 0x13afbce8bf0 <col:25> 'long' <LValueToRValue>
|   |   |             | | | `-DeclRefExpr 0x13afbce8b90 <col:25> 'long' lvalue Var 0x13afbcd7c40 'sw_num' 'long'
|   |   |             | | `-ImplicitCastExpr 0x13afbce8c08 <col:34> 'long' <IntegralCast>
|   |   |             | |   `-IntegerLiteral 0x13afbce8bc8 <col:34> 'int' 0
|   |   |             | `-CompoundStmt 0x13afbce8d10 <col:37, line:2812:21>
|   |   |             |   |-BinaryOperator 0x13afbce8c88 <line:2810:25, col:35> 'int' '='
|   |   |             |   | |-DeclRefExpr 0x13afbce8c40 <col:25> 'int' lvalue Var 0x13afbcd4590 's_write' 'int'
|   |   |             |   | `-IntegerLiteral 0x13afbce8c60 <col:35> 'int' 1
|   |   |             |   `-BinaryOperator 0x13afbce8cf0 <line:2811:25, col:31> 'int' '='
|   |   |             |     |-DeclRefExpr 0x13afbce8ca8 <col:25> 'int' lvalue Var 0x13afbcd4260 's_w' 'int'
|   |   |             |     `-IntegerLiteral 0x13afbce8cc8 <col:31> 'int' 1
|   |   |             `-IfStmt 0x13afbce8f88 <line:2813:21, line:2817:21>
|   |   |               |-BinaryOperator 0x13afbce8dc0 <line:2813:25, col:35> 'int' '<='
|   |   |               | |-ImplicitCastExpr 0x13afbce8d90 <col:25> 'long' <LValueToRValue>
|   |   |               | | `-DeclRefExpr 0x13afbce8d48 <col:25> 'long' lvalue Var 0x13afbcd7b58 'cr_num' 'long'
|   |   |               | `-ImplicitCastExpr 0x13afbce8da8 <col:35> 'long' <IntegralCast>
|   |   |               |   `-IntegerLiteral 0x13afbce8d68 <col:35> 'int' 0
|   |   |               `-CompoundStmt 0x13afbce8f60 <col:38, line:2817:21>
|   |   |                 |-BinaryOperator 0x13afbce8e28 <line:2814:25, col:35> 'int' '='
|   |   |                 | |-DeclRefExpr 0x13afbce8de0 <col:25> 'int' lvalue Var 0x13afbcd4590 's_write' 'int'
|   |   |                 | `-IntegerLiteral 0x13afbce8e00 <col:35> 'int' 1
|   |   |                 |-BinaryOperator 0x13afbce8e90 <line:2815:25, col:31> 'int' '='
|   |   |                 | |-DeclRefExpr 0x13afbce8e48 <col:25> 'int' lvalue Var 0x13afbcd4260 's_w' 'int'
|   |   |                 | `-IntegerLiteral 0x13afbce8e68 <col:31> 'int' 1
|   |   |                 `-BinaryOperator 0x13afbce8f40 <line:2816:25, line:2634:17> 'int' '='
|   |   |                   |-DeclRefExpr 0x13afbce8eb0 <line:2816:25> 'int' lvalue Var 0x13afbcd4450 'done' 'int'
|   |   |                   `-BinaryOperator 0x13afbce8f20 <line:2635:17, line:2634:17> 'int' '|'
|   |   |                     |-IntegerLiteral 0x13afbce8ed0 <line:2635:17> 'int' 2
|   |   |                     `-IntegerLiteral 0x13afbce8ef8 <line:2634:17> 'int' 1
|   |   |-IfStmt 0x13afbce7278 <line:2822:9, line:2892:9>
|   |   | |-BinaryOperator 0x13afbce9180 <line:2822:13, col:41> 'int' '&&'
|   |   | | |-ImplicitCastExpr 0x13afbce9168 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13afbce9090 <col:13> 'int' lvalue Var 0x13afbcd4640 'do_server' 'int'
|   |   | | `-UnaryOperator 0x13afbce9150 <col:26, col:41> 'int' prefix '!' cannot overflow
|   |   | |   `-ParenExpr 0x13afbce9130 <col:27, col:41> 'int'
|   |   | |     `-BinaryOperator 0x13afbce9110 <col:28, line:2635:17> 'int' '&'
|   |   | |       |-ImplicitCastExpr 0x13afbce90f8 <line:2822:28> 'int' <LValueToRValue>
|   |   | |       | `-DeclRefExpr 0x13afbce90b0 <col:28> 'int' lvalue Var 0x13afbcd4450 'done' 'int'
|   |   | |       `-IntegerLiteral 0x13afbce90d0 <line:2635:17> 'int' 2
|   |   | `-CompoundStmt 0x13afbce7260 <line:2822:44, line:2892:9>
|   |   |   `-IfStmt 0x13afbce7238 <line:2823:13, line:2891:13> has_else
|   |   |     |-UnaryOperator 0x13afbce91d8 <line:2823:17, col:18> 'int' prefix '!' cannot overflow
|   |   |     | `-ImplicitCastExpr 0x13afbce91c0 <col:18> 'int' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x13afbce91a0 <col:18> 'int' lvalue Var 0x13afbcd4590 's_write' 'int'
|   |   |     |-CompoundStmt 0x13afbce6158 <col:27, line:2858:13>
|   |   |     | `-IfStmt 0x13afbce6130 <line:2825:17, line:2857:17> has_else
|   |   |     |   |-BinaryOperator 0x13afbce92d0 <line:2825:21, col:25> 'int' '<'
|   |   |     |   | |-ImplicitCastExpr 0x13afbce92b8 <col:21> 'int' <LValueToRValue>
|   |   |     |   | | `-DeclRefExpr 0x13afbce9270 <col:21> 'int' lvalue Var 0x13afbcd4320 'i' 'int'
|   |   |     |   | `-IntegerLiteral 0x13afbce9290 <col:25> 'int' 0
|   |   |     |   |-CompoundStmt 0x13afbce9840 <col:28, line:2839:17>
|   |   |     |   | |-BinaryOperator 0x13afbce9338 <line:2826:21, col:27> 'int' '='
|   |   |     |   | | |-DeclRefExpr 0x13afbce92f0 <col:21> 'int' lvalue Var 0x13afbcd41e0 's_r' 'int'
|   |   |     |   | | `-IntegerLiteral 0x13afbce9310 <col:27> 'int' 0
|   |   |     |   | |-BinaryOperator 0x13afbce93a0 <line:2827:21, col:27> 'int' '='
|   |   |     |   | | |-DeclRefExpr 0x13afbce9358 <col:21> 'int' lvalue Var 0x13afbcd4260 's_w' 'int'
|   |   |     |   | | `-IntegerLiteral 0x13afbce9378 <col:27> 'int' 0
|   |   |     |   | `-IfStmt 0x13afbce9818 <line:2828:21, line:2838:21> has_else
|   |   |     |   |   |-OpaqueValueExpr 0x13afbce9800 <<invalid sloc>> '_Bool'
|   |   |     |   |   |-CompoundStmt 0x13afbce9550 <line:2828:50, line:2833:21>
|   |   |     |   |   | |-IfStmt 0x13afbce9480 <line:2829:25, line:2830:35>
|   |   |     |   |   | | |-OpaqueValueExpr 0x13afbce9468 <<invalid sloc>> '_Bool'
|   |   |     |   |   | | `-BinaryOperator 0x13afbce9448 <col:29, col:35> 'int' '='
|   |   |     |   |   | |   |-DeclRefExpr 0x13afbce9400 <col:29> 'int' lvalue Var 0x13afbcd41e0 's_r' 'int'
|   |   |     |   |   | |   `-IntegerLiteral 0x13afbce9420 <col:35> 'int' 1
|   |   |     |   |   | `-IfStmt 0x13afbce9538 <line:2831:25, line:2832:35>
|   |   |     |   |   |   |-OpaqueValueExpr 0x13afbce9520 <<invalid sloc>> '_Bool'
|   |   |     |   |   |   `-BinaryOperator 0x13afbce9500 <col:29, col:35> 'int' '='
|   |   |     |   |   |     |-DeclRefExpr 0x13afbce94b8 <col:29> 'int' lvalue Var 0x13afbcd4260 's_w' 'int'
|   |   |     |   |   |     `-IntegerLiteral 0x13afbce94d8 <col:35> 'int' 1
|   |   |     |   |   `-CompoundStmt 0x13afbce97d8 <line:2833:28, line:2838:21>
|   |   |     |   |     |-CallExpr 0x13afbce96c0 <line:2834:25, col:60> 'int'
|   |   |     |   |     | |-ImplicitCastExpr 0x13afbce96a8 <col:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   |     |   |     | | `-DeclRefExpr 0x13afbce9570 <col:25> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   |   |     |   |     | |-ParenExpr 0x13afbce9648 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   |     |   |     | | `-UnaryOperator 0x13afbce9630 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   |     |   |     | |   `-ArraySubscriptExpr 0x13afbce9610 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   |     |   |     | |     |-CallExpr 0x13afbce95c8 <col:18, col:29> 'FILE *'
|   |   |     |   |     | |     | `-ImplicitCastExpr 0x13afbce95b0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |     |   |     | |     |   `-DeclRefExpr 0x13afbce9590 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   |     |   |     | |     `-IntegerLiteral 0x13afbce95e8 <col:31> 'int' 2
|   |   |     |   |     | `-ImplicitCastExpr 0x13afbce9708 <.//openssl//file_jk/after\test\ssltest_old.c:2834:41> 'const char *' <NoOp>
|   |   |     |   |     |   `-ImplicitCastExpr 0x13afbce96f0 <col:41> 'char *' <ArrayToPointerDecay>
|   |   |     |   |     |     `-StringLiteral 0x13afbce9668 <col:41> 'char [17]' lvalue "ERROR in SERVER\n"
|   |   |     |   |     |-BinaryOperator 0x13afbce9780 <line:2835:25, col:41> 'int' '='
|   |   |     |   |     | |-DeclRefExpr 0x13afbce9720 <col:25> 'int' lvalue Var 0x13afbcd4988 'err_in_server' 'int'
|   |   |     |   |     | `-IntegerLiteral 0x13afbce9758 <col:41> 'int' 1
|   |   |     |   |     `-GotoStmt 0x13afbce97c0 <line:2837:25, col:30> 'err' 0x13afbcd4e40
|   |   |     |   `-IfStmt 0x13afbce6108 <line:2839:24, line:2857:17> has_else
|   |   |     |     |-BinaryOperator 0x13afbce98c8 <line:2839:28, col:33> 'int' '=='
|   |   |     |     | |-ImplicitCastExpr 0x13afbce98b0 <col:28> 'int' <LValueToRValue>
|   |   |     |     | | `-DeclRefExpr 0x13afbce9868 <col:28> 'int' lvalue Var 0x13afbcd4320 'i' 'int'
|   |   |     |     | `-IntegerLiteral 0x13afbce9888 <col:33> 'int' 0
|   |   |     |     |-CompoundStmt 0x13afbce9ae8 <col:36, line:2844:17>
|   |   |     |     | |-CallExpr 0x13afbce9a70 <line:2841:21, line:2842:70> 'int'
|   |   |     |     | | |-ImplicitCastExpr 0x13afbce9a58 <line:2841:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   |     |     | | | `-DeclRefExpr 0x13afbce9908 <col:21> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   |   |     |     | | |-ParenExpr 0x13afbce99e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   |     |     | | | `-UnaryOperator 0x13afbce99c8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   |     |     | | |   `-ArraySubscriptExpr 0x13afbce99a8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   |     |     | | |     |-CallExpr 0x13afbce9960 <col:18, col:29> 'FILE *'
|   |   |     |     | | |     | `-ImplicitCastExpr 0x13afbce9948 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |     |     | | |     |   `-DeclRefExpr 0x13afbce9928 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   |     |     | | |     `-IntegerLiteral 0x13afbce9980 <col:31> 'int' 2
|   |   |     |     | | `-ImplicitCastExpr 0x13afbce9ab8 <.//openssl//file_jk/after\test\ssltest_old.c:2842:29> 'const char *' <NoOp>
|   |   |     |     | |   `-ImplicitCastExpr 0x13afbce9aa0 <col:29> 'char *' <ArrayToPointerDecay>
|   |   |     |     | |     `-StringLiteral 0x13afbce9a00 <col:29> 'char [39]' lvalue "SSL SERVER STARTUP FAILED in SSL_read\n"
|   |   |     |     | `-GotoStmt 0x13afbce9ad0 <line:2843:21, col:26> 'err' 0x13afbcd4e40
|   |   |     |     `-CompoundStmt 0x13afbce60d8 <line:2844:24, line:2857:17>
|   |   |     |       |-IfStmt 0x13afbce9c50 <line:2845:21, line:2846:53>
|   |   |     |       | |-ImplicitCastExpr 0x13afbce9b28 <line:2845:25> 'int' <LValueToRValue>
|   |   |     |       | | `-DeclRefExpr 0x13afbce9b08 <col:25> 'int' lvalue Var 0x13afbca4a70 'debug' 'int'
|   |   |     |       | `-CallExpr 0x13afbce9bd8 <line:2846:25, col:53> 'int'
|   |   |     |       |   |-ImplicitCastExpr 0x13afbce9bc0 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |     |       |   | `-DeclRefExpr 0x13afbce9b40 <col:25> 'int (const char *, ...)' Function 0x13afbbc9990 'printf' 'int (const char *, ...)'
|   |   |     |       |   |-ImplicitCastExpr 0x13afbce9c20 <col:32> 'const char *' <NoOp>
|   |   |     |       |   | `-ImplicitCastExpr 0x13afbce9c08 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |     |       |   |   `-StringLiteral 0x13afbce9b60 <col:32> 'char [16]' lvalue "server read %d\n"
|   |   |     |       |   `-ImplicitCastExpr 0x13afbce9c38 <col:52> 'int' <LValueToRValue>
|   |   |     |       |     `-DeclRefExpr 0x13afbce9b88 <col:52> 'int' lvalue Var 0x13afbcd4320 'i' 'int'
|   |   |     |       |-CompoundAssignOperator 0x13afbce9cf0 <line:2847:21, col:31> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   |   |     |       | |-DeclRefExpr 0x13afbce9c68 <col:21> 'long' lvalue Var 0x13afbcd7cf8 'sr_num' 'long'
|   |   |     |       | `-ImplicitCastExpr 0x13afbce9cd8 <col:31> 'long' <IntegralCast>
|   |   |     |       |   `-ImplicitCastExpr 0x13afbce9cc0 <col:31> 'int' <LValueToRValue>
|   |   |     |       |     `-DeclRefExpr 0x13afbce9ca0 <col:31> 'int' lvalue Var 0x13afbcd4320 'i' 'int'
|   |   |     |       |-IfStmt 0x13afbce5eb0 <line:2848:21, line:2851:21>
|   |   |     |       | |-BinaryOperator 0x13afbce9d98 <line:2848:25, col:34> 'int' '>'
|   |   |     |       | | |-ImplicitCastExpr 0x13afbce9d68 <col:25> 'long' <LValueToRValue>
|   |   |     |       | | | `-DeclRefExpr 0x13afbce9d20 <col:25> 'long' lvalue Var 0x13afbcd7a88 'cw_num' 'long'
|   |   |     |       | | `-ImplicitCastExpr 0x13afbce9d80 <col:34> 'long' <IntegralCast>
|   |   |     |       | |   `-IntegerLiteral 0x13afbce9d40 <col:34> 'int' 0
|   |   |     |       | `-CompoundStmt 0x13afbce5e90 <col:37, line:2851:21>
|   |   |     |       |   |-BinaryOperator 0x13afbce9e00 <line:2849:25, col:35> 'int' '='
|   |   |     |       |   | |-DeclRefExpr 0x13afbce9db8 <col:25> 'int' lvalue Var 0x13afbcd4510 'c_write' 'int'
|   |   |     |       |   | `-IntegerLiteral 0x13afbce9dd8 <col:35> 'int' 1
|   |   |     |       |   `-BinaryOperator 0x13afbce9e68 <line:2850:25, col:31> 'int' '='
|   |   |     |       |     |-DeclRefExpr 0x13afbce9e20 <col:25> 'int' lvalue Var 0x13afbcd4160 'c_w' 'int'
|   |   |     |       |     `-IntegerLiteral 0x13afbce9e40 <col:31> 'int' 1
|   |   |     |       `-IfStmt 0x13afbce60c0 <line:2852:21, line:2856:21>
|   |   |     |         |-BinaryOperator 0x13afbce5f40 <line:2852:25, col:35> 'int' '<='
|   |   |     |         | |-ImplicitCastExpr 0x13afbce5f10 <col:25> 'long' <LValueToRValue>
|   |   |     |         | | `-DeclRefExpr 0x13afbce5ec8 <col:25> 'long' lvalue Var 0x13afbcd7cf8 'sr_num' 'long'
|   |   |     |         | `-ImplicitCastExpr 0x13afbce5f28 <col:35> 'long' <IntegralCast>
|   |   |     |         |   `-IntegerLiteral 0x13afbce5ee8 <col:35> 'int' 0
|   |   |     |         `-CompoundStmt 0x13afbce6098 <col:38, line:2856:21>
|   |   |     |           |-BinaryOperator 0x13afbce5fa8 <line:2853:25, col:35> 'int' '='
|   |   |     |           | |-DeclRefExpr 0x13afbce5f60 <col:25> 'int' lvalue Var 0x13afbcd4590 's_write' 'int'
|   |   |     |           | `-IntegerLiteral 0x13afbce5f80 <col:35> 'int' 1
|   |   |     |           |-BinaryOperator 0x13afbce6010 <line:2854:25, col:31> 'int' '='
|   |   |     |           | |-DeclRefExpr 0x13afbce5fc8 <col:25> 'int' lvalue Var 0x13afbcd4260 's_w' 'int'
|   |   |     |           | `-IntegerLiteral 0x13afbce5fe8 <col:31> 'int' 1
|   |   |     |           `-BinaryOperator 0x13afbce6078 <line:2855:25, col:35> 'int' '='
|   |   |     |             |-DeclRefExpr 0x13afbce6030 <col:25> 'int' lvalue Var 0x13afbcd4510 'c_write' 'int'
|   |   |     |             `-IntegerLiteral 0x13afbce6050 <col:35> 'int' 0
|   |   |     `-CompoundStmt 0x13afbce7218 <line:2858:20, line:2891:13>
|   |   |       |-BinaryOperator 0x13afbce6360 <line:2859:17, col:60> 'int' '='
|   |   |       | |-DeclRefExpr 0x13afbce6170 <col:17> 'int' lvalue Var 0x13afbcd43a0 'j' 'int'
|   |   |       | `-ConditionalOperator 0x13afbce6330 <col:21, col:60> 'int'
|   |   |       |   |-ParenExpr 0x13afbce6220 <col:21, col:37> 'int'
|   |   |       |   | `-BinaryOperator 0x13afbce6200 <col:22, col:31> 'int' '>'
|   |   |       |   |   |-ImplicitCastExpr 0x13afbce61d0 <col:22> 'long' <LValueToRValue>
|   |   |       |   |   | `-DeclRefExpr 0x13afbce6190 <col:22> 'long' lvalue Var 0x13afbcd7c40 'sw_num' 'long'
|   |   |       |   |   `-ImplicitCastExpr 0x13afbce61e8 <col:31> 'long' <LValueToRValue>
|   |   |       |   |     `-DeclRefExpr 0x13afbce61b0 <col:31> 'long' lvalue Var 0x13afbcd79f0 'bufsiz' 'long'
|   |   |       |   |-CStyleCastExpr 0x13afbce6290 <col:41, col:46> 'int' <IntegralCast>
|   |   |       |   | `-ImplicitCastExpr 0x13afbce6278 <col:46> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |       |   |   `-DeclRefExpr 0x13afbce6240 <col:46> 'long' lvalue Var 0x13afbcd79f0 'bufsiz' 'long'
|   |   |       |   `-CStyleCastExpr 0x13afbce6308 <col:55, col:60> 'int' <IntegralCast>
|   |   |       |     `-ImplicitCastExpr 0x13afbce62f0 <col:60> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |       |       `-DeclRefExpr 0x13afbce62b8 <col:60> 'long' lvalue Var 0x13afbcd7c40 'sw_num' 'long'
|   |   |       `-IfStmt 0x13afbce71f0 <line:2861:17, line:2890:17> has_else
|   |   |         |-BinaryOperator 0x13afbce6460 <line:2861:21, col:25> 'int' '<'
|   |   |         | |-ImplicitCastExpr 0x13afbce6448 <col:21> 'int' <LValueToRValue>
|   |   |         | | `-DeclRefExpr 0x13afbce6400 <col:21> 'int' lvalue Var 0x13afbcd4320 'i' 'int'
|   |   |         | `-IntegerLiteral 0x13afbce6420 <col:25> 'int' 0
|   |   |         |-CompoundStmt 0x13afbce69b8 <col:28, line:2875:17>
|   |   |         | |-BinaryOperator 0x13afbce64c8 <line:2862:21, col:27> 'int' '='
|   |   |         | | |-DeclRefExpr 0x13afbce6480 <col:21> 'int' lvalue Var 0x13afbcd41e0 's_r' 'int'
|   |   |         | | `-IntegerLiteral 0x13afbce64a0 <col:27> 'int' 0
|   |   |         | |-BinaryOperator 0x13afbce6530 <line:2863:21, col:27> 'int' '='
|   |   |         | | |-DeclRefExpr 0x13afbce64e8 <col:21> 'int' lvalue Var 0x13afbcd4260 's_w' 'int'
|   |   |         | | `-IntegerLiteral 0x13afbce6508 <col:27> 'int' 0
|   |   |         | `-IfStmt 0x13afbce6990 <line:2864:21, line:2874:21> has_else
|   |   |         |   |-OpaqueValueExpr 0x13afbce6978 <<invalid sloc>> '_Bool'
|   |   |         |   |-CompoundStmt 0x13afbce66e0 <line:2864:50, line:2869:21>
|   |   |         |   | |-IfStmt 0x13afbce6610 <line:2865:25, line:2866:35>
|   |   |         |   | | |-OpaqueValueExpr 0x13afbce65f8 <<invalid sloc>> '_Bool'
|   |   |         |   | | `-BinaryOperator 0x13afbce65d8 <col:29, col:35> 'int' '='
|   |   |         |   | |   |-DeclRefExpr 0x13afbce6590 <col:29> 'int' lvalue Var 0x13afbcd41e0 's_r' 'int'
|   |   |         |   | |   `-IntegerLiteral 0x13afbce65b0 <col:35> 'int' 1
|   |   |         |   | `-IfStmt 0x13afbce66c8 <line:2867:25, line:2868:35>
|   |   |         |   |   |-OpaqueValueExpr 0x13afbce66b0 <<invalid sloc>> '_Bool'
|   |   |         |   |   `-BinaryOperator 0x13afbce6690 <col:29, col:35> 'int' '='
|   |   |         |   |     |-DeclRefExpr 0x13afbce6648 <col:29> 'int' lvalue Var 0x13afbcd4260 's_w' 'int'
|   |   |         |   |     `-IntegerLiteral 0x13afbce6668 <col:35> 'int' 1
|   |   |         |   `-CompoundStmt 0x13afbce6950 <line:2869:28, line:2874:21>
|   |   |         |     |-CallExpr 0x13afbce6850 <line:2870:25, col:60> 'int'
|   |   |         |     | |-ImplicitCastExpr 0x13afbce6838 <col:25> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   |         |     | | `-DeclRefExpr 0x13afbce6700 <col:25> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   |   |         |     | |-ParenExpr 0x13afbce67d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   |         |     | | `-UnaryOperator 0x13afbce67c0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   |         |     | |   `-ArraySubscriptExpr 0x13afbce67a0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   |         |     | |     |-CallExpr 0x13afbce6758 <col:18, col:29> 'FILE *'
|   |   |         |     | |     | `-ImplicitCastExpr 0x13afbce6740 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |         |     | |     |   `-DeclRefExpr 0x13afbce6720 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   |         |     | |     `-IntegerLiteral 0x13afbce6778 <col:31> 'int' 2
|   |   |         |     | `-ImplicitCastExpr 0x13afbce6898 <.//openssl//file_jk/after\test\ssltest_old.c:2870:41> 'const char *' <NoOp>
|   |   |         |     |   `-ImplicitCastExpr 0x13afbce6880 <col:41> 'char *' <ArrayToPointerDecay>
|   |   |         |     |     `-StringLiteral 0x13afbce67f8 <col:41> 'char [17]' lvalue "ERROR in SERVER\n"
|   |   |         |     |-BinaryOperator 0x13afbce68f8 <line:2871:25, col:41> 'int' '='
|   |   |         |     | |-DeclRefExpr 0x13afbce68b0 <col:25> 'int' lvalue Var 0x13afbcd4988 'err_in_server' 'int'
|   |   |         |     | `-IntegerLiteral 0x13afbce68d0 <col:41> 'int' 1
|   |   |         |     `-GotoStmt 0x13afbce6938 <line:2873:25, col:30> 'err' 0x13afbcd4e40
|   |   |         `-IfStmt 0x13afbce71c8 <line:2875:24, line:2890:17> has_else
|   |   |           |-BinaryOperator 0x13afbce6a40 <line:2875:28, col:33> 'int' '=='
|   |   |           | |-ImplicitCastExpr 0x13afbce6a28 <col:28> 'int' <LValueToRValue>
|   |   |           | | `-DeclRefExpr 0x13afbce69e0 <col:28> 'int' lvalue Var 0x13afbcd4320 'i' 'int'
|   |   |           | `-IntegerLiteral 0x13afbce6a00 <col:33> 'int' 0
|   |   |           |-CompoundStmt 0x13afbce6c60 <col:36, line:2880:17>
|   |   |           | |-CallExpr 0x13afbce6be8 <line:2877:21, line:2878:71> 'int'
|   |   |           | | |-ImplicitCastExpr 0x13afbce6bd0 <line:2877:21> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   |           | | | `-DeclRefExpr 0x13afbce6a80 <col:21> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   |   |           | | |-ParenExpr 0x13afbce6b58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   |           | | | `-UnaryOperator 0x13afbce6b40 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   |           | | |   `-ArraySubscriptExpr 0x13afbce6b20 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   |           | | |     |-CallExpr 0x13afbce6ad8 <col:18, col:29> 'FILE *'
|   |   |           | | |     | `-ImplicitCastExpr 0x13afbce6ac0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |           | | |     |   `-DeclRefExpr 0x13afbce6aa0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   |           | | |     `-IntegerLiteral 0x13afbce6af8 <col:31> 'int' 2
|   |   |           | | `-ImplicitCastExpr 0x13afbce6c30 <.//openssl//file_jk/after\test\ssltest_old.c:2878:29> 'const char *' <NoOp>
|   |   |           | |   `-ImplicitCastExpr 0x13afbce6c18 <col:29> 'char *' <ArrayToPointerDecay>
|   |   |           | |     `-StringLiteral 0x13afbce6b78 <col:29> 'char [40]' lvalue "SSL SERVER STARTUP FAILED in SSL_write\n"
|   |   |           | `-GotoStmt 0x13afbce6c48 <line:2879:21, col:26> 'err' 0x13afbcd4e40
|   |   |           `-CompoundStmt 0x13afbce7190 <line:2880:24, line:2890:17>
|   |   |             |-IfStmt 0x13afbce6dc8 <line:2881:21, line:2882:54>
|   |   |             | |-ImplicitCastExpr 0x13afbce6ca0 <line:2881:25> 'int' <LValueToRValue>
|   |   |             | | `-DeclRefExpr 0x13afbce6c80 <col:25> 'int' lvalue Var 0x13afbca4a70 'debug' 'int'
|   |   |             | `-CallExpr 0x13afbce6d50 <line:2882:25, col:54> 'int'
|   |   |             |   |-ImplicitCastExpr 0x13afbce6d38 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |             |   | `-DeclRefExpr 0x13afbce6cb8 <col:25> 'int (const char *, ...)' Function 0x13afbbc9990 'printf' 'int (const char *, ...)'
|   |   |             |   |-ImplicitCastExpr 0x13afbce6d98 <col:32> 'const char *' <NoOp>
|   |   |             |   | `-ImplicitCastExpr 0x13afbce6d80 <col:32> 'char *' <ArrayToPointerDecay>
|   |   |             |   |   `-StringLiteral 0x13afbce6cd8 <col:32> 'char [17]' lvalue "server wrote %d\n"
|   |   |             |   `-ImplicitCastExpr 0x13afbce6db0 <col:53> 'int' <LValueToRValue>
|   |   |             |     `-DeclRefExpr 0x13afbce6d00 <col:53> 'int' lvalue Var 0x13afbcd4320 'i' 'int'
|   |   |             |-CompoundAssignOperator 0x13afbce6e50 <line:2883:21, col:31> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   |   |             | |-DeclRefExpr 0x13afbce6de0 <col:21> 'long' lvalue Var 0x13afbcd7c40 'sw_num' 'long'
|   |   |             | `-ImplicitCastExpr 0x13afbce6e38 <col:31> 'long' <IntegralCast>
|   |   |             |   `-ImplicitCastExpr 0x13afbce6e20 <col:31> 'int' <LValueToRValue>
|   |   |             |     `-DeclRefExpr 0x13afbce6e00 <col:31> 'int' lvalue Var 0x13afbcd4320 'i' 'int'
|   |   |             |-BinaryOperator 0x13afbce6ec8 <line:2884:21, col:31> 'int' '='
|   |   |             | |-DeclRefExpr 0x13afbce6e80 <col:21> 'int' lvalue Var 0x13afbcd4590 's_write' 'int'
|   |   |             | `-IntegerLiteral 0x13afbce6ea0 <col:31> 'int' 0
|   |   |             |-BinaryOperator 0x13afbce6f30 <line:2885:21, col:27> 'int' '='
|   |   |             | |-DeclRefExpr 0x13afbce6ee8 <col:21> 'int' lvalue Var 0x13afbcd40e0 'c_r' 'int'
|   |   |             | `-IntegerLiteral 0x13afbce6f08 <col:27> 'int' 1
|   |   |             `-IfStmt 0x13afbce7060 <line:2886:21, line:2635:17>
|   |   |               |-BinaryOperator 0x13afbce6fc8 <line:2886:25, col:35> 'int' '<='
|   |   |               | |-ImplicitCastExpr 0x13afbce6f98 <col:25> 'long' <LValueToRValue>
|   |   |               | | `-DeclRefExpr 0x13afbce6f50 <col:25> 'long' lvalue Var 0x13afbcd7c40 'sw_num' 'long'
|   |   |               | `-ImplicitCastExpr 0x13afbce6fb0 <col:35> 'long' <IntegralCast>
|   |   |               |   `-IntegerLiteral 0x13afbce6f70 <col:35> 'int' 0
|   |   |               `-CompoundAssignOperator 0x13afbce7030 <line:2887:25, line:2635:17> 'int' '|=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |                 |-DeclRefExpr 0x13afbce6fe8 <line:2887:25> 'int' lvalue Var 0x13afbcd4450 'done' 'int'
|   |   |                 `-IntegerLiteral 0x13afbce7008 <line:2635:17> 'int' 2
|   |   `-IfStmt 0x13afbce73f8 <line:2894:9, line:2895:13>
|   |     |-BinaryOperator 0x13afbce73d0 <line:2894:13, col:46> 'int' '&&'
|   |     | |-ParenExpr 0x13afbce7310 <col:13, col:27> 'int'
|   |     | | `-BinaryOperator 0x13afbce72f0 <col:14, line:2635:17> 'int' '&'
|   |     | |   |-ImplicitCastExpr 0x13afbce72d8 <line:2894:14> 'int' <LValueToRValue>
|   |     | |   | `-DeclRefExpr 0x13afbce7290 <col:14> 'int' lvalue Var 0x13afbcd4450 'done' 'int'
|   |     | |   `-IntegerLiteral 0x13afbce72b0 <line:2635:17> 'int' 2
|   |     | `-ParenExpr 0x13afbce73b0 <line:2894:32, col:46> 'int'
|   |     |   `-BinaryOperator 0x13afbce7390 <col:33, line:2634:17> 'int' '&'
|   |     |     |-ImplicitCastExpr 0x13afbce7378 <line:2894:33> 'int' <LValueToRValue>
|   |     |     | `-DeclRefExpr 0x13afbce7330 <col:33> 'int' lvalue Var 0x13afbcd4450 'done' 'int'
|   |     |     `-IntegerLiteral 0x13afbce7350 <line:2634:17> 'int' 1
|   |     `-BreakStmt 0x13afbce73f0 <line:2895:13>
|   |-IfStmt 0x13afbce75f8 <line:2901:5, line:2904:5>
|   | |-OpaqueValueExpr 0x13afbce75e0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbce75c0 <line:2901:39, line:2904:5>
|   |   |-BinaryOperator 0x13afbce7588 <line:2902:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x13afbce7528 <col:9> 'int' lvalue Var 0x13afbcd3e00 'ret' 'int'
|   |   | `-IntegerLiteral 0x13afbce7560 <col:15> 'int' 1
|   |   `-GotoStmt 0x13afbce75a8 <line:2903:9, col:14> 'err' 0x13afbcd4e40
|   |-IfStmt 0x13afbce7918 <line:2906:5, line:2910:5>
|   | |-BinaryOperator 0x13afbce7690 <line:2906:9, col:31> 'int' '<'
|   | | |-CallExpr 0x13afbce7648 <col:9, col:27> 'int'
|   | | | `-ImplicitCastExpr 0x13afbce7630 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | |   `-DeclRefExpr 0x13afbce7610 <col:9> 'int ()' Function 0x13afbc88bc8 'verify_serverinfo' 'int ()'
|   | | `-IntegerLiteral 0x13afbce7668 <col:31> 'int' 0
|   | `-CompoundStmt 0x13afbce78f0 <col:34, line:2910:5>
|   |   |-CallExpr 0x13afbce7810 <line:2907:9, col:53> 'int'
|   |   | |-ImplicitCastExpr 0x13afbce77f8 <col:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13afbce76b0 <col:9> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x13afbce7788 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x13afbce7770 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x13afbce7750 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x13afbce7708 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x13afbce76f0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x13afbce76d0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x13afbce7728 <col:31> 'int' 2
|   |   | `-ImplicitCastExpr 0x13afbce7858 <.//openssl//file_jk/after\test\ssltest_old.c:2907:25> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x13afbce7840 <col:25> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x13afbce77a8 <col:25> 'char [26]' lvalue "Server info verify error\n"
|   |   |-BinaryOperator 0x13afbce78b8 <line:2908:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x13afbce7870 <col:9> 'int' lvalue Var 0x13afbcd3e00 'ret' 'int'
|   |   | `-IntegerLiteral 0x13afbce7890 <col:15> 'int' 1
|   |   `-GotoStmt 0x13afbce78d8 <line:2909:9, col:14> 'err' 0x13afbcd4e40
|   |-IfStmt 0x13afbce7bc8 <line:2911:5, line:2915:5>
|   | |-ImplicitCastExpr 0x13afbce7950 <line:2911:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13afbce7930 <col:9> 'int' lvalue Var 0x13afbc883c8 'custom_ext_error' 'int'
|   | `-CompoundStmt 0x13afbce7ba0 <col:27, line:2915:5>
|   |   |-CallExpr 0x13afbce7ac0 <line:2912:9, col:51> 'int'
|   |   | |-ImplicitCastExpr 0x13afbce7aa8 <col:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13afbce7968 <col:9> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x13afbce7a40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x13afbce7a28 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x13afbce7a08 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x13afbce79c0 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x13afbce79a8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x13afbce7988 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x13afbce79e0 <col:31> 'int' 2
|   |   | `-ImplicitCastExpr 0x13afbce7b08 <.//openssl//file_jk/after\test\ssltest_old.c:2912:25> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x13afbce7af0 <col:25> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x13afbce7a60 <col:25> 'char [24]' lvalue "Custom extension error\n"
|   |   |-BinaryOperator 0x13afbce7b68 <line:2913:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x13afbce7b20 <col:9> 'int' lvalue Var 0x13afbcd3e00 'ret' 'int'
|   |   | `-IntegerLiteral 0x13afbce7b40 <col:15> 'int' 1
|   |   `-GotoStmt 0x13afbce7b88 <line:2914:9, col:14> 'err' 0x13afbcd4e40
|   |-BinaryOperator 0x13afbce7c28 <line:2916:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x13afbce7be0 <col:5> 'int' lvalue Var 0x13afbcd3e00 'ret' 'int'
|   | `-IntegerLiteral 0x13afbce7c00 <col:11> 'int' 0
|   |-LabelStmt 0x13afbce7c70 <line:2917:2, col:5> 'err'
|   | `-NullStmt 0x13afbce7c68 <col:5>
|   |-CallExpr 0x13afbce7d40 <line:2922:5, col:22> 'int'
|   | |-ImplicitCastExpr 0x13afbce7d28 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbce7ce8 <col:5> 'int ()' Function 0x13afbc8a1a0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x13afbce7d68 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x13afbce7d08 <col:18> 'char *' lvalue Var 0x13afbcd7780 'cbuf' 'char *'
|   |-CallExpr 0x13afbce7dd8 <line:2923:5, col:22> 'int'
|   | |-ImplicitCastExpr 0x13afbce7dc0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x13afbce7d80 <col:5> 'int ()' Function 0x13afbc8a1a0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x13afbce7e00 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x13afbce7da0 <col:18> 'char *' lvalue Var 0x13afbcd78a0 'sbuf' 'char *'
|   |-IfStmt 0x13afbcea638 <line:2925:5, line:2928:42> has_else
|   | |-BinaryOperator 0x13afbcea0b8 <line:2925:9, col:80> 'int' '&&'
|   | | |-BinaryOperator 0x13afbce9f28 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | | |-ImplicitCastExpr 0x13afbce9ef8 <.//openssl//file_jk/after\test\ssltest_old.c:2925:9> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x13afbce7e18 <col:9> 'const char *' lvalue Var 0x13afbc8b618 'should_negotiate' 'const char *'
|   | | | `-ImplicitCastExpr 0x13afbce9f10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |   `-ParenExpr 0x13afbce9ed8 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x13afbce9eb0 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x13afbce7e38 <col:26> 'int' 0
|   | | `-BinaryOperator 0x13afbcea098 <.//openssl//file_jk/after\test\ssltest_old.c:2925:37, col:80> 'int' '=='
|   | |   |-CallExpr 0x13afbce9ff8 <col:37, col:75> 'int'
|   | |   | |-ImplicitCastExpr 0x13afbce9fe0 <col:37> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x13afbce9f48 <col:37> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   | |   | |-ImplicitCastExpr 0x13afbcea028 <col:44> 'const char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x13afbce9f68 <col:44> 'const char *' lvalue Var 0x13afbc8b618 'should_negotiate' 'const char *'
|   | |   | `-ImplicitCastExpr 0x13afbcea058 <col:62> 'const char *' <NoOp>
|   | |   |   `-ImplicitCastExpr 0x13afbcea040 <col:62> 'char *' <ArrayToPointerDecay>
|   | |   |     `-StringLiteral 0x13afbce9f88 <col:62> 'char [12]' lvalue "fail-client"
|   | |   `-IntegerLiteral 0x13afbcea070 <col:80> 'int' 0
|   | |-BinaryOperator 0x13afbcea218 <line:2926:9, col:42> 'int' '='
|   | | |-DeclRefExpr 0x13afbcea0d8 <col:9> 'int' lvalue Var 0x13afbcd3e00 'ret' 'int'
|   | | `-ConditionalOperator 0x13afbcea1e8 <col:15, col:42> 'int'
|   | |   |-ParenExpr 0x13afbcea178 <col:15, col:34> 'int'
|   | |   | `-BinaryOperator 0x13afbcea158 <col:16, col:33> 'int' '!='
|   | |   |   |-ImplicitCastExpr 0x13afbcea140 <col:16> 'int' <LValueToRValue>
|   | |   |   | `-DeclRefExpr 0x13afbcea0f8 <col:16> 'int' lvalue Var 0x13afbcd48c8 'err_in_client' 'int'
|   | |   |   `-IntegerLiteral 0x13afbcea118 <col:33> 'int' 0
|   | |   |-IntegerLiteral 0x13afbcea198 <col:38> 'int' 0
|   | |   `-IntegerLiteral 0x13afbcea1c0 <col:42> 'int' 1
|   | `-IfStmt 0x13afbcea620 <line:2927:10, line:2928:42>
|   |   |-BinaryOperator 0x13afbcea4a0 <line:2927:14, col:85> 'int' '&&'
|   |   | |-BinaryOperator 0x13afbcea310 <col:14, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x13afbcea2e0 <.//openssl//file_jk/after\test\ssltest_old.c:2927:14> 'const char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13afbcea238 <col:14> 'const char *' lvalue Var 0x13afbc8b618 'should_negotiate' 'const char *'
|   |   | | `-ImplicitCastExpr 0x13afbcea2f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   |   | |   `-ParenExpr 0x13afbcea2c0 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x13afbcea298 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x13afbcea258 <col:26> 'int' 0
|   |   | `-BinaryOperator 0x13afbcea480 <.//openssl//file_jk/after\test\ssltest_old.c:2927:42, col:85> 'int' '=='
|   |   |   |-CallExpr 0x13afbcea3e0 <col:42, col:80> 'int'
|   |   |   | |-ImplicitCastExpr 0x13afbcea3c8 <col:42> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x13afbcea330 <col:42> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
|   |   |   | |-ImplicitCastExpr 0x13afbcea410 <col:49> 'const char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x13afbcea350 <col:49> 'const char *' lvalue Var 0x13afbc8b618 'should_negotiate' 'const char *'
|   |   |   | `-ImplicitCastExpr 0x13afbcea440 <col:67> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x13afbcea428 <col:67> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x13afbcea370 <col:67> 'char [12]' lvalue "fail-server"
|   |   |   `-IntegerLiteral 0x13afbcea458 <col:85> 'int' 0
|   |   `-BinaryOperator 0x13afbcea600 <line:2928:9, col:42> 'int' '='
|   |     |-DeclRefExpr 0x13afbcea4c0 <col:9> 'int' lvalue Var 0x13afbcd3e00 'ret' 'int'
|   |     `-ConditionalOperator 0x13afbcea5d0 <col:15, col:42> 'int'
|   |       |-ParenExpr 0x13afbcea560 <col:15, col:34> 'int'
|   |       | `-BinaryOperator 0x13afbcea540 <col:16, col:33> 'int' '!='
|   |       |   |-ImplicitCastExpr 0x13afbcea528 <col:16> 'int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x13afbcea4e0 <col:16> 'int' lvalue Var 0x13afbcd4988 'err_in_server' 'int'
|   |       |   `-IntegerLiteral 0x13afbcea500 <col:33> 'int' 0
|   |       |-IntegerLiteral 0x13afbcea580 <col:38> 'int' 0
|   |       `-IntegerLiteral 0x13afbcea5a8 <col:42> 'int' 1
|   `-ReturnStmt 0x13afbcea6b8 <line:2930:5, col:16>
|     `-ImplicitCastExpr 0x13afbcea6a0 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x13afbcea680 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x13afbcea660 <col:13> 'int' lvalue Var 0x13afbcd3e00 'ret' 'int'
|-FunctionDecl 0x13afbcea928 <line:2933:1, line:2966:1> line:2933:12 invalid verify_callback 'int (int, int *)' static
| |-ParmVarDecl 0x13afbcea808 <col:28, col:32> col:32 used ok 'int'
| |-ParmVarDecl 0x13afbcea888 <col:36, col:52> col:52 invalid ctx 'int *'
| `-CompoundStmt 0x13afbcebba0 <line:2934:1, line:2966:1>
|   |-DeclStmt 0x13afbceab88 <line:2935:5, col:22>
|   | |-VarDecl 0x13afbceaa08 <col:5, col:11> col:11 used s 'char *'
|   | `-VarDecl 0x13afbceab08 <col:5, col:21> col:14 used buf 'char [256]'
|   |-IfStmt 0x13afbceb530 <line:2939:5, line:2947:5>
|   | |-BinaryOperator 0x13afbceb078 <line:2939:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x13afbceb048 <.//openssl//file_jk/after\test\ssltest_old.c:2939:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbceafa0 <col:9> 'char *' lvalue Var 0x13afbceaa08 's' 'char *'
|   | | `-ImplicitCastExpr 0x13afbceb060 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x13afbceb028 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x13afbceb000 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x13afbceafc0 <col:26> 'int' 0
|   | `-CompoundStmt 0x13afbceb518 <.//openssl//file_jk/after\test\ssltest_old.c:2939:20, line:2947:5>
|   |   `-IfStmt 0x13afbceb4f0 <line:2940:9, line:2946:9> has_else
|   |     |-ImplicitCastExpr 0x13afbceb0d0 <line:2940:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x13afbceb098 <col:13> 'int' lvalue ParmVar 0x13afbcea808 'ok' 'int'
|   |     |-NullStmt 0x13afbceb4e8 <line:2941:13>
|   |     `-CompoundStmt 0x13afbceb4d8 <line:2942:14, line:2946:9>
|   |-IfStmt 0x13afbcebb20 <line:2949:5, line:2963:5>
|   | |-BinaryOperator 0x13afbceb5a8 <line:2949:9, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x13afbceb590 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbceb548 <col:9> 'int' lvalue ParmVar 0x13afbcea808 'ok' 'int'
|   | | `-IntegerLiteral 0x13afbceb568 <col:15> 'int' 0
|   | `-CompoundStmt 0x13afbcebb00 <col:18, line:2963:5>
|   |   |-DeclStmt 0x13afbceb668 <line:2950:9, col:46>
|   |   | `-VarDecl 0x13afbceb5e0 <col:9, col:13> col:13 used i 'int'
|   |   `-SwitchStmt 0x13afbceb6d0 <line:2952:9, line:2962:9>
|   |     |-ImplicitCastExpr 0x13afbceb6b8 <line:2952:17> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x13afbceb680 <col:17> 'int' lvalue Var 0x13afbceb5e0 'i' 'int'
|   |     `-CompoundStmt 0x13afbcebad0 <col:20, line:2962:9>
|   |       |-DefaultStmt 0x13afbceba38 <line:2953:9, line:2955:53>
|   |       | `-CallExpr 0x13afbceb9d0 <line:2954:13, line:2955:53> 'int'
|   |       |   |-ImplicitCastExpr 0x13afbceb9b8 <line:2954:13> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x13afbceb6f0 <col:13> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   |       |   |-ParenExpr 0x13afbceb7c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |       |   | `-UnaryOperator 0x13afbceb7b0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |       |   |   `-ArraySubscriptExpr 0x13afbceb790 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |       |   |     |-CallExpr 0x13afbceb748 <col:18, col:29> 'FILE *'
|   |       |   |     | `-ImplicitCastExpr 0x13afbceb730 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |       |   |     |   `-DeclRefExpr 0x13afbceb710 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |       |   |     `-IntegerLiteral 0x13afbceb768 <col:31> 'int' 2
|   |       |   |-ImplicitCastExpr 0x13afbceba20 <.//openssl//file_jk/after\test\ssltest_old.c:2954:29> 'const char *' <NoOp>
|   |       |   | `-ImplicitCastExpr 0x13afbceba08 <col:29> 'char *' <ArrayToPointerDecay>
|   |       |   |   `-StringLiteral 0x13afbceb7e8 <col:29> 'char [18]' lvalue "Error string: %s\n"
|   |       |   `-CallExpr 0x13afbceb960 <line:2955:21, col:52> 'int'
|   |       |     |-ImplicitCastExpr 0x13afbceb948 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |       |     | `-DeclRefExpr 0x13afbceb908 <col:21> 'int ()' Function 0x13afbceb840 'X509_verify_cert_error_string' 'int ()'
|   |       |     `-ImplicitCastExpr 0x13afbceb988 <col:51> 'int' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x13afbceb928 <col:51> 'int' lvalue Var 0x13afbceb5e0 'i' 'int'
|   |       |-BreakStmt 0x13afbceba58 <line:2956:13>
|   |       |-BinaryOperator 0x13afbcebaa8 <line:2960:13, col:18> 'int' '='
|   |       | |-DeclRefExpr 0x13afbceba60 <col:13> 'int' lvalue ParmVar 0x13afbcea808 'ok' 'int'
|   |       | `-IntegerLiteral 0x13afbceba80 <col:18> 'int' 1
|   |       `-BreakStmt 0x13afbcebac8 <line:2961:13>
|   `-ReturnStmt 0x13afbcebb90 <line:2965:5, col:15>
|     `-ImplicitCastExpr 0x13afbcebb78 <col:12, col:15> 'int' <LValueToRValue>
|       `-ParenExpr 0x13afbcebb58 <col:12, col:15> 'int' lvalue
|         `-DeclRefExpr 0x13afbcebb38 <col:13> 'int' lvalue ParmVar 0x13afbcea808 'ok' 'int'
|-FunctionDecl 0x13afbcebd08 <line:2968:1, line:2993:1> line:2968:12 invalid app_verify_callback 'int (int *, void *)' static
| |-ParmVarDecl 0x13afbcebbe8 <col:32, col:48> col:48 invalid ctx 'int *'
| |-ParmVarDecl 0x13afbcebc68 <col:53, col:59> col:59 used arg 'void *'
| `-CompoundStmt 0x13afbcdcaa8 <line:2969:1, line:2993:1>
|   |-DeclStmt 0x13afbcebe78 <line:2970:5, col:15>
|   | `-VarDecl 0x13afbcebde8 <col:5, col:14> col:9 used ok 'int' cinit
|   |   `-IntegerLiteral 0x13afbcebe50 <col:14> 'int' 1
|   |-DeclStmt 0x13afbcdbf38 <line:2971:5, col:40>
|   | `-VarDecl 0x13afbcdbe68 <col:5, col:37> col:28 used cb_arg 'struct app_verify_arg *' cinit
|   |   `-ImplicitCastExpr 0x13afbcdbf20 <col:37> 'struct app_verify_arg *' <BitCast>
|   |     `-ImplicitCastExpr 0x13afbcdbf08 <col:37> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x13afbcdbed0 <col:37> 'void *' lvalue ParmVar 0x13afbcebc68 'arg' 'void *'
|   |-IfStmt 0x13afbcdc8e0 <line:2973:5, line:2988:5>
|   | |-ImplicitCastExpr 0x13afbcdbfd0 <line:2973:9, col:17> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x13afbcdbfa0 <col:9, col:17> 'int' lvalue ->app_verify 0x13afbd7e068
|   | |   `-ImplicitCastExpr 0x13afbcdbf88 <col:9> 'struct app_verify_arg *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x13afbcdbf50 <col:9> 'struct app_verify_arg *' lvalue Var 0x13afbcdbe68 'cb_arg' 'struct app_verify_arg *'
|   | `-CompoundStmt 0x13afbcdc8a8 <col:29, line:2988:5>
|   |   |-DeclStmt 0x13afbcdc1e8 <line:2974:9, col:33>
|   |   | |-VarDecl 0x13afbcdc000 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\test\ssltest_old.c:2974:15 used s 'char *' cinit
|   |   | | `-ImplicitCastExpr 0x13afbcdc0f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |   | |   `-ParenExpr 0x13afbcdc0d0 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x13afbcdc0a8 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x13afbcdc068 <col:26> 'int' 0
|   |   | `-VarDecl 0x13afbcdc168 <.//openssl//file_jk/after\test\ssltest_old.c:2974:9, col:32> col:25 used buf 'char [256]'
|   |   |-CallExpr 0x13afbcdc3a0 <line:2977:9, col:57> 'int'
|   |   | |-ImplicitCastExpr 0x13afbcdc388 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13afbcdc310 <col:9> 'int (const char *, ...)' Function 0x13afbbc9990 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x13afbcdc3e0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x13afbcdc3c8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x13afbcdc330 <col:16> 'char [40]' lvalue "In app_verify_callback, allowing cert. "
|   |   |-CallExpr 0x13afbcdc4d8 <line:2978:9, col:46> 'int'
|   |   | |-ImplicitCastExpr 0x13afbcdc4c0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x13afbcdc3f8 <col:9> 'int (const char *, ...)' Function 0x13afbbc9990 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x13afbcdc520 <col:16> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x13afbcdc508 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x13afbcdc418 <col:16> 'char [12]' lvalue "Arg is: %s\n"
|   |   | `-ImplicitCastExpr 0x13afbcdc538 <col:32, col:40> 'char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x13afbcdc478 <col:32, col:40> 'char *' lvalue ->string 0x13afbd7dff8
|   |   |     `-ImplicitCastExpr 0x13afbcdc460 <col:32> 'struct app_verify_arg *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x13afbcdc440 <col:32> 'struct app_verify_arg *' lvalue Var 0x13afbcdbe68 'cb_arg' 'struct app_verify_arg *'
|   |   |-IfStmt 0x13afbcdc838 <line:2983:9, line:2986:9>
|   |   | |-BinaryOperator 0x13afbcdc778 <line:2983:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x13afbcdc748 <.//openssl//file_jk/after\test\ssltest_old.c:2983:13> 'char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x13afbcdc6a0 <col:13> 'char *' lvalue Var 0x13afbcdc000 's' 'char *'
|   |   | | `-ImplicitCastExpr 0x13afbcdc760 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |   | |   `-ParenExpr 0x13afbcdc728 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x13afbcdc700 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x13afbcdc6c0 <col:26> 'int' 0
|   |   | `-CompoundStmt 0x13afbcdc828 <.//openssl//file_jk/after\test\ssltest_old.c:2983:24, line:2986:9>
|   |   `-ReturnStmt 0x13afbcdc898 <line:2987:9, col:18>
|   |     `-ParenExpr 0x13afbcdc878 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x13afbcdc850 <col:17> 'int' 1
|   `-ReturnStmt 0x13afbcdca98 <line:2992:5, col:15>
|     `-ImplicitCastExpr 0x13afbcdca80 <col:12, col:15> 'int' <LValueToRValue>
|       `-ParenExpr 0x13afbcdca60 <col:12, col:15> 'int' lvalue
|         `-DeclRefExpr 0x13afbcdca40 <col:13> 'int' lvalue Var 0x13afbcebde8 'ok' 'int'
|-FunctionDecl 0x13afbcdcb30 <line:3003:1, line:3035:1> line:3003:12 invalid get_dh512 'int *()' static
| `-CompoundStmt 0x13afbced1f0 <line:3004:1, line:3035:1>
|   |-DeclStmt 0x13afbcec3f8 <line:3005:5, line:3017:6>
|   | `-VarDecl 0x13afbcdcc40 <line:3005:5, line:3017:5> line:3005:26 used dh512_p 'unsigned char [64]' static cinit
|   |   `-InitListExpr 0x13afbcdd8f8 <col:38, line:3017:5> 'unsigned char [64]'
|   |     |-ImplicitCastExpr 0x13afbcdd938 <line:3006:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdcca8 <col:9> 'int' 203
|   |     |-ImplicitCastExpr 0x13afbcdd958 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdccd0 <col:15> 'int' 200
|   |     |-ImplicitCastExpr 0x13afbcdd980 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdccf8 <col:21> 'int' 225
|   |     |-ImplicitCastExpr 0x13afbcdd9b8 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdcd20 <col:27> 'int' 134
|   |     |-ImplicitCastExpr 0x13afbcdd9d0 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdcd48 <col:33> 'int' 208
|   |     |-ImplicitCastExpr 0x13afbcdda28 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdcd70 <col:39> 'int' 31
|   |     |-ImplicitCastExpr 0x13afbcdda40 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdcd98 <col:45> 'int' 148
|   |     |-ImplicitCastExpr 0x13afbcdda58 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdcdc0 <col:51> 'int' 23
|   |     |-ImplicitCastExpr 0x13afbcdda70 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdcde8 <col:57> 'int' 166
|   |     |-ImplicitCastExpr 0x13afbcddb08 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdce10 <col:63> 'int' 153
|   |     |-ImplicitCastExpr 0x13afbcddb20 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdce38 <col:69> 'int' 240
|   |     |-ImplicitCastExpr 0x13afbcddb38 <line:3007:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdce60 <col:9> 'int' 198
|   |     |-ImplicitCastExpr 0x13afbcddb50 <line:3008:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdce88 <col:9> 'int' 31
|   |     |-ImplicitCastExpr 0x13afbcddb68 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdceb0 <col:15> 'int' 13
|   |     |-ImplicitCastExpr 0x13afbcddb80 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdced8 <col:21> 'int' 172
|   |     |-ImplicitCastExpr 0x13afbcddb98 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdcf00 <col:27> 'int' 182
|   |     |-ImplicitCastExpr 0x13afbcddbb0 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdcf28 <col:33> 'int' 37
|   |     |-ImplicitCastExpr 0x13afbcddcc8 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdcf50 <col:39> 'int' 62
|   |     |-ImplicitCastExpr 0x13afbcddce0 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdcf78 <col:45> 'int' 6
|   |     |-ImplicitCastExpr 0x13afbcddcf8 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdcfa0 <col:51> 'int' 57
|   |     |-ImplicitCastExpr 0x13afbcddd10 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdcfc8 <col:57> 'int' 202
|   |     |-ImplicitCastExpr 0x13afbcddd28 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdcff0 <col:63> 'int' 114
|   |     |-ImplicitCastExpr 0x13afbcddd40 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd018 <col:69> 'int' 4
|   |     |-ImplicitCastExpr 0x13afbcddd58 <line:3009:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd040 <col:9> 'int' 176
|   |     |-ImplicitCastExpr 0x13afbcddd70 <line:3010:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd068 <col:9> 'int' 110
|   |     |-ImplicitCastExpr 0x13afbcddd88 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd090 <col:15> 'int' 218
|   |     |-ImplicitCastExpr 0x13afbcddda0 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd0b8 <col:21> 'int' 192
|   |     |-ImplicitCastExpr 0x13afbcdddb8 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd0e0 <col:27> 'int' 97
|   |     |-ImplicitCastExpr 0x13afbcdddd0 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd108 <col:33> 'int' 230
|   |     |-ImplicitCastExpr 0x13afbcddde8 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd130 <col:39> 'int' 122
|   |     |-ImplicitCastExpr 0x13afbcdde00 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd158 <col:45> 'int' 119
|   |     |-ImplicitCastExpr 0x13afbcdde18 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd180 <col:51> 'int' 37
|   |     |-ImplicitCastExpr 0x13afbcebec0 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd1a8 <col:57> 'int' 232
|   |     |-ImplicitCastExpr 0x13afbcec0d8 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd1d0 <col:63> 'int' 59
|   |     |-ImplicitCastExpr 0x13afbcec0f0 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd1f8 <col:69> 'int' 185
|   |     |-ImplicitCastExpr 0x13afbcec108 <line:3011:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd220 <col:9> 'int' 95
|   |     |-ImplicitCastExpr 0x13afbcec120 <line:3012:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd248 <col:9> 'int' 154
|   |     |-ImplicitCastExpr 0x13afbcec138 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd270 <col:15> 'int' 182
|   |     |-ImplicitCastExpr 0x13afbcec150 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd298 <col:21> 'int' 181
|   |     |-ImplicitCastExpr 0x13afbcec168 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd2c0 <col:27> 'int' 254
|   |     |-ImplicitCastExpr 0x13afbcec180 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd2e8 <col:33> 'int' 153
|   |     |-ImplicitCastExpr 0x13afbcec198 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd310 <col:39> 'int' 11
|   |     |-ImplicitCastExpr 0x13afbcec1b0 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd338 <col:45> 'int' 161
|   |     |-ImplicitCastExpr 0x13afbcec1c8 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd360 <col:51> 'int' 147
|   |     |-ImplicitCastExpr 0x13afbcec1e0 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd388 <col:57> 'int' 78
|   |     |-ImplicitCastExpr 0x13afbcec1f8 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd3b0 <col:63> 'int' 53
|   |     |-ImplicitCastExpr 0x13afbcec210 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd3d8 <col:69> 'int' 51
|   |     |-ImplicitCastExpr 0x13afbcec228 <line:3013:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd400 <col:9> 'int' 184
|   |     |-ImplicitCastExpr 0x13afbcec240 <line:3014:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd428 <col:9> 'int' 225
|   |     |-ImplicitCastExpr 0x13afbcec258 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd450 <col:15> 'int' 241
|   |     |-ImplicitCastExpr 0x13afbcec270 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd478 <col:21> 'int' 19
|   |     |-ImplicitCastExpr 0x13afbcec288 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd4a0 <col:27> 'int' 79
|   |     |-ImplicitCastExpr 0x13afbcec2a0 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd4c8 <col:33> 'int' 89
|   |     |-ImplicitCastExpr 0x13afbcec2b8 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd4f0 <col:39> 'int' 26
|   |     |-ImplicitCastExpr 0x13afbcec2d0 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd518 <col:45> 'int' 210
|   |     |-ImplicitCastExpr 0x13afbcec2e8 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd540 <col:51> 'int' 87
|   |     |-ImplicitCastExpr 0x13afbcec300 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd568 <col:57> 'int' 192
|   |     |-ImplicitCastExpr 0x13afbcec318 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd590 <col:63> 'int' 38
|   |     |-ImplicitCastExpr 0x13afbcec330 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd5b8 <col:69> 'int' 33
|   |     |-ImplicitCastExpr 0x13afbcec348 <line:3015:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd5e0 <col:9> 'int' 51
|   |     |-ImplicitCastExpr 0x13afbcec360 <line:3016:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd608 <col:9> 'int' 2
|   |     |-ImplicitCastExpr 0x13afbcec378 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd630 <col:15> 'int' 197
|   |     |-ImplicitCastExpr 0x13afbcec390 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcdd658 <col:21> 'int' 174
|   |     `-ImplicitCastExpr 0x13afbcec3a8 <col:27> 'unsigned char' <IntegralCast>
|   |       `-IntegerLiteral 0x13afbcdd680 <col:27> 'int' 35
|   |-DeclStmt 0x13afbcec5b8 <line:3018:5, line:3020:6>
|   | `-VarDecl 0x13afbcec438 <line:3018:5, line:3020:5> line:3018:26 used dh512_g 'unsigned char [1]' static cinit
|   |   `-InitListExpr 0x13afbcec520 <col:38, line:3020:5> 'unsigned char [1]'
|   |     `-ImplicitCastExpr 0x13afbcec560 <line:3019:9> 'unsigned char' <IntegralCast>
|   |       `-IntegerLiteral 0x13afbcec4a0 <col:9> 'int' 2
|   |-IfStmt 0x13afbcec888 <line:3024:5, line:3025:21>
|   | |-OpaqueValueExpr 0x13afbcec870 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x13afbcec860 <col:9, col:21>
|   |   `-ImplicitCastExpr 0x13afbcec848 <col:16, col:21> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x13afbcec828 <col:16, col:21> 'void *'
|   |       `-ParenExpr 0x13afbcec808 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x13afbcec7e0 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x13afbcec7a0 <col:26> 'int' 0
|   `-IfStmt 0x13afbced1d8 <.//openssl//file_jk/after\test\ssltest_old.c:3028:5, line:3033:5>
|     |-OpaqueValueExpr 0x13afbced1c0 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x13afbced1a8 <line:3028:69, line:3033:5>
|       `-ReturnStmt 0x13afbced198 <line:3032:9, col:21>
|         `-ImplicitCastExpr 0x13afbced180 <col:16, col:21> 'int *' <NullToPointer>
|           `-ParenExpr 0x13afbced160 <col:16, col:21> 'void *'
|             `-ParenExpr 0x13afbced140 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|               `-CStyleCastExpr 0x13afbced118 <col:18, col:26> 'void *' <NullToPointer>
|                 `-IntegerLiteral 0x13afbced0d8 <col:26> 'int' 0
|-FunctionDecl 0x13afbced248 <.//openssl//file_jk/after\test\ssltest_old.c:3037:1, line:3079:1> line:3037:12 invalid get_dh1024 'int *()' static
| `-CompoundStmt 0x13afbcfcaf8 <line:3038:1, line:3079:1>
|   |-DeclStmt 0x13afbcfc0f8 <line:3039:5, line:3061:6>
|   | `-VarDecl 0x13afbced328 <line:3039:5, line:3061:5> line:3039:26 used dh1024_p 'unsigned char [128]' static cinit
|   |   `-InitListExpr 0x13afbcf2c28 <col:39, line:3061:5> 'unsigned char [128]'
|   |     |-ImplicitCastExpr 0x13afbcf2c68 <line:3040:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced390 <col:9> 'int' 248
|   |     |-ImplicitCastExpr 0x13afbcf2c88 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced3b8 <col:15> 'int' 129
|   |     |-ImplicitCastExpr 0x13afbcf2cb0 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced3e0 <col:21> 'int' 137
|   |     |-ImplicitCastExpr 0x13afbcf2ce8 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced408 <col:27> 'int' 125
|   |     |-ImplicitCastExpr 0x13afbcf2d00 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced430 <col:33> 'int' 20
|   |     |-ImplicitCastExpr 0x13afbcf2d58 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced458 <col:39> 'int' 36
|   |     |-ImplicitCastExpr 0x13afbcf2d70 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced480 <col:45> 'int' 197
|   |     |-ImplicitCastExpr 0x13afbcf2d88 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced4a8 <col:51> 'int' 209
|   |     |-ImplicitCastExpr 0x13afbcf2da0 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced4d0 <col:57> 'int' 230
|   |     |-ImplicitCastExpr 0x13afbcf2e38 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced4f8 <col:63> 'int' 247
|   |     |-ImplicitCastExpr 0x13afbcf2e50 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced520 <col:69> 'int' 191
|   |     |-ImplicitCastExpr 0x13afbcf2e68 <line:3041:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced548 <col:9> 'int' 58
|   |     |-ImplicitCastExpr 0x13afbcf2e80 <line:3042:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced570 <col:9> 'int' 228
|   |     |-ImplicitCastExpr 0x13afbcf2e98 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced598 <col:15> 'int' 144
|   |     |-ImplicitCastExpr 0x13afbcf2eb0 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced5c0 <col:21> 'int' 244
|   |     |-ImplicitCastExpr 0x13afbcf2ec8 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced5e8 <col:27> 'int' 252
|   |     |-ImplicitCastExpr 0x13afbcf2ee0 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced610 <col:33> 'int' 115
|   |     |-ImplicitCastExpr 0x13afbcf2ff8 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced638 <col:39> 'int' 251
|   |     |-ImplicitCastExpr 0x13afbcf3010 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced660 <col:45> 'int' 52
|   |     |-ImplicitCastExpr 0x13afbcf3028 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced688 <col:51> 'int' 181
|   |     |-ImplicitCastExpr 0x13afbcf3040 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced6b0 <col:57> 'int' 250
|   |     |-ImplicitCastExpr 0x13afbcf3058 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced6d8 <col:63> 'int' 76
|   |     |-ImplicitCastExpr 0x13afbcf3070 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced700 <col:69> 'int' 86
|   |     |-ImplicitCastExpr 0x13afbcf3088 <line:3043:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced728 <col:9> 'int' 162
|   |     |-ImplicitCastExpr 0x13afbcf30a0 <line:3044:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced750 <col:9> 'int' 234
|   |     |-ImplicitCastExpr 0x13afbcf30b8 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced778 <col:15> 'int' 167
|   |     |-ImplicitCastExpr 0x13afbcf30d0 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced7a0 <col:21> 'int' 233
|   |     |-ImplicitCastExpr 0x13afbcf30e8 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced7c8 <col:27> 'int' 192
|   |     |-ImplicitCastExpr 0x13afbcf3100 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced7f0 <col:33> 'int' 192
|   |     |-ImplicitCastExpr 0x13afbcf3118 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced818 <col:39> 'int' 206
|   |     |-ImplicitCastExpr 0x13afbcf3130 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced840 <col:45> 'int' 137
|   |     |-ImplicitCastExpr 0x13afbcf3148 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced868 <col:51> 'int' 225
|   |     |-ImplicitCastExpr 0x13afbcf3160 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced890 <col:57> 'int' 250
|   |     |-ImplicitCastExpr 0x13afbcf3378 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced8b8 <col:63> 'int' 99
|   |     |-ImplicitCastExpr 0x13afbcf3390 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced8e0 <col:69> 'int' 63
|   |     |-ImplicitCastExpr 0x13afbcf33a8 <line:3045:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced908 <col:9> 'int' 176
|   |     |-ImplicitCastExpr 0x13afbcf33c0 <line:3046:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced930 <col:9> 'int' 107
|   |     |-ImplicitCastExpr 0x13afbcf33d8 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced958 <col:15> 'int' 50
|   |     |-ImplicitCastExpr 0x13afbcf33f0 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced980 <col:21> 'int' 102
|   |     |-ImplicitCastExpr 0x13afbcf3408 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced9a8 <col:27> 'int' 241
|   |     |-ImplicitCastExpr 0x13afbcf3420 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced9d0 <col:33> 'int' 209
|   |     |-ImplicitCastExpr 0x13afbcf3438 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbced9f8 <col:39> 'int' 123
|   |     |-ImplicitCastExpr 0x13afbcf3450 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbceda20 <col:45> 'int' 176
|   |     |-ImplicitCastExpr 0x13afbcf3468 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbceda48 <col:51> 'int' 0
|   |     |-ImplicitCastExpr 0x13afbcf3480 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbceda70 <col:57> 'int' 143
|   |     |-ImplicitCastExpr 0x13afbcf3498 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbceda98 <col:63> 'int' 202
|   |     |-ImplicitCastExpr 0x13afbcf34b0 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcedac0 <col:69> 'int' 135
|   |     |-ImplicitCastExpr 0x13afbcf34c8 <line:3047:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcedae8 <col:9> 'int' 194
|   |     |-ImplicitCastExpr 0x13afbcf34e0 <line:3048:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcedb10 <col:9> 'int' 174
|   |     |-ImplicitCastExpr 0x13afbcf34f8 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcedb38 <col:15> 'int' 152
|   |     |-ImplicitCastExpr 0x13afbcf3510 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcedb60 <col:21> 'int' 137
|   |     |-ImplicitCastExpr 0x13afbcf3528 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcedb88 <col:27> 'int' 38
|   |     |-ImplicitCastExpr 0x13afbcf3540 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcedbb0 <col:33> 'int' 23
|   |     |-ImplicitCastExpr 0x13afbcf3558 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcedbd8 <col:39> 'int' 194
|   |     |-ImplicitCastExpr 0x13afbcf3570 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcedc00 <col:45> 'int' 5
|   |     |-ImplicitCastExpr 0x13afbcf3588 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcedc28 <col:51> 'int' 210
|   |     |-ImplicitCastExpr 0x13afbcf35a0 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcedc50 <col:57> 'int' 236
|   |     |-ImplicitCastExpr 0x13afbcf35b8 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcedc78 <col:63> 'int' 8
|   |     |-ImplicitCastExpr 0x13afbcf35d0 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcedca0 <col:69> 'int' 208
|   |     |-ImplicitCastExpr 0x13afbcf35e8 <line:3049:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcedcc8 <col:9> 'int' 140
|   |     |-ImplicitCastExpr 0x13afbcf3600 <line:3050:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcedcf0 <col:9> 'int' 255
|   |     |-ImplicitCastExpr 0x13afbcf3618 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcedd18 <col:15> 'int' 23
|   |     |-ImplicitCastExpr 0x13afbcf3630 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcedd40 <col:21> 'int' 82
|   |     |-ImplicitCastExpr 0x13afbcf3648 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcedd68 <col:27> 'int' 140
|   |     |-ImplicitCastExpr 0x13afbcf3660 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcedd90 <col:33> 'int' 197
|   |     |-ImplicitCastExpr 0x13afbcf3a78 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbceddb8 <col:39> 'int' 7
|   |     |-ImplicitCastExpr 0x13afbcf3a90 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcedde0 <col:45> 'int' 147
|   |     |-ImplicitCastExpr 0x13afbcf3aa8 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcede08 <col:51> 'int' 3
|   |     |-ImplicitCastExpr 0x13afbcf3ac0 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcede30 <col:57> 'int' 177
|   |     |-ImplicitCastExpr 0x13afbcf3ad8 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcede58 <col:63> 'int' 246
|   |     |-ImplicitCastExpr 0x13afbcf3af0 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcede80 <col:69> 'int' 47
|   |     |-ImplicitCastExpr 0x13afbcf3b08 <line:3051:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf1ef0 <col:9> 'int' 184
|   |     |-ImplicitCastExpr 0x13afbcf3b20 <line:3052:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf1f18 <col:9> 'int' 28
|   |     |-ImplicitCastExpr 0x13afbcf3b38 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf1f40 <col:15> 'int' 82
|   |     |-ImplicitCastExpr 0x13afbcf3b50 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf1f68 <col:21> 'int' 71
|   |     |-ImplicitCastExpr 0x13afbcf3b68 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf1f90 <col:27> 'int' 39
|   |     |-ImplicitCastExpr 0x13afbcf3b80 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf1fb8 <col:33> 'int' 27
|   |     |-ImplicitCastExpr 0x13afbcf3b98 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf1fe0 <col:39> 'int' 219
|   |     |-ImplicitCastExpr 0x13afbcf3bb0 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2008 <col:45> 'int' 209
|   |     |-ImplicitCastExpr 0x13afbcf3bc8 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2030 <col:51> 'int' 141
|   |     |-ImplicitCastExpr 0x13afbcf3be0 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2058 <col:57> 'int' 157
|   |     |-ImplicitCastExpr 0x13afbcf3bf8 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2080 <col:63> 'int' 105
|   |     |-ImplicitCastExpr 0x13afbcf3c10 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf20a8 <col:69> 'int' 29
|   |     |-ImplicitCastExpr 0x13afbcf3c28 <line:3053:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf20d0 <col:9> 'int' 82
|   |     |-ImplicitCastExpr 0x13afbcf3c40 <line:3054:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf20f8 <col:9> 'int' 75
|   |     |-ImplicitCastExpr 0x13afbcf3c58 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2120 <col:15> 'int' 50
|   |     |-ImplicitCastExpr 0x13afbcf3c70 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2148 <col:21> 'int' 129
|   |     |-ImplicitCastExpr 0x13afbcf3c88 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2170 <col:27> 'int' 170
|   |     |-ImplicitCastExpr 0x13afbcf3ca0 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2198 <col:33> 'int' 127
|   |     |-ImplicitCastExpr 0x13afbcf3cb8 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf21c0 <col:39> 'int' 0
|   |     |-ImplicitCastExpr 0x13afbcf3cd0 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf21e8 <col:45> 'int' 200
|   |     |-ImplicitCastExpr 0x13afbcf3ce8 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2210 <col:51> 'int' 220
|   |     |-ImplicitCastExpr 0x13afbcf3d00 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2238 <col:57> 'int' 230
|   |     |-ImplicitCastExpr 0x13afbcf3d18 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2260 <col:63> 'int' 217
|   |     |-ImplicitCastExpr 0x13afbcf3d30 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2288 <col:69> 'int' 204
|   |     |-ImplicitCastExpr 0x13afbcf3d48 <line:3055:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf22b0 <col:9> 'int' 193
|   |     |-ImplicitCastExpr 0x13afbcf3d60 <line:3056:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf22d8 <col:9> 'int' 17
|   |     |-ImplicitCastExpr 0x13afbcf3d78 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2300 <col:15> 'int' 45
|   |     |-ImplicitCastExpr 0x13afbcf3d90 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2328 <col:21> 'int' 55
|   |     |-ImplicitCastExpr 0x13afbcf3da8 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2350 <col:27> 'int' 52
|   |     |-ImplicitCastExpr 0x13afbcf3dc0 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2378 <col:33> 'int' 108
|   |     |-ImplicitCastExpr 0x13afbcf3dd8 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf23a0 <col:39> 'int' 234
|   |     |-ImplicitCastExpr 0x13afbcf3df0 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf23c8 <col:45> 'int' 2
|   |     |-ImplicitCastExpr 0x13afbcf3e08 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf23f0 <col:51> 'int' 151
|   |     |-ImplicitCastExpr 0x13afbcf3e20 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2418 <col:57> 'int' 75
|   |     |-ImplicitCastExpr 0x13afbcf3e38 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2440 <col:63> 'int' 14
|   |     |-ImplicitCastExpr 0x13afbcf3e50 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2468 <col:69> 'int' 187
|   |     |-ImplicitCastExpr 0x13afbcf3e68 <line:3057:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2490 <col:9> 'int' 177
|   |     |-ImplicitCastExpr 0x13afbcf3e80 <line:3058:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf24b8 <col:9> 'int' 113
|   |     |-ImplicitCastExpr 0x13afbcf3e98 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf24e0 <col:15> 'int' 51
|   |     |-ImplicitCastExpr 0x13afbcf3eb0 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2508 <col:21> 'int' 9
|   |     |-ImplicitCastExpr 0x13afbcf3ec8 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2530 <col:27> 'int' 21
|   |     |-ImplicitCastExpr 0x13afbcfbf40 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2558 <col:33> 'int' 253
|   |     |-ImplicitCastExpr 0x13afbcfbf58 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2580 <col:39> 'int' 221
|   |     |-ImplicitCastExpr 0x13afbcfbf70 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf25a8 <col:45> 'int' 35
|   |     |-ImplicitCastExpr 0x13afbcfbf88 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf25d0 <col:51> 'int' 135
|   |     |-ImplicitCastExpr 0x13afbcfbfa0 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf25f8 <col:57> 'int' 7
|   |     |-ImplicitCastExpr 0x13afbcfbfb8 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2620 <col:63> 'int' 94
|   |     |-ImplicitCastExpr 0x13afbcfbfd0 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2648 <col:69> 'int' 137
|   |     |-ImplicitCastExpr 0x13afbcfbfe8 <line:3059:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2670 <col:9> 'int' 171
|   |     |-ImplicitCastExpr 0x13afbcfc000 <line:3060:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2698 <col:9> 'int' 107
|   |     |-ImplicitCastExpr 0x13afbcfc018 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf26c0 <col:15> 'int' 124
|   |     |-ImplicitCastExpr 0x13afbcfc030 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf26e8 <col:21> 'int' 95
|   |     |-ImplicitCastExpr 0x13afbcfc048 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2710 <col:27> 'int' 236
|   |     |-ImplicitCastExpr 0x13afbcfc060 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2738 <col:33> 'int' 166
|   |     |-ImplicitCastExpr 0x13afbcfc078 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2760 <col:39> 'int' 36
|   |     |-ImplicitCastExpr 0x13afbcfc090 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf2788 <col:45> 'int' 220
|   |     `-ImplicitCastExpr 0x13afbcfc0a8 <col:51> 'unsigned char' <IntegralCast>
|   |       `-IntegerLiteral 0x13afbcf27b0 <col:51> 'int' 83
|   |-DeclStmt 0x13afbcfc280 <line:3062:5, line:3064:6>
|   | `-VarDecl 0x13afbcfc138 <line:3062:5, line:3064:5> line:3062:26 used dh1024_g 'unsigned char [1]' static cinit
|   |   `-InitListExpr 0x13afbcfc220 <col:39, line:3064:5> 'unsigned char [1]'
|   |     `-ImplicitCastExpr 0x13afbcfc260 <line:3063:9> 'unsigned char' <IntegralCast>
|   |       `-IntegerLiteral 0x13afbcfc1a0 <col:9> 'int' 2
|   |-IfStmt 0x13afbcfc460 <line:3068:5, line:3069:21>
|   | |-OpaqueValueExpr 0x13afbcfc448 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x13afbcfc438 <col:9, col:21>
|   |   `-ImplicitCastExpr 0x13afbcfc420 <col:16, col:21> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x13afbcfc400 <col:16, col:21> 'void *'
|   |       `-ParenExpr 0x13afbcfc3e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x13afbcfc3b8 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x13afbcfc378 <col:26> 'int' 0
|   `-IfStmt 0x13afbcfcae0 <.//openssl//file_jk/after\test\ssltest_old.c:3072:5, line:3077:5>
|     |-OpaqueValueExpr 0x13afbcfcac8 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x13afbcfcab0 <line:3072:69, line:3077:5>
|       `-ReturnStmt 0x13afbcfcaa0 <line:3076:9, col:21>
|         `-ImplicitCastExpr 0x13afbcfca88 <col:16, col:21> 'int *' <NullToPointer>
|           `-ParenExpr 0x13afbcfca68 <col:16, col:21> 'void *'
|             `-ParenExpr 0x13afbcfca48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|               `-CStyleCastExpr 0x13afbcfca20 <col:18, col:26> 'void *' <NullToPointer>
|                 `-IntegerLiteral 0x13afbcfc9e0 <col:26> 'int' 0
|-FunctionDecl 0x13afbcfcb50 <.//openssl//file_jk/after\test\ssltest_old.c:3081:1, line:3144:1> line:3081:12 invalid get_dh1024dsa 'int *()' static
| `-CompoundStmt 0x13afbcf72a8 <line:3082:1, line:3144:1>
|   |-DeclStmt 0x13afbcef8c0 <line:3083:5, line:3105:6>
|   | `-VarDecl 0x13afbcfcc30 <line:3083:5, line:3105:5> line:3083:26 used dh1024_p 'unsigned char [128]' static cinit
|   |   `-InitListExpr 0x13afbcee488 <col:39, line:3105:5> 'unsigned char [128]'
|   |     |-ImplicitCastExpr 0x13afbcee4c8 <line:3084:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfcc98 <col:9> 'int' 200
|   |     |-ImplicitCastExpr 0x13afbcee4e8 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfccc0 <col:15> 'int' 0
|   |     |-ImplicitCastExpr 0x13afbcee510 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfcce8 <col:21> 'int' 247
|   |     |-ImplicitCastExpr 0x13afbcee548 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfcd10 <col:27> 'int' 8
|   |     |-ImplicitCastExpr 0x13afbcee560 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfcd38 <col:33> 'int' 7
|   |     |-ImplicitCastExpr 0x13afbcee5b8 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfcd60 <col:39> 'int' 137
|   |     |-ImplicitCastExpr 0x13afbcee5d0 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfcd88 <col:45> 'int' 77
|   |     |-ImplicitCastExpr 0x13afbcee5e8 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfcdb0 <col:51> 'int' 144
|   |     |-ImplicitCastExpr 0x13afbcee600 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfcdd8 <col:57> 'int' 83
|   |     |-ImplicitCastExpr 0x13afbcee698 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfce00 <col:63> 'int' 243
|   |     |-ImplicitCastExpr 0x13afbcee6b0 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfce28 <col:69> 'int' 213
|   |     |-ImplicitCastExpr 0x13afbcee6c8 <line:3085:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfce50 <col:9> 'int' 0
|   |     |-ImplicitCastExpr 0x13afbcee6e0 <line:3086:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfce78 <col:9> 'int' 33
|   |     |-ImplicitCastExpr 0x13afbcee6f8 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfcea0 <col:15> 'int' 27
|   |     |-ImplicitCastExpr 0x13afbcee710 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfcec8 <col:21> 'int' 247
|   |     |-ImplicitCastExpr 0x13afbcee728 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfcef0 <col:27> 'int' 49
|   |     |-ImplicitCastExpr 0x13afbcee740 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfcf18 <col:33> 'int' 166
|   |     |-ImplicitCastExpr 0x13afbcee858 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfcf40 <col:39> 'int' 162
|   |     |-ImplicitCastExpr 0x13afbcee870 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfcf68 <col:45> 'int' 218
|   |     |-ImplicitCastExpr 0x13afbcee888 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfcf90 <col:51> 'int' 35
|   |     |-ImplicitCastExpr 0x13afbcee8a0 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfcfb8 <col:57> 'int' 154
|   |     |-ImplicitCastExpr 0x13afbcee8b8 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfcfe0 <col:63> 'int' 199
|   |     |-ImplicitCastExpr 0x13afbcee8d0 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd008 <col:69> 'int' 135
|   |     |-ImplicitCastExpr 0x13afbcee8e8 <line:3087:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd030 <col:9> 'int' 25
|   |     |-ImplicitCastExpr 0x13afbcee900 <line:3088:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd058 <col:9> 'int' 59
|   |     |-ImplicitCastExpr 0x13afbcee918 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd080 <col:15> 'int' 71
|   |     |-ImplicitCastExpr 0x13afbcee930 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd0a8 <col:21> 'int' 182
|   |     |-ImplicitCastExpr 0x13afbcee948 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd0d0 <col:27> 'int' 140
|   |     |-ImplicitCastExpr 0x13afbcee960 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd0f8 <col:33> 'int' 4
|   |     |-ImplicitCastExpr 0x13afbcee978 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd120 <col:39> 'int' 111
|   |     |-ImplicitCastExpr 0x13afbcee990 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd148 <col:45> 'int' 255
|   |     |-ImplicitCastExpr 0x13afbcee9a8 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd170 <col:51> 'int' 198
|   |     |-ImplicitCastExpr 0x13afbcee9c0 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd198 <col:57> 'int' 155
|   |     |-ImplicitCastExpr 0x13afbceebd8 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd1c0 <col:63> 'int' 184
|   |     |-ImplicitCastExpr 0x13afbceebf0 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd1e8 <col:69> 'int' 101
|   |     |-ImplicitCastExpr 0x13afbceec08 <line:3089:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd210 <col:9> 'int' 210
|   |     |-ImplicitCastExpr 0x13afbceec20 <line:3090:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd238 <col:9> 'int' 194
|   |     |-ImplicitCastExpr 0x13afbceec38 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd260 <col:15> 'int' 95
|   |     |-ImplicitCastExpr 0x13afbceec50 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd288 <col:21> 'int' 49
|   |     |-ImplicitCastExpr 0x13afbceec68 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd2b0 <col:27> 'int' 131
|   |     |-ImplicitCastExpr 0x13afbceec80 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd2d8 <col:33> 'int' 74
|   |     |-ImplicitCastExpr 0x13afbceec98 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd300 <col:39> 'int' 167
|   |     |-ImplicitCastExpr 0x13afbceecb0 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd328 <col:45> 'int' 95
|   |     |-ImplicitCastExpr 0x13afbceecc8 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd350 <col:51> 'int' 47
|   |     |-ImplicitCastExpr 0x13afbceece0 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd378 <col:57> 'int' 136
|   |     |-ImplicitCastExpr 0x13afbceecf8 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd3a0 <col:63> 'int' 56
|   |     |-ImplicitCastExpr 0x13afbceed10 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd3c8 <col:69> 'int' 182
|   |     |-ImplicitCastExpr 0x13afbceed28 <line:3091:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd3f0 <col:9> 'int' 85
|   |     |-ImplicitCastExpr 0x13afbceed40 <line:3092:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd418 <col:9> 'int' 207
|   |     |-ImplicitCastExpr 0x13afbceed58 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd440 <col:15> 'int' 217
|   |     |-ImplicitCastExpr 0x13afbceed70 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd468 <col:21> 'int' 135
|   |     |-ImplicitCastExpr 0x13afbceed88 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd490 <col:27> 'int' 109
|   |     |-ImplicitCastExpr 0x13afbceeda0 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd4b8 <col:33> 'int' 111
|   |     |-ImplicitCastExpr 0x13afbceedb8 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd4e0 <col:39> 'int' 159
|   |     |-ImplicitCastExpr 0x13afbceedd0 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd508 <col:45> 'int' 218
|   |     |-ImplicitCastExpr 0x13afbceede8 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd530 <col:51> 'int' 172
|   |     |-ImplicitCastExpr 0x13afbceee00 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd558 <col:57> 'int' 166
|   |     |-ImplicitCastExpr 0x13afbceee18 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd580 <col:63> 'int' 72
|   |     |-ImplicitCastExpr 0x13afbceee30 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd5a8 <col:69> 'int' 175
|   |     |-ImplicitCastExpr 0x13afbceee48 <line:3093:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd5d0 <col:9> 'int' 252
|   |     |-ImplicitCastExpr 0x13afbceee60 <line:3094:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd5f8 <col:9> 'int' 51
|   |     |-ImplicitCastExpr 0x13afbceee78 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd620 <col:15> 'int' 132
|   |     |-ImplicitCastExpr 0x13afbceee90 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd648 <col:21> 'int' 55
|   |     |-ImplicitCastExpr 0x13afbceeea8 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd670 <col:27> 'int' 91
|   |     |-ImplicitCastExpr 0x13afbceeec0 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd698 <col:33> 'int' 130
|   |     |-ImplicitCastExpr 0x13afbcef2d8 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd6c0 <col:39> 'int' 74
|   |     |-ImplicitCastExpr 0x13afbcef2f0 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd6e8 <col:45> 'int' 49
|   |     |-ImplicitCastExpr 0x13afbcef308 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd710 <col:51> 'int' 93
|   |     |-ImplicitCastExpr 0x13afbcef320 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd738 <col:57> 'int' 231
|   |     |-ImplicitCastExpr 0x13afbcef338 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd760 <col:63> 'int' 189
|   |     |-ImplicitCastExpr 0x13afbcef350 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd788 <col:69> 'int' 82
|   |     |-ImplicitCastExpr 0x13afbcef368 <line:3095:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd7b0 <col:9> 'int' 151
|   |     |-ImplicitCastExpr 0x13afbcef380 <line:3096:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd7d8 <col:9> 'int' 161
|   |     |-ImplicitCastExpr 0x13afbcef398 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd800 <col:15> 'int' 119
|   |     |-ImplicitCastExpr 0x13afbcef3b0 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd828 <col:21> 'int' 191
|   |     |-ImplicitCastExpr 0x13afbcef3c8 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd850 <col:27> 'int' 16
|   |     |-ImplicitCastExpr 0x13afbcef3e0 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd878 <col:33> 'int' 158
|   |     |-ImplicitCastExpr 0x13afbcef3f8 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd8a0 <col:39> 'int' 55
|   |     |-ImplicitCastExpr 0x13afbcef410 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd8c8 <col:45> 'int' 234
|   |     |-ImplicitCastExpr 0x13afbcef428 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd8f0 <col:51> 'int' 100
|   |     |-ImplicitCastExpr 0x13afbcef440 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd918 <col:57> 'int' 250
|   |     |-ImplicitCastExpr 0x13afbcef458 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd940 <col:63> 'int' 202
|   |     |-ImplicitCastExpr 0x13afbcef470 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd968 <col:69> 'int' 40
|   |     |-ImplicitCastExpr 0x13afbcef488 <line:3097:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd990 <col:9> 'int' 141
|   |     |-ImplicitCastExpr 0x13afbcef4a0 <line:3098:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd9b8 <col:9> 'int' 157
|   |     |-ImplicitCastExpr 0x13afbcef4b8 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfd9e0 <col:15> 'int' 59
|   |     |-ImplicitCastExpr 0x13afbcef4d0 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfda08 <col:21> 'int' 210
|   |     |-ImplicitCastExpr 0x13afbcef4e8 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfda30 <col:27> 'int' 110
|   |     |-ImplicitCastExpr 0x13afbcef500 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfda58 <col:33> 'int' 9
|   |     |-ImplicitCastExpr 0x13afbcef518 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfda80 <col:39> 'int' 92
|   |     |-ImplicitCastExpr 0x13afbcef530 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfdaa8 <col:45> 'int' 104
|   |     |-ImplicitCastExpr 0x13afbcef548 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfdad0 <col:51> 'int' 199
|   |     |-ImplicitCastExpr 0x13afbcef560 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfdaf8 <col:57> 'int' 69
|   |     |-ImplicitCastExpr 0x13afbcef578 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfdb20 <col:63> 'int' 144
|   |     |-ImplicitCastExpr 0x13afbcef590 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfdb48 <col:69> 'int' 253
|   |     |-ImplicitCastExpr 0x13afbcef5a8 <line:3099:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfdb70 <col:9> 'int' 187
|   |     |-ImplicitCastExpr 0x13afbcef5c0 <line:3100:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfdb98 <col:9> 'int' 112
|   |     |-ImplicitCastExpr 0x13afbcef5d8 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfdbc0 <col:15> 'int' 201
|   |     |-ImplicitCastExpr 0x13afbcef5f0 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfdbe8 <col:21> 'int' 58
|   |     |-ImplicitCastExpr 0x13afbcef608 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfdc10 <col:27> 'int' 187
|   |     |-ImplicitCastExpr 0x13afbcef620 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfdc38 <col:33> 'int' 223
|   |     |-ImplicitCastExpr 0x13afbcef638 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfdc60 <col:39> 'int' 212
|   |     |-ImplicitCastExpr 0x13afbcef650 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfdc88 <col:45> 'int' 33
|   |     |-ImplicitCastExpr 0x13afbcef668 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfdcb0 <col:51> 'int' 15
|   |     |-ImplicitCastExpr 0x13afbcef680 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfdcd8 <col:57> 'int' 196
|   |     |-ImplicitCastExpr 0x13afbcef698 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfdd00 <col:63> 'int' 106
|   |     |-ImplicitCastExpr 0x13afbcef6b0 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfdd28 <col:69> 'int' 60
|   |     |-ImplicitCastExpr 0x13afbcef6c8 <line:3101:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfdd50 <col:9> 'int' 246
|   |     |-ImplicitCastExpr 0x13afbcef6e0 <line:3102:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfdd78 <col:9> 'int' 97
|   |     |-ImplicitCastExpr 0x13afbcef6f8 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfdda0 <col:15> 'int' 207
|   |     |-ImplicitCastExpr 0x13afbcef710 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfddc8 <col:21> 'int' 63
|   |     |-ImplicitCastExpr 0x13afbcef728 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfddf0 <col:27> 'int' 214
|   |     |-ImplicitCastExpr 0x13afbcef740 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfde18 <col:33> 'int' 19
|   |     |-ImplicitCastExpr 0x13afbcef758 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfde40 <col:39> 'int' 241
|   |     |-ImplicitCastExpr 0x13afbcef770 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfde68 <col:45> 'int' 95
|   |     |-ImplicitCastExpr 0x13afbcef788 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfde90 <col:51> 'int' 188
|   |     |-ImplicitCastExpr 0x13afbcef7a0 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfdeb8 <col:57> 'int' 207
|   |     |-ImplicitCastExpr 0x13afbcef7b8 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfdee0 <col:63> 'int' 188
|   |     |-ImplicitCastExpr 0x13afbcef7d0 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcfdf08 <col:69> 'int' 38
|   |     |-ImplicitCastExpr 0x13afbcef7e8 <line:3103:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbceded0 <col:9> 'int' 158
|   |     |-ImplicitCastExpr 0x13afbcef800 <line:3104:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcedef8 <col:9> 'int' 188
|   |     |-ImplicitCastExpr 0x13afbcef818 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcedf20 <col:15> 'int' 11
|   |     |-ImplicitCastExpr 0x13afbcef830 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcedf48 <col:21> 'int' 189
|   |     |-ImplicitCastExpr 0x13afbcef848 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcedf70 <col:27> 'int' 171
|   |     |-ImplicitCastExpr 0x13afbcef860 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcedf98 <col:33> 'int' 93
|   |     |-ImplicitCastExpr 0x13afbcef878 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcedfc0 <col:39> 'int' 201
|   |     |-ImplicitCastExpr 0x13afbcef890 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcedfe8 <col:45> 'int' 84
|   |     `-ImplicitCastExpr 0x13afbcef8a8 <col:51> 'unsigned char' <IntegralCast>
|   |       `-IntegerLiteral 0x13afbcee010 <col:51> 'int' 57
|   |-DeclStmt 0x13afbcf68f8 <line:3106:5, line:3128:6>
|   | `-VarDecl 0x13afbcef900 <line:3106:5, line:3128:5> line:3106:26 used dh1024_g 'unsigned char [128]' static cinit
|   |   `-InitListExpr 0x13afbcf5200 <col:39, line:3128:5> 'unsigned char [128]'
|   |     |-ImplicitCastExpr 0x13afbcf5240 <line:3107:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcef968 <col:9> 'int' 59
|   |     |-ImplicitCastExpr 0x13afbcf5260 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcef990 <col:15> 'int' 64
|   |     |-ImplicitCastExpr 0x13afbcf5288 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcef9b8 <col:21> 'int' 134
|   |     |-ImplicitCastExpr 0x13afbcf52c0 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcef9e0 <col:27> 'int' 231
|   |     |-ImplicitCastExpr 0x13afbcf52d8 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefa08 <col:33> 'int' 243
|   |     |-ImplicitCastExpr 0x13afbcf5330 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefa30 <col:39> 'int' 108
|   |     |-ImplicitCastExpr 0x13afbcf5348 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefa58 <col:45> 'int' 222
|   |     |-ImplicitCastExpr 0x13afbcf5360 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefa80 <col:51> 'int' 103
|   |     |-ImplicitCastExpr 0x13afbcf5378 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefaa8 <col:57> 'int' 28
|   |     |-ImplicitCastExpr 0x13afbcf5410 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefad0 <col:63> 'int' 204
|   |     |-ImplicitCastExpr 0x13afbcf5428 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefaf8 <col:69> 'int' 128
|   |     |-ImplicitCastExpr 0x13afbcf5440 <line:3108:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefb20 <col:9> 'int' 5
|   |     |-ImplicitCastExpr 0x13afbcf5458 <line:3109:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefb48 <col:9> 'int' 90
|   |     |-ImplicitCastExpr 0x13afbcf5470 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefb70 <col:15> 'int' 223
|   |     |-ImplicitCastExpr 0x13afbcf5488 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefb98 <col:21> 'int' 254
|   |     |-ImplicitCastExpr 0x13afbcf54a0 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefbc0 <col:27> 'int' 189
|   |     |-ImplicitCastExpr 0x13afbcf54b8 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefbe8 <col:33> 'int' 32
|   |     |-ImplicitCastExpr 0x13afbcf55d0 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefc10 <col:39> 'int' 39
|   |     |-ImplicitCastExpr 0x13afbcf55e8 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefc38 <col:45> 'int' 116
|   |     |-ImplicitCastExpr 0x13afbcf5600 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefc60 <col:51> 'int' 108
|   |     |-ImplicitCastExpr 0x13afbcf5618 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefc88 <col:57> 'int' 36
|   |     |-ImplicitCastExpr 0x13afbcf5630 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefcb0 <col:63> 'int' 201
|   |     |-ImplicitCastExpr 0x13afbcf5648 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefcd8 <col:69> 'int' 3
|   |     |-ImplicitCastExpr 0x13afbcf5660 <line:3110:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefd00 <col:9> 'int' 243
|   |     |-ImplicitCastExpr 0x13afbcf5678 <line:3111:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefd28 <col:9> 'int' 225
|   |     |-ImplicitCastExpr 0x13afbcf5690 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefd50 <col:15> 'int' 141
|   |     |-ImplicitCastExpr 0x13afbcf56a8 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefd78 <col:21> 'int' 195
|   |     |-ImplicitCastExpr 0x13afbcf56c0 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefda0 <col:27> 'int' 125
|   |     |-ImplicitCastExpr 0x13afbcf56d8 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefdc8 <col:33> 'int' 152
|   |     |-ImplicitCastExpr 0x13afbcf56f0 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefdf0 <col:39> 'int' 39
|   |     |-ImplicitCastExpr 0x13afbcf5708 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefe18 <col:45> 'int' 64
|   |     |-ImplicitCastExpr 0x13afbcf5720 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefe40 <col:51> 'int' 8
|   |     |-ImplicitCastExpr 0x13afbcf5738 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefe68 <col:57> 'int' 184
|   |     |-ImplicitCastExpr 0x13afbcf5950 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcefe90 <col:63> 'int' 140
|   |     |-ImplicitCastExpr 0x13afbcf5968 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf3f00 <col:69> 'int' 106
|   |     |-ImplicitCastExpr 0x13afbcf5980 <line:3112:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf3f28 <col:9> 'int' 233
|   |     |-ImplicitCastExpr 0x13afbcf5998 <line:3113:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf3f50 <col:9> 'int' 187
|   |     |-ImplicitCastExpr 0x13afbcf59b0 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf3f78 <col:15> 'int' 26
|   |     |-ImplicitCastExpr 0x13afbcf59c8 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf3fa0 <col:21> 'int' 58
|   |     |-ImplicitCastExpr 0x13afbcf59e0 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf3fc8 <col:27> 'int' 214
|   |     |-ImplicitCastExpr 0x13afbcf59f8 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf3ff0 <col:33> 'int' 134
|   |     |-ImplicitCastExpr 0x13afbcf5a10 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4018 <col:39> 'int' 131
|   |     |-ImplicitCastExpr 0x13afbcf5a28 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4040 <col:45> 'int' 94
|   |     |-ImplicitCastExpr 0x13afbcf5a40 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4068 <col:51> 'int' 114
|   |     |-ImplicitCastExpr 0x13afbcf5a58 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4090 <col:57> 'int' 65
|   |     |-ImplicitCastExpr 0x13afbcf5a70 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf40b8 <col:63> 'int' 206
|   |     |-ImplicitCastExpr 0x13afbcf5a88 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf40e0 <col:69> 'int' 133
|   |     |-ImplicitCastExpr 0x13afbcf5aa0 <line:3114:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4108 <col:9> 'int' 60
|   |     |-ImplicitCastExpr 0x13afbcf5ab8 <line:3115:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4130 <col:9> 'int' 210
|   |     |-ImplicitCastExpr 0x13afbcf5ad0 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4158 <col:15> 'int' 179
|   |     |-ImplicitCastExpr 0x13afbcf5ae8 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4180 <col:21> 'int' 252
|   |     |-ImplicitCastExpr 0x13afbcf5b00 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf41a8 <col:27> 'int' 19
|   |     |-ImplicitCastExpr 0x13afbcf5b18 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf41d0 <col:33> 'int' 206
|   |     |-ImplicitCastExpr 0x13afbcf5b30 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf41f8 <col:39> 'int' 55
|   |     |-ImplicitCastExpr 0x13afbcf5b48 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4220 <col:45> 'int' 129
|   |     |-ImplicitCastExpr 0x13afbcf5b60 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4248 <col:51> 'int' 158
|   |     |-ImplicitCastExpr 0x13afbcf5b78 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4270 <col:57> 'int' 76
|   |     |-ImplicitCastExpr 0x13afbcf5b90 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4298 <col:63> 'int' 28
|   |     |-ImplicitCastExpr 0x13afbcf5ba8 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf42c0 <col:69> 'int' 123
|   |     |-ImplicitCastExpr 0x13afbcf5bc0 <line:3116:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf42e8 <col:9> 'int' 101
|   |     |-ImplicitCastExpr 0x13afbcf5bd8 <line:3117:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4310 <col:9> 'int' 211
|   |     |-ImplicitCastExpr 0x13afbcf5bf0 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4338 <col:15> 'int' 230
|   |     |-ImplicitCastExpr 0x13afbcf5c08 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4360 <col:21> 'int' 166
|   |     |-ImplicitCastExpr 0x13afbcf5c20 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4388 <col:27> 'int' 0
|   |     |-ImplicitCastExpr 0x13afbcf5c38 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf43b0 <col:33> 'int' 245
|   |     |-ImplicitCastExpr 0x13afbcf6310 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf43d8 <col:39> 'int' 90
|   |     |-ImplicitCastExpr 0x13afbcf6328 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4400 <col:45> 'int' 149
|   |     |-ImplicitCastExpr 0x13afbcf6340 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4428 <col:51> 'int' 67
|   |     |-ImplicitCastExpr 0x13afbcf6358 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4450 <col:57> 'int' 94
|   |     |-ImplicitCastExpr 0x13afbcf6370 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4478 <col:63> 'int' 129
|   |     |-ImplicitCastExpr 0x13afbcf6388 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf44a0 <col:69> 'int' 207
|   |     |-ImplicitCastExpr 0x13afbcf63a0 <line:3118:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf44c8 <col:9> 'int' 96
|   |     |-ImplicitCastExpr 0x13afbcf63b8 <line:3119:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf44f0 <col:9> 'int' 162
|   |     |-ImplicitCastExpr 0x13afbcf63d0 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4518 <col:15> 'int' 35
|   |     |-ImplicitCastExpr 0x13afbcf63e8 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4540 <col:21> 'int' 252
|   |     |-ImplicitCastExpr 0x13afbcf6400 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4568 <col:27> 'int' 54
|   |     |-ImplicitCastExpr 0x13afbcf6418 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4590 <col:33> 'int' 167
|   |     |-ImplicitCastExpr 0x13afbcf6430 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf45b8 <col:39> 'int' 93
|   |     |-ImplicitCastExpr 0x13afbcf6448 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf45e0 <col:45> 'int' 122
|   |     |-ImplicitCastExpr 0x13afbcf6460 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4608 <col:51> 'int' 76
|   |     |-ImplicitCastExpr 0x13afbcf6478 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4630 <col:57> 'int' 6
|   |     |-ImplicitCastExpr 0x13afbcf6490 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4658 <col:63> 'int' 145
|   |     |-ImplicitCastExpr 0x13afbcf64a8 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4680 <col:69> 'int' 110
|   |     |-ImplicitCastExpr 0x13afbcf64c0 <line:3120:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf46a8 <col:9> 'int' 246
|   |     |-ImplicitCastExpr 0x13afbcf64d8 <line:3121:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf46d0 <col:9> 'int' 87
|   |     |-ImplicitCastExpr 0x13afbcf64f0 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf46f8 <col:15> 'int' 238
|   |     |-ImplicitCastExpr 0x13afbcf6508 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4720 <col:21> 'int' 54
|   |     |-ImplicitCastExpr 0x13afbcf6520 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4748 <col:27> 'int' 203
|   |     |-ImplicitCastExpr 0x13afbcf6538 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4770 <col:33> 'int' 6
|   |     |-ImplicitCastExpr 0x13afbcf6550 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4798 <col:39> 'int' 234
|   |     |-ImplicitCastExpr 0x13afbcf6568 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf47c0 <col:45> 'int' 245
|   |     |-ImplicitCastExpr 0x13afbcf6580 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf47e8 <col:51> 'int' 61
|   |     |-ImplicitCastExpr 0x13afbcf6598 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4810 <col:57> 'int' 149
|   |     |-ImplicitCastExpr 0x13afbcf65b0 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4838 <col:63> 'int' 73
|   |     |-ImplicitCastExpr 0x13afbcf65c8 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4860 <col:69> 'int' 203
|   |     |-ImplicitCastExpr 0x13afbcf65e0 <line:3122:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4888 <col:9> 'int' 167
|   |     |-ImplicitCastExpr 0x13afbcf65f8 <line:3123:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf48b0 <col:9> 'int' 221
|   |     |-ImplicitCastExpr 0x13afbcf6610 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf48d8 <col:15> 'int' 129
|   |     |-ImplicitCastExpr 0x13afbcf6628 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4900 <col:21> 'int' 223
|   |     |-ImplicitCastExpr 0x13afbcf6640 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4928 <col:27> 'int' 128
|   |     |-ImplicitCastExpr 0x13afbcf6658 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4950 <col:33> 'int' 9
|   |     |-ImplicitCastExpr 0x13afbcf6670 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4978 <col:39> 'int' 74
|   |     |-ImplicitCastExpr 0x13afbcf6688 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf49a0 <col:45> 'int' 151
|   |     |-ImplicitCastExpr 0x13afbcf66a0 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf49c8 <col:51> 'int' 77
|   |     |-ImplicitCastExpr 0x13afbcf66b8 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf49f0 <col:57> 'int' 168
|   |     |-ImplicitCastExpr 0x13afbcf66d0 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4a18 <col:63> 'int' 34
|   |     |-ImplicitCastExpr 0x13afbcf66e8 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4a40 <col:69> 'int' 114
|   |     |-ImplicitCastExpr 0x13afbcf6700 <line:3124:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4a68 <col:9> 'int' 161
|   |     |-ImplicitCastExpr 0x13afbcf6718 <line:3125:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4a90 <col:9> 'int' 127
|   |     |-ImplicitCastExpr 0x13afbcf6730 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4ab8 <col:15> 'int' 196
|   |     |-ImplicitCastExpr 0x13afbcf6748 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4ae0 <col:21> 'int' 112
|   |     |-ImplicitCastExpr 0x13afbcf6760 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4b08 <col:27> 'int' 86
|   |     |-ImplicitCastExpr 0x13afbcf6778 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4b30 <col:33> 'int' 112
|   |     |-ImplicitCastExpr 0x13afbcf6790 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4b58 <col:39> 'int' 232
|   |     |-ImplicitCastExpr 0x13afbcf67a8 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4b80 <col:45> 'int' 32
|   |     |-ImplicitCastExpr 0x13afbcf67c0 <col:51> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4ba8 <col:51> 'int' 16
|   |     |-ImplicitCastExpr 0x13afbcf67d8 <col:57> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4bd0 <col:57> 'int' 24
|   |     |-ImplicitCastExpr 0x13afbcf67f0 <col:63> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4bf8 <col:63> 'int' 143
|   |     |-ImplicitCastExpr 0x13afbcf6808 <col:69> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4c20 <col:69> 'int' 46
|   |     |-ImplicitCastExpr 0x13afbcf6820 <line:3126:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4c48 <col:9> 'int' 96
|   |     |-ImplicitCastExpr 0x13afbcf6838 <line:3127:9> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4c70 <col:9> 'int' 7
|   |     |-ImplicitCastExpr 0x13afbcf6850 <col:15> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4c98 <col:15> 'int' 231
|   |     |-ImplicitCastExpr 0x13afbcf6868 <col:21> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4cc0 <col:21> 'int' 104
|   |     |-ImplicitCastExpr 0x13afbcf6880 <col:27> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4ce8 <col:27> 'int' 26
|   |     |-ImplicitCastExpr 0x13afbcf6898 <col:33> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4d10 <col:33> 'int' 130
|   |     |-ImplicitCastExpr 0x13afbcf68b0 <col:39> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4d38 <col:39> 'int' 93
|   |     |-ImplicitCastExpr 0x13afbcf68c8 <col:45> 'unsigned char' <IntegralCast>
|   |     | `-IntegerLiteral 0x13afbcf4d60 <col:45> 'int' 50
|   |     `-ImplicitCastExpr 0x13afbcf68e0 <col:51> 'unsigned char' <IntegralCast>
|   |       `-IntegerLiteral 0x13afbcf4d88 <col:51> 'int' 162
|   |-IfStmt 0x13afbcf6ad8 <line:3132:5, line:3133:21>
|   | |-OpaqueValueExpr 0x13afbcf6ac0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x13afbcf6ab0 <col:9, col:21>
|   |   `-ImplicitCastExpr 0x13afbcf6a98 <col:16, col:21> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x13afbcf6a78 <col:16, col:21> 'void *'
|   |       `-ParenExpr 0x13afbcf6a58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x13afbcf6a30 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x13afbcf69f0 <col:26> 'int' 0
|   `-IfStmt 0x13afbcf7158 <.//openssl//file_jk/after\test\ssltest_old.c:3136:5, line:3141:5>
|     |-OpaqueValueExpr 0x13afbcf7140 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x13afbcf7128 <line:3136:69, line:3141:5>
|       `-ReturnStmt 0x13afbcf7118 <line:3140:9, col:21>
|         `-ImplicitCastExpr 0x13afbcf7100 <col:16, col:21> 'int *' <NullToPointer>
|           `-ParenExpr 0x13afbcf70e0 <col:16, col:21> 'void *'
|             `-ParenExpr 0x13afbcf70c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|               `-CStyleCastExpr 0x13afbcf7098 <col:18, col:26> 'void *' <NullToPointer>
|                 `-IntegerLiteral 0x13afbcf7058 <col:26> 'int' 0
|-FunctionDecl 0x13afbcf7520 <.//openssl//file_jk/after\test\ssltest_old.c:3149:1, line:3172:1> line:3149:12 used psk_key2bn 'int (const char *, unsigned char *, unsigned int)' static
| |-ParmVarDecl 0x13afbcf72f0 <col:23, col:35> col:35 used pskkey 'const char *'
| |-ParmVarDecl 0x13afbcf7370 <col:43, col:58> col:58 used psk 'unsigned char *'
| |-ParmVarDecl 0x13afbcf73f0 <line:3150:23, col:36> col:36 used max_psk_len 'unsigned int'
| `-CompoundStmt 0x13afbcf7e68 <line:3151:1, line:3172:1>
|   |-DeclStmt 0x13afbcf7670 <line:3152:5, col:12>
|   | `-VarDecl 0x13afbcf7608 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x13afbcf79c0 <line:3156:5, line:3161:5>
|   | |-UnaryOperator 0x13afbcf78b0 <line:3156:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x13afbcf7898 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x13afbcf7878 <col:10> 'int' lvalue Var 0x13afbcf7608 'ret' 'int'
|   | `-CompoundStmt 0x13afbcf79a8 <col:15, line:3161:5>
|   |   `-ReturnStmt 0x13afbcf7998 <line:3160:9, col:16>
|   |     `-IntegerLiteral 0x13afbcf7970 <col:16> 'int' 0
|   |-IfStmt 0x13afbcf7c98 <line:3162:5, line:3168:5>
|   | |-OpaqueValueExpr 0x13afbcf7c80 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x13afbcf7c68 <line:3162:46, line:3168:5>
|   |   `-ReturnStmt 0x13afbcf7c58 <line:3167:9, col:16>
|   |     `-IntegerLiteral 0x13afbcf7c30 <col:16> 'int' 0
|   `-ReturnStmt 0x13afbcf7e58 <line:3171:5, col:12>
|     `-ImplicitCastExpr 0x13afbcf7e40 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x13afbcf7e20 <col:12> 'int' lvalue Var 0x13afbcf7608 'ret' 'int'
|-FunctionDecl 0x13afbcfa270 <line:3174:1, line:3195:1> line:3174:21 invalid psk_client_callback 'unsigned int (int *, const char *, char *, unsigned int, unsigned char *, unsigned int)' static
| |-ParmVarDecl 0x13afbcf9f30 <col:41, col:46> col:46 invalid ssl 'int *'
| |-ParmVarDecl 0x13afbcf9fb0 <col:51, col:63> col:63 hint 'const char *'
| |-ParmVarDecl 0x13afbcfa030 <line:3175:41, col:47> col:47 used identity 'char *'
| |-ParmVarDecl 0x13afbcfa0b0 <line:3176:41, col:54> col:54 used max_identity_len 'unsigned int'
| |-ParmVarDecl 0x13afbcfa130 <line:3177:41, col:56> col:56 used psk 'unsigned char *'
| |-ParmVarDecl 0x13afbcfa1b0 <line:3178:41, col:54> col:54 used max_psk_len 'unsigned int'
| `-CompoundStmt 0x13afbcfad90 <line:3179:1, line:3195:1>
|   |-DeclStmt 0x13afbcfa3d8 <line:3180:5, col:12>
|   | `-VarDecl 0x13afbcfa370 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x13afbcfa4b0 <line:3181:5, col:29>
|   | `-VarDecl 0x13afbcfa408 <col:5, col:28> col:18 used psk_len 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x13afbcfa498 <col:28> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x13afbcfa470 <col:28> 'int' 0
|   |-BinaryOperator 0x13afbcfa650 <line:3183:5, col:69> 'int' '='
|   | |-DeclRefExpr 0x13afbcfa4c8 <col:5> 'int' lvalue Var 0x13afbcfa370 'ret' 'int'
|   | `-CallExpr 0x13afbcfa5d0 <col:11, col:69> 'int'
|   |   |-ImplicitCastExpr 0x13afbcfa5b8 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13afbcfa500 <col:11> 'int ()' Function 0x13afbcd20a8 'BIO_snprintf' 'int ()'
|   |   |-ImplicitCastExpr 0x13afbcfa608 <col:24> 'char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x13afbcfa520 <col:24> 'char *' lvalue ParmVar 0x13afbcfa030 'identity' 'char *'
|   |   |-ImplicitCastExpr 0x13afbcfa620 <col:34> 'unsigned int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x13afbcfa558 <col:34> 'unsigned int' lvalue ParmVar 0x13afbcfa0b0 'max_identity_len' 'unsigned int'
|   |   `-ImplicitCastExpr 0x13afbcfa638 <col:52> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x13afbcfa590 <col:52> 'char [16]' lvalue "Client_identity"
|   |-IfStmt 0x13afbcfa758 <line:3184:5, line:3185:14>
|   | |-BinaryOperator 0x13afbcfa6d0 <line:3184:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x13afbcfa6b8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbcfa670 <col:9> 'int' lvalue Var 0x13afbcfa370 'ret' 'int'
|   | | `-IntegerLiteral 0x13afbcfa690 <col:15> 'int' 0
|   | `-GotoStmt 0x13afbcfa740 <line:3185:9, col:14> 'out_err' 0x13afbcfa6f0
|   |-IfStmt 0x13afbcfa9f0 <line:3186:5, line:3188:20>
|   | |-ImplicitCastExpr 0x13afbcfa790 <line:3186:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x13afbcfa770 <col:9> 'int' lvalue Var 0x13afbca4a70 'debug' 'int'
|   | `-CallExpr 0x13afbcfa950 <line:3187:9, line:3188:20> 'int'
|   |   |-ImplicitCastExpr 0x13afbcfa938 <line:3187:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13afbcfa7a8 <col:9> 'int (FILE *, const char *, ...)' Function 0x13afbbca868 'fprintf' 'int (FILE *, const char *, ...)'
|   |   |-ParenExpr 0x13afbcfa880 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | `-UnaryOperator 0x13afbcfa868 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   |   `-ArraySubscriptExpr 0x13afbcfa848 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   |     |-CallExpr 0x13afbcfa800 <col:18, col:29> 'FILE *'
|   |   |     | `-ImplicitCastExpr 0x13afbcfa7e8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |     |   `-DeclRefExpr 0x13afbcfa7c8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x13afbb9c4c0 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   |     `-IntegerLiteral 0x13afbcfa820 <col:31> 'int' 2
|   |   |-ImplicitCastExpr 0x13afbcfa9a8 <.//openssl//file_jk/after\test\ssltest_old.c:3187:25> 'const char *' <NoOp>
|   |   | `-ImplicitCastExpr 0x13afbcfa990 <col:25> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x13afbcfa8a0 <col:25> 'char [38]' lvalue "client: created identity '%s' len=%d\n"
|   |   |-ImplicitCastExpr 0x13afbcfa9c0 <col:67> 'char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x13afbcfa8e0 <col:67> 'char *' lvalue ParmVar 0x13afbcfa030 'identity' 'char *'
|   |   `-ImplicitCastExpr 0x13afbcfa9d8 <line:3188:17> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x13afbcfa900 <col:17> 'int' lvalue Var 0x13afbcfa370 'ret' 'int'
|   |-BinaryOperator 0x13afbcfabb8 <line:3189:5, col:47> 'int' '='
|   | |-DeclRefExpr 0x13afbcfaa08 <col:5> 'int' lvalue Var 0x13afbcfa370 'ret' 'int'
|   | `-CallExpr 0x13afbcfab20 <col:11, col:47> 'int'
|   |   |-ImplicitCastExpr 0x13afbcfab08 <col:11> 'int (*)(const char *, unsigned char *, unsigned int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x13afbcfaa28 <col:11> 'int (const char *, unsigned char *, unsigned int)' Function 0x13afbcf7520 'psk_key2bn' 'int (const char *, unsigned char *, unsigned int)'
|   |   |-ImplicitCastExpr 0x13afbcfab70 <col:22> 'const char *' <NoOp>
|   |   | `-ImplicitCastExpr 0x13afbcfab58 <col:22> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x13afbcfaa48 <col:22> 'char *' lvalue Var 0x13afbd7e498 'psk_key' 'char *'
|   |   |-ImplicitCastExpr 0x13afbcfab88 <col:31> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x13afbcfaa68 <col:31> 'unsigned char *' lvalue ParmVar 0x13afbcfa130 'psk' 'unsigned char *'
|   |   `-ImplicitCastExpr 0x13afbcfaba0 <col:36> 'unsigned int' <LValueToRValue>
|   |     `-DeclRefExpr 0x13afbcfaaa0 <col:36> 'unsigned int' lvalue ParmVar 0x13afbcfa1b0 'max_psk_len' 'unsigned int'
|   |-IfStmt 0x13afbcfac70 <line:3190:5, line:3191:14>
|   | |-BinaryOperator 0x13afbcfac38 <line:3190:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x13afbcfac20 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x13afbcfabd8 <col:9> 'int' lvalue Var 0x13afbcfa370 'ret' 'int'
|   | | `-IntegerLiteral 0x13afbcfabf8 <col:15> 'int' 0
|   | `-GotoStmt 0x13afbcfac58 <line:3191:9, col:14> 'out_err' 0x13afbcfa6f0
|   |-BinaryOperator 0x13afbcfad10 <line:3192:5, col:15> 'unsigned int' '='
|   | |-DeclRefExpr 0x13afbcfac88 <col:5> 'unsigned int' lvalue Var 0x13afbcfa408 'psk_len' 'unsigned int'
|   | `-ImplicitCastExpr 0x13afbcfacf8 <col:15> 'unsigned int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x13afbcface0 <col:15> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x13afbcfacc0 <col:15> 'int' lvalue Var 0x13afbcfa370 'ret' 'int'
|   `-LabelStmt 0x13afbcfad78 <line:3193:2, line:3194:12> 'out_err'
|     `-ReturnStmt 0x13afbcfad68 <col:5, col:12>
|       `-ImplicitCastExpr 0x13afbcfad50 <col:12> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x13afbcfad30 <col:12> 'unsigned int' lvalue Var 0x13afbcfa408 'psk_len' 'unsigned int'
`-FunctionDecl 0x13afbcfb048 <line:3197:1, line:3209:1> line:3197:21 invalid psk_server_callback 'unsigned int (int *, const char *, unsigned char *, unsigned int)' static
  |-ParmVarDecl 0x13afbcfae18 <col:41, col:46> col:46 invalid ssl 'int *'
  |-ParmVarDecl 0x13afbcfae98 <col:51, col:63> col:63 used identity 'const char *'
  |-ParmVarDecl 0x13afbcfaf18 <line:3198:41, col:56> col:56 used psk 'unsigned char *'
  |-ParmVarDecl 0x13afbcfaf98 <line:3199:41, col:54> col:54 used max_psk_len 'unsigned int'
  `-CompoundStmt 0x13afbcfb680 <line:3200:1, line:3209:1>
    |-DeclStmt 0x13afbcfb1e0 <line:3201:5, col:29>
    | `-VarDecl 0x13afbcfb138 <col:5, col:28> col:18 used psk_len 'unsigned int' cinit
    |   `-ImplicitCastExpr 0x13afbcfb1c8 <col:28> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x13afbcfb1a0 <col:28> 'int' 0
    |-IfStmt 0x13afbcfb450 <line:3203:5, line:3206:5>
    | |-BinaryOperator 0x13afbcfb360 <line:3203:9, col:48> 'int' '!='
    | | |-CallExpr 0x13afbcfb2c0 <col:9, col:43> 'int'
    | | | |-ImplicitCastExpr 0x13afbcfb2a8 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
    | | | | `-DeclRefExpr 0x13afbcfb1f8 <col:9> 'int (const char *, const char *)' Function 0x13afbd2d698 'strcmp' 'int (const char *, const char *)'
    | | | |-ImplicitCastExpr 0x13afbcfb2f0 <col:16> 'const char *' <LValueToRValue>
    | | | | `-DeclRefExpr 0x13afbcfb218 <col:16> 'const char *' lvalue ParmVar 0x13afbcfae98 'identity' 'const char *'
    | | | `-ImplicitCastExpr 0x13afbcfb320 <col:26> 'const char *' <NoOp>
    | | |   `-ImplicitCastExpr 0x13afbcfb308 <col:26> 'char *' <ArrayToPointerDecay>
    | | |     `-StringLiteral 0x13afbcfb250 <col:26> 'char [16]' lvalue "Client_identity"
    | | `-IntegerLiteral 0x13afbcfb338 <col:48> 'int' 0
    | `-CompoundStmt 0x13afbcfb438 <col:51, line:3206:5>
    |   `-ReturnStmt 0x13afbcfb428 <line:3205:9, col:16>
    |     `-ImplicitCastExpr 0x13afbcfb410 <col:16> 'unsigned int' <IntegralCast>
    |       `-IntegerLiteral 0x13afbcfb3e8 <col:16> 'int' 0
    |-BinaryOperator 0x13afbcfb618 <line:3207:5, col:51> 'unsigned int' '='
    | |-DeclRefExpr 0x13afbcfb468 <col:5> 'unsigned int' lvalue Var 0x13afbcfb138 'psk_len' 'unsigned int'
    | `-ImplicitCastExpr 0x13afbcfb600 <col:15, col:51> 'unsigned int' <IntegralCast>
    |   `-CallExpr 0x13afbcfb568 <col:15, col:51> 'int'
    |     |-ImplicitCastExpr 0x13afbcfb550 <col:15> 'int (*)(const char *, unsigned char *, unsigned int)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x13afbcfb4a0 <col:15> 'int (const char *, unsigned char *, unsigned int)' Function 0x13afbcf7520 'psk_key2bn' 'int (const char *, unsigned char *, unsigned int)'
    |     |-ImplicitCastExpr 0x13afbcfb5b8 <col:26> 'const char *' <NoOp>
    |     | `-ImplicitCastExpr 0x13afbcfb5a0 <col:26> 'char *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x13afbcfb4c0 <col:26> 'char *' lvalue Var 0x13afbd7e498 'psk_key' 'char *'
    |     |-ImplicitCastExpr 0x13afbcfb5d0 <col:35> 'unsigned char *' <LValueToRValue>
    |     | `-DeclRefExpr 0x13afbcfb4e0 <col:35> 'unsigned char *' lvalue ParmVar 0x13afbcfaf18 'psk' 'unsigned char *'
    |     `-ImplicitCastExpr 0x13afbcfb5e8 <col:40> 'unsigned int' <LValueToRValue>
    |       `-DeclRefExpr 0x13afbcfb518 <col:40> 'unsigned int' lvalue ParmVar 0x13afbcfaf98 'max_psk_len' 'unsigned int'
    `-ReturnStmt 0x13afbcfb670 <line:3208:5, col:12>
      `-ImplicitCastExpr 0x13afbcfb658 <col:12> 'unsigned int' <LValueToRValue>
        `-DeclRefExpr 0x13afbcfb638 <col:12> 'unsigned int' lvalue Var 0x13afbcfb138 'psk_len' 'unsigned int'
