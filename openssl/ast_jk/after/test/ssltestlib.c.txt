TranslationUnitDecl 0x2b57b576358 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2b57b576bf0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2b57b5768f0 '__int128'
|-TypedefDecl 0x2b57b576c60 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2b57b576910 'unsigned __int128'
|-TypedefDecl 0x2b57b576f98 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x2b57b576d50 'struct __NSConstantString_tag'
|   `-Record 0x2b57b576cb8 '__NSConstantString_tag'
|-TypedefDecl 0x2b57b577008 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x2b57b576530 'unsigned long long'
|-TypedefDecl 0x2b57b5770a0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2b57b577060 'char *'
|   `-BuiltinType 0x2b57b5763f0 'char'
|-TypedefDecl 0x2b57b577110 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x2b57b577060 'char *'
|   `-BuiltinType 0x2b57b5763f0 'char'
|-TypedefDecl 0x2b57b5771d0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x2b57b576530 'unsigned long long'
|-TypedefDecl 0x2b57b577240 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x2b57b577060 'char *'
|   `-BuiltinType 0x2b57b5763f0 'char'
|-FunctionDecl 0x2b57cfa1440 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2b57cfa14e0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x2b57cfa1550 <col:21> Implicit
|-FunctionDecl 0x2b57cfa15a8 prev 0x2b57cfa1440 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2b57cfa12d0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x2b57cfa1698 <col:21> Inherited Implicit
|-TypedefDecl 0x2b57cfa16d8 prev 0x2b57b577008 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x2b57b576530 'unsigned long long'
|-TypedefDecl 0x2b57cfa1780 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x2b57cfa1750 'size_t' sugar
|   |-Typedef 0x2b57cfa16d8 'size_t'
|   `-BuiltinType 0x2b57b576530 'unsigned long long'
|-TypedefDecl 0x2b57cfa17f0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x2b57b576490 'long long'
|-TypedefDecl 0x2b57cfa1860 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x2b57b576490 'long long'
|-TypedefDecl 0x2b57cfa18d0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x2b57b5764d0 'unsigned short'
|-TypedefDecl 0x2b57cfa1940 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x2b57b5764d0 'unsigned short'
|-TypedefDecl 0x2b57cfa19b0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x2b57b5764d0 'unsigned short'
|-TypedefDecl 0x2b57cfa1a20 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x2b57b576450 'int'
|-TypedefDecl 0x2b57cfa1a90 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x2b57b576470 'long'
|-TypedefDecl 0x2b57cfa1b00 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x2b57b576490 'long long'
|-TypedefDecl 0x2b57cfa1b90 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x2b57cfa1b60 '__time64_t' sugar
|   |-Typedef 0x2b57cfa1b00 '__time64_t'
|   `-BuiltinType 0x2b57b576490 'long long'
|-FunctionDecl 0x2b57cfa1d08 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x2b57cfa1f28 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x2b57cfd6170 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x2b57cfa2068 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x2b57cfa20e0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x2b57cfa2158 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x2b57cfa21d8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x2b57cfd5f10 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x2b57cfd6250 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x2b57cfd6310 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x2b57cfd6480 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x2b57cfd6430 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x2b57cfd63d0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x2b57cfd62f0 'struct threadlocaleinfostruct'
|       `-Record 0x2b57cfe9040 'threadlocaleinfostruct'
|-TypedefDecl 0x2b57cfd6590 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x2b57cfd6540 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x2b57cfd64e0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x2b57cfd63b0 'struct threadmbcinfostruct'
|       `-Record 0x2b57cfd6310 'threadmbcinfostruct'
|-RecordDecl 0x2b57cfd65e8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x2b57cfd66a0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x2b57cfd6760 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2b57cfd67f0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x2b57cfd6880 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x2b57cfd6938 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x2b57cfd68e0 'struct localeinfo_struct' sugar
|   `-RecordType 0x2b57cfd6740 'struct localeinfo_struct'
|     `-Record 0x2b57cfd66a0 'localeinfo_struct'
|-TypedefDecl 0x2b57cfd6a10 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x2b57cfd69c0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x2b57cfd68e0 'struct localeinfo_struct' sugar
|     `-RecordType 0x2b57cfd6740 'struct localeinfo_struct'
|       `-Record 0x2b57cfd66a0 'localeinfo_struct'
|-RecordDecl 0x2b57cfd6a88 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x2b57cfd6b40 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2b57cfd6bb8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x2b57cfd6c78 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x2b57cfd6d10 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x2b57cfd6d80 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x2b57cfd6e38 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x2b57cfd6de0 'struct localerefcount' sugar
|   `-RecordType 0x2b57cfd6b20 'struct localerefcount'
|     `-Record 0x2b57cfd6a88 'localerefcount'
|-RecordDecl 0x2b57cfe9040 prev 0x2b57cfd6250 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x2b57cfe90c0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2b57cfe9138 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x2b57cfe91a8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x2b57cfe9218 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x2b57cfe9288 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x2b57cfe9448 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x2b57cfe94b8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x2b57cfe9528 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x2b57cfe9598 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x2b57cfe9608 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x2b57cfe9678 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x2b57cfe96d0 parent 0x2b57b576358 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x2b57cfe9860 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x2b57cfe98d0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x2b57cfe9940 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x2b57cfe99b0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x2b57cfe9a50 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x2b57cfe9ac0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x2b57cfe9bd0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x2b57cfe9d08 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x2b57cfe9db8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x2b57cfe9d60 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x2b57cfd62f0 'struct threadlocaleinfostruct'
|     `-Record 0x2b57cfe9040 'threadlocaleinfostruct'
|-FunctionDecl 0x2b57cfe8240 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x2b57cfe9e40 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x2b57cfe9ef0 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x2b57cfe9f70 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x2b57cfe8030 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2b57cfe8608 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x2b57cfe86a8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2b57cfe8710 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x2b57cfe8778 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2b57cfe87f8 prev 0x2b57cfe8608 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x2b57cfe8330 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x2b57cfe83b0 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x2b57cfe8428 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2b57cfe8bb8 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x2b57cfe88e0 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x2b57cfe8960 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x2b57cfe89d8 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2b57cfe2020 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x2b57cfe8ca0 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x2b57cfe8d20 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x2b57cfe8d98 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b57cfe8e30 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b57cfe2328 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2b57cfe23c8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2b57cfe2430 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2b57cfe2498 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2b57cfe2518 prev 0x2b57cfe2328 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x2b57cfe2110 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x2b57cfe2190 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x2b57cfe2208 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2b57cfe28d8 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2b57cfe2978 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2b57cfe29e0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2b57cfe2a48 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2b57cfe2ac8 prev 0x2b57cfe28d8 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x2b57cfe2600 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x2b57cfe2680 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x2b57cfe26f8 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2b57cfe5000 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x2b57cfe2bd8 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x2b57cfe2c70 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2b57cfe2cf0 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x2b57cfe2d68 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2b57cfe53c8 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x2b57cfe5468 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2b57cfe54d0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x2b57cfe5538 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2b57cfe55b8 prev 0x2b57cfe53c8 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x2b57cfe50f0 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x2b57cfe5170 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x2b57cfe51e8 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2b57cfe5a38 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x2b57cfe5ad8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2b57cfe5b40 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2b57cfe5ba8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x2b57cfe5c10 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2b57cfe5c98 prev 0x2b57cfe5a38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x2b57cfe5780 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x2b57cfe5800 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x2b57cfe5880 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x2b57cfe58f8 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2b57cfe5d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x2b57cfea1e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x2b57cfe5f20 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x2b57cfea050 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x2b57cfea0c8 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2b57cfea2a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x2b57cfea690 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x2b57cfea3c8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x2b57cfea440 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b57cfea4c0 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x2b57cfeaa60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x2b57cfea870 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x2b57cfea8f0 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x2b57cfeab10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b57cfeaf20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x2b57cfeac58 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x2b57cfeacd0 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2b57cfead50 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x2b57cfe42b0 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x2b57cfe4350 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x2b57cfe43b8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2b57cfe4430 prev 0x2b57cfe42b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x2b57cfe40c8 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x2b57cfe4148 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x2b57cfe44e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b57cfe4838 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x2b57cfe4628 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x2b57cfe46a0 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2b57cfe4720 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x2b57cfe4b60 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x2b57cfe4c00 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x2b57cfe4c68 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2b57cfe4ce0 prev 0x2b57cfe4b60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x2b57cfe49e0 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x2b57cfe4a60 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x2b57cfe4d90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b57cfeb130 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x2b57cfeb1d0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2b57cfeb238 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2b57cfeb2b0 prev 0x2b57cfeb130 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x2b57cfe4ed8 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x2b57cfe4f58 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x2b57cfeb500 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x2b57cfeb5a0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2b57cfeb610 prev 0x2b57cfeb500 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x2b57cfeb390 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x2b57cfeb908 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x2b57cfeb6e8 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x2b57cfeb760 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2b57cfebb58 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x2b57cfeb9e8 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x2b57cfeba60 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x2b57cfebe88 <line:131:1, line:133:1>
|   `-ReturnStmt 0x2b57cfebe78 <line:132:5, col:51>
|     `-ConditionalOperator 0x2b57cfebe48 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x2b57cfebcb8 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x2b57cfebc98 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x2b57cfebc68 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x2b57cfebc20 <col:13> 'const char *' lvalue ParmVar 0x2b57cfeb9e8 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x2b57cfebc80 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x2b57cfebc40 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x2b57cfebe30 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x2b57cfebcd8 <col:24> 'int' 0
|       `-CallExpr 0x2b57cfebdd0 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x2b57cfebdb8 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x2b57cfebd00 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x2b57cfeb908 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x2b57cfebe00 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x2b57cfebd20 <col:36> 'const char *' lvalue ParmVar 0x2b57cfeb9e8 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x2b57cfebe18 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x2b57cfebd40 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x2b57cfeba60 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x2b57cfec1a8 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x2b57cfebeb8 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x2b57cfebf30 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2b57cfebfb0 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x2b57cfec070 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2b57cfec4b0 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2b57cfec550 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2b57cfec5b8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2b57cfec620 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2b57cfec6a0 prev 0x2b57cfec4b0 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x2b57cfec298 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x2b57cfec318 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x2b57cfec390 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2b57cfec8d8 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x2b57cfec788 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x2b57cfecba0 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x2b57cfecc40 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2b57cfecca8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2b57cfecd20 prev 0x2b57cfecba0 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x2b57cfec9b0 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x2b57cfeca30 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x2b57cfecf80 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2b57cfece00 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x2b57cfece80 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x2b57cfed200 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2b57cfed080 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x2b57cfed100 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x2b57cfed5b8 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x2b57cfed2e0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x2b57cfed360 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x2b57cfed3d8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b57cfed820 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2b57cfed6a0 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x2b57cfed720 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x2b57cfedb18 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x2b57cfed900 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x2b57cfed980 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x2b57cfed9f8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b57cfedd80 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2b57cfedc00 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x2b57cfedc80 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x2b57cfe6010 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x2b57cfede60 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x2b57cfedee0 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x2b57cfedf58 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b57cfe63c8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2b57cfe60f8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2b57cfe6178 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x2b57cfe61f0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2b57cfe6830 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2b57cfe64b0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2b57cfe6530 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x2b57cfe65a8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b57cfe6620 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b57cfe6b38 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2b57cfe6920 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2b57cfe69a0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x2b57cfe6a18 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2b57cfe6ed0 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2b57cfe6c20 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x2b57cfe6ca0 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x2b57cfe6d18 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b57cfe6d90 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b57cfee2b8 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x2b57cfee358 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2b57cfee3c0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2b57cfee438 prev 0x2b57cfee2b8 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x2b57cfee090 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x2b57cfee110 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x2b57cfee6f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x2b57cfee610 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x2b57cfee798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b57cfeeb70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x2b57cfee8e0 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x2b57cfee958 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b57cfee9d8 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x2b57cfeee88 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x2b57cfeef28 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2b57cfeef98 prev 0x2b57cfeee88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x2b57cfeed50 <col:90> col:93 'int'
| `-DeprecatedAttr 0x2b57cfef040 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b57cff13d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x2b57cff11c0 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x2b57cff1238 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b57cff12b8 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x2b57cff16d8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x2b57cff14b8 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x2b57cff1530 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2b57cff19c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2b57cff1878 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x2b57cff1a70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b57cff1e80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2b57cff1bb8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x2b57cff1c30 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b57cff1ca8 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b57cfef250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x2b57cff2028 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x2b57cfef0a0 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2b57cfef300 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b57cfef7b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x2b57cfef448 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x2b57cfef4c0 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2b57cfef540 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x2b57cfef5b8 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2b57cfefc38 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2b57cfefcd8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2b57cfefd40 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2b57cfefda8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2b57cfefe28 prev 0x2b57cfefc38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2b57cfef968 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x2b57cfef9e8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x2b57cfefa60 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2b57cfefee0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b57cff0260 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2b57cff0300 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2b57cff0368 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2b57cff03d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2b57cff0450 prev 0x2b57cff0260 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2b57cff0028 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x2b57cff00c8 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x2b57cff0140 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2b57cff0750 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2b57cff0538 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x2b57cff05b8 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x2b57cff0630 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2b57cff0ae8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2b57cff0838 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2b57cff08b8 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x2b57cff0930 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b57cff09a8 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b57cff0e80 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x2b57cff0bd8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x2b57cff0c50 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2b57cff0cd0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x2b57cff0d48 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2b57cff2268 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2b57cff2308 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2b57cff2370 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2b57cff23d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2b57cff2458 prev 0x2b57cff2268 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2b57cff1030 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x2b57cff20d0 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x2b57cff2148 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2b57cff2510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b57cff29c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x2b57cff2658 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x2b57cff26d0 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b57cff2750 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x2b57cff27c8 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2b57cff2e48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x2b57cff2b78 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x2b57cff2bf8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x2b57cff2c70 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2b57cff2f00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b57cff3250 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x2b57cff32f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2b57cff3358 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2b57cff33d0 prev 0x2b57cff3250 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x2b57cff3048 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x2b57cff30e0 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x2b57cff3630 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x2b57cff36d0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2b57cff3738 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2b57cff37b0 prev 0x2b57cff3630 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x2b57cff34b0 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x2b57cff3530 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x2b57cff3970 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x2b57cff3890 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x2b57cff3bc0 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x2b57cff3c60 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2b57cff3cc8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2b57cff3d40 prev 0x2b57cff3bc0 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x2b57cff3a48 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x2b57cff3ac8 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x2b57cff3fa0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x2b57cff4040 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2b57d068ff0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2b57d069068 prev 0x2b57cff3fa0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x2b57cff3e20 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x2b57cff3ea0 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x2b57d069388 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x2b57d069428 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x2b57d069490 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2b57d069508 prev 0x2b57d069388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x2b57d069208 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x2b57d069288 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x2b57d0695b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b57d069998 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x2b57d069700 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x2b57d069780 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x2b57d069800 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x2b57d069bf0 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x2b57d069a80 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x2b57d069af8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2b57d069e70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2b57d069d90 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x2b57d069f18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b57d06c328 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2b57d06c120 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x2b57d06c198 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b57d06c210 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b57d06c648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x2b57d06c4d0 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x2b57d06c548 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2b57d06c6f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b57d06cb10 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2b57d06cbb0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2b57d06cc18 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2b57d06cc80 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2b57d06cd00 prev 0x2b57d06cb10 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2b57d06c840 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x2b57d06c8c0 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x2b57d06c938 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2b57d067108 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2b57d06cde8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x2b57d06ce68 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x2b57d06cee0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b57d06cf58 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b57d0673b0 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x2b57d067450 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2b57d0674c0 prev 0x2b57d0673b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x2b57d0672d0 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x2b57d067568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x2b57d0678b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2b57d067730 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x2b57d0677b0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x2b57d067960 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x2b57d067ca8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2b57d067b28 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x2b57d067ba8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x2b57d067d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x2b57d06f088 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2b57d067f20 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x2b57d06f130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x2b57d06f548 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2b57d06f330 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x2b57d06f3b0 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x2b57d06f428 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2b57d06f600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x2b57d06f9e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x2b57d06f7c8 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x2b57d06f848 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x2b57d06f8c0 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2b57d06fa98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x2b57d06fd40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2b57d06fc60 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x2b57d06fde8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x2b57d06d130 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x2b57d06ffb0 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x2b57d06d030 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x2b57d06d1e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x2b57d06d488 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2b57d06d3a8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x2b57d06d530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x2b57d06d7c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x2b57d06d650 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x2b57d06db50 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x2b57d06d890 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2b57d06d908 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2b57d06d980 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x2b57d06df08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2b57d06dcf0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2b57d06dd68 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x2b57d06dfb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b57d06a318 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x2b57d06a3b8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2b57d06a420 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x2b57d06a498 prev 0x2b57d06a318 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x2b57d06a0f8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2b57d06a170 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2b57d06a790 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x2b57d06a830 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2b57d06a898 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x2b57d06a910 prev 0x2b57d06a790 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x2b57d06a570 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2b57d06a5e8 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x2b57d06abf0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x2b57d06a9e8 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2b57d06aa60 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2b57d06aad8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x2b57d06af00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2b57d06ad90 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2b57d06ae08 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x2b57d06afb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b57d06e358 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2b57d06e138 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2b57d06e1b0 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x2b57d06e5a0 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x2b57d06e640 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x2b57d06e6b0 prev 0x2b57d06e5a0 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x2b57d06e430 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x2b57d06e998 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x2b57d06e780 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2b57d06e7f8 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2b57d06ebe0 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x2b57d06ea70 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x2b57d06eae8 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x2b57d06ef78 <line:306:1, line:308:1>
|   `-ReturnStmt 0x2b57d06ef68 <line:307:5, col:56>
|     `-ConditionalOperator 0x2b57d06ef38 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x2b57d06eda0 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x2b57d06ed80 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x2b57d06ed50 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x2b57d06eca8 <col:13> 'const wchar_t *' lvalue ParmVar 0x2b57d06ea70 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x2b57d06ed68 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x2b57d06ed30 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x2b57d06ed08 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x2b57d06ecc8 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x2b57d06ef20 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x2b57d06edc0 <col:29> 'int' 0
|       `-CallExpr 0x2b57d06eec0 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x2b57d06eea8 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x2b57d06ede8 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x2b57d06e998 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x2b57d06eef0 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x2b57d06ee08 <col:41> 'const wchar_t *' lvalue ParmVar 0x2b57d06ea70 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x2b57d06ef08 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x2b57d06ee28 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x2b57d06eae8 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x2b57d070358 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x2b57d06efa0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2b57d070060 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2b57d0700d8 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2b57d070150 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2b57d0707c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2b57d070500 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2b57d070578 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x2b57d0705f0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2b57d070878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b57d070c88 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x2b57d070d28 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x2b57d070d90 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2b57d070df8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2b57d070e78 prev 0x2b57d070c88 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x2b57d0709b8 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2b57d070a30 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2b57d070aa8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2b57d071220 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x2b57d070f58 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2b57d070fd0 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2b57d071070 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2b57d0710e8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2b57d0715d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2b57d0713c8 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2b57d071440 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x2b57d0714b8 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2b57d071688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b57d0719e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2b57d0717c8 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2b57d071840 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x2b57d071c30 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x2b57d071ac0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2b57d071b38 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2b57d071e78 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2b57d071d08 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2b57d071d80 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x2b57d0720e0 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2b57d071f50 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2b57d071fc8 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x2b57d0723e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2b57d072278 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x2b57d0722f0 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x2b57d072498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b57d072900 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x2b57d0725d8 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x2b57d072650 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x2b57d072730 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x2b57d072c20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x2b57d072aa8 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x2b57d072cc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b57d077140 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x2b57d072e08 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x2b57d072e80 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b57d072f00 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x2b57d0773f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x2b57d077318 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x2b57d077498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b57d077860 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x2b57d0775d8 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x2b57d077650 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b57d0776c8 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x2b57d077ab8 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2b57d077940 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2b57d0779b8 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x2b57d077e58 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2b57d077b90 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2b57d077c08 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2b57d077c80 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b57d075138 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2b57d077f38 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2b57d077fb0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2b57d078028 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2b57d075590 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2b57d075218 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2b57d075290 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2b57d075308 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b57d075380 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b57d0759e8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x2b57d075678 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2b57d0756f0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2b57d075768 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2b57d0757e0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2b57d075e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x2b57d075b90 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x2b57d075c08 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x2b57d075c80 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2b57d075f08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b57d0781f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x2b57d076048 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x2b57d078580 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x2b57d0782c0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2b57d078338 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b57d0783b0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x2b57d078938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x2b57d078720 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x2b57d078798 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x2b57d0789e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b57d078d48 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2b57d078b28 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x2b57d078ba0 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2b57d078fb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2b57d078ee0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x2b57d079060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b57d076480 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2b57d0761b8 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x2b57d076230 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b57d0762a8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b57d076838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2b57d076620 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x2b57d076698 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2b57d0768e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b57d076b98 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2b57d076a28 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x2b57d076aa0 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2b57d076e08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2b57d076d30 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x2b57d076eb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b57d079280 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2b57d076ff0 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x2b57d0790f0 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b57d079168 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b57d079590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2b57d079420 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x2b57d079498 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2b57d079640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2b57d079a40 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2b57d079780 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2b57d0797f8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2b57d079870 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2b57d079e88 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2b57d079b20 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2b57d079b98 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2b57d079c10 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b57d079c88 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b57d07a100 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2b57d079f70 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2b57d079fe8 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x2b57d07a3e8 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2b57d07a1d8 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2b57d07a250 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2b57d07a2c8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b57d07a640 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2b57d07a4c8 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2b57d07a540 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x2b57d07a928 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2b57d07a718 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2b57d07a790 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2b57d07a808 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b57d07ac18 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2b57d07aa08 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2b57d07aa80 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2b57d07aaf8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2b57d07afa0 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2b57d07acf8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2b57d07ad70 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2b57d07ade8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b57d07ae60 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b57d073228 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2b57d07b088 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2b57d073090 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2b57d073108 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2b57d0735b0 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2b57d073308 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2b57d073380 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2b57d0733f8 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2b57d073470 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2b57d073810 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x2b57d073738 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x2b57d0738b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x2b57d073bf0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2b57d073a78 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2b57d073af0 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x2b57d073ca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x2b57d0740a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2b57d073e60 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2b57d073ed8 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2b57d073f50 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2b57d074158 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x2b57d074520 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x2b57d074318 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x2b57d074390 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x2b57d074408 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2b57d0745d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x2b57d074870 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2b57d074798 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x2b57d074918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x2b57d074c48 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x2b57d074ad8 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x2b57d074b50 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x2b57d074cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x2b57d074f90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2b57d074eb8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x2b57d075038 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x2b57d0813c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2b57d0812e8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x2b57d081468 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x2b57d0817a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2b57d081628 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2b57d0816a0 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x2b57d081850 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x2b57d081e70 <.//openssl//file_jk/after\test/ssltestlib.h:15:1, line:18:42> line:15:5 invalid create_ssl_ctx_pair 'int (const int *, const int *, int, int, int **, int **, char *, char *)'
| |-ParmVarDecl 0x2b57d081978 <col:25, col:43> col:43 invalid sm 'const int *'
| |-ParmVarDecl 0x2b57d0819f8 <col:47, col:65> col:65 invalid cm 'const int *'
| |-ParmVarDecl 0x2b57d081a78 <line:16:25, col:29> col:29 min_proto_version 'int'
| |-ParmVarDecl 0x2b57d081af8 <col:48, col:52> col:52 max_proto_version 'int'
| |-ParmVarDecl 0x2b57d081ba8 <line:17:25, col:35> col:35 invalid sctx 'int **'
| |-ParmVarDecl 0x2b57d081c30 <col:41, col:51> col:51 invalid cctx 'int **'
| |-ParmVarDecl 0x2b57d081cb0 <col:57, col:63> col:63 certfile 'char *'
| `-ParmVarDecl 0x2b57d081d30 <line:18:25, col:31> col:31 privkeyfile 'char *'
|-FunctionDecl 0x2b57d083340 <line:19:1, line:20:70> line:19:5 invalid create_ssl_objects 'int (int *, int *, int **, int **, int *, int *)'
| |-ParmVarDecl 0x2b57d081f68 <col:24, col:33> col:33 invalid serverctx 'int *'
| |-ParmVarDecl 0x2b57d081fe8 <col:44, col:53> col:53 invalid clientctx 'int *'
| |-ParmVarDecl 0x2b57d082070 <col:64, col:70> col:70 invalid sssl 'int **'
| |-ParmVarDecl 0x2b57d0820f8 <line:20:24, col:30> col:30 invalid cssl 'int **'
| |-ParmVarDecl 0x2b57d0831a8 <col:36, col:41> col:41 invalid s_to_c_fbio 'int *'
| `-ParmVarDecl 0x2b57d083228 <col:54, col:59> col:59 invalid c_to_s_fbio 'int *'
|-FunctionDecl 0x2b57d083580 <line:21:1, col:57> col:5 invalid create_ssl_connection 'int (int *, int *)'
| |-ParmVarDecl 0x2b57d083428 <col:27, col:32> col:32 invalid serverssl 'int *'
| `-ParmVarDecl 0x2b57d0834a8 <col:43, col:48> col:48 invalid clientssl 'int *'
|-FunctionDecl 0x2b57d083700 <line:24:1, col:45> col:19 invalid bio_f_tls_dump_filter 'const int *(void)'
|-FunctionDecl 0x2b57d083838 <line:25:1, col:37> col:6 bio_f_tls_dump_filter_free 'void (void)'
|-FunctionDecl 0x2b57d083990 <line:27:1, col:44> col:19 invalid bio_s_mempacket_test 'const int *(void)'
|-FunctionDecl 0x2b57d083ac8 <line:28:1, col:36> col:6 bio_s_mempacket_test_free 'void (void)'
|-FunctionDecl 0x2b57d083ea0 <line:34:1, line:35:35> line:34:5 invalid mempacket_test_inject 'int (int *, const char *, int, int, int)'
| |-ParmVarDecl 0x2b57d083b98 <col:27, col:32> col:32 invalid bio 'int *'
| |-ParmVarDecl 0x2b57d083c18 <col:37, col:49> col:49 in 'const char *'
| |-ParmVarDecl 0x2b57d083c98 <col:53, col:57> col:57 inl 'int'
| |-ParmVarDecl 0x2b57d083d18 <col:62, col:66> col:66 pktnum 'int'
| `-ParmVarDecl 0x2b57d083d98 <line:35:27, col:31> col:31 type 'int'
|-RecordDecl 0x2b57d083f68 <line:37:9, col:16> col:16 struct mempacket_st
|-TypedefDecl 0x2b57d084078 <col:1, col:29> col:29 referenced MEMPACKET 'struct mempacket_st':'struct mempacket_st'
| `-ElaboratedType 0x2b57d084020 'struct mempacket_st' sugar
|   `-RecordType 0x2b57d084000 'struct mempacket_st'
|     `-Record 0x2b57d021f90 'mempacket_st'
|-FunctionDecl 0x2b57d07c1b0 <line:39:1, col:26> col:1 DEFINE_STACK_OF 'int (MEMPACKET)'
| `-ParmVarDecl 0x2b57d084120 <col:17> col:26 'MEMPACKET':'struct mempacket_st'
|-FunctionDecl 0x2b57d07c350 <.//openssl//file_jk/after\test\ssltestlib.c:15:1, col:32> col:12 invalid tls_dump_new 'int (int *)' static
| `-ParmVarDecl 0x2b57d07c288 <col:25, col:30> col:30 invalid bi 'int *'
|-FunctionDecl 0x2b57d07c4a8 <line:16:1, col:32> col:12 invalid tls_dump_free 'int (int *)' static
| `-ParmVarDecl 0x2b57d07c410 <col:26, col:31> col:31 invalid a 'int *'
|-FunctionDecl 0x2b57d07c750 <line:17:1, col:53> col:12 invalid tls_dump_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x2b57d07c568 <col:26, col:31> col:31 invalid b 'int *'
| |-ParmVarDecl 0x2b57d07c5e8 <col:34, col:40> col:40 out 'char *'
| `-ParmVarDecl 0x2b57d07c668 <col:45, col:49> col:49 outl 'int'
|-FunctionDecl 0x2b57d07ca10 <line:18:1, col:58> col:12 invalid tls_dump_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x2b57d07c820 <col:27, col:32> col:32 invalid b 'int *'
| |-ParmVarDecl 0x2b57d07c8a0 <col:35, col:47> col:47 in 'const char *'
| `-ParmVarDecl 0x2b57d07c920 <col:51, col:55> col:55 inl 'int'
|-FunctionDecl 0x2b57d07cd60 <line:19:1, col:63> col:13 invalid tls_dump_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x2b57d07cae0 <col:27, col:32> col:32 invalid b 'int *'
| |-ParmVarDecl 0x2b57d07cb60 <col:35, col:39> col:39 cmd 'int'
| |-ParmVarDecl 0x2b57d07cbe0 <col:44, col:49> col:49 num 'long'
| `-ParmVarDecl 0x2b57d07cc60 <col:54, col:60> col:60 ptr 'void *'
|-FunctionDecl 0x2b57d07cfe0 <line:20:1, col:54> col:12 invalid tls_dump_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x2b57d07ce38 <col:26, col:31> col:31 invalid bp 'int *'
| |-ParmVarDecl 0x2b57d07ceb8 <col:35, col:41> col:41 buf 'char *'
| `-ParmVarDecl 0x2b57d07cf38 <col:46, col:50> col:50 size 'int'
|-FunctionDecl 0x2b57d07e230 <line:21:1, col:50> col:12 invalid tls_dump_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x2b57d07d0b0 <col:26, col:31> col:31 invalid bp 'int *'
| `-ParmVarDecl 0x2b57d07e158 <col:35, col:47> col:47 str 'const char *'
|-VarDecl 0x2b57d07e2f8 <line:28:1, col:20> col:20 invalid method_tls_dump 'int *' static
|-VarDecl 0x2b57d07e400 <line:29:1, col:20> col:20 invalid method_mempacket_test 'int *' static
|-FunctionDecl 0x2b57d07e590 <line:32:1, line:48:1> line:32:19 invalid bio_f_tls_dump_filter 'const int *(void)'
| `-CompoundStmt 0x2b57d084218 <line:33:1, line:48:1>
|   `-IfStmt 0x2b57d084200 <line:34:5, line:46:5>
|     |-OpaqueValueExpr 0x2b57d0841e8 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x2b57d0841d0 <line:34:34, line:46:5>
|       `-IfStmt 0x2b57d0841b8 <line:37:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|         |-OpaqueValueExpr 0x2b57d0841a0 <<invalid sloc>> '_Bool'
|         `-ReturnStmt 0x2b57d07f128 <.//openssl//file_jk/after\test\ssltestlib.c:45:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|           `-ImplicitCastExpr 0x2b57d07f110 <col:17, col:27> 'const int *' <NullToPointer>
|             `-ParenExpr 0x2b57d07f0f0 <col:17, col:27> 'void *'
|               `-CStyleCastExpr 0x2b57d07f0c8 <col:18, col:26> 'void *' <NullToPointer>
|                 `-IntegerLiteral 0x2b57d07f088 <col:26> 'int' 0
|-FunctionDecl 0x2b57d0842c8 prev 0x2b57d083838 <.//openssl//file_jk/after\test\ssltestlib.c:50:1, line:53:1> line:50:6 bio_f_tls_dump_filter_free 'void (void)'
| `-CompoundStmt 0x2b57d084478 <line:51:1, line:53:1>
|-FunctionDecl 0x2b57d084538 <line:55:1, line:59:1> line:55:12 invalid tls_dump_new 'int (int *)' static
| |-ParmVarDecl 0x2b57d0844a0 <col:25, col:30> col:30 invalid bio 'int *'
| `-CompoundStmt 0x2b57d084768 <line:56:1, line:59:1>
|   `-ReturnStmt 0x2b57d084758 <line:58:5, col:12>
|     `-IntegerLiteral 0x2b57d084730 <col:12> 'int' 1
|-FunctionDecl 0x2b57d084830 <line:61:1, line:66:1> line:61:12 invalid tls_dump_free 'int (int *)' static
| |-ParmVarDecl 0x2b57d084798 <col:26, col:31> col:31 invalid bio 'int *'
| `-CompoundStmt 0x2b57d084970 <line:62:1, line:66:1>
|   `-ReturnStmt 0x2b57d084960 <line:65:5, col:12>
|     `-IntegerLiteral 0x2b57d084938 <col:12> 'int' 1
|-FunctionDecl 0x2b57d084a68 <line:68:1, line:76:1> line:68:13 invalid copy_flags 'void (int *)' static
| |-ParmVarDecl 0x2b57d0849a0 <col:24, col:29> col:29 invalid bio 'int *'
| `-CompoundStmt 0x2b57d085058 <line:69:1, line:76:1>
|   `-DeclStmt 0x2b57d084ba8 <line:70:5, col:14>
|     `-VarDecl 0x2b57d084b40 <col:5, col:9> col:9 used flags 'int'
|-FunctionDecl 0x2b57d085218 <line:102:1, line:176:1> line:102:13 used dump_data 'void (const char *, int)' static
| |-ParmVarDecl 0x2b57d085088 <col:23, col:35> col:35 used data 'const char *'
| |-ParmVarDecl 0x2b57d085108 <col:41, col:45> col:45 used len 'int'
| `-CompoundStmt 0x2b57d0293b0 <line:103:1, line:176:1>
|   |-DeclStmt 0x2b57d085728 <line:104:5, col:65>
|   | |-VarDecl 0x2b57d0852f8 <col:5, col:9> col:9 used rem 'int'
|   | |-VarDecl 0x2b57d085378 <col:5, col:14> col:14 used i 'int'
|   | |-VarDecl 0x2b57d0853f8 <col:5, col:17> col:17 used content 'int'
|   | |-VarDecl 0x2b57d085478 <col:5, col:26> col:26 used reclen 'int'
|   | |-VarDecl 0x2b57d0854f8 <col:5, col:34> col:34 used msglen 'int'
|   | |-VarDecl 0x2b57d085578 <col:5, col:42> col:42 used fragoff 'int'
|   | |-VarDecl 0x2b57d0855f8 <col:5, col:51> col:51 used fraglen 'int'
|   | `-VarDecl 0x2b57d085678 <col:5, col:60> col:60 used epoch 'int'
|   |-DeclStmt 0x2b57d0857e8 <line:105:5, col:23>
|   | `-VarDecl 0x2b57d085780 <col:5, col:20> col:20 used rec 'unsigned char *'
|   |-CallExpr 0x2b57d085ac0 <line:107:5, col:41> 'int'
|   | |-ImplicitCastExpr 0x2b57d085aa8 <col:5> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2b57d0859b0 <col:5> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   | `-ImplicitCastExpr 0x2b57d085b00 <col:12> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x2b57d085ae8 <col:12> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x2b57d085a28 <col:12> 'char [27]' lvalue "---- START OF PACKET ----\n"
|   |-BinaryOperator 0x2b57d085b88 <line:109:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x2b57d085b18 <col:5> 'int' lvalue Var 0x2b57d0852f8 'rem' 'int'
|   | `-ImplicitCastExpr 0x2b57d085b70 <col:11> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x2b57d085b50 <col:11> 'int' lvalue ParmVar 0x2b57d085108 'len' 'int'
|   |-BinaryOperator 0x2b57d085c58 <line:110:5, col:28> 'unsigned char *' '='
|   | |-DeclRefExpr 0x2b57d085ba8 <col:5> 'unsigned char *' lvalue Var 0x2b57d085780 'rec' 'unsigned char *'
|   | `-CStyleCastExpr 0x2b57d085c30 <col:11, col:28> 'unsigned char *' <BitCast>
|   |   `-ImplicitCastExpr 0x2b57d085c18 <col:28> 'const char *' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x2b57d085be0 <col:28> 'const char *' lvalue ParmVar 0x2b57d085088 'data' 'const char *'
|   |-WhileStmt 0x2b57d0291a8 <line:112:5, line:173:5>
|   | |-BinaryOperator 0x2b57d085cd8 <line:112:12, col:18> 'int' '>'
|   | | |-ImplicitCastExpr 0x2b57d085cc0 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2b57d085c78 <col:12> 'int' lvalue Var 0x2b57d0852f8 'rem' 'int'
|   | | `-IntegerLiteral 0x2b57d085c98 <col:18> 'int' 0
|   | `-CompoundStmt 0x2b57d029128 <col:21, line:173:5>
|   |   |-IfStmt 0x2b57d085e90 <line:113:9, line:114:25>
|   |   | |-BinaryOperator 0x2b57d085d68 <line:113:13, col:20> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x2b57d085d38 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2b57d085cf8 <col:13> 'int' lvalue Var 0x2b57d0852f8 'rem' 'int'
|   |   | | `-ImplicitCastExpr 0x2b57d085d50 <col:20> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2b57d085d18 <col:20> 'int' lvalue ParmVar 0x2b57d085108 'len' 'int'
|   |   | `-CallExpr 0x2b57d085e38 <line:114:13, col:25> 'int'
|   |   |   |-ImplicitCastExpr 0x2b57d085e20 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x2b57d085d88 <col:13> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   |   `-ImplicitCastExpr 0x2b57d085e78 <col:20> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x2b57d085e60 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x2b57d085de8 <col:20> 'char [3]' lvalue "*\n"
|   |   |-CallExpr 0x2b57d085f70 <line:115:9, col:46> 'int'
|   |   | |-ImplicitCastExpr 0x2b57d085f58 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2b57d085ea8 <col:9> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x2b57d085fb0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x2b57d085f98 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x2b57d085f08 <col:16> 'char [28]' lvalue "*---- START OF RECORD ----\n"
|   |   |-IfStmt 0x2b57d086148 <line:116:9, line:119:9>
|   |   | |-OpaqueValueExpr 0x2b57d086130 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x2b57d086110 <line:116:43, line:119:9>
|   |   |   |-CallExpr 0x2b57d0860b0 <line:117:13, col:51> 'int'
|   |   |   | |-ImplicitCastExpr 0x2b57d086098 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x2b57d085fe8 <col:13> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   |   | `-ImplicitCastExpr 0x2b57d0860f0 <col:20> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x2b57d0860d8 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x2b57d086048 <col:20> 'char [29]' lvalue "*---- RECORD TRUNCATED ----\n"
|   |   |   `-BreakStmt 0x2b57d086108 <line:118:13>
|   |   |-BinaryOperator 0x2b57d024fe0 <line:120:9, col:42> 'int' '='
|   |   | |-DeclRefExpr 0x2b57d086160 <col:9> 'int' lvalue Var 0x2b57d0853f8 'content' 'int'
|   |   | `-ImplicitCastExpr 0x2b57d024fc8 <col:19, col:42> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x2b57d024fb0 <col:19, col:42> 'unsigned char' <LValueToRValue>
|   |   |     `-ArraySubscriptExpr 0x2b57d024f90 <col:19, col:42> 'unsigned char' lvalue
|   |   |       |-ImplicitCastExpr 0x2b57d024f78 <col:19> 'unsigned char *' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x2b57d024f30 <col:19> 'unsigned char *' lvalue Var 0x2b57d085780 'rec' 'unsigned char *'
|   |   |       `-IntegerLiteral 0x2b57d024f50 <line:78:33> 'int' 0
|   |   |-CallExpr 0x2b57d0250a8 <line:121:9, col:55> 'int'
|   |   | |-ImplicitCastExpr 0x2b57d025090 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2b57d025000 <col:9> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x2b57d0250f0 <col:16> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x2b57d0250d8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x2b57d025020 <col:16> 'char [28]' lvalue "** Record Content-type: %d\n"
|   |   | `-ImplicitCastExpr 0x2b57d025108 <col:48> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2b57d025058 <col:48> 'int' lvalue Var 0x2b57d0853f8 'content' 'int'
|   |   |-CallExpr 0x2b57d0252a8 <line:122:9, line:123:62> 'int'
|   |   | |-ImplicitCastExpr 0x2b57d025290 <line:122:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2b57d025120 <col:9> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x2b57d0252f8 <col:16> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x2b57d0252e0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x2b57d025140 <col:16> 'char [29]' lvalue "** Record Version: %02x%02x\n"
|   |   | |-ImplicitCastExpr 0x2b57d025328 <line:123:16, col:37> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x2b57d025310 <col:16, col:37> 'unsigned char' <LValueToRValue>
|   |   | |   `-ArraySubscriptExpr 0x2b57d0251d8 <col:16, col:37> 'unsigned char' lvalue
|   |   | |     |-ImplicitCastExpr 0x2b57d0251c0 <col:16> 'unsigned char *' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x2b57d025178 <col:16> 'unsigned char *' lvalue Var 0x2b57d085780 'rec' 'unsigned char *'
|   |   | |     `-IntegerLiteral 0x2b57d025198 <line:79:33> 'int' 1
|   |   | `-ImplicitCastExpr 0x2b57d025358 <line:123:40, col:61> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x2b57d025340 <col:40, col:61> 'unsigned char' <LValueToRValue>
|   |   |     `-ArraySubscriptExpr 0x2b57d025258 <col:40, col:61> 'unsigned char' lvalue
|   |   |       |-ImplicitCastExpr 0x2b57d025240 <col:40> 'unsigned char *' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x2b57d0251f8 <col:40> 'unsigned char *' lvalue Var 0x2b57d085780 'rec' 'unsigned char *'
|   |   |       `-IntegerLiteral 0x2b57d025218 <line:80:33> 'int' 2
|   |   |-BinaryOperator 0x2b57d025590 <line:124:9, col:66> 'int' '='
|   |   | |-DeclRefExpr 0x2b57d025370 <col:9> 'int' lvalue Var 0x2b57d085678 'epoch' 'int'
|   |   | `-BinaryOperator 0x2b57d025570 <col:17, col:66> 'int' '|'
|   |   |   |-ParenExpr 0x2b57d0254a0 <col:17, col:43> 'int'
|   |   |   | `-BinaryOperator 0x2b57d025480 <col:18, col:42> 'int' '<<'
|   |   |   |   |-ImplicitCastExpr 0x2b57d025468 <col:18, col:37> 'int' <IntegralCast>
|   |   |   |   | `-ImplicitCastExpr 0x2b57d025450 <col:18, col:37> 'unsigned char' <LValueToRValue>
|   |   |   |   |   `-ArraySubscriptExpr 0x2b57d025408 <col:18, col:37> 'unsigned char' lvalue
|   |   |   |   |     |-ImplicitCastExpr 0x2b57d0253f0 <col:18> 'unsigned char *' <LValueToRValue>
|   |   |   |   |     | `-DeclRefExpr 0x2b57d0253a8 <col:18> 'unsigned char *' lvalue Var 0x2b57d085780 'rec' 'unsigned char *'
|   |   |   |   |     `-IntegerLiteral 0x2b57d0253c8 <line:81:33> 'int' 3
|   |   |   |   `-IntegerLiteral 0x2b57d025428 <line:124:42> 'int' 8
|   |   |   `-ImplicitCastExpr 0x2b57d025558 <col:47, col:66> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x2b57d025540 <col:47, col:66> 'unsigned char' <LValueToRValue>
|   |   |       `-ArraySubscriptExpr 0x2b57d025520 <col:47, col:66> 'unsigned char' lvalue
|   |   |         |-ImplicitCastExpr 0x2b57d025508 <col:47> 'unsigned char *' <LValueToRValue>
|   |   |         | `-DeclRefExpr 0x2b57d0254c0 <col:47> 'unsigned char *' lvalue Var 0x2b57d085780 'rec' 'unsigned char *'
|   |   |         `-IntegerLiteral 0x2b57d0254e0 <line:82:33> 'int' 4
|   |   |-CallExpr 0x2b57d025688 <line:125:9, col:46> 'int'
|   |   | |-ImplicitCastExpr 0x2b57d025670 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2b57d0255b0 <col:9> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x2b57d0256d0 <col:16> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x2b57d0256b8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x2b57d025608 <col:16> 'char [21]' lvalue "** Record Epoch: %d\n"
|   |   | `-ImplicitCastExpr 0x2b57d0256e8 <col:41> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2b57d025638 <col:41> 'int' lvalue Var 0x2b57d085678 'epoch' 'int'
|   |   |-CallExpr 0x2b57d025780 <line:126:9, col:38> 'int'
|   |   | |-ImplicitCastExpr 0x2b57d025768 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2b57d025700 <col:9> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x2b57d0257c0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x2b57d0257a8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x2b57d025720 <col:16> 'char [21]' lvalue "** Record Sequence: "
|   |   |-ForStmt 0x2b57d025ad8 <line:127:9, line:128:34>
|   |   | |-BinaryOperator 0x2b57d025838 <line:127:14, line:83:33> 'int' '='
|   |   | | |-DeclRefExpr 0x2b57d0257d8 <line:127:14> 'int' lvalue Var 0x2b57d085378 'i' 'int'
|   |   | | `-IntegerLiteral 0x2b57d025810 <line:83:33> 'int' 5
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x2b57d0258b8 <line:127:41, line:84:33> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x2b57d0258a0 <line:127:41> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2b57d025858 <col:41> 'int' lvalue Var 0x2b57d085378 'i' 'int'
|   |   | | `-IntegerLiteral 0x2b57d025878 <line:84:33> 'int' 10
|   |   | |-UnaryOperator 0x2b57d0258f8 <line:127:67, col:68> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x2b57d0258d8 <col:67> 'int' lvalue Var 0x2b57d085378 'i' 'int'
|   |   | `-CallExpr 0x2b57d025a48 <line:128:13, col:34> 'int'
|   |   |   |-ImplicitCastExpr 0x2b57d025a30 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x2b57d025910 <col:13> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   |   |-ImplicitCastExpr 0x2b57d025a90 <col:20> 'const char *' <NoOp>
|   |   |   | `-ImplicitCastExpr 0x2b57d025a78 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |   |   `-StringLiteral 0x2b57d025968 <col:20> 'char [5]' lvalue "%02x"
|   |   |   `-ImplicitCastExpr 0x2b57d025ac0 <col:28, col:33> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x2b57d025aa8 <col:28, col:33> 'unsigned char' <LValueToRValue>
|   |   |       `-ArraySubscriptExpr 0x2b57d0259f8 <col:28, col:33> 'unsigned char' lvalue
|   |   |         |-ImplicitCastExpr 0x2b57d0259c8 <col:28> 'unsigned char *' <LValueToRValue>
|   |   |         | `-DeclRefExpr 0x2b57d025988 <col:28> 'unsigned char *' lvalue Var 0x2b57d085780 'rec' 'unsigned char *'
|   |   |         `-ImplicitCastExpr 0x2b57d0259e0 <col:32> 'int' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x2b57d0259a8 <col:32> 'int' lvalue Var 0x2b57d085378 'i' 'int'
|   |   |-BinaryOperator 0x2b57d025d30 <line:129:9, col:63> 'int' '='
|   |   | |-DeclRefExpr 0x2b57d025b10 <col:9> 'int' lvalue Var 0x2b57d085478 'reclen' 'int'
|   |   | `-BinaryOperator 0x2b57d025d10 <col:18, col:63> 'int' '|'
|   |   |   |-ParenExpr 0x2b57d025c40 <col:18, col:42> 'int'
|   |   |   | `-BinaryOperator 0x2b57d025c20 <col:19, col:41> 'int' '<<'
|   |   |   |   |-ImplicitCastExpr 0x2b57d025c08 <col:19, col:36> 'int' <IntegralCast>
|   |   |   |   | `-ImplicitCastExpr 0x2b57d025bf0 <col:19, col:36> 'unsigned char' <LValueToRValue>
|   |   |   |   |   `-ArraySubscriptExpr 0x2b57d025ba8 <col:19, col:36> 'unsigned char' lvalue
|   |   |   |   |     |-ImplicitCastExpr 0x2b57d025b90 <col:19> 'unsigned char *' <LValueToRValue>
|   |   |   |   |     | `-DeclRefExpr 0x2b57d025b48 <col:19> 'unsigned char *' lvalue Var 0x2b57d085780 'rec' 'unsigned char *'
|   |   |   |   |     `-IntegerLiteral 0x2b57d025b68 <line:85:33> 'int' 11
|   |   |   |   `-IntegerLiteral 0x2b57d025bc8 <line:129:41> 'int' 8
|   |   |   `-ImplicitCastExpr 0x2b57d025cf8 <col:46, col:63> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x2b57d025ce0 <col:46, col:63> 'unsigned char' <LValueToRValue>
|   |   |       `-ArraySubscriptExpr 0x2b57d025cc0 <col:46, col:63> 'unsigned char' lvalue
|   |   |         |-ImplicitCastExpr 0x2b57d025ca8 <col:46> 'unsigned char *' <LValueToRValue>
|   |   |         | `-DeclRefExpr 0x2b57d025c60 <col:46> 'unsigned char *' lvalue Var 0x2b57d085780 'rec' 'unsigned char *'
|   |   |         `-IntegerLiteral 0x2b57d025c80 <line:86:33> 'int' 12
|   |   |-CallExpr 0x2b57d025e28 <line:130:9, col:50> 'int'
|   |   | |-ImplicitCastExpr 0x2b57d025e10 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2b57d025d50 <col:9> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x2b57d025e70 <col:16> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x2b57d025e58 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x2b57d025da8 <col:16> 'char [23]' lvalue "\n** Record Length: %d\n"
|   |   | `-ImplicitCastExpr 0x2b57d025e88 <col:44> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2b57d025dd8 <col:44> 'int' lvalue Var 0x2b57d085478 'reclen' 'int'
|   |   |-IfStmt 0x2b57d021c40 <line:135:9, line:164:9>
|   |   | |-OpaqueValueExpr 0x2b57d021c28 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x2b57d021c08 <line:135:43, line:164:9>
|   |   |   |-CallExpr 0x2b57d028010 <line:136:13, col:71> 'int'
|   |   |   | |-ImplicitCastExpr 0x2b57d027ff8 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x2b57d025f00 <col:13> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   |   | `-ImplicitCastExpr 0x2b57d028050 <col:20> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x2b57d028038 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x2b57d027f98 <col:20> 'char [49]' lvalue "**---- START OF HANDSHAKE MESSAGE FRAGMENT ----\n"
|   |   |   `-IfStmt 0x2b57d021be0 <line:137:13, line:163:13> has_else
|   |   |     |-BinaryOperator 0x2b57d0280c8 <line:137:17, col:25> 'int' '>'
|   |   |     | |-ImplicitCastExpr 0x2b57d0280b0 <col:17> 'int' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x2b57d028068 <col:17> 'int' lvalue Var 0x2b57d085678 'epoch' 'int'
|   |   |     | `-IntegerLiteral 0x2b57d028088 <col:25> 'int' 0
|   |   |     |-CompoundStmt 0x2b57d028220 <col:28, line:139:13>
|   |   |     | `-CallExpr 0x2b57d0281c8 <line:138:17, col:76> 'int'
|   |   |     |   |-ImplicitCastExpr 0x2b57d0281b0 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |     |   | `-DeclRefExpr 0x2b57d0280e8 <col:17> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   |     |   `-ImplicitCastExpr 0x2b57d028208 <col:24> 'const char *' <NoOp>
|   |   |     |     `-ImplicitCastExpr 0x2b57d0281f0 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |     |       `-StringLiteral 0x2b57d028148 <col:24> 'char [50]' lvalue "**---- HANDSHAKE MESSAGE FRAGMENT ENCRYPTED ----\n"
|   |   |     `-IfStmt 0x2b57d021bb8 <line:139:20, line:163:13> has_else
|   |   |       |-OpaqueValueExpr 0x2b57d021ba0 <<invalid sloc>> '_Bool'
|   |   |       |-CompoundStmt 0x2b57d028370 <line:140:57, line:142:13>
|   |   |       | `-CallExpr 0x2b57d028318 <line:141:17, col:76> 'int'
|   |   |       |   |-ImplicitCastExpr 0x2b57d028300 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |       |   | `-DeclRefExpr 0x2b57d028278 <col:17> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   |       |   `-ImplicitCastExpr 0x2b57d028358 <col:24> 'const char *' <NoOp>
|   |   |       |     `-ImplicitCastExpr 0x2b57d028340 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |       |       `-StringLiteral 0x2b57d028298 <col:24> 'char [50]' lvalue "**---- HANDSHAKE MESSAGE FRAGMENT TRUNCATED ----\n"
|   |   |       `-CompoundStmt 0x2b57d021b48 <line:142:20, line:163:13>
|   |   |         |-CallExpr 0x2b57d0284c8 <line:143:17, col:63> 'int'
|   |   |         | |-ImplicitCastExpr 0x2b57d0284b0 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |         | | `-DeclRefExpr 0x2b57d028388 <col:17> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   |         | |-ImplicitCastExpr 0x2b57d028510 <col:24> 'const char *' <NoOp>
|   |   |         | | `-ImplicitCastExpr 0x2b57d0284f8 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |         | |   `-StringLiteral 0x2b57d0283e8 <col:24> 'char [22]' lvalue "*** Message Type: %d\n"
|   |   |         | `-ImplicitCastExpr 0x2b57d028540 <col:50, col:62> 'int' <IntegralCast>
|   |   |         |   `-ImplicitCastExpr 0x2b57d028528 <col:50, col:62> 'unsigned char' <LValueToRValue>
|   |   |         |     `-ArraySubscriptExpr 0x2b57d028478 <col:50, col:62> 'unsigned char' lvalue
|   |   |         |       |-ImplicitCastExpr 0x2b57d028460 <col:50> 'unsigned char *' <LValueToRValue>
|   |   |         |       | `-DeclRefExpr 0x2b57d028418 <col:50> 'unsigned char *' lvalue Var 0x2b57d085780 'rec' 'unsigned char *'
|   |   |         |       `-IntegerLiteral 0x2b57d028438 <line:88:33> 'int' 0
|   |   |         |-BinaryOperator 0x2b57d0288b0 <line:144:17, line:145:42> 'int' '='
|   |   |         | |-DeclRefExpr 0x2b57d028558 <line:144:17> 'int' lvalue Var 0x2b57d0854f8 'msglen' 'int'
|   |   |         | `-BinaryOperator 0x2b57d028890 <col:26, line:145:42> 'int' '|'
|   |   |         |   |-BinaryOperator 0x2b57d0287c0 <line:144:26, col:74> 'int' '|'
|   |   |         |   | |-ParenExpr 0x2b57d028688 <col:26, col:48> 'int'
|   |   |         |   | | `-BinaryOperator 0x2b57d028668 <col:27, col:46> 'int' '<<'
|   |   |         |   | |   |-ImplicitCastExpr 0x2b57d028650 <col:27, col:41> 'int' <IntegralCast>
|   |   |         |   | |   | `-ImplicitCastExpr 0x2b57d028638 <col:27, col:41> 'unsigned char' <LValueToRValue>
|   |   |         |   | |   |   `-ArraySubscriptExpr 0x2b57d0285f0 <col:27, col:41> 'unsigned char' lvalue
|   |   |         |   | |   |     |-ImplicitCastExpr 0x2b57d0285d8 <col:27> 'unsigned char *' <LValueToRValue>
|   |   |         |   | |   |     | `-DeclRefExpr 0x2b57d028590 <col:27> 'unsigned char *' lvalue Var 0x2b57d085780 'rec' 'unsigned char *'
|   |   |         |   | |   |     `-IntegerLiteral 0x2b57d0285b0 <line:89:33> 'int' 1
|   |   |         |   | |   `-IntegerLiteral 0x2b57d028610 <line:144:46> 'int' 16
|   |   |         |   | `-ParenExpr 0x2b57d0287a0 <col:52, col:74> 'int'
|   |   |         |   |   `-BinaryOperator 0x2b57d028780 <col:53, col:73> 'int' '<<'
|   |   |         |   |     |-ImplicitCastExpr 0x2b57d028768 <col:53, col:68> 'int' <IntegralCast>
|   |   |         |   |     | `-ImplicitCastExpr 0x2b57d028750 <col:53, col:68> 'unsigned char' <LValueToRValue>
|   |   |         |   |     |   `-ArraySubscriptExpr 0x2b57d028708 <col:53, col:68> 'unsigned char' lvalue
|   |   |         |   |     |     |-ImplicitCastExpr 0x2b57d0286f0 <col:53> 'unsigned char *' <LValueToRValue>
|   |   |         |   |     |     | `-DeclRefExpr 0x2b57d0286a8 <col:53> 'unsigned char *' lvalue Var 0x2b57d085780 'rec' 'unsigned char *'
|   |   |         |   |     |     `-IntegerLiteral 0x2b57d0286c8 <line:90:33> 'int' 2
|   |   |         |   |     `-IntegerLiteral 0x2b57d028728 <line:144:73> 'int' 8
|   |   |         |   `-ImplicitCastExpr 0x2b57d028878 <line:145:28, col:42> 'int' <IntegralCast>
|   |   |         |     `-ImplicitCastExpr 0x2b57d028860 <col:28, col:42> 'unsigned char' <LValueToRValue>
|   |   |         |       `-ArraySubscriptExpr 0x2b57d028840 <col:28, col:42> 'unsigned char' lvalue
|   |   |         |         |-ImplicitCastExpr 0x2b57d028828 <col:28> 'unsigned char *' <LValueToRValue>
|   |   |         |         | `-DeclRefExpr 0x2b57d0287e0 <col:28> 'unsigned char *' lvalue Var 0x2b57d085780 'rec' 'unsigned char *'
|   |   |         |         `-IntegerLiteral 0x2b57d028800 <line:91:33> 'int' 3
|   |   |         |-CallExpr 0x2b57d0289a8 <line:146:17, col:58> 'int'
|   |   |         | |-ImplicitCastExpr 0x2b57d028990 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |         | | `-DeclRefExpr 0x2b57d0288d0 <col:17> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   |         | |-ImplicitCastExpr 0x2b57d0289f0 <col:24> 'const char *' <NoOp>
|   |   |         | | `-ImplicitCastExpr 0x2b57d0289d8 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |         | |   `-StringLiteral 0x2b57d028928 <col:24> 'char [24]' lvalue "*** Message Length: %d\n"
|   |   |         | `-ImplicitCastExpr 0x2b57d028a08 <col:52> 'int' <LValueToRValue>
|   |   |         |   `-DeclRefExpr 0x2b57d028958 <col:52> 'int' lvalue Var 0x2b57d0854f8 'msglen' 'int'
|   |   |         |-CallExpr 0x2b57d028cc8 <line:147:17, line:148:64> 'int'
|   |   |         | |-ImplicitCastExpr 0x2b57d028cb0 <line:147:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |         | | `-DeclRefExpr 0x2b57d028a20 <col:17> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   |         | |-ImplicitCastExpr 0x2b57d028d10 <col:24> 'const char *' <NoOp>
|   |   |         | | `-ImplicitCastExpr 0x2b57d028cf8 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |         | |   `-StringLiteral 0x2b57d028a78 <col:24> 'char [26]' lvalue "*** Message sequence: %d\n"
|   |   |         | `-BinaryOperator 0x2b57d028c78 <line:148:24, col:63> 'int' '|'
|   |   |         |   |-ParenExpr 0x2b57d028ba8 <col:24, col:45> 'int'
|   |   |         |   | `-BinaryOperator 0x2b57d028b88 <col:25, col:44> 'int' '<<'
|   |   |         |   |   |-ImplicitCastExpr 0x2b57d028b70 <col:25, col:39> 'int' <IntegralCast>
|   |   |         |   |   | `-ImplicitCastExpr 0x2b57d028b58 <col:25, col:39> 'unsigned char' <LValueToRValue>
|   |   |         |   |   |   `-ArraySubscriptExpr 0x2b57d028b10 <col:25, col:39> 'unsigned char' lvalue
|   |   |         |   |   |     |-ImplicitCastExpr 0x2b57d028af8 <col:25> 'unsigned char *' <LValueToRValue>
|   |   |         |   |   |     | `-DeclRefExpr 0x2b57d028ab0 <col:25> 'unsigned char *' lvalue Var 0x2b57d085780 'rec' 'unsigned char *'
|   |   |         |   |   |     `-IntegerLiteral 0x2b57d028ad0 <line:92:33> 'int' 4
|   |   |         |   |   `-IntegerLiteral 0x2b57d028b30 <line:148:44> 'int' 8
|   |   |         |   `-ImplicitCastExpr 0x2b57d028c60 <col:49, col:63> 'int' <IntegralCast>
|   |   |         |     `-ImplicitCastExpr 0x2b57d028c48 <col:49, col:63> 'unsigned char' <LValueToRValue>
|   |   |         |       `-ArraySubscriptExpr 0x2b57d028c28 <col:49, col:63> 'unsigned char' lvalue
|   |   |         |         |-ImplicitCastExpr 0x2b57d028c10 <col:49> 'unsigned char *' <LValueToRValue>
|   |   |         |         | `-DeclRefExpr 0x2b57d028bc8 <col:49> 'unsigned char *' lvalue Var 0x2b57d085780 'rec' 'unsigned char *'
|   |   |         |         `-IntegerLiteral 0x2b57d028be8 <line:93:33> 'int' 5
|   |   |         |-BinaryOperator 0x2b57d021020 <line:149:17, line:151:48> 'int' '='
|   |   |         | |-DeclRefExpr 0x2b57d028d28 <line:149:17> 'int' lvalue Var 0x2b57d085578 'fragoff' 'int'
|   |   |         | `-BinaryOperator 0x2b57d021000 <col:27, line:151:48> 'int' '|'
|   |   |         |   |-BinaryOperator 0x2b57d020f30 <line:149:27, line:150:56> 'int' '|'
|   |   |         |   | |-ParenExpr 0x2b57d028e58 <line:149:27, col:54> 'int'
|   |   |         |   | | `-BinaryOperator 0x2b57d028e38 <col:28, col:52> 'int' '<<'
|   |   |         |   | |   |-ImplicitCastExpr 0x2b57d028e20 <col:28, col:47> 'int' <IntegralCast>
|   |   |         |   | |   | `-ImplicitCastExpr 0x2b57d028e08 <col:28, col:47> 'unsigned char' <LValueToRValue>
|   |   |         |   | |   |   `-ArraySubscriptExpr 0x2b57d028dc0 <col:28, col:47> 'unsigned char' lvalue
|   |   |         |   | |   |     |-ImplicitCastExpr 0x2b57d028da8 <col:28> 'unsigned char *' <LValueToRValue>
|   |   |         |   | |   |     | `-DeclRefExpr 0x2b57d028d60 <col:28> 'unsigned char *' lvalue Var 0x2b57d085780 'rec' 'unsigned char *'
|   |   |         |   | |   |     `-IntegerLiteral 0x2b57d028d80 <line:94:33> 'int' 6
|   |   |         |   | |   `-IntegerLiteral 0x2b57d028de0 <line:149:52> 'int' 16
|   |   |         |   | `-ParenExpr 0x2b57d020f10 <line:150:29, col:56> 'int'
|   |   |         |   |   `-BinaryOperator 0x2b57d020ef0 <col:30, col:55> 'int' '<<'
|   |   |         |   |     |-ImplicitCastExpr 0x2b57d028f38 <col:30, col:50> 'int' <IntegralCast>
|   |   |         |   |     | `-ImplicitCastExpr 0x2b57d028f20 <col:30, col:50> 'unsigned char' <LValueToRValue>
|   |   |         |   |     |   `-ArraySubscriptExpr 0x2b57d028ed8 <col:30, col:50> 'unsigned char' lvalue
|   |   |         |   |     |     |-ImplicitCastExpr 0x2b57d028ec0 <col:30> 'unsigned char *' <LValueToRValue>
|   |   |         |   |     |     | `-DeclRefExpr 0x2b57d028e78 <col:30> 'unsigned char *' lvalue Var 0x2b57d085780 'rec' 'unsigned char *'
|   |   |         |   |     |     `-IntegerLiteral 0x2b57d028e98 <line:95:33> 'int' 7
|   |   |         |   |     `-IntegerLiteral 0x2b57d028ef8 <line:150:55> 'int' 8
|   |   |         |   `-ImplicitCastExpr 0x2b57d020fe8 <line:151:29, col:48> 'int' <IntegralCast>
|   |   |         |     `-ImplicitCastExpr 0x2b57d020fd0 <col:29, col:48> 'unsigned char' <LValueToRValue>
|   |   |         |       `-ArraySubscriptExpr 0x2b57d020fb0 <col:29, col:48> 'unsigned char' lvalue
|   |   |         |         |-ImplicitCastExpr 0x2b57d020f98 <col:29> 'unsigned char *' <LValueToRValue>
|   |   |         |         | `-DeclRefExpr 0x2b57d020f50 <col:29> 'unsigned char *' lvalue Var 0x2b57d085780 'rec' 'unsigned char *'
|   |   |         |         `-IntegerLiteral 0x2b57d020f70 <line:96:33> 'int' 8
|   |   |         |-CallExpr 0x2b57d021120 <line:152:17, col:68> 'int'
|   |   |         | |-ImplicitCastExpr 0x2b57d021108 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |         | | `-DeclRefExpr 0x2b57d021040 <col:17> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   |         | |-ImplicitCastExpr 0x2b57d021168 <col:24> 'const char *' <NoOp>
|   |   |         | | `-ImplicitCastExpr 0x2b57d021150 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |         | |   `-StringLiteral 0x2b57d021098 <col:24> 'char [33]' lvalue "*** Message Fragment offset: %d\n"
|   |   |         | `-ImplicitCastExpr 0x2b57d021180 <col:61> 'int' <LValueToRValue>
|   |   |         |   `-DeclRefExpr 0x2b57d0210d0 <col:61> 'int' lvalue Var 0x2b57d085578 'fragoff' 'int'
|   |   |         |-BinaryOperator 0x2b57d0214f0 <line:153:17, line:155:48> 'int' '='
|   |   |         | |-DeclRefExpr 0x2b57d021198 <line:153:17> 'int' lvalue Var 0x2b57d0855f8 'fraglen' 'int'
|   |   |         | `-BinaryOperator 0x2b57d0214d0 <col:27, line:155:48> 'int' '|'
|   |   |         |   |-BinaryOperator 0x2b57d021400 <line:153:27, line:154:56> 'int' '|'
|   |   |         |   | |-ParenExpr 0x2b57d0212c8 <line:153:27, col:54> 'int'
|   |   |         |   | | `-BinaryOperator 0x2b57d0212a8 <col:28, col:52> 'int' '<<'
|   |   |         |   | |   |-ImplicitCastExpr 0x2b57d021290 <col:28, col:47> 'int' <IntegralCast>
|   |   |         |   | |   | `-ImplicitCastExpr 0x2b57d021278 <col:28, col:47> 'unsigned char' <LValueToRValue>
|   |   |         |   | |   |   `-ArraySubscriptExpr 0x2b57d021230 <col:28, col:47> 'unsigned char' lvalue
|   |   |         |   | |   |     |-ImplicitCastExpr 0x2b57d021218 <col:28> 'unsigned char *' <LValueToRValue>
|   |   |         |   | |   |     | `-DeclRefExpr 0x2b57d0211d0 <col:28> 'unsigned char *' lvalue Var 0x2b57d085780 'rec' 'unsigned char *'
|   |   |         |   | |   |     `-IntegerLiteral 0x2b57d0211f0 <line:97:33> 'int' 9
|   |   |         |   | |   `-IntegerLiteral 0x2b57d021250 <line:153:52> 'int' 16
|   |   |         |   | `-ParenExpr 0x2b57d0213e0 <line:154:29, col:56> 'int'
|   |   |         |   |   `-BinaryOperator 0x2b57d0213c0 <col:30, col:55> 'int' '<<'
|   |   |         |   |     |-ImplicitCastExpr 0x2b57d0213a8 <col:30, col:50> 'int' <IntegralCast>
|   |   |         |   |     | `-ImplicitCastExpr 0x2b57d021390 <col:30, col:50> 'unsigned char' <LValueToRValue>
|   |   |         |   |     |   `-ArraySubscriptExpr 0x2b57d021348 <col:30, col:50> 'unsigned char' lvalue
|   |   |         |   |     |     |-ImplicitCastExpr 0x2b57d021330 <col:30> 'unsigned char *' <LValueToRValue>
|   |   |         |   |     |     | `-DeclRefExpr 0x2b57d0212e8 <col:30> 'unsigned char *' lvalue Var 0x2b57d085780 'rec' 'unsigned char *'
|   |   |         |   |     |     `-IntegerLiteral 0x2b57d021308 <line:98:33> 'int' 10
|   |   |         |   |     `-IntegerLiteral 0x2b57d021368 <line:154:55> 'int' 8
|   |   |         |   `-ImplicitCastExpr 0x2b57d0214b8 <line:155:29, col:48> 'int' <IntegralCast>
|   |   |         |     `-ImplicitCastExpr 0x2b57d0214a0 <col:29, col:48> 'unsigned char' <LValueToRValue>
|   |   |         |       `-ArraySubscriptExpr 0x2b57d021480 <col:29, col:48> 'unsigned char' lvalue
|   |   |         |         |-ImplicitCastExpr 0x2b57d021468 <col:29> 'unsigned char *' <LValueToRValue>
|   |   |         |         | `-DeclRefExpr 0x2b57d021420 <col:29> 'unsigned char *' lvalue Var 0x2b57d085780 'rec' 'unsigned char *'
|   |   |         |         `-IntegerLiteral 0x2b57d021440 <line:99:33> 'int' 11
|   |   |         |-CallExpr 0x2b57d0215f0 <line:156:17, col:65> 'int'
|   |   |         | |-ImplicitCastExpr 0x2b57d0215d8 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |         | | `-DeclRefExpr 0x2b57d021510 <col:17> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   |         | |-ImplicitCastExpr 0x2b57d021638 <col:24> 'const char *' <NoOp>
|   |   |         | | `-ImplicitCastExpr 0x2b57d021620 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |         | |   `-StringLiteral 0x2b57d021568 <col:24> 'char [30]' lvalue "*** Message Fragment len: %d\n"
|   |   |         | `-ImplicitCastExpr 0x2b57d021650 <col:58> 'int' <LValueToRValue>
|   |   |         |   `-DeclRefExpr 0x2b57d0215a0 <col:58> 'int' lvalue Var 0x2b57d0855f8 'fraglen' 'int'
|   |   |         `-IfStmt 0x2b57d021b20 <line:157:17, line:162:77> has_else
|   |   |           |-BinaryOperator 0x2b57d021730 <line:157:21, col:41> 'int' '>'
|   |   |           | |-BinaryOperator 0x2b57d0216d8 <col:21, col:31> 'int' '+'
|   |   |           | | |-ImplicitCastExpr 0x2b57d0216a8 <col:21> 'int' <LValueToRValue>
|   |   |           | | | `-DeclRefExpr 0x2b57d021668 <col:21> 'int' lvalue Var 0x2b57d085578 'fragoff' 'int'
|   |   |           | | `-ImplicitCastExpr 0x2b57d0216c0 <col:31> 'int' <LValueToRValue>
|   |   |           | |   `-DeclRefExpr 0x2b57d021688 <col:31> 'int' lvalue Var 0x2b57d0855f8 'fraglen' 'int'
|   |   |           | `-ImplicitCastExpr 0x2b57d021718 <col:41> 'int' <LValueToRValue>
|   |   |           |   `-DeclRefExpr 0x2b57d0216f8 <col:41> 'int' lvalue Var 0x2b57d0854f8 'msglen' 'int'
|   |   |           |-CallExpr 0x2b57d0217e8 <line:158:21, col:79> 'int'
|   |   |           | |-ImplicitCastExpr 0x2b57d0217d0 <col:21> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |           | | `-DeclRefExpr 0x2b57d021750 <col:21> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   |           | `-ImplicitCastExpr 0x2b57d021828 <col:28> 'const char *' <NoOp>
|   |   |           |   `-ImplicitCastExpr 0x2b57d021810 <col:28> 'char *' <ArrayToPointerDecay>
|   |   |           |     `-StringLiteral 0x2b57d021770 <col:28> 'char [49]' lvalue "***---- HANDSHAKE MESSAGE FRAGMENT INVALID ----\n"
|   |   |           `-IfStmt 0x2b57d021af8 <line:159:22, line:162:77> has_else
|   |   |             |-BinaryOperator 0x2b57d0218b0 <line:159:25, col:34> 'int' '<'
|   |   |             | |-ImplicitCastExpr 0x2b57d021880 <col:25> 'int' <LValueToRValue>
|   |   |             | | `-DeclRefExpr 0x2b57d021840 <col:25> 'int' lvalue Var 0x2b57d085478 'reclen' 'int'
|   |   |             | `-ImplicitCastExpr 0x2b57d021898 <col:34> 'int' <LValueToRValue>
|   |   |             |   `-DeclRefExpr 0x2b57d021860 <col:34> 'int' lvalue Var 0x2b57d0855f8 'fraglen' 'int'
|   |   |             |-CallExpr 0x2b57d021970 <line:160:21, col:80> 'int'
|   |   |             | |-ImplicitCastExpr 0x2b57d021958 <col:21> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |             | | `-DeclRefExpr 0x2b57d0218d0 <col:21> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   |             | `-ImplicitCastExpr 0x2b57d0219b0 <col:28> 'const char *' <NoOp>
|   |   |             |   `-ImplicitCastExpr 0x2b57d021998 <col:28> 'char *' <ArrayToPointerDecay>
|   |   |             |     `-StringLiteral 0x2b57d0218f0 <col:28> 'char [50]' lvalue "**---- HANDSHAKE MESSAGE FRAGMENT TRUNCATED ----\n"
|   |   |             `-CallExpr 0x2b57d021aa0 <line:162:21, col:77> 'int'
|   |   |               |-ImplicitCastExpr 0x2b57d021a88 <col:21> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |               | `-DeclRefExpr 0x2b57d0219c8 <col:21> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   |               `-ImplicitCastExpr 0x2b57d021ae0 <col:28> 'const char *' <NoOp>
|   |   |                 `-ImplicitCastExpr 0x2b57d021ac8 <col:28> 'char *' <ArrayToPointerDecay>
|   |   |                   `-StringLiteral 0x2b57d021a28 <col:28> 'char [47]' lvalue "**---- END OF HANDSHAKE MESSAGE FRAGMENT ----\n"
|   |   `-IfStmt 0x2b57d029100 <line:165:9, line:172:9> has_else
|   |     |-BinaryOperator 0x2b57d021cc8 <line:165:13, col:19> 'int' '<'
|   |     | |-ImplicitCastExpr 0x2b57d021c98 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2b57d021c58 <col:13> 'int' lvalue Var 0x2b57d0852f8 'rem' 'int'
|   |     | `-ImplicitCastExpr 0x2b57d021cb0 <col:19> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2b57d021c78 <col:19> 'int' lvalue Var 0x2b57d085478 'reclen' 'int'
|   |     |-CompoundStmt 0x2b57d021e30 <col:27, line:168:9>
|   |     | |-CallExpr 0x2b57d021d70 <line:166:13, col:51> 'int'
|   |     | | |-ImplicitCastExpr 0x2b57d021d58 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x2b57d021ce8 <col:13> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |     | | `-ImplicitCastExpr 0x2b57d021db0 <col:20> 'const char *' <NoOp>
|   |     | |   `-ImplicitCastExpr 0x2b57d021d98 <col:20> 'char *' <ArrayToPointerDecay>
|   |     | |     `-StringLiteral 0x2b57d021d08 <col:20> 'char [29]' lvalue "*---- RECORD TRUNCATED ----\n"
|   |     | `-BinaryOperator 0x2b57d021e10 <line:167:13, col:19> 'int' '='
|   |     |   |-DeclRefExpr 0x2b57d021dc8 <col:13> 'int' lvalue Var 0x2b57d0852f8 'rem' 'int'
|   |     |   `-IntegerLiteral 0x2b57d021de8 <col:19> 'int' 0
|   |     `-CompoundStmt 0x2b57d0290d8 <line:168:16, line:172:9>
|   |       |-CompoundAssignOperator 0x2b57d021ea8 <line:169:13, col:20> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |       | |-DeclRefExpr 0x2b57d021e50 <col:13> 'unsigned char *' lvalue Var 0x2b57d085780 'rec' 'unsigned char *'
|   |       | `-ImplicitCastExpr 0x2b57d021e90 <col:20> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x2b57d021e70 <col:20> 'int' lvalue Var 0x2b57d085478 'reclen' 'int'
|   |       |-CompoundAssignOperator 0x2b57d028fc8 <line:170:13, col:20> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-DeclRefExpr 0x2b57d028f70 <col:13> 'int' lvalue Var 0x2b57d0852f8 'rem' 'int'
|   |       | `-ImplicitCastExpr 0x2b57d028fb0 <col:20> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x2b57d028f90 <col:20> 'int' lvalue Var 0x2b57d085478 'reclen' 'int'
|   |       `-CallExpr 0x2b57d029080 <line:171:13, col:48> 'int'
|   |         |-ImplicitCastExpr 0x2b57d029068 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x2b57d028ff8 <col:13> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |         `-ImplicitCastExpr 0x2b57d0290c0 <col:20> 'const char *' <NoOp>
|   |           `-ImplicitCastExpr 0x2b57d0290a8 <col:20> 'char *' <ArrayToPointerDecay>
|   |             `-StringLiteral 0x2b57d029018 <col:20> 'char [26]' lvalue "*---- END OF RECORD ----\n"
|   `-CallExpr 0x2b57d029248 <line:174:5, col:41> 'int'
|     |-ImplicitCastExpr 0x2b57d029230 <col:5> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x2b57d0291c0 <col:5> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|     `-ImplicitCastExpr 0x2b57d029288 <col:12> 'const char *' <NoOp>
|       `-ImplicitCastExpr 0x2b57d029270 <col:12> 'char *' <ArrayToPointerDecay>
|         `-StringLiteral 0x2b57d0291e0 <col:12> 'char [26]' lvalue "---- END OF PACKET ----\n\n"
|-FunctionDecl 0x2b57d085838 <line:107:5> col:5 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x2b57d0858d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2b57d085948 <col:5> Implicit printf 1 2
|-FunctionDecl 0x2b57d0295b8 <line:178:1, line:191:1> line:178:12 invalid tls_dump_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x2b57d029410 <col:26, col:31> col:31 invalid bio 'int *'
| |-ParmVarDecl 0x2b57d029490 <col:36, col:42> col:42 used out 'char *'
| |-ParmVarDecl 0x2b57d029510 <col:47, col:51> col:51 used outl 'int'
| `-CompoundStmt 0x2b57d029b10 <line:179:1, line:191:1>
|   |-DeclStmt 0x2b57d029708 <line:180:5, col:12>
|   | `-VarDecl 0x2b57d0296a0 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x2b57d029ab0 <line:186:5, line:188:5>
|   | |-BinaryOperator 0x2b57d029958 <line:186:9, col:15> 'int' '>'
|   | | |-ImplicitCastExpr 0x2b57d029940 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2b57d0298f8 <col:9> 'int' lvalue Var 0x2b57d0296a0 'ret' 'int'
|   | | `-IntegerLiteral 0x2b57d029918 <col:15> 'int' 0
|   | `-CompoundStmt 0x2b57d029a98 <col:18, line:188:5>
|   |   `-CallExpr 0x2b57d029a20 <line:187:9, col:27> 'void'
|   |     |-ImplicitCastExpr 0x2b57d029a08 <col:9> 'void (*)(const char *, int)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2b57d029978 <col:9> 'void (const char *, int)' Function 0x2b57d085218 'dump_data' 'void (const char *, int)'
|   |     |-ImplicitCastExpr 0x2b57d029a68 <col:19> 'const char *' <NoOp>
|   |     | `-ImplicitCastExpr 0x2b57d029a50 <col:19> 'char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2b57d029998 <col:19> 'char *' lvalue ParmVar 0x2b57d029490 'out' 'char *'
|   |     `-ImplicitCastExpr 0x2b57d029a80 <col:24> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x2b57d0299b8 <col:24> 'int' lvalue Var 0x2b57d0296a0 'ret' 'int'
|   `-ReturnStmt 0x2b57d029b00 <line:190:5, col:12>
|     `-ImplicitCastExpr 0x2b57d029ae8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2b57d029ac8 <col:12> 'int' lvalue Var 0x2b57d0296a0 'ret' 'int'
|-FunctionDecl 0x2b57d029cf8 <line:193:1, line:202:1> line:193:12 invalid tls_dump_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x2b57d029b50 <col:27, col:32> col:32 invalid bio 'int *'
| |-ParmVarDecl 0x2b57d029bd0 <col:37, col:49> col:49 used in 'const char *'
| |-ParmVarDecl 0x2b57d029c50 <col:53, col:57> col:57 used inl 'int'
| `-CompoundStmt 0x2b57d0270f0 <line:194:1, line:202:1>
|   |-DeclStmt 0x2b57d029e48 <line:195:5, col:12>
|   | `-VarDecl 0x2b57d029de0 <col:5, col:9> col:9 used ret 'int'
|   `-ReturnStmt 0x2b57d0270e0 <line:201:5, col:12>
|     `-ImplicitCastExpr 0x2b57d0270c8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2b57d0270a8 <col:12> 'int' lvalue Var 0x2b57d029de0 'ret' 'int'
|-FunctionDecl 0x2b57d027358 <line:204:1, line:221:1> line:204:13 invalid tls_dump_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x2b57d027128 <col:27, col:32> col:32 invalid bio 'int *'
| |-ParmVarDecl 0x2b57d0271a8 <col:37, col:41> col:41 used cmd 'int'
| |-ParmVarDecl 0x2b57d027228 <col:46, col:51> col:51 used num 'long'
| |-ParmVarDecl 0x2b57d0272a8 <col:56, col:62> col:62 used ptr 'void *'
| `-CompoundStmt 0x2b57d027950 <line:205:1, line:221:1>
|   |-DeclStmt 0x2b57d0274b0 <line:206:5, col:13>
|   | `-VarDecl 0x2b57d027448 <col:5, col:10> col:10 used ret 'long'
|   |-IfStmt 0x2b57d0275d8 <line:209:5, line:210:16>
|   | |-OpaqueValueExpr 0x2b57d0275c0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2b57d0275b0 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x2b57d027598 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x2b57d027570 <col:16> 'int' 0
|   |-SwitchStmt 0x2b57d027640 <line:212:5, line:219:5>
|   | |-ImplicitCastExpr 0x2b57d027628 <line:212:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x2b57d0275f0 <col:13> 'int' lvalue ParmVar 0x2b57d0271a8 'cmd' 'int'
|   | `-CompoundStmt 0x2b57d0278d8 <col:18, line:219:5>
|   |   |-BinaryOperator 0x2b57d0276c0 <line:214:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x2b57d027660 <col:9> 'long' lvalue Var 0x2b57d027448 'ret' 'long'
|   |   | `-IntegerLiteral 0x2b57d027698 <col:15> 'long' 0
|   |   |-BreakStmt 0x2b57d0276e0 <line:215:9>
|   |   |-DefaultStmt 0x2b57d0278b0 <line:216:5, col:12>
|   |   | `-NullStmt 0x2b57d0278a8 <col:12>
|   |   `-BreakStmt 0x2b57d0278d0 <line:218:9>
|   `-ReturnStmt 0x2b57d027940 <line:220:5, col:12>
|     `-ImplicitCastExpr 0x2b57d027928 <col:12> 'long' <LValueToRValue>
|       `-DeclRefExpr 0x2b57d027908 <col:12> 'long' lvalue Var 0x2b57d027448 'ret' 'long'
|-FunctionDecl 0x2b57d027b40 <line:223:1, line:227:1> line:223:12 invalid tls_dump_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x2b57d027998 <col:26, col:31> col:31 invalid bio 'int *'
| |-ParmVarDecl 0x2b57d027a18 <col:36, col:42> col:42 buf 'char *'
| |-ParmVarDecl 0x2b57d027a98 <col:47, col:51> col:51 size 'int'
| `-CompoundStmt 0x2b57d027c60 <line:224:1, line:227:1>
|   `-ReturnStmt 0x2b57d027c50 <line:226:5, col:13>
|     `-UnaryOperator 0x2b57d027c38 <col:12, col:13> 'int' prefix '-'
|       `-IntegerLiteral 0x2b57d027c10 <col:13> 'int' 1
|-FunctionDecl 0x2b57d027de0 <line:229:1, line:232:1> line:229:12 invalid tls_dump_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x2b57d027cc0 <col:26, col:31> col:31 invalid bio 'int *'
| |-ParmVarDecl 0x2b57d027d40 <col:36, col:48> col:48 used str 'const char *'
| `-CompoundStmt 0x2b57d021f80 <line:230:1, line:232:1>
|-RecordDecl 0x2b57d021f90 prev 0x2b57d083f68 <line:235:1, line:240:1> line:235:8 struct mempacket_st definition
| |-FieldDecl 0x2b57d022028 <line:236:5, col:20> col:20 referenced data 'unsigned char *'
| |-FieldDecl 0x2b57d022098 <line:237:5, col:9> col:9 referenced len 'int'
| |-FieldDecl 0x2b57d022108 <line:238:5, col:18> col:18 referenced num 'unsigned int'
| `-FieldDecl 0x2b57d022178 <line:239:5, col:18> col:18 referenced type 'unsigned int'
|-FunctionDecl 0x2b57d022348 <line:242:1, line:247:1> line:242:13 used mempacket_free 'void (MEMPACKET *)' static
| |-ParmVarDecl 0x2b57d022238 <col:28, col:39> col:39 used pkt 'MEMPACKET *'
| `-CompoundStmt 0x2b57d0227f0 <line:243:1, line:247:1>
|   |-IfStmt 0x2b57d022740 <line:244:5, line:245:31>
|   | |-BinaryOperator 0x2b57d022528 <line:244:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x2b57d0224f8 <.//openssl//file_jk/after\test\ssltestlib.c:244:9, col:14> 'unsigned char *' <LValueToRValue>
|   | | | `-MemberExpr 0x2b57d022440 <col:9, col:14> 'unsigned char *' lvalue ->data 0x2b57d022028
|   | | |   `-ImplicitCastExpr 0x2b57d022428 <col:9> 'MEMPACKET *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x2b57d022408 <col:9> 'MEMPACKET *' lvalue ParmVar 0x2b57d022238 'pkt' 'MEMPACKET *'
|   | | `-ImplicitCastExpr 0x2b57d022510 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x2b57d0224d8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2b57d0224b0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2b57d022470 <col:26> 'int' 0
|   | `-CallExpr 0x2b57d022700 <.//openssl//file_jk/after\test\ssltestlib.c:245:9, col:31> 'int'
|   |   |-ImplicitCastExpr 0x2b57d0226e8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2b57d022638 <col:9> 'int ()' Function 0x2b57d022570 'OPENSSL_free' 'int ()'
|   |   `-ImplicitCastExpr 0x2b57d022728 <col:22, col:27> 'unsigned char *' <LValueToRValue>
|   |     `-MemberExpr 0x2b57d022690 <col:22, col:27> 'unsigned char *' lvalue ->data 0x2b57d022028
|   |       `-ImplicitCastExpr 0x2b57d022678 <col:22> 'MEMPACKET *' <LValueToRValue>
|   |         `-DeclRefExpr 0x2b57d022658 <col:22> 'MEMPACKET *' lvalue ParmVar 0x2b57d022238 'pkt' 'MEMPACKET *'
|   `-CallExpr 0x2b57d0227b0 <line:246:5, col:21> 'int'
|     |-ImplicitCastExpr 0x2b57d022798 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x2b57d022758 <col:5> 'int ()' Function 0x2b57d022570 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x2b57d0227d8 <col:18> 'MEMPACKET *' <LValueToRValue>
|       `-DeclRefExpr 0x2b57d022778 <col:18> 'MEMPACKET *' lvalue ParmVar 0x2b57d022238 'pkt' 'MEMPACKET *'
|-RecordDecl 0x2b57d022810 <line:249:9, line:256:1> line:249:16 invalid struct mempacket_test_ctx_st definition
| |-FieldDecl 0x2b57d022978 <line:250:5, <invalid sloc>> col:5 invalid STACK_OF 'int (MEMPACKET)'
| |-FieldDecl 0x2b57d0229e8 <line:251:5, col:18> col:18 referenced epoch 'unsigned int'
| |-FieldDecl 0x2b57d022a58 <line:252:5, col:18> col:18 referenced currrec 'unsigned int'
| |-FieldDecl 0x2b57d022ac8 <line:253:5, col:18> col:18 referenced currpkt 'unsigned int'
| |-FieldDecl 0x2b57d022b38 <line:254:5, col:18> col:18 referenced lastpkt 'unsigned int'
| `-FieldDecl 0x2b57d022ba8 <line:255:5, col:18> col:18 referenced noinject 'unsigned int'
|-TypedefDecl 0x2b57d022c58 <line:249:1, line:256:3> col:3 referenced MEMPACKET_TEST_CTX 'struct mempacket_test_ctx_st':'struct mempacket_test_ctx_st'
| `-ElaboratedType 0x2b57d022c00 'struct mempacket_test_ctx_st' sugar
|   `-RecordType 0x2b57d0228b0 'struct mempacket_test_ctx_st'
|     `-Record 0x2b57d022810 'mempacket_test_ctx_st'
|-FunctionDecl 0x2b57d022d78 <line:258:1, col:38> col:12 invalid mempacket_test_new 'int (int *)' static
| `-ParmVarDecl 0x2b57d022ce0 <col:31, col:36> col:36 invalid bi 'int *'
|-FunctionDecl 0x2b57d029f80 <line:259:1, col:38> col:12 invalid mempacket_test_free 'int (int *)' static
| `-ParmVarDecl 0x2b57d022e38 <col:32, col:37> col:37 invalid a 'int *'
|-FunctionDecl 0x2b57d02a1e8 <line:260:1, col:59> col:12 invalid mempacket_test_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x2b57d02a040 <col:32, col:37> col:37 invalid b 'int *'
| |-ParmVarDecl 0x2b57d02a0c0 <col:40, col:46> col:46 out 'char *'
| `-ParmVarDecl 0x2b57d02a140 <col:51, col:55> col:55 outl 'int'
|-FunctionDecl 0x2b57d02a460 <line:261:1, col:64> col:12 invalid mempacket_test_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x2b57d02a2b8 <col:33, col:38> col:38 invalid b 'int *'
| |-ParmVarDecl 0x2b57d02a338 <col:41, col:53> col:53 in 'const char *'
| `-ParmVarDecl 0x2b57d02a3b8 <col:57, col:61> col:61 inl 'int'
|-FunctionDecl 0x2b57d02a760 <line:262:1, col:69> col:13 invalid mempacket_test_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x2b57d02a530 <col:33, col:38> col:38 invalid b 'int *'
| |-ParmVarDecl 0x2b57d02a5b0 <col:41, col:45> col:45 cmd 'int'
| |-ParmVarDecl 0x2b57d02a630 <col:50, col:55> col:55 num 'long'
| `-ParmVarDecl 0x2b57d02a6b0 <col:60, col:66> col:66 ptr 'void *'
|-FunctionDecl 0x2b57d02a9e0 <line:263:1, col:60> col:12 invalid mempacket_test_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x2b57d02a838 <col:32, col:37> col:37 invalid bp 'int *'
| |-ParmVarDecl 0x2b57d02a8b8 <col:41, col:47> col:47 buf 'char *'
| `-ParmVarDecl 0x2b57d02a938 <col:52, col:56> col:56 size 'int'
|-FunctionDecl 0x2b57d02abd0 <line:264:1, col:56> col:12 invalid mempacket_test_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x2b57d02aab0 <col:32, col:37> col:37 invalid bp 'int *'
| `-ParmVarDecl 0x2b57d02ab30 <col:41, col:53> col:53 str 'const char *'
|-FunctionDecl 0x2b57d02ad20 <line:266:1, line:282:1> line:266:19 invalid bio_s_mempacket_test 'const int *(void)'
| `-CompoundStmt 0x2b57d023160 <line:267:1, line:282:1>
|   `-IfStmt 0x2b57d023148 <line:268:5, line:280:5>
|     |-OpaqueValueExpr 0x2b57d023130 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x2b57d023118 <line:268:40, line:280:5>
|       `-IfStmt 0x2b57d023100 <line:271:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|         |-OpaqueValueExpr 0x2b57d0230e8 <<invalid sloc>> '_Bool'
|         `-ReturnStmt 0x2b57d0230d8 <.//openssl//file_jk/after\test\ssltestlib.c:279:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|           `-ImplicitCastExpr 0x2b57d0230c0 <col:17, col:27> 'const int *' <NullToPointer>
|             `-ParenExpr 0x2b57d0230a0 <col:17, col:27> 'void *'
|               `-CStyleCastExpr 0x2b57d023078 <col:18, col:26> 'void *' <NullToPointer>
|                 `-IntegerLiteral 0x2b57d023038 <col:26> 'int' 0
|-FunctionDecl 0x2b57d023210 prev 0x2b57d083ac8 <.//openssl//file_jk/after\test\ssltestlib.c:284:1, line:287:1> line:284:6 bio_s_mempacket_test_free 'void (void)'
| `-CompoundStmt 0x2b57d0232d0 <line:285:1, line:287:1>
|-FunctionDecl 0x2b57d023390 <line:289:1, line:302:1> line:289:12 invalid mempacket_test_new 'int (int *)' static
| |-ParmVarDecl 0x2b57d0232f8 <col:31, col:36> col:36 invalid bio 'int *'
| `-CompoundStmt 0x2b57d023dc0 <line:290:1, line:302:1>
|   |-DeclStmt 0x2b57d023738 <line:291:5, col:59>
|   | `-VarDecl 0x2b57d0234d8 <col:5, col:58> col:25 used ctx 'MEMPACKET_TEST_CTX *' cinit
|   |   `-ImplicitCastExpr 0x2b57d023720 <col:31, col:58> 'MEMPACKET_TEST_CTX *' <IntegralToPointer>
|   |     `-CallExpr 0x2b57d0236f8 <col:31, col:58> 'int'
|   |       |-ImplicitCastExpr 0x2b57d0236e0 <col:31> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x2b57d023630 <col:31> 'int ()' Function 0x2b57d023568 'OPENSSL_zalloc' 'int ()'
|   |       `-UnaryExprOrTypeTraitExpr 0x2b57d0236c0 <col:46, col:57> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x2b57d0236a0 <col:52, col:57> 'MEMPACKET_TEST_CTX':'struct mempacket_test_ctx_st' lvalue
|   |           `-UnaryOperator 0x2b57d023688 <col:53, col:54> 'MEMPACKET_TEST_CTX':'struct mempacket_test_ctx_st' lvalue prefix '*' cannot overflow
|   |             `-ImplicitCastExpr 0x2b57d023670 <col:54> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |               `-DeclRefExpr 0x2b57d023650 <col:54> 'MEMPACKET_TEST_CTX *' lvalue Var 0x2b57d0234d8 'ctx' 'MEMPACKET_TEST_CTX *' non_odr_use_unevaluated
|   |-IfStmt 0x2b57d023898 <line:292:5, line:293:16>
|   | |-BinaryOperator 0x2b57d023840 <line:292:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x2b57d023810 <.//openssl//file_jk/after\test\ssltestlib.c:292:9> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2b57d023750 <col:9> 'MEMPACKET_TEST_CTX *' lvalue Var 0x2b57d0234d8 'ctx' 'MEMPACKET_TEST_CTX *'
|   | | `-ImplicitCastExpr 0x2b57d023828 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'MEMPACKET_TEST_CTX *' <BitCast>
|   | |   `-ParenExpr 0x2b57d0237f0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2b57d0237c8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2b57d023788 <col:26> 'int' 0
|   | `-ReturnStmt 0x2b57d023888 <.//openssl//file_jk/after\test\ssltestlib.c:293:9, col:16>
|   |   `-IntegerLiteral 0x2b57d023860 <col:16> 'int' 0
|   |-IfStmt 0x2b57d023bf8 <line:295:5, line:298:5>
|   | |-OpaqueValueExpr 0x2b57d023be0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2b57d023bc0 <line:295:28, line:298:5>
|   |   |-CallExpr 0x2b57d023b48 <line:296:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x2b57d023b30 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2b57d023af0 <col:9> 'int ()' Function 0x2b57d022570 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x2b57d023b70 <col:22> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2b57d023b10 <col:22> 'MEMPACKET_TEST_CTX *' lvalue Var 0x2b57d0234d8 'ctx' 'MEMPACKET_TEST_CTX *'
|   |   `-ReturnStmt 0x2b57d023bb0 <line:297:9, col:16>
|   |     `-IntegerLiteral 0x2b57d023b88 <col:16> 'int' 0
|   `-ReturnStmt 0x2b57d023db0 <line:301:5, col:12>
|     `-IntegerLiteral 0x2b57d023d88 <col:12> 'int' 1
|-FunctionDecl 0x2b57d02af90 <line:304:1, line:314:1> line:304:12 invalid mempacket_test_free 'int (int *)' static
| |-ParmVarDecl 0x2b57d023e08 <col:32, col:37> col:37 invalid bio 'int *'
| `-CompoundStmt 0x2b57d02b530 <line:305:1, line:314:1>
|   |-DeclStmt 0x2b57d02b1d8 <line:306:5, col:48>
|   | `-VarDecl 0x2b57d02b060 <col:5, col:25> col:25 used ctx 'MEMPACKET_TEST_CTX *'
|   |-CallExpr 0x2b57d02b3c8 <line:309:5, col:21> 'int'
|   | |-ImplicitCastExpr 0x2b57d02b3b0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2b57d02b370 <col:5> 'int ()' Function 0x2b57d022570 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x2b57d02b3f0 <col:18> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2b57d02b390 <col:18> 'MEMPACKET_TEST_CTX *' lvalue Var 0x2b57d02b060 'ctx' 'MEMPACKET_TEST_CTX *'
|   `-ReturnStmt 0x2b57d02b520 <line:313:5, col:12>
|     `-IntegerLiteral 0x2b57d02b4f8 <col:12> 'int' 1
|-FunctionDecl 0x2b57d02b718 <line:325:1, line:387:1> line:325:12 invalid mempacket_test_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x2b57d02b570 <col:32, col:37> col:37 invalid bio 'int *'
| |-ParmVarDecl 0x2b57d02b5f0 <col:42, col:48> col:48 used out 'char *'
| |-ParmVarDecl 0x2b57d02b670 <col:53, col:57> col:57 used outl 'int'
| `-CompoundStmt 0x2b57d026c08 <line:326:1, line:387:1>
|   |-DeclStmt 0x2b57d02b880 <line:327:5, col:48>
|   | `-VarDecl 0x2b57d02b7f8 <col:5, col:25> col:25 used ctx 'MEMPACKET_TEST_CTX *'
|   |-DeclStmt 0x2b57d02b910 <line:328:5, col:23>
|   | `-VarDecl 0x2b57d02b8a8 <col:5, col:16> col:16 used thispkt 'MEMPACKET *'
|   |-DeclStmt 0x2b57d02b9a8 <line:329:5, col:23>
|   | `-VarDecl 0x2b57d02b940 <col:5, col:20> col:20 used rec 'unsigned char *'
|   |-DeclStmt 0x2b57d02ba40 <line:330:5, col:12>
|   | `-VarDecl 0x2b57d02b9d8 <col:5, col:9> col:9 used rem 'int'
|   |-DeclStmt 0x2b57d02bc80 <line:331:5, col:41>
|   | |-VarDecl 0x2b57d02ba70 <col:5, col:18> col:18 used seq 'unsigned int'
|   | |-VarDecl 0x2b57d02baf0 <col:5, col:23> col:23 used offset 'unsigned int'
|   | |-VarDecl 0x2b57d02bb70 <col:5, col:31> col:31 used len 'unsigned int'
|   | `-VarDecl 0x2b57d02bbf0 <col:5, col:36> col:36 used epoch 'unsigned int'
|   |-IfStmt 0x2b57d02d340 <line:336:5, line:340:5>
|   | |-BinaryOperator 0x2b57d02d1a8 <line:336:9, col:49> 'int' '||'
|   | | |-BinaryOperator 0x2b57d02d068 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | | |-ImplicitCastExpr 0x2b57d02d038 <.//openssl//file_jk/after\test\ssltestlib.c:336:9> 'MEMPACKET *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2b57d02bf68 <col:9> 'MEMPACKET *' lvalue Var 0x2b57d02b8a8 'thispkt' 'MEMPACKET *'
|   | | | `-ImplicitCastExpr 0x2b57d02d050 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'MEMPACKET *' <BitCast>
|   | | |   `-ParenExpr 0x2b57d02d018 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x2b57d02cff0 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x2b57d02cfb0 <col:26> 'int' 0
|   | | `-BinaryOperator 0x2b57d02d188 <.//openssl//file_jk/after\test\ssltestlib.c:336:28, col:49> 'int' '!='
|   | |   |-ImplicitCastExpr 0x2b57d02d158 <col:28, col:37> 'unsigned int' <LValueToRValue>
|   | |   | `-MemberExpr 0x2b57d02d0c0 <col:28, col:37> 'unsigned int' lvalue ->num 0x2b57d022108
|   | |   |   `-ImplicitCastExpr 0x2b57d02d0a8 <col:28> 'MEMPACKET *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x2b57d02d088 <col:28> 'MEMPACKET *' lvalue Var 0x2b57d02b8a8 'thispkt' 'MEMPACKET *'
|   | |   `-ImplicitCastExpr 0x2b57d02d170 <col:44, col:49> 'unsigned int' <LValueToRValue>
|   | |     `-MemberExpr 0x2b57d02d128 <col:44, col:49> 'unsigned int' lvalue ->currpkt 0x2b57d022ac8
|   | |       `-ImplicitCastExpr 0x2b57d02d110 <col:44> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x2b57d02d0f0 <col:44> 'MEMPACKET_TEST_CTX *' lvalue Var 0x2b57d02b7f8 'ctx' 'MEMPACKET_TEST_CTX *'
|   | `-CompoundStmt 0x2b57d02d328 <col:58, line:340:5>
|   |   `-ReturnStmt 0x2b57d02d318 <line:339:9, col:17>
|   |     `-UnaryOperator 0x2b57d02d300 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x2b57d02d2d8 <col:17> 'int' 1
|   |-UnaryOperator 0x2b57d02d508 <line:342:5, col:17> 'unsigned int' postfix '++'
|   | `-MemberExpr 0x2b57d02d4d8 <col:5, col:10> 'unsigned int' lvalue ->currpkt 0x2b57d022ac8
|   |   `-ImplicitCastExpr 0x2b57d02d4c0 <col:5> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2b57d02d4a0 <col:5> 'MEMPACKET_TEST_CTX *' lvalue Var 0x2b57d02b7f8 'ctx' 'MEMPACKET_TEST_CTX *'
|   |-IfStmt 0x2b57d02d6d0 <line:344:5, line:345:25>
|   | |-BinaryOperator 0x2b57d02d5f0 <line:344:9, col:25> 'int' '>'
|   | | |-ImplicitCastExpr 0x2b57d02d5c0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2b57d02d520 <col:9> 'int' lvalue ParmVar 0x2b57d02b670 'outl' 'int'
|   | | `-ImplicitCastExpr 0x2b57d02d5d8 <col:16, col:25> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x2b57d02d590 <col:16, col:25> 'int' lvalue ->len 0x2b57d022098
|   | |     `-ImplicitCastExpr 0x2b57d02d578 <col:16> 'MEMPACKET *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x2b57d02d558 <col:16> 'MEMPACKET *' lvalue Var 0x2b57d02b8a8 'thispkt' 'MEMPACKET *'
|   | `-BinaryOperator 0x2b57d02d6b0 <line:345:9, col:25> 'int' '='
|   |   |-DeclRefExpr 0x2b57d02d610 <col:9> 'int' lvalue ParmVar 0x2b57d02b670 'outl' 'int'
|   |   `-ImplicitCastExpr 0x2b57d02d698 <col:16, col:25> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x2b57d02d668 <col:16, col:25> 'int' lvalue ->len 0x2b57d022098
|   |       `-ImplicitCastExpr 0x2b57d02d650 <col:16> 'MEMPACKET *' <LValueToRValue>
|   |         `-DeclRefExpr 0x2b57d02d630 <col:16> 'MEMPACKET *' lvalue Var 0x2b57d02b8a8 'thispkt' 'MEMPACKET *'
|   |-IfStmt 0x2b57d026880 <line:347:5, line:380:5>
|   | |-BinaryOperator 0x2b57d02d7a8 <line:347:9, .//openssl//file_jk/after\test/ssltestlib.h:32:41> 'int' '!='
|   | | |-ImplicitCastExpr 0x2b57d02d778 <.//openssl//file_jk/after\test\ssltestlib.c:347:9, col:18> 'unsigned int' <LValueToRValue>
|   | | | `-MemberExpr 0x2b57d02d720 <col:9, col:18> 'unsigned int' lvalue ->type 0x2b57d022178
|   | | |   `-ImplicitCastExpr 0x2b57d02d708 <col:9> 'MEMPACKET *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x2b57d02d6e8 <col:9> 'MEMPACKET *' lvalue Var 0x2b57d02b8a8 'thispkt' 'MEMPACKET *'
|   | | `-ImplicitCastExpr 0x2b57d02d790 <.//openssl//file_jk/after\test/ssltestlib.h:32:41> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x2b57d02d750 <col:41> 'int' 2
|   | `-CompoundStmt 0x2b57d026858 <.//openssl//file_jk/after\test\ssltestlib.c:347:56, line:380:5>
|   |   |-BinaryOperator 0x2b57d02d880 <line:354:9, col:24> 'int' '='
|   |   | |-DeclRefExpr 0x2b57d02d7c8 <col:9> 'int' lvalue Var 0x2b57d02b9d8 'rem' 'int'
|   |   | `-ImplicitCastExpr 0x2b57d02d868 <col:15, col:24> 'int' <LValueToRValue>
|   |   |   `-MemberExpr 0x2b57d02d838 <col:15, col:24> 'int' lvalue ->len 0x2b57d022098
|   |   |     `-ImplicitCastExpr 0x2b57d02d820 <col:15> 'MEMPACKET *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x2b57d02d800 <col:15> 'MEMPACKET *' lvalue Var 0x2b57d02b8a8 'thispkt' 'MEMPACKET *'
|   |   |-BinaryOperator 0x2b57d02d958 <line:355:9, col:24> 'unsigned char *' '='
|   |   | |-DeclRefExpr 0x2b57d02d8a0 <col:9> 'unsigned char *' lvalue Var 0x2b57d02b940 'rec' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x2b57d02d940 <col:15, col:24> 'unsigned char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x2b57d02d910 <col:15, col:24> 'unsigned char *' lvalue ->data 0x2b57d022028
|   |   |     `-ImplicitCastExpr 0x2b57d02d8f8 <col:15> 'MEMPACKET *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x2b57d02d8d8 <col:15> 'MEMPACKET *' lvalue Var 0x2b57d02b8a8 'thispkt' 'MEMPACKET *'
|   |   `-WhileStmt 0x2b57d026840 <line:356:9, line:379:9>
|   |     |-BinaryOperator 0x2b57d02d9d8 <line:356:16, col:22> 'int' '>'
|   |     | |-ImplicitCastExpr 0x2b57d02d9c0 <col:16> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2b57d02d978 <col:16> 'int' lvalue Var 0x2b57d02b9d8 'rem' 'int'
|   |     | `-IntegerLiteral 0x2b57d02d998 <col:22> 'int' 0
|   |     `-CompoundStmt 0x2b57d0267e8 <col:25, line:379:9>
|   |       |-IfStmt 0x2b57d02da98 <line:357:13, line:359:13>
|   |       | |-OpaqueValueExpr 0x2b57d02da80 <<invalid sloc>> '_Bool'
|   |       | `-CompoundStmt 0x2b57d02da68 <line:357:47, line:359:13>
|   |       |   `-ReturnStmt 0x2b57d02da58 <line:358:17, col:25>
|   |       |     `-UnaryOperator 0x2b57d02da40 <col:24, col:25> 'int' prefix '-'
|   |       |       `-IntegerLiteral 0x2b57d02da18 <col:25> 'int' 1
|   |       |-BinaryOperator 0x2b57d02dce8 <line:360:13, col:56> 'unsigned int' '='
|   |       | |-DeclRefExpr 0x2b57d02dab0 <col:13> 'unsigned int' lvalue Var 0x2b57d02bbf0 'epoch' 'unsigned int'
|   |       | `-ImplicitCastExpr 0x2b57d02dcd0 <col:21, col:56> 'unsigned int' <IntegralCast>
|   |       |   `-BinaryOperator 0x2b57d02dcb0 <col:21, col:56> 'int' '|'
|   |       |     |-ParenExpr 0x2b57d02dbe0 <col:21, col:40> 'int'
|   |       |     | `-BinaryOperator 0x2b57d02dbc0 <col:22, col:39> 'int' '<<'
|   |       |     |   |-ImplicitCastExpr 0x2b57d02dba8 <col:22, col:34> 'int' <IntegralCast>
|   |       |     |   | `-ImplicitCastExpr 0x2b57d02db90 <col:22, col:34> 'unsigned char' <LValueToRValue>
|   |       |     |   |   `-ArraySubscriptExpr 0x2b57d02db48 <col:22, col:34> 'unsigned char' lvalue
|   |       |     |   |     |-ImplicitCastExpr 0x2b57d02db30 <col:22> 'unsigned char *' <LValueToRValue>
|   |       |     |   |     | `-DeclRefExpr 0x2b57d02dae8 <col:22> 'unsigned char *' lvalue Var 0x2b57d02b940 'rec' 'unsigned char *'
|   |       |     |   |     `-IntegerLiteral 0x2b57d02db08 <line:317:25> 'int' 4
|   |       |     |   `-IntegerLiteral 0x2b57d02db68 <line:360:39> 'int' 8
|   |       |     `-ImplicitCastExpr 0x2b57d02dc98 <col:44, col:56> 'int' <IntegralCast>
|   |       |       `-ImplicitCastExpr 0x2b57d02dc80 <col:44, col:56> 'unsigned char' <LValueToRValue>
|   |       |         `-ArraySubscriptExpr 0x2b57d02dc60 <col:44, col:56> 'unsigned char' lvalue
|   |       |           |-ImplicitCastExpr 0x2b57d02dc48 <col:44> 'unsigned char *' <LValueToRValue>
|   |       |           | `-DeclRefExpr 0x2b57d02dc00 <col:44> 'unsigned char *' lvalue Var 0x2b57d02b940 'rec' 'unsigned char *'
|   |       |           `-IntegerLiteral 0x2b57d02dc20 <line:318:25> 'int' 5
|   |       |-IfStmt 0x2b57d02df88 <line:361:13, line:364:13>
|   |       | |-BinaryOperator 0x2b57d02ddc0 <line:361:17, col:31> 'int' '!='
|   |       | | |-ImplicitCastExpr 0x2b57d02dd90 <col:17> 'unsigned int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x2b57d02dd08 <col:17> 'unsigned int' lvalue Var 0x2b57d02bbf0 'epoch' 'unsigned int'
|   |       | | `-ImplicitCastExpr 0x2b57d02dda8 <col:26, col:31> 'unsigned int' <LValueToRValue>
|   |       | |   `-MemberExpr 0x2b57d02dd60 <col:26, col:31> 'unsigned int' lvalue ->epoch 0x2b57d0229e8
|   |       | |     `-ImplicitCastExpr 0x2b57d02dd48 <col:26> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x2b57d02dd28 <col:26> 'MEMPACKET_TEST_CTX *' lvalue Var 0x2b57d02b7f8 'ctx' 'MEMPACKET_TEST_CTX *'
|   |       | `-CompoundStmt 0x2b57d02df68 <col:38, line:364:13>
|   |       |   |-BinaryOperator 0x2b57d02de80 <line:362:17, col:30> 'unsigned int' '='
|   |       |   | |-MemberExpr 0x2b57d02de18 <col:17, col:22> 'unsigned int' lvalue ->epoch 0x2b57d0229e8
|   |       |   | | `-ImplicitCastExpr 0x2b57d02de00 <col:17> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |       |   | |   `-DeclRefExpr 0x2b57d02dde0 <col:17> 'MEMPACKET_TEST_CTX *' lvalue Var 0x2b57d02b7f8 'ctx' 'MEMPACKET_TEST_CTX *'
|   |       |   | `-ImplicitCastExpr 0x2b57d02de68 <col:30> 'unsigned int' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x2b57d02de48 <col:30> 'unsigned int' lvalue Var 0x2b57d02bbf0 'epoch' 'unsigned int'
|   |       |   `-BinaryOperator 0x2b57d02df48 <line:363:17, col:32> 'unsigned int' '='
|   |       |     |-MemberExpr 0x2b57d02ded8 <col:17, col:22> 'unsigned int' lvalue ->currrec 0x2b57d022a58
|   |       |     | `-ImplicitCastExpr 0x2b57d02dec0 <col:17> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |       |     |   `-DeclRefExpr 0x2b57d02dea0 <col:17> 'MEMPACKET_TEST_CTX *' lvalue Var 0x2b57d02b7f8 'ctx' 'MEMPACKET_TEST_CTX *'
|   |       |     `-ImplicitCastExpr 0x2b57d02df30 <col:32> 'unsigned int' <IntegralCast>
|   |       |       `-IntegerLiteral 0x2b57d02df08 <col:32> 'int' 0
|   |       |-BinaryOperator 0x2b57d025ff8 <line:365:13, col:24> 'unsigned int' '='
|   |       | |-DeclRefExpr 0x2b57d025f40 <col:13> 'unsigned int' lvalue Var 0x2b57d02ba70 'seq' 'unsigned int'
|   |       | `-ImplicitCastExpr 0x2b57d025fe0 <col:19, col:24> 'unsigned int' <LValueToRValue>
|   |       |   `-MemberExpr 0x2b57d025fb0 <col:19, col:24> 'unsigned int' lvalue ->currrec 0x2b57d022a58
|   |       |     `-ImplicitCastExpr 0x2b57d025f98 <col:19> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x2b57d025f78 <col:19> 'MEMPACKET_TEST_CTX *' lvalue Var 0x2b57d02b7f8 'ctx' 'MEMPACKET_TEST_CTX *'
|   |       |-BinaryOperator 0x2b57d026090 <line:366:13, col:22> 'unsigned int' '='
|   |       | |-DeclRefExpr 0x2b57d026018 <col:13> 'unsigned int' lvalue Var 0x2b57d02baf0 'offset' 'unsigned int'
|   |       | `-ImplicitCastExpr 0x2b57d026078 <col:22> 'unsigned int' <IntegralCast>
|   |       |   `-IntegerLiteral 0x2b57d026050 <col:22> 'int' 0
|   |       |-DoStmt 0x2b57d0263f8 <line:367:13, line:371:29>
|   |       | |-CompoundStmt 0x2b57d026338 <line:367:16, line:371:13>
|   |       | | |-BinaryOperator 0x2b57d026250 <line:368:17, col:55> 'unsigned char' '='
|   |       | | | |-ArraySubscriptExpr 0x2b57d026180 <col:17, col:45> 'unsigned char' lvalue
|   |       | | | | |-ImplicitCastExpr 0x2b57d026168 <col:17> 'unsigned char *' <LValueToRValue>
|   |       | | | | | `-DeclRefExpr 0x2b57d0260b0 <col:17> 'unsigned char *' lvalue Var 0x2b57d02b940 'rec' 'unsigned char *'
|   |       | | | | `-BinaryOperator 0x2b57d026148 <line:319:25, line:368:39> 'unsigned int' '-'
|   |       | | | |   |-ImplicitCastExpr 0x2b57d026130 <line:319:25> 'unsigned int' <IntegralCast>
|   |       | | | |   | `-IntegerLiteral 0x2b57d0260d0 <col:25> 'int' 10
|   |       | | | |   `-ImplicitCastExpr 0x2b57d026118 <line:368:39> 'unsigned int' <LValueToRValue>
|   |       | | | |     `-DeclRefExpr 0x2b57d0260f8 <col:39> 'unsigned int' lvalue Var 0x2b57d02baf0 'offset' 'unsigned int'
|   |       | | | `-ImplicitCastExpr 0x2b57d026238 <col:49, col:55> 'unsigned char' <IntegralCast>
|   |       | | |   `-BinaryOperator 0x2b57d026218 <col:49, col:55> 'unsigned int' '&'
|   |       | | |     |-ImplicitCastExpr 0x2b57d0261e8 <col:49> 'unsigned int' <LValueToRValue>
|   |       | | |     | `-DeclRefExpr 0x2b57d0261a0 <col:49> 'unsigned int' lvalue Var 0x2b57d02ba70 'seq' 'unsigned int'
|   |       | | |     `-ImplicitCastExpr 0x2b57d026200 <col:55> 'unsigned int' <IntegralCast>
|   |       | | |       `-IntegerLiteral 0x2b57d0261c0 <col:55> 'int' 255
|   |       | | |-CompoundAssignOperator 0x2b57d0262d0 <line:369:17, col:25> 'unsigned int' '>>=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |       | | | |-DeclRefExpr 0x2b57d026270 <col:17> 'unsigned int' lvalue Var 0x2b57d02ba70 'seq' 'unsigned int'
|   |       | | | `-IntegerLiteral 0x2b57d026290 <col:25> 'int' 8
|   |       | | `-UnaryOperator 0x2b57d026320 <line:370:17, col:23> 'unsigned int' postfix '++'
|   |       | |   `-DeclRefExpr 0x2b57d026300 <col:17> 'unsigned int' lvalue Var 0x2b57d02baf0 'offset' 'unsigned int'
|   |       | `-BinaryOperator 0x2b57d0263d8 <line:371:22, col:28> 'int' '>'
|   |       |   |-ImplicitCastExpr 0x2b57d0263a8 <col:22> 'unsigned int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x2b57d026360 <col:22> 'unsigned int' lvalue Var 0x2b57d02ba70 'seq' 'unsigned int'
|   |       |   `-ImplicitCastExpr 0x2b57d0263c0 <col:28> 'unsigned int' <IntegralCast>
|   |       |     `-IntegerLiteral 0x2b57d026380 <col:28> 'int' 0
|   |       |-UnaryOperator 0x2b57d026480 <line:372:13, col:25> 'unsigned int' postfix '++'
|   |       | `-MemberExpr 0x2b57d026450 <col:13, col:18> 'unsigned int' lvalue ->currrec 0x2b57d022a58
|   |       |   `-ImplicitCastExpr 0x2b57d026438 <col:13> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x2b57d026418 <col:13> 'MEMPACKET_TEST_CTX *' lvalue Var 0x2b57d02b7f8 'ctx' 'MEMPACKET_TEST_CTX *'
|   |       |-CompoundAssignOperator 0x2b57d026730 <line:377:13, col:20> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |       | |-DeclRefExpr 0x2b57d0266d8 <col:13> 'unsigned char *' lvalue Var 0x2b57d02b940 'rec' 'unsigned char *'
|   |       | `-ImplicitCastExpr 0x2b57d026718 <col:20> 'unsigned int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x2b57d0266f8 <col:20> 'unsigned int' lvalue Var 0x2b57d02bb70 'len' 'unsigned int'
|   |       `-CompoundAssignOperator 0x2b57d0267b8 <line:378:13, col:20> 'int' '-=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |         |-DeclRefExpr 0x2b57d026760 <col:13> 'int' lvalue Var 0x2b57d02b9d8 'rem' 'int'
|   |         `-ImplicitCastExpr 0x2b57d0267a0 <col:20> 'unsigned int' <LValueToRValue>
|   |           `-DeclRefExpr 0x2b57d026780 <col:20> 'unsigned int' lvalue Var 0x2b57d02bb70 'len' 'unsigned int'
|   |-CallExpr 0x2b57d026a00 <line:382:5, col:36> 'void *'
|   | |-ImplicitCastExpr 0x2b57d0269e8 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2b57d026898 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x2b57cfe2ac8 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x2b57d026a50 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x2b57d026a38 <col:12> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2b57d0268b8 <col:12> 'char *' lvalue ParmVar 0x2b57d02b5f0 'out' 'char *'
|   | |-ImplicitCastExpr 0x2b57d026a80 <col:17, col:26> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x2b57d026a68 <col:17, col:26> 'unsigned char *' <LValueToRValue>
|   | |   `-MemberExpr 0x2b57d026928 <col:17, col:26> 'unsigned char *' lvalue ->data 0x2b57d022028
|   | |     `-ImplicitCastExpr 0x2b57d026910 <col:17> 'MEMPACKET *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x2b57d0268f0 <col:17> 'MEMPACKET *' lvalue Var 0x2b57d02b8a8 'thispkt' 'MEMPACKET *'
|   | `-ImplicitCastExpr 0x2b57d026ab0 <col:32> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x2b57d026a98 <col:32> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x2b57d026958 <col:32> 'int' lvalue ParmVar 0x2b57d02b670 'outl' 'int'
|   |-CallExpr 0x2b57d026b80 <line:384:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x2b57d026b68 <col:5> 'void (*)(MEMPACKET *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2b57d026ac8 <col:5> 'void (MEMPACKET *)' Function 0x2b57d022348 'mempacket_free' 'void (MEMPACKET *)'
|   | `-ImplicitCastExpr 0x2b57d026ba8 <col:20> 'MEMPACKET *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2b57d026ae8 <col:20> 'MEMPACKET *' lvalue Var 0x2b57d02b8a8 'thispkt' 'MEMPACKET *'
|   `-ReturnStmt 0x2b57d026bf8 <line:386:5, col:12>
|     `-ImplicitCastExpr 0x2b57d026be0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2b57d026bc0 <col:12> 'int' lvalue ParmVar 0x2b57d02b670 'outl' 'int'
|-FunctionDecl 0x2b57d02f020 <line:389:1, line:468:1> line:389:5 invalid mempacket_test_inject 'int (int *, const char *, int, int, int)'
| |-ParmVarDecl 0x2b57d026c90 <col:27, col:32> col:32 invalid bio 'int *'
| |-ParmVarDecl 0x2b57d026d10 <col:37, col:49> col:49 used in 'const char *'
| |-ParmVarDecl 0x2b57d026d90 <col:53, col:57> col:57 used inl 'int'
| |-ParmVarDecl 0x2b57d026e10 <col:62, col:66> col:66 used pktnum 'int'
| |-ParmVarDecl 0x2b57d026e90 <line:390:27, col:31> col:31 used type 'int'
| `-CompoundStmt 0x2b57d0318f8 <line:391:1, line:468:1>
|   |-DeclStmt 0x2b57d02f198 <line:392:5, col:48>
|   | `-VarDecl 0x2b57d02f110 <col:5, col:25> col:25 used ctx 'MEMPACKET_TEST_CTX *'
|   |-DeclStmt 0x2b57d02f338 <line:393:5, col:43>
|   | |-VarDecl 0x2b57d02f1c0 <col:5, col:16> col:16 used thispkt 'MEMPACKET *'
|   | |-VarDecl 0x2b57d02f238 <col:5, col:26> col:26 used looppkt 'MEMPACKET *'
|   | `-VarDecl 0x2b57d02f2b0 <col:5, col:36> col:36 used nextpkt 'MEMPACKET *'
|   |-DeclStmt 0x2b57d02f3d0 <line:394:5, col:10>
|   | `-VarDecl 0x2b57d02f368 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x2b57d02f548 <line:396:5, line:397:17>
|   | |-BinaryOperator 0x2b57d02f4d8 <line:396:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x2b57d02f4a8 <.//openssl//file_jk/after\test\ssltestlib.c:396:9> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2b57d02f3e8 <col:9> 'MEMPACKET_TEST_CTX *' lvalue Var 0x2b57d02f110 'ctx' 'MEMPACKET_TEST_CTX *'
|   | | `-ImplicitCastExpr 0x2b57d02f4c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'MEMPACKET_TEST_CTX *' <BitCast>
|   | |   `-ParenExpr 0x2b57d02f488 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2b57d02f460 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2b57d02f420 <col:26> 'int' 0
|   | `-ReturnStmt 0x2b57d02f538 <.//openssl//file_jk/after\test\ssltestlib.c:397:9, col:17>
|   |   `-UnaryOperator 0x2b57d02f520 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x2b57d02f4f8 <col:17> 'int' 1
|   |-IfStmt 0x2b57d02f7d8 <line:400:5, line:405:5> has_else
|   | |-BinaryOperator 0x2b57d02f5d8 <line:400:9, col:19> 'int' '>='
|   | | |-ImplicitCastExpr 0x2b57d02f5c0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2b57d02f560 <col:9> 'int' lvalue ParmVar 0x2b57d026e10 'pktnum' 'int'
|   | | `-IntegerLiteral 0x2b57d02f598 <col:19> 'int' 0
|   | |-CompoundStmt 0x2b57d02f6e0 <col:22, line:403:5>
|   | | `-IfStmt 0x2b57d02f6c8 <line:401:9, line:402:21>
|   | |   |-ImplicitCastExpr 0x2b57d02f660 <line:401:13, col:18> 'unsigned int' <LValueToRValue>
|   | |   | `-MemberExpr 0x2b57d02f630 <col:13, col:18> 'unsigned int' lvalue ->noinject 0x2b57d022ba8
|   | |   |   `-ImplicitCastExpr 0x2b57d02f618 <col:13> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x2b57d02f5f8 <col:13> 'MEMPACKET_TEST_CTX *' lvalue Var 0x2b57d02f110 'ctx' 'MEMPACKET_TEST_CTX *'
|   | |   `-ReturnStmt 0x2b57d02f6b8 <line:402:13, col:21>
|   | |     `-UnaryOperator 0x2b57d02f6a0 <col:20, col:21> 'int' prefix '-'
|   | |       `-IntegerLiteral 0x2b57d02f678 <col:21> 'int' 1
|   | `-CompoundStmt 0x2b57d02f7c0 <line:403:12, line:405:5>
|   |   `-BinaryOperator 0x2b57d02f7a0 <line:404:9, col:25> 'unsigned int' '='
|   |     |-MemberExpr 0x2b57d02f730 <col:9, col:14> 'unsigned int' lvalue ->noinject 0x2b57d022ba8
|   |     | `-ImplicitCastExpr 0x2b57d02f718 <col:9> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2b57d02f6f8 <col:9> 'MEMPACKET_TEST_CTX *' lvalue Var 0x2b57d02f110 'ctx' 'MEMPACKET_TEST_CTX *'
|   |     `-ImplicitCastExpr 0x2b57d02f788 <col:25> 'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x2b57d02f760 <col:25> 'int' 1
|   |-BinaryOperator 0x2b57d02f9d0 <line:407:5, col:47> 'MEMPACKET *' '='
|   | |-DeclRefExpr 0x2b57d02f800 <col:5> 'MEMPACKET *' lvalue Var 0x2b57d02f1c0 'thispkt' 'MEMPACKET *'
|   | `-ImplicitCastExpr 0x2b57d02f9b8 <col:15, col:47> 'MEMPACKET *' <IntegralToPointer>
|   |   `-CallExpr 0x2b57d02f990 <col:15, col:47> 'int'
|   |     |-ImplicitCastExpr 0x2b57d02f978 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2b57d02f928 <col:15> 'int ()' Function 0x2b57d02f860 'OPENSSL_malloc' 'int ()'
|   |     `-UnaryExprOrTypeTraitExpr 0x2b57d02f958 <col:30, col:46> 'unsigned long long' sizeof 'MEMPACKET':'struct mempacket_st'
|   |-IfStmt 0x2b57d02fb38 <line:408:5, line:409:17>
|   | |-BinaryOperator 0x2b57d02fac8 <line:408:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x2b57d02fa98 <.//openssl//file_jk/after\test\ssltestlib.c:408:9> 'MEMPACKET *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2b57d02f9f0 <col:9> 'MEMPACKET *' lvalue Var 0x2b57d02f1c0 'thispkt' 'MEMPACKET *'
|   | | `-ImplicitCastExpr 0x2b57d02fab0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'MEMPACKET *' <BitCast>
|   | |   `-ParenExpr 0x2b57d02fa78 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2b57d02fa50 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2b57d02fa10 <col:26> 'int' 0
|   | `-ReturnStmt 0x2b57d02fb28 <.//openssl//file_jk/after\test\ssltestlib.c:409:9, col:17>
|   |   `-UnaryOperator 0x2b57d02fb10 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x2b57d02fae8 <col:17> 'int' 1
|   |-BinaryOperator 0x2b57d02fc80 <line:411:5, col:39> 'unsigned char *' '='
|   | |-MemberExpr 0x2b57d02fb88 <col:5, col:14> 'unsigned char *' lvalue ->data 0x2b57d022028
|   | | `-ImplicitCastExpr 0x2b57d02fb70 <col:5> 'MEMPACKET *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2b57d02fb50 <col:5> 'MEMPACKET *' lvalue Var 0x2b57d02f1c0 'thispkt' 'MEMPACKET *'
|   | `-ImplicitCastExpr 0x2b57d02fc68 <col:21, col:39> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x2b57d02fc28 <col:21, col:39> 'int'
|   |     |-ImplicitCastExpr 0x2b57d02fc10 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2b57d02fbb8 <col:21> 'int ()' Function 0x2b57d02f860 'OPENSSL_malloc' 'int ()'
|   |     `-ImplicitCastExpr 0x2b57d02fc50 <col:36> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x2b57d02fbd8 <col:36> 'int' lvalue ParmVar 0x2b57d026d90 'inl' 'int'
|   |-IfStmt 0x2b57d02fee8 <line:412:5, line:415:5>
|   | |-BinaryOperator 0x2b57d02fdc0 <line:412:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x2b57d02fd90 <.//openssl//file_jk/after\test\ssltestlib.c:412:9, col:18> 'unsigned char *' <LValueToRValue>
|   | | | `-MemberExpr 0x2b57d02fcd8 <col:9, col:18> 'unsigned char *' lvalue ->data 0x2b57d022028
|   | | |   `-ImplicitCastExpr 0x2b57d02fcc0 <col:9> 'MEMPACKET *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x2b57d02fca0 <col:9> 'MEMPACKET *' lvalue Var 0x2b57d02f1c0 'thispkt' 'MEMPACKET *'
|   | | `-ImplicitCastExpr 0x2b57d02fda8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x2b57d02fd70 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2b57d02fd48 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2b57d02fd08 <col:26> 'int' 0
|   | `-CompoundStmt 0x2b57d02fec8 <.//openssl//file_jk/after\test\ssltestlib.c:412:32, line:415:5>
|   |   |-CallExpr 0x2b57d02fe38 <line:413:9, col:31> 'void'
|   |   | |-ImplicitCastExpr 0x2b57d02fe20 <col:9> 'void (*)(MEMPACKET *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2b57d02fde0 <col:9> 'void (MEMPACKET *)' Function 0x2b57d022348 'mempacket_free' 'void (MEMPACKET *)'
|   |   | `-ImplicitCastExpr 0x2b57d02fe60 <col:24> 'MEMPACKET *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2b57d02fe00 <col:24> 'MEMPACKET *' lvalue Var 0x2b57d02f1c0 'thispkt' 'MEMPACKET *'
|   |   `-ReturnStmt 0x2b57d02feb8 <line:414:9, col:17>
|   |     `-UnaryOperator 0x2b57d02fea0 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x2b57d02fe78 <col:17> 'int' 1
|   |-CallExpr 0x2b57d030060 <line:417:5, col:34> 'void *'
|   | |-ImplicitCastExpr 0x2b57d030048 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2b57d02ff00 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x2b57cfe2ac8 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x2b57d0300b0 <col:12, col:21> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x2b57d030098 <col:12, col:21> 'unsigned char *' <LValueToRValue>
|   | |   `-MemberExpr 0x2b57d02ff58 <col:12, col:21> 'unsigned char *' lvalue ->data 0x2b57d022028
|   | |     `-ImplicitCastExpr 0x2b57d02ff40 <col:12> 'MEMPACKET *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x2b57d02ff20 <col:12> 'MEMPACKET *' lvalue Var 0x2b57d02f1c0 'thispkt' 'MEMPACKET *'
|   | |-ImplicitCastExpr 0x2b57d0300e0 <col:27> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x2b57d0300c8 <col:27> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2b57d02ff88 <col:27> 'const char *' lvalue ParmVar 0x2b57d026d10 'in' 'const char *'
|   | `-ImplicitCastExpr 0x2b57d030110 <col:31> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x2b57d0300f8 <col:31> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x2b57d02ffe0 <col:31> 'int' lvalue ParmVar 0x2b57d026d90 'inl' 'int'
|   |-BinaryOperator 0x2b57d0301c8 <line:418:5, col:20> 'int' '='
|   | |-MemberExpr 0x2b57d030160 <col:5, col:14> 'int' lvalue ->len 0x2b57d022098
|   | | `-ImplicitCastExpr 0x2b57d030148 <col:5> 'MEMPACKET *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2b57d030128 <col:5> 'MEMPACKET *' lvalue Var 0x2b57d02f1c0 'thispkt' 'MEMPACKET *'
|   | `-ImplicitCastExpr 0x2b57d0301b0 <col:20> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x2b57d030190 <col:20> 'int' lvalue ParmVar 0x2b57d026d90 'inl' 'int'
|   |-BinaryOperator 0x2b57d030418 <line:419:5, col:64> 'unsigned int' '='
|   | |-MemberExpr 0x2b57d030220 <col:5, col:14> 'unsigned int' lvalue ->num 0x2b57d022108
|   | | `-ImplicitCastExpr 0x2b57d030208 <col:5> 'MEMPACKET *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2b57d0301e8 <col:5> 'MEMPACKET *' lvalue Var 0x2b57d02f1c0 'thispkt' 'MEMPACKET *'
|   | `-ConditionalOperator 0x2b57d0303e8 <col:20, col:64> 'unsigned int'
|   |   |-ParenExpr 0x2b57d0302d0 <col:20, col:32> 'int'
|   |   | `-BinaryOperator 0x2b57d0302b0 <col:21, col:31> 'int' '>='
|   |   |   |-ImplicitCastExpr 0x2b57d030298 <col:21> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x2b57d030250 <col:21> 'int' lvalue ParmVar 0x2b57d026e10 'pktnum' 'int'
|   |   |   `-IntegerLiteral 0x2b57d030270 <col:31> 'int' 0
|   |   |-CStyleCastExpr 0x2b57d030340 <col:36, col:50> 'unsigned int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x2b57d030328 <col:50> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |   `-DeclRefExpr 0x2b57d0302f0 <col:50> 'int' lvalue ParmVar 0x2b57d026e10 'pktnum' 'int'
|   |   `-ImplicitCastExpr 0x2b57d0303d0 <col:59, col:64> 'unsigned int' <LValueToRValue>
|   |     `-MemberExpr 0x2b57d0303a0 <col:59, col:64> 'unsigned int' lvalue ->lastpkt 0x2b57d022b38
|   |       `-ImplicitCastExpr 0x2b57d030388 <col:59> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x2b57d030368 <col:59> 'MEMPACKET_TEST_CTX *' lvalue Var 0x2b57d02f110 'ctx' 'MEMPACKET_TEST_CTX *'
|   |-BinaryOperator 0x2b57d030508 <line:420:5, col:21> 'unsigned int' '='
|   | |-MemberExpr 0x2b57d030470 <col:5, col:14> 'unsigned int' lvalue ->type 0x2b57d022178
|   | | `-ImplicitCastExpr 0x2b57d030458 <col:5> 'MEMPACKET *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2b57d030438 <col:5> 'MEMPACKET *' lvalue Var 0x2b57d02f1c0 'thispkt' 'MEMPACKET *'
|   | `-ImplicitCastExpr 0x2b57d0304f0 <col:21> 'unsigned int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x2b57d0304d8 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x2b57d0304a0 <col:21> 'int' lvalue ParmVar 0x2b57d026e90 'type' 'int'
|   |-IfStmt 0x2b57d031780 <line:459:5, line:462:5>
|   | |-OpaqueValueExpr 0x2b57d031768 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2b57d031748 <line:459:49, line:462:5>
|   |   |-CallExpr 0x2b57d0316b8 <line:460:9, col:31> 'void'
|   |   | |-ImplicitCastExpr 0x2b57d0316a0 <col:9> 'void (*)(MEMPACKET *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2b57d031660 <col:9> 'void (MEMPACKET *)' Function 0x2b57d022348 'mempacket_free' 'void (MEMPACKET *)'
|   |   | `-ImplicitCastExpr 0x2b57d0316e0 <col:24> 'MEMPACKET *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2b57d031680 <col:24> 'MEMPACKET *' lvalue Var 0x2b57d02f1c0 'thispkt' 'MEMPACKET *'
|   |   `-ReturnStmt 0x2b57d031738 <line:461:9, col:17>
|   |     `-UnaryOperator 0x2b57d031720 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x2b57d0316f8 <col:17> 'int' 1
|   |-IfStmt 0x2b57d031898 <line:464:5, line:465:21>
|   | |-BinaryOperator 0x2b57d0317f8 <line:464:9, col:18> 'int' '<'
|   | | |-ImplicitCastExpr 0x2b57d0317e0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2b57d031798 <col:9> 'int' lvalue ParmVar 0x2b57d026e10 'pktnum' 'int'
|   | | `-IntegerLiteral 0x2b57d0317b8 <col:18> 'int' 0
|   | `-UnaryOperator 0x2b57d031880 <line:465:9, col:21> 'unsigned int' postfix '++'
|   |   `-MemberExpr 0x2b57d031850 <col:9, col:14> 'unsigned int' lvalue ->lastpkt 0x2b57d022b38
|   |     `-ImplicitCastExpr 0x2b57d031838 <col:9> 'MEMPACKET_TEST_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2b57d031818 <col:9> 'MEMPACKET_TEST_CTX *' lvalue Var 0x2b57d02f110 'ctx' 'MEMPACKET_TEST_CTX *'
|   `-ReturnStmt 0x2b57d0318e8 <line:467:5, col:12>
|     `-ImplicitCastExpr 0x2b57d0318d0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2b57d0318b0 <col:12> 'int' lvalue ParmVar 0x2b57d026d90 'inl' 'int'
|-FunctionDecl 0x2b57d031b48 <line:470:1, line:473:1> line:470:12 invalid mempacket_test_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x2b57d0319a0 <col:33, col:38> col:38 invalid bio 'int *'
| |-ParmVarDecl 0x2b57d031a20 <col:43, col:55> col:55 used in 'const char *'
| |-ParmVarDecl 0x2b57d031aa0 <col:59, col:63> col:63 used inl 'int'
| `-CompoundStmt 0x2b57d031cf0 <line:471:1, line:473:1>
|-FunctionDecl 0x2b57d031f48 <line:475:1, line:513:1> line:475:13 invalid mempacket_test_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x2b57d031d18 <col:33, col:38> col:38 invalid bio 'int *'
| |-ParmVarDecl 0x2b57d031d98 <col:43, col:47> col:47 used cmd 'int'
| |-ParmVarDecl 0x2b57d031e18 <col:52, col:57> col:57 used num 'long'
| |-ParmVarDecl 0x2b57d031e98 <col:62, col:68> col:68 ptr 'void *'
| `-CompoundStmt 0x2b57d032cf0 <line:476:1, line:513:1>
|   |-DeclStmt 0x2b57d0320f8 <line:477:5, col:17>
|   | `-VarDecl 0x2b57d032050 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x2b57d0320e0 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x2b57d0320b8 <col:16> 'int' 1
|   |-DeclStmt 0x2b57d0321a8 <line:478:5, col:48>
|   | `-VarDecl 0x2b57d032120 <col:5, col:25> col:25 used ctx 'MEMPACKET_TEST_CTX *'
|   |-DeclStmt 0x2b57d032238 <line:479:5, col:23>
|   | `-VarDecl 0x2b57d0321d0 <col:5, col:16> col:16 used thispkt 'MEMPACKET *'
|   |-SwitchStmt 0x2b57d0322a0 <line:481:5, line:511:5>
|   | |-ImplicitCastExpr 0x2b57d032288 <line:481:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x2b57d032250 <col:13> 'int' lvalue ParmVar 0x2b57d031d98 'cmd' 'int'
|   | `-CompoundStmt 0x2b57d032c40 <col:18, line:511:5>
|   |   |-BreakStmt 0x2b57d032480 <line:484:9>
|   |   |-BreakStmt 0x2b57d0325b8 <line:487:9>
|   |   |-BreakStmt 0x2b57d032760 <line:490:9>
|   |   |-BinaryOperator 0x2b57d0327b0 <line:492:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x2b57d032768 <col:9> 'long' lvalue Var 0x2b57d032050 'ret' 'long'
|   |   | `-IntegerLiteral 0x2b57d032788 <col:15> 'long' 0
|   |   |-BreakStmt 0x2b57d0327d0 <line:493:9>
|   |   |-IfStmt 0x2b57d032ae0 <line:496:9, line:499:28> has_else
|   |   | |-BinaryOperator 0x2b57d032968 <line:496:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x2b57d032938 <.//openssl//file_jk/after\test\ssltestlib.c:496:13> 'MEMPACKET *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2b57d032890 <col:13> 'MEMPACKET *' lvalue Var 0x2b57d0321d0 'thispkt' 'MEMPACKET *'
|   |   | | `-ImplicitCastExpr 0x2b57d032950 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'MEMPACKET *' <BitCast>
|   |   | |   `-ParenExpr 0x2b57d032918 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x2b57d0328f0 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x2b57d0328b0 <col:26> 'int' 0
|   |   | |-BinaryOperator 0x2b57d0329e8 <.//openssl//file_jk/after\test\ssltestlib.c:497:13, col:19> 'long' '='
|   |   | | |-DeclRefExpr 0x2b57d032988 <col:13> 'long' lvalue Var 0x2b57d032050 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x2b57d0329d0 <col:19> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x2b57d0329a8 <col:19> 'int' 0
|   |   | `-BinaryOperator 0x2b57d032ac0 <line:499:13, col:28> 'long' '='
|   |   |   |-DeclRefExpr 0x2b57d032a08 <col:13> 'long' lvalue Var 0x2b57d032050 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x2b57d032aa8 <col:19, col:28> 'long' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x2b57d032a90 <col:19, col:28> 'int' <LValueToRValue>
|   |   |       `-MemberExpr 0x2b57d032a60 <col:19, col:28> 'int' lvalue ->len 0x2b57d022098
|   |   |         `-ImplicitCastExpr 0x2b57d032a48 <col:19> 'MEMPACKET *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x2b57d032a28 <col:19> 'MEMPACKET *' lvalue Var 0x2b57d0321d0 'thispkt' 'MEMPACKET *'
|   |   |-BreakStmt 0x2b57d032b08 <line:500:9>
|   |   |-BinaryOperator 0x2b57d032b70 <line:502:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x2b57d032b10 <col:9> 'long' lvalue Var 0x2b57d032050 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x2b57d032b58 <col:15> 'long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x2b57d032b30 <col:15> 'int' 1
|   |   |-BreakStmt 0x2b57d032b90 <line:503:9>
|   |   |-DefaultStmt 0x2b57d032c18 <line:508:5, line:509:15>
|   |   | `-BinaryOperator 0x2b57d032bf8 <col:9, col:15> 'long' '='
|   |   |   |-DeclRefExpr 0x2b57d032b98 <col:9> 'long' lvalue Var 0x2b57d032050 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x2b57d032be0 <col:15> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x2b57d032bb8 <col:15> 'int' 0
|   |   `-BreakStmt 0x2b57d032c38 <line:510:9>
|   `-ReturnStmt 0x2b57d032ce0 <line:512:5, col:12>
|     `-ImplicitCastExpr 0x2b57d032cc8 <col:12> 'long' <LValueToRValue>
|       `-DeclRefExpr 0x2b57d032ca8 <col:12> 'long' lvalue Var 0x2b57d032050 'ret' 'long'
|-FunctionDecl 0x2b57d032ee8 <line:515:1, line:519:1> line:515:12 invalid mempacket_test_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x2b57d032d40 <col:32, col:37> col:37 invalid bio 'int *'
| |-ParmVarDecl 0x2b57d032dc0 <col:42, col:48> col:48 buf 'char *'
| |-ParmVarDecl 0x2b57d032e40 <col:53, col:57> col:57 size 'int'
| `-CompoundStmt 0x2b57d033020 <line:516:1, line:519:1>
|   `-ReturnStmt 0x2b57d033010 <line:518:5, col:13>
|     `-UnaryOperator 0x2b57d032fe0 <col:12, col:13> 'int' prefix '-'
|       `-IntegerLiteral 0x2b57d032fb8 <col:13> 'int' 1
|-FunctionDecl 0x2b57d0331a0 <line:521:1, line:524:1> line:521:12 invalid mempacket_test_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x2b57d033080 <col:32, col:37> col:37 invalid bio 'int *'
| |-ParmVarDecl 0x2b57d033100 <col:42, col:54> col:54 used str 'const char *'
| `-CompoundStmt 0x2b57d033350 <line:522:1, line:524:1>
|-FunctionDecl 0x2b57d0337d8 <line:526:1, line:593:1> line:526:5 invalid create_ssl_ctx_pair 'int (const int *, const int *, int, int, int **, int **, char *, char *)'
| |-ParmVarDecl 0x2b57d033378 <col:25, col:43> col:43 invalid sm 'const int *'
| |-ParmVarDecl 0x2b57d0333f8 <col:47, col:65> col:65 invalid cm 'const int *'
| |-ParmVarDecl 0x2b57d033478 <line:527:25, col:29> col:29 used min_proto_version 'int'
| |-ParmVarDecl 0x2b57d0334f8 <col:48, col:52> col:52 used max_proto_version 'int'
| |-ParmVarDecl 0x2b57d033580 <line:528:25, col:35> col:35 invalid sctx 'int **'
| |-ParmVarDecl 0x2b57d033608 <col:41, col:51> col:51 invalid cctx 'int **'
| |-ParmVarDecl 0x2b57d033688 <col:57, col:63> col:63 used certfile 'char *'
| |-ParmVarDecl 0x2b57d033708 <line:529:25, col:31> col:31 used privkeyfile 'char *'
| `-CompoundStmt 0x2b57d02e638 <line:530:1, line:593:1>
|   |-IfStmt 0x2b57d033eb0 <line:537:5, line:540:5>
|   | |-OpaqueValueExpr 0x2b57d033e98 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2b57d033e78 <line:537:67, line:540:5>
|   |   |-CallExpr 0x2b57d033db8 <line:538:9, col:44> 'int'
|   |   | |-ImplicitCastExpr 0x2b57d033da0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2b57d033d30 <col:9> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x2b57d033df8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x2b57d033de0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x2b57d033d50 <col:16> 'char [26]' lvalue "Failed to create SSL_CTX\n"
|   |   `-GotoStmt 0x2b57d033e60 <line:539:9, col:14> 'err' 0x2b57d033e10
|   |-IfStmt 0x2b57d0342a8 <line:542:5, line:546:5>
|   | |-OpaqueValueExpr 0x2b57d034290 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2b57d034270 <line:543:74, line:546:5>
|   |   |-CallExpr 0x2b57d034200 <line:544:9, col:62> 'int'
|   |   | |-ImplicitCastExpr 0x2b57d0341e8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2b57d034128 <col:9> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x2b57d034240 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x2b57d034228 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x2b57d034188 <col:16> 'char [44]' lvalue "Unable to set server min protocol versions\n"
|   |   `-GotoStmt 0x2b57d034258 <line:545:9, col:14> 'err' 0x2b57d033e10
|   |-IfStmt 0x2b57d0345c8 <line:547:5, line:551:5>
|   | |-OpaqueValueExpr 0x2b57d0345b0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2b57d034590 <line:548:74, line:551:5>
|   |   |-CallExpr 0x2b57d034520 <line:549:9, col:62> 'int'
|   |   | |-ImplicitCastExpr 0x2b57d034508 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2b57d034488 <col:9> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x2b57d034560 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x2b57d034548 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x2b57d0344a8 <col:16> 'char [44]' lvalue "Unable to set server max protocol versions\n"
|   |   `-GotoStmt 0x2b57d034578 <line:550:9, col:14> 'err' 0x2b57d033e10
|   |-IfStmt 0x2b57d034ad0 <line:553:5, line:564:5>
|   | |-OpaqueValueExpr 0x2b57d034ab8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2b57d034a98 <line:553:28, line:564:5>
|   |   |-IfStmt 0x2b57d034868 <line:554:9, line:558:9>
|   |   | |-OpaqueValueExpr 0x2b57d034850 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x2b57d034830 <line:555:78, line:558:9>
|   |   |   |-CallExpr 0x2b57d0347c0 <line:556:13, col:66> 'int'
|   |   |   | |-ImplicitCastExpr 0x2b57d0347a8 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x2b57d034728 <col:13> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   |   | `-ImplicitCastExpr 0x2b57d034800 <col:20> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x2b57d0347e8 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x2b57d034748 <col:20> 'char [44]' lvalue "Unable to set client max protocol versions\n"
|   |   |   `-GotoStmt 0x2b57d034818 <line:557:13, col:18> 'err' 0x2b57d033e10
|   |   `-IfStmt 0x2b57d034a80 <line:559:9, line:563:9>
|   |     |-OpaqueValueExpr 0x2b57d034a68 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x2b57d034a48 <line:560:78, line:563:9>
|   |       |-CallExpr 0x2b57d0349d8 <line:561:13, col:66> 'int'
|   |       | |-ImplicitCastExpr 0x2b57d0349c0 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x2b57d034940 <col:13> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |       | `-ImplicitCastExpr 0x2b57d034a18 <col:20> 'const char *' <NoOp>
|   |       |   `-ImplicitCastExpr 0x2b57d034a00 <col:20> 'char *' <ArrayToPointerDecay>
|   |       |     `-StringLiteral 0x2b57d034960 <col:20> 'char [44]' lvalue "Unable to set client min protocol versions\n"
|   |       `-GotoStmt 0x2b57d034a30 <line:562:13, col:18> 'err' 0x2b57d033e10
|   |-IfStmt 0x2b57d034dd0 <line:566:5, line:570:5>
|   | |-OpaqueValueExpr 0x2b57d034db8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2b57d034d98 <line:567:62, line:570:5>
|   |   |-CallExpr 0x2b57d034d28 <line:568:9, col:53> 'int'
|   |   | |-ImplicitCastExpr 0x2b57d034d10 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2b57d034c58 <col:9> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x2b57d034d68 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x2b57d034d50 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x2b57d034cb8 <col:16> 'char [35]' lvalue "Failed to load server certificate\n"
|   |   `-GotoStmt 0x2b57d034d80 <line:569:9, col:14> 'err' 0x2b57d033e10
|   |-IfStmt 0x2b57d02e020 <line:571:5, line:574:5>
|   | |-OpaqueValueExpr 0x2b57d02e008 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2b57d02dff0 <line:572:61, line:574:5>
|   |   `-CallExpr 0x2b57d034fe8 <line:573:9, col:53> 'int'
|   |     |-ImplicitCastExpr 0x2b57d034fd0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2b57d034f58 <col:9> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |     `-ImplicitCastExpr 0x2b57d02dfd8 <col:16> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x2b57d02dfc0 <col:16> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x2b57d034f78 <col:16> 'char [35]' lvalue "Failed to load server private key\n"
|   |-IfStmt 0x2b57d02e2a0 <line:575:5, line:578:5>
|   | |-OpaqueValueExpr 0x2b57d02e288 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2b57d02e268 <line:575:52, line:578:5>
|   |   |-CallExpr 0x2b57d02e1f8 <line:576:9, col:47> 'int'
|   |   | |-ImplicitCastExpr 0x2b57d02e1e0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2b57d02e170 <col:9> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x2b57d02e238 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x2b57d02e220 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x2b57d02e190 <col:16> 'char [29]' lvalue "Failed to check private key\n"
|   |   `-GotoStmt 0x2b57d02e250 <line:577:9, col:14> 'err' 0x2b57d033e10
|   |-ReturnStmt 0x2b57d02e4a0 <line:588:5, col:12>
|   | `-IntegerLiteral 0x2b57d02e478 <col:12> 'int' 1
|   |-LabelStmt 0x2b57d02e5c8 <line:589:2, col:5> 'err'
|   | `-NullStmt 0x2b57d02e5c0 <col:5>
|   `-ReturnStmt 0x2b57d02e628 <line:592:5, col:12>
|     `-IntegerLiteral 0x2b57d02e600 <col:12> 'int' 0
|-FunctionDecl 0x2b57d02ea00 <line:600:1, line:670:1> line:600:5 invalid create_ssl_objects 'int (int *, int *, int **, int **, int *, int *)'
| |-ParmVarDecl 0x2b57d02e6b0 <col:24, col:33> col:33 invalid serverctx 'int *'
| |-ParmVarDecl 0x2b57d02e730 <col:44, col:53> col:53 invalid clientctx 'int *'
| |-ParmVarDecl 0x2b57d02e7b8 <col:64, col:70> col:70 invalid sssl 'int **'
| |-ParmVarDecl 0x2b57d02e840 <line:601:27, col:33> col:33 invalid cssl 'int **'
| |-ParmVarDecl 0x2b57d02e8c0 <col:39, col:44> col:44 invalid s_to_c_fbio 'int *'
| |-ParmVarDecl 0x2b57d02e940 <col:57, col:62> col:62 invalid c_to_s_fbio 'int *'
| `-CompoundStmt 0x2b57d03c650 <line:602:1, line:670:1>
|   |-IfStmt 0x2b57d039180 <line:615:5, line:618:5>
|   | |-OpaqueValueExpr 0x2b57d039168 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2b57d039148 <line:615:49, line:618:5>
|   |   |-CallExpr 0x2b57d039088 <line:616:9, col:47> 'int'
|   |   | |-ImplicitCastExpr 0x2b57d039070 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2b57d02ef48 <col:9> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x2b57d0390c8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x2b57d0390b0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x2b57d02ef68 <col:16> 'char [29]' lvalue "Failed to create SSL object\n"
|   |   `-GotoStmt 0x2b57d039130 <line:617:9, col:14> 'error' 0x2b57d0390e0
|   |-IfStmt 0x2b57d039670 <line:620:5, line:626:5> has_else
|   | |-OpaqueValueExpr 0x2b57d039658 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x2b57d0393d8 <line:620:33, line:623:5>
|   | `-CompoundStmt 0x2b57d039648 <col:12, line:626:5>
|   |-IfStmt 0x2b57d0398d8 <line:627:5, line:630:5>
|   | |-OpaqueValueExpr 0x2b57d0398c0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2b57d0398a0 <line:627:51, line:630:5>
|   |   |-CallExpr 0x2b57d039830 <line:628:9, col:45> 'int'
|   |   | |-ImplicitCastExpr 0x2b57d039818 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2b57d0397a8 <col:9> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x2b57d039870 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x2b57d039858 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x2b57d0397c8 <col:16> 'char [27]' lvalue "Failed to create mem BIOs\n"
|   |   `-GotoStmt 0x2b57d039888 <line:629:9, col:14> 'error' 0x2b57d0390e0
|   |-IfStmt 0x2b57d039da8 <line:636:5, line:639:5>
|   | |-OpaqueValueExpr 0x2b57d039d90 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2b57d039d70 <line:636:51, line:639:5>
|   |   |-CallExpr 0x2b57d039d00 <line:637:9, col:49> 'int'
|   |   | |-ImplicitCastExpr 0x2b57d039ce8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2b57d039c40 <col:9> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x2b57d039d40 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x2b57d039d28 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x2b57d039c98 <col:16> 'char [31]' lvalue "Failed to create chained BIOs\n"
|   |   `-GotoStmt 0x2b57d039d58 <line:638:9, col:14> 'error' 0x2b57d0390e0
|   |-ReturnStmt 0x2b57d03c348 <line:659:5, col:12>
|   | `-IntegerLiteral 0x2b57d03c320 <col:12> 'int' 1
|   |-LabelStmt 0x2b57d03c470 <line:661:2, col:7> 'error'
|   | `-NullStmt 0x2b57d03c468 <col:7>
|   `-ReturnStmt 0x2b57d03c640 <line:669:5, col:12>
|     `-IntegerLiteral 0x2b57d03c618 <col:12> 'int' 0
`-FunctionDecl 0x2b57d03c7d0 <line:672:1, line:710:1> line:672:5 invalid create_ssl_connection 'int (int *, int *)'
  |-ParmVarDecl 0x2b57d03c6b0 <col:27, col:32> col:32 invalid serverssl 'int *'
  |-ParmVarDecl 0x2b57d03c730 <col:43, col:48> col:48 invalid clientssl 'int *'
  `-CompoundStmt 0x2b57d03e038 <line:673:1, line:710:1>
    |-DeclStmt 0x2b57d03cb68 <line:674:5, col:48>
    | |-VarDecl 0x2b57d03c8b0 <col:5, col:17> col:9 used retc 'int' cinit
    | | `-UnaryOperator 0x2b57d03c940 <col:16, col:17> 'int' prefix '-'
    | |   `-IntegerLiteral 0x2b57d03c918 <col:17> 'int' 1
    | |-VarDecl 0x2b57d03c970 <col:5, col:28> col:20 used rets 'int' cinit
    | | `-UnaryOperator 0x2b57d03ca00 <col:27, col:28> 'int' prefix '-'
    | |   `-IntegerLiteral 0x2b57d03c9d8 <col:28> 'int' 1
    | |-VarDecl 0x2b57d03ca30 <col:5, col:31> col:31 used err 'int'
    | `-VarDecl 0x2b57d03cab0 <col:5, col:47> col:36 used abortctr 'int' cinit
    |   `-IntegerLiteral 0x2b57d03cb18 <col:47> 'int' 0
    |-DeclStmt 0x2b57d03cce8 <line:675:5, col:37>
    | |-VarDecl 0x2b57d03cb98 <col:5, col:21> col:9 used clienterr 'int' cinit
    | | `-IntegerLiteral 0x2b57d03cc00 <col:21> 'int' 0
    | `-VarDecl 0x2b57d03cc40 <col:5, col:36> col:24 used servererr 'int' cinit
    |   `-IntegerLiteral 0x2b57d03cca8 <col:36> 'int' 0
    |-DoStmt 0x2b57d03dfe0 <line:677:5, line:707:35>
    | |-CompoundStmt 0x2b57d03de90 <line:677:8, line:707:5>
    | | |-IfStmt 0x2b57d03d4d8 <line:685:9, line:688:9>
    | | | |-OpaqueValueExpr 0x2b57d03d4c0 <<invalid sloc>> '_Bool'
    | | | `-CompoundStmt 0x2b57d03d4a0 <line:685:68, line:688:9>
    | | |   |-CallExpr 0x2b57d03d3a0 <line:686:13, col:62> 'int'
    | | |   | |-ImplicitCastExpr 0x2b57d03d388 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
    | | |   | | `-DeclRefExpr 0x2b57d03d2d8 <col:13> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
    | | |   | |-ImplicitCastExpr 0x2b57d03d3f0 <col:20> 'const char *' <NoOp>
    | | |   | | `-ImplicitCastExpr 0x2b57d03d3d8 <col:20> 'char *' <ArrayToPointerDecay>
    | | |   | |   `-StringLiteral 0x2b57d03d2f8 <col:20> 'char [29]' lvalue "SSL_connect() failed %d, %d\n"
    | | |   | |-ImplicitCastExpr 0x2b57d03d408 <col:53> 'int' <LValueToRValue>
    | | |   | | `-DeclRefExpr 0x2b57d03d330 <col:53> 'int' lvalue Var 0x2b57d03c8b0 'retc' 'int'
    | | |   | `-ImplicitCastExpr 0x2b57d03d420 <col:59> 'int' <LValueToRValue>
    | | |   |   `-DeclRefExpr 0x2b57d03d350 <col:59> 'int' lvalue Var 0x2b57d03ca30 'err' 'int'
    | | |   `-BinaryOperator 0x2b57d03d480 <line:687:13, col:25> 'int' '='
    | | |     |-DeclRefExpr 0x2b57d03d438 <col:13> 'int' lvalue Var 0x2b57d03cb98 'clienterr' 'int'
    | | |     `-IntegerLiteral 0x2b57d03d458 <col:25> 'int' 1
    | | |-IfStmt 0x2b57d03db80 <line:697:9, line:700:9>
    | | | |-OpaqueValueExpr 0x2b57d03db68 <<invalid sloc>> '_Bool'
    | | | `-CompoundStmt 0x2b57d03db48 <line:697:68, line:700:9>
    | | |   |-CallExpr 0x2b57d03da48 <line:698:13, col:61> 'int'
    | | |   | |-ImplicitCastExpr 0x2b57d03da30 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
    | | |   | | `-DeclRefExpr 0x2b57d03d980 <col:13> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
    | | |   | |-ImplicitCastExpr 0x2b57d03da98 <col:20> 'const char *' <NoOp>
    | | |   | | `-ImplicitCastExpr 0x2b57d03da80 <col:20> 'char *' <ArrayToPointerDecay>
    | | |   | |   `-StringLiteral 0x2b57d03d9a0 <col:20> 'char [28]' lvalue "SSL_accept() failed %d, %d\n"
    | | |   | |-ImplicitCastExpr 0x2b57d03dab0 <col:52> 'int' <LValueToRValue>
    | | |   | | `-DeclRefExpr 0x2b57d03d9d8 <col:52> 'int' lvalue Var 0x2b57d03c8b0 'retc' 'int'
    | | |   | `-ImplicitCastExpr 0x2b57d03dac8 <col:58> 'int' <LValueToRValue>
    | | |   |   `-DeclRefExpr 0x2b57d03d9f8 <col:58> 'int' lvalue Var 0x2b57d03ca30 'err' 'int'
    | | |   `-BinaryOperator 0x2b57d03db28 <line:699:13, col:25> 'int' '='
    | | |     |-DeclRefExpr 0x2b57d03dae0 <col:13> 'int' lvalue Var 0x2b57d03cc40 'servererr' 'int'
    | | |     `-IntegerLiteral 0x2b57d03db00 <col:25> 'int' 1
    | | |-IfStmt 0x2b57d03dc60 <line:701:9, line:702:20>
    | | | |-BinaryOperator 0x2b57d03dc08 <line:701:13, col:26> 'int' '&&'
    | | | | |-ImplicitCastExpr 0x2b57d03dbd8 <col:13> 'int' <LValueToRValue>
    | | | | | `-DeclRefExpr 0x2b57d03db98 <col:13> 'int' lvalue Var 0x2b57d03cb98 'clienterr' 'int'
    | | | | `-ImplicitCastExpr 0x2b57d03dbf0 <col:26> 'int' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x2b57d03dbb8 <col:26> 'int' lvalue Var 0x2b57d03cc40 'servererr' 'int'
    | | | `-ReturnStmt 0x2b57d03dc50 <line:702:13, col:20>
    | | |   `-IntegerLiteral 0x2b57d03dc28 <col:20> 'int' 0
    | | `-IfStmt 0x2b57d03de78 <line:703:9, line:706:9>
    | |   |-BinaryOperator 0x2b57d03dcf0 <line:703:13, line:595:21> 'int' '=='
    | |   | |-UnaryOperator 0x2b57d03dcb0 <line:703:13, col:15> 'int' prefix '++'
    | |   | | `-DeclRefExpr 0x2b57d03dc78 <col:15> 'int' lvalue Var 0x2b57d03cab0 'abortctr' 'int'
    | |   | `-IntegerLiteral 0x2b57d03dcc8 <line:595:21> 'int' 100000
    | |   `-CompoundStmt 0x2b57d03de58 <line:703:37, line:706:9>
    | |     |-CallExpr 0x2b57d03ddc8 <line:704:13, col:40> 'int'
    | |     | |-ImplicitCastExpr 0x2b57d03ddb0 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
    | |     | | `-DeclRefExpr 0x2b57d03dd10 <col:13> 'int (const char *, ...)' Function 0x2b57d085838 'printf' 'int (const char *, ...)'
    | |     | `-ImplicitCastExpr 0x2b57d03de08 <col:20> 'const char *' <NoOp>
    | |     |   `-ImplicitCastExpr 0x2b57d03ddf0 <col:20> 'char *' <ArrayToPointerDecay>
    | |     |     `-StringLiteral 0x2b57d03dd68 <col:20> 'char [18]' lvalue "No progress made\n"
    | |     `-ReturnStmt 0x2b57d03de48 <line:705:13, col:20>
    | |       `-IntegerLiteral 0x2b57d03de20 <col:20> 'int' 0
    | `-BinaryOperator 0x2b57d03dfc0 <line:707:14, col:34> 'int' '||'
    |   |-BinaryOperator 0x2b57d03df20 <col:14, col:21> 'int' '<='
    |   | |-ImplicitCastExpr 0x2b57d03df08 <col:14> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x2b57d03dec0 <col:14> 'int' lvalue Var 0x2b57d03c8b0 'retc' 'int'
    |   | `-IntegerLiteral 0x2b57d03dee0 <col:21> 'int' 0
    |   `-BinaryOperator 0x2b57d03dfa0 <col:26, col:34> 'int' '<='
    |     |-ImplicitCastExpr 0x2b57d03df88 <col:26> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x2b57d03df40 <col:26> 'int' lvalue Var 0x2b57d03c970 'rets' 'int'
    |     `-IntegerLiteral 0x2b57d03df60 <col:34> 'int' 0
    `-ReturnStmt 0x2b57d03e028 <line:709:5, col:12>
      `-IntegerLiteral 0x2b57d03e000 <col:12> 'int' 1
