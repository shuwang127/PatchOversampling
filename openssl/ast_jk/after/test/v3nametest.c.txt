TranslationUnitDecl 0x181fc41fdc8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x181fc420660 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x181fc420360 '__int128'
|-TypedefDecl 0x181fc4206d0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x181fc420380 'unsigned __int128'
|-TypedefDecl 0x181fc420a08 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x181fc4207c0 'struct __NSConstantString_tag'
|   `-Record 0x181fc420728 '__NSConstantString_tag'
|-TypedefDecl 0x181fc420a78 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x181fc41ffa0 'unsigned long long'
|-TypedefDecl 0x181fc420b10 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x181fc420ad0 'char *'
|   `-BuiltinType 0x181fc41fe60 'char'
|-TypedefDecl 0x181fc420b80 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x181fc420ad0 'char *'
|   `-BuiltinType 0x181fc41fe60 'char'
|-TypedefDecl 0x181fc420c20 <D:\Microsoft Visual Studio 12.0\VC\include\sys/types.h:40:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x181fc41fee0 'long'
|-TypedefDecl 0x181fc420c90 <line:45:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x181fc41ff00 'long long'
|-TypedefDecl 0x181fc420d20 <line:53:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x181fc420cf0 '__time64_t' sugar
|   |-Typedef 0x181fc420c90 '__time64_t'
|   `-BuiltinType 0x181fc41ff00 'long long'
|-TypedefDecl 0x181fdd8b920 <line:61:1, col:24> col:24 _ino_t 'unsigned short'
| `-BuiltinType 0x181fc41ff40 'unsigned short'
|-TypedefDecl 0x181fdd8b990 <line:65:1, col:24> col:24 ino_t 'unsigned short'
| `-BuiltinType 0x181fc41ff40 'unsigned short'
|-TypedefDecl 0x181fdd8ba00 <line:74:1, col:22> col:22 _dev_t 'unsigned int'
| `-BuiltinType 0x181fc41ff60 'unsigned int'
|-TypedefDecl 0x181fdd8ba70 <line:78:1, col:22> col:22 dev_t 'unsigned int'
| `-BuiltinType 0x181fc41ff60 'unsigned int'
|-TypedefDecl 0x181fdd8bae0 <line:87:1, col:14> col:14 _off_t 'long'
| `-BuiltinType 0x181fc41fee0 'long'
|-TypedefDecl 0x181fdd8bb50 <line:91:1, col:14> col:14 off_t 'long'
| `-BuiltinType 0x181fc41fee0 'long'
|-TypedefDecl 0x181fdd8bc70 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x181fc41ffa0 'unsigned long long'
|-TypedefDecl 0x181fdd8bce0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x181fc420ad0 'char *'
|   `-BuiltinType 0x181fc41fe60 'char'
|-FunctionDecl 0x181fdd8bf30 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x181fdd8bfd0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x181fdd8c040 <col:21> Implicit
|-FunctionDecl 0x181fdd8c098 prev 0x181fdd8bf30 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x181fdd8bdc8 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x181fdd8c188 <col:21> Inherited Implicit
|-TypedefDecl 0x181fdd8c1c8 prev 0x181fc420a78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x181fc41ffa0 'unsigned long long'
|-TypedefDecl 0x181fdd8c270 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x181fdd8c240 'size_t' sugar
|   |-Typedef 0x181fdd8c1c8 'size_t'
|   `-BuiltinType 0x181fc41ffa0 'unsigned long long'
|-TypedefDecl 0x181fdd8c2e0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x181fc41ff00 'long long'
|-TypedefDecl 0x181fdd8c350 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x181fc41ff00 'long long'
|-TypedefDecl 0x181fdd8c3c0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x181fc41ff40 'unsigned short'
|-TypedefDecl 0x181fdd8c430 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x181fc41ff40 'unsigned short'
|-TypedefDecl 0x181fdd8c4a0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x181fc41ff40 'unsigned short'
|-TypedefDecl 0x181fdd8c510 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x181fc41fec0 'int'
|-FunctionDecl 0x181fdd8c688 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x181fde95330 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x181fde958e0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x181fde95478 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x181fde954f0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x181fde95568 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x181fde955e8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x181fde95680 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x181fde959c0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x181fde95a80 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x181fde95bf0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x181fde95ba0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x181fde95b40 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x181fde95a60 'struct threadlocaleinfostruct'
|       `-Record 0x181fdea8758 'threadlocaleinfostruct'
|-TypedefDecl 0x181fde95d00 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x181fde95cb0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x181fde95c50 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x181fde95b20 'struct threadmbcinfostruct'
|       `-Record 0x181fde95a80 'threadmbcinfostruct'
|-RecordDecl 0x181fde95d58 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x181fde95e10 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x181fde95ed0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x181fde95f60 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x181fde95ff0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x181fde960a8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x181fde96050 'struct localeinfo_struct' sugar
|   `-RecordType 0x181fde95eb0 'struct localeinfo_struct'
|     `-Record 0x181fde95e10 'localeinfo_struct'
|-TypedefDecl 0x181fde96180 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x181fde96130 'struct localeinfo_struct *'
|   `-ElaboratedType 0x181fde96050 'struct localeinfo_struct' sugar
|     `-RecordType 0x181fde95eb0 'struct localeinfo_struct'
|       `-Record 0x181fde95e10 'localeinfo_struct'
|-RecordDecl 0x181fde961f8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x181fde962b0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x181fdea8460 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x181fdea8528 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x181fdea85c0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x181fdea8630 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x181fdea86e8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x181fdea8690 'struct localerefcount' sugar
|   `-RecordType 0x181fde96290 'struct localerefcount'
|     `-Record 0x181fde961f8 'localerefcount'
|-RecordDecl 0x181fdea8758 prev 0x181fde959c0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x181fdea87d8 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x181fdea8850 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x181fdea88c0 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x181fdea8930 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x181fdea89a0 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x181fdea8b68 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x181fdea8bd8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x181fdea8c48 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x181fdea8cb8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x181fdea8d28 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x181fdea8d98 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x181fdea8df0 parent 0x181fc41fdc8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x181fdea8f80 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x181fdea8ff0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x181fdea9060 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x181fdea90d0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x181fdea9170 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x181fdea91e0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x181fdea92f0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x181fdeaa480 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x181fdeaa538 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x181fdeaa4e0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x181fde95a60 'struct threadlocaleinfostruct'
|     `-Record 0x181fdea8758 'threadlocaleinfostruct'
|-FunctionDecl 0x181fdeaa970 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x181fdeaa5c0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x181fdeaa670 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x181fdeaa6f0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x181fdeaa768 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x181fdeaad38 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x181fdeaadd8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x181fdeaae40 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x181fdeaaea8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x181fdeaaf28 prev 0x181fdeaad38 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x181fdeaaa60 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x181fdeaaae0 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x181fdeaab58 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x181fdeab2e8 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x181fdeab010 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x181fdeab090 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x181fdeab108 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x181fdea6760 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x181fdeab3d0 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x181fdea6440 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x181fdea64b8 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x181fdea6550 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x181fdea6a68 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x181fdea6b08 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x181fdea6b70 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x181fdea6bd8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x181fdea6c58 prev 0x181fdea6a68 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x181fdea6850 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x181fdea68d0 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x181fdea6948 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x181fdea7018 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x181fdea70b8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x181fdea7120 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x181fdea7188 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x181fdea7208 prev 0x181fdea7018 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x181fdea6d40 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x181fdea6dc0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x181fdea6e38 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x181fdeaf748 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x181fdea7318 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x181fdea73b0 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x181fdeaf4d0 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x181fdeaf548 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x181fdeafb08 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x181fdeafba8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x181fdeafc10 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x181fdeafc78 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x181fdeafcf8 prev 0x181fdeafb08 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x181fdeaf838 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x181fdeaf8b8 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x181fdeaf930 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x181fdeb0178 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x181fdeb0218 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x181fdeb0280 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x181fdeb02e8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x181fdeb0350 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x181fdeb03d8 prev 0x181fdeb0178 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x181fdeafec0 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x181fdeaff40 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x181fdeaffc0 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x181fdeb0038 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x181fdeb04e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x181fdeb08c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x181fdeb06a8 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x181fdeb0728 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x181fdeb07a0 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x181fdeb0978 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x181fdeb0d70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x181fdeb0aa0 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x181fdeb0b18 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x181fdeb0b98 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x181fdeb1140 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x181fdeb0f50 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x181fdeb0fd0 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x181fdeb11f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x181fdeb2620 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x181fdeb1338 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x181fdeb13b0 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x181fdeb1430 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x181fdeb29f0 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x181fdeb2a90 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x181fdeb2af8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x181fdeb2b70 prev 0x181fdeb29f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x181fdeb2800 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x181fdeb2880 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x181fdeb2c20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x181fdeb2f78 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x181fdeb2d68 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x181fdeb2de0 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x181fdeb2e60 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x181fdeb32a0 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x181fdeb3340 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x181fdeb33a8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x181fdeb3420 prev 0x181fdeb32a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x181fdeb3120 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x181fdeb31a0 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x181fdeab490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x181fdeab7c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x181fdeab860 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x181fdeab8c8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x181fdeab940 prev 0x181fdeab7c0 <col:16, col:91> col:32 used strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x181fdeab5d8 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x181fdeab658 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x181fdeabb90 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x181fdeabc30 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x181fdeabca0 prev 0x181fdeabb90 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x181fdeaba20 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x181fdeabf98 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x181fdeabd78 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x181fdeabdf0 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x181fdeac1e8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x181fdeac078 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x181fdeac0f0 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x181fdead538 <line:131:1, line:133:1>
|   `-ReturnStmt 0x181fdead528 <line:132:5, col:51>
|     `-ConditionalOperator 0x181fdead4f8 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x181fdeac348 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x181fdeac328 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x181fdeac2f8 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x181fdeac2b0 <col:13> 'const char *' lvalue ParmVar 0x181fdeac078 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x181fdeac310 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x181fdeac2d0 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x181fdead4e0 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x181fdeac368 <col:24> 'int' 0
|       `-CallExpr 0x181fdeac460 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x181fdeac448 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x181fdeac390 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x181fdeabf98 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x181fdead4b0 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x181fdeac3b0 <col:36> 'const char *' lvalue ParmVar 0x181fdeac078 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x181fdead4c8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x181fdeac3d0 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x181fdeac0f0 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x181fdead810 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x181fdead568 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x181fdead5e0 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x181fdead660 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x181fdead6d8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x181fdeadb18 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x181fdeadbb8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x181fdeadc20 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x181fdeadc88 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x181fdeadd08 prev 0x181fdeadb18 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x181fdead900 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x181fdead980 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x181fdead9f8 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x181fdeadf38 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x181fdeaddf0 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x181fdeae200 <line:152:54> col:54 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x181fdeae2a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x181fdeae308 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x181fdeae380 prev 0x181fdeae200 <col:38, col:100> col:54 used strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x181fdeae010 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x181fdeae090 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x181fdeb1670 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x181fdeb14f0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x181fdeb1570 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x181fdeb18d0 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x181fdeb1750 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x181fdeb17d0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x181fdeb1c88 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x181fdeb19b0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x181fdeb1a30 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x181fdeb1aa8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x181fdeb1ef0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x181fdeb1d70 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x181fdeb1df0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x181fdeb21e8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x181fdeb1fd0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x181fdeb2050 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x181fdeb20c8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x181fdeb2450 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x181fdeb22d0 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x181fdeb2350 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x181fdeb3768 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x181fdeb3550 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x181fdeb35d0 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x181fdeb3648 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x181fdeb3b28 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x181fdeb3850 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x181fdeb38d0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x181fdeb3948 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x181fdeb3f90 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x181fdeb3c10 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x181fdeb3c90 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x181fdeb3d08 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x181fdeb3d80 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x181fdeb4298 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x181fdeb4080 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x181fdeb4100 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x181fdeb4178 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x181fdeae600 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x181fdeb4380 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x181fdeb4400 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x181fdeb4478 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x181fdeae4c0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x181fdeae918 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x181fdeae9b8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x181fdeaea20 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x181fdeaea98 prev 0x181fdeae918 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x181fdeae6f0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x181fdeae770 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x181fdeaed50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x181fdeaec70 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x181fdeaedf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x181fdeaf1d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x181fdeaef40 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x181fdeaefb8 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x181fdeaf038 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x181fde602b8 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x181fde60358 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x181fde603c8 prev 0x181fde602b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x181fdeaf3b0 <col:90> col:93 'int'
| `-DeprecatedAttr 0x181fde60470 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x181fde607c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x181fde605b8 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x181fde60630 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x181fde606b0 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x181fde60ac8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x181fde608b0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x181fde60928 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x181fde60db8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x181fde60c68 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x181fde60e60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x181fdee19d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x181fde60fa8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x181fde61020 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x181fde61098 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x181fdee1da0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x181fdee1b78 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x181fdee1bf0 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x181fdee1e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x181fdee2308 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x181fdee1f98 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x181fdee2010 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x181fdee2090 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x181fdee2108 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x181fdee2788 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x181fdee2828 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x181fdee2890 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x181fdee28f8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x181fdedf9b0 prev 0x181fdee2788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x181fdee24b8 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x181fdee2538 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x181fdee25b0 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x181fdedfa68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x181fdedfdc8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x181fdedfe68 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x181fdedfed0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x181fdedff38 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x181fdedffb8 prev 0x181fdedfdc8 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x181fdedfbb0 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x181fdedfc30 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x181fdedfca8 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x181fdee02b8 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x181fdee00a0 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x181fdee0120 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x181fdee0198 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x181fdee0650 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x181fdee03a0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x181fdee0420 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x181fdee0498 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x181fdee0510 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x181fdee2a28 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x181fdee0740 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x181fdee07b8 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x181fdee0838 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x181fdee08b0 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x181fdee2df0 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x181fdee2e90 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x181fdee2ef8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x181fdee2f60 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x181fdee2fe0 prev 0x181fdee2df0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x181fdee2bd8 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x181fdee2c58 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x181fdee2cd0 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x181fdee3098 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x181fdee3558 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x181fdee31e0 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x181fdee3258 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x181fdee32d8 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x181fdee3350 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x181fdee09c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x181fdee3708 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x181fdee3788 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x181fdee3800 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x181fdee0a78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x181fdee0db0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x181fdee0e50 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x181fdee0eb8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x181fdee0f30 prev 0x181fdee0db0 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x181fdee0bc0 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x181fdee0c40 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x181fdee1190 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x181fdee1230 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x181fdee1298 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x181fdee1310 prev 0x181fdee1190 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x181fdee1010 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x181fdee1090 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x181fdee14d0 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x181fdee13f0 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x181fdee1720 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x181fdee17c0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x181fdee1828 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x181fdee18a0 prev 0x181fdee1720 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x181fdee15a8 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x181fdee1628 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x181fdee5b90 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x181fdee5c30 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x181fdee5c98 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x181fdee5d10 prev 0x181fdee5b90 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x181fdee5a10 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x181fdee5a90 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x181fdee6030 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x181fdee60d0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x181fdee6138 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x181fdee61b0 prev 0x181fdee6030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x181fdee5eb0 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x181fdee5f30 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x181fdee6260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x181fdee6648 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x181fdee63a8 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x181fdee6428 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x181fdee64a8 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x181fdee68a0 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x181fdee6730 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x181fdee67a8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x181fdedeb58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x181fdedea78 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x181fdedec00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x181fdedef50 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x181fdeded48 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x181fdededc0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x181fdedee38 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x181fdedf270 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x181fdedf0f8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x181fdedf170 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x181fdedf320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x181fdedf730 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x181fdedf7d0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x181fdedf838 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x181fdedf8a0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x181fdee4a00 prev 0x181fdedf730 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x181fdedf468 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x181fdedf4e8 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x181fdedf560 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x181fdee4e58 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x181fdee4ae8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x181fdee4b68 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x181fdee4be0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x181fdee4c58 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x181fdee5100 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x181fdee51a0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x181fdee5210 prev 0x181fdee5100 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x181fdee5020 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x181fdee52b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x181fdee5600 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x181fdee5480 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x181fdee5500 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x181fdee56b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x181fdee9a50 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x181fdee5878 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x181fdee58f8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x181fdee9b00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x181fdee9da8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x181fdee9cc8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x181fdee9e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x181fdeea268 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x181fdeea050 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x181fdeea0d0 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x181fdeea148 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x181fdeea320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x181fdeea700 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x181fdeea4e8 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x181fdeea568 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x181fdeea5e0 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x181fdeea7b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x181fdee6a58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x181fdeea980 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x181fdee6b00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x181fdee6e48 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x181fdee6cc8 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x181fdee6d48 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x181fdee6ef8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x181fdee71a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x181fdee70c0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x181fdee7248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x181fdee74e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x181fdee7368 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x181fdee7870 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x181fdee75b0 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x181fdee7628 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x181fdee76a0 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x181fdeeac78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x181fdeeaa60 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x181fdeeaad8 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x181fdeead28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x181fdeeb088 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x181fdeeb128 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x181fdeeb190 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x181fdeeb208 prev 0x181fdeeb088 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x181fdeeae68 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x181fdeeaee0 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x181fdeeb500 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x181fdeeb5a0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x181fdeeb608 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x181fdeeb680 prev 0x181fdeeb500 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x181fdeeb2e0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x181fdeeb358 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x181fdeeb960 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x181fdeeb758 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x181fdeeb7d0 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x181fdeeb848 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x181fdee7c70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x181fdee7b00 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x181fdee7b78 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x181fdee7d20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x181fdee8078 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x181fdee7e60 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x181fdee7ed8 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x181fdee82c0 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x181fdee8360 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x181fdee83d0 prev 0x181fdee82c0 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x181fdee8150 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x181fdee86b8 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x181fdee84a0 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x181fdee8518 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x181fdee8900 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x181fdee8790 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x181fdee8808 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x181fdeebcd8 <line:306:1, line:308:1>
|   `-ReturnStmt 0x181fdeebcc8 <line:307:5, col:56>
|     `-ConditionalOperator 0x181fdeebc98 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x181fdeebb08 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x181fdeebae8 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x181fdeebab8 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x181fdee89c8 <col:13> 'const wchar_t *' lvalue ParmVar 0x181fdee8790 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x181fdeebad0 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x181fdeeba98 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x181fdeeba70 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x181fdee89e8 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x181fdeebc80 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x181fdeebb28 <col:29> 'int' 0
|       `-CallExpr 0x181fdeebc20 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x181fdeebc08 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x181fdeebb50 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x181fdee86b8 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x181fdeebc50 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x181fdeebb70 <col:41> 'const wchar_t *' lvalue ParmVar 0x181fdee8790 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x181fdeebc68 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x181fdeebb90 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x181fdee8808 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x181fdeec068 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x181fdeebd00 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x181fdeebd78 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x181fdeebdf0 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x181fdeebe68 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x181fdeec4d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x181fdeec210 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x181fdeec288 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x181fdeec300 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x181fdeec588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x181fdeec998 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x181fdeeda90 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x181fdeedaf8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x181fdeedb60 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x181fdeedbe0 prev 0x181fdeec998 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x181fdeec6c8 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x181fdeec740 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x181fdeec7b8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x181fdeedf60 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x181fdeedcc0 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x181fdeedd38 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x181fdeeddb0 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x181fdeede28 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x181fdeee310 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x181fdeee108 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x181fdeee180 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x181fdeee1f8 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x181fdeee3c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x181fdeee728 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x181fdeee508 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x181fdeee580 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x181fdeee970 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x181fdeee800 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x181fdeee878 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x181fdeefc20 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x181fdeefab0 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x181fdeefb28 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x181fdeefe68 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x181fdeefcf8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x181fdeefd70 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x181fdef0170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x181fdef0000 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x181fdef0078 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x181fdef0220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x181fdef0680 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x181fdef0360 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x181fdef03d8 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x181fdef04b0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x181fdef09a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x181fdef0828 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x181fdef0a48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x181fdeece40 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x181fdeecb78 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x181fdeecbf0 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x181fdeecc70 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x181fdeed0f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x181fdeed018 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x181fdeed198 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x181fdeed560 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x181fdeed2d8 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x181fdeed350 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x181fdeed3c8 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x181fdeed7b8 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x181fdeed640 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x181fdeed6b8 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x181fdeeeb88 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x181fdeed890 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x181fdeed908 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x181fdeed980 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x181fdeeee78 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x181fdeeec68 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x181fdeeece0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x181fdeeed58 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x181fdeef2d0 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x181fdeeef58 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x181fdeeefd0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x181fdeef048 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x181fdeef0c0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x181fdeef728 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x181fdeef3b8 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x181fdeef430 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x181fdeef4a8 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x181fdeef520 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x181fdee8b60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x181fdeef8d0 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x181fdeef948 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x181fdeef9c0 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x181fdee8c18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x181fdee8ed0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x181fdee8d58 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x181fdee9260 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x181fdee8fa0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x181fdee9018 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x181fdee9090 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x181fdee9618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x181fdee9400 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x181fdee9478 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x181fdee96c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x181fdef1ad0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x181fdee9808 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x181fdee9880 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x181fdef1d40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x181fdef1c68 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x181fdef1de8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x181fdef21f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x181fdef1f28 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x181fdef1fa0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x181fdef2018 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x181fdef25a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x181fdef2390 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x181fdef2408 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x181fdef2658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x181fdef2908 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x181fdef2798 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x181fdef2810 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x181fdef7c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x181fdef7b30 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x181fdef7cb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x181fdef7ff8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x181fdef7df0 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x181fdef7e68 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x181fdef7ee0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x181fdef8308 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x181fdef8198 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x181fdef8210 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x181fdef83b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x181fdef87c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x181fdef84f8 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x181fdef8570 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x181fdef85e8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x181fdef0ba8 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x181fdef88a0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x181fdef8918 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x181fdef8990 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x181fdef8a08 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x181fdef0e08 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x181fdef0c90 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x181fdef0d08 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x181fdef10f0 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x181fdef0ee0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x181fdef0f58 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x181fdef0fd0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x181fdef1348 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x181fdef11d0 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x181fdef1248 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x181fdef1630 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x181fdef1420 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x181fdef1498 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x181fdef1510 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x181fdef1920 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x181fdef1710 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x181fdef1788 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x181fdef1800 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x181fdef9d80 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x181fdef1a00 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x181fdef9b50 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x181fdef9bc8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x181fdef9c40 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x181fdefa078 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x181fdef9e68 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x181fdef9ee0 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x181fdef9f58 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x181fdefa400 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x181fdefa158 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x181fdefa1d0 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x181fdefa248 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x181fdefa2c0 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x181fdefa660 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x181fdefa588 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x181fdefa708 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x181fdefaa40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x181fdefa8c8 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x181fdefa940 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x181fdefaaf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x181fdef5e98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x181fdef5c88 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x181fdef5d00 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x181fdef5d78 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x181fdef5f50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x181fdef6318 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x181fdef6110 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x181fdef6188 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x181fdef6200 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x181fdef63d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x181fdef6668 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x181fdef6590 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x181fdef6710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x181fdef6a40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x181fdef68d0 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x181fdef6948 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x181fdef2ae0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x181fdef2d78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x181fdef2ca0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x181fdef2e20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x181fdef30b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x181fdef2fe0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x181fdef3160 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x181fdef3498 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x181fdef3320 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x181fdef3398 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x181fdef3548 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-VarDecl 0x181fdef36e0 <.//openssl//file_jk/after\test\v3nametest.c:15:1, line:32:1> line:15:26 used names 'const char *const [52]' static cinit
| `-InitListExpr 0x181fdef7698 <col:36, line:32:1> 'const char *const [52]'
|   |-ImplicitCastExpr 0x181fdef76f0 <line:16:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef76d8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef3788 <col:5> 'char [2]' lvalue "a"
|   |-ImplicitCastExpr 0x181fdef7728 <col:10> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef7710 <col:10> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef37a8 <col:10> 'char [2]' lvalue "b"
|   |-ImplicitCastExpr 0x181fdef7768 <col:15> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef7750 <col:15> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef37c8 <col:15> 'char [2]' lvalue "."
|   |-ImplicitCastExpr 0x181fdef77b8 <col:20> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef77a0 <col:20> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef37e8 <col:20> 'char [2]' lvalue "*"
|   |-ImplicitCastExpr 0x181fdef77e8 <col:25> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef77d0 <col:25> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef3808 <col:25> 'char [2]' lvalue "@"
|   |-ImplicitCastExpr 0x181fdef7858 <line:17:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef7840 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef3868 <col:5> 'char [3]' lvalue ".a"
|   |-ImplicitCastExpr 0x181fdef7888 <col:11> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef7870 <col:11> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef3888 <col:11> 'char [3]' lvalue "a."
|   |-ImplicitCastExpr 0x181fdef78b8 <col:17> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef78a0 <col:17> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef38a8 <col:17> 'char [3]' lvalue ".b"
|   |-ImplicitCastExpr 0x181fdef78e8 <col:23> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef78d0 <col:23> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef38c8 <col:23> 'char [3]' lvalue "b."
|   |-ImplicitCastExpr 0x181fdef7998 <col:29> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef7980 <col:29> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef38e8 <col:29> 'char [3]' lvalue ".*"
|   |-ImplicitCastExpr 0x181fdef79c8 <col:35> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef79b0 <col:35> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef3908 <col:35> 'char [3]' lvalue "*."
|   |-ImplicitCastExpr 0x181fdef79f8 <col:41> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef79e0 <col:41> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef3928 <col:41> 'char [3]' lvalue "*@"
|   |-ImplicitCastExpr 0x181fdef7a28 <col:47> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef7a10 <col:47> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef3948 <col:47> 'char [3]' lvalue "@*"
|   |-ImplicitCastExpr 0x181fdef7a58 <col:53> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef7a40 <col:53> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef3968 <col:53> 'char [3]' lvalue "a@"
|   |-ImplicitCastExpr 0x181fdef7a88 <col:59> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef7a70 <col:59> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef3988 <col:59> 'char [3]' lvalue "@a"
|   |-ImplicitCastExpr 0x181fdef7ab8 <col:65> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef7aa0 <col:65> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef39a8 <col:65> 'char [3]' lvalue "b@"
|   |-ImplicitCastExpr 0x181fdef7ae8 <col:71> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef7ad0 <col:71> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef39c8 <col:71> 'char [3]' lvalue ".."
|   |-ImplicitCastExpr 0x181fdef8c58 <line:18:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef8c40 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef3a28 <col:5> 'char [13]' lvalue "-example.com"
|   |-ImplicitCastExpr 0x181fdef8c88 <col:21> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef8c70 <col:21> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef3a50 <col:21> 'char [13]' lvalue "example-.com"
|   |-ImplicitCastExpr 0x181fdef8cb8 <line:19:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef8ca0 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef3a78 <col:5> 'char [3]' lvalue "@@"
|   |-ImplicitCastExpr 0x181fdef8ce8 <col:11> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef8cd0 <col:11> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef3a98 <col:11> 'char [3]' lvalue "**"
|   |-ImplicitCastExpr 0x181fdef8d18 <col:17> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef8d00 <col:17> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef6b58 <col:17> 'char [6]' lvalue "*.com"
|   |-ImplicitCastExpr 0x181fdef8d48 <col:26> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef8d30 <col:26> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef6bb8 <col:26> 'char [5]' lvalue "*com"
|   |-ImplicitCastExpr 0x181fdef8d78 <col:34> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef8d60 <col:34> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef6c18 <col:34> 'char [8]' lvalue "*.*.com"
|   |-ImplicitCastExpr 0x181fdef8da8 <col:45> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef8d90 <col:45> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef6c38 <col:45> 'char [5]' lvalue "*com"
|   |-ImplicitCastExpr 0x181fdef8dd8 <col:53> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef8dc0 <col:53> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef6c58 <col:53> 'char [5]' lvalue "com*"
|   |-ImplicitCastExpr 0x181fdef8e08 <col:61> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef8df0 <col:61> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef6c78 <col:61> 'char [13]' lvalue "*example.com"
|   |-ImplicitCastExpr 0x181fdef8e38 <line:20:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef8e20 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef6cd8 <col:5> 'char [14]' lvalue "*@example.com"
|   |-ImplicitCastExpr 0x181fdef8e68 <col:22> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef8e50 <col:22> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef6d38 <col:22> 'char [19]' lvalue "test@*.example.com"
|   |-ImplicitCastExpr 0x181fdef8e98 <col:44> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef8e80 <col:44> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef6da8 <col:44> 'char [12]' lvalue "example.com"
|   |-ImplicitCastExpr 0x181fdef8ec8 <col:59> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef8eb0 <col:59> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef6e08 <col:59> 'char [16]' lvalue "www.example.com"
|   |-ImplicitCastExpr 0x181fdef8ef8 <line:21:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef8ee0 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef6e68 <col:5> 'char [21]' lvalue "test.www.example.com"
|   |-ImplicitCastExpr 0x181fdef8f28 <col:29> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef8f10 <col:29> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef6e98 <col:29> 'char [14]' lvalue "*.example.com"
|   |-ImplicitCastExpr 0x181fdef9158 <col:46> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef9140 <col:46> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef6ef8 <col:46> 'char [18]' lvalue "*.www.example.com"
|   |-ImplicitCastExpr 0x181fdef9188 <line:22:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef9170 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef6f28 <col:5> 'char [19]' lvalue "test.*.example.com"
|   |-ImplicitCastExpr 0x181fdef91b8 <col:27> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef91a0 <col:27> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef6f98 <col:27> 'char [10]' lvalue "www.*.com"
|   |-ImplicitCastExpr 0x181fdef91e8 <line:23:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef91d0 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef6ff8 <col:5> 'char [17]' lvalue ".www.example.com"
|   |-ImplicitCastExpr 0x181fdef9218 <col:25> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef9200 <col:25> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef7020 <col:25> 'char [17]' lvalue "*www.example.com"
|   |-ImplicitCastExpr 0x181fdef9248 <line:24:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef9230 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef7048 <col:5> 'char [12]' lvalue "example.net"
|   |-ImplicitCastExpr 0x181fdef9278 <col:20> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef9260 <col:20> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef70a8 <col:20> 'char [25]' lvalue "xn--rger-koa.example.com"
|   |-ImplicitCastExpr 0x181fdef92a8 <line:25:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef9290 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef7118 <col:5> 'char [27]' lvalue "*.xn--rger-koa.example.com"
|   |-ImplicitCastExpr 0x181fdef92d8 <col:35> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef92c0 <col:35> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef7188 <col:35> 'char [29]' lvalue "www.xn--rger-koa.example.com"
|   |-ImplicitCastExpr 0x181fdef9308 <line:26:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef92f0 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef71f8 <col:5> 'char [20]' lvalue "*.good--example.com"
|   |-ImplicitCastExpr 0x181fdef9338 <col:28> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef9320 <col:28> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef7268 <col:28> 'char [22]' lvalue "www.good--example.com"
|   |-ImplicitCastExpr 0x181fdef9368 <line:27:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef9350 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef7298 <col:5> 'char [14]' lvalue "*.xn--bar.com"
|   |-ImplicitCastExpr 0x181fdef9398 <col:22> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef9380 <col:22> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef72c0 <col:22> 'char [20]' lvalue "xn--foo.xn--bar.com"
|   |-ImplicitCastExpr 0x181fdef93c8 <line:28:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef93b0 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef72f0 <col:5> 'char [14]' lvalue "a.example.com"
|   |-ImplicitCastExpr 0x181fdef93f8 <col:22> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef93e0 <col:22> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef7318 <col:22> 'char [14]' lvalue "b.example.com"
|   |-ImplicitCastExpr 0x181fdef9428 <line:29:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef9410 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef7378 <col:5> 'char [23]' lvalue "postmaster@example.com"
|   |-ImplicitCastExpr 0x181fdef9458 <col:31> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef9440 <col:31> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef73a8 <col:31> 'char [23]' lvalue "Postmaster@example.com"
|   |-ImplicitCastExpr 0x181fdef9488 <line:30:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef9470 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef73d8 <col:5> 'char [23]' lvalue "postmaster@EXAMPLE.COM"
|   `-ImplicitCastExpr 0x181fdef94a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *const' <NullToPointer>
|     `-ParenExpr 0x181fdef7470 <col:17, col:27> 'void *'
|       `-CStyleCastExpr 0x181fdef7448 <col:18, col:26> 'void *' <NullToPointer>
|         `-IntegerLiteral 0x181fdef7408 <col:26> 'int' 0
|-VarDecl 0x181fdef9560 <.//openssl//file_jk/after\test\v3nametest.c:34:1, line:70:1> line:34:26 used exceptions 'const char *const [35]' static cinit
| `-InitListExpr 0x181fdefb9a0 <col:41, line:70:1> 'const char *const [35]'
|   |-ImplicitCastExpr 0x181fdefb9f8 <line:35:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdefb9e0 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef9608 <col:5> 'char [54]' lvalue "set CN: host: [*.example.com] matches [a.example.com]"
|   |-ImplicitCastExpr 0x181fdefba30 <line:36:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdefba18 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef9658 <col:5> 'char [54]' lvalue "set CN: host: [*.example.com] matches [b.example.com]"
|   |-ImplicitCastExpr 0x181fdefba70 <line:37:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdefba58 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef96e8 <col:5> 'char [56]' lvalue "set CN: host: [*.example.com] matches [www.example.com]"
|   |-ImplicitCastExpr 0x181fdefbac0 <line:38:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdefbaa8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef9778 <col:5> 'char [65]' lvalue "set CN: host: [*.example.com] matches [xn--rger-koa.example.com]"
|   |-ImplicitCastExpr 0x181fdefbaf0 <line:39:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdefbad8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef97d0 <col:5> 'char [65]' lvalue "set CN: host: [*.www.example.com] matches [test.www.example.com]"
|   |-ImplicitCastExpr 0x181fdef3af0 <line:40:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdefbb48 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef9868 <col:5> 'char [61]' lvalue "set CN: host: [*.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x181fdef3b20 <line:41:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef3b08 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef98f8 <col:5> 'char [59]' lvalue "set CN: host: [*www.example.com] matches [www.example.com]"
|   |-ImplicitCastExpr 0x181fdef3b50 <line:42:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef3b38 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef9988 <col:5> 'char [64]' lvalue "set CN: host: [test.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x181fdef3b80 <line:43:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef3b68 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef9a18 <col:5> 'char [82]' lvalue "set CN: host: [*.xn--rger-koa.example.com] matches [www.xn--rger-koa.example.com]"
|   |-ImplicitCastExpr 0x181fdef3c30 <line:44:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef3c18 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdef9ac8 <col:5> 'char [60]' lvalue "set CN: host: [*.xn--bar.com] matches [xn--foo.xn--bar.com]"
|   |-ImplicitCastExpr 0x181fdef3c60 <line:45:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef3c48 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdefab98 <col:5> 'char [68]' lvalue "set CN: host: [*.good--example.com] matches [www.good--example.com]"
|   |-ImplicitCastExpr 0x181fdef3c90 <line:46:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef3c78 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdefac38 <col:5> 'char [74]' lvalue "set CN: host-no-wildcards: [*.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x181fdef3cc0 <line:47:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef3ca8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdefacd8 <col:5> 'char [77]' lvalue "set CN: host-no-wildcards: [test.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x181fdef3cf0 <line:48:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef3cd8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdefad78 <col:5> 'char [90]' lvalue "set emailAddress: email: [postmaster@example.com] does not match [Postmaster@example.com]"
|   |-ImplicitCastExpr 0x181fdef3d20 <line:49:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef3d08 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdefadf0 <col:5> 'char [90]' lvalue "set emailAddress: email: [postmaster@EXAMPLE.COM] does not match [Postmaster@example.com]"
|   |-ImplicitCastExpr 0x181fdef3d50 <line:50:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef3d38 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdefae68 <col:5> 'char [90]' lvalue "set emailAddress: email: [Postmaster@example.com] does not match [postmaster@example.com]"
|   |-ImplicitCastExpr 0x181fdef3d80 <line:51:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef3d68 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdefaee0 <col:5> 'char [90]' lvalue "set emailAddress: email: [Postmaster@example.com] does not match [postmaster@EXAMPLE.COM]"
|   |-ImplicitCastExpr 0x181fdef3eb0 <line:52:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef3e98 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdefaf58 <col:5> 'char [61]' lvalue "set dnsName: host: [*.example.com] matches [www.example.com]"
|   |-ImplicitCastExpr 0x181fdef3ee0 <line:53:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef3ec8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdefafb0 <col:5> 'char [59]' lvalue "set dnsName: host: [*.example.com] matches [a.example.com]"
|   |-ImplicitCastExpr 0x181fdef3f10 <line:54:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef3ef8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdefb008 <col:5> 'char [59]' lvalue "set dnsName: host: [*.example.com] matches [b.example.com]"
|   |-ImplicitCastExpr 0x181fdef3f40 <line:55:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef3f28 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdefb098 <col:5> 'char [70]' lvalue "set dnsName: host: [*.example.com] matches [xn--rger-koa.example.com]"
|   |-ImplicitCastExpr 0x181fdef3f70 <line:56:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef3f58 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdefb0f8 <col:5> 'char [70]' lvalue "set dnsName: host: [*.www.example.com] matches [test.www.example.com]"
|   |-ImplicitCastExpr 0x181fdef3fa0 <line:57:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef3f88 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdefb198 <col:5> 'char [79]' lvalue "set dnsName: host-no-wildcards: [*.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x181fdef3fd0 <line:58:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef3fb8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdefb200 <col:5> 'char [82]' lvalue "set dnsName: host-no-wildcards: [test.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x181fdef4000 <line:59:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef3fe8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdefb2a8 <col:5> 'char [66]' lvalue "set dnsName: host: [*.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x181fdef4030 <line:60:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef4018 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdefb308 <col:5> 'char [64]' lvalue "set dnsName: host: [*www.example.com] matches [www.example.com]"
|   |-ImplicitCastExpr 0x181fdef4060 <line:61:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef4048 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdefb398 <col:5> 'char [69]' lvalue "set dnsName: host: [test.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x181fdef4090 <line:62:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef4078 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdefb438 <col:5> 'char [87]' lvalue "set dnsName: host: [*.xn--rger-koa.example.com] matches [www.xn--rger-koa.example.com]"
|   |-ImplicitCastExpr 0x181fdef40c0 <line:63:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef40a8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdefb4a8 <col:5> 'char [65]' lvalue "set dnsName: host: [*.xn--bar.com] matches [xn--foo.xn--bar.com]"
|   |-ImplicitCastExpr 0x181fdef40f0 <line:64:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef40d8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdefb538 <col:5> 'char [73]' lvalue "set dnsName: host: [*.good--example.com] matches [www.good--example.com]"
|   |-ImplicitCastExpr 0x181fdef4120 <line:65:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef4108 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdefb5d8 <col:5> 'char [88]' lvalue "set rfc822Name: email: [postmaster@example.com] does not match [Postmaster@example.com]"
|   |-ImplicitCastExpr 0x181fdef4150 <line:66:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef4138 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdefb648 <col:5> 'char [88]' lvalue "set rfc822Name: email: [Postmaster@example.com] does not match [postmaster@example.com]"
|   |-ImplicitCastExpr 0x181fdef4180 <line:67:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef4168 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdefb6b8 <col:5> 'char [88]' lvalue "set rfc822Name: email: [Postmaster@example.com] does not match [postmaster@EXAMPLE.COM]"
|   |-ImplicitCastExpr 0x181fdef43b0 <line:68:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x181fdef4398 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x181fdefb728 <col:5> 'char [88]' lvalue "set rfc822Name: email: [postmaster@EXAMPLE.COM] does not match [Postmaster@example.com]"
|   `-ImplicitCastExpr 0x181fdef43c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *const' <NullToPointer>
|     `-ParenExpr 0x181fdefb800 <col:17, col:27> 'void *'
|       `-CStyleCastExpr 0x181fdefb7d8 <col:18, col:26> 'void *' <NullToPointer>
|         `-IntegerLiteral 0x181fdefb798 <col:26> 'int' 0
|-FunctionDecl 0x181fdef4550 <.//openssl//file_jk/after\test\v3nametest.c:72:1, line:79:1> line:72:12 used is_exception 'int (const char *)' static
| |-ParmVarDecl 0x181fdef4470 <col:25, col:37> col:37 used msg 'const char *'
| `-CompoundStmt 0x181fdef4a68 <line:73:1, line:79:1>
|   |-DeclStmt 0x181fdef46b8 <line:74:5, col:25>
|   | `-VarDecl 0x181fdef4650 <col:5, col:24> col:24 used p 'const char *const *'
|   |-ForStmt 0x181fdef49f8 <line:75:5, line:77:20>
|   | |-BinaryOperator 0x181fdef4740 <line:75:10, col:14> 'const char *const *' '='
|   | | |-DeclRefExpr 0x181fdef46d0 <col:10> 'const char *const *' lvalue Var 0x181fdef4650 'p' 'const char *const *'
|   | | `-ImplicitCastExpr 0x181fdef4728 <col:14> 'const char *const *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x181fdef4708 <col:14> 'const char *const [35]' lvalue Var 0x181fdef9560 'exceptions' 'const char *const [35]'
|   | |-<<<NULL>>>
|   | |-ImplicitCastExpr 0x181fdef47b0 <col:26, col:27> 'const char *' <LValueToRValue>
|   | | `-UnaryOperator 0x181fdef4798 <col:26, col:27> 'const char *const' lvalue prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x181fdef4780 <col:27> 'const char *const *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x181fdef4760 <col:27> 'const char *const *' lvalue Var 0x181fdef4650 'p' 'const char *const *'
|   | |-UnaryOperator 0x181fdef47e8 <col:30, col:32> 'const char *const *' prefix '++'
|   | | `-DeclRefExpr 0x181fdef47c8 <col:32> 'const char *const *' lvalue Var 0x181fdef4650 'p' 'const char *const *'
|   | `-IfStmt 0x181fdef49e0 <line:76:9, line:77:20>
|   |   |-BinaryOperator 0x181fdef4988 <line:76:13, col:32> 'int' '=='
|   |   | |-CallExpr 0x181fdef4900 <col:13, col:27> 'int'
|   |   | | |-ImplicitCastExpr 0x181fdef48e8 <col:13> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x181fdef4800 <col:13> 'int (const char *, const char *)' Function 0x181fdeab940 'strcmp' 'int (const char *, const char *)'
|   |   | | |-ImplicitCastExpr 0x181fdef4930 <col:20> 'const char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x181fdef4820 <col:20> 'const char *' lvalue ParmVar 0x181fdef4470 'msg' 'const char *'
|   |   | | `-ImplicitCastExpr 0x181fdef4948 <col:25, col:26> 'const char *' <LValueToRValue>
|   |   | |   `-UnaryOperator 0x181fdef4878 <col:25, col:26> 'const char *const' lvalue prefix '*' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x181fdef4860 <col:26> 'const char *const *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x181fdef4840 <col:26> 'const char *const *' lvalue Var 0x181fdef4650 'p' 'const char *const *'
|   |   | `-IntegerLiteral 0x181fdef4960 <col:32> 'int' 0
|   |   `-ReturnStmt 0x181fdef49d0 <line:77:13, col:20>
|   |     `-IntegerLiteral 0x181fdef49a8 <col:20> 'int' 1
|   `-ReturnStmt 0x181fdef4a58 <line:78:5, col:12>
|     `-IntegerLiteral 0x181fdef4a30 <col:12> 'int' 0
|-FunctionDecl 0x181fdefbc48 <line:81:1, line:108:1> line:81:12 invalid set_cn 'int (int *, ...)' static
| |-ParmVarDecl 0x181fdefbb70 <col:19, col:25> col:25 invalid crt 'int *'
| `-CompoundStmt 0x181fdefd190 <line:82:1, line:108:1>
|   |-DeclStmt 0x181fdefbdb0 <line:83:5, col:16>
|   | `-VarDecl 0x181fdefbd20 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x181fdefbd88 <col:15> 'int' 0
|   |-DeclStmt 0x181fdefbec8 <line:85:5, col:15>
|   | `-VarDecl 0x181fdefbe60 <col:5, col:13> col:13 used ap 'va_list':'char *'
|   |-IfStmt 0x181fdefc458 <line:88:5, line:89:14>
|   | |-OpaqueValueExpr 0x181fdefc440 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x181fdefc428 <col:9, col:14> 'out' 0x181fdefc3d8
|   |-WhileStmt 0x181fdefcb40 <line:90:5, line:100:5>
|   | |-IntegerLiteral 0x181fdefc470 <line:90:12> 'int' 1
|   | `-CompoundStmt 0x181fdefcb10 <col:15, line:100:5>
|   |   |-DeclStmt 0x181fdefc518 <line:91:9, col:16>
|   |   | `-VarDecl 0x181fdefc4b0 <col:9, col:13> col:13 used nid 'int'
|   |   |-DeclStmt 0x181fdefc5b0 <line:92:9, col:25>
|   |   | `-VarDecl 0x181fdefc548 <col:9, col:21> col:21 used name 'const char *'
|   |   |-IfStmt 0x181fdefc7b8 <line:94:9, line:95:13>
|   |   | |-BinaryOperator 0x181fdefc790 <line:94:13, col:20> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x181fdefc778 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x181fdefc730 <col:13> 'int' lvalue Var 0x181fdefc4b0 'nid' 'int'
|   |   | | `-IntegerLiteral 0x181fdefc750 <col:20> 'int' 0
|   |   | `-BreakStmt 0x181fdefc7b0 <line:95:13>
|   |   `-IfStmt 0x181fdefcaf8 <line:97:9, line:99:18>
|   |     |-OpaqueValueExpr 0x181fdefcae0 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x181fdefcac8 <col:13, col:18> 'out' 0x181fdefc3d8
|   |-IfStmt 0x181fdefccc0 <line:101:5, line:102:14>
|   | |-OpaqueValueExpr 0x181fdefcca8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x181fdefcc90 <col:9, col:14> 'out' 0x181fdefc3d8
|   |-BinaryOperator 0x181fdefcd38 <line:103:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x181fdefccd8 <col:5> 'int' lvalue Var 0x181fdefbd20 'ret' 'int'
|   | `-IntegerLiteral 0x181fdefcd10 <col:11> 'int' 1
|   |-LabelStmt 0x181fdefce70 <line:104:2, col:5> 'out'
|   | `-NullStmt 0x181fdefce68 <col:5>
|   |-CallExpr 0x181fdefd120 <line:106:5, col:14> 'void'
|   | |-ImplicitCastExpr 0x181fdefd108 <col:5> 'void (*)(__builtin_va_list &)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x181fdefd058 <col:5> 'void (__builtin_va_list &)' Function 0x181fdefcef0 'va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x181fdefd090 <col:12> 'va_list':'char *' lvalue Var 0x181fdefbe60 'ap' 'va_list':'char *'
|   `-ReturnStmt 0x181fdefd180 <line:107:5, col:12>
|     `-ImplicitCastExpr 0x181fdefd168 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x181fdefd148 <col:12> 'int' lvalue Var 0x181fdefbd20 'ret' 'int'
|-FunctionDecl 0x181fdefbfd8 <line:86:5> col:5 implicit used va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x181fdefc078 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x181fdefc0e8 <col:5> Implicit
|-FunctionDecl 0x181fdefcef0 <line:106:5> col:5 implicit used va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x181fdefcf90 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x181fdefd000 <col:5> Implicit
|-FunctionDecl 0x181fdefd298 <line:117:1, line:165:1> line:117:12 invalid set_altname 'int (int *, ...)' static
| |-ParmVarDecl 0x181fdefd200 <col:24, col:30> col:30 invalid crt 'int *'
| `-CompoundStmt 0x181fdf06ff0 <line:118:1, line:165:1>
|   |-DeclStmt 0x181fdefd400 <line:119:5, col:16>
|   | `-VarDecl 0x181fdefd370 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x181fdefd3d8 <col:15> 'int' 0
|   |-DeclStmt 0x181fdefd628 <line:123:5, col:15>
|   | `-VarDecl 0x181fdefd5c0 <col:5, col:13> col:13 used ap 'va_list':'char *'
|   |-IfStmt 0x181fdefd8e8 <line:126:5, line:127:14>
|   | |-OpaqueValueExpr 0x181fdefd8d0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x181fdefd8b8 <col:9, col:14> 'out' 0x181fdefd868
|   |-WhileStmt 0x181fdf058e0 <line:128:5, line:155:5>
|   | |-IntegerLiteral 0x181fdefd900 <line:128:12> 'int' 1
|   | `-CompoundStmt 0x181fdf05898 <col:15, line:155:5>
|   |   |-DeclStmt 0x181fdefd9a8 <line:129:9, col:17>
|   |   | `-VarDecl 0x181fdefd940 <col:9, col:13> col:13 used type 'int'
|   |   |-DeclStmt 0x181fdefda40 <line:130:9, col:25>
|   |   | `-VarDecl 0x181fdefd9d8 <col:9, col:21> col:21 used name 'const char *'
|   |   |-IfStmt 0x181fdefdb58 <line:132:9, line:133:13>
|   |   | |-BinaryOperator 0x181fdefdb30 <line:132:13, col:21> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x181fdefdb18 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x181fdefdad0 <col:13> 'int' lvalue Var 0x181fdefd940 'type' 'int'
|   |   | | `-IntegerLiteral 0x181fdefdaf0 <col:21> 'int' 0
|   |   | `-BreakStmt 0x181fdefdb50 <line:133:13>
|   |   |-IfStmt 0x181fdf04f88 <line:137:9, line:138:18>
|   |   | |-OpaqueValueExpr 0x181fdf04f70 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x181fdf04f58 <col:13, col:18> 'out' 0x181fdefd868
|   |   |-IfStmt 0x181fdf051a0 <line:140:9, line:141:18>
|   |   | |-OpaqueValueExpr 0x181fdf05188 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x181fdf05170 <col:13, col:18> 'out' 0x181fdefd868
|   |   |-IfStmt 0x181fdf05358 <line:142:9, line:143:18>
|   |   | |-OpaqueValueExpr 0x181fdf05340 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x181fdf05328 <col:13, col:18> 'out' 0x181fdefd868
|   |   `-SwitchStmt 0x181fdf053a8 <line:144:9, line:152:9>
|   |     |-ImplicitCastExpr 0x181fdf05390 <line:144:17> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x181fdf05370 <col:17> 'int' lvalue Var 0x181fdefd940 'type' 'int'
|   |     `-CompoundStmt 0x181fdf056e0 <col:23, line:152:9>
|   |       |-BreakStmt 0x181fdf05580 <line:149:13>
|   |       `-DefaultStmt 0x181fdf056c0 <line:150:9, line:151:19>
|   |         `-CallExpr 0x181fdf056a0 <col:13, col:19> 'void'
|   |           `-ImplicitCastExpr 0x181fdf05688 <col:13> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |             `-DeclRefExpr 0x181fdf05628 <col:13> 'void (void) __attribute__((noreturn))' Function 0x181fdf05588 'abort' 'void (void) __attribute__((noreturn))'
|   |-IfStmt 0x181fdf05a88 <line:156:5, line:157:14>
|   | |-OpaqueValueExpr 0x181fdf05a70 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x181fdf05a58 <col:9, col:14> 'out' 0x181fdefd868
|   |-BinaryOperator 0x181fdf05b00 <line:158:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x181fdf05aa0 <col:5> 'int' lvalue Var 0x181fdefd370 'ret' 'int'
|   | `-IntegerLiteral 0x181fdf05ad8 <col:11> 'int' 1
|   |-LabelStmt 0x181fdf05c38 <line:159:2, col:5> 'out'
|   | `-NullStmt 0x181fdf05c30 <col:5>
|   |-CallExpr 0x181fdf06f80 <line:163:5, col:14> 'void'
|   | |-ImplicitCastExpr 0x181fdf06f68 <col:5> 'void (*)(__builtin_va_list &)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x181fdf06f28 <col:5> 'void (__builtin_va_list &)' Function 0x181fdefcef0 'va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x181fdf06f48 <col:12> 'va_list':'char *' lvalue Var 0x181fdefd5c0 'ap' 'va_list':'char *'
|   `-ReturnStmt 0x181fdf06fe0 <line:164:5, col:12>
|     `-ImplicitCastExpr 0x181fdf06fc8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x181fdf06fa8 <col:12> 'int' lvalue Var 0x181fdefd370 'ret' 'int'
|-FunctionDecl 0x181fdf05588 <line:151:13> col:13 implicit used abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x181fdf071c0 <line:167:1, line:170:1> line:167:12 invalid set_cn1 'int (int *, const char *)' static
| |-ParmVarDecl 0x181fdf07060 <col:20, col:26> col:26 invalid crt 'int *'
| |-ParmVarDecl 0x181fdf070e0 <col:31, col:43> col:43 used name 'const char *'
| `-CompoundStmt 0x181fdf072e8 <line:168:1, line:170:1>
|-FunctionDecl 0x181fdf07430 <line:172:1, line:176:1> line:172:12 invalid set_cn_and_email 'int (int *, const char *)' static
| |-ParmVarDecl 0x181fdf07310 <col:29, col:35> col:35 invalid crt 'int *'
| |-ParmVarDecl 0x181fdf07390 <col:40, col:52> col:52 used name 'const char *'
| `-CompoundStmt 0x181fdf07588 <line:173:1, line:176:1>
|-FunctionDecl 0x181fdf076d0 <line:178:1, line:182:1> line:178:12 invalid set_cn2 'int (int *, const char *)' static
| |-ParmVarDecl 0x181fdf075b0 <col:20, col:26> col:26 invalid crt 'int *'
| |-ParmVarDecl 0x181fdf07630 <col:31, col:43> col:43 used name 'const char *'
| `-CompoundStmt 0x181fdf07820 <line:179:1, line:182:1>
|-FunctionDecl 0x181fdf07968 <line:184:1, line:188:1> line:184:12 invalid set_cn3 'int (int *, const char *)' static
| |-ParmVarDecl 0x181fdf07848 <col:20, col:26> col:26 invalid crt 'int *'
| |-ParmVarDecl 0x181fdf078c8 <col:31, col:43> col:43 used name 'const char *'
| `-CompoundStmt 0x181fdf07ab8 <line:185:1, line:188:1>
|-FunctionDecl 0x181fdf07c00 <line:190:1, line:193:1> line:190:12 invalid set_email1 'int (int *, const char *)' static
| |-ParmVarDecl 0x181fdf07ae0 <col:23, col:29> col:29 invalid crt 'int *'
| |-ParmVarDecl 0x181fdf07b60 <col:34, col:46> col:46 used name 'const char *'
| `-CompoundStmt 0x181fdf08d50 <line:191:1, line:193:1>
|-FunctionDecl 0x181fdf08e98 <line:195:1, line:199:1> line:195:12 invalid set_email2 'int (int *, const char *)' static
| |-ParmVarDecl 0x181fdf08d78 <col:23, col:29> col:29 invalid crt 'int *'
| |-ParmVarDecl 0x181fdf08df8 <col:34, col:46> col:46 used name 'const char *'
| `-CompoundStmt 0x181fdf08ff0 <line:196:1, line:199:1>
|-FunctionDecl 0x181fdf09138 <line:201:1, line:205:1> line:201:12 invalid set_email3 'int (int *, const char *)' static
| |-ParmVarDecl 0x181fdf09018 <col:23, col:29> col:29 invalid crt 'int *'
| |-ParmVarDecl 0x181fdf09098 <col:34, col:46> col:46 used name 'const char *'
| `-CompoundStmt 0x181fdf09290 <line:202:1, line:205:1>
|-FunctionDecl 0x181fdf093d8 <line:207:1, line:211:1> line:207:12 invalid set_email_and_cn 'int (int *, const char *)' static
| |-ParmVarDecl 0x181fdf092b8 <col:29, col:35> col:35 invalid crt 'int *'
| |-ParmVarDecl 0x181fdf09338 <col:40, col:52> col:52 used name 'const char *'
| `-CompoundStmt 0x181fdf09528 <line:208:1, line:211:1>
|-FunctionDecl 0x181fdf09670 <line:213:1, line:216:1> line:213:12 invalid set_altname_dns 'int (int *, const char *)' static
| |-ParmVarDecl 0x181fdf09550 <col:28, col:34> col:34 invalid crt 'int *'
| |-ParmVarDecl 0x181fdf095d0 <col:39, col:51> col:51 used name 'const char *'
| `-CompoundStmt 0x181fdf09798 <line:214:1, line:216:1>
|-FunctionDecl 0x181fdf098e0 <line:218:1, line:221:1> line:218:12 invalid set_altname_email 'int (int *, const char *)' static
| |-ParmVarDecl 0x181fdf097c0 <col:30, col:36> col:36 invalid crt 'int *'
| |-ParmVarDecl 0x181fdf09840 <col:41, col:53> col:53 used name 'const char *'
| `-CompoundStmt 0x181fdf09a08 <line:219:1, line:221:1>
|-RecordDecl 0x181fdf09a18 <line:223:1, line:228:1> line:223:8 struct set_name_fn definition
| |-FieldDecl 0x181fdf09ca0 <line:224:5, col:36> col:11 referenced fn 'int (*)(int *, const char *)'
| |-FieldDecl 0x181fdf03d00 <line:225:5, col:17> col:17 referenced name 'const char *'
| |-FieldDecl 0x181fdf03d70 <line:226:5, col:9> col:9 referenced host 'int'
| `-FieldDecl 0x181fdf03de0 <line:227:5, col:9> col:9 referenced email 'int'
|-VarDecl 0x181fdf03ef8 <line:230:1, col:42> col:33 used name_fns 'const struct set_name_fn []' static
|-FunctionDecl 0x181fdf04660 <line:244:1, line:259:1> line:244:14 invalid make_cert 'int *()' static
| `-CompoundStmt 0x181fdf0add0 <line:245:1, line:259:1>
|   |-IfStmt 0x181fdf04b00 <line:250:5, line:251:14>
|   | |-OpaqueValueExpr 0x181fdf04ae8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x181fdf04ad0 <col:9, col:14> 'out' 0x181fdf04a80
|   |-IfStmt 0x181fdf04c80 <line:252:5, line:253:14>
|   | |-OpaqueValueExpr 0x181fdf04c68 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x181fdf04c50 <col:9, col:14> 'out' 0x181fdf04a80
|   `-LabelStmt 0x181fdf0adb8 <line:256:2, col:5> 'out'
|     `-NullStmt 0x181fdf0adb0 <col:5>
|-VarDecl 0x181fdf0ae10 <line:261:1, col:12> col:12 used errors 'int' static
|-FunctionDecl 0x181fdf0b2d8 <line:263:1, line:276:1> line:263:13 used check_message 'void (const struct set_name_fn *, const char *, const char *, int, const char *)' static
| |-ParmVarDecl 0x181fdf0af10 <col:27, col:53> col:53 used fn 'const struct set_name_fn *'
| |-ParmVarDecl 0x181fdf0af90 <col:57, col:69> col:69 used op 'const char *'
| |-ParmVarDecl 0x181fdf0b010 <line:264:27, col:39> col:39 used nameincert 'const char *'
| |-ParmVarDecl 0x181fdf0b090 <col:51, col:55> col:55 used match 'int'
| |-ParmVarDecl 0x181fdf0b110 <col:62, col:74> col:74 used name 'const char *'
| `-CompoundStmt 0x181fdf0bdb8 <line:265:1, line:276:1>
|   |-DeclStmt 0x181fdf0b4c0 <line:266:5, col:19>
|   | `-VarDecl 0x181fdf0b458 <col:5, col:18> col:10 used msg 'char [1024]'
|   |-IfStmt 0x181fdf0b568 <line:267:5, line:268:9>
|   | |-BinaryOperator 0x181fdf0b538 <line:267:9, col:17> 'int' '<'
|   | | |-ImplicitCastExpr 0x181fdf0b520 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x181fdf0b4d8 <col:9> 'int' lvalue ParmVar 0x181fdf0b090 'match' 'int'
|   | | `-IntegerLiteral 0x181fdf0b4f8 <col:17> 'int' 0
|   | `-ReturnStmt 0x181fdf0b558 <line:268:9>
|   |-CallExpr 0x181fdf0b9d8 <line:269:5, line:271:60> 'int'
|   | |-ImplicitCastExpr 0x181fdf0b9c0 <line:269:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x181fdf0b670 <col:5> 'int ()' Function 0x181fdf0b5a8 'BIO_snprintf' 'int ()'
|   | |-ImplicitCastExpr 0x181fdf0ba38 <col:18> 'char *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x181fdf0b690 <col:18> 'char [1024]' lvalue Var 0x181fdf0b458 'msg' 'char [1024]'
|   | |-UnaryExprOrTypeTraitExpr 0x181fdf0b708 <col:23, col:33> 'unsigned long long' sizeof
|   | | `-ParenExpr 0x181fdf0b6e8 <col:29, col:33> 'char [1024]' lvalue
|   | |   `-DeclRefExpr 0x181fdf0b6c8 <col:30> 'char [1024]' lvalue Var 0x181fdf0b458 'msg' 'char [1024]' non_odr_use_unevaluated
|   | |-ImplicitCastExpr 0x181fdf0ba50 <col:36> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x181fdf0b728 <col:36> 'char [21]' lvalue "%s: %s: [%s] %s [%s]"
|   | |-ImplicitCastExpr 0x181fdf0ba68 <line:270:18, col:22> 'const char *' <LValueToRValue>
|   | | `-MemberExpr 0x181fdf0b790 <col:18, col:22> 'const char *const' lvalue ->name 0x181fdf03d00
|   | |   `-ImplicitCastExpr 0x181fdf0b778 <col:18> 'const struct set_name_fn *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x181fdf0b758 <col:18> 'const struct set_name_fn *' lvalue ParmVar 0x181fdf0af10 'fn' 'const struct set_name_fn *'
|   | |-ImplicitCastExpr 0x181fdf0ba80 <col:28> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x181fdf0b7c0 <col:28> 'const char *' lvalue ParmVar 0x181fdf0af90 'op' 'const char *'
|   | |-ImplicitCastExpr 0x181fdf0ba98 <col:32> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x181fdf0b7e0 <col:32> 'const char *' lvalue ParmVar 0x181fdf0b010 'nameincert' 'const char *'
|   | |-ConditionalOperator 0x181fdf0b970 <line:271:18, col:38> 'char *'
|   | | |-ImplicitCastExpr 0x181fdf0b868 <col:18> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x181fdf0b800 <col:18> 'int' lvalue ParmVar 0x181fdf0b090 'match' 'int'
|   | | |-ImplicitCastExpr 0x181fdf0b880 <col:26> 'char *' <ArrayToPointerDecay>
|   | | | `-StringLiteral 0x181fdf0b820 <col:26> 'char [8]' lvalue "matches"
|   | | `-ImplicitCastExpr 0x181fdf0b898 <col:38> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x181fdf0b840 <col:38> 'char [15]' lvalue "does not match"
|   | `-ImplicitCastExpr 0x181fdf0bab0 <col:56> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x181fdf0b9a0 <col:56> 'const char *' lvalue ParmVar 0x181fdf0b110 'name' 'const char *'
|   |-IfStmt 0x181fdf0bbb8 <line:272:5, line:273:9>
|   | |-CallExpr 0x181fdf0bb50 <line:272:9, col:25> 'int'
|   | | |-ImplicitCastExpr 0x181fdf0bb38 <col:9> 'int (*)(const char *)' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x181fdf0bac8 <col:9> 'int (const char *)' Function 0x181fdef4550 'is_exception' 'int (const char *)'
|   | | `-ImplicitCastExpr 0x181fdf0bb90 <col:22> 'const char *' <NoOp>
|   | |   `-ImplicitCastExpr 0x181fdf0bb78 <col:22> 'char *' <ArrayToPointerDecay>
|   | |     `-DeclRefExpr 0x181fdf0bae8 <col:22> 'char [1024]' lvalue Var 0x181fdf0b458 'msg' 'char [1024]'
|   | `-ReturnStmt 0x181fdf0bba8 <line:273:9>
|   |-CallExpr 0x181fdf0bd18 <line:274:5, col:13> 'int'
|   | |-ImplicitCastExpr 0x181fdf0bd00 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x181fdf0bcc0 <col:5> 'int ()' Function 0x181fdf0bbf8 'puts' 'int ()'
|   | `-ImplicitCastExpr 0x181fdf0bd40 <col:10> 'char *' <ArrayToPointerDecay>
|   |   `-DeclRefExpr 0x181fdf0bce0 <col:10> 'char [1024]' lvalue Var 0x181fdf0b458 'msg' 'char [1024]'
|   `-UnaryOperator 0x181fdf0bda0 <line:275:5, col:7> 'int' prefix '++'
|     `-DeclRefExpr 0x181fdf0bd80 <col:7> 'int' lvalue Var 0x181fdf0ae10 'errors' 'int'
|-FunctionDecl 0x181fdf0c048 <line:278:1, line:331:1> line:278:13 invalid run_cert 'void (int *, const char *, const struct set_name_fn *)' static
| |-ParmVarDecl 0x181fdf0be10 <col:22, col:28> col:28 invalid crt 'int *'
| |-ParmVarDecl 0x181fdf0be90 <col:33, col:45> col:45 used nameincert 'const char *'
| |-ParmVarDecl 0x181fdf0bf20 <line:279:22, col:48> col:48 used fn 'const struct set_name_fn *'
| `-CompoundStmt 0x181fdf130d0 <line:280:1, line:331:1>
|   |-DeclStmt 0x181fdf0c1d0 <line:281:5, col:37>
|   | `-VarDecl 0x181fdf0c130 <col:5, col:32> col:24 used pname 'const char *const *' cinit
|   |   `-ImplicitCastExpr 0x181fdf0c1b8 <col:32> 'const char *const *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x181fdf0c198 <col:32> 'const char *const [52]' lvalue Var 0x181fdef36e0 'names' 'const char *const [52]'
|   `-WhileStmt 0x181fdf130b8 <line:282:5, line:330:5>
|     |-ImplicitCastExpr 0x181fdf0c250 <line:282:12, col:13> 'const char *' <LValueToRValue>
|     | `-UnaryOperator 0x181fdf0c238 <col:12, col:13> 'const char *const' lvalue prefix '*' cannot overflow
|     |   `-ImplicitCastExpr 0x181fdf0c220 <col:13> 'const char *const *' <LValueToRValue>
|     |     `-DeclRefExpr 0x181fdf0c1e8 <col:13> 'const char *const *' lvalue Var 0x181fdf0c130 'pname' 'const char *const *'
|     `-CompoundStmt 0x181fdf13028 <col:20, line:330:5>
|       |-DeclStmt 0x181fdf0c618 <line:283:9, col:59>
|       | `-VarDecl 0x181fdf0c280 <col:9, col:58> col:13 used samename 'int' cinit
|       |   `-BinaryOperator 0x181fdf0c5f8 <col:24, col:58> 'int' '=='
|       |     |-CallExpr 0x181fdf0c570 <col:24, col:53> 'int'
|       |     | |-ImplicitCastExpr 0x181fdf0c558 <col:24> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|       |     | | `-DeclRefExpr 0x181fdf0c468 <col:24> 'int (const char *, const char *)' Function 0x181fdf0c2e8 'strcasecmp' 'int (const char *, const char *)'
|       |     | |-ImplicitCastExpr 0x181fdf0c5a0 <col:35> 'const char *' <LValueToRValue>
|       |     | | `-DeclRefExpr 0x181fdf0c4a0 <col:35> 'const char *' lvalue ParmVar 0x181fdf0be90 'nameincert' 'const char *'
|       |     | `-ImplicitCastExpr 0x181fdf0c5b8 <col:47, col:48> 'const char *' <LValueToRValue>
|       |     |   `-UnaryOperator 0x181fdf0c510 <col:47, col:48> 'const char *const' lvalue prefix '*' cannot overflow
|       |     |     `-ImplicitCastExpr 0x181fdf0c4f8 <col:48> 'const char *const *' <LValueToRValue>
|       |     |       `-DeclRefExpr 0x181fdf0c4d8 <col:48> 'const char *const *' lvalue Var 0x181fdf0c130 'pname' 'const char *const *'
|       |     `-IntegerLiteral 0x181fdf0c5d0 <col:58> 'int' 0
|       |-DeclStmt 0x181fdf0c7b0 <line:284:9, col:40>
|       | `-VarDecl 0x181fdf0c640 <col:9, col:39> col:16 used namelen 'size_t':'unsigned long long' cinit
|       |   `-CallExpr 0x181fdf0c770 <col:26, col:39> 'unsigned long long'
|       |     |-ImplicitCastExpr 0x181fdf0c758 <col:26> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x181fdf0c6a8 <col:26> 'unsigned long long (const char *)' Function 0x181fdeabca0 'strlen' 'unsigned long long (const char *)'
|       |     `-ImplicitCastExpr 0x181fdf0c798 <col:33, col:34> 'const char *' <LValueToRValue>
|       |       `-UnaryOperator 0x181fdf0c700 <col:33, col:34> 'const char *const' lvalue prefix '*' cannot overflow
|       |         `-ImplicitCastExpr 0x181fdf0c6e8 <col:34> 'const char *const *' <LValueToRValue>
|       |           `-DeclRefExpr 0x181fdf0c6c8 <col:34> 'const char *const *' lvalue Var 0x181fdf0c130 'pname' 'const char *const *'
|       |-DeclStmt 0x181fdf0cab8 <line:285:9, col:37>
|       | `-VarDecl 0x181fdf0c7e0 <col:9, col:36> col:15 used name 'char *' cinit
|       |   `-ImplicitCastExpr 0x181fdf0caa0 <col:22, col:36> 'char *' <BitCast>
|       |     `-CallExpr 0x181fdf0ca60 <col:22, col:36> 'void *'
|       |       |-ImplicitCastExpr 0x181fdf0ca48 <col:22> 'void *(*)(unsigned long long)' <FunctionToPointerDecay>
|       |       | `-DeclRefExpr 0x181fdf0c990 <col:22> 'void *(unsigned long long)' Function 0x181fdf0c880 'malloc' 'void *(unsigned long long)'
|       |       `-ImplicitCastExpr 0x181fdf0ca88 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|       |         `-DeclRefExpr 0x181fdf0c9c8 <col:29> 'size_t':'unsigned long long' lvalue Var 0x181fdf0c640 'namelen' 'size_t':'unsigned long long'
|       |-DeclStmt 0x181fdf0cbe8 <line:286:9, col:23>
|       | |-VarDecl 0x181fdf0cae8 <col:9, col:13> col:13 used match 'int'
|       | `-VarDecl 0x181fdf0cb68 <col:9, col:20> col:20 used ret 'int'
|       |-CallExpr 0x181fdf0cd90 <line:287:9, col:37> 'void *'
|       | |-ImplicitCastExpr 0x181fdf0cd38 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x181fdf0cc00 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x181fdea7208 'memcpy' 'void *(void *, const void *, unsigned long long)'
|       | |-ImplicitCastExpr 0x181fdf0cde0 <col:16> 'void *' <BitCast>
|       | | `-ImplicitCastExpr 0x181fdf0cdc8 <col:16> 'char *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x181fdf0cc20 <col:16> 'char *' lvalue Var 0x181fdf0c7e0 'name' 'char *'
|       | |-ImplicitCastExpr 0x181fdf0ce10 <col:22, col:23> 'const void *' <BitCast>
|       | | `-ImplicitCastExpr 0x181fdf0cdf8 <col:22, col:23> 'const char *' <LValueToRValue>
|       | |   `-UnaryOperator 0x181fdf0cc90 <col:22, col:23> 'const char *const' lvalue prefix '*' cannot overflow
|       | |     `-ImplicitCastExpr 0x181fdf0cc78 <col:23> 'const char *const *' <LValueToRValue>
|       | |       `-DeclRefExpr 0x181fdf0cc58 <col:23> 'const char *const *' lvalue Var 0x181fdf0c130 'pname' 'const char *const *'
|       | `-ImplicitCastExpr 0x181fdf0ce28 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|       |   `-DeclRefExpr 0x181fdf0cca8 <col:30> 'size_t':'unsigned long long' lvalue Var 0x181fdf0c640 'namelen' 'size_t':'unsigned long long'
|       |-BinaryOperator 0x181fdf0d0f0 <line:290:9, col:18> 'int' '='
|       | |-DeclRefExpr 0x181fdf0d078 <col:9> 'int' lvalue Var 0x181fdf0cae8 'match' 'int'
|       | `-UnaryOperator 0x181fdf0d0d8 <col:17, col:18> 'int' prefix '-'
|       |   `-IntegerLiteral 0x181fdf0d0b0 <col:18> 'int' 1
|       |-IfStmt 0x181fdf0d898 <line:291:9, line:300:21> has_else
|       | |-BinaryOperator 0x181fdf0d170 <line:291:13, col:19> 'int' '<'
|       | | |-ImplicitCastExpr 0x181fdf0d158 <col:13> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x181fdf0d110 <col:13> 'int' lvalue Var 0x181fdf0cb68 'ret' 'int'
|       | | `-IntegerLiteral 0x181fdf0d130 <col:19> 'int' 0
|       | |-CompoundStmt 0x181fdf0d3c0 <col:22, line:294:9>
|       | | `-UnaryOperator 0x181fdf0d3a8 <line:293:13, col:15> 'int' prefix '++'
|       | |   `-DeclRefExpr 0x181fdf0d388 <col:15> 'int' lvalue Var 0x181fdf0ae10 'errors' 'int'
|       | `-IfStmt 0x181fdf0d870 <line:294:16, line:300:21> has_else
|       |   |-ImplicitCastExpr 0x181fdf0d458 <line:294:20, col:24> 'int' <LValueToRValue>
|       |   | `-MemberExpr 0x181fdf0d428 <col:20, col:24> 'const int' lvalue ->host 0x181fdf03d70
|       |   |   `-ImplicitCastExpr 0x181fdf0d410 <col:20> 'const struct set_name_fn *' <LValueToRValue>
|       |   |     `-DeclRefExpr 0x181fdf0d3d8 <col:20> 'const struct set_name_fn *' lvalue ParmVar 0x181fdf0bf20 'fn' 'const struct set_name_fn *'
|       |   |-CompoundStmt 0x181fdf0d750 <col:30, line:299:9>
|       |   | |-IfStmt 0x181fdf0d5e0 <line:295:13, line:296:25>
|       |   | | |-BinaryOperator 0x181fdf0d558 <line:295:17, col:30> 'int' '&&'
|       |   | | | |-BinaryOperator 0x181fdf0d4d0 <col:17, col:24> 'int' '=='
|       |   | | | | |-ImplicitCastExpr 0x181fdf0d4b8 <col:17> 'int' <LValueToRValue>
|       |   | | | | | `-DeclRefExpr 0x181fdf0d470 <col:17> 'int' lvalue Var 0x181fdf0cb68 'ret' 'int'
|       |   | | | | `-IntegerLiteral 0x181fdf0d490 <col:24> 'int' 1
|       |   | | | `-UnaryOperator 0x181fdf0d540 <col:29, col:30> 'int' prefix '!' cannot overflow
|       |   | | |   `-ImplicitCastExpr 0x181fdf0d528 <col:30> 'int' <LValueToRValue>
|       |   | | |     `-DeclRefExpr 0x181fdf0d4f0 <col:30> 'int' lvalue Var 0x181fdf0c280 'samename' 'int'
|       |   | | `-BinaryOperator 0x181fdf0d5c0 <line:296:17, col:25> 'int' '='
|       |   | |   |-DeclRefExpr 0x181fdf0d578 <col:17> 'int' lvalue Var 0x181fdf0cae8 'match' 'int'
|       |   | |   `-IntegerLiteral 0x181fdf0d598 <col:25> 'int' 1
|       |   | `-IfStmt 0x181fdf0d738 <line:297:13, line:298:25>
|       |   |   |-BinaryOperator 0x181fdf0d6b0 <line:297:17, col:29> 'int' '&&'
|       |   |   | |-BinaryOperator 0x181fdf0d658 <col:17, col:24> 'int' '=='
|       |   |   | | |-ImplicitCastExpr 0x181fdf0d640 <col:17> 'int' <LValueToRValue>
|       |   |   | | | `-DeclRefExpr 0x181fdf0d5f8 <col:17> 'int' lvalue Var 0x181fdf0cb68 'ret' 'int'
|       |   |   | | `-IntegerLiteral 0x181fdf0d618 <col:24> 'int' 0
|       |   |   | `-ImplicitCastExpr 0x181fdf0d698 <col:29> 'int' <LValueToRValue>
|       |   |   |   `-DeclRefExpr 0x181fdf0d678 <col:29> 'int' lvalue Var 0x181fdf0c280 'samename' 'int'
|       |   |   `-BinaryOperator 0x181fdf0d718 <line:298:17, col:25> 'int' '='
|       |   |     |-DeclRefExpr 0x181fdf0d6d0 <col:17> 'int' lvalue Var 0x181fdf0cae8 'match' 'int'
|       |   |     `-IntegerLiteral 0x181fdf0d6f0 <col:25> 'int' 0
|       |   `-IfStmt 0x181fdf0d858 <line:299:16, line:300:21>
|       |     |-BinaryOperator 0x181fdf0d7d0 <line:299:20, col:27> 'int' '=='
|       |     | |-ImplicitCastExpr 0x181fdf0d7b8 <col:20> 'int' <LValueToRValue>
|       |     | | `-DeclRefExpr 0x181fdf0d770 <col:20> 'int' lvalue Var 0x181fdf0cb68 'ret' 'int'
|       |     | `-IntegerLiteral 0x181fdf0d790 <col:27> 'int' 1
|       |     `-BinaryOperator 0x181fdf0d838 <line:300:13, col:21> 'int' '='
|       |       |-DeclRefExpr 0x181fdf0d7f0 <col:13> 'int' lvalue Var 0x181fdf0cae8 'match' 'int'
|       |       `-IntegerLiteral 0x181fdf0d810 <col:21> 'int' 1
|       |-CallExpr 0x181fdf0da20 <line:301:9, col:60> 'void'
|       | |-ImplicitCastExpr 0x181fdf0da08 <col:9> 'void (*)(const struct set_name_fn *, const char *, const char *, int, const char *)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x181fdf0d8c0 <col:9> 'void (const struct set_name_fn *, const char *, const char *, int, const char *)' Function 0x181fdf0b2d8 'check_message' 'void (const struct set_name_fn *, const char *, const char *, int, const char *)'
|       | |-ImplicitCastExpr 0x181fdf0da68 <col:23> 'const struct set_name_fn *' <LValueToRValue>
|       | | `-DeclRefExpr 0x181fdf0d8e0 <col:23> 'const struct set_name_fn *' lvalue ParmVar 0x181fdf0bf20 'fn' 'const struct set_name_fn *'
|       | |-ImplicitCastExpr 0x181fdf0da98 <col:27> 'const char *' <NoOp>
|       | | `-ImplicitCastExpr 0x181fdf0da80 <col:27> 'char *' <ArrayToPointerDecay>
|       | |   `-StringLiteral 0x181fdf0d900 <col:27> 'char [5]' lvalue "host"
|       | |-ImplicitCastExpr 0x181fdf0dab0 <col:35> 'const char *' <LValueToRValue>
|       | | `-DeclRefExpr 0x181fdf0d920 <col:35> 'const char *' lvalue ParmVar 0x181fdf0be90 'nameincert' 'const char *'
|       | |-ImplicitCastExpr 0x181fdf0dac8 <col:47> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x181fdf0d940 <col:47> 'int' lvalue Var 0x181fdf0cae8 'match' 'int'
|       | `-ImplicitCastExpr 0x181fdf0dae0 <col:54, col:55> 'const char *' <LValueToRValue>
|       |   `-UnaryOperator 0x181fdf0d998 <col:54, col:55> 'const char *const' lvalue prefix '*' cannot overflow
|       |     `-ImplicitCastExpr 0x181fdf0d980 <col:55> 'const char *const *' <LValueToRValue>
|       |       `-DeclRefExpr 0x181fdf0d960 <col:55> 'const char *const *' lvalue Var 0x181fdf0c130 'pname' 'const char *const *'
|       |-BinaryOperator 0x181fdf0dc60 <line:305:9, col:18> 'int' '='
|       | |-DeclRefExpr 0x181fdf0dc00 <col:9> 'int' lvalue Var 0x181fdf0cae8 'match' 'int'
|       | `-UnaryOperator 0x181fdf0dc48 <col:17, col:18> 'int' prefix '-'
|       |   `-IntegerLiteral 0x181fdf0dc20 <col:18> 'int' 1
|       |-IfStmt 0x181fdf061e0 <line:306:9, line:315:21> has_else
|       | |-BinaryOperator 0x181fdf0dce0 <line:306:13, col:19> 'int' '<'
|       | | |-ImplicitCastExpr 0x181fdf0dcc8 <col:13> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x181fdf0dc80 <col:13> 'int' lvalue Var 0x181fdf0cb68 'ret' 'int'
|       | | `-IntegerLiteral 0x181fdf0dca0 <col:19> 'int' 0
|       | |-CompoundStmt 0x181fdf05d38 <col:22, line:309:9>
|       | | `-UnaryOperator 0x181fdf05d20 <line:308:13, col:15> 'int' prefix '++'
|       | |   `-DeclRefExpr 0x181fdf0dd60 <col:15> 'int' lvalue Var 0x181fdf0ae10 'errors' 'int'
|       | `-IfStmt 0x181fdf061b8 <line:309:16, line:315:21> has_else
|       |   |-ImplicitCastExpr 0x181fdf05db8 <line:309:20, col:24> 'int' <LValueToRValue>
|       |   | `-MemberExpr 0x181fdf05d88 <col:20, col:24> 'const int' lvalue ->host 0x181fdf03d70
|       |   |   `-ImplicitCastExpr 0x181fdf05d70 <col:20> 'const struct set_name_fn *' <LValueToRValue>
|       |   |     `-DeclRefExpr 0x181fdf05d50 <col:20> 'const struct set_name_fn *' lvalue ParmVar 0x181fdf0bf20 'fn' 'const struct set_name_fn *'
|       |   |-CompoundStmt 0x181fdf06098 <col:30, line:314:9>
|       |   | |-IfStmt 0x181fdf05f28 <line:310:13, line:311:25>
|       |   | | |-BinaryOperator 0x181fdf05ea0 <line:310:17, col:30> 'int' '&&'
|       |   | | | |-BinaryOperator 0x181fdf05e30 <col:17, col:24> 'int' '=='
|       |   | | | | |-ImplicitCastExpr 0x181fdf05e18 <col:17> 'int' <LValueToRValue>
|       |   | | | | | `-DeclRefExpr 0x181fdf05dd0 <col:17> 'int' lvalue Var 0x181fdf0cb68 'ret' 'int'
|       |   | | | | `-IntegerLiteral 0x181fdf05df0 <col:24> 'int' 1
|       |   | | | `-UnaryOperator 0x181fdf05e88 <col:29, col:30> 'int' prefix '!' cannot overflow
|       |   | | |   `-ImplicitCastExpr 0x181fdf05e70 <col:30> 'int' <LValueToRValue>
|       |   | | |     `-DeclRefExpr 0x181fdf05e50 <col:30> 'int' lvalue Var 0x181fdf0c280 'samename' 'int'
|       |   | | `-BinaryOperator 0x181fdf05f08 <line:311:17, col:25> 'int' '='
|       |   | |   |-DeclRefExpr 0x181fdf05ec0 <col:17> 'int' lvalue Var 0x181fdf0cae8 'match' 'int'
|       |   | |   `-IntegerLiteral 0x181fdf05ee0 <col:25> 'int' 1
|       |   | `-IfStmt 0x181fdf06080 <line:312:13, line:313:25>
|       |   |   |-BinaryOperator 0x181fdf05ff8 <line:312:17, col:29> 'int' '&&'
|       |   |   | |-BinaryOperator 0x181fdf05fa0 <col:17, col:24> 'int' '=='
|       |   |   | | |-ImplicitCastExpr 0x181fdf05f88 <col:17> 'int' <LValueToRValue>
|       |   |   | | | `-DeclRefExpr 0x181fdf05f40 <col:17> 'int' lvalue Var 0x181fdf0cb68 'ret' 'int'
|       |   |   | | `-IntegerLiteral 0x181fdf05f60 <col:24> 'int' 0
|       |   |   | `-ImplicitCastExpr 0x181fdf05fe0 <col:29> 'int' <LValueToRValue>
|       |   |   |   `-DeclRefExpr 0x181fdf05fc0 <col:29> 'int' lvalue Var 0x181fdf0c280 'samename' 'int'
|       |   |   `-BinaryOperator 0x181fdf06060 <line:313:17, col:25> 'int' '='
|       |   |     |-DeclRefExpr 0x181fdf06018 <col:17> 'int' lvalue Var 0x181fdf0cae8 'match' 'int'
|       |   |     `-IntegerLiteral 0x181fdf06038 <col:25> 'int' 0
|       |   `-IfStmt 0x181fdf061a0 <line:314:16, line:315:21>
|       |     |-BinaryOperator 0x181fdf06118 <line:314:20, col:27> 'int' '=='
|       |     | |-ImplicitCastExpr 0x181fdf06100 <col:20> 'int' <LValueToRValue>
|       |     | | `-DeclRefExpr 0x181fdf060b8 <col:20> 'int' lvalue Var 0x181fdf0cb68 'ret' 'int'
|       |     | `-IntegerLiteral 0x181fdf060d8 <col:27> 'int' 1
|       |     `-BinaryOperator 0x181fdf06180 <line:315:13, col:21> 'int' '='
|       |       |-DeclRefExpr 0x181fdf06138 <col:13> 'int' lvalue Var 0x181fdf0cae8 'match' 'int'
|       |       `-IntegerLiteral 0x181fdf06158 <col:21> 'int' 1
|       |-CallExpr 0x181fdf06320 <line:316:9, col:73> 'void'
|       | |-ImplicitCastExpr 0x181fdf06308 <col:9> 'void (*)(const struct set_name_fn *, const char *, const char *, int, const char *)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x181fdf06208 <col:9> 'void (const struct set_name_fn *, const char *, const char *, int, const char *)' Function 0x181fdf0b2d8 'check_message' 'void (const struct set_name_fn *, const char *, const char *, int, const char *)'
|       | |-ImplicitCastExpr 0x181fdf06368 <col:23> 'const struct set_name_fn *' <LValueToRValue>
|       | | `-DeclRefExpr 0x181fdf06228 <col:23> 'const struct set_name_fn *' lvalue ParmVar 0x181fdf0bf20 'fn' 'const struct set_name_fn *'
|       | |-ImplicitCastExpr 0x181fdf06398 <col:27> 'const char *' <NoOp>
|       | | `-ImplicitCastExpr 0x181fdf06380 <col:27> 'char *' <ArrayToPointerDecay>
|       | |   `-StringLiteral 0x181fdf06248 <col:27> 'char [18]' lvalue "host-no-wildcards"
|       | |-ImplicitCastExpr 0x181fdf063b0 <col:48> 'const char *' <LValueToRValue>
|       | | `-DeclRefExpr 0x181fdf06278 <col:48> 'const char *' lvalue ParmVar 0x181fdf0be90 'nameincert' 'const char *'
|       | |-ImplicitCastExpr 0x181fdf063c8 <col:60> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x181fdf06298 <col:60> 'int' lvalue Var 0x181fdf0cae8 'match' 'int'
|       | `-ImplicitCastExpr 0x181fdf063e0 <col:67, col:68> 'const char *' <LValueToRValue>
|       |   `-UnaryOperator 0x181fdf062f0 <col:67, col:68> 'const char *const' lvalue prefix '*' cannot overflow
|       |     `-ImplicitCastExpr 0x181fdf062d8 <col:68> 'const char *const *' <LValueToRValue>
|       |       `-DeclRefExpr 0x181fdf062b8 <col:68> 'const char *const *' lvalue Var 0x181fdf0c130 'pname' 'const char *const *'
|       |-BinaryOperator 0x181fdf065f0 <line:319:9, col:18> 'int' '='
|       | |-DeclRefExpr 0x181fdf06590 <col:9> 'int' lvalue Var 0x181fdf0cae8 'match' 'int'
|       | `-UnaryOperator 0x181fdf065d8 <col:17, col:18> 'int' prefix '-'
|       |   `-IntegerLiteral 0x181fdf065b0 <col:18> 'int' 1
|       |-IfStmt 0x181fdf06b90 <line:320:9, line:326:21> has_else
|       | |-ImplicitCastExpr 0x181fdf06678 <line:320:13, col:17> 'int' <LValueToRValue>
|       | | `-MemberExpr 0x181fdf06648 <col:13, col:17> 'const int' lvalue ->email 0x181fdf03de0
|       | |   `-ImplicitCastExpr 0x181fdf06630 <col:13> 'const struct set_name_fn *' <LValueToRValue>
|       | |     `-DeclRefExpr 0x181fdf06610 <col:13> 'const struct set_name_fn *' lvalue ParmVar 0x181fdf0bf20 'fn' 'const struct set_name_fn *'
|       | |-CompoundStmt 0x181fdf06ab8 <col:24, line:325:9>
|       | | |-IfStmt 0x181fdf067a0 <line:321:13, line:322:25>
|       | | | |-BinaryOperator 0x181fdf06718 <line:321:17, col:25> 'int' '&&'
|       | | | | |-ImplicitCastExpr 0x181fdf06700 <col:17> 'int' <LValueToRValue>
|       | | | | | `-DeclRefExpr 0x181fdf06690 <col:17> 'int' lvalue Var 0x181fdf0cb68 'ret' 'int'
|       | | | | `-UnaryOperator 0x181fdf066e8 <col:24, col:25> 'int' prefix '!' cannot overflow
|       | | | |   `-ImplicitCastExpr 0x181fdf066d0 <col:25> 'int' <LValueToRValue>
|       | | | |     `-DeclRefExpr 0x181fdf066b0 <col:25> 'int' lvalue Var 0x181fdf0c280 'samename' 'int'
|       | | | `-BinaryOperator 0x181fdf06780 <line:322:17, col:25> 'int' '='
|       | | |   |-DeclRefExpr 0x181fdf06738 <col:17> 'int' lvalue Var 0x181fdf0cae8 'match' 'int'
|       | | |   `-IntegerLiteral 0x181fdf06758 <col:25> 'int' 1
|       | | `-IfStmt 0x181fdf06aa0 <line:323:13, line:324:25>
|       | |   |-BinaryOperator 0x181fdf06a18 <line:323:17, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '&&'
|       | |   | |-BinaryOperator 0x181fdf06840 <.//openssl//file_jk/after\test\v3nametest.c:323:17, col:25> 'int' '&&'
|       | |   | | |-UnaryOperator 0x181fdf067f0 <col:17, col:18> 'int' prefix '!' cannot overflow
|       | |   | | | `-ImplicitCastExpr 0x181fdf067d8 <col:18> 'int' <LValueToRValue>
|       | |   | | |   `-DeclRefExpr 0x181fdf067b8 <col:18> 'int' lvalue Var 0x181fdf0cb68 'ret' 'int'
|       | |   | | `-ImplicitCastExpr 0x181fdf06828 <col:25> 'int' <LValueToRValue>
|       | |   | |   `-DeclRefExpr 0x181fdf06808 <col:25> 'int' lvalue Var 0x181fdf0c280 'samename' 'int'
|       | |   | `-BinaryOperator 0x181fdf069f8 <col:37, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|       | |   |   |-CallExpr 0x181fdf06910 <.//openssl//file_jk/after\test\v3nametest.c:323:37, col:59> 'char *'
|       | |   |   | |-ImplicitCastExpr 0x181fdf068f8 <col:37> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|       | |   |   | | `-DeclRefExpr 0x181fdf06860 <col:37> 'char *(const char *, int)' Function 0x181fdeae380 'strchr' 'char *(const char *, int)'
|       | |   |   | |-ImplicitCastExpr 0x181fdf06940 <col:44> 'const char *' <LValueToRValue>
|       | |   |   | | `-DeclRefExpr 0x181fdf06880 <col:44> 'const char *' lvalue ParmVar 0x181fdf0be90 'nameincert' 'const char *'
|       | |   |   | `-CharacterLiteral 0x181fdf068a0 <col:56> 'int' 64
|       | |   |   `-ImplicitCastExpr 0x181fdf069e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|       | |   |     `-ParenExpr 0x181fdf069c0 <col:17, col:27> 'void *'
|       | |   |       `-CStyleCastExpr 0x181fdf06998 <col:18, col:26> 'void *' <NullToPointer>
|       | |   |         `-IntegerLiteral 0x181fdf06958 <col:26> 'int' 0
|       | |   `-BinaryOperator 0x181fdf06a80 <.//openssl//file_jk/after\test\v3nametest.c:324:17, col:25> 'int' '='
|       | |     |-DeclRefExpr 0x181fdf06a38 <col:17> 'int' lvalue Var 0x181fdf0cae8 'match' 'int'
|       | |     `-IntegerLiteral 0x181fdf06a58 <col:25> 'int' 0
|       | `-IfStmt 0x181fdf06b78 <line:325:16, line:326:21>
|       |   |-ImplicitCastExpr 0x181fdf06af8 <line:325:20> 'int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x181fdf06ad8 <col:20> 'int' lvalue Var 0x181fdf0cb68 'ret' 'int'
|       |   `-BinaryOperator 0x181fdf06b58 <line:326:13, col:21> 'int' '='
|       |     |-DeclRefExpr 0x181fdf06b10 <col:13> 'int' lvalue Var 0x181fdf0cae8 'match' 'int'
|       |     `-IntegerLiteral 0x181fdf06b30 <col:21> 'int' 1
|       |-CallExpr 0x181fdf06cc0 <line:327:9, col:61> 'void'
|       | |-ImplicitCastExpr 0x181fdf06ca8 <col:9> 'void (*)(const struct set_name_fn *, const char *, const char *, int, const char *)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x181fdf06bb8 <col:9> 'void (const struct set_name_fn *, const char *, const char *, int, const char *)' Function 0x181fdf0b2d8 'check_message' 'void (const struct set_name_fn *, const char *, const char *, int, const char *)'
|       | |-ImplicitCastExpr 0x181fdf06d08 <col:23> 'const struct set_name_fn *' <LValueToRValue>
|       | | `-DeclRefExpr 0x181fdf06bd8 <col:23> 'const struct set_name_fn *' lvalue ParmVar 0x181fdf0bf20 'fn' 'const struct set_name_fn *'
|       | |-ImplicitCastExpr 0x181fdf12e08 <col:27> 'const char *' <NoOp>
|       | | `-ImplicitCastExpr 0x181fdf12df0 <col:27> 'char *' <ArrayToPointerDecay>
|       | |   `-StringLiteral 0x181fdf06bf8 <col:27> 'char [6]' lvalue "email"
|       | |-ImplicitCastExpr 0x181fdf12e20 <col:36> 'const char *' <LValueToRValue>
|       | | `-DeclRefExpr 0x181fdf06c18 <col:36> 'const char *' lvalue ParmVar 0x181fdf0be90 'nameincert' 'const char *'
|       | |-ImplicitCastExpr 0x181fdf12e38 <col:48> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x181fdf06c38 <col:48> 'int' lvalue Var 0x181fdf0cae8 'match' 'int'
|       | `-ImplicitCastExpr 0x181fdf12e50 <col:55, col:56> 'const char *' <LValueToRValue>
|       |   `-UnaryOperator 0x181fdf06c90 <col:55, col:56> 'const char *const' lvalue prefix '*' cannot overflow
|       |     `-ImplicitCastExpr 0x181fdf06c78 <col:56> 'const char *const *' <LValueToRValue>
|       |       `-DeclRefExpr 0x181fdf06c58 <col:56> 'const char *const *' lvalue Var 0x181fdf0c130 'pname' 'const char *const *'
|       |-UnaryOperator 0x181fdf12e88 <line:328:9, col:11> 'const char *const *' prefix '++'
|       | `-DeclRefExpr 0x181fdf12e68 <col:11> 'const char *const *' lvalue Var 0x181fdf0c130 'pname' 'const char *const *'
|       `-CallExpr 0x181fdf12fe8 <line:329:9, col:18> 'int'
|         |-ImplicitCastExpr 0x181fdf12fd0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x181fdf12f90 <col:9> 'int ()' Function 0x181fdf12ec8 'free' 'int ()'
|         `-ImplicitCastExpr 0x181fdf13010 <col:14> 'char *' <LValueToRValue>
|           `-DeclRefExpr 0x181fdf12fb0 <col:14> 'char *' lvalue Var 0x181fdf0c7e0 'name' 'char *'
|-FunctionDecl 0x181fdf0c2e8 <line:283:24> col:24 implicit used strcasecmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x181fdf0c388 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x181fdf0c3f0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x181fdf0c880 <line:285:22> col:22 implicit used malloc 'void *(unsigned long long)' extern
| `-ParmVarDecl 0x181fdf0c920 <<invalid sloc>> <invalid sloc> 'unsigned long long'
`-FunctionDecl 0x181fdf131c0 <line:333:1, line:355:1> line:333:5 main 'int (void)'
  `-CompoundStmt 0x181fdf13be0 <line:334:1, line:355:1>
    |-DeclStmt 0x181fdf13340 <line:335:5, col:45>
    | `-VarDecl 0x181fdf132a0 <col:5, col:37> col:31 used pfn 'const struct set_name_fn *' cinit
    |   `-ImplicitCastExpr 0x181fdf13328 <col:37> 'const struct set_name_fn *' <ArrayToPointerDecay>
    |     `-DeclRefExpr 0x181fdf13308 <col:37> 'const struct set_name_fn []' lvalue Var 0x181fdf03ef8 'name_fns' 'const struct set_name_fn []'
    |-WhileStmt 0x181fdf13ab8 <line:336:5, line:353:5>
    | |-ImplicitCastExpr 0x181fdf133d8 <line:336:12, col:17> 'const char *' <LValueToRValue>
    | | `-MemberExpr 0x181fdf133a8 <col:12, col:17> 'const char *const' lvalue ->name 0x181fdf03d00
    | |   `-ImplicitCastExpr 0x181fdf13390 <col:12> 'const struct set_name_fn *' <LValueToRValue>
    | |     `-DeclRefExpr 0x181fdf13358 <col:12> 'const struct set_name_fn *' lvalue Var 0x181fdf132a0 'pfn' 'const struct set_name_fn *'
    | `-CompoundStmt 0x181fdf13a90 <col:23, line:353:5>
    |   |-DeclStmt 0x181fdf134a8 <line:337:9, col:41>
    |   | `-VarDecl 0x181fdf13408 <col:9, col:36> col:28 used pname 'const char *const *' cinit
    |   |   `-ImplicitCastExpr 0x181fdf13490 <col:36> 'const char *const *' <ArrayToPointerDecay>
    |   |     `-DeclRefExpr 0x181fdf13470 <col:36> 'const char *const [52]' lvalue Var 0x181fdef36e0 'names' 'const char *const [52]'
    |   |-WhileStmt 0x181fdf13a40 <line:338:9, line:351:9>
    |   | |-ImplicitCastExpr 0x181fdf13528 <line:338:16, col:17> 'const char *' <LValueToRValue>
    |   | | `-UnaryOperator 0x181fdf13510 <col:16, col:17> 'const char *const' lvalue prefix '*' cannot overflow
    |   | |   `-ImplicitCastExpr 0x181fdf134f8 <col:17> 'const char *const *' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x181fdf134c0 <col:17> 'const char *const *' lvalue Var 0x181fdf13408 'pname' 'const char *const *'
    |   | `-CompoundStmt 0x181fdf13a18 <col:24, line:351:9>
    |   |   |-IfStmt 0x181fdf13680 <line:340:13, line:343:13>
    |   |   | |-OpaqueValueExpr 0x181fdf13668 <<invalid sloc>> '_Bool'
    |   |   | `-CompoundStmt 0x181fdf13650 <line:340:30, line:343:13>
    |   |   |   `-ReturnStmt 0x181fdf13640 <line:342:17, col:24>
    |   |   |     `-IntegerLiteral 0x181fdf13618 <col:24> 'int' 1
    |   |   |-IfStmt 0x181fdf13848 <line:344:13, line:347:13>
    |   |   | |-OpaqueValueExpr 0x181fdf13830 <<invalid sloc>> '_Bool'
    |   |   | `-CompoundStmt 0x181fdf13818 <line:344:40, line:347:13>
    |   |   |   `-ReturnStmt 0x181fdf13808 <line:346:17, col:24>
    |   |   |     `-IntegerLiteral 0x181fdf137e0 <col:24> 'int' 1
    |   |   `-UnaryOperator 0x181fdf13a00 <line:350:13, col:15> 'const char *const *' prefix '++'
    |   |     `-DeclRefExpr 0x181fdf139e0 <col:15> 'const char *const *' lvalue Var 0x181fdf13408 'pname' 'const char *const *'
    |   `-UnaryOperator 0x181fdf13a78 <line:352:9, col:11> 'const struct set_name_fn *' prefix '++'
    |     `-DeclRefExpr 0x181fdf13a58 <col:11> 'const struct set_name_fn *' lvalue Var 0x181fdf132a0 'pfn' 'const struct set_name_fn *'
    `-ReturnStmt 0x181fdf13bd0 <line:354:5, col:29>
      `-ConditionalOperator 0x181fdf13ba0 <col:12, col:29> 'int'
        |-BinaryOperator 0x181fdf13b30 <col:12, col:21> 'int' '>'
        | |-ImplicitCastExpr 0x181fdf13b18 <col:12> 'int' <LValueToRValue>
        | | `-DeclRefExpr 0x181fdf13ad0 <col:12> 'int' lvalue Var 0x181fdf0ae10 'errors' 'int'
        | `-IntegerLiteral 0x181fdf13af0 <col:21> 'int' 0
        |-IntegerLiteral 0x181fdf13b50 <col:25> 'int' 1
        `-IntegerLiteral 0x181fdf13b78 <col:29> 'int' 0
