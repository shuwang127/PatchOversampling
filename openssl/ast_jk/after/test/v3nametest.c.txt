TranslationUnitDecl 0x11e1bb450c8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x11e1bb45960 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x11e1bb45660 '__int128'
|-TypedefDecl 0x11e1bb459d0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x11e1bb45680 'unsigned __int128'
|-TypedefDecl 0x11e1bb45d08 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x11e1bb45ac0 'struct __NSConstantString_tag'
|   `-Record 0x11e1bb45a28 '__NSConstantString_tag'
|-TypedefDecl 0x11e1bb45d78 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x11e1bb452a0 'unsigned long long'
|-TypedefDecl 0x11e1bb45e10 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x11e1bb45dd0 'char *'
|   `-BuiltinType 0x11e1bb45160 'char'
|-TypedefDecl 0x11e1bb45e80 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x11e1bb45dd0 'char *'
|   `-BuiltinType 0x11e1bb45160 'char'
|-TypedefDecl 0x11e1bb45f20 <D:\Microsoft Visual Studio 12.0\VC\include\sys/types.h:40:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x11e1bb451e0 'long'
|-TypedefDecl 0x11e1bb45f90 <line:45:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x11e1bb45200 'long long'
|-TypedefDecl 0x11e1bb46020 <line:53:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x11e1bb45ff0 '__time64_t' sugar
|   |-Typedef 0x11e1bb45f90 '__time64_t'
|   `-BuiltinType 0x11e1bb45200 'long long'
|-TypedefDecl 0x11e1d3ffac0 <line:61:1, col:24> col:24 _ino_t 'unsigned short'
| `-BuiltinType 0x11e1bb45240 'unsigned short'
|-TypedefDecl 0x11e1d3ffb30 <line:65:1, col:24> col:24 ino_t 'unsigned short'
| `-BuiltinType 0x11e1bb45240 'unsigned short'
|-TypedefDecl 0x11e1d3ffba0 <line:74:1, col:22> col:22 _dev_t 'unsigned int'
| `-BuiltinType 0x11e1bb45260 'unsigned int'
|-TypedefDecl 0x11e1d3ffc10 <line:78:1, col:22> col:22 dev_t 'unsigned int'
| `-BuiltinType 0x11e1bb45260 'unsigned int'
|-TypedefDecl 0x11e1d3ffc80 <line:87:1, col:14> col:14 _off_t 'long'
| `-BuiltinType 0x11e1bb451e0 'long'
|-TypedefDecl 0x11e1d3ffcf0 <line:91:1, col:14> col:14 off_t 'long'
| `-BuiltinType 0x11e1bb451e0 'long'
|-TypedefDecl 0x11e1d3ffe10 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x11e1bb452a0 'unsigned long long'
|-TypedefDecl 0x11e1d3ffe80 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x11e1bb45dd0 'char *'
|   `-BuiltinType 0x11e1bb45160 'char'
|-FunctionDecl 0x11e1d4000d0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x11e1d400170 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x11e1d4001e0 <col:21> Implicit
|-FunctionDecl 0x11e1d400238 prev 0x11e1d4000d0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x11e1d3fff68 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x11e1d400328 <col:21> Inherited Implicit
|-TypedefDecl 0x11e1d400368 prev 0x11e1bb45d78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x11e1bb452a0 'unsigned long long'
|-TypedefDecl 0x11e1d400410 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x11e1d4003e0 'size_t' sugar
|   |-Typedef 0x11e1d400368 'size_t'
|   `-BuiltinType 0x11e1bb452a0 'unsigned long long'
|-TypedefDecl 0x11e1d400480 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x11e1bb45200 'long long'
|-TypedefDecl 0x11e1d4004f0 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x11e1bb45200 'long long'
|-TypedefDecl 0x11e1d400560 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x11e1bb45240 'unsigned short'
|-TypedefDecl 0x11e1d4005d0 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x11e1bb45240 'unsigned short'
|-TypedefDecl 0x11e1d400640 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x11e1bb45240 'unsigned short'
|-TypedefDecl 0x11e1d4006b0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x11e1bb451c0 'int'
|-FunctionDecl 0x11e1d400828 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x11e1d507070 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x11e1d507620 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x11e1d5071b8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x11e1d507230 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x11e1d5072a8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x11e1d507328 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x11e1d5073c0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x11e1d507700 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x11e1d5077c0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x11e1d507930 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x11e1d5078e0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x11e1d507880 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x11e1d5077a0 'struct threadlocaleinfostruct'
|       `-Record 0x11e1d51e4d8 'threadlocaleinfostruct'
|-TypedefDecl 0x11e1d507a40 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x11e1d5079f0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x11e1d507990 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x11e1d507860 'struct threadmbcinfostruct'
|       `-Record 0x11e1d5077c0 'threadmbcinfostruct'
|-RecordDecl 0x11e1d507a98 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x11e1d507b50 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x11e1d507c10 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x11e1d507ca0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x11e1d507d30 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x11e1d507de8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x11e1d507d90 'struct localeinfo_struct' sugar
|   `-RecordType 0x11e1d507bf0 'struct localeinfo_struct'
|     `-Record 0x11e1d507b50 'localeinfo_struct'
|-TypedefDecl 0x11e1d507ec0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x11e1d507e70 'struct localeinfo_struct *'
|   `-ElaboratedType 0x11e1d507d90 'struct localeinfo_struct' sugar
|     `-RecordType 0x11e1d507bf0 'struct localeinfo_struct'
|       `-Record 0x11e1d507b50 'localeinfo_struct'
|-RecordDecl 0x11e1d507f38 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x11e1d507ff0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x11e1d51e1e0 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x11e1d51e2a8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x11e1d51e340 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x11e1d51e3b0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x11e1d51e468 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x11e1d51e410 'struct localerefcount' sugar
|   `-RecordType 0x11e1d507fd0 'struct localerefcount'
|     `-Record 0x11e1d507f38 'localerefcount'
|-RecordDecl 0x11e1d51e4d8 prev 0x11e1d507700 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x11e1d51e558 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x11e1d51e5d0 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x11e1d51e640 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x11e1d51e6b0 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x11e1d51e720 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x11e1d51e8e8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x11e1d51e958 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x11e1d51e9c8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x11e1d51ea38 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x11e1d51eaa8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x11e1d51eb18 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x11e1d51eb70 parent 0x11e1bb450c8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x11e1d51ed00 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x11e1d51ed70 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x11e1d51ede0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x11e1d51ee50 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x11e1d51eef0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x11e1d51ef60 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x11e1d51f070 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x11e1d51c1c0 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x11e1d51c278 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x11e1d51c220 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x11e1d5077a0 'struct threadlocaleinfostruct'
|     `-Record 0x11e1d51e4d8 'threadlocaleinfostruct'
|-FunctionDecl 0x11e1d51c6b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x11e1d51c300 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x11e1d51c3b0 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x11e1d51c430 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x11e1d51c4a8 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x11e1d51ca78 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x11e1d51cb18 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x11e1d51cb80 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x11e1d51cbe8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x11e1d51cc68 prev 0x11e1d51ca78 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x11e1d51c7a0 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x11e1d51c820 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x11e1d51c898 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x11e1d51d028 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x11e1d51cd50 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x11e1d51cdd0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x11e1d51ce48 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x11e1d517490 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x11e1d51d110 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x11e1d517170 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x11e1d5171e8 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x11e1d517280 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x11e1d517798 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x11e1d517838 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x11e1d5178a0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x11e1d517908 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x11e1d517988 prev 0x11e1d517798 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x11e1d517580 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x11e1d517600 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x11e1d517678 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x11e1d517d48 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x11e1d517de8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x11e1d517e50 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x11e1d517eb8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x11e1d517f38 prev 0x11e1d517d48 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x11e1d517a70 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x11e1d517af0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x11e1d517b68 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x11e1d51a418 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x11e1d518048 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x11e1d5180e0 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x11e1d51a1a0 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x11e1d51a218 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x11e1d51a7d8 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x11e1d51a878 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x11e1d51a8e0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x11e1d51a948 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x11e1d51a9c8 prev 0x11e1d51a7d8 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x11e1d51a508 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x11e1d51a588 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x11e1d51a600 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x11e1d51ae48 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x11e1d51aee8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x11e1d51af50 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x11e1d51afb8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x11e1d51b020 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x11e1d51b0a8 prev 0x11e1d51ae48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x11e1d51ab90 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x11e1d51ac10 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x11e1d51ac90 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x11e1d51ad08 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x11e1d51f1f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x11e1d51f5d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x11e1d51f3b8 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x11e1d51f438 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x11e1d51f4b0 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x11e1d51f688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x11e1d51fa80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x11e1d51f7b0 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x11e1d51f828 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x11e1d51f8a8 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x11e1d51fe50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x11e1d51fc60 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x11e1d51fce0 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x11e1d51ff00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x11e1d5182a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x11e1d520048 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x11e1d5200c0 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x11e1d520140 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x11e1d518670 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x11e1d518710 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x11e1d518778 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x11e1d5187f0 prev 0x11e1d518670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x11e1d518480 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x11e1d518500 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x11e1d5188a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x11e1d518bf8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x11e1d5189e8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x11e1d518a60 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x11e1d518ae0 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x11e1d518f20 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x11e1d518fc0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x11e1d519028 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x11e1d5190a0 prev 0x11e1d518f20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x11e1d518da0 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x11e1d518e20 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x11e1d522220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x11e1d522550 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x11e1d5225f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x11e1d522658 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x11e1d5226d0 prev 0x11e1d522550 <col:16, col:91> col:32 used strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x11e1d522368 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x11e1d5223e8 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x11e1d522920 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x11e1d5229c0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x11e1d522a30 prev 0x11e1d522920 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x11e1d5227b0 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x11e1d522d28 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x11e1d522b08 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x11e1d522b80 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x11e1d522f78 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x11e1d522e08 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x11e1d522e80 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x11e1d520288 <line:131:1, line:133:1>
|   `-ReturnStmt 0x11e1d520278 <line:132:5, col:51>
|     `-ConditionalOperator 0x11e1d520248 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x11e1d5230d8 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x11e1d5230b8 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x11e1d523088 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x11e1d523040 <col:13> 'const char *' lvalue ParmVar 0x11e1d522e08 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x11e1d5230a0 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x11e1d523060 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x11e1d520230 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x11e1d5230f8 <col:24> 'int' 0
|       `-CallExpr 0x11e1d5231f0 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x11e1d5231d8 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x11e1d523120 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x11e1d522d28 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x11e1d520200 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x11e1d523140 <col:36> 'const char *' lvalue ParmVar 0x11e1d522e08 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x11e1d520218 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x11e1d523160 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x11e1d522e80 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x11e1d520560 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x11e1d5202b8 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x11e1d520330 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x11e1d5203b0 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x11e1d520428 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x11e1d520868 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x11e1d520908 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x11e1d520970 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x11e1d5209d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x11e1d520a58 prev 0x11e1d520868 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x11e1d520650 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x11e1d5206d0 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x11e1d520748 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x11e1d520c88 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x11e1d520b40 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x11e1d520f50 <line:152:54> col:54 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x11e1d520ff0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x11e1d521058 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x11e1d5210d0 prev 0x11e1d520f50 <col:38, col:100> col:54 used strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x11e1d520d60 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x11e1d520de0 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x11e1d5253d0 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x11e1d525250 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x11e1d5252d0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x11e1d525630 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x11e1d5254b0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x11e1d525530 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x11e1d5259e8 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x11e1d525710 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x11e1d525790 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x11e1d525808 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x11e1d525c50 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x11e1d525ad0 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x11e1d525b50 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x11e1d525f48 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x11e1d525d30 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x11e1d525db0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x11e1d525e28 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x11e1d5261b0 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x11e1d526030 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x11e1d5260b0 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x11e1d521468 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x11e1d521250 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x11e1d5212d0 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x11e1d521348 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x11e1d521828 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x11e1d521550 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x11e1d5215d0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x11e1d521648 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x11e1d521c90 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x11e1d521910 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x11e1d521990 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x11e1d521a08 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x11e1d521a80 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x11e1d521f98 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x11e1d521d80 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x11e1d521e00 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x11e1d521e78 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x11e1d523370 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x11e1d522080 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x11e1d522100 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x11e1d522178 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x11e1d523230 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x11e1d523688 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x11e1d523728 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x11e1d523790 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x11e1d523808 prev 0x11e1d523688 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x11e1d523460 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x11e1d5234e0 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x11e1d523ac0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x11e1d5239e0 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x11e1d523b68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x11e1d523f40 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x11e1d523cb0 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x11e1d523d28 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x11e1d523da8 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x11e1d4d5318 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x11e1d4d53b8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x11e1d4d5428 prev 0x11e1d4d5318 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x11e1d524120 <col:90> col:93 'int'
| `-DeprecatedAttr 0x11e1d4d54d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x11e1d4d5828 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x11e1d4d5618 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x11e1d4d5690 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x11e1d4d5710 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x11e1d4d5b28 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x11e1d4d5910 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x11e1d4d5988 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x11e1d4d5e18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x11e1d4d5cc8 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x11e1d4d5ec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x11e1d550ff0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x11e1d4d6008 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x11e1d4d6080 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x11e1d4d60f8 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x11e1d5513c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x11e1d551198 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x11e1d551210 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x11e1d551470 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x11e1d551928 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x11e1d5515b8 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x11e1d551630 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x11e1d5516b0 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x11e1d551728 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x11e1d551da8 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x11e1d551e48 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x11e1d551eb0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x11e1d551f18 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x11e1d558060 prev 0x11e1d551da8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x11e1d551ad8 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x11e1d551b58 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x11e1d551bd0 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x11e1d558118 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x11e1d558478 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x11e1d558518 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x11e1d558580 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x11e1d5585e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x11e1d558668 prev 0x11e1d558478 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x11e1d558260 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x11e1d5582e0 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x11e1d558358 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x11e1d558968 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x11e1d558750 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x11e1d5587d0 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x11e1d558848 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x11e1d558d00 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x11e1d558a50 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x11e1d558ad0 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x11e1d558b48 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x11e1d558bc0 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x11e1d553058 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x11e1d558df0 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x11e1d558e68 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x11e1d558ee8 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x11e1d558f60 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x11e1d553420 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x11e1d5534c0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x11e1d553528 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x11e1d553590 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x11e1d553610 prev 0x11e1d553420 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x11e1d553208 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x11e1d553288 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x11e1d553300 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x11e1d5536c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x11e1d553b88 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x11e1d553810 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x11e1d553888 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x11e1d553908 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x11e1d553980 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x11e1d552000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x11e1d553d38 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x11e1d553db8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x11e1d553e30 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x11e1d5520b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x11e1d5523f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x11e1d552490 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x11e1d5524f8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x11e1d552570 prev 0x11e1d5523f0 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x11e1d552200 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x11e1d552280 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x11e1d5527d0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x11e1d552870 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x11e1d5528d8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x11e1d552950 prev 0x11e1d5527d0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x11e1d552650 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x11e1d5526d0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x11e1d552b10 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x11e1d552a30 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x11e1d552d60 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x11e1d552e00 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x11e1d552e68 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x11e1d552ee0 prev 0x11e1d552d60 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x11e1d552be8 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x11e1d552c68 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x11e1d5541a0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x11e1d554240 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x11e1d5542a8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x11e1d554320 prev 0x11e1d5541a0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x11e1d554020 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x11e1d5540a0 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x11e1d554640 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x11e1d5546e0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x11e1d554748 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x11e1d5547c0 prev 0x11e1d554640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x11e1d5544c0 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x11e1d554540 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x11e1d554870 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x11e1d554c58 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x11e1d5549b8 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x11e1d554a38 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x11e1d554ab8 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x11e1d554eb0 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x11e1d554d40 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x11e1d554db8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x11e1d55b248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x11e1d55b168 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x11e1d55b2f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x11e1d55b640 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x11e1d55b438 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x11e1d55b4b0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x11e1d55b528 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x11e1d55b960 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x11e1d55b7e8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x11e1d55b860 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x11e1d55ba10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x11e1d55be20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x11e1d55bec0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x11e1d55bf28 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x11e1d55bf90 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x11e1d559070 prev 0x11e1d55be20 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x11e1d55bb58 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x11e1d55bbd8 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x11e1d55bc50 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x11e1d5594c8 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x11e1d559158 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x11e1d5591d8 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x11e1d559250 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x11e1d5592c8 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x11e1d559770 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x11e1d559810 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x11e1d559880 prev 0x11e1d559770 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x11e1d559690 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x11e1d559928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x11e1d559c70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x11e1d559af0 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x11e1d559b70 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x11e1d559d20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x11e1d55c0a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x11e1d559ee8 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x11e1d559f68 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x11e1d55c150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x11e1d55c3f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x11e1d55c318 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x11e1d55c4a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x11e1d55c8b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x11e1d55c6a0 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x11e1d55c720 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x11e1d55c798 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x11e1d55c970 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x11e1d55cd50 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x11e1d55cb38 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x11e1d55cbb8 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x11e1d55cc30 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x11e1d55ce08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x11e1d55a0b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x11e1d55cfd0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x11e1d55a160 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x11e1d55a4a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x11e1d55a328 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x11e1d55a3a8 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x11e1d55a558 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x11e1d55a800 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x11e1d55a720 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x11e1d55a8a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x11e1d55ab40 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x11e1d55a9c8 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x11e1d55aed0 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x11e1d55ac10 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x11e1d55ac88 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x11e1d55ad00 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x11e1d555248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x11e1d555030 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x11e1d5550a8 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x11e1d5552f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x11e1d555658 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x11e1d5556f8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x11e1d555760 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x11e1d5557d8 prev 0x11e1d555658 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x11e1d555438 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x11e1d5554b0 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x11e1d555ad0 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x11e1d555b70 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x11e1d555bd8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x11e1d555c50 prev 0x11e1d555ad0 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x11e1d5558b0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x11e1d555928 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x11e1d555f30 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x11e1d555d28 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x11e1d555da0 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x11e1d555e18 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x11e1d55d2f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x11e1d55d180 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x11e1d55d1f8 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x11e1d55d3a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x11e1d55d6f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x11e1d55d4e0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x11e1d55d558 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x11e1d55d940 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x11e1d55d9e0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x11e1d55da50 prev 0x11e1d55d940 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x11e1d55d7d0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x11e1d55dd38 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x11e1d55db20 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x11e1d55db98 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x11e1d55df80 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x11e1d55de10 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x11e1d55de88 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x11e1d5562a8 <line:306:1, line:308:1>
|   `-ReturnStmt 0x11e1d556298 <line:307:5, col:56>
|     `-ConditionalOperator 0x11e1d556268 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x11e1d5560d8 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x11e1d5560b8 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x11e1d556088 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x11e1d55e048 <col:13> 'const wchar_t *' lvalue ParmVar 0x11e1d55de10 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x11e1d5560a0 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x11e1d556068 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x11e1d556040 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x11e1d55e068 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x11e1d556250 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x11e1d5560f8 <col:29> 'int' 0
|       `-CallExpr 0x11e1d5561f0 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x11e1d5561d8 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x11e1d556120 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x11e1d55dd38 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x11e1d556220 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x11e1d556140 <col:41> 'const wchar_t *' lvalue ParmVar 0x11e1d55de10 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x11e1d556238 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x11e1d556160 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x11e1d55de88 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x11e1d556638 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x11e1d5562d0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x11e1d556348 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x11e1d5563c0 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x11e1d556438 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x11e1d556aa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x11e1d5567e0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x11e1d556858 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x11e1d5568d0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x11e1d556b58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x11e1d556f68 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x11e1d563110 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x11e1d563178 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x11e1d5631e0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x11e1d563260 prev 0x11e1d556f68 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x11e1d556c98 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x11e1d556d10 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x11e1d556d88 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x11e1d5635e0 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x11e1d563340 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x11e1d5633b8 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x11e1d563430 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x11e1d5634a8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x11e1d563990 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x11e1d563788 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x11e1d563800 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x11e1d563878 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x11e1d563a48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x11e1d563da8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x11e1d563b88 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x11e1d563c00 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x11e1d563ff0 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x11e1d563e80 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x11e1d563ef8 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x11e1d561260 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x11e1d5610f0 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x11e1d561168 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x11e1d5614a8 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x11e1d561338 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x11e1d5613b0 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x11e1d5617b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x11e1d561640 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x11e1d5616b8 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x11e1d561860 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x11e1d561cc0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x11e1d5619a0 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x11e1d561a18 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x11e1d561af0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x11e1d561fe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x11e1d561e68 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x11e1d562088 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x11e1d5644e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x11e1d564218 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x11e1d564290 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x11e1d564310 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x11e1d564790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x11e1d5646b8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x11e1d564838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x11e1d564c00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x11e1d564978 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x11e1d5649f0 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x11e1d564a68 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x11e1d564e58 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x11e1d564ce0 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x11e1d564d58 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x11e1d565218 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x11e1d564f30 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x11e1d564fa8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x11e1d565020 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x11e1d565508 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x11e1d5652f8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x11e1d565370 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x11e1d5653e8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x11e1d565960 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x11e1d5655e8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x11e1d565660 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x11e1d5656d8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x11e1d565750 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x11e1d565db8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x11e1d565a48 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x11e1d565ac0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x11e1d565b38 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x11e1d565bb0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x11e1d562220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x11e1d565f60 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x11e1d565fd8 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x11e1d566050 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x11e1d5622d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x11e1d562590 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x11e1d562418 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x11e1d562920 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x11e1d562660 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x11e1d5626d8 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x11e1d562750 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x11e1d562cd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x11e1d562ac0 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x11e1d562b38 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x11e1d562d88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x11e1d55e0c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x11e1d562ec8 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x11e1d562f40 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x11e1d55e330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x11e1d55e258 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x11e1d55e3d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x11e1d55e7e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x11e1d55e518 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x11e1d55e590 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x11e1d55e608 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x11e1d55eb98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x11e1d55e980 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x11e1d55e9f8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x11e1d55ec48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x11e1d55eef8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x11e1d55ed88 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x11e1d55ee00 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x11e1d55f1a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x11e1d55f0d0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x11e1d55f250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x11e1d55f598 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x11e1d55f390 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x11e1d55f408 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x11e1d55f480 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x11e1d55f8a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x11e1d55f738 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x11e1d55f7b0 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x11e1d55f958 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x11e1d55fd60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x11e1d55fa98 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x11e1d55fb10 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x11e1d55fb88 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x11e1d567238 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x11e1d55fe40 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x11e1d55feb8 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x11e1d55ff30 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x11e1d55ffa8 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x11e1d567498 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x11e1d567320 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x11e1d567398 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x11e1d567780 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x11e1d567570 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x11e1d5675e8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x11e1d567660 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x11e1d5679d8 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x11e1d567860 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x11e1d5678d8 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x11e1d567cc0 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x11e1d567ab0 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x11e1d567b28 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x11e1d567ba0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x11e1d567fb0 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x11e1d567da0 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x11e1d567e18 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x11e1d567e90 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x11e1d560310 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x11e1d568090 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x11e1d5600e0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x11e1d560158 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x11e1d5601d0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x11e1d560608 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x11e1d5603f8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x11e1d560470 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x11e1d5604e8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x11e1d560990 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x11e1d5606e8 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x11e1d560760 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x11e1d5607d8 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x11e1d560850 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x11e1d560bf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x11e1d560b18 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x11e1d560c98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x11e1d560fd0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x11e1d560e58 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x11e1d560ed0 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x11e1d561080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x11e1d56d538 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x11e1d56d328 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x11e1d56d3a0 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x11e1d56d418 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x11e1d56d5f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x11e1d56d9b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x11e1d56d7b0 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x11e1d56d828 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x11e1d56d8a0 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x11e1d56da70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x11e1d56dd08 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x11e1d56dc30 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x11e1d56ddb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x11e1d56e0e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x11e1d56df70 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x11e1d56dfe8 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x11e1d56e1c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x11e1d56e458 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x11e1d56e380 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x11e1d56e500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x11e1d56e798 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x11e1d56e6c0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x11e1d56e840 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x11e1d56eb78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x11e1d56ea00 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x11e1d56ea78 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x11e1d56ec28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-VarDecl 0x11e1d56edc0 <.//openssl//file_jk/after\test\v3nametest.c:15:1, line:32:1> line:15:26 used names 'const char *const [52]' static cinit
| `-InitListExpr 0x11e1d569ce8 <col:36, line:32:1> 'const char *const [52]'
|   |-ImplicitCastExpr 0x11e1d569d40 <line:16:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d569d28 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56ee68 <col:5> 'char [2]' lvalue "a"
|   |-ImplicitCastExpr 0x11e1d569d78 <col:10> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d569d60 <col:10> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56ee88 <col:10> 'char [2]' lvalue "b"
|   |-ImplicitCastExpr 0x11e1d569db8 <col:15> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d569da0 <col:15> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56eea8 <col:15> 'char [2]' lvalue "."
|   |-ImplicitCastExpr 0x11e1d569e08 <col:20> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d569df0 <col:20> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56eec8 <col:20> 'char [2]' lvalue "*"
|   |-ImplicitCastExpr 0x11e1d569e38 <col:25> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d569e20 <col:25> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56eee8 <col:25> 'char [2]' lvalue "@"
|   |-ImplicitCastExpr 0x11e1d569ea8 <line:17:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d569e90 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56ef48 <col:5> 'char [3]' lvalue ".a"
|   |-ImplicitCastExpr 0x11e1d569ed8 <col:11> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d569ec0 <col:11> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56ef68 <col:11> 'char [3]' lvalue "a."
|   |-ImplicitCastExpr 0x11e1d569f08 <col:17> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d569ef0 <col:17> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56ef88 <col:17> 'char [3]' lvalue ".b"
|   |-ImplicitCastExpr 0x11e1d569f38 <col:23> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d569f20 <col:23> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56efa8 <col:23> 'char [3]' lvalue "b."
|   |-ImplicitCastExpr 0x11e1d569fe8 <col:29> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d569fd0 <col:29> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56efc8 <col:29> 'char [3]' lvalue ".*"
|   |-ImplicitCastExpr 0x11e1d56a018 <col:35> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a000 <col:35> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56efe8 <col:35> 'char [3]' lvalue "*."
|   |-ImplicitCastExpr 0x11e1d56a048 <col:41> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a030 <col:41> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56f008 <col:41> 'char [3]' lvalue "*@"
|   |-ImplicitCastExpr 0x11e1d56a078 <col:47> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a060 <col:47> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56f028 <col:47> 'char [3]' lvalue "@*"
|   |-ImplicitCastExpr 0x11e1d56a0a8 <col:53> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a090 <col:53> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56f048 <col:53> 'char [3]' lvalue "a@"
|   |-ImplicitCastExpr 0x11e1d56a0d8 <col:59> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a0c0 <col:59> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56f068 <col:59> 'char [3]' lvalue "@a"
|   |-ImplicitCastExpr 0x11e1d56a108 <col:65> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a0f0 <col:65> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56f088 <col:65> 'char [3]' lvalue "b@"
|   |-ImplicitCastExpr 0x11e1d56a138 <col:71> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a120 <col:71> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56f0a8 <col:71> 'char [3]' lvalue ".."
|   |-ImplicitCastExpr 0x11e1d56f2e8 <line:18:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f2d0 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56f108 <col:5> 'char [13]' lvalue "-example.com"
|   |-ImplicitCastExpr 0x11e1d56f318 <col:21> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f300 <col:21> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56f130 <col:21> 'char [13]' lvalue "example-.com"
|   |-ImplicitCastExpr 0x11e1d56f348 <line:19:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f330 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56f158 <col:5> 'char [3]' lvalue "@@"
|   |-ImplicitCastExpr 0x11e1d56f378 <col:11> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f360 <col:11> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56f178 <col:11> 'char [3]' lvalue "**"
|   |-ImplicitCastExpr 0x11e1d56f3a8 <col:17> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f390 <col:17> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d5691a8 <col:17> 'char [6]' lvalue "*.com"
|   |-ImplicitCastExpr 0x11e1d56f3d8 <col:26> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f3c0 <col:26> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d569208 <col:26> 'char [5]' lvalue "*com"
|   |-ImplicitCastExpr 0x11e1d56f408 <col:34> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f3f0 <col:34> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d569268 <col:34> 'char [8]' lvalue "*.*.com"
|   |-ImplicitCastExpr 0x11e1d56f438 <col:45> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f420 <col:45> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d569288 <col:45> 'char [5]' lvalue "*com"
|   |-ImplicitCastExpr 0x11e1d56f468 <col:53> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f450 <col:53> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d5692a8 <col:53> 'char [5]' lvalue "com*"
|   |-ImplicitCastExpr 0x11e1d56f498 <col:61> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f480 <col:61> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d5692c8 <col:61> 'char [13]' lvalue "*example.com"
|   |-ImplicitCastExpr 0x11e1d56f4c8 <line:20:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f4b0 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d569328 <col:5> 'char [14]' lvalue "*@example.com"
|   |-ImplicitCastExpr 0x11e1d56f4f8 <col:22> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f4e0 <col:22> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d569388 <col:22> 'char [19]' lvalue "test@*.example.com"
|   |-ImplicitCastExpr 0x11e1d56f528 <col:44> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f510 <col:44> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d5693f8 <col:44> 'char [12]' lvalue "example.com"
|   |-ImplicitCastExpr 0x11e1d56f558 <col:59> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f540 <col:59> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d569458 <col:59> 'char [16]' lvalue "www.example.com"
|   |-ImplicitCastExpr 0x11e1d56f588 <line:21:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f570 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d5694b8 <col:5> 'char [21]' lvalue "test.www.example.com"
|   |-ImplicitCastExpr 0x11e1d56f5b8 <col:29> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f5a0 <col:29> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d5694e8 <col:29> 'char [14]' lvalue "*.example.com"
|   |-ImplicitCastExpr 0x11e1d56f7e8 <col:46> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f7d0 <col:46> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d569548 <col:46> 'char [18]' lvalue "*.www.example.com"
|   |-ImplicitCastExpr 0x11e1d56f818 <line:22:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f800 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d569578 <col:5> 'char [19]' lvalue "test.*.example.com"
|   |-ImplicitCastExpr 0x11e1d56f848 <col:27> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f830 <col:27> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d5695e8 <col:27> 'char [10]' lvalue "www.*.com"
|   |-ImplicitCastExpr 0x11e1d56f878 <line:23:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f860 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d569648 <col:5> 'char [17]' lvalue ".www.example.com"
|   |-ImplicitCastExpr 0x11e1d56f8a8 <col:25> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f890 <col:25> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d569670 <col:25> 'char [17]' lvalue "*www.example.com"
|   |-ImplicitCastExpr 0x11e1d56f8d8 <line:24:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f8c0 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d569698 <col:5> 'char [12]' lvalue "example.net"
|   |-ImplicitCastExpr 0x11e1d56f908 <col:20> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f8f0 <col:20> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d5696f8 <col:20> 'char [25]' lvalue "xn--rger-koa.example.com"
|   |-ImplicitCastExpr 0x11e1d56f938 <line:25:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f920 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d569768 <col:5> 'char [27]' lvalue "*.xn--rger-koa.example.com"
|   |-ImplicitCastExpr 0x11e1d56f968 <col:35> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f950 <col:35> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d5697d8 <col:35> 'char [29]' lvalue "www.xn--rger-koa.example.com"
|   |-ImplicitCastExpr 0x11e1d56f998 <line:26:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f980 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d569848 <col:5> 'char [20]' lvalue "*.good--example.com"
|   |-ImplicitCastExpr 0x11e1d56f9c8 <col:28> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f9b0 <col:28> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d5698b8 <col:28> 'char [22]' lvalue "www.good--example.com"
|   |-ImplicitCastExpr 0x11e1d56f9f8 <line:27:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56f9e0 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d5698e8 <col:5> 'char [14]' lvalue "*.xn--bar.com"
|   |-ImplicitCastExpr 0x11e1d56fa28 <col:22> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56fa10 <col:22> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d569910 <col:22> 'char [20]' lvalue "xn--foo.xn--bar.com"
|   |-ImplicitCastExpr 0x11e1d56fa58 <line:28:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56fa40 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d569940 <col:5> 'char [14]' lvalue "a.example.com"
|   |-ImplicitCastExpr 0x11e1d56fa88 <col:22> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56fa70 <col:22> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d569968 <col:22> 'char [14]' lvalue "b.example.com"
|   |-ImplicitCastExpr 0x11e1d56fab8 <line:29:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56faa0 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d5699c8 <col:5> 'char [23]' lvalue "postmaster@example.com"
|   |-ImplicitCastExpr 0x11e1d56fae8 <col:31> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56fad0 <col:31> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d5699f8 <col:31> 'char [23]' lvalue "Postmaster@example.com"
|   |-ImplicitCastExpr 0x11e1d56fb18 <line:30:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56fb00 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d569a28 <col:5> 'char [23]' lvalue "postmaster@EXAMPLE.COM"
|   `-ImplicitCastExpr 0x11e1d56fb30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *const' <NullToPointer>
|     `-ParenExpr 0x11e1d569ac0 <col:17, col:27> 'void *'
|       `-CStyleCastExpr 0x11e1d569a98 <col:18, col:26> 'void *' <NullToPointer>
|         `-IntegerLiteral 0x11e1d569a58 <col:26> 'int' 0
|-VarDecl 0x11e1d56fbf0 <.//openssl//file_jk/after\test\v3nametest.c:34:1, line:70:1> line:34:26 used exceptions 'const char *const [35]' static cinit
| `-InitListExpr 0x11e1d568fa0 <col:41, line:70:1> 'const char *const [35]'
|   |-ImplicitCastExpr 0x11e1d568ff8 <line:35:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d568fe0 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56fc98 <col:5> 'char [54]' lvalue "set CN: host: [*.example.com] matches [a.example.com]"
|   |-ImplicitCastExpr 0x11e1d569030 <line:36:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d569018 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56fce8 <col:5> 'char [54]' lvalue "set CN: host: [*.example.com] matches [b.example.com]"
|   |-ImplicitCastExpr 0x11e1d569070 <line:37:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d569058 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56fd78 <col:5> 'char [56]' lvalue "set CN: host: [*.example.com] matches [www.example.com]"
|   |-ImplicitCastExpr 0x11e1d5690c0 <line:38:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d5690a8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56fe08 <col:5> 'char [65]' lvalue "set CN: host: [*.example.com] matches [xn--rger-koa.example.com]"
|   |-ImplicitCastExpr 0x11e1d5690f0 <line:39:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d5690d8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56fe60 <col:5> 'char [65]' lvalue "set CN: host: [*.www.example.com] matches [test.www.example.com]"
|   |-ImplicitCastExpr 0x11e1d56a180 <line:40:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d569148 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56fef8 <col:5> 'char [61]' lvalue "set CN: host: [*.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x11e1d56a1b0 <line:41:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a198 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d56ff88 <col:5> 'char [59]' lvalue "set CN: host: [*www.example.com] matches [www.example.com]"
|   |-ImplicitCastExpr 0x11e1d56a1e0 <line:42:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a1c8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d570018 <col:5> 'char [64]' lvalue "set CN: host: [test.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x11e1d56a210 <line:43:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a1f8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d5700a8 <col:5> 'char [82]' lvalue "set CN: host: [*.xn--rger-koa.example.com] matches [www.xn--rger-koa.example.com]"
|   |-ImplicitCastExpr 0x11e1d56a2c0 <line:44:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a2a8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d570158 <col:5> 'char [60]' lvalue "set CN: host: [*.xn--bar.com] matches [xn--foo.xn--bar.com]"
|   |-ImplicitCastExpr 0x11e1d56a2f0 <line:45:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a2d8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d568198 <col:5> 'char [68]' lvalue "set CN: host: [*.good--example.com] matches [www.good--example.com]"
|   |-ImplicitCastExpr 0x11e1d56a320 <line:46:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a308 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d568238 <col:5> 'char [74]' lvalue "set CN: host-no-wildcards: [*.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x11e1d56a350 <line:47:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a338 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d5682d8 <col:5> 'char [77]' lvalue "set CN: host-no-wildcards: [test.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x11e1d56a380 <line:48:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a368 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d568378 <col:5> 'char [90]' lvalue "set emailAddress: email: [postmaster@example.com] does not match [Postmaster@example.com]"
|   |-ImplicitCastExpr 0x11e1d56a3b0 <line:49:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a398 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d5683f0 <col:5> 'char [90]' lvalue "set emailAddress: email: [postmaster@EXAMPLE.COM] does not match [Postmaster@example.com]"
|   |-ImplicitCastExpr 0x11e1d56a3e0 <line:50:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a3c8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d568468 <col:5> 'char [90]' lvalue "set emailAddress: email: [Postmaster@example.com] does not match [postmaster@example.com]"
|   |-ImplicitCastExpr 0x11e1d56a410 <line:51:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a3f8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d5684e0 <col:5> 'char [90]' lvalue "set emailAddress: email: [Postmaster@example.com] does not match [postmaster@EXAMPLE.COM]"
|   |-ImplicitCastExpr 0x11e1d56a540 <line:52:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a528 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d568558 <col:5> 'char [61]' lvalue "set dnsName: host: [*.example.com] matches [www.example.com]"
|   |-ImplicitCastExpr 0x11e1d56a570 <line:53:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a558 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d5685b0 <col:5> 'char [59]' lvalue "set dnsName: host: [*.example.com] matches [a.example.com]"
|   |-ImplicitCastExpr 0x11e1d56a5a0 <line:54:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a588 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d568608 <col:5> 'char [59]' lvalue "set dnsName: host: [*.example.com] matches [b.example.com]"
|   |-ImplicitCastExpr 0x11e1d56a5d0 <line:55:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a5b8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d568698 <col:5> 'char [70]' lvalue "set dnsName: host: [*.example.com] matches [xn--rger-koa.example.com]"
|   |-ImplicitCastExpr 0x11e1d56a600 <line:56:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a5e8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d5686f8 <col:5> 'char [70]' lvalue "set dnsName: host: [*.www.example.com] matches [test.www.example.com]"
|   |-ImplicitCastExpr 0x11e1d56a630 <line:57:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a618 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d568798 <col:5> 'char [79]' lvalue "set dnsName: host-no-wildcards: [*.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x11e1d56a660 <line:58:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a648 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d568800 <col:5> 'char [82]' lvalue "set dnsName: host-no-wildcards: [test.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x11e1d56a690 <line:59:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a678 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d5688a8 <col:5> 'char [66]' lvalue "set dnsName: host: [*.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x11e1d56a6c0 <line:60:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a6a8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d568908 <col:5> 'char [64]' lvalue "set dnsName: host: [*www.example.com] matches [www.example.com]"
|   |-ImplicitCastExpr 0x11e1d56a6f0 <line:61:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a6d8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d568998 <col:5> 'char [69]' lvalue "set dnsName: host: [test.www.example.com] matches [.www.example.com]"
|   |-ImplicitCastExpr 0x11e1d56a720 <line:62:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a708 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d568a38 <col:5> 'char [87]' lvalue "set dnsName: host: [*.xn--rger-koa.example.com] matches [www.xn--rger-koa.example.com]"
|   |-ImplicitCastExpr 0x11e1d56a750 <line:63:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a738 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d568aa8 <col:5> 'char [65]' lvalue "set dnsName: host: [*.xn--bar.com] matches [xn--foo.xn--bar.com]"
|   |-ImplicitCastExpr 0x11e1d56a780 <line:64:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a768 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d568b38 <col:5> 'char [73]' lvalue "set dnsName: host: [*.good--example.com] matches [www.good--example.com]"
|   |-ImplicitCastExpr 0x11e1d56a7b0 <line:65:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a798 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d568bd8 <col:5> 'char [88]' lvalue "set rfc822Name: email: [postmaster@example.com] does not match [Postmaster@example.com]"
|   |-ImplicitCastExpr 0x11e1d56a7e0 <line:66:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a7c8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d568c48 <col:5> 'char [88]' lvalue "set rfc822Name: email: [Postmaster@example.com] does not match [postmaster@example.com]"
|   |-ImplicitCastExpr 0x11e1d56a810 <line:67:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56a7f8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d568cb8 <col:5> 'char [88]' lvalue "set rfc822Name: email: [Postmaster@example.com] does not match [postmaster@EXAMPLE.COM]"
|   |-ImplicitCastExpr 0x11e1d56aa40 <line:68:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x11e1d56aa28 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x11e1d568d28 <col:5> 'char [88]' lvalue "set rfc822Name: email: [postmaster@EXAMPLE.COM] does not match [Postmaster@example.com]"
|   `-ImplicitCastExpr 0x11e1d56aa58 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *const' <NullToPointer>
|     `-ParenExpr 0x11e1d568e00 <col:17, col:27> 'void *'
|       `-CStyleCastExpr 0x11e1d568dd8 <col:18, col:26> 'void *' <NullToPointer>
|         `-IntegerLiteral 0x11e1d568d98 <col:26> 'int' 0
|-FunctionDecl 0x11e1d56abe0 <.//openssl//file_jk/after\test\v3nametest.c:72:1, line:79:1> line:72:12 used is_exception 'int (const char *)' static
| |-ParmVarDecl 0x11e1d56ab00 <col:25, col:37> col:37 used msg 'const char *'
| `-CompoundStmt 0x11e1d56b0f8 <line:73:1, line:79:1>
|   |-DeclStmt 0x11e1d56ad48 <line:74:5, col:25>
|   | `-VarDecl 0x11e1d56ace0 <col:5, col:24> col:24 used p 'const char *const *'
|   |-ForStmt 0x11e1d56b088 <line:75:5, line:77:20>
|   | |-BinaryOperator 0x11e1d56add0 <line:75:10, col:14> 'const char *const *' '='
|   | | |-DeclRefExpr 0x11e1d56ad60 <col:10> 'const char *const *' lvalue Var 0x11e1d56ace0 'p' 'const char *const *'
|   | | `-ImplicitCastExpr 0x11e1d56adb8 <col:14> 'const char *const *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x11e1d56ad98 <col:14> 'const char *const [35]' lvalue Var 0x11e1d56fbf0 'exceptions' 'const char *const [35]'
|   | |-<<<NULL>>>
|   | |-ImplicitCastExpr 0x11e1d56ae40 <col:26, col:27> 'const char *' <LValueToRValue>
|   | | `-UnaryOperator 0x11e1d56ae28 <col:26, col:27> 'const char *const' lvalue prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x11e1d56ae10 <col:27> 'const char *const *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x11e1d56adf0 <col:27> 'const char *const *' lvalue Var 0x11e1d56ace0 'p' 'const char *const *'
|   | |-UnaryOperator 0x11e1d56ae78 <col:30, col:32> 'const char *const *' prefix '++'
|   | | `-DeclRefExpr 0x11e1d56ae58 <col:32> 'const char *const *' lvalue Var 0x11e1d56ace0 'p' 'const char *const *'
|   | `-IfStmt 0x11e1d56b070 <line:76:9, line:77:20>
|   |   |-BinaryOperator 0x11e1d56b018 <line:76:13, col:32> 'int' '=='
|   |   | |-CallExpr 0x11e1d56af90 <col:13, col:27> 'int'
|   |   | | |-ImplicitCastExpr 0x11e1d56af78 <col:13> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x11e1d56ae90 <col:13> 'int (const char *, const char *)' Function 0x11e1d5226d0 'strcmp' 'int (const char *, const char *)'
|   |   | | |-ImplicitCastExpr 0x11e1d56afc0 <col:20> 'const char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x11e1d56aeb0 <col:20> 'const char *' lvalue ParmVar 0x11e1d56ab00 'msg' 'const char *'
|   |   | | `-ImplicitCastExpr 0x11e1d56afd8 <col:25, col:26> 'const char *' <LValueToRValue>
|   |   | |   `-UnaryOperator 0x11e1d56af08 <col:25, col:26> 'const char *const' lvalue prefix '*' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x11e1d56aef0 <col:26> 'const char *const *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x11e1d56aed0 <col:26> 'const char *const *' lvalue Var 0x11e1d56ace0 'p' 'const char *const *'
|   |   | `-IntegerLiteral 0x11e1d56aff0 <col:32> 'int' 0
|   |   `-ReturnStmt 0x11e1d56b060 <line:77:13, col:20>
|   |     `-IntegerLiteral 0x11e1d56b038 <col:20> 'int' 1
|   `-ReturnStmt 0x11e1d56b0e8 <line:78:5, col:12>
|     `-IntegerLiteral 0x11e1d56b0c0 <col:12> 'int' 0
|-FunctionDecl 0x11e1d56b268 <line:81:1, line:108:1> line:81:12 invalid set_cn 'int (int *, ...)' static
| |-ParmVarDecl 0x11e1d56b190 <col:19, col:25> col:25 invalid crt 'int *'
| `-CompoundStmt 0x11e1d56c7b0 <line:82:1, line:108:1>
|   |-DeclStmt 0x11e1d56b3d0 <line:83:5, col:16>
|   | `-VarDecl 0x11e1d56b340 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x11e1d56b3a8 <col:15> 'int' 0
|   |-DeclStmt 0x11e1d56b4e8 <line:85:5, col:15>
|   | `-VarDecl 0x11e1d56b480 <col:5, col:13> col:13 used ap 'va_list':'char *'
|   |-IfStmt 0x11e1d56ba78 <line:88:5, line:89:14>
|   | |-OpaqueValueExpr 0x11e1d56ba60 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x11e1d56ba48 <col:9, col:14> 'out' 0x11e1d56b9f8
|   |-WhileStmt 0x11e1d56c160 <line:90:5, line:100:5>
|   | |-IntegerLiteral 0x11e1d56ba90 <line:90:12> 'int' 1
|   | `-CompoundStmt 0x11e1d56c130 <col:15, line:100:5>
|   |   |-DeclStmt 0x11e1d56bb38 <line:91:9, col:16>
|   |   | `-VarDecl 0x11e1d56bad0 <col:9, col:13> col:13 used nid 'int'
|   |   |-DeclStmt 0x11e1d56bbd0 <line:92:9, col:25>
|   |   | `-VarDecl 0x11e1d56bb68 <col:9, col:21> col:21 used name 'const char *'
|   |   |-IfStmt 0x11e1d56bdd8 <line:94:9, line:95:13>
|   |   | |-BinaryOperator 0x11e1d56bdb0 <line:94:13, col:20> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x11e1d56bd98 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x11e1d56bd50 <col:13> 'int' lvalue Var 0x11e1d56bad0 'nid' 'int'
|   |   | | `-IntegerLiteral 0x11e1d56bd70 <col:20> 'int' 0
|   |   | `-BreakStmt 0x11e1d56bdd0 <line:95:13>
|   |   `-IfStmt 0x11e1d56c118 <line:97:9, line:99:18>
|   |     |-OpaqueValueExpr 0x11e1d56c100 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x11e1d56c0e8 <col:13, col:18> 'out' 0x11e1d56b9f8
|   |-IfStmt 0x11e1d56c2e0 <line:101:5, line:102:14>
|   | |-OpaqueValueExpr 0x11e1d56c2c8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x11e1d56c2b0 <col:9, col:14> 'out' 0x11e1d56b9f8
|   |-BinaryOperator 0x11e1d56c358 <line:103:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x11e1d56c2f8 <col:5> 'int' lvalue Var 0x11e1d56b340 'ret' 'int'
|   | `-IntegerLiteral 0x11e1d56c330 <col:11> 'int' 1
|   |-LabelStmt 0x11e1d56c490 <line:104:2, col:5> 'out'
|   | `-NullStmt 0x11e1d56c488 <col:5>
|   |-CallExpr 0x11e1d56c740 <line:106:5, col:14> 'void'
|   | |-ImplicitCastExpr 0x11e1d56c728 <col:5> 'void (*)(__builtin_va_list &)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x11e1d56c678 <col:5> 'void (__builtin_va_list &)' Function 0x11e1d56c510 'va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x11e1d56c6b0 <col:12> 'va_list':'char *' lvalue Var 0x11e1d56b480 'ap' 'va_list':'char *'
|   `-ReturnStmt 0x11e1d56c7a0 <line:107:5, col:12>
|     `-ImplicitCastExpr 0x11e1d56c788 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x11e1d56c768 <col:12> 'int' lvalue Var 0x11e1d56b340 'ret' 'int'
|-FunctionDecl 0x11e1d56b5f8 <line:86:5> col:5 implicit used va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x11e1d56b698 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x11e1d56b708 <col:5> Implicit
|-FunctionDecl 0x11e1d56c510 <line:106:5> col:5 implicit used va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x11e1d56c5b0 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x11e1d56c620 <col:5> Implicit
|-FunctionDecl 0x11e1d56c8b8 <line:117:1, line:165:1> line:117:12 invalid set_altname 'int (int *, ...)' static
| |-ParmVarDecl 0x11e1d56c820 <col:24, col:30> col:30 invalid crt 'int *'
| `-CompoundStmt 0x11e1d579760 <line:118:1, line:165:1>
|   |-DeclStmt 0x11e1d56ca20 <line:119:5, col:16>
|   | `-VarDecl 0x11e1d56c990 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x11e1d56c9f8 <col:15> 'int' 0
|   |-DeclStmt 0x11e1d56cc48 <line:123:5, col:15>
|   | `-VarDecl 0x11e1d56cbe0 <col:5, col:13> col:13 used ap 'va_list':'char *'
|   |-IfStmt 0x11e1d56cf08 <line:126:5, line:127:14>
|   | |-OpaqueValueExpr 0x11e1d56cef0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x11e1d56ced8 <col:9, col:14> 'out' 0x11e1d56ce88
|   |-WhileStmt 0x11e1d579060 <line:128:5, line:155:5>
|   | |-IntegerLiteral 0x11e1d56cf20 <line:128:12> 'int' 1
|   | `-CompoundStmt 0x11e1d579018 <col:15, line:155:5>
|   |   |-DeclStmt 0x11e1d56cfc8 <line:129:9, col:17>
|   |   | `-VarDecl 0x11e1d56cf60 <col:9, col:13> col:13 used type 'int'
|   |   |-DeclStmt 0x11e1d56d060 <line:130:9, col:25>
|   |   | `-VarDecl 0x11e1d56cff8 <col:9, col:21> col:21 used name 'const char *'
|   |   |-IfStmt 0x11e1d56d178 <line:132:9, line:133:13>
|   |   | |-BinaryOperator 0x11e1d56d150 <line:132:13, col:21> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x11e1d56d138 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x11e1d56d0f0 <col:13> 'int' lvalue Var 0x11e1d56cf60 'type' 'int'
|   |   | | `-IntegerLiteral 0x11e1d56d110 <col:21> 'int' 0
|   |   | `-BreakStmt 0x11e1d56d170 <line:133:13>
|   |   |-IfStmt 0x11e1d578708 <line:137:9, line:138:18>
|   |   | |-OpaqueValueExpr 0x11e1d5786f0 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x11e1d5786d8 <col:13, col:18> 'out' 0x11e1d56ce88
|   |   |-IfStmt 0x11e1d578920 <line:140:9, line:141:18>
|   |   | |-OpaqueValueExpr 0x11e1d578908 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x11e1d5788f0 <col:13, col:18> 'out' 0x11e1d56ce88
|   |   |-IfStmt 0x11e1d578ad8 <line:142:9, line:143:18>
|   |   | |-OpaqueValueExpr 0x11e1d578ac0 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x11e1d578aa8 <col:13, col:18> 'out' 0x11e1d56ce88
|   |   `-SwitchStmt 0x11e1d578b28 <line:144:9, line:152:9>
|   |     |-ImplicitCastExpr 0x11e1d578b10 <line:144:17> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x11e1d578af0 <col:17> 'int' lvalue Var 0x11e1d56cf60 'type' 'int'
|   |     `-CompoundStmt 0x11e1d578e60 <col:23, line:152:9>
|   |       |-BreakStmt 0x11e1d578d00 <line:149:13>
|   |       `-DefaultStmt 0x11e1d578e40 <line:150:9, line:151:19>
|   |         `-CallExpr 0x11e1d578e20 <col:13, col:19> 'void'
|   |           `-ImplicitCastExpr 0x11e1d578e08 <col:13> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
|   |             `-DeclRefExpr 0x11e1d578da8 <col:13> 'void (void) __attribute__((noreturn))' Function 0x11e1d578d08 'abort' 'void (void) __attribute__((noreturn))'
|   |-IfStmt 0x11e1d579208 <line:156:5, line:157:14>
|   | |-OpaqueValueExpr 0x11e1d5791f0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x11e1d5791d8 <col:9, col:14> 'out' 0x11e1d56ce88
|   |-BinaryOperator 0x11e1d579280 <line:158:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x11e1d579220 <col:5> 'int' lvalue Var 0x11e1d56c990 'ret' 'int'
|   | `-IntegerLiteral 0x11e1d579258 <col:11> 'int' 1
|   |-LabelStmt 0x11e1d5793b8 <line:159:2, col:5> 'out'
|   | `-NullStmt 0x11e1d5793b0 <col:5>
|   |-CallExpr 0x11e1d5796f0 <line:163:5, col:14> 'void'
|   | |-ImplicitCastExpr 0x11e1d5796d8 <col:5> 'void (*)(__builtin_va_list &)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x11e1d579698 <col:5> 'void (__builtin_va_list &)' Function 0x11e1d56c510 'va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x11e1d5796b8 <col:12> 'va_list':'char *' lvalue Var 0x11e1d56cbe0 'ap' 'va_list':'char *'
|   `-ReturnStmt 0x11e1d579750 <line:164:5, col:12>
|     `-ImplicitCastExpr 0x11e1d579738 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x11e1d579718 <col:12> 'int' lvalue Var 0x11e1d56c990 'ret' 'int'
|-FunctionDecl 0x11e1d578d08 <line:151:13> col:13 implicit used abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x11e1d579930 <line:167:1, line:170:1> line:167:12 invalid set_cn1 'int (int *, const char *)' static
| |-ParmVarDecl 0x11e1d5797d0 <col:20, col:26> col:26 invalid crt 'int *'
| |-ParmVarDecl 0x11e1d579850 <col:31, col:43> col:43 used name 'const char *'
| `-CompoundStmt 0x11e1d579a58 <line:168:1, line:170:1>
|-FunctionDecl 0x11e1d579ba0 <line:172:1, line:176:1> line:172:12 invalid set_cn_and_email 'int (int *, const char *)' static
| |-ParmVarDecl 0x11e1d579a80 <col:29, col:35> col:35 invalid crt 'int *'
| |-ParmVarDecl 0x11e1d579b00 <col:40, col:52> col:52 used name 'const char *'
| `-CompoundStmt 0x11e1d579cf8 <line:173:1, line:176:1>
|-FunctionDecl 0x11e1d579e40 <line:178:1, line:182:1> line:178:12 invalid set_cn2 'int (int *, const char *)' static
| |-ParmVarDecl 0x11e1d579d20 <col:20, col:26> col:26 invalid crt 'int *'
| |-ParmVarDecl 0x11e1d579da0 <col:31, col:43> col:43 used name 'const char *'
| `-CompoundStmt 0x11e1d579f90 <line:179:1, line:182:1>
|-FunctionDecl 0x11e1d57a0d8 <line:184:1, line:188:1> line:184:12 invalid set_cn3 'int (int *, const char *)' static
| |-ParmVarDecl 0x11e1d579fb8 <col:20, col:26> col:26 invalid crt 'int *'
| |-ParmVarDecl 0x11e1d57a038 <col:31, col:43> col:43 used name 'const char *'
| `-CompoundStmt 0x11e1d57a228 <line:185:1, line:188:1>
|-FunctionDecl 0x11e1d57a370 <line:190:1, line:193:1> line:190:12 invalid set_email1 'int (int *, const char *)' static
| |-ParmVarDecl 0x11e1d57a250 <col:23, col:29> col:29 invalid crt 'int *'
| |-ParmVarDecl 0x11e1d57a2d0 <col:34, col:46> col:46 used name 'const char *'
| `-CompoundStmt 0x11e1d575460 <line:191:1, line:193:1>
|-FunctionDecl 0x11e1d5755a8 <line:195:1, line:199:1> line:195:12 invalid set_email2 'int (int *, const char *)' static
| |-ParmVarDecl 0x11e1d575488 <col:23, col:29> col:29 invalid crt 'int *'
| |-ParmVarDecl 0x11e1d575508 <col:34, col:46> col:46 used name 'const char *'
| `-CompoundStmt 0x11e1d575700 <line:196:1, line:199:1>
|-FunctionDecl 0x11e1d575848 <line:201:1, line:205:1> line:201:12 invalid set_email3 'int (int *, const char *)' static
| |-ParmVarDecl 0x11e1d575728 <col:23, col:29> col:29 invalid crt 'int *'
| |-ParmVarDecl 0x11e1d5757a8 <col:34, col:46> col:46 used name 'const char *'
| `-CompoundStmt 0x11e1d5759a0 <line:202:1, line:205:1>
|-FunctionDecl 0x11e1d575ae8 <line:207:1, line:211:1> line:207:12 invalid set_email_and_cn 'int (int *, const char *)' static
| |-ParmVarDecl 0x11e1d5759c8 <col:29, col:35> col:35 invalid crt 'int *'
| |-ParmVarDecl 0x11e1d575a48 <col:40, col:52> col:52 used name 'const char *'
| `-CompoundStmt 0x11e1d575c38 <line:208:1, line:211:1>
|-FunctionDecl 0x11e1d575d80 <line:213:1, line:216:1> line:213:12 invalid set_altname_dns 'int (int *, const char *)' static
| |-ParmVarDecl 0x11e1d575c60 <col:28, col:34> col:34 invalid crt 'int *'
| |-ParmVarDecl 0x11e1d575ce0 <col:39, col:51> col:51 used name 'const char *'
| `-CompoundStmt 0x11e1d575ea8 <line:214:1, line:216:1>
|-FunctionDecl 0x11e1d575ff0 <line:218:1, line:221:1> line:218:12 invalid set_altname_email 'int (int *, const char *)' static
| |-ParmVarDecl 0x11e1d575ed0 <col:30, col:36> col:36 invalid crt 'int *'
| |-ParmVarDecl 0x11e1d575f50 <col:41, col:53> col:53 used name 'const char *'
| `-CompoundStmt 0x11e1d576118 <line:219:1, line:221:1>
|-RecordDecl 0x11e1d576128 <line:223:1, line:228:1> line:223:8 struct set_name_fn definition
| |-FieldDecl 0x11e1d5763b0 <line:224:5, col:36> col:11 referenced fn 'int (*)(int *, const char *)'
| |-FieldDecl 0x11e1d577480 <line:225:5, col:17> col:17 referenced name 'const char *'
| |-FieldDecl 0x11e1d5774f0 <line:226:5, col:9> col:9 referenced host 'int'
| `-FieldDecl 0x11e1d577560 <line:227:5, col:9> col:9 referenced email 'int'
|-VarDecl 0x11e1d577678 <line:230:1, col:42> col:33 used name_fns 'const struct set_name_fn []' static
|-FunctionDecl 0x11e1d577de0 <line:244:1, line:259:1> line:244:14 invalid make_cert 'int *()' static
| `-CompoundStmt 0x11e1d57c530 <line:245:1, line:259:1>
|   |-IfStmt 0x11e1d578280 <line:250:5, line:251:14>
|   | |-OpaqueValueExpr 0x11e1d578268 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x11e1d578250 <col:9, col:14> 'out' 0x11e1d578200
|   |-IfStmt 0x11e1d578400 <line:252:5, line:253:14>
|   | |-OpaqueValueExpr 0x11e1d5783e8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x11e1d5783d0 <col:9, col:14> 'out' 0x11e1d578200
|   `-LabelStmt 0x11e1d57c518 <line:256:2, col:5> 'out'
|     `-NullStmt 0x11e1d57c510 <col:5>
|-VarDecl 0x11e1d57c570 <line:261:1, col:12> col:12 used errors 'int' static
|-FunctionDecl 0x11e1d57ca38 <line:263:1, line:276:1> line:263:13 used check_message 'void (const struct set_name_fn *, const char *, const char *, int, const char *)' static
| |-ParmVarDecl 0x11e1d57c670 <col:27, col:53> col:53 used fn 'const struct set_name_fn *'
| |-ParmVarDecl 0x11e1d57c6f0 <col:57, col:69> col:69 used op 'const char *'
| |-ParmVarDecl 0x11e1d57c770 <line:264:27, col:39> col:39 used nameincert 'const char *'
| |-ParmVarDecl 0x11e1d57c7f0 <col:51, col:55> col:55 used match 'int'
| |-ParmVarDecl 0x11e1d57c870 <col:62, col:74> col:74 used name 'const char *'
| `-CompoundStmt 0x11e1d57d518 <line:265:1, line:276:1>
|   |-DeclStmt 0x11e1d57cc20 <line:266:5, col:19>
|   | `-VarDecl 0x11e1d57cbb8 <col:5, col:18> col:10 used msg 'char [1024]'
|   |-IfStmt 0x11e1d57ccc8 <line:267:5, line:268:9>
|   | |-BinaryOperator 0x11e1d57cc98 <line:267:9, col:17> 'int' '<'
|   | | |-ImplicitCastExpr 0x11e1d57cc80 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x11e1d57cc38 <col:9> 'int' lvalue ParmVar 0x11e1d57c7f0 'match' 'int'
|   | | `-IntegerLiteral 0x11e1d57cc58 <col:17> 'int' 0
|   | `-ReturnStmt 0x11e1d57ccb8 <line:268:9>
|   |-CallExpr 0x11e1d57d138 <line:269:5, line:271:60> 'int'
|   | |-ImplicitCastExpr 0x11e1d57d120 <line:269:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x11e1d57cdd0 <col:5> 'int ()' Function 0x11e1d57cd08 'BIO_snprintf' 'int ()'
|   | |-ImplicitCastExpr 0x11e1d57d198 <col:18> 'char *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x11e1d57cdf0 <col:18> 'char [1024]' lvalue Var 0x11e1d57cbb8 'msg' 'char [1024]'
|   | |-UnaryExprOrTypeTraitExpr 0x11e1d57ce68 <col:23, col:33> 'unsigned long long' sizeof
|   | | `-ParenExpr 0x11e1d57ce48 <col:29, col:33> 'char [1024]' lvalue
|   | |   `-DeclRefExpr 0x11e1d57ce28 <col:30> 'char [1024]' lvalue Var 0x11e1d57cbb8 'msg' 'char [1024]' non_odr_use_unevaluated
|   | |-ImplicitCastExpr 0x11e1d57d1b0 <col:36> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x11e1d57ce88 <col:36> 'char [21]' lvalue "%s: %s: [%s] %s [%s]"
|   | |-ImplicitCastExpr 0x11e1d57d1c8 <line:270:18, col:22> 'const char *' <LValueToRValue>
|   | | `-MemberExpr 0x11e1d57cef0 <col:18, col:22> 'const char *const' lvalue ->name 0x11e1d577480
|   | |   `-ImplicitCastExpr 0x11e1d57ced8 <col:18> 'const struct set_name_fn *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x11e1d57ceb8 <col:18> 'const struct set_name_fn *' lvalue ParmVar 0x11e1d57c670 'fn' 'const struct set_name_fn *'
|   | |-ImplicitCastExpr 0x11e1d57d1e0 <col:28> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x11e1d57cf20 <col:28> 'const char *' lvalue ParmVar 0x11e1d57c6f0 'op' 'const char *'
|   | |-ImplicitCastExpr 0x11e1d57d1f8 <col:32> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x11e1d57cf40 <col:32> 'const char *' lvalue ParmVar 0x11e1d57c770 'nameincert' 'const char *'
|   | |-ConditionalOperator 0x11e1d57d0d0 <line:271:18, col:38> 'char *'
|   | | |-ImplicitCastExpr 0x11e1d57cfc8 <col:18> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x11e1d57cf60 <col:18> 'int' lvalue ParmVar 0x11e1d57c7f0 'match' 'int'
|   | | |-ImplicitCastExpr 0x11e1d57cfe0 <col:26> 'char *' <ArrayToPointerDecay>
|   | | | `-StringLiteral 0x11e1d57cf80 <col:26> 'char [8]' lvalue "matches"
|   | | `-ImplicitCastExpr 0x11e1d57cff8 <col:38> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x11e1d57cfa0 <col:38> 'char [15]' lvalue "does not match"
|   | `-ImplicitCastExpr 0x11e1d57d210 <col:56> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x11e1d57d100 <col:56> 'const char *' lvalue ParmVar 0x11e1d57c870 'name' 'const char *'
|   |-IfStmt 0x11e1d57d318 <line:272:5, line:273:9>
|   | |-CallExpr 0x11e1d57d2b0 <line:272:9, col:25> 'int'
|   | | |-ImplicitCastExpr 0x11e1d57d298 <col:9> 'int (*)(const char *)' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x11e1d57d228 <col:9> 'int (const char *)' Function 0x11e1d56abe0 'is_exception' 'int (const char *)'
|   | | `-ImplicitCastExpr 0x11e1d57d2f0 <col:22> 'const char *' <NoOp>
|   | |   `-ImplicitCastExpr 0x11e1d57d2d8 <col:22> 'char *' <ArrayToPointerDecay>
|   | |     `-DeclRefExpr 0x11e1d57d248 <col:22> 'char [1024]' lvalue Var 0x11e1d57cbb8 'msg' 'char [1024]'
|   | `-ReturnStmt 0x11e1d57d308 <line:273:9>
|   |-CallExpr 0x11e1d57d478 <line:274:5, col:13> 'int'
|   | |-ImplicitCastExpr 0x11e1d57d460 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x11e1d57d420 <col:5> 'int ()' Function 0x11e1d57d358 'puts' 'int ()'
|   | `-ImplicitCastExpr 0x11e1d57d4a0 <col:10> 'char *' <ArrayToPointerDecay>
|   |   `-DeclRefExpr 0x11e1d57d440 <col:10> 'char [1024]' lvalue Var 0x11e1d57cbb8 'msg' 'char [1024]'
|   `-UnaryOperator 0x11e1d57d500 <line:275:5, col:7> 'int' prefix '++'
|     `-DeclRefExpr 0x11e1d57d4e0 <col:7> 'int' lvalue Var 0x11e1d57c570 'errors' 'int'
|-FunctionDecl 0x11e1d57d7a8 <line:278:1, line:331:1> line:278:13 invalid run_cert 'void (int *, const char *, const struct set_name_fn *)' static
| |-ParmVarDecl 0x11e1d57d570 <col:22, col:28> col:28 invalid crt 'int *'
| |-ParmVarDecl 0x11e1d57d5f0 <col:33, col:45> col:45 used nameincert 'const char *'
| |-ParmVarDecl 0x11e1d57d680 <line:279:22, col:48> col:48 used fn 'const struct set_name_fn *'
| `-CompoundStmt 0x11e1d57e7d0 <line:280:1, line:331:1>
|   |-DeclStmt 0x11e1d57d930 <line:281:5, col:37>
|   | `-VarDecl 0x11e1d57d890 <col:5, col:32> col:24 used pname 'const char *const *' cinit
|   |   `-ImplicitCastExpr 0x11e1d57d918 <col:32> 'const char *const *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x11e1d57d8f8 <col:32> 'const char *const [52]' lvalue Var 0x11e1d56edc0 'names' 'const char *const [52]'
|   `-WhileStmt 0x11e1d57e7b8 <line:282:5, line:330:5>
|     |-ImplicitCastExpr 0x11e1d57d9b0 <line:282:12, col:13> 'const char *' <LValueToRValue>
|     | `-UnaryOperator 0x11e1d57d998 <col:12, col:13> 'const char *const' lvalue prefix '*' cannot overflow
|     |   `-ImplicitCastExpr 0x11e1d57d980 <col:13> 'const char *const *' <LValueToRValue>
|     |     `-DeclRefExpr 0x11e1d57d948 <col:13> 'const char *const *' lvalue Var 0x11e1d57d890 'pname' 'const char *const *'
|     `-CompoundStmt 0x11e1d57e728 <col:20, line:330:5>
|       |-DeclStmt 0x11e1d57dd78 <line:283:9, col:59>
|       | `-VarDecl 0x11e1d57d9e0 <col:9, col:58> col:13 used samename 'int' cinit
|       |   `-BinaryOperator 0x11e1d57dd58 <col:24, col:58> 'int' '=='
|       |     |-CallExpr 0x11e1d57dcd0 <col:24, col:53> 'int'
|       |     | |-ImplicitCastExpr 0x11e1d57dcb8 <col:24> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|       |     | | `-DeclRefExpr 0x11e1d57dbc8 <col:24> 'int (const char *, const char *)' Function 0x11e1d57da48 'strcasecmp' 'int (const char *, const char *)'
|       |     | |-ImplicitCastExpr 0x11e1d57dd00 <col:35> 'const char *' <LValueToRValue>
|       |     | | `-DeclRefExpr 0x11e1d57dc00 <col:35> 'const char *' lvalue ParmVar 0x11e1d57d5f0 'nameincert' 'const char *'
|       |     | `-ImplicitCastExpr 0x11e1d57dd18 <col:47, col:48> 'const char *' <LValueToRValue>
|       |     |   `-UnaryOperator 0x11e1d57dc70 <col:47, col:48> 'const char *const' lvalue prefix '*' cannot overflow
|       |     |     `-ImplicitCastExpr 0x11e1d57dc58 <col:48> 'const char *const *' <LValueToRValue>
|       |     |       `-DeclRefExpr 0x11e1d57dc38 <col:48> 'const char *const *' lvalue Var 0x11e1d57d890 'pname' 'const char *const *'
|       |     `-IntegerLiteral 0x11e1d57dd30 <col:58> 'int' 0
|       |-DeclStmt 0x11e1d57df10 <line:284:9, col:40>
|       | `-VarDecl 0x11e1d57dda0 <col:9, col:39> col:16 used namelen 'size_t':'unsigned long long' cinit
|       |   `-CallExpr 0x11e1d57ded0 <col:26, col:39> 'unsigned long long'
|       |     |-ImplicitCastExpr 0x11e1d57deb8 <col:26> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x11e1d57de08 <col:26> 'unsigned long long (const char *)' Function 0x11e1d522a30 'strlen' 'unsigned long long (const char *)'
|       |     `-ImplicitCastExpr 0x11e1d57def8 <col:33, col:34> 'const char *' <LValueToRValue>
|       |       `-UnaryOperator 0x11e1d57de60 <col:33, col:34> 'const char *const' lvalue prefix '*' cannot overflow
|       |         `-ImplicitCastExpr 0x11e1d57de48 <col:34> 'const char *const *' <LValueToRValue>
|       |           `-DeclRefExpr 0x11e1d57de28 <col:34> 'const char *const *' lvalue Var 0x11e1d57d890 'pname' 'const char *const *'
|       |-DeclStmt 0x11e1d57e218 <line:285:9, col:37>
|       | `-VarDecl 0x11e1d57df40 <col:9, col:36> col:15 used name 'char *' cinit
|       |   `-ImplicitCastExpr 0x11e1d57e200 <col:22, col:36> 'char *' <BitCast>
|       |     `-CallExpr 0x11e1d57e1c0 <col:22, col:36> 'void *'
|       |       |-ImplicitCastExpr 0x11e1d57e1a8 <col:22> 'void *(*)(unsigned long long)' <FunctionToPointerDecay>
|       |       | `-DeclRefExpr 0x11e1d57e0f0 <col:22> 'void *(unsigned long long)' Function 0x11e1d57dfe0 'malloc' 'void *(unsigned long long)'
|       |       `-ImplicitCastExpr 0x11e1d57e1e8 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|       |         `-DeclRefExpr 0x11e1d57e128 <col:29> 'size_t':'unsigned long long' lvalue Var 0x11e1d57dda0 'namelen' 'size_t':'unsigned long long'
|       |-DeclStmt 0x11e1d57e348 <line:286:9, col:23>
|       | |-VarDecl 0x11e1d57e248 <col:9, col:13> col:13 used match 'int'
|       | `-VarDecl 0x11e1d57e2c8 <col:9, col:20> col:20 used ret 'int'
|       |-CallExpr 0x11e1d576470 <line:287:9, col:37> 'void *'
|       | |-ImplicitCastExpr 0x11e1d57e498 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x11e1d57e360 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x11e1d517f38 'memcpy' 'void *(void *, const void *, unsigned long long)'
|       | |-ImplicitCastExpr 0x11e1d5764c0 <col:16> 'void *' <BitCast>
|       | | `-ImplicitCastExpr 0x11e1d5764a8 <col:16> 'char *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x11e1d57e380 <col:16> 'char *' lvalue Var 0x11e1d57df40 'name' 'char *'
|       | |-ImplicitCastExpr 0x11e1d5764f0 <col:22, col:23> 'const void *' <BitCast>
|       | | `-ImplicitCastExpr 0x11e1d5764d8 <col:22, col:23> 'const char *' <LValueToRValue>
|       | |   `-UnaryOperator 0x11e1d57e3f0 <col:22, col:23> 'const char *const' lvalue prefix '*' cannot overflow
|       | |     `-ImplicitCastExpr 0x11e1d57e3d8 <col:23> 'const char *const *' <LValueToRValue>
|       | |       `-DeclRefExpr 0x11e1d57e3b8 <col:23> 'const char *const *' lvalue Var 0x11e1d57d890 'pname' 'const char *const *'
|       | `-ImplicitCastExpr 0x11e1d576508 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|       |   `-DeclRefExpr 0x11e1d57e408 <col:30> 'size_t':'unsigned long long' lvalue Var 0x11e1d57dda0 'namelen' 'size_t':'unsigned long long'
|       |-BinaryOperator 0x11e1d5767d0 <line:290:9, col:18> 'int' '='
|       | |-DeclRefExpr 0x11e1d576758 <col:9> 'int' lvalue Var 0x11e1d57e248 'match' 'int'
|       | `-UnaryOperator 0x11e1d5767b8 <col:17, col:18> 'int' prefix '-'
|       |   `-IntegerLiteral 0x11e1d576790 <col:18> 'int' 1
|       |-IfStmt 0x11e1d576f78 <line:291:9, line:300:21> has_else
|       | |-BinaryOperator 0x11e1d576850 <line:291:13, col:19> 'int' '<'
|       | | |-ImplicitCastExpr 0x11e1d576838 <col:13> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x11e1d5767f0 <col:13> 'int' lvalue Var 0x11e1d57e2c8 'ret' 'int'
|       | | `-IntegerLiteral 0x11e1d576810 <col:19> 'int' 0
|       | |-CompoundStmt 0x11e1d576aa0 <col:22, line:294:9>
|       | | `-UnaryOperator 0x11e1d576a88 <line:293:13, col:15> 'int' prefix '++'
|       | |   `-DeclRefExpr 0x11e1d576a68 <col:15> 'int' lvalue Var 0x11e1d57c570 'errors' 'int'
|       | `-IfStmt 0x11e1d576f50 <line:294:16, line:300:21> has_else
|       |   |-ImplicitCastExpr 0x11e1d576b38 <line:294:20, col:24> 'int' <LValueToRValue>
|       |   | `-MemberExpr 0x11e1d576b08 <col:20, col:24> 'const int' lvalue ->host 0x11e1d5774f0
|       |   |   `-ImplicitCastExpr 0x11e1d576af0 <col:20> 'const struct set_name_fn *' <LValueToRValue>
|       |   |     `-DeclRefExpr 0x11e1d576ab8 <col:20> 'const struct set_name_fn *' lvalue ParmVar 0x11e1d57d680 'fn' 'const struct set_name_fn *'
|       |   |-CompoundStmt 0x11e1d576e30 <col:30, line:299:9>
|       |   | |-IfStmt 0x11e1d576cc0 <line:295:13, line:296:25>
|       |   | | |-BinaryOperator 0x11e1d576c38 <line:295:17, col:30> 'int' '&&'
|       |   | | | |-BinaryOperator 0x11e1d576bb0 <col:17, col:24> 'int' '=='
|       |   | | | | |-ImplicitCastExpr 0x11e1d576b98 <col:17> 'int' <LValueToRValue>
|       |   | | | | | `-DeclRefExpr 0x11e1d576b50 <col:17> 'int' lvalue Var 0x11e1d57e2c8 'ret' 'int'
|       |   | | | | `-IntegerLiteral 0x11e1d576b70 <col:24> 'int' 1
|       |   | | | `-UnaryOperator 0x11e1d576c20 <col:29, col:30> 'int' prefix '!' cannot overflow
|       |   | | |   `-ImplicitCastExpr 0x11e1d576c08 <col:30> 'int' <LValueToRValue>
|       |   | | |     `-DeclRefExpr 0x11e1d576bd0 <col:30> 'int' lvalue Var 0x11e1d57d9e0 'samename' 'int'
|       |   | | `-BinaryOperator 0x11e1d576ca0 <line:296:17, col:25> 'int' '='
|       |   | |   |-DeclRefExpr 0x11e1d576c58 <col:17> 'int' lvalue Var 0x11e1d57e248 'match' 'int'
|       |   | |   `-IntegerLiteral 0x11e1d576c78 <col:25> 'int' 1
|       |   | `-IfStmt 0x11e1d576e18 <line:297:13, line:298:25>
|       |   |   |-BinaryOperator 0x11e1d576d90 <line:297:17, col:29> 'int' '&&'
|       |   |   | |-BinaryOperator 0x11e1d576d38 <col:17, col:24> 'int' '=='
|       |   |   | | |-ImplicitCastExpr 0x11e1d576d20 <col:17> 'int' <LValueToRValue>
|       |   |   | | | `-DeclRefExpr 0x11e1d576cd8 <col:17> 'int' lvalue Var 0x11e1d57e2c8 'ret' 'int'
|       |   |   | | `-IntegerLiteral 0x11e1d576cf8 <col:24> 'int' 0
|       |   |   | `-ImplicitCastExpr 0x11e1d576d78 <col:29> 'int' <LValueToRValue>
|       |   |   |   `-DeclRefExpr 0x11e1d576d58 <col:29> 'int' lvalue Var 0x11e1d57d9e0 'samename' 'int'
|       |   |   `-BinaryOperator 0x11e1d576df8 <line:298:17, col:25> 'int' '='
|       |   |     |-DeclRefExpr 0x11e1d576db0 <col:17> 'int' lvalue Var 0x11e1d57e248 'match' 'int'
|       |   |     `-IntegerLiteral 0x11e1d576dd0 <col:25> 'int' 0
|       |   `-IfStmt 0x11e1d576f38 <line:299:16, line:300:21>
|       |     |-BinaryOperator 0x11e1d576eb0 <line:299:20, col:27> 'int' '=='
|       |     | |-ImplicitCastExpr 0x11e1d576e98 <col:20> 'int' <LValueToRValue>
|       |     | | `-DeclRefExpr 0x11e1d576e50 <col:20> 'int' lvalue Var 0x11e1d57e2c8 'ret' 'int'
|       |     | `-IntegerLiteral 0x11e1d576e70 <col:27> 'int' 1
|       |     `-BinaryOperator 0x11e1d576f18 <line:300:13, col:21> 'int' '='
|       |       |-DeclRefExpr 0x11e1d576ed0 <col:13> 'int' lvalue Var 0x11e1d57e248 'match' 'int'
|       |       `-IntegerLiteral 0x11e1d576ef0 <col:21> 'int' 1
|       |-CallExpr 0x11e1d577100 <line:301:9, col:60> 'void'
|       | |-ImplicitCastExpr 0x11e1d5770e8 <col:9> 'void (*)(const struct set_name_fn *, const char *, const char *, int, const char *)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x11e1d576fa0 <col:9> 'void (const struct set_name_fn *, const char *, const char *, int, const char *)' Function 0x11e1d57ca38 'check_message' 'void (const struct set_name_fn *, const char *, const char *, int, const char *)'
|       | |-ImplicitCastExpr 0x11e1d577148 <col:23> 'const struct set_name_fn *' <LValueToRValue>
|       | | `-DeclRefExpr 0x11e1d576fc0 <col:23> 'const struct set_name_fn *' lvalue ParmVar 0x11e1d57d680 'fn' 'const struct set_name_fn *'
|       | |-ImplicitCastExpr 0x11e1d577178 <col:27> 'const char *' <NoOp>
|       | | `-ImplicitCastExpr 0x11e1d577160 <col:27> 'char *' <ArrayToPointerDecay>
|       | |   `-StringLiteral 0x11e1d576fe0 <col:27> 'char [5]' lvalue "host"
|       | |-ImplicitCastExpr 0x11e1d577190 <col:35> 'const char *' <LValueToRValue>
|       | | `-DeclRefExpr 0x11e1d577000 <col:35> 'const char *' lvalue ParmVar 0x11e1d57d5f0 'nameincert' 'const char *'
|       | |-ImplicitCastExpr 0x11e1d5771a8 <col:47> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x11e1d577020 <col:47> 'int' lvalue Var 0x11e1d57e248 'match' 'int'
|       | `-ImplicitCastExpr 0x11e1d5771c0 <col:54, col:55> 'const char *' <LValueToRValue>
|       |   `-UnaryOperator 0x11e1d577078 <col:54, col:55> 'const char *const' lvalue prefix '*' cannot overflow
|       |     `-ImplicitCastExpr 0x11e1d577060 <col:55> 'const char *const *' <LValueToRValue>
|       |       `-DeclRefExpr 0x11e1d577040 <col:55> 'const char *const *' lvalue Var 0x11e1d57d890 'pname' 'const char *const *'
|       |-BinaryOperator 0x11e1d577340 <line:305:9, col:18> 'int' '='
|       | |-DeclRefExpr 0x11e1d5772e0 <col:9> 'int' lvalue Var 0x11e1d57e248 'match' 'int'
|       | `-UnaryOperator 0x11e1d577328 <col:17, col:18> 'int' prefix '-'
|       |   `-IntegerLiteral 0x11e1d577300 <col:18> 'int' 1
|       |-IfStmt 0x11e1d5829f0 <line:306:9, line:315:21> has_else
|       | |-BinaryOperator 0x11e1d5773c0 <line:306:13, col:19> 'int' '<'
|       | | |-ImplicitCastExpr 0x11e1d5773a8 <col:13> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x11e1d577360 <col:13> 'int' lvalue Var 0x11e1d57e2c8 'ret' 'int'
|       | | `-IntegerLiteral 0x11e1d577380 <col:19> 'int' 0
|       | |-CompoundStmt 0x11e1d582548 <col:22, line:309:9>
|       | | `-UnaryOperator 0x11e1d582530 <line:308:13, col:15> 'int' prefix '++'
|       | |   `-DeclRefExpr 0x11e1d577440 <col:15> 'int' lvalue Var 0x11e1d57c570 'errors' 'int'
|       | `-IfStmt 0x11e1d5829c8 <line:309:16, line:315:21> has_else
|       |   |-ImplicitCastExpr 0x11e1d5825c8 <line:309:20, col:24> 'int' <LValueToRValue>
|       |   | `-MemberExpr 0x11e1d582598 <col:20, col:24> 'const int' lvalue ->host 0x11e1d5774f0
|       |   |   `-ImplicitCastExpr 0x11e1d582580 <col:20> 'const struct set_name_fn *' <LValueToRValue>
|       |   |     `-DeclRefExpr 0x11e1d582560 <col:20> 'const struct set_name_fn *' lvalue ParmVar 0x11e1d57d680 'fn' 'const struct set_name_fn *'
|       |   |-CompoundStmt 0x11e1d5828a8 <col:30, line:314:9>
|       |   | |-IfStmt 0x11e1d582738 <line:310:13, line:311:25>
|       |   | | |-BinaryOperator 0x11e1d5826b0 <line:310:17, col:30> 'int' '&&'
|       |   | | | |-BinaryOperator 0x11e1d582640 <col:17, col:24> 'int' '=='
|       |   | | | | |-ImplicitCastExpr 0x11e1d582628 <col:17> 'int' <LValueToRValue>
|       |   | | | | | `-DeclRefExpr 0x11e1d5825e0 <col:17> 'int' lvalue Var 0x11e1d57e2c8 'ret' 'int'
|       |   | | | | `-IntegerLiteral 0x11e1d582600 <col:24> 'int' 1
|       |   | | | `-UnaryOperator 0x11e1d582698 <col:29, col:30> 'int' prefix '!' cannot overflow
|       |   | | |   `-ImplicitCastExpr 0x11e1d582680 <col:30> 'int' <LValueToRValue>
|       |   | | |     `-DeclRefExpr 0x11e1d582660 <col:30> 'int' lvalue Var 0x11e1d57d9e0 'samename' 'int'
|       |   | | `-BinaryOperator 0x11e1d582718 <line:311:17, col:25> 'int' '='
|       |   | |   |-DeclRefExpr 0x11e1d5826d0 <col:17> 'int' lvalue Var 0x11e1d57e248 'match' 'int'
|       |   | |   `-IntegerLiteral 0x11e1d5826f0 <col:25> 'int' 1
|       |   | `-IfStmt 0x11e1d582890 <line:312:13, line:313:25>
|       |   |   |-BinaryOperator 0x11e1d582808 <line:312:17, col:29> 'int' '&&'
|       |   |   | |-BinaryOperator 0x11e1d5827b0 <col:17, col:24> 'int' '=='
|       |   |   | | |-ImplicitCastExpr 0x11e1d582798 <col:17> 'int' <LValueToRValue>
|       |   |   | | | `-DeclRefExpr 0x11e1d582750 <col:17> 'int' lvalue Var 0x11e1d57e2c8 'ret' 'int'
|       |   |   | | `-IntegerLiteral 0x11e1d582770 <col:24> 'int' 0
|       |   |   | `-ImplicitCastExpr 0x11e1d5827f0 <col:29> 'int' <LValueToRValue>
|       |   |   |   `-DeclRefExpr 0x11e1d5827d0 <col:29> 'int' lvalue Var 0x11e1d57d9e0 'samename' 'int'
|       |   |   `-BinaryOperator 0x11e1d582870 <line:313:17, col:25> 'int' '='
|       |   |     |-DeclRefExpr 0x11e1d582828 <col:17> 'int' lvalue Var 0x11e1d57e248 'match' 'int'
|       |   |     `-IntegerLiteral 0x11e1d582848 <col:25> 'int' 0
|       |   `-IfStmt 0x11e1d5829b0 <line:314:16, line:315:21>
|       |     |-BinaryOperator 0x11e1d582928 <line:314:20, col:27> 'int' '=='
|       |     | |-ImplicitCastExpr 0x11e1d582910 <col:20> 'int' <LValueToRValue>
|       |     | | `-DeclRefExpr 0x11e1d5828c8 <col:20> 'int' lvalue Var 0x11e1d57e2c8 'ret' 'int'
|       |     | `-IntegerLiteral 0x11e1d5828e8 <col:27> 'int' 1
|       |     `-BinaryOperator 0x11e1d582990 <line:315:13, col:21> 'int' '='
|       |       |-DeclRefExpr 0x11e1d582948 <col:13> 'int' lvalue Var 0x11e1d57e248 'match' 'int'
|       |       `-IntegerLiteral 0x11e1d582968 <col:21> 'int' 1
|       |-CallExpr 0x11e1d582b30 <line:316:9, col:73> 'void'
|       | |-ImplicitCastExpr 0x11e1d582b18 <col:9> 'void (*)(const struct set_name_fn *, const char *, const char *, int, const char *)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x11e1d582a18 <col:9> 'void (const struct set_name_fn *, const char *, const char *, int, const char *)' Function 0x11e1d57ca38 'check_message' 'void (const struct set_name_fn *, const char *, const char *, int, const char *)'
|       | |-ImplicitCastExpr 0x11e1d582b78 <col:23> 'const struct set_name_fn *' <LValueToRValue>
|       | | `-DeclRefExpr 0x11e1d582a38 <col:23> 'const struct set_name_fn *' lvalue ParmVar 0x11e1d57d680 'fn' 'const struct set_name_fn *'
|       | |-ImplicitCastExpr 0x11e1d582ba8 <col:27> 'const char *' <NoOp>
|       | | `-ImplicitCastExpr 0x11e1d582b90 <col:27> 'char *' <ArrayToPointerDecay>
|       | |   `-StringLiteral 0x11e1d582a58 <col:27> 'char [18]' lvalue "host-no-wildcards"
|       | |-ImplicitCastExpr 0x11e1d582bc0 <col:48> 'const char *' <LValueToRValue>
|       | | `-DeclRefExpr 0x11e1d582a88 <col:48> 'const char *' lvalue ParmVar 0x11e1d57d5f0 'nameincert' 'const char *'
|       | |-ImplicitCastExpr 0x11e1d582bd8 <col:60> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x11e1d582aa8 <col:60> 'int' lvalue Var 0x11e1d57e248 'match' 'int'
|       | `-ImplicitCastExpr 0x11e1d582bf0 <col:67, col:68> 'const char *' <LValueToRValue>
|       |   `-UnaryOperator 0x11e1d582b00 <col:67, col:68> 'const char *const' lvalue prefix '*' cannot overflow
|       |     `-ImplicitCastExpr 0x11e1d582ae8 <col:68> 'const char *const *' <LValueToRValue>
|       |       `-DeclRefExpr 0x11e1d582ac8 <col:68> 'const char *const *' lvalue Var 0x11e1d57d890 'pname' 'const char *const *'
|       |-BinaryOperator 0x11e1d582e00 <line:319:9, col:18> 'int' '='
|       | |-DeclRefExpr 0x11e1d582da0 <col:9> 'int' lvalue Var 0x11e1d57e248 'match' 'int'
|       | `-UnaryOperator 0x11e1d582de8 <col:17, col:18> 'int' prefix '-'
|       |   `-IntegerLiteral 0x11e1d582dc0 <col:18> 'int' 1
|       |-IfStmt 0x11e1d5833a0 <line:320:9, line:326:21> has_else
|       | |-ImplicitCastExpr 0x11e1d582e88 <line:320:13, col:17> 'int' <LValueToRValue>
|       | | `-MemberExpr 0x11e1d582e58 <col:13, col:17> 'const int' lvalue ->email 0x11e1d577560
|       | |   `-ImplicitCastExpr 0x11e1d582e40 <col:13> 'const struct set_name_fn *' <LValueToRValue>
|       | |     `-DeclRefExpr 0x11e1d582e20 <col:13> 'const struct set_name_fn *' lvalue ParmVar 0x11e1d57d680 'fn' 'const struct set_name_fn *'
|       | |-CompoundStmt 0x11e1d5832c8 <col:24, line:325:9>
|       | | |-IfStmt 0x11e1d582fb0 <line:321:13, line:322:25>
|       | | | |-BinaryOperator 0x11e1d582f28 <line:321:17, col:25> 'int' '&&'
|       | | | | |-ImplicitCastExpr 0x11e1d582f10 <col:17> 'int' <LValueToRValue>
|       | | | | | `-DeclRefExpr 0x11e1d582ea0 <col:17> 'int' lvalue Var 0x11e1d57e2c8 'ret' 'int'
|       | | | | `-UnaryOperator 0x11e1d582ef8 <col:24, col:25> 'int' prefix '!' cannot overflow
|       | | | |   `-ImplicitCastExpr 0x11e1d582ee0 <col:25> 'int' <LValueToRValue>
|       | | | |     `-DeclRefExpr 0x11e1d582ec0 <col:25> 'int' lvalue Var 0x11e1d57d9e0 'samename' 'int'
|       | | | `-BinaryOperator 0x11e1d582f90 <line:322:17, col:25> 'int' '='
|       | | |   |-DeclRefExpr 0x11e1d582f48 <col:17> 'int' lvalue Var 0x11e1d57e248 'match' 'int'
|       | | |   `-IntegerLiteral 0x11e1d582f68 <col:25> 'int' 1
|       | | `-IfStmt 0x11e1d5832b0 <line:323:13, line:324:25>
|       | |   |-BinaryOperator 0x11e1d583228 <line:323:17, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '&&'
|       | |   | |-BinaryOperator 0x11e1d583050 <.//openssl//file_jk/after\test\v3nametest.c:323:17, col:25> 'int' '&&'
|       | |   | | |-UnaryOperator 0x11e1d583000 <col:17, col:18> 'int' prefix '!' cannot overflow
|       | |   | | | `-ImplicitCastExpr 0x11e1d582fe8 <col:18> 'int' <LValueToRValue>
|       | |   | | |   `-DeclRefExpr 0x11e1d582fc8 <col:18> 'int' lvalue Var 0x11e1d57e2c8 'ret' 'int'
|       | |   | | `-ImplicitCastExpr 0x11e1d583038 <col:25> 'int' <LValueToRValue>
|       | |   | |   `-DeclRefExpr 0x11e1d583018 <col:25> 'int' lvalue Var 0x11e1d57d9e0 'samename' 'int'
|       | |   | `-BinaryOperator 0x11e1d583208 <col:37, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|       | |   |   |-CallExpr 0x11e1d583120 <.//openssl//file_jk/after\test\v3nametest.c:323:37, col:59> 'char *'
|       | |   |   | |-ImplicitCastExpr 0x11e1d583108 <col:37> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|       | |   |   | | `-DeclRefExpr 0x11e1d583070 <col:37> 'char *(const char *, int)' Function 0x11e1d5210d0 'strchr' 'char *(const char *, int)'
|       | |   |   | |-ImplicitCastExpr 0x11e1d583150 <col:44> 'const char *' <LValueToRValue>
|       | |   |   | | `-DeclRefExpr 0x11e1d583090 <col:44> 'const char *' lvalue ParmVar 0x11e1d57d5f0 'nameincert' 'const char *'
|       | |   |   | `-CharacterLiteral 0x11e1d5830b0 <col:56> 'int' 64
|       | |   |   `-ImplicitCastExpr 0x11e1d5831f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|       | |   |     `-ParenExpr 0x11e1d5831d0 <col:17, col:27> 'void *'
|       | |   |       `-CStyleCastExpr 0x11e1d5831a8 <col:18, col:26> 'void *' <NullToPointer>
|       | |   |         `-IntegerLiteral 0x11e1d583168 <col:26> 'int' 0
|       | |   `-BinaryOperator 0x11e1d583290 <.//openssl//file_jk/after\test\v3nametest.c:324:17, col:25> 'int' '='
|       | |     |-DeclRefExpr 0x11e1d583248 <col:17> 'int' lvalue Var 0x11e1d57e248 'match' 'int'
|       | |     `-IntegerLiteral 0x11e1d583268 <col:25> 'int' 0
|       | `-IfStmt 0x11e1d583388 <line:325:16, line:326:21>
|       |   |-ImplicitCastExpr 0x11e1d583308 <line:325:20> 'int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x11e1d5832e8 <col:20> 'int' lvalue Var 0x11e1d57e2c8 'ret' 'int'
|       |   `-BinaryOperator 0x11e1d583368 <line:326:13, col:21> 'int' '='
|       |     |-DeclRefExpr 0x11e1d583320 <col:13> 'int' lvalue Var 0x11e1d57e248 'match' 'int'
|       |     `-IntegerLiteral 0x11e1d583340 <col:21> 'int' 1
|       |-CallExpr 0x11e1d5834d0 <line:327:9, col:61> 'void'
|       | |-ImplicitCastExpr 0x11e1d5834b8 <col:9> 'void (*)(const struct set_name_fn *, const char *, const char *, int, const char *)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x11e1d5833c8 <col:9> 'void (const struct set_name_fn *, const char *, const char *, int, const char *)' Function 0x11e1d57ca38 'check_message' 'void (const struct set_name_fn *, const char *, const char *, int, const char *)'
|       | |-ImplicitCastExpr 0x11e1d583518 <col:23> 'const struct set_name_fn *' <LValueToRValue>
|       | | `-DeclRefExpr 0x11e1d5833e8 <col:23> 'const struct set_name_fn *' lvalue ParmVar 0x11e1d57d680 'fn' 'const struct set_name_fn *'
|       | |-ImplicitCastExpr 0x11e1d57e508 <col:27> 'const char *' <NoOp>
|       | | `-ImplicitCastExpr 0x11e1d57e4f0 <col:27> 'char *' <ArrayToPointerDecay>
|       | |   `-StringLiteral 0x11e1d583408 <col:27> 'char [6]' lvalue "email"
|       | |-ImplicitCastExpr 0x11e1d57e520 <col:36> 'const char *' <LValueToRValue>
|       | | `-DeclRefExpr 0x11e1d583428 <col:36> 'const char *' lvalue ParmVar 0x11e1d57d5f0 'nameincert' 'const char *'
|       | |-ImplicitCastExpr 0x11e1d57e538 <col:48> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x11e1d583448 <col:48> 'int' lvalue Var 0x11e1d57e248 'match' 'int'
|       | `-ImplicitCastExpr 0x11e1d57e550 <col:55, col:56> 'const char *' <LValueToRValue>
|       |   `-UnaryOperator 0x11e1d5834a0 <col:55, col:56> 'const char *const' lvalue prefix '*' cannot overflow
|       |     `-ImplicitCastExpr 0x11e1d583488 <col:56> 'const char *const *' <LValueToRValue>
|       |       `-DeclRefExpr 0x11e1d583468 <col:56> 'const char *const *' lvalue Var 0x11e1d57d890 'pname' 'const char *const *'
|       |-UnaryOperator 0x11e1d57e588 <line:328:9, col:11> 'const char *const *' prefix '++'
|       | `-DeclRefExpr 0x11e1d57e568 <col:11> 'const char *const *' lvalue Var 0x11e1d57d890 'pname' 'const char *const *'
|       `-CallExpr 0x11e1d57e6e8 <line:329:9, col:18> 'int'
|         |-ImplicitCastExpr 0x11e1d57e6d0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x11e1d57e690 <col:9> 'int ()' Function 0x11e1d57e5c8 'free' 'int ()'
|         `-ImplicitCastExpr 0x11e1d57e710 <col:14> 'char *' <LValueToRValue>
|           `-DeclRefExpr 0x11e1d57e6b0 <col:14> 'char *' lvalue Var 0x11e1d57df40 'name' 'char *'
|-FunctionDecl 0x11e1d57da48 <line:283:24> col:24 implicit used strcasecmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x11e1d57dae8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x11e1d57db50 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x11e1d57dfe0 <line:285:22> col:22 implicit used malloc 'void *(unsigned long long)' extern
| `-ParmVarDecl 0x11e1d57e080 <<invalid sloc>> <invalid sloc> 'unsigned long long'
`-FunctionDecl 0x11e1d57e8c0 <line:333:1, line:355:1> line:333:5 main 'int (void)'
  `-CompoundStmt 0x11e1d57f2e0 <line:334:1, line:355:1>
    |-DeclStmt 0x11e1d57ea40 <line:335:5, col:45>
    | `-VarDecl 0x11e1d57e9a0 <col:5, col:37> col:31 used pfn 'const struct set_name_fn *' cinit
    |   `-ImplicitCastExpr 0x11e1d57ea28 <col:37> 'const struct set_name_fn *' <ArrayToPointerDecay>
    |     `-DeclRefExpr 0x11e1d57ea08 <col:37> 'const struct set_name_fn []' lvalue Var 0x11e1d577678 'name_fns' 'const struct set_name_fn []'
    |-WhileStmt 0x11e1d57f1b8 <line:336:5, line:353:5>
    | |-ImplicitCastExpr 0x11e1d57ead8 <line:336:12, col:17> 'const char *' <LValueToRValue>
    | | `-MemberExpr 0x11e1d57eaa8 <col:12, col:17> 'const char *const' lvalue ->name 0x11e1d577480
    | |   `-ImplicitCastExpr 0x11e1d57ea90 <col:12> 'const struct set_name_fn *' <LValueToRValue>
    | |     `-DeclRefExpr 0x11e1d57ea58 <col:12> 'const struct set_name_fn *' lvalue Var 0x11e1d57e9a0 'pfn' 'const struct set_name_fn *'
    | `-CompoundStmt 0x11e1d57f190 <col:23, line:353:5>
    |   |-DeclStmt 0x11e1d57eba8 <line:337:9, col:41>
    |   | `-VarDecl 0x11e1d57eb08 <col:9, col:36> col:28 used pname 'const char *const *' cinit
    |   |   `-ImplicitCastExpr 0x11e1d57eb90 <col:36> 'const char *const *' <ArrayToPointerDecay>
    |   |     `-DeclRefExpr 0x11e1d57eb70 <col:36> 'const char *const [52]' lvalue Var 0x11e1d56edc0 'names' 'const char *const [52]'
    |   |-WhileStmt 0x11e1d57f140 <line:338:9, line:351:9>
    |   | |-ImplicitCastExpr 0x11e1d57ec28 <line:338:16, col:17> 'const char *' <LValueToRValue>
    |   | | `-UnaryOperator 0x11e1d57ec10 <col:16, col:17> 'const char *const' lvalue prefix '*' cannot overflow
    |   | |   `-ImplicitCastExpr 0x11e1d57ebf8 <col:17> 'const char *const *' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x11e1d57ebc0 <col:17> 'const char *const *' lvalue Var 0x11e1d57eb08 'pname' 'const char *const *'
    |   | `-CompoundStmt 0x11e1d57f118 <col:24, line:351:9>
    |   |   |-IfStmt 0x11e1d57ed80 <line:340:13, line:343:13>
    |   |   | |-OpaqueValueExpr 0x11e1d57ed68 <<invalid sloc>> '_Bool'
    |   |   | `-CompoundStmt 0x11e1d57ed50 <line:340:30, line:343:13>
    |   |   |   `-ReturnStmt 0x11e1d57ed40 <line:342:17, col:24>
    |   |   |     `-IntegerLiteral 0x11e1d57ed18 <col:24> 'int' 1
    |   |   |-IfStmt 0x11e1d57ef48 <line:344:13, line:347:13>
    |   |   | |-OpaqueValueExpr 0x11e1d57ef30 <<invalid sloc>> '_Bool'
    |   |   | `-CompoundStmt 0x11e1d57ef18 <line:344:40, line:347:13>
    |   |   |   `-ReturnStmt 0x11e1d57ef08 <line:346:17, col:24>
    |   |   |     `-IntegerLiteral 0x11e1d57eee0 <col:24> 'int' 1
    |   |   `-UnaryOperator 0x11e1d57f100 <line:350:13, col:15> 'const char *const *' prefix '++'
    |   |     `-DeclRefExpr 0x11e1d57f0e0 <col:15> 'const char *const *' lvalue Var 0x11e1d57eb08 'pname' 'const char *const *'
    |   `-UnaryOperator 0x11e1d57f178 <line:352:9, col:11> 'const struct set_name_fn *' prefix '++'
    |     `-DeclRefExpr 0x11e1d57f158 <col:11> 'const struct set_name_fn *' lvalue Var 0x11e1d57e9a0 'pfn' 'const struct set_name_fn *'
    `-ReturnStmt 0x11e1d57f2d0 <line:354:5, col:29>
      `-ConditionalOperator 0x11e1d57f2a0 <col:12, col:29> 'int'
        |-BinaryOperator 0x11e1d57f230 <col:12, col:21> 'int' '>'
        | |-ImplicitCastExpr 0x11e1d57f218 <col:12> 'int' <LValueToRValue>
        | | `-DeclRefExpr 0x11e1d57f1d0 <col:12> 'int' lvalue Var 0x11e1d57c570 'errors' 'int'
        | `-IntegerLiteral 0x11e1d57f1f0 <col:21> 'int' 0
        |-IntegerLiteral 0x11e1d57f250 <col:25> 'int' 1
        `-IntegerLiteral 0x11e1d57f278 <col:29> 'int' 0
