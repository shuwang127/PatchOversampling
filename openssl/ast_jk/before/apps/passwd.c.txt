TranslationUnitDecl 0x20808daee48 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x20808daf6e0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x20808daf3e0 '__int128'
|-TypedefDecl 0x20808daf750 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x20808daf400 'unsigned __int128'
|-TypedefDecl 0x20808dafa88 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x20808daf840 'struct __NSConstantString_tag'
|   `-Record 0x20808daf7a8 '__NSConstantString_tag'
|-TypedefDecl 0x20808dafaf8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x20808daf020 'unsigned long long'
|-TypedefDecl 0x20808dafb90 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x20808dafb50 'char *'
|   `-BuiltinType 0x20808daeee0 'char'
|-TypedefDecl 0x20808dafc00 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x20808dafb50 'char *'
|   `-BuiltinType 0x20808daeee0 'char'
|-TypedefDecl 0x20808dafcc0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x20808daf020 'unsigned long long'
|-TypedefDecl 0x20808dafd30 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x20808dafb50 'char *'
|   `-BuiltinType 0x20808daeee0 'char'
|-FunctionDecl 0x2080a86d400 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2080a86d4a0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x2080a86d510 <col:21> Implicit
|-FunctionDecl 0x2080a86d568 prev 0x2080a86d400 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2080a86d290 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x2080a86d658 <col:21> Inherited Implicit
|-TypedefDecl 0x2080a86d698 prev 0x20808dafaf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x20808daf020 'unsigned long long'
|-TypedefDecl 0x2080a86d740 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x2080a86d710 'size_t' sugar
|   |-Typedef 0x2080a86d698 'size_t'
|   `-BuiltinType 0x20808daf020 'unsigned long long'
|-TypedefDecl 0x2080a86d7b0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x20808daef80 'long long'
|-TypedefDecl 0x2080a86d820 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x20808daef80 'long long'
|-TypedefDecl 0x2080a86d890 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x20808daefc0 'unsigned short'
|-TypedefDecl 0x2080a86d900 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x20808daefc0 'unsigned short'
|-TypedefDecl 0x2080a86d970 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x20808daefc0 'unsigned short'
|-TypedefDecl 0x2080a86d9e0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x20808daef40 'int'
|-TypedefDecl 0x2080a86da50 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x20808daef60 'long'
|-TypedefDecl 0x2080a86dac0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x20808daef80 'long long'
|-TypedefDecl 0x2080a86db50 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x2080a86db20 '__time64_t' sugar
|   |-Typedef 0x2080a86dac0 '__time64_t'
|   `-BuiltinType 0x20808daef80 'long long'
|-FunctionDecl 0x2080a86dcc8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x2080a86dee8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x2080a8a4570 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x2080a86e028 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x2080a86e0a0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x2080a86e118 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x2080a86e198 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x2080a8a4310 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x2080a8a4650 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x2080a8a4710 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x2080a8a4880 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x2080a8a4830 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x2080a8a47d0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x2080a8a46f0 'struct threadlocaleinfostruct'
|       `-Record 0x2080a8ab380 'threadlocaleinfostruct'
|-TypedefDecl 0x2080a8a4990 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x2080a8a4940 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x2080a8a48e0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x2080a8a47b0 'struct threadmbcinfostruct'
|       `-Record 0x2080a8a4710 'threadmbcinfostruct'
|-RecordDecl 0x2080a8a49e8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x2080a8a4aa0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x2080a8a4b60 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2080a8a4bf0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x2080a8a4c80 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x2080a8a4d38 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x2080a8a4ce0 'struct localeinfo_struct' sugar
|   `-RecordType 0x2080a8a4b40 'struct localeinfo_struct'
|     `-Record 0x2080a8a4aa0 'localeinfo_struct'
|-TypedefDecl 0x2080a8a4e10 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x2080a8a4dc0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x2080a8a4ce0 'struct localeinfo_struct' sugar
|     `-RecordType 0x2080a8a4b40 'struct localeinfo_struct'
|       `-Record 0x2080a8a4aa0 'localeinfo_struct'
|-RecordDecl 0x2080a8a4e88 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x2080a8a4f40 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2080a8a4fb8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x2080a8a5078 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x2080a8a5110 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x2080a8a5180 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x2080a8a5238 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x2080a8a51e0 'struct localerefcount' sugar
|   `-RecordType 0x2080a8a4f20 'struct localerefcount'
|     `-Record 0x2080a8a4e88 'localerefcount'
|-RecordDecl 0x2080a8ab380 prev 0x2080a8a4650 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x2080a8ab400 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2080a8ab478 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x2080a8ab4e8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x2080a8ab558 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x2080a8ab5c8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x2080a8ab788 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x2080a8ab7f8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x2080a8ab868 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x2080a8ab8d8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x2080a8ab948 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x2080a8ab9b8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x2080a8aba10 parent 0x20808daee48 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x2080a8abba0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x2080a8abc10 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x2080a8abc80 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x2080a8abcf0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x2080a8abd90 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x2080a8abe00 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x2080a8abf10 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x2080a8ac048 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x2080a8ac0f8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x2080a8ac0a0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x2080a8a46f0 'struct threadlocaleinfostruct'
|     `-Record 0x2080a8ab380 'threadlocaleinfostruct'
|-FunctionDecl 0x2080a8b8660 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x2080a8ac180 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x2080a8ac230 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x2080a8ac2b0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x2080a8b8450 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2080a8b8a28 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x2080a8b8ac8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2080a8b8b30 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x2080a8b8b98 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2080a8b8c18 prev 0x2080a8b8a28 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x2080a8b8750 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x2080a8b87d0 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x2080a8b8848 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2080a8b8fd8 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x2080a8b8d00 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x2080a8b8d80 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x2080a8b8df8 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2080a8b94b0 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x2080a8b90c0 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x2080a8b9140 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x2080a8b91b8 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2080a8b9250 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2080a8b97b8 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2080a8b9858 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2080a8b98c0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2080a8b9928 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2080a8b99a8 prev 0x2080a8b97b8 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x2080a8b95a0 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x2080a8b9620 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x2080a8b9698 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2080a8b9d68 <line:55:17> col:17 implicit memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2080a8b9e08 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2080a8b9e70 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2080a8b9ed8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2080a8b9f58 prev 0x2080a8b9d68 <col:1, col:127> col:17 memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x2080a8b9a90 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x2080a8b9b10 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x2080a8b9b88 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2080a8b3400 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x2080a8ba068 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x2080a8ba100 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2080a8ba180 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x2080a8ba1f8 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2080a8b37c8 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x2080a8b3868 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2080a8b38d0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x2080a8b3938 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2080a8b39b8 prev 0x2080a8b37c8 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x2080a8b34f0 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x2080a8b3570 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x2080a8b35e8 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2080a8b3e38 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x2080a8b3ed8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2080a8b3f40 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2080a8b3fa8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x2080a8b4010 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2080a8b4098 prev 0x2080a8b3e38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x2080a8b3b80 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x2080a8b3c00 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x2080a8b3c80 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x2080a8b3cf8 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2080a8b4158 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x2080a8b45a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x2080a8b4320 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x2080a8b4410 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x2080a8b4488 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2080a8b4660 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x2080a8b4a50 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x2080a8b4788 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x2080a8b4800 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2080a8b4880 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x2080a8b4e20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x2080a8b4c30 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x2080a8b4cb0 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x2080a8b4ed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2080a8b52e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x2080a8b5018 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x2080a8b5090 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2080a8b5110 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x2080a8ba730 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x2080a8ba7d0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x2080a8ba838 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2080a8ba8b0 prev 0x2080a8ba730 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x2080a8ba548 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x2080a8ba5c8 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x2080a8ba960 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2080a8bacb8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x2080a8baaa8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x2080a8bab20 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2080a8baba0 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x2080a8bafe0 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x2080a8bb080 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x2080a8bb0e8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2080a8bb160 prev 0x2080a8bafe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x2080a8bae60 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x2080a8baee0 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x2080a8bb210 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2080a8bb550 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x2080a8bb5f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2080a8bb658 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2080a8bb6d0 prev 0x2080a8bb550 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x2080a8bb358 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x2080a8bb3d8 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x2080a8bb920 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x2080a8bb9c0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2080a8bba30 prev 0x2080a8bb920 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x2080a8bb7b0 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x2080a8bbd28 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x2080a8bbb08 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x2080a8bbb80 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2080a8bbf78 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x2080a8bbe08 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x2080a8bbe80 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x2080a8bc2a8 <line:131:1, line:133:1>
|   `-ReturnStmt 0x2080a8bc298 <line:132:5, col:51>
|     `-ConditionalOperator 0x2080a8bc268 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x2080a8bc0d8 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x2080a8bc0b8 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x2080a8bc088 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x2080a8bc040 <col:13> 'const char *' lvalue ParmVar 0x2080a8bbe08 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x2080a8bc0a0 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x2080a8bc060 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x2080a8bc250 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x2080a8bc0f8 <col:24> 'int' 0
|       `-CallExpr 0x2080a8bc1f0 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x2080a8bc1d8 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x2080a8bc120 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x2080a8bbd28 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x2080a8bc220 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x2080a8bc140 <col:36> 'const char *' lvalue ParmVar 0x2080a8bbe08 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x2080a8bc238 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x2080a8bc160 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x2080a8bbe80 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x2080a8b5558 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x2080a8bc2d8 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x2080a8bc350 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2080a8bc3d0 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x2080a8b5420 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2080a8b5860 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2080a8b5900 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2080a8b5968 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2080a8b59d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2080a8b5a50 prev 0x2080a8b5860 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x2080a8b5648 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x2080a8b56c8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x2080a8b5740 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2080a8b5c88 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x2080a8b5b38 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x2080a8b5f50 <line:152:54> col:54 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x2080a8b5ff0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2080a8b6058 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2080a8b60d0 prev 0x2080a8b5f50 <col:38, col:100> col:54 used strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x2080a8b5d60 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x2080a8b5de0 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x2080a8b6330 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2080a8b61b0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x2080a8b6230 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x2080a8bc610 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2080a8bc490 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x2080a8bc510 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x2080a8bc9c8 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x2080a8bc6f0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x2080a8bc770 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x2080a8bc7e8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2080a8bcc30 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2080a8bcab0 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x2080a8bcb30 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x2080a8bcf28 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x2080a8bcd10 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x2080a8bcd90 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x2080a8bce08 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2080a8bd190 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2080a8bd010 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x2080a8bd090 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x2080a8bd4a0 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x2080a8bd270 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x2080a8bd2f0 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x2080a8bd368 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2080a8bd858 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2080a8bd588 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2080a8bd608 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x2080a8bd680 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2080a8bdcc0 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2080a8bd940 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2080a8bd9c0 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x2080a8bda38 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2080a8bdab0 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2080a8bdfc8 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2080a8bddb0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2080a8bde30 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x2080a8bdea8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2080a8be360 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2080a8be0b0 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x2080a8be130 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x2080a8be1a8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2080a8be220 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2080a8b6658 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x2080a8b66f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2080a8b6760 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2080a8b67d8 prev 0x2080a8b6658 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x2080a8b6430 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x2080a8b64b0 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x2080a8b6a90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x2080a8b69b0 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x2080a8b6b38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2080a8b6f10 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x2080a8b6c80 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x2080a8b6cf8 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2080a8b6d78 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x2080a8b7228 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x2080a8b72c8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2080a8b7338 prev 0x2080a8b7228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x2080a8b70f0 <col:90> col:93 'int'
| `-DeprecatedAttr 0x2080a8b73e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2080a8be7c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x2080a8be5b0 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x2080a8be628 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2080a8be6a8 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x2080a8beac8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x2080a8be8a8 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x2080a8be920 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2080a8bedb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2080a8bec68 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x2080a8bee60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2080a8bf270 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2080a8befa8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x2080a8bf020 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2080a8bf098 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2080a8c26a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x2080a8bf418 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x2080a8c24f0 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2080a8c2750 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2080a8c2c08 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x2080a8c2898 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x2080a8c2910 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2080a8c2990 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x2080a8c2a08 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2080a8c3088 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2080a8c3128 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2080a8c3190 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2080a8c31f8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2080a8c3278 prev 0x2080a8c3088 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2080a8c2db8 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x2080a8c2e38 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x2080a8c2eb0 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2080a8c3330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2080a8bf670 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2080a8bf710 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2080a8bf778 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2080a8bf7e0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2080a8bf860 prev 0x2080a8bf670 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2080a8c3478 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x2080a8bf4d8 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x2080a8bf550 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2080a8bfb60 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2080a8bf948 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x2080a8bf9c8 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x2080a8bfa40 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2080a8bfef8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2080a8bfc48 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2080a8bfcc8 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x2080a8bfd40 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2080a8bfdb8 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2080a8c0290 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x2080a8bffe8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x2080a8c0060 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2080a8c00e0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x2080a8c0158 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2080a8c0668 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2080a8c0708 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2080a8c0770 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2080a8c07d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2080a8c0858 prev 0x2080a8c0668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2080a8c0440 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x2080a8c04d0 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x2080a8c0548 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2080a8c0910 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2080a8c0dc8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x2080a8c0a58 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x2080a8c0ad0 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2080a8c0b50 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x2080a8c0bc8 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2080a8c1248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x2080a8c0f78 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x2080a8c0ff8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x2080a8c1070 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2080a8c1300 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2080a8c1650 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x2080a8c16f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2080a8c1758 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2080a8c17d0 prev 0x2080a8c1650 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x2080a8c1448 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x2080a8c14e0 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x2080a8c1a30 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x2080a8c1ad0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2080a8c1b38 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2080a8c1bb0 prev 0x2080a8c1a30 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x2080a8c18b0 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x2080a8c1930 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x2080a8c1d70 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x2080a8c1c90 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x2080a8c1fc0 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x2080a8c2060 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2080a8c20c8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2080a8c2140 prev 0x2080a8c1fc0 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x2080a8c1e48 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x2080a8c1ec8 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x2080a8c23a0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x2080a8c2440 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2080a93c060 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2080a93c0d8 prev 0x2080a8c23a0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x2080a8c2220 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x2080a8c22a0 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x2080a93c3f8 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x2080a93c498 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x2080a93c500 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2080a93c578 prev 0x2080a93c3f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x2080a93c278 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x2080a93c2f8 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x2080a93c628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2080a93ca08 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x2080a93c770 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x2080a93c7f0 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x2080a93c870 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x2080a93cc60 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x2080a93caf0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x2080a93cb68 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2080a93cee0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2080a93ce00 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x2080a93cf88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2080a937318 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2080a937110 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x2080a937188 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2080a937200 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2080a937638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x2080a9374c0 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x2080a937538 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2080a9376e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2080a937b00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2080a937ba0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2080a937c08 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2080a937c70 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2080a937cf0 prev 0x2080a937b00 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2080a937830 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x2080a9378b0 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x2080a937928 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2080a938158 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2080a937dd8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x2080a937e58 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x2080a937ed0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2080a937f48 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2080a938400 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x2080a9384a0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2080a938510 prev 0x2080a938400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x2080a938320 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x2080a9385b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x2080a938900 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2080a938780 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x2080a938800 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x2080a9389b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x2080a938cf8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2080a938b78 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x2080a938bf8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x2080a938da8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x2080a939068 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2080a938f70 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x2080a939110 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x2080a939528 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2080a939310 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x2080a939390 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x2080a939408 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2080a9395e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x2080a9399c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x2080a9397a8 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x2080a939828 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x2080a9398a0 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2080a939a78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x2080a939d20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2080a939c40 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x2080a939dc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x2080a936100 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x2080a939f90 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x2080a936000 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x2080a9361b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x2080a936458 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2080a936378 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x2080a936500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x2080a936790 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x2080a936620 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x2080a936b20 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x2080a936860 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2080a9368d8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2080a936950 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x2080a936ed8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2080a936cc0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2080a936d38 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x2080a936f88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2080a93f3a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x2080a93f448 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2080a93f4b0 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x2080a93f528 prev 0x2080a93f3a8 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x2080a93f188 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2080a93f200 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2080a93f820 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x2080a93f8c0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2080a93f928 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x2080a93f9a0 prev 0x2080a93f820 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x2080a93f600 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2080a93f678 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x2080a93fc80 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x2080a93fa78 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2080a93faf0 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2080a93fb68 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x2080a93ff90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2080a93fe20 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2080a93fe98 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x2080a940040 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2080a93d388 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2080a93d168 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2080a93d1e0 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x2080a93d5d0 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x2080a93d670 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x2080a93d6e0 prev 0x2080a93d5d0 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x2080a93d460 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x2080a93d9c8 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x2080a93d7b0 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2080a93d828 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2080a93dc10 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x2080a93daa0 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x2080a93db18 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x2080a93dfa8 <line:306:1, line:308:1>
|   `-ReturnStmt 0x2080a93df98 <line:307:5, col:56>
|     `-ConditionalOperator 0x2080a93df68 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x2080a93ddd0 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x2080a93ddb0 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x2080a93dd80 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x2080a93dcd8 <col:13> 'const wchar_t *' lvalue ParmVar 0x2080a93daa0 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x2080a93dd98 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x2080a93dd60 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x2080a93dd38 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x2080a93dcf8 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x2080a93df50 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x2080a93ddf0 <col:29> 'int' 0
|       `-CallExpr 0x2080a93def0 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x2080a93ded8 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x2080a93de18 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x2080a93d9c8 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x2080a93df20 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x2080a93de38 <col:41> 'const wchar_t *' lvalue ParmVar 0x2080a93daa0 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x2080a93df38 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x2080a93de58 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x2080a93db18 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x2080a93a338 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x2080a93dfd0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2080a93a040 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2080a93a0b8 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2080a93a130 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2080a93a7a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2080a93a4e0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2080a93a558 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x2080a93a5d0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2080a93a858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2080a93ac68 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x2080a93ad08 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x2080a93ad70 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2080a93add8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2080a93ae58 prev 0x2080a93ac68 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x2080a93a998 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2080a93aa10 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2080a93aa88 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2080a940250 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x2080a93af38 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2080a93afb0 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2080a9400a0 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2080a940118 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2080a940600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2080a9403f8 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2080a940470 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x2080a9404e8 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2080a9406b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2080a940a18 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2080a9407f8 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2080a940870 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x2080a940c60 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x2080a940af0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2080a940b68 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2080a940ea8 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2080a940d38 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2080a940db0 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x2080a941110 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2080a940f80 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2080a940ff8 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x2080a941418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2080a9412a8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x2080a941320 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x2080a9414c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2080a941930 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x2080a941608 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x2080a941680 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x2080a941760 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x2080a941c50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x2080a941ad8 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x2080a941cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2080a93b0c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x2080a941e38 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x2080a941eb0 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2080a941f30 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x2080a93b370 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x2080a93b298 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x2080a93b418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2080a93b7e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x2080a93b558 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x2080a93b5d0 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2080a93b648 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x2080a93ba38 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2080a93b8c0 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2080a93b938 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x2080a93bdd8 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2080a93bb10 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2080a93bb88 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2080a93bc00 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2080a946188 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2080a93beb8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2080a93bf30 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2080a93bfa8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2080a9465e0 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2080a946268 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2080a9462e0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2080a946358 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2080a9463d0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2080a946a38 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x2080a9466c8 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2080a946740 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2080a9467b8 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2080a946830 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2080a946ea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x2080a946be0 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x2080a946c58 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x2080a946cd0 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2080a946f58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2080a945200 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x2080a947098 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x2080a945590 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x2080a9452d0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2080a945348 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2080a9453c0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x2080a945948 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x2080a945730 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x2080a9457a8 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x2080a9459f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2080a945d58 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2080a945b38 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x2080a945bb0 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2080a945fc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2080a945ef0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x2080a946070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2080a9474d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2080a947208 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x2080a947280 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2080a9472f8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2080a947888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2080a947670 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x2080a9476e8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2080a947938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2080a947be8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2080a947a78 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x2080a947af0 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2080a947e58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2080a947d80 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x2080a947f00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2080a944270 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2080a948040 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x2080a9440e0 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2080a944158 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2080a944580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2080a944410 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x2080a944488 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2080a944630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2080a944a30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2080a944770 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2080a9447e8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2080a944860 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2080a944e78 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2080a944b10 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2080a944b88 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2080a944c00 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2080a944c78 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2080a948120 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2080a944f60 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2080a944fd8 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x2080a948408 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2080a9481f8 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2080a948270 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2080a9482e8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2080a948660 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2080a9484e8 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2080a948560 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x2080a948948 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2080a948738 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2080a9487b0 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2080a948828 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2080a948c38 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2080a948a28 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2080a948aa0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2080a948b18 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2080a948fc0 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2080a948d18 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2080a948d90 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2080a948e08 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2080a948e80 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2080a9492c8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2080a9490a8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2080a949130 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2080a9491a8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2080a949650 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2080a9493a8 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2080a949420 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2080a949498 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2080a949510 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2080a9498b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x2080a9497d8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x2080a949958 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x2080a949c90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2080a949b18 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2080a949b90 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x2080a949d40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x2080a9430d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2080a949f00 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2080a949f78 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2080a949ff0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2080a943188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x2080a943550 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x2080a943348 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x2080a9433c0 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x2080a943438 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2080a943608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x2080a9438a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2080a9437c8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x2080a943948 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x2080a943c78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x2080a943b08 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x2080a943b80 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x2080a943d28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x2080a943fc0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2080a943ee8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x2080a944068 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x2080a94b3a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2080a94b2c8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x2080a94b448 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x2080a94b780 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2080a94b608 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2080a94b680 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x2080a94b830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x2080a94bc20 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:35:9, col:112> col:22 used _wassert 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
| |-ParmVarDecl 0x2080a94b950 <col:38, col:54> col:54 _Message 'const wchar_t *'
| |-ParmVarDecl 0x2080a94b9c8 <col:71, col:86> col:86 _File 'const wchar_t *'
| `-ParmVarDecl 0x2080a94ba48 <col:98, col:107> col:107 _Line 'unsigned int'
|-TypedefDecl 0x2080a94bd08 <D:\Microsoft Visual Studio 12.0\VC\include\signal.h:28:1, col:13> col:13 sig_atomic_t 'int'
| `-BuiltinType 0x20808daef40 'int'
|-FunctionDecl 0x2080a94bec0 <line:88:1, col:45> col:25 __pxcptinfoptrs 'void **(void) __attribute__((cdecl))':'void **(void)' extern
|-FunctionDecl 0x2080a9524d0 <line:94:9, col:100> col:33 signal 'void (*(int, void (*)(int) __attribute__((cdecl))))(int) __attribute__((cdecl)) __attribute__((cdecl))'
| |-ParmVarDecl 0x2080a94bf90 <col:45, col:49> col:49 _SigNum 'int'
| `-ParmVarDecl 0x2080a952258 <col:67, col:83> col:83 _Func 'void (*)(int) __attribute__((cdecl))'
|-FunctionDecl 0x2080a9526f8 <line:97:9, col:43> col:21 raise 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2080a9525b0 <col:32, col:36> col:36 _SigNum 'int'
|-FunctionDecl 0x2080a952960 <.//openssl//file_jk/before\apps/apps.h:43:1, col:55> col:5 app_RAND_load_file 'int (const char *, int)'
| |-ParmVarDecl 0x2080a9527d0 <col:24, col:36> col:36 file 'const char *'
| `-ParmVarDecl 0x2080a952850 <col:42, col:46> col:46 dont_warn 'int'
|-FunctionDecl 0x2080a952b20 <line:44:1, col:41> col:5 app_RAND_write_file 'int (const char *)'
| `-ParmVarDecl 0x2080a952a40 <col:25, col:37> col:37 file 'const char *'
|-FunctionDecl 0x2080a952c78 <line:48:1, col:36> col:6 app_RAND_allow_write_file 'void (void)'
|-FunctionDecl 0x2080a952e30 <line:49:1, col:36> col:6 app_RAND_load_files 'long (char *)'
| `-ParmVarDecl 0x2080a952d48 <col:26, col:32> col:32 file 'char *'
|-VarDecl 0x2080a952f08 <line:54:1, col:14> col:14 default_config_file 'char *' extern
|-VarDecl 0x2080a952fa0 <line:55:1, col:13> col:13 invalid bio_in 'int *' extern
|-VarDecl 0x2080a953020 <line:56:1, col:13> col:13 invalid bio_out 'int *' extern
|-VarDecl 0x2080a9530a0 <line:57:1, col:13> col:13 invalid bio_err 'int *' extern
|-FunctionDecl 0x2080a94e1e0 <line:58:1, col:27> col:6 invalid dup_bio_in 'int *(int)'
| `-ParmVarDecl 0x2080a953120 <col:17, col:21> col:21 format 'int'
|-FunctionDecl 0x2080a94e350 <line:59:1, col:28> col:6 invalid dup_bio_out 'int *(int)'
| `-ParmVarDecl 0x2080a94e2a0 <col:18, col:22> col:22 format 'int'
|-FunctionDecl 0x2080a94e4c0 <line:60:1, col:28> col:6 invalid dup_bio_err 'int *(int)'
| `-ParmVarDecl 0x2080a94e410 <col:18, col:22> col:22 format 'int'
|-FunctionDecl 0x2080a94e7b0 <line:61:1, col:66> col:6 invalid bio_open_owner 'int *(const char *, int, int)'
| |-ParmVarDecl 0x2080a94e580 <col:21, col:33> col:33 filename 'const char *'
| |-ParmVarDecl 0x2080a94e600 <col:43, col:47> col:47 format 'int'
| `-ParmVarDecl 0x2080a94e680 <col:55, col:59> col:59 private 'int'
|-FunctionDecl 0x2080a94eab0 <line:62:1, col:66> col:6 invalid bio_open_default 'int *(const char *, char, int)'
| |-ParmVarDecl 0x2080a94e880 <col:23, col:35> col:35 filename 'const char *'
| |-ParmVarDecl 0x2080a94e8f8 <col:45, col:50> col:50 mode 'char'
| `-ParmVarDecl 0x2080a94e978 <col:56, col:60> col:60 format 'int'
|-FunctionDecl 0x2080a94ed68 <line:63:1, col:72> col:6 invalid bio_open_default_quiet 'int *(const char *, char, int)'
| |-ParmVarDecl 0x2080a94eb80 <col:29, col:41> col:41 filename 'const char *'
| |-ParmVarDecl 0x2080a94ebf8 <col:51, col:56> col:56 mode 'char'
| `-ParmVarDecl 0x2080a94ec78 <col:62, col:66> col:66 format 'int'
|-FunctionDecl 0x2080a94ef20 <line:64:1, col:43> col:7 invalid app_load_config 'int *(const char *)'
| `-ParmVarDecl 0x2080a94ee38 <col:23, col:35> col:35 filename 'const char *'
|-FunctionDecl 0x2080a94f090 <line:65:1, col:49> col:7 invalid app_load_config_quiet 'int *(const char *)'
| `-ParmVarDecl 0x2080a94efe0 <col:29, col:41> col:41 filename 'const char *'
|-FunctionDecl 0x2080a94d240 <line:66:1, col:40> col:5 invalid app_load_modules 'int (const int *)'
| `-ParmVarDecl 0x2080a94d170 <col:22, col:34> col:34 invalid config 'const int *'
|-FunctionDecl 0x2080a94d3c8 <line:67:1, col:23> col:6 invalid unbuffer 'void (int *)'
| `-ParmVarDecl 0x2080a94d300 <col:15, col:21> col:21 invalid fp 'int *'
|-FunctionDecl 0x2080a94d518 <line:68:1, col:27> col:6 invalid wait_for_async 'void (int *)'
| `-ParmVarDecl 0x2080a94d488 <col:21, col:26> col:26 invalid s 'int *'
|-FunctionDecl 0x2080a94d698 <line:73:1, col:52> col:6 invalid corrupt_signature 'void (const int *)'
| `-ParmVarDecl 0x2080a94d5d8 <col:24, col:43> col:43 invalid signature 'const int *'
|-FunctionDecl 0x2080a94d9d0 <line:74:1, line:75:28> line:74:5 invalid set_cert_times 'int (int *, const char *, const char *, int)'
| |-ParmVarDecl 0x2080a94d758 <col:20, col:26> col:26 invalid x 'int *'
| |-ParmVarDecl 0x2080a94d7d8 <col:29, col:41> col:41 startdate 'const char *'
| |-ParmVarDecl 0x2080a94d858 <col:52, col:64> col:64 enddate 'const char *'
| `-ParmVarDecl 0x2080a94d8d8 <line:75:20, col:24> col:24 days 'int'
|-VarDecl 0x2080a94db08 <line:291:1, col:32> col:19 OPT_HELP_STR 'const char []' extern
|-VarDecl 0x2080a94dba8 <line:292:1, col:32> col:19 OPT_MORE_STR 'const char []' extern
|-RecordDecl 0x2080a94dc28 <line:293:9, line:304:1> line:293:16 struct options_st definition
| |-FieldDecl 0x2080a94dcf8 <line:294:5, col:17> col:17 name 'const char *'
| |-FieldDecl 0x2080a94dd68 <line:295:5, col:9> col:9 retval 'int'
| |-FieldDecl 0x2080a94ddd8 <line:302:5, col:9> col:9 valtype 'int'
| `-FieldDecl 0x2080a94de48 <line:303:5, col:17> col:17 helpstr 'const char *'
|-TypedefDecl 0x2080a94def8 <line:293:1, line:304:3> col:3 referenced OPTIONS 'struct options_st':'struct options_st'
| `-ElaboratedType 0x2080a94dea0 'struct options_st' sugar
|   `-RecordType 0x2080a94dcc0 'struct options_st'
|     `-Record 0x2080a94dc28 'options_st'
|-RecordDecl 0x2080a94df68 <line:311:9, line:314:1> line:311:16 struct string_int_pair_st definition
| |-FieldDecl 0x2080a94e038 <line:312:5, col:17> col:17 name 'const char *'
| `-FieldDecl 0x2080a94e0a8 <line:313:5, col:9> col:9 retval 'int'
|-TypedefDecl 0x2080a8fcfc0 <line:311:1, line:314:3> col:3 referenced OPT_PAIR 'struct string_int_pair_st':'struct string_int_pair_st'
| `-ElaboratedType 0x2080a94e100 'struct string_int_pair_st' sugar
|   `-RecordType 0x2080a94e000 'struct string_int_pair_st'
|     `-Record 0x2080a94df68 'string_int_pair_st'
|-TypedefDecl 0x2080a8fd038 <line:311:1, line:314:13> col:13 STRINT_PAIR 'struct string_int_pair_st':'struct string_int_pair_st'
| `-ElaboratedType 0x2080a94e100 'struct string_int_pair_st' sugar
|   `-RecordType 0x2080a94e000 'struct string_int_pair_st'
|     `-Record 0x2080a94df68 'string_int_pair_st'
|-FunctionDecl 0x2080a8fd178 <line:334:1, col:37> col:7 opt_progname 'char *(const char *)'
| `-ParmVarDecl 0x2080a8fd0c8 <col:20, col:32> col:32 argv0 'const char *'
|-FunctionDecl 0x2080a8fd300 <line:335:1, col:23> col:7 opt_getprog 'char *(void)'
|-FunctionDecl 0x2080a8fd6c0 <line:336:1, col:52> col:7 used opt_init 'char *(int, char **, const OPTIONS *)'
| |-ParmVarDecl 0x2080a8fd3d0 <col:16, col:20> col:20 ac 'int'
| |-ParmVarDecl 0x2080a8fd450 <col:24, col:31> col:31 av 'char **'
| `-ParmVarDecl 0x2080a8fd548 <col:35, col:51> col:51 o 'const OPTIONS *'
|-FunctionDecl 0x2080a8fd860 <line:337:1, col:18> col:5 used opt_next 'int (void)'
|-FunctionDecl 0x2080a8fdb60 <line:338:1, col:63> col:5 opt_format 'int (const char *, unsigned long, int *)'
| |-ParmVarDecl 0x2080a8fd930 <col:16, col:28> col:28 s 'const char *'
| |-ParmVarDecl 0x2080a8fd9b0 <col:31, col:45> col:45 flags 'unsigned long'
| `-ParmVarDecl 0x2080a8fda30 <col:52, col:57> col:57 result 'int *'
|-FunctionDecl 0x2080a8fddd0 <line:339:1, col:41> col:5 opt_int 'int (const char *, int *)'
| |-ParmVarDecl 0x2080a8fdc48 <col:13, col:25> col:25 arg 'const char *'
| `-ParmVarDecl 0x2080a8fdcc8 <col:30, col:35> col:35 result 'int *'
|-FunctionDecl 0x2080a8fc0c0 <line:340:1, col:53> col:5 opt_ulong 'int (const char *, unsigned long *)'
| |-ParmVarDecl 0x2080a8fdeb0 <col:15, col:27> col:27 arg 'const char *'
| `-ParmVarDecl 0x2080a8fbfb0 <col:32, col:47> col:47 result 'unsigned long *'
|-FunctionDecl 0x2080a8fc360 <line:341:1, col:43> col:5 opt_long 'int (const char *, long *)'
| |-ParmVarDecl 0x2080a8fc1a0 <col:14, col:26> col:26 arg 'const char *'
| `-ParmVarDecl 0x2080a8fc250 <col:31, col:37> col:37 result 'long *'
|-FunctionDecl 0x2080a8fc730 <line:352:1, col:66> col:5 opt_pair 'int (const char *, const OPT_PAIR *, int *)'
| |-ParmVarDecl 0x2080a8fc440 <col:14, col:26> col:26 arg 'const char *'
| |-ParmVarDecl 0x2080a8fc538 <col:31, col:48> col:48 pairs 'const OPT_PAIR *'
| `-ParmVarDecl 0x2080a8fc5b8 <col:55, col:60> col:60 result 'int *'
|-FunctionDecl 0x2080a8fc9a0 <line:353:1, col:60> col:5 invalid opt_cipher 'int (const char *, const int **)'
| |-ParmVarDecl 0x2080a8fc818 <col:16, col:28> col:28 name 'const char *'
| `-ParmVarDecl 0x2080a8fc8c8 <col:34, col:53> col:53 invalid cipherp 'const int **'
|-FunctionDecl 0x2080a8fcb90 <line:354:1, col:48> col:5 invalid opt_md 'int (const char *, const int **)'
| |-ParmVarDecl 0x2080a8fca68 <col:12, col:24> col:24 name 'const char *'
| `-ParmVarDecl 0x2080a8fcaf0 <col:30, col:45> col:45 invalid mdp 'const int **'
|-FunctionDecl 0x2080a8fcce0 <line:355:1, col:19> col:7 used opt_arg 'char *(void)'
|-FunctionDecl 0x2080a8fce38 <line:356:1, col:20> col:7 opt_flag 'char *(void)'
|-FunctionDecl 0x2080a8fdfd0 <line:357:1, col:23> col:7 opt_unknown 'char *(void)'
|-FunctionDecl 0x2080a8fe128 <line:358:1, col:21> col:7 opt_reset 'char *(void)'
|-FunctionDecl 0x2080a8fe2b0 <line:359:1, col:21> col:8 used opt_rest 'char **(void)'
|-FunctionDecl 0x2080a8fe408 <line:360:1, col:22> col:5 used opt_num_rest 'int (void)'
|-FunctionDecl 0x2080a8fe630 <line:361:1, col:45> col:5 invalid opt_verify 'int (int, int *)'
| |-ParmVarDecl 0x2080a8fe4d8 <col:16, col:20> col:20 i 'int'
| `-ParmVarDecl 0x2080a8fe558 <col:23, col:42> col:42 invalid vpm 'int *'
|-FunctionDecl 0x2080a8fe7f8 <line:362:1, col:35> col:6 used opt_help 'void (const OPTIONS *)'
| `-ParmVarDecl 0x2080a8fe6f0 <col:15, col:31> col:31 list 'const OPTIONS *'
|-FunctionDecl 0x2080a8fea60 <line:363:1, col:56> col:5 opt_format_error 'int (const char *, unsigned long)'
| |-ParmVarDecl 0x2080a8fe8d0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x2080a8fe950 <col:37, col:51> col:51 flags 'unsigned long'
|-RecordDecl 0x2080a8feb28 <line:365:9, line:369:1> line:365:16 struct args_st definition
| |-FieldDecl 0x2080a8febf8 <line:366:5, col:9> col:9 size 'int'
| |-FieldDecl 0x2080a8fec68 <line:367:5, col:9> col:9 argc 'int'
| `-FieldDecl 0x2080a8fecd8 <line:368:5, col:12> col:12 argv 'char **'
|-TypedefDecl 0x2080a8fed88 <line:365:1, line:369:3> col:3 referenced ARGS 'struct args_st':'struct args_st'
| `-ElaboratedType 0x2080a8fed30 'struct args_st' sugar
|   `-RecordType 0x2080a8febc0 'struct args_st'
|     `-Record 0x2080a8feb28 'args_st'
|-FunctionDecl 0x2080a8fb050 <line:376:1, col:41> col:8 copy_argv 'char **(int *, char **)'
| |-ParmVarDecl 0x2080a8fee10 <col:18, col:23> col:23 argc 'int *'
| `-ParmVarDecl 0x2080a8fef00 <col:29, col:40> col:35 argv 'char **':'char **'
|-FunctionDecl 0x2080a8fb398 <line:381:1, col:45> col:6 win32_utf8argv 'void (int *, char ***)'
| |-ParmVarDecl 0x2080a8fb130 <col:21, col:26> col:26 argc 'int *'
| `-ParmVarDecl 0x2080a8fb250 <col:32, col:44> col:39 argv 'char ***':'char ***'
|-RecordDecl 0x2080a8fb460 <line:385:9, line:388:1> line:385:16 struct pw_cb_data definition
| |-FieldDecl 0x2080a8fb538 <line:386:5, col:17> col:17 password 'const void *'
| `-FieldDecl 0x2080a8fb5a8 <line:387:5, col:17> col:17 prompt_info 'const char *'
|-TypedefDecl 0x2080a8fb658 <line:385:1, line:388:3> col:3 referenced PW_CB_DATA 'struct pw_cb_data':'struct pw_cb_data'
| `-ElaboratedType 0x2080a8fb600 'struct pw_cb_data' sugar
|   `-RecordType 0x2080a8fb500 'struct pw_cb_data'
|     `-Record 0x2080a8fb460 'pw_cb_data'
|-FunctionDecl 0x2080a8fba80 <line:390:1, col:77> col:5 password_callback 'int (char *, int, int, PW_CB_DATA *)'
| |-ParmVarDecl 0x2080a8fb6e0 <col:23, col:29> col:29 buf 'char *'
| |-ParmVarDecl 0x2080a8fb760 <col:34, col:38> col:38 bufsiz 'int'
| |-ParmVarDecl 0x2080a8fb7e0 <col:46, col:50> col:50 verify 'int'
| `-ParmVarDecl 0x2080a8fb8d8 <col:58, col:70> col:70 cb_data 'PW_CB_DATA *'
|-FunctionDecl 0x2080a8fbbf8 <line:392:1, col:25> col:5 setup_ui_method 'int (void)'
|-FunctionDecl 0x2080a8fbd48 <line:393:1, col:28> col:6 destroy_ui_method 'void (void)'
|-FunctionDecl 0x2080a908120 <line:395:1, col:37> col:5 chopup_args 'int (ARGS *, char *)'
| |-ParmVarDecl 0x2080a8fbe88 <col:17, col:23> col:23 arg 'ARGS *'
| `-ParmVarDecl 0x2080a8fbf08 <col:28, col:34> col:34 buf 'char *'
|-FunctionDecl 0x2080a908538 <line:401:1, line:402:43> line:401:6 invalid print_bignum_var 'void (int *, const int *, const char *, int, unsigned char *)'
| |-ParmVarDecl 0x2080a908200 <col:23, <invalid sloc>> col:28 invalid 'int *'
| |-ParmVarDecl 0x2080a908280 <col:30, <invalid sloc>> col:44 invalid 'const int *'
| |-ParmVarDecl 0x2080a908300 <col:46, col:56> col:57 'const char *'
| |-ParmVarDecl 0x2080a908380 <line:402:23> col:26 'int'
| `-ParmVarDecl 0x2080a908430 <col:28, col:42> col:43 'unsigned char *'
|-FunctionDecl 0x2080a908888 <line:403:1, col:65> col:6 invalid print_array 'void (int *, const char *, int, const unsigned char *)'
| |-ParmVarDecl 0x2080a908618 <col:18, <invalid sloc>> col:23 invalid 'int *'
| |-ParmVarDecl 0x2080a908698 <col:25, col:36> col:37 'const char *'
| |-ParmVarDecl 0x2080a908718 <col:39> col:42 'int'
| `-ParmVarDecl 0x2080a908798 <col:44, col:64> col:65 'const unsigned char *'
|-FunctionDecl 0x2080a908af0 <line:404:1, col:54> col:5 set_cert_ex 'int (unsigned long *, const char *)'
| |-ParmVarDecl 0x2080a908960 <col:17, col:32> col:32 flags 'unsigned long *'
| `-ParmVarDecl 0x2080a9089e0 <col:39, col:51> col:51 arg 'const char *'
|-FunctionDecl 0x2080a908d20 <line:405:1, col:54> col:5 set_name_ex 'int (unsigned long *, const char *)'
| |-ParmVarDecl 0x2080a908bd0 <col:17, col:32> col:32 flags 'unsigned long *'
| `-ParmVarDecl 0x2080a908c50 <col:39, col:51> col:51 arg 'const char *'
|-FunctionDecl 0x2080a908f90 <line:406:1, col:49> col:5 set_ext_copy 'int (int *, const char *)'
| |-ParmVarDecl 0x2080a908e00 <col:18, col:23> col:23 copy_type 'int *'
| `-ParmVarDecl 0x2080a908e80 <col:34, col:46> col:46 arg 'const char *'
|-FunctionDecl 0x2080a904220 <line:407:1, col:58> col:5 invalid copy_extensions 'int (int *, int *, int)'
| |-ParmVarDecl 0x2080a904030 <col:21, col:27> col:27 invalid x 'int *'
| |-ParmVarDecl 0x2080a9040b0 <col:30, col:40> col:40 invalid req 'int *'
| `-ParmVarDecl 0x2080a904130 <col:45, col:49> col:49 copy_type 'int'
|-FunctionDecl 0x2080a9045d0 <line:408:1, col:78> col:5 app_passwd 'int (const char *, const char *, char **, char **)'
| |-ParmVarDecl 0x2080a9042f0 <col:16, col:28> col:28 arg1 'const char *'
| |-ParmVarDecl 0x2080a904370 <col:34, col:46> col:46 arg2 'const char *'
| |-ParmVarDecl 0x2080a9043f0 <col:52, col:59> col:59 pass1 'char **'
| `-ParmVarDecl 0x2080a904470 <col:66, col:73> col:73 pass2 'char **'
|-FunctionDecl 0x2080a904790 <line:409:1, col:31> col:5 invalid add_oid_section 'int (int *)'
| `-ParmVarDecl 0x2080a9046c0 <col:21, col:27> col:27 invalid conf 'int *'
|-FunctionDecl 0x2080a904a80 <line:410:1, col:71> col:7 invalid load_cert 'int *(const char *, int, const char *)'
| |-ParmVarDecl 0x2080a904850 <col:17, col:29> col:29 file 'const char *'
| |-ParmVarDecl 0x2080a9048d0 <col:35, col:39> col:39 format 'int'
| `-ParmVarDecl 0x2080a904950 <col:47, col:59> col:59 cert_descrip 'const char *'
|-FunctionDecl 0x2080a904ce0 <line:411:1, col:50> col:11 invalid load_crl 'int *(const char *, int)'
| |-ParmVarDecl 0x2080a904b50 <col:20, col:32> col:32 infile 'const char *'
| `-ParmVarDecl 0x2080a904bd0 <col:40, col:44> col:44 format 'int'
|-FunctionDecl 0x2080a9091a0 <line:412:1, line:413:72> line:412:11 invalid load_key 'int *(const char *, int, int, const char *, int *, const char *)'
| |-ParmVarDecl 0x2080a904da8 <col:20, col:32> col:32 file 'const char *'
| |-ParmVarDecl 0x2080a904e28 <col:38, col:42> col:42 format 'int'
| |-ParmVarDecl 0x2080a904ea8 <col:50, col:54> col:54 maybe_stdin 'int'
| |-ParmVarDecl 0x2080a904f28 <line:413:20, col:32> col:32 pass 'const char *'
| |-ParmVarDecl 0x2080a904fa8 <col:38, col:46> col:46 invalid e 'int *'
| `-ParmVarDecl 0x2080a909080 <col:49, col:61> col:61 key_descrip 'const char *'
|-FunctionDecl 0x2080a9095c8 <line:414:1, line:415:75> line:414:11 invalid load_pubkey 'int *(const char *, int, int, const char *, int *, const char *)'
| |-ParmVarDecl 0x2080a909288 <col:23, col:35> col:35 file 'const char *'
| |-ParmVarDecl 0x2080a909308 <col:41, col:45> col:45 format 'int'
| |-ParmVarDecl 0x2080a909388 <col:53, col:57> col:57 maybe_stdin 'int'
| |-ParmVarDecl 0x2080a909408 <line:415:23, col:35> col:35 pass 'const char *'
| |-ParmVarDecl 0x2080a909488 <col:41, col:49> col:49 invalid e 'int *'
| `-ParmVarDecl 0x2080a909508 <col:52, col:64> col:64 key_descrip 'const char *'
|-FunctionDecl 0x2080a9098f0 <line:416:1, line:417:58> line:416:5 invalid load_certs 'int (const char *, int (*)())'
| |-ParmVarDecl 0x2080a9096b0 <col:16, col:28> col:28 file 'const char *'
| `-ParmVarDecl 0x2080a9097d0 <col:34, <invalid sloc>> col:34 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x2080a909ae8 <line:418:1, line:419:57> line:418:5 invalid load_crls 'int (const char *, int (*)())'
| |-ParmVarDecl 0x2080a9099b8 <col:15, col:27> col:27 file 'const char *'
| `-ParmVarDecl 0x2080a909a48 <col:33, <invalid sloc>> col:33 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x2080a909e90 <line:420:1, line:421:52> line:420:13 invalid setup_verify 'int *(const char *, const char *, int, int)'
| |-ParmVarDecl 0x2080a909bb0 <col:26, col:38> col:38 CAfile 'const char *'
| |-ParmVarDecl 0x2080a909c30 <col:46, col:58> col:58 CApath 'const char *'
| |-ParmVarDecl 0x2080a909cb0 <line:421:26, col:30> col:30 noCAfile 'int'
| `-ParmVarDecl 0x2080a909d30 <col:40, col:44> col:44 noCApath 'int'
|-FunctionDecl 0x2080a907270 <line:422:1, line:424:49> line:422:12 invalid ctx_set_verify_locations 'int (int *, const char *, const char *, int, int)'
| |-ParmVarDecl 0x2080a909f68 <col:37, col:46> col:46 invalid ctx 'int *'
| |-ParmVarDecl 0x2080a909fe8 <col:51, col:63> col:63 CAfile 'const char *'
| |-ParmVarDecl 0x2080a907060 <line:423:37, col:49> col:49 CApath 'const char *'
| |-ParmVarDecl 0x2080a9070e0 <col:57, col:61> col:61 noCAfile 'int'
| `-ParmVarDecl 0x2080a907160 <line:424:37, col:41> col:41 noCApath 'int'
|-FunctionDecl 0x2080a907470 <line:433:1, col:66> col:12 invalid ctx_set_ctlog_list_file 'int (int *, const char *)'
| |-ParmVarDecl 0x2080a907350 <col:36, col:45> col:45 invalid ctx 'int *'
| `-ParmVarDecl 0x2080a9073d0 <col:50, col:62> col:62 path 'const char *'
|-FunctionDecl 0x2080a907688 <line:437:1, col:51> col:9 invalid setup_engine 'int *(const char *, int)'
| |-ParmVarDecl 0x2080a907538 <col:22, col:34> col:34 engine 'const char *'
| `-ParmVarDecl 0x2080a9075b8 <col:42, col:46> col:46 debug 'int'
|-FunctionDecl 0x2080a9077e0 <line:438:1, col:30> col:6 invalid release_engine 'void (int *)'
| `-ParmVarDecl 0x2080a907750 <col:21, col:29> col:29 invalid e 'int *'
|-FunctionDecl 0x2080a907cb0 <line:441:1, line:445:49> line:441:16 invalid process_responder 'int *(int *, const char *, const char *, const char *, int, int (*)())'
| |-ParmVarDecl 0x2080a9078a0 <col:34, col:48> col:48 invalid req 'int *'
| |-ParmVarDecl 0x2080a907920 <line:442:34, col:46> col:46 host 'const char *'
| |-ParmVarDecl 0x2080a9079a0 <col:52, col:64> col:64 path 'const char *'
| |-ParmVarDecl 0x2080a907a20 <line:443:34, col:46> col:46 port 'const char *'
| |-ParmVarDecl 0x2080a907aa0 <col:52, col:56> col:56 use_ssl 'int'
| `-ParmVarDecl 0x2080a907b30 <line:444:34, <invalid sloc>> col:34 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x2080a90a130 <line:449:1, line:450:66> line:449:5 invalid unpack_revinfo 'int (int **, int *, int **, int **, const char *)'
| |-ParmVarDecl 0x2080a907dc8 <col:20, col:32> col:32 invalid prevtm 'int **'
| |-ParmVarDecl 0x2080a907e48 <col:40, col:45> col:45 preason 'int *'
| |-ParmVarDecl 0x2080a907ed0 <col:54, col:68> col:68 invalid phold 'int **'
| |-ParmVarDecl 0x2080a907f58 <line:450:20, col:43> col:43 invalid pinvtm 'int **'
| `-ParmVarDecl 0x2080a907fd8 <col:51, col:63> col:63 str 'const char *'
|-RecordDecl 0x2080a90a1f8 <line:465:9, line:467:1> line:465:16 struct db_attr_st definition
| `-FieldDecl 0x2080a90a2c8 <line:466:5, col:9> col:9 unique_subject 'int'
|-TypedefDecl 0x2080a90a378 <line:465:1, line:467:3> col:3 referenced DB_ATTR 'struct db_attr_st':'struct db_attr_st'
| `-ElaboratedType 0x2080a90a320 'struct db_attr_st' sugar
|   `-RecordType 0x2080a90a290 'struct db_attr_st'
|     `-Record 0x2080a90a1f8 'db_attr_st'
|-RecordDecl 0x2080a90a3e8 <line:468:9, line:471:1> line:468:16 invalid struct ca_db_st definition
| |-FieldDecl 0x2080a90a4d0 <line:469:5, col:13> col:13 attributes 'DB_ATTR':'struct db_attr_st'
| `-FieldDecl 0x2080a90a540 <line:470:5, col:13> col:13 invalid db 'int *'
|-TypedefDecl 0x2080a90a648 <line:468:1, line:471:3> col:3 referenced CA_DB 'struct ca_db_st':'struct ca_db_st'
| `-ElaboratedType 0x2080a90a5f0 'struct ca_db_st' sugar
|   `-RecordType 0x2080a90a480 'struct ca_db_st'
|     `-Record 0x2080a90a3e8 'ca_db_st'
|-FunctionDecl 0x2080a90a860 <line:473:1, col:42> col:7 used app_malloc 'void *(int, const char *)'
| |-ParmVarDecl 0x2080a90a6d0 <col:18, col:22> col:22 sz 'int'
| `-ParmVarDecl 0x2080a90a750 <col:26, col:38> col:38 what 'const char *'
|-FunctionDecl 0x2080a90ab30 <line:474:1, col:77> col:9 invalid load_serial 'int *(const char *, int, int **)'
| |-ParmVarDecl 0x2080a90a940 <col:21, col:33> col:33 serialfile 'const char *'
| |-ParmVarDecl 0x2080a90a9c0 <col:45, col:49> col:49 create 'int'
| `-ParmVarDecl 0x2080a90aa48 <col:57, col:72> col:72 invalid retai 'int **'
|-FunctionDecl 0x2080a90ae80 <line:475:1, line:476:37> line:475:5 invalid save_serial 'int (const char *, const char *, const int *, int **)'
| |-ParmVarDecl 0x2080a90ac00 <col:17, col:29> col:29 serialfile 'const char *'
| |-ParmVarDecl 0x2080a90ac80 <col:41, col:53> col:53 suffix 'const char *'
| |-ParmVarDecl 0x2080a90ad00 <col:61, col:75> col:75 invalid serial 'const int *'
| `-ParmVarDecl 0x2080a90ad88 <line:476:17, col:32> col:32 invalid retai 'int **'
|-FunctionDecl 0x2080a906180 <line:477:1, line:478:41> line:477:5 rotate_serial 'int (const char *, const char *, const char *)'
| |-ParmVarDecl 0x2080a90af58 <col:19, col:31> col:31 serialfile 'const char *'
| |-ParmVarDecl 0x2080a90afd8 <col:43, col:55> col:55 new_suffix 'const char *'
| `-ParmVarDecl 0x2080a906050 <line:478:19, col:31> col:31 old_suffix 'const char *'
|-FunctionDecl 0x2080a9063c0 <line:479:1, col:44> col:5 invalid rand_serial 'int (int *, int *)'
| |-ParmVarDecl 0x2080a906268 <col:17, col:25> col:25 invalid b 'int *'
| `-ParmVarDecl 0x2080a9062e8 <col:28, col:42> col:42 invalid ai 'int *'
|-FunctionDecl 0x2080a906718 <line:480:1, col:54> col:8 load_index 'CA_DB *(const char *, DB_ATTR *)'
| |-ParmVarDecl 0x2080a9064a8 <col:19, col:31> col:31 dbfile 'const char *'
| `-ParmVarDecl 0x2080a906578 <col:39, col:48> col:48 dbattr 'DB_ATTR *'
|-FunctionDecl 0x2080a906900 <line:481:1, col:26> col:5 index_index 'int (CA_DB *)'
| `-ParmVarDecl 0x2080a9067f0 <col:17, col:24> col:24 db 'CA_DB *'
|-FunctionDecl 0x2080a906c40 <line:482:1, col:65> col:5 save_index 'int (const char *, const char *, CA_DB *)'
| |-ParmVarDecl 0x2080a9069d8 <col:16, col:28> col:28 dbfile 'const char *'
| |-ParmVarDecl 0x2080a906a58 <col:36, col:48> col:48 suffix 'const char *'
| `-ParmVarDecl 0x2080a906ad0 <col:56, col:63> col:63 db 'CA_DB *'
|-FunctionDecl 0x2080a906f18 <line:483:1, line:484:40> line:483:5 rotate_index 'int (const char *, const char *, const char *)'
| |-ParmVarDecl 0x2080a906d28 <col:18, col:30> col:30 dbfile 'const char *'
| |-ParmVarDecl 0x2080a906da8 <col:38, col:50> col:50 new_suffix 'const char *'
| `-ParmVarDecl 0x2080a906e28 <line:484:18, col:30> col:30 old_suffix 'const char *'
|-FunctionDecl 0x2080a912218 <line:485:1, col:26> col:6 free_index 'void (CA_DB *)'
| `-ParmVarDecl 0x2080a912110 <col:17, col:24> col:24 db 'CA_DB *'
|-FunctionDecl 0x2080a912450 <line:489:1, col:70> col:5 invalid index_name_cmp 'int (const int *, const int *)'
| |-ParmVarDecl 0x2080a9122f0 <col:20, col:43> col:43 invalid a 'const int *'
| `-ParmVarDecl 0x2080a912370 <col:46, col:69> col:69 invalid b 'const int *'
|-FunctionDecl 0x2080a912668 <line:490:1, col:41> col:5 parse_yesno 'int (const char *, int)'
| |-ParmVarDecl 0x2080a912518 <col:17, col:29> col:29 str 'const char *'
| `-ParmVarDecl 0x2080a912598 <col:34, col:38> col:38 def 'int'
|-FunctionDecl 0x2080a912980 <line:492:1, col:65> col:12 invalid parse_name 'int *(const char *, long, int)'
| |-ParmVarDecl 0x2080a912748 <col:23, col:35> col:35 str 'const char *'
| |-ParmVarDecl 0x2080a9127c8 <col:40, col:45> col:45 chtype 'long'
| `-ParmVarDecl 0x2080a912848 <col:53, col:57> col:57 multirdn 'int'
|-FunctionDecl 0x2080a912ce0 <line:493:1, line:494:52> line:493:5 invalid args_verify 'int (char ***, int *, int *, int **)'
| |-ParmVarDecl 0x2080a912a58 <col:17, col:25> col:25 pargs 'char ***'
| |-ParmVarDecl 0x2080a912ad8 <col:32, col:37> col:37 pargc 'int *'
| |-ParmVarDecl 0x2080a912b58 <line:494:17, col:22> col:22 badarg 'int *'
| `-ParmVarDecl 0x2080a912be0 <col:30, col:50> col:50 invalid pm 'int **'
|-FunctionDecl 0x2080a912e48 <line:495:1, col:40> col:6 invalid policies_print 'void (int *)'
| `-ParmVarDecl 0x2080a912db8 <col:21, col:37> col:37 invalid ctx 'int *'
|-FunctionDecl 0x2080a90c0f0 <line:496:1, col:56> col:5 invalid bio_to_mem 'int (unsigned char **, int, int *)'
| |-ParmVarDecl 0x2080a912f38 <col:16, col:32> col:32 out 'unsigned char **'
| |-ParmVarDecl 0x2080a912fb8 <col:37, col:41> col:41 maxlen 'int'
| `-ParmVarDecl 0x2080a913038 <col:49, col:54> col:54 invalid in 'int *'
|-FunctionDecl 0x2080a90c2e0 <line:497:1, col:58> col:5 invalid pkey_ctrl_string 'int (int *, const char *)'
| |-ParmVarDecl 0x2080a90c1c0 <col:22, col:36> col:36 invalid ctx 'int *'
| `-ParmVarDecl 0x2080a90c240 <col:41, col:53> col:53 value 'const char *'
|-FunctionDecl 0x2080a90c630 <line:498:1, line:499:62> line:498:5 invalid init_gen_str 'int (int **, const char *, int *, int)'
| |-ParmVarDecl 0x2080a90c3b0 <col:18, col:33> col:33 invalid pctx 'int **'
| |-ParmVarDecl 0x2080a90c430 <line:499:18, col:30> col:30 algname 'const char *'
| |-ParmVarDecl 0x2080a90c4b0 <col:39, col:47> col:47 invalid e 'int *'
| `-ParmVarDecl 0x2080a90c530 <col:50, col:54> col:54 do_param 'int'
|-FunctionDecl 0x2080a90c9e0 <line:500:1, line:501:51> line:500:5 invalid do_X509_sign 'int (int *, int *, const int *, int (*)())'
| |-ParmVarDecl 0x2080a90c708 <col:18, col:24> col:24 invalid x 'int *'
| |-ParmVarDecl 0x2080a90c788 <col:27, col:37> col:37 invalid pkey 'int *'
| |-ParmVarDecl 0x2080a90c808 <col:43, col:57> col:57 invalid md 'const int *'
| `-ParmVarDecl 0x2080a90c898 <line:501:18, <invalid sloc>> col:18 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x2080a90ccf8 <line:502:1, line:503:55> line:502:5 invalid do_X509_REQ_sign 'int (int *, int *, const int *, int (*)())'
| |-ParmVarDecl 0x2080a90cab8 <col:22, col:32> col:32 invalid x 'int *'
| |-ParmVarDecl 0x2080a90cb38 <col:35, col:45> col:45 invalid pkey 'int *'
| |-ParmVarDecl 0x2080a90cbb8 <col:51, col:65> col:65 invalid md 'const int *'
| `-ParmVarDecl 0x2080a90cc48 <line:503:22, <invalid sloc>> col:22 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x2080a90d010 <line:504:1, line:505:55> line:504:5 invalid do_X509_CRL_sign 'int (int *, int *, const int *, int (*)())'
| |-ParmVarDecl 0x2080a90cdd0 <col:22, col:32> col:32 invalid x 'int *'
| |-ParmVarDecl 0x2080a90ce50 <col:35, col:45> col:45 invalid pkey 'int *'
| |-ParmVarDecl 0x2080a90ced0 <col:51, col:65> col:65 invalid md 'const int *'
| `-ParmVarDecl 0x2080a90cf60 <line:505:22, <invalid sloc>> col:22 invalid STACK_OF 'int (*)()':'int (*)()'
|-VarDecl 0x2080a911138 <line:507:1, col:14> col:14 psk_key 'char *' extern
|-FunctionDecl 0x2080a9113f0 <line:510:1, col:64> col:16 next_protos_parse 'unsigned char *(size_t *, const char *)'
| |-ParmVarDecl 0x2080a911228 <col:34, col:42> col:42 outlen 'size_t *'
| `-ParmVarDecl 0x2080a9112a8 <col:50, col:62> col:62 in 'const char *'
|-FunctionDecl 0x2080a9117d8 <line:512:1, line:514:67> line:512:6 invalid print_cert_checks 'void (int *, int *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x2080a9114d0 <col:24, col:29> col:29 invalid bio 'int *'
| |-ParmVarDecl 0x2080a911550 <col:34, col:40> col:40 invalid x 'int *'
| |-ParmVarDecl 0x2080a9115d0 <line:513:24, col:36> col:36 checkhost 'const char *'
| |-ParmVarDecl 0x2080a911650 <line:514:24, col:36> col:36 checkemail 'const char *'
| `-ParmVarDecl 0x2080a9116d0 <col:48, col:60> col:60 checkip 'const char *'
|-FunctionDecl 0x2080a911948 <line:516:1, col:45> col:6 invalid store_setup_crl_download 'void (int *)'
| `-ParmVarDecl 0x2080a9118b8 <col:31, col:43> col:43 invalid st 'int *'
|-FunctionDecl 0x2080a911aa0 <line:551:1, col:27> col:5 app_isdir 'int (const char *)'
| `-ParmVarDecl 0x2080a911a08 <col:15, col:26> col:27 'const char *'
|-FunctionDecl 0x2080a911cb0 <line:552:1, col:38> col:5 app_access 'int (const char *, int)'
| |-ParmVarDecl 0x2080a911b78 <col:16, col:27> col:28 'const char *'
| `-ParmVarDecl 0x2080a911bf8 <col:30, col:34> col:34 flag 'int'
|-FunctionDecl 0x2080a911e18 <line:553:1, col:22> col:5 fileno_stdin 'int (void)'
|-FunctionDecl 0x2080a911f70 <line:554:1, col:23> col:5 fileno_stdout 'int (void)'
|-FunctionDecl 0x2080a914210 <line:555:1, col:31> col:5 raw_read_stdin 'int (void *, int)'
| |-ParmVarDecl 0x2080a912040 <col:20, col:25> col:26 'void *'
| `-ParmVarDecl 0x2080a914130 <col:28> col:31 'int'
|-FunctionDecl 0x2080a914450 <line:556:1, col:39> col:5 raw_write_stdout 'int (const void *, int)'
| |-ParmVarDecl 0x2080a9142f0 <col:22, col:33> col:34 'const void *'
| `-ParmVarDecl 0x2080a914370 <col:36> col:39 'int'
|-FunctionDecl 0x2080a9146c0 <line:560:1, col:45> col:8 app_tminterval 'double (int, int)'
| |-ParmVarDecl 0x2080a914530 <col:23, col:27> col:27 stop 'int'
| `-ParmVarDecl 0x2080a9145b0 <col:33, col:37> col:37 usertime 'int'
|-RecordDecl 0x2080a914788 <line:562:9, line:567:1> line:562:16 struct verify_options_st definition
| |-FieldDecl 0x2080a914858 <line:563:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x2080a9148c8 <line:564:5, col:9> col:9 quiet 'int'
| |-FieldDecl 0x2080a914938 <line:565:5, col:9> col:9 error 'int'
| `-FieldDecl 0x2080a9149a8 <line:566:5, col:9> col:9 return_error 'int'
|-TypedefDecl 0x2080a914a58 <line:562:1, line:567:3> col:3 referenced VERIFY_CB_ARGS 'struct verify_options_st':'struct verify_options_st'
| `-ElaboratedType 0x2080a914a00 'struct verify_options_st' sugar
|   `-RecordType 0x2080a914820 'struct verify_options_st'
|     `-Record 0x2080a914788 'verify_options_st'
|-VarDecl 0x2080a914b00 <line:569:1, col:23> col:23 verify_args 'VERIFY_CB_ARGS':'struct verify_options_st' extern
|-VarDecl 0x2080a914c60 <.//openssl//file_jk/before\apps\passwd.c:31:1, line:41:1> line:31:28 used cov_2char 'const unsigned char [64]' static cinit
| `-InitListExpr 0x2080a915948 <col:44, line:41:1> 'const unsigned char [64]'
|   |-ImplicitCastExpr 0x2080a915b88 <line:33:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a914cc8 <col:5> 'int' 46
|   |-ImplicitCastExpr 0x2080a915ba0 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a914cf0 <col:11> 'int' 47
|   |-ImplicitCastExpr 0x2080a915bb8 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a914d18 <col:17> 'int' 48
|   |-ImplicitCastExpr 0x2080a915bd0 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a914d40 <col:23> 'int' 49
|   |-ImplicitCastExpr 0x2080a915be8 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a914d68 <col:29> 'int' 50
|   |-ImplicitCastExpr 0x2080a915c00 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a914d90 <col:35> 'int' 51
|   |-ImplicitCastExpr 0x2080a915c18 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a914db8 <col:41> 'int' 52
|   |-ImplicitCastExpr 0x2080a915c30 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a914de0 <col:47> 'int' 53
|   |-ImplicitCastExpr 0x2080a915c48 <line:34:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a914e08 <col:5> 'int' 54
|   |-ImplicitCastExpr 0x2080a915c60 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a914e30 <col:11> 'int' 55
|   |-ImplicitCastExpr 0x2080a915c78 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a914e58 <col:17> 'int' 56
|   |-ImplicitCastExpr 0x2080a915c90 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a914e80 <col:23> 'int' 57
|   |-ImplicitCastExpr 0x2080a915ca8 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a914ea8 <col:29> 'int' 65
|   |-ImplicitCastExpr 0x2080a915cc0 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a914ed0 <col:35> 'int' 66
|   |-ImplicitCastExpr 0x2080a915cd8 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a914ef8 <col:41> 'int' 67
|   |-ImplicitCastExpr 0x2080a915cf0 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a914f20 <col:47> 'int' 68
|   |-ImplicitCastExpr 0x2080a915d08 <line:35:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a914f48 <col:5> 'int' 69
|   |-ImplicitCastExpr 0x2080a915d20 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a914f70 <col:11> 'int' 70
|   |-ImplicitCastExpr 0x2080a915d38 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a914f98 <col:17> 'int' 71
|   |-ImplicitCastExpr 0x2080a915d50 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a914fc0 <col:23> 'int' 72
|   |-ImplicitCastExpr 0x2080a915d68 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a914fe8 <col:29> 'int' 73
|   |-ImplicitCastExpr 0x2080a915d80 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915010 <col:35> 'int' 74
|   |-ImplicitCastExpr 0x2080a915d98 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915038 <col:41> 'int' 75
|   |-ImplicitCastExpr 0x2080a915db0 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915060 <col:47> 'int' 76
|   |-ImplicitCastExpr 0x2080a915dc8 <line:36:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915088 <col:5> 'int' 77
|   |-ImplicitCastExpr 0x2080a915de0 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a9150b0 <col:11> 'int' 78
|   |-ImplicitCastExpr 0x2080a915df8 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a9150d8 <col:17> 'int' 79
|   |-ImplicitCastExpr 0x2080a915e10 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915100 <col:23> 'int' 80
|   |-ImplicitCastExpr 0x2080a915e28 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915140 <col:29> 'int' 81
|   |-ImplicitCastExpr 0x2080a915e40 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915168 <col:35> 'int' 82
|   |-ImplicitCastExpr 0x2080a915e58 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915190 <col:41> 'int' 83
|   |-ImplicitCastExpr 0x2080a915e70 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a9151b8 <col:47> 'int' 84
|   |-ImplicitCastExpr 0x2080a915e88 <line:37:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a9151e0 <col:5> 'int' 85
|   |-ImplicitCastExpr 0x2080a915ea0 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915208 <col:11> 'int' 86
|   |-ImplicitCastExpr 0x2080a915eb8 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915230 <col:17> 'int' 87
|   |-ImplicitCastExpr 0x2080a915ed0 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915258 <col:23> 'int' 88
|   |-ImplicitCastExpr 0x2080a915ee8 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915280 <col:29> 'int' 89
|   |-ImplicitCastExpr 0x2080a915f00 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a9152a8 <col:35> 'int' 90
|   |-ImplicitCastExpr 0x2080a915f18 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a9152d0 <col:41> 'int' 97
|   |-ImplicitCastExpr 0x2080a915f30 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a9152f8 <col:47> 'int' 98
|   |-ImplicitCastExpr 0x2080a915f48 <line:38:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915320 <col:5> 'int' 99
|   |-ImplicitCastExpr 0x2080a915f60 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915348 <col:11> 'int' 100
|   |-ImplicitCastExpr 0x2080a915f78 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915370 <col:17> 'int' 101
|   |-ImplicitCastExpr 0x2080a915f90 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915398 <col:23> 'int' 102
|   |-ImplicitCastExpr 0x2080a915fa8 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a9153c0 <col:29> 'int' 103
|   |-ImplicitCastExpr 0x2080a915fc0 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a9153e8 <col:35> 'int' 104
|   |-ImplicitCastExpr 0x2080a915fd8 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915410 <col:41> 'int' 105
|   |-ImplicitCastExpr 0x2080a915ff0 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915438 <col:47> 'int' 106
|   |-ImplicitCastExpr 0x2080a916008 <line:39:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915460 <col:5> 'int' 107
|   |-ImplicitCastExpr 0x2080a916020 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915488 <col:11> 'int' 108
|   |-ImplicitCastExpr 0x2080a916038 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a9154b0 <col:17> 'int' 109
|   |-ImplicitCastExpr 0x2080a916050 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a9154d8 <col:23> 'int' 110
|   |-ImplicitCastExpr 0x2080a916068 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915500 <col:29> 'int' 111
|   |-ImplicitCastExpr 0x2080a916080 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915528 <col:35> 'int' 112
|   |-ImplicitCastExpr 0x2080a916098 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915550 <col:41> 'int' 113
|   |-ImplicitCastExpr 0x2080a9160b0 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915578 <col:47> 'int' 114
|   |-ImplicitCastExpr 0x2080a9160c8 <line:40:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a9155a0 <col:5> 'int' 115
|   |-ImplicitCastExpr 0x2080a9160e0 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a9155c8 <col:11> 'int' 116
|   |-ImplicitCastExpr 0x2080a9160f8 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a9155f0 <col:17> 'int' 117
|   |-ImplicitCastExpr 0x2080a916110 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915618 <col:23> 'int' 118
|   |-ImplicitCastExpr 0x2080a916128 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915640 <col:29> 'int' 119
|   |-ImplicitCastExpr 0x2080a90f0e0 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915668 <col:35> 'int' 120
|   |-ImplicitCastExpr 0x2080a90f0f8 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2080a915690 <col:41> 'int' 121
|   `-ImplicitCastExpr 0x2080a90f110 <col:47> 'unsigned char' <IntegralCast>
|     `-IntegerLiteral 0x2080a9156b8 <col:47> 'int' 122
|-FunctionDecl 0x2080a90f8c0 <line:43:1, line:46:33> line:43:12 invalid do_passwd 'int (int, char **, char **, char *, int *, int, int, int, size_t, int, int, int)' static
| |-ParmVarDecl 0x2080a90f140 <col:22, col:26> col:26 passed_salt 'int'
| |-ParmVarDecl 0x2080a90f1c0 <col:39, col:46> col:46 salt_p 'char **'
| |-ParmVarDecl 0x2080a90f240 <col:54, col:61> col:61 salt_malloc_p 'char **'
| |-ParmVarDecl 0x2080a90f2c0 <line:44:22, col:28> col:28 passwd 'char *'
| |-ParmVarDecl 0x2080a90f340 <col:36, col:41> col:41 invalid out 'int *'
| |-ParmVarDecl 0x2080a90f3c0 <col:46, col:50> col:50 quiet 'int'
| |-ParmVarDecl 0x2080a90f440 <col:57, col:61> col:61 table 'int'
| |-ParmVarDecl 0x2080a90f4c0 <line:45:22, col:26> col:26 reverse 'int'
| |-ParmVarDecl 0x2080a90f538 <col:35, col:42> col:42 pw_maxlen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2080a90f5b8 <col:53, col:57> col:57 usecrypt 'int'
| |-ParmVarDecl 0x2080a90f638 <col:67, col:71> col:71 use1 'int'
| `-ParmVarDecl 0x2080a90f6b8 <line:46:22, col:26> col:26 useapr1 'int'
|-EnumDecl 0x2080a90f9c0 <line:48:9, line:53:1> line:48:14 OPTION_choice
| |-EnumConstantDecl 0x2080a90faf8 <line:49:5, col:16> col:5 referenced OPT_ERR 'int'
| | `-ConstantExpr 0x2080a90fae0 <col:15, col:16> 'int'
| |   `-UnaryOperator 0x2080a90fac8 <col:15, col:16> 'int' prefix '-'
| |     `-IntegerLiteral 0x2080a90faa0 <col:16> 'int' 1
| |-EnumConstantDecl 0x2080a90fb90 <col:19, col:29> col:19 referenced OPT_EOF 'int'
| | `-ConstantExpr 0x2080a90fb78 <col:29> 'int'
| |   `-IntegerLiteral 0x2080a90fb50 <col:29> 'int' 0
| |-EnumConstantDecl 0x2080a90fbe8 <col:32> col:32 referenced OPT_HELP 'int'
| |-EnumConstantDecl 0x2080a90fc40 <line:50:5> col:5 referenced OPT_IN 'int'
| |-EnumConstantDecl 0x2080a90fc98 <line:51:5> col:5 referenced OPT_NOVERIFY 'int'
| |-EnumConstantDecl 0x2080a90fcf0 <col:19> col:19 referenced OPT_QUIET 'int'
| |-EnumConstantDecl 0x2080a90fd48 <col:30> col:30 referenced OPT_TABLE 'int'
| |-EnumConstantDecl 0x2080a90fda0 <col:41> col:41 referenced OPT_REVERSE 'int'
| |-EnumConstantDecl 0x2080a90fdf8 <col:54> col:54 referenced OPT_APR1 'int'
| |-EnumConstantDecl 0x2080a90fe50 <line:52:5> col:5 referenced OPT_1 'int'
| |-EnumConstantDecl 0x2080a90fea8 <col:12> col:12 referenced OPT_CRYPT 'int'
| |-EnumConstantDecl 0x2080a90ff00 <col:23> col:23 referenced OPT_SALT 'int'
| `-EnumConstantDecl 0x2080a90ff58 <col:33> col:33 referenced OPT_STDIN 'int'
|-TypedefDecl 0x2080a910008 <line:48:1, line:53:3> col:3 referenced OPTION_CHOICE 'enum OPTION_choice':'enum OPTION_choice'
| `-ElaboratedType 0x2080a90ffb0 'enum OPTION_choice' sugar
|   `-EnumType 0x2080a90fa80 'enum OPTION_choice'
|     `-Enum 0x2080a90f9c0 'OPTION_choice'
|-VarDecl 0x2080a90e0f0 <line:55:1, line:73:1> line:55:9 used passwd_options 'OPTIONS [12]' cinit
| `-InitListExpr 0x2080a916228 <col:28, line:73:1> 'OPTIONS [12]'
|   |-InitListExpr 0x2080a916278 <line:56:5, col:51> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x2080a9162f0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x2080a9162d8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x2080a90e198 <col:6> 'char [5]' lvalue "help"
|   | |-DeclRefExpr 0x2080a90e1b8 <col:14> 'int' EnumConstant 0x2080a90fbe8 'OPT_HELP' 'int'
|   | |-CharacterLiteral 0x2080a90e1d8 <col:24> 'int' 45
|   | `-ImplicitCastExpr 0x2080a916320 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x2080a916308 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x2080a90e228 <col:29> 'char [21]' lvalue "Display this summary"
|   |-InitListExpr 0x2080a916350 <line:57:5, col:51> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x2080a9163c8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x2080a9163b0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x2080a90e2f8 <col:6> 'char [3]' lvalue "in"
|   | |-DeclRefExpr 0x2080a90e318 <col:12> 'int' EnumConstant 0x2080a90fc40 'OPT_IN' 'int'
|   | |-CharacterLiteral 0x2080a90e338 <col:20> 'int' 60
|   | `-ImplicitCastExpr 0x2080a9163f8 <col:25> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x2080a9163e0 <col:25> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x2080a90e388 <col:25> 'char [25]' lvalue "Read passwords from file"
|   |-InitListExpr 0x2080a916430 <line:58:5, line:59:56> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x2080a9164a8 <line:58:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x2080a916490 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x2080a90e458 <col:6> 'char [9]' lvalue "noverify"
|   | |-DeclRefExpr 0x2080a90e478 <col:18> 'int' EnumConstant 0x2080a90fc98 'OPT_NOVERIFY' 'int'
|   | |-CharacterLiteral 0x2080a90e498 <col:32> 'int' 45
|   | `-ImplicitCastExpr 0x2080a9164d8 <line:59:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x2080a9164c0 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x2080a90e4e8 <col:6> 'char [49]' lvalue "Never verify when reading password from terminal"
|   |-InitListExpr 0x2080a916520 <line:60:5, col:44> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x2080a916598 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x2080a916580 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x2080a90e5c8 <col:6> 'char [6]' lvalue "quiet"
|   | |-DeclRefExpr 0x2080a90e5e8 <col:15> 'int' EnumConstant 0x2080a90fcf0 'OPT_QUIET' 'int'
|   | |-CharacterLiteral 0x2080a90e608 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x2080a9165c8 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x2080a9165b0 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x2080a90e658 <col:31> 'char [12]' lvalue "No warnings"
|   |-InitListExpr 0x2080a9165f0 <line:61:5, col:55> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x2080a916668 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x2080a916650 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x2080a90e6e0 <col:6> 'char [6]' lvalue "table"
|   | |-DeclRefExpr 0x2080a90e700 <col:15> 'int' EnumConstant 0x2080a90fd48 'OPT_TABLE' 'int'
|   | |-CharacterLiteral 0x2080a90e720 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x2080a916698 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x2080a916680 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x2080a90e778 <col:31> 'char [23]' lvalue "Format output as table"
|   |-InitListExpr 0x2080a916700 <line:62:5, col:57> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x2080a916778 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x2080a916760 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x2080a90e848 <col:6> 'char [8]' lvalue "reverse"
|   | |-DeclRefExpr 0x2080a90e868 <col:17> 'int' EnumConstant 0x2080a90fda0 'OPT_REVERSE' 'int'
|   | |-CharacterLiteral 0x2080a90e888 <col:30> 'int' 45
|   | `-ImplicitCastExpr 0x2080a9167a8 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x2080a916790 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x2080a90e8a0 <col:35> 'char [21]' lvalue "Switch table columns"
|   |-InitListExpr 0x2080a9167d0 <line:63:5, col:48> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x2080a916848 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x2080a916830 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x2080a90e930 <col:6> 'char [5]' lvalue "salt"
|   | |-DeclRefExpr 0x2080a90e950 <col:14> 'int' EnumConstant 0x2080a90ff00 'OPT_SALT' 'int'
|   | |-CharacterLiteral 0x2080a90e970 <col:24> 'int' 115
|   | `-ImplicitCastExpr 0x2080a916878 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x2080a916860 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x2080a90e9c8 <col:29> 'char [18]' lvalue "Use provided salt"
|   |-InitListExpr 0x2080a9168a0 <line:64:5, col:58> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x2080a916918 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x2080a916900 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x2080a90ea58 <col:6> 'char [6]' lvalue "stdin"
|   | |-DeclRefExpr 0x2080a90ea78 <col:15> 'int' EnumConstant 0x2080a90ff58 'OPT_STDIN' 'int'
|   | |-CharacterLiteral 0x2080a90ea98 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x2080a916948 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x2080a916930 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x2080a90eae8 <col:31> 'char [26]' lvalue "Read passwords from stdin"
|   |-InitListExpr 0x2080a916970 <line:66:5, col:75> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x2080a9169e8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x2080a9169d0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x2080a90eb80 <col:6> 'char [5]' lvalue "apr1"
|   | |-DeclRefExpr 0x2080a90eba0 <col:14> 'int' EnumConstant 0x2080a90fdf8 'OPT_APR1' 'int'
|   | |-CharacterLiteral 0x2080a90ebc0 <col:24> 'int' 45
|   | `-ImplicitCastExpr 0x2080a916a18 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x2080a916a00 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x2080a90ec18 <col:29> 'char [45]' lvalue "MD5-based password algorithm, Apache variant"
|   |-InitListExpr 0x2080a916ac0 <line:67:5, col:53> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x2080a916b38 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x2080a916b20 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x2080a90ecf8 <col:6> 'char [2]' lvalue "1"
|   | |-DeclRefExpr 0x2080a90ed18 <col:11> 'int' EnumConstant 0x2080a90fe50 'OPT_1' 'int'
|   | |-CharacterLiteral 0x2080a90ed38 <col:18> 'int' 45
|   | `-ImplicitCastExpr 0x2080a916b68 <col:23> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x2080a916b50 <col:23> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x2080a90ed88 <col:23> 'char [29]' lvalue "MD5-based password algorithm"
|   |-InitListExpr 0x2080a916b90 <line:70:5, col:75> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x2080a916c08 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x2080a916bf0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x2080a90ee20 <col:6> 'char [6]' lvalue "crypt"
|   | |-DeclRefExpr 0x2080a90ee40 <col:15> 'int' EnumConstant 0x2080a90fea8 'OPT_CRYPT' 'int'
|   | |-CharacterLiteral 0x2080a90ee60 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x2080a916c38 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x2080a916c20 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x2080a90eeb8 <col:31> 'char [43]' lvalue "Standard Unix password algorithm (default)"
|   `-InitListExpr 0x2080a916c60 <line:72:5, col:10> 'OPTIONS':'struct options_st'
|     |-ImplicitCastExpr 0x2080a916cc0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <NullToPointer>
|     | `-ParenExpr 0x2080a90efc8 <col:17, col:27> 'void *'
|     |   `-CStyleCastExpr 0x2080a90efa0 <col:18, col:26> 'void *' <NullToPointer>
|     |     `-IntegerLiteral 0x2080a90ef60 <col:26> 'int' 0
|     |-ImplicitValueInitExpr 0x2080a916cd8 <<invalid sloc>> 'int'
|     |-ImplicitValueInitExpr 0x2080a916ce8 <<invalid sloc>> 'int'
|     `-ImplicitValueInitExpr 0x2080a916cf8 <<invalid sloc>> 'const char *'
|-FunctionDecl 0x2080a916f30 <.//openssl//file_jk/before\apps\passwd.c:75:1, line:272:1> line:75:5 passwd_main 'int (int, char **)'
| |-ParmVarDecl 0x2080a916da0 <col:17, col:21> col:21 used argc 'int'
| |-ParmVarDecl 0x2080a916e20 <col:27, col:34> col:34 used argv 'char **'
| `-CompoundStmt 0x2080a9acbc0 <line:76:1, line:272:1>
|   |-DeclStmt 0x2080a917548 <line:78:5, col:72>
|   | |-VarDecl 0x2080a917098 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\apps\passwd.c:78:11 used infile 'char *' cinit
|   | | `-ImplicitCastExpr 0x2080a9171a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x2080a917188 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2080a917160 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2080a917100 <col:26> 'int' 0
|   | |-VarDecl 0x2080a9171d8 <.//openssl//file_jk/before\apps\passwd.c:78:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\apps\passwd.c:78:27 used salt 'char *' cinit
|   | | `-ImplicitCastExpr 0x2080a9172c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x2080a9172a8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2080a917280 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2080a917240 <col:26> 'int' 0
|   | |-VarDecl 0x2080a9172f8 <.//openssl//file_jk/before\apps\passwd.c:78:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\apps\passwd.c:78:41 used passwd 'char *' cinit
|   | | `-ImplicitCastExpr 0x2080a9173e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x2080a9173c8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2080a9173a0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2080a917360 <col:26> 'int' 0
|   | `-VarDecl 0x2080a917418 <.//openssl//file_jk/before\apps\passwd.c:78:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\apps\passwd.c:78:58 used passwds 'char **' cinit
|   |   `-ImplicitCastExpr 0x2080a917508 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char **' <NullToPointer>
|   |     `-ParenExpr 0x2080a9174e8 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x2080a9174c0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x2080a917480 <col:26> 'int' 0
|   |-DeclStmt 0x2080a917840 <.//openssl//file_jk/before\apps\passwd.c:79:5, col:59>
|   | |-VarDecl 0x2080a917578 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\apps\passwd.c:79:11 used salt_malloc 'char *' cinit
|   | | `-ImplicitCastExpr 0x2080a917668 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x2080a917648 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2080a917620 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2080a9175e0 <col:26> 'int' 0
|   | |-VarDecl 0x2080a917698 <.//openssl//file_jk/before\apps\passwd.c:79:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\apps\passwd.c:79:32 used passwd_malloc 'char *' cinit
|   | | `-ImplicitCastExpr 0x2080a917788 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x2080a917768 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2080a917740 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2080a917700 <col:26> 'int' 0
|   | `-VarDecl 0x2080a9177b8 <.//openssl//file_jk/before\apps\passwd.c:79:5, col:55> col:55 used prog 'char *'
|   |-DeclStmt 0x2080a9178f8 <line:80:5, col:20>
|   | `-VarDecl 0x2080a917890 <col:5, col:19> col:19 used o 'OPTION_CHOICE':'enum OPTION_choice'
|   |-DeclStmt 0x2080a917a78 <line:81:5, col:44>
|   | |-VarDecl 0x2080a917928 <col:5, col:20> col:9 used in_stdin 'int' cinit
|   | | `-IntegerLiteral 0x2080a917990 <col:20> 'int' 0
|   | `-VarDecl 0x2080a9179d0 <col:5, col:43> col:23 used pw_source_defined 'int' cinit
|   |   `-IntegerLiteral 0x2080a917a38 <col:43> 'int' 0
|   |-DeclStmt 0x2080a917b38 <line:83:5, col:24>
|   | `-VarDecl 0x2080a917aa8 <col:5, col:23> col:9 used in_noverify 'int' cinit
|   |   `-IntegerLiteral 0x2080a917b10 <col:23> 'int' 0
|   |-DeclStmt 0x2080a917e18 <line:85:5, col:59>
|   | |-VarDecl 0x2080a917b68 <col:5, col:23> col:9 used passed_salt 'int' cinit
|   | | `-IntegerLiteral 0x2080a917bd0 <col:23> 'int' 0
|   | |-VarDecl 0x2080a917c10 <col:5, col:34> col:26 used quiet 'int' cinit
|   | | `-IntegerLiteral 0x2080a917c78 <col:34> 'int' 0
|   | |-VarDecl 0x2080a917cb8 <col:5, col:45> col:37 used table 'int' cinit
|   | | `-IntegerLiteral 0x2080a917d20 <col:45> 'int' 0
|   | `-VarDecl 0x2080a917d60 <col:5, col:58> col:48 used reverse 'int' cinit
|   |   `-IntegerLiteral 0x2080a917dc8 <col:58> 'int' 0
|   |-DeclStmt 0x2080a9180f8 <line:86:5, col:53>
|   | |-VarDecl 0x2080a917e48 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x2080a917eb0 <col:15> 'int' 1
|   | |-VarDecl 0x2080a917ef0 <col:5, col:29> col:18 used usecrypt 'int' cinit
|   | | `-IntegerLiteral 0x2080a917f58 <col:29> 'int' 0
|   | |-VarDecl 0x2080a917f98 <col:5, col:39> col:32 used use1 'int' cinit
|   | | `-IntegerLiteral 0x2080a918000 <col:39> 'int' 0
|   | `-VarDecl 0x2080a918040 <col:5, col:52> col:42 used useapr1 'int' cinit
|   |   `-IntegerLiteral 0x2080a9180a8 <col:52> 'int' 0
|   |-DeclStmt 0x2080a9182e8 <line:87:5, col:51>
|   | |-VarDecl 0x2080a918170 <col:5, col:33> col:12 used passwd_malloc_size 'size_t':'unsigned long long' cinit
|   | | `-ImplicitCastExpr 0x2080a918200 <col:33> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x2080a9181d8 <col:33> 'int' 0
|   | `-VarDecl 0x2080a918228 <col:5, col:48> col:36 used pw_maxlen 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x2080a9182b8 <col:48> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x2080a918290 <col:48> 'int' 256
|   |-BinaryOperator 0x2080a918528 <line:89:5, col:47> 'char *' '='
|   | |-DeclRefExpr 0x2080a918300 <col:5> 'char *' lvalue Var 0x2080a9177b8 'prog' 'char *'
|   | `-CallExpr 0x2080a918430 <col:12, col:47> 'char *'
|   |   |-ImplicitCastExpr 0x2080a918418 <col:12> 'char *(*)(int, char **, const OPTIONS *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2080a918338 <col:12> 'char *(int, char **, const OPTIONS *)' Function 0x2080a8fd6c0 'opt_init' 'char *(int, char **, const OPTIONS *)'
|   |   |-ImplicitCastExpr 0x2080a918468 <col:21> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2080a918358 <col:21> 'int' lvalue ParmVar 0x2080a916da0 'argc' 'int'
|   |   |-ImplicitCastExpr 0x2080a918480 <col:27> 'char **' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2080a918378 <col:27> 'char **' lvalue ParmVar 0x2080a916e20 'argv' 'char **'
|   |   `-ImplicitCastExpr 0x2080a918510 <col:33> 'const OPTIONS *' <NoOp>
|   |     `-ImplicitCastExpr 0x2080a9184f8 <col:33> 'OPTIONS *' <ArrayToPointerDecay>
|   |       `-DeclRefExpr 0x2080a918398 <col:33> 'OPTIONS [12]' lvalue Var 0x2080a90e0f0 'passwd_options' 'OPTIONS [12]'
|   |-WhileStmt 0x2080a9ae828 <line:90:5, line:141:5>
|   | |-BinaryOperator 0x2080a918690 <line:90:12, col:32> 'int' '!='
|   | | |-ImplicitCastExpr 0x2080a918678 <col:12, col:27> 'int' <IntegralCast>
|   | | | `-ParenExpr 0x2080a918638 <col:12, col:27> 'OPTION_CHOICE':'enum OPTION_choice'
|   | | |   `-BinaryOperator 0x2080a918618 <col:13, col:26> 'OPTION_CHOICE':'enum OPTION_choice' '='
|   | | |     |-DeclRefExpr 0x2080a918548 <col:13> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x2080a917890 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   | | |     `-ImplicitCastExpr 0x2080a918600 <col:17, col:26> 'OPTION_CHOICE':'enum OPTION_choice' <IntegralCast>
|   | | |       `-CallExpr 0x2080a9185e0 <col:17, col:26> 'int'
|   | | |         `-ImplicitCastExpr 0x2080a9185c8 <col:17> 'int (*)(void)' <FunctionToPointerDecay>
|   | | |           `-DeclRefExpr 0x2080a918580 <col:17> 'int (void)' Function 0x2080a8fd860 'opt_next' 'int (void)'
|   | | `-DeclRefExpr 0x2080a918658 <col:32> 'int' EnumConstant 0x2080a90fb90 'OPT_EOF' 'int'
|   | `-CompoundStmt 0x2080a9ae810 <col:41, line:141:5>
|   |   `-SwitchStmt 0x2080a918700 <line:91:9, line:140:9>
|   |     |-ImplicitCastExpr 0x2080a9186e8 <line:91:17> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x2080a9186d0 <col:17> 'OPTION_CHOICE':'enum OPTION_choice' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2080a9186b0 <col:17> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x2080a917890 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   |     `-CompoundStmt 0x2080a9ae710 <col:20, line:140:9>
|   |       |-CaseStmt 0x2080a918758 <line:92:9, line:94:9>
|   |       | |-ConstantExpr 0x2080a918740 <line:92:14> 'int'
|   |       | | `-DeclRefExpr 0x2080a918720 <col:14> 'int' EnumConstant 0x2080a90fb90 'OPT_EOF' 'int'
|   |       | `-CaseStmt 0x2080a9187b8 <line:93:9, line:94:9>
|   |       |   |-ConstantExpr 0x2080a9187a0 <line:93:14> 'int'
|   |       |   | `-DeclRefExpr 0x2080a918780 <col:14> 'int' EnumConstant 0x2080a90faf8 'OPT_ERR' 'int'
|   |       |   `-LabelStmt 0x2080a9189d8 <line:94:2, col:9> 'opthelp'
|   |       |     `-NullStmt 0x2080a918980 <col:9>
|   |       |-GotoStmt 0x2080a918a40 <line:96:13, col:18> 'end' 0x2080a9189f0
|   |       |-CaseStmt 0x2080a918a90 <line:97:9, line:98:36>
|   |       | |-ConstantExpr 0x2080a918a78 <line:97:14> 'int'
|   |       | | `-DeclRefExpr 0x2080a918a58 <col:14> 'int' EnumConstant 0x2080a90fbe8 'OPT_HELP' 'int'
|   |       | `-CallExpr 0x2080a918b70 <line:98:13, col:36> 'void'
|   |       |   |-ImplicitCastExpr 0x2080a918b58 <col:13> 'void (*)(const OPTIONS *)' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x2080a918ab8 <col:13> 'void (const OPTIONS *)' Function 0x2080a8fe7f8 'opt_help' 'void (const OPTIONS *)'
|   |       |   `-ImplicitCastExpr 0x2080a918bb0 <col:22> 'const OPTIONS *' <NoOp>
|   |       |     `-ImplicitCastExpr 0x2080a918b98 <col:22> 'OPTIONS *' <ArrayToPointerDecay>
|   |       |       `-DeclRefExpr 0x2080a918ad8 <col:22> 'OPTIONS [12]' lvalue Var 0x2080a90e0f0 'passwd_options' 'OPTIONS [12]'
|   |       |-BinaryOperator 0x2080a918c28 <line:99:13, col:19> 'int' '='
|   |       | |-DeclRefExpr 0x2080a918bc8 <col:13> 'int' lvalue Var 0x2080a917e48 'ret' 'int'
|   |       | `-IntegerLiteral 0x2080a918c00 <col:19> 'int' 0
|   |       |-GotoStmt 0x2080a918c48 <line:100:13, col:18> 'end' 0x2080a9189f0
|   |       |-CaseStmt 0x2080a918c98 <line:101:9, line:103:22>
|   |       | |-ConstantExpr 0x2080a918c80 <line:101:14> 'int'
|   |       | | `-DeclRefExpr 0x2080a918c60 <col:14> 'int' EnumConstant 0x2080a90fc40 'OPT_IN' 'int'
|   |       | `-IfStmt 0x2080a918d28 <line:102:13, line:103:22>
|   |       |   |-ImplicitCastExpr 0x2080a918cf8 <line:102:17> 'int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x2080a918cc0 <col:17> 'int' lvalue Var 0x2080a9179d0 'pw_source_defined' 'int'
|   |       |   `-GotoStmt 0x2080a918d10 <line:103:17, col:22> 'opthelp' 0x2080a918988
|   |       |-BinaryOperator 0x2080a918e00 <line:104:13, col:30> 'char *' '='
|   |       | |-DeclRefExpr 0x2080a918d40 <col:13> 'char *' lvalue Var 0x2080a917098 'infile' 'char *'
|   |       | `-CallExpr 0x2080a918de0 <col:22, col:30> 'char *'
|   |       |   `-ImplicitCastExpr 0x2080a918dc8 <col:22> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |     `-DeclRefExpr 0x2080a918d78 <col:22> 'char *(void)' Function 0x2080a8fcce0 'opt_arg' 'char *(void)'
|   |       |-BinaryOperator 0x2080a918e68 <line:105:13, col:33> 'int' '='
|   |       | |-DeclRefExpr 0x2080a918e20 <col:13> 'int' lvalue Var 0x2080a9179d0 'pw_source_defined' 'int'
|   |       | `-IntegerLiteral 0x2080a918e40 <col:33> 'int' 1
|   |       |-BreakStmt 0x2080a918e88 <line:106:13>
|   |       |-CaseStmt 0x2080a918ec8 <line:107:9, line:109:27>
|   |       | |-ConstantExpr 0x2080a918eb0 <line:107:14> 'int'
|   |       | | `-DeclRefExpr 0x2080a918e90 <col:14> 'int' EnumConstant 0x2080a90fc98 'OPT_NOVERIFY' 'int'
|   |       | `-BinaryOperator 0x2080a918f50 <line:109:13, col:27> 'int' '='
|   |       |   |-DeclRefExpr 0x2080a918ef0 <col:13> 'int' lvalue Var 0x2080a917aa8 'in_noverify' 'int'
|   |       |   `-IntegerLiteral 0x2080a918f28 <col:27> 'int' 1
|   |       |-BreakStmt 0x2080a918f70 <line:111:13>
|   |       |-CaseStmt 0x2080a918fb0 <line:112:9, line:113:21>
|   |       | |-ConstantExpr 0x2080a918f98 <line:112:14> 'int'
|   |       | | `-DeclRefExpr 0x2080a918f78 <col:14> 'int' EnumConstant 0x2080a90fcf0 'OPT_QUIET' 'int'
|   |       | `-BinaryOperator 0x2080a919038 <line:113:13, col:21> 'int' '='
|   |       |   |-DeclRefExpr 0x2080a918fd8 <col:13> 'int' lvalue Var 0x2080a917c10 'quiet' 'int'
|   |       |   `-IntegerLiteral 0x2080a919010 <col:21> 'int' 1
|   |       |-BreakStmt 0x2080a919058 <line:114:13>
|   |       |-CaseStmt 0x2080a919098 <line:115:9, line:116:21>
|   |       | |-ConstantExpr 0x2080a919080 <line:115:14> 'int'
|   |       | | `-DeclRefExpr 0x2080a919060 <col:14> 'int' EnumConstant 0x2080a90fd48 'OPT_TABLE' 'int'
|   |       | `-BinaryOperator 0x2080a919120 <line:116:13, col:21> 'int' '='
|   |       |   |-DeclRefExpr 0x2080a9190c0 <col:13> 'int' lvalue Var 0x2080a917cb8 'table' 'int'
|   |       |   `-IntegerLiteral 0x2080a9190f8 <col:21> 'int' 1
|   |       |-BreakStmt 0x2080a919140 <line:117:13>
|   |       |-CaseStmt 0x2080a9ae058 <line:118:9, line:119:23>
|   |       | |-ConstantExpr 0x2080a9ae040 <line:118:14> 'int'
|   |       | | `-DeclRefExpr 0x2080a919148 <col:14> 'int' EnumConstant 0x2080a90fda0 'OPT_REVERSE' 'int'
|   |       | `-BinaryOperator 0x2080a9ae0e0 <line:119:13, col:23> 'int' '='
|   |       |   |-DeclRefExpr 0x2080a9ae080 <col:13> 'int' lvalue Var 0x2080a917d60 'reverse' 'int'
|   |       |   `-IntegerLiteral 0x2080a9ae0b8 <col:23> 'int' 1
|   |       |-BreakStmt 0x2080a9ae100 <line:120:13>
|   |       |-CaseStmt 0x2080a9ae140 <line:121:9, line:122:20>
|   |       | |-ConstantExpr 0x2080a9ae128 <line:121:14> 'int'
|   |       | | `-DeclRefExpr 0x2080a9ae108 <col:14> 'int' EnumConstant 0x2080a90fe50 'OPT_1' 'int'
|   |       | `-BinaryOperator 0x2080a9ae1c8 <line:122:13, col:20> 'int' '='
|   |       |   |-DeclRefExpr 0x2080a9ae168 <col:13> 'int' lvalue Var 0x2080a917f98 'use1' 'int'
|   |       |   `-IntegerLiteral 0x2080a9ae1a0 <col:20> 'int' 1
|   |       |-BreakStmt 0x2080a9ae1e8 <line:123:13>
|   |       |-CaseStmt 0x2080a9ae228 <line:124:9, line:125:23>
|   |       | |-ConstantExpr 0x2080a9ae210 <line:124:14> 'int'
|   |       | | `-DeclRefExpr 0x2080a9ae1f0 <col:14> 'int' EnumConstant 0x2080a90fdf8 'OPT_APR1' 'int'
|   |       | `-BinaryOperator 0x2080a9ae2b0 <line:125:13, col:23> 'int' '='
|   |       |   |-DeclRefExpr 0x2080a9ae250 <col:13> 'int' lvalue Var 0x2080a918040 'useapr1' 'int'
|   |       |   `-IntegerLiteral 0x2080a9ae288 <col:23> 'int' 1
|   |       |-BreakStmt 0x2080a9ae2d0 <line:126:13>
|   |       |-CaseStmt 0x2080a9ae310 <line:127:9, line:128:24>
|   |       | |-ConstantExpr 0x2080a9ae2f8 <line:127:14> 'int'
|   |       | | `-DeclRefExpr 0x2080a9ae2d8 <col:14> 'int' EnumConstant 0x2080a90fea8 'OPT_CRYPT' 'int'
|   |       | `-BinaryOperator 0x2080a9ae398 <line:128:13, col:24> 'int' '='
|   |       |   |-DeclRefExpr 0x2080a9ae338 <col:13> 'int' lvalue Var 0x2080a917ef0 'usecrypt' 'int'
|   |       |   `-IntegerLiteral 0x2080a9ae370 <col:24> 'int' 1
|   |       |-BreakStmt 0x2080a9ae3b8 <line:129:13>
|   |       |-CaseStmt 0x2080a9ae3f8 <line:130:9, line:131:27>
|   |       | |-ConstantExpr 0x2080a9ae3e0 <line:130:14> 'int'
|   |       | | `-DeclRefExpr 0x2080a9ae3c0 <col:14> 'int' EnumConstant 0x2080a90ff00 'OPT_SALT' 'int'
|   |       | `-BinaryOperator 0x2080a9ae480 <line:131:13, col:27> 'int' '='
|   |       |   |-DeclRefExpr 0x2080a9ae420 <col:13> 'int' lvalue Var 0x2080a917b68 'passed_salt' 'int'
|   |       |   `-IntegerLiteral 0x2080a9ae458 <col:27> 'int' 1
|   |       |-BinaryOperator 0x2080a9ae530 <line:132:13, col:28> 'char *' '='
|   |       | |-DeclRefExpr 0x2080a9ae4a0 <col:13> 'char *' lvalue Var 0x2080a9171d8 'salt' 'char *'
|   |       | `-CallExpr 0x2080a9ae510 <col:20, col:28> 'char *'
|   |       |   `-ImplicitCastExpr 0x2080a9ae4f8 <col:20> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |     `-DeclRefExpr 0x2080a9ae4d8 <col:20> 'char *(void)' Function 0x2080a8fcce0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x2080a9ae550 <line:133:13>
|   |       |-CaseStmt 0x2080a9ae590 <line:134:9, line:136:22>
|   |       | |-ConstantExpr 0x2080a9ae578 <line:134:14> 'int'
|   |       | | `-DeclRefExpr 0x2080a9ae558 <col:14> 'int' EnumConstant 0x2080a90ff58 'OPT_STDIN' 'int'
|   |       | `-IfStmt 0x2080a9ae608 <line:135:13, line:136:22>
|   |       |   |-ImplicitCastExpr 0x2080a9ae5d8 <line:135:17> 'int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x2080a9ae5b8 <col:17> 'int' lvalue Var 0x2080a9179d0 'pw_source_defined' 'int'
|   |       |   `-GotoStmt 0x2080a9ae5f0 <line:136:17, col:22> 'opthelp' 0x2080a918988
|   |       |-BinaryOperator 0x2080a9ae680 <line:137:13, col:24> 'int' '='
|   |       | |-DeclRefExpr 0x2080a9ae620 <col:13> 'int' lvalue Var 0x2080a917928 'in_stdin' 'int'
|   |       | `-IntegerLiteral 0x2080a9ae658 <col:24> 'int' 1
|   |       |-BinaryOperator 0x2080a9ae6e8 <line:138:13, col:33> 'int' '='
|   |       | |-DeclRefExpr 0x2080a9ae6a0 <col:13> 'int' lvalue Var 0x2080a9179d0 'pw_source_defined' 'int'
|   |       | `-IntegerLiteral 0x2080a9ae6c0 <col:33> 'int' 1
|   |       `-BreakStmt 0x2080a9ae708 <line:139:13>
|   |-BinaryOperator 0x2080a9ae8b8 <line:142:5, col:25> 'int' '='
|   | |-DeclRefExpr 0x2080a9ae840 <col:5> 'int' lvalue ParmVar 0x2080a916da0 'argc' 'int'
|   | `-CallExpr 0x2080a9ae898 <col:12, col:25> 'int'
|   |   `-ImplicitCastExpr 0x2080a9ae880 <col:12> 'int (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x2080a9ae860 <col:12> 'int (void)' Function 0x2080a8fe408 'opt_num_rest' 'int (void)'
|   |-BinaryOperator 0x2080a9ae980 <line:143:5, col:21> 'char **' '='
|   | |-DeclRefExpr 0x2080a9ae8d8 <col:5> 'char **' lvalue ParmVar 0x2080a916e20 'argv' 'char **'
|   | `-CallExpr 0x2080a9ae960 <col:12, col:21> 'char **'
|   |   `-ImplicitCastExpr 0x2080a9ae948 <col:12> 'char **(*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x2080a9ae8f8 <col:12> 'char **(void)' Function 0x2080a8fe2b0 'opt_rest' 'char **(void)'
|   |-IfStmt 0x2080a9aeb90 <line:145:5, line:150:5>
|   | |-ImplicitCastExpr 0x2080a9ae9f0 <line:145:9, col:10> 'char *' <LValueToRValue>
|   | | `-UnaryOperator 0x2080a9ae9d8 <col:9, col:10> 'char *' lvalue prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x2080a9ae9c0 <col:10> 'char **' <LValueToRValue>
|   | |     `-DeclRefExpr 0x2080a9ae9a0 <col:10> 'char **' lvalue ParmVar 0x2080a916e20 'argv' 'char **'
|   | `-CompoundStmt 0x2080a9aeb68 <col:16, line:150:5>
|   |   |-IfStmt 0x2080a9aea58 <line:146:9, line:147:18>
|   |   | |-ImplicitCastExpr 0x2080a9aea28 <line:146:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2080a9aea08 <col:13> 'int' lvalue Var 0x2080a9179d0 'pw_source_defined' 'int'
|   |   | `-GotoStmt 0x2080a9aea40 <line:147:13, col:18> 'opthelp' 0x2080a918988
|   |   |-BinaryOperator 0x2080a9aeab8 <line:148:9, col:29> 'int' '='
|   |   | |-DeclRefExpr 0x2080a9aea70 <col:9> 'int' lvalue Var 0x2080a9179d0 'pw_source_defined' 'int'
|   |   | `-IntegerLiteral 0x2080a9aea90 <col:29> 'int' 1
|   |   `-BinaryOperator 0x2080a9aeb48 <line:149:9, col:19> 'char **' '='
|   |     |-DeclRefExpr 0x2080a9aead8 <col:9> 'char **' lvalue Var 0x2080a917418 'passwds' 'char **'
|   |     `-ImplicitCastExpr 0x2080a9aeb30 <col:19> 'char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x2080a9aeb10 <col:19> 'char **' lvalue ParmVar 0x2080a916e20 'argv' 'char **'
|   |-IfStmt 0x2080a9aed58 <line:152:5, line:155:5>
|   | |-BinaryOperator 0x2080a9aecb8 <line:152:9, col:32> 'int' '&&'
|   | | |-BinaryOperator 0x2080a9aec48 <col:9, col:23> 'int' '&&'
|   | | | |-UnaryOperator 0x2080a9aebe0 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x2080a9aebc8 <col:10> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x2080a9aeba8 <col:10> 'int' lvalue Var 0x2080a917ef0 'usecrypt' 'int'
|   | | | `-UnaryOperator 0x2080a9aec30 <col:22, col:23> 'int' prefix '!' cannot overflow
|   | | |   `-ImplicitCastExpr 0x2080a9aec18 <col:23> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x2080a9aebf8 <col:23> 'int' lvalue Var 0x2080a917f98 'use1' 'int'
|   | | `-UnaryOperator 0x2080a9aeca0 <col:31, col:32> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x2080a9aec88 <col:32> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x2080a9aec68 <col:32> 'int' lvalue Var 0x2080a918040 'useapr1' 'int'
|   | `-CompoundStmt 0x2080a9aed40 <col:41, line:155:5>
|   |   `-BinaryOperator 0x2080a9aed20 <line:154:9, col:20> 'int' '='
|   |     |-DeclRefExpr 0x2080a9aecd8 <col:9> 'int' lvalue Var 0x2080a917ef0 'usecrypt' 'int'
|   |     `-IntegerLiteral 0x2080a9aecf8 <col:20> 'int' 1
|   |-IfStmt 0x2080a9aeed0 <line:156:5, line:159:5>
|   | |-BinaryOperator 0x2080a9aee80 <line:156:9, col:37> 'int' '>'
|   | | |-BinaryOperator 0x2080a9aee38 <col:9, col:27> 'int' '+'
|   | | | |-BinaryOperator 0x2080a9aede0 <col:9, col:20> 'int' '+'
|   | | | | |-ImplicitCastExpr 0x2080a9aedb0 <col:9> 'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x2080a9aed70 <col:9> 'int' lvalue Var 0x2080a917ef0 'usecrypt' 'int'
|   | | | | `-ImplicitCastExpr 0x2080a9aedc8 <col:20> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x2080a9aed90 <col:20> 'int' lvalue Var 0x2080a917f98 'use1' 'int'
|   | | | `-ImplicitCastExpr 0x2080a9aee20 <col:27> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2080a9aee00 <col:27> 'int' lvalue Var 0x2080a918040 'useapr1' 'int'
|   | | `-IntegerLiteral 0x2080a9aee58 <col:37> 'int' 1
|   | `-CompoundStmt 0x2080a9aeeb8 <col:40, line:159:5>
|   |   `-GotoStmt 0x2080a9aeea0 <line:158:9, col:14> 'opthelp' 0x2080a918988
|   |-IfStmt 0x2080a9ad118 <line:170:5, line:173:5>
|   | |-BinaryOperator 0x2080a9af018 <line:170:9, col:27> 'int' '&&'
|   | | |-BinaryOperator 0x2080a9aefc0 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | | |-ImplicitCastExpr 0x2080a9aef90 <.//openssl//file_jk/before\apps\passwd.c:170:9> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2080a9aeee8 <col:9> 'char *' lvalue Var 0x2080a917098 'infile' 'char *'
|   | | | `-ImplicitCastExpr 0x2080a9aefa8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | | |   `-ParenExpr 0x2080a9aef70 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x2080a9aef48 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x2080a9aef08 <col:26> 'int' 0
|   | | `-ImplicitCastExpr 0x2080a9af000 <.//openssl//file_jk/before\apps\passwd.c:170:27> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2080a9aefe0 <col:27> 'int' lvalue Var 0x2080a917928 'in_stdin' 'int'
|   | `-CompoundStmt 0x2080a9ad100 <col:37, line:173:5>
|   |   `-GotoStmt 0x2080a9ad0e8 <line:172:9, col:14> 'end' 0x2080a9189f0
|   |-IfStmt 0x2080a9ad430 <line:175:5, line:183:5>
|   | |-BinaryOperator 0x2080a9ad260 <line:175:9, col:27> 'int' '||'
|   | | |-BinaryOperator 0x2080a9ad208 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | | |-ImplicitCastExpr 0x2080a9ad1d8 <.//openssl//file_jk/before\apps\passwd.c:175:9> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2080a9ad130 <col:9> 'char *' lvalue Var 0x2080a917098 'infile' 'char *'
|   | | | `-ImplicitCastExpr 0x2080a9ad1f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | | |   `-ParenExpr 0x2080a9ad1b8 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x2080a9ad190 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x2080a9ad150 <col:26> 'int' 0
|   | | `-ImplicitCastExpr 0x2080a9ad248 <.//openssl//file_jk/before\apps\passwd.c:175:27> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2080a9ad228 <col:27> 'int' lvalue Var 0x2080a917928 'in_stdin' 'int'
|   | `-CompoundStmt 0x2080a9ad418 <col:37, line:183:5>
|   |   `-IfStmt 0x2080a9ad400 <line:181:9, line:182:18>
|   |     |-OpaqueValueExpr 0x2080a9ad3e8 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x2080a9ad3d0 <col:13, col:18> 'end' 0x2080a9189f0
|   |-IfStmt 0x2080a9ad640 <line:185:5, line:188:21> has_else
|   | |-ImplicitCastExpr 0x2080a9ad468 <line:185:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x2080a9ad448 <col:9> 'int' lvalue Var 0x2080a917ef0 'usecrypt' 'int'
|   | |-BinaryOperator 0x2080a9ad4f8 <line:186:9, col:21> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x2080a9ad480 <col:9> 'size_t':'unsigned long long' lvalue Var 0x2080a918228 'pw_maxlen' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x2080a9ad4e0 <col:21> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x2080a9ad4b8 <col:21> 'int' 8
|   | `-IfStmt 0x2080a9ad628 <line:187:10, line:188:21>
|   |   |-BinaryOperator 0x2080a9ad588 <line:187:14, col:22> 'int' '||'
|   |   | |-ImplicitCastExpr 0x2080a9ad558 <col:14> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2080a9ad518 <col:14> 'int' lvalue Var 0x2080a917f98 'use1' 'int'
|   |   | `-ImplicitCastExpr 0x2080a9ad570 <col:22> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2080a9ad538 <col:22> 'int' lvalue Var 0x2080a918040 'useapr1' 'int'
|   |   `-BinaryOperator 0x2080a9ad608 <line:188:9, col:21> 'size_t':'unsigned long long' '='
|   |     |-DeclRefExpr 0x2080a9ad5a8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x2080a918228 'pw_maxlen' 'size_t':'unsigned long long'
|   |     `-ImplicitCastExpr 0x2080a9ad5f0 <col:21> 'size_t':'unsigned long long' <IntegralCast>
|   |       `-IntegerLiteral 0x2080a9ad5c8 <col:21> 'int' 256
|   |-IfStmt 0x2080a9adaa8 <line:191:5, line:198:5>
|   | |-BinaryOperator 0x2080a9ad740 <line:191:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x2080a9ad710 <.//openssl//file_jk/before\apps\passwd.c:191:9> 'char **' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2080a9ad668 <col:9> 'char **' lvalue Var 0x2080a917418 'passwds' 'char **'
|   | | `-ImplicitCastExpr 0x2080a9ad728 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char **' <BitCast>
|   | |   `-ParenExpr 0x2080a9ad6f0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2080a9ad6c8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2080a9ad688 <col:26> 'int' 0
|   | `-CompoundStmt 0x2080a9ada88 <.//openssl//file_jk/before\apps\passwd.c:191:26, line:198:5>
|   |   |-BinaryOperator 0x2080a9ad830 <line:194:9, col:42> 'size_t':'unsigned long long' '='
|   |   | |-DeclRefExpr 0x2080a9ad760 <col:9> 'size_t':'unsigned long long' lvalue Var 0x2080a918170 'passwd_malloc_size' 'size_t':'unsigned long long'
|   |   | `-BinaryOperator 0x2080a9ad810 <col:30, col:42> 'unsigned long long' '+'
|   |   |   |-ImplicitCastExpr 0x2080a9ad7e0 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x2080a9ad798 <col:30> 'size_t':'unsigned long long' lvalue Var 0x2080a918228 'pw_maxlen' 'size_t':'unsigned long long'
|   |   |   `-ImplicitCastExpr 0x2080a9ad7f8 <col:42> 'unsigned long long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x2080a9ad7b8 <col:42> 'int' 2
|   |   `-BinaryOperator 0x2080a9ada68 <line:196:9, line:197:61> 'char *' '='
|   |     |-DeclRefExpr 0x2080a9ad850 <line:196:9> 'char *' lvalue Var 0x2080a9172f8 'passwd' 'char *'
|   |     `-BinaryOperator 0x2080a9ada48 <col:18, line:197:61> 'char *' '='
|   |       |-DeclRefExpr 0x2080a9ad888 <line:196:18> 'char *' lvalue Var 0x2080a917698 'passwd_malloc' 'char *'
|   |       `-ImplicitCastExpr 0x2080a9ada30 <line:197:13, col:61> 'char *' <BitCast>
|   |         `-CallExpr 0x2080a9ad9a0 <col:13, col:61> 'void *'
|   |           |-ImplicitCastExpr 0x2080a9ad988 <col:13> 'void *(*)(int, const char *)' <FunctionToPointerDecay>
|   |           | `-DeclRefExpr 0x2080a9ad8c0 <col:13> 'void *(int, const char *)' Function 0x2080a90a860 'app_malloc' 'void *(int, const char *)'
|   |           |-ImplicitCastExpr 0x2080a9ad9e8 <col:24> 'int' <IntegralCast>
|   |           | `-ImplicitCastExpr 0x2080a9ad9d0 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   `-DeclRefExpr 0x2080a9ad8e0 <col:24> 'size_t':'unsigned long long' lvalue Var 0x2080a918170 'passwd_malloc_size' 'size_t':'unsigned long long'
|   |           `-ImplicitCastExpr 0x2080a9ada18 <col:44> 'const char *' <NoOp>
|   |             `-ImplicitCastExpr 0x2080a9ada00 <col:44> 'char *' <ArrayToPointerDecay>
|   |               `-StringLiteral 0x2080a9ad938 <col:44> 'char [16]' lvalue "password buffer"
|   |-IfStmt 0x2080a9a7650 <line:200:5, line:224:5>
|   | |-OpaqueValueExpr 0x2080a9a7638 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2080a9a7620 <line:200:44, line:224:5>
|   |   `-IfStmt 0x2080a9a75f8 <line:206:9, line:223:9> has_else
|   |     |-IntegerLiteral 0x2080a9adc60 <line:206:13> 'int' 1
|   |     |-CompoundStmt 0x2080a9a7510 <col:16, line:219:9>
|   |     | |-DeclStmt 0x2080a9adf88 <line:209:13, col:60>
|   |     | | `-VarDecl 0x2080a9add30 <col:13, col:59> col:26 used passwds_static 'char *[2]' static cinit
|   |     | |   `-InitListExpr 0x2080a9adf08 <col:46, col:59> 'char *[2]'
|   |     | |     |-ImplicitCastExpr 0x2080a9adf58 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   |     | |     | `-ParenExpr 0x2080a9ade00 <col:17, col:27> 'void *'
|   |     | |     |   `-CStyleCastExpr 0x2080a9addd8 <col:18, col:26> 'void *' <NullToPointer>
|   |     | |     |     `-IntegerLiteral 0x2080a9add98 <col:26> 'int' 0
|   |     | |     `-ImplicitCastExpr 0x2080a9adf70 <col:17, col:27> 'char *' <NullToPointer>
|   |     | |       `-ParenExpr 0x2080a9ade88 <col:17, col:27> 'void *'
|   |     | |         `-CStyleCastExpr 0x2080a9ade60 <col:18, col:26> 'void *' <NullToPointer>
|   |     | |           `-IntegerLiteral 0x2080a9ade20 <col:26> 'int' 0
|   |     | |-BinaryOperator 0x2080a9ae010 <.//openssl//file_jk/before\apps\passwd.c:211:13, col:23> 'char **' '='
|   |     | | |-DeclRefExpr 0x2080a9adfa0 <col:13> 'char **' lvalue Var 0x2080a917418 'passwds' 'char **'
|   |     | | `-ImplicitCastExpr 0x2080a9adff8 <col:23> 'char **' <ArrayToPointerDecay>
|   |     | |   `-DeclRefExpr 0x2080a9adfc0 <col:23> 'char *[2]' lvalue Var 0x2080a9add30 'passwds_static' 'char *[2]'
|   |     | |-IfStmt 0x2080a9a7420 <line:212:13, line:217:13>
|   |     | | |-OpaqueValueExpr 0x2080a9a7408 <<invalid sloc>> '_Bool'
|   |     | | `-CompoundStmt 0x2080a9a73f0 <line:212:29, line:217:13>
|   |     | |   `-IfStmt 0x2080a9a73d8 <line:213:17, line:216:26>
|   |     | |     |-BinaryOperator 0x2080a9a73a0 <line:213:21, line:215:56> 'int' '!='
|   |     | |     | |-CallExpr 0x2080a9a72f0 <line:213:21, line:215:51> 'int'
|   |     | |     | | |-ImplicitCastExpr 0x2080a9a72d8 <line:213:21> 'int (*)()' <FunctionToPointerDecay>
|   |     | |     | | | `-DeclRefExpr 0x2080a9a7148 <col:21> 'int ()' Function 0x2080a9a7080 'EVP_read_pw_string' 'int ()'
|   |     | |     | | |-ImplicitCastExpr 0x2080a9a7330 <line:214:22> 'char *' <LValueToRValue>
|   |     | |     | | | `-DeclRefExpr 0x2080a9a7168 <col:22> 'char *' lvalue Var 0x2080a917698 'passwd_malloc' 'char *'
|   |     | |     | | |-ImplicitCastExpr 0x2080a9a7348 <col:37> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |     | | | `-DeclRefExpr 0x2080a9a7188 <col:37> 'size_t':'unsigned long long' lvalue Var 0x2080a918170 'passwd_malloc_size' 'size_t':'unsigned long long'
|   |     | |     | | |-ImplicitCastExpr 0x2080a9a7360 <col:57> 'char *' <ArrayToPointerDecay>
|   |     | |     | | | `-StringLiteral 0x2080a9a71e8 <col:57> 'char [11]' lvalue "Password: "
|   |     | |     | | `-UnaryOperator 0x2080a9a72c0 <line:215:22, col:50> 'int' prefix '!' cannot overflow
|   |     | |     | |   `-ParenExpr 0x2080a9a72a0 <col:23, col:50> 'int'
|   |     | |     | |     `-BinaryOperator 0x2080a9a7280 <col:24, col:39> 'int' '||'
|   |     | |     | |       |-ImplicitCastExpr 0x2080a9a7250 <col:24> 'int' <LValueToRValue>
|   |     | |     | |       | `-DeclRefExpr 0x2080a9a7210 <col:24> 'int' lvalue Var 0x2080a917b68 'passed_salt' 'int'
|   |     | |     | |       `-ImplicitCastExpr 0x2080a9a7268 <col:39> 'int' <LValueToRValue>
|   |     | |     | |         `-DeclRefExpr 0x2080a9a7230 <col:39> 'int' lvalue Var 0x2080a917aa8 'in_noverify' 'int'
|   |     | |     | `-IntegerLiteral 0x2080a9a7378 <col:56> 'int' 0
|   |     | |     `-GotoStmt 0x2080a9a73c0 <line:216:21, col:26> 'end' 0x2080a9189f0
|   |     | `-BinaryOperator 0x2080a9a74f0 <line:218:13, col:26> 'char *' '='
|   |     |   |-ArraySubscriptExpr 0x2080a9a7498 <col:13, col:22> 'char *' lvalue
|   |     |   | |-ImplicitCastExpr 0x2080a9a7480 <col:13> 'char **' <LValueToRValue>
|   |     |   | | `-DeclRefExpr 0x2080a9a7438 <col:13> 'char **' lvalue Var 0x2080a917418 'passwds' 'char **'
|   |     |   | `-IntegerLiteral 0x2080a9a7458 <col:21> 'int' 0
|   |     |   `-ImplicitCastExpr 0x2080a9a74d8 <col:26> 'char *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x2080a9a74b8 <col:26> 'char *' lvalue Var 0x2080a917698 'passwd_malloc' 'char *'
|   |     `-CompoundStmt 0x2080a9a75e0 <line:219:16, line:223:9>
|   |       `-GotoStmt 0x2080a9a75c8 <line:222:13, col:18> 'end' 0x2080a9189f0
|   |-IfStmt 0x2080a9ac668 <line:226:5, line:263:5> has_else
|   | |-OpaqueValueExpr 0x2080a9ac650 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x2080a9ab4c8 <line:226:21, line:237:5>
|   | | |-CStyleCastExpr 0x2080a9a7bb8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
|   | | | `-ParenExpr 0x2080a9a7b98 <col:35, col:128> 'int'
|   | | |   `-BinaryOperator 0x2080a9a7b48 <col:37, col:126> 'int' '||'
|   | | |     |-ParenExpr 0x2080a9a7838 <col:37, col:53> 'int'
|   | | |     | `-UnaryOperator 0x2080a9a7820 <col:38, col:52> 'int' prefix '!' cannot overflow
|   | | |     |   `-UnaryOperator 0x2080a9a7808 <col:39, col:52> 'int' prefix '!' cannot overflow
|   | | |     |     `-ParenExpr 0x2080a9a77e8 <col:40, col:52> 'int'
|   | | |     |       `-BinaryOperator 0x2080a9a77c8 <.//openssl//file_jk/before\apps\passwd.c:227:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |     |         |-ImplicitCastExpr 0x2080a9a7798 <.//openssl//file_jk/before\apps\passwd.c:227:16> 'char **' <LValueToRValue>
|   | | |     |         | `-DeclRefExpr 0x2080a9a76f0 <col:16> 'char **' lvalue Var 0x2080a917418 'passwds' 'char **'
|   | | |     |         `-ImplicitCastExpr 0x2080a9a77b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char **' <BitCast>
|   | | |     |           `-ParenExpr 0x2080a9a7778 <col:17, col:27> 'void *'
|   | | |     |             `-CStyleCastExpr 0x2080a9a7750 <col:18, col:26> 'void *' <NullToPointer>
|   | | |     |               `-IntegerLiteral 0x2080a9a7710 <col:26> 'int' 0
|   | | |     `-ParenExpr 0x2080a9a7b28 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   | | |       `-BinaryOperator 0x2080a9a7b08 <col:59, col:125> 'int' ','
|   | | |         |-CallExpr 0x2080a9a7a30 <col:59, col:122> 'void'
|   | | |         | |-ImplicitCastExpr 0x2080a9a7a18 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | |         | | `-DeclRefExpr 0x2080a9a7858 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x2080a94bc20 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   | | |         | |-ImplicitCastExpr 0x2080a9a7a80 <<scratch space>:304:1> 'const wchar_t *' <NoOp>
|   | | |         | | `-ImplicitCastExpr 0x2080a9a7a68 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | | |         | |   `-StringLiteral 0x2080a9a78b8 <col:1> 'unsigned short [16]' lvalue L"passwds != NULL"
|   | | |         | |-ImplicitCastExpr 0x2080a9a7ab0 <line:306:1> 'const wchar_t *' <NoOp>
|   | | |         | | `-ImplicitCastExpr 0x2080a9a7a98 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | | |         | |   `-StringLiteral 0x2080a9a7928 <col:1> 'unsigned short [41]' lvalue L".//openssl//file_jk/before\\apps\\passwd.c"
|   | | |         | `-ImplicitCastExpr 0x2080a9a7ac8 <line:307:1> 'unsigned int' <IntegralCast>
|   | | |         |   `-IntegerLiteral 0x2080a9a7990 <col:1> 'int' 227
|   | | |         `-IntegerLiteral 0x2080a9a7ae0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   | | |-CStyleCastExpr 0x2080a9ab0a0 <col:29, col:128> 'void' <ToVoid>
|   | | | `-ParenExpr 0x2080a9ab080 <col:35, col:128> 'int'
|   | | |   `-BinaryOperator 0x2080a9ab030 <col:37, col:126> 'int' '||'
|   | | |     |-ParenExpr 0x2080a9a7d80 <col:37, col:53> 'int'
|   | | |     | `-UnaryOperator 0x2080a9a7d68 <col:38, col:52> 'int' prefix '!' cannot overflow
|   | | |     |   `-UnaryOperator 0x2080a9a7d50 <col:39, col:52> 'int' prefix '!' cannot overflow
|   | | |     |     `-ParenExpr 0x2080a9a7d30 <col:40, col:52> 'int'
|   | | |     |       `-BinaryOperator 0x2080a9a7d10 <.//openssl//file_jk/before\apps\passwd.c:228:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |     |         |-ImplicitCastExpr 0x2080a9a7ce0 <.//openssl//file_jk/before\apps\passwd.c:228:16, col:17> 'char *' <LValueToRValue>
|   | | |     |         | `-UnaryOperator 0x2080a9a7c40 <col:16, col:17> 'char *' lvalue prefix '*' cannot overflow
|   | | |     |         |   `-ImplicitCastExpr 0x2080a9a7c28 <col:17> 'char **' <LValueToRValue>
|   | | |     |         |     `-DeclRefExpr 0x2080a9a7c08 <col:17> 'char **' lvalue Var 0x2080a917418 'passwds' 'char **'
|   | | |     |         `-ImplicitCastExpr 0x2080a9a7cf8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | | |     |           `-ParenExpr 0x2080a9a7cc0 <col:17, col:27> 'void *'
|   | | |     |             `-CStyleCastExpr 0x2080a9a7c98 <col:18, col:26> 'void *' <NullToPointer>
|   | | |     |               `-IntegerLiteral 0x2080a9a7c58 <col:26> 'int' 0
|   | | |     `-ParenExpr 0x2080a9ab010 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   | | |       `-BinaryOperator 0x2080a9a7fb0 <col:59, col:125> 'int' ','
|   | | |         |-CallExpr 0x2080a9a7ed8 <col:59, col:122> 'void'
|   | | |         | |-ImplicitCastExpr 0x2080a9a7ec0 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | |         | | `-DeclRefExpr 0x2080a9a7da0 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x2080a94bc20 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   | | |         | |-ImplicitCastExpr 0x2080a9a7f28 <<scratch space>:3:1> 'const wchar_t *' <NoOp>
|   | | |         | | `-ImplicitCastExpr 0x2080a9a7f10 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | | |         | |   `-StringLiteral 0x2080a9a7df8 <col:1> 'unsigned short [17]' lvalue L"*passwds != NULL"
|   | | |         | |-ImplicitCastExpr 0x2080a9a7f58 <line:5:1> 'const wchar_t *' <NoOp>
|   | | |         | | `-ImplicitCastExpr 0x2080a9a7f40 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | | |         | |   `-StringLiteral 0x2080a9a7e30 <col:1> 'unsigned short [41]' lvalue L".//openssl//file_jk/before\\apps\\passwd.c"
|   | | |         | `-ImplicitCastExpr 0x2080a9a7f70 <line:6:1> 'unsigned int' <IntegralCast>
|   | | |         |   `-IntegerLiteral 0x2080a9a7e98 <col:1> 'int' 228
|   | | |         `-IntegerLiteral 0x2080a9a7f88 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   | | `-DoStmt 0x2080a9ab4a8 <.//openssl//file_jk/before\apps\passwd.c:230:9, line:236:34>
|   | |   |-CompoundStmt 0x2080a9ab360 <line:230:12, line:236:9>
|   | |   | |-BinaryOperator 0x2080a9ab150 <line:231:13, col:30> 'char *' '='
|   | |   | | |-DeclRefExpr 0x2080a9ab0c8 <col:13> 'char *' lvalue Var 0x2080a9172f8 'passwd' 'char *'
|   | |   | | `-ImplicitCastExpr 0x2080a9ab138 <col:22, col:30> 'char *' <LValueToRValue>
|   | |   | |   `-UnaryOperator 0x2080a9ab120 <col:22, col:30> 'char *' lvalue prefix '*' cannot overflow
|   | |   | |     `-UnaryOperator 0x2080a9ab108 <col:23, col:30> 'char **' postfix '++'
|   | |   | |       `-DeclRefExpr 0x2080a9ab0e8 <col:23> 'char **' lvalue Var 0x2080a917418 'passwds' 'char **'
|   | |   | `-IfStmt 0x2080a9ab348 <line:232:13, line:235:22>
|   | |   |   |-OpaqueValueExpr 0x2080a9ab330 <<invalid sloc>> '_Bool'
|   | |   |   `-GotoStmt 0x2080a9ab318 <col:17, col:22> 'end' 0x2080a9189f0
|   | |   `-BinaryOperator 0x2080a9ab488 <line:236:18, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |     |-ImplicitCastExpr 0x2080a9ab458 <.//openssl//file_jk/before\apps\passwd.c:236:18, col:19> 'char *' <LValueToRValue>
|   | |     | `-UnaryOperator 0x2080a9ab3b8 <col:18, col:19> 'char *' lvalue prefix '*' cannot overflow
|   | |     |   `-ImplicitCastExpr 0x2080a9ab3a0 <col:19> 'char **' <LValueToRValue>
|   | |     |     `-DeclRefExpr 0x2080a9ab380 <col:19> 'char **' lvalue Var 0x2080a917418 'passwds' 'char **'
|   | |     `-ImplicitCastExpr 0x2080a9ab470 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |       `-ParenExpr 0x2080a9ab438 <col:17, col:27> 'void *'
|   | |         `-CStyleCastExpr 0x2080a9ab410 <col:18, col:26> 'void *' <NullToPointer>
|   | |           `-IntegerLiteral 0x2080a9ab3d0 <col:26> 'int' 0
|   | `-CompoundStmt 0x2080a9ac628 <.//openssl//file_jk/before\apps\passwd.c:237:12, line:263:5>
|   |   |-DeclStmt 0x2080a9ab570 <line:239:9, col:17>
|   |   | `-VarDecl 0x2080a9ab508 <col:9, col:13> col:13 used done 'int'
|   |   |-CStyleCastExpr 0x2080a9ab9b0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
|   |   | `-ParenExpr 0x2080a9ab990 <col:35, col:128> 'int'
|   |   |   `-BinaryOperator 0x2080a9ab940 <col:37, col:126> 'int' '||'
|   |   |     |-ParenExpr 0x2080a9ab6d0 <col:37, col:53> 'int'
|   |   |     | `-UnaryOperator 0x2080a9ab6b8 <col:38, col:52> 'int' prefix '!' cannot overflow
|   |   |     |   `-UnaryOperator 0x2080a9ab6a0 <col:39, col:52> 'int' prefix '!' cannot overflow
|   |   |     |     `-ParenExpr 0x2080a9ab680 <col:40, col:52> 'int'
|   |   |     |       `-BinaryOperator 0x2080a9ab660 <.//openssl//file_jk/before\apps\passwd.c:241:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   |   |     |         |-ImplicitCastExpr 0x2080a9ab630 <.//openssl//file_jk/before\apps\passwd.c:241:16> 'char *' <LValueToRValue>
|   |   |     |         | `-DeclRefExpr 0x2080a9ab588 <col:16> 'char *' lvalue Var 0x2080a9172f8 'passwd' 'char *'
|   |   |     |         `-ImplicitCastExpr 0x2080a9ab648 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   |   |     |           `-ParenExpr 0x2080a9ab610 <col:17, col:27> 'void *'
|   |   |     |             `-CStyleCastExpr 0x2080a9ab5e8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     |               `-IntegerLiteral 0x2080a9ab5a8 <col:26> 'int' 0
|   |   |     `-ParenExpr 0x2080a9ab920 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   |   |       `-BinaryOperator 0x2080a9ab900 <col:59, col:125> 'int' ','
|   |   |         |-CallExpr 0x2080a9ab828 <col:59, col:122> 'void'
|   |   |         | |-ImplicitCastExpr 0x2080a9ab810 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |         | | `-DeclRefExpr 0x2080a9ab6f0 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x2080a94bc20 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   |   |         | |-ImplicitCastExpr 0x2080a9ab878 <<scratch space>:8:1> 'const wchar_t *' <NoOp>
|   |   |         | | `-ImplicitCastExpr 0x2080a9ab860 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   |   |         | |   `-StringLiteral 0x2080a9ab748 <col:1> 'unsigned short [15]' lvalue L"passwd != NULL"
|   |   |         | |-ImplicitCastExpr 0x2080a9ab8a8 <line:10:1> 'const wchar_t *' <NoOp>
|   |   |         | | `-ImplicitCastExpr 0x2080a9ab890 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   |   |         | |   `-StringLiteral 0x2080a9ab780 <col:1> 'unsigned short [41]' lvalue L".//openssl//file_jk/before\\apps\\passwd.c"
|   |   |         | `-ImplicitCastExpr 0x2080a9ab8c0 <line:11:1> 'unsigned int' <IntegralCast>
|   |   |         |   `-IntegerLiteral 0x2080a9ab7e8 <col:1> 'int' 241
|   |   |         `-IntegerLiteral 0x2080a9ab8d8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   |   `-DoStmt 0x2080a9ac608 <.//openssl//file_jk/before\apps\passwd.c:242:9, line:262:23>
|   |     |-CompoundStmt 0x2080a9ac590 <line:242:12, line:262:9>
|   |     | |-DeclStmt 0x2080a9abc20 <line:243:13, col:56>
|   |     | | `-VarDecl 0x2080a9ab9f0 <col:13, col:17> col:17 used r 'int'
|   |     | |-IfStmt 0x2080a9ac480 <line:244:13, line:260:13>
|   |     | | |-BinaryOperator 0x2080a9abcb0 <line:244:17, col:21> 'int' '>'
|   |     | | | |-ImplicitCastExpr 0x2080a9abc98 <col:17> 'int' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x2080a9abc38 <col:17> 'int' lvalue Var 0x2080a9ab9f0 'r' 'int'
|   |     | | | `-IntegerLiteral 0x2080a9abc70 <col:21> 'int' 0
|   |     | | `-CompoundStmt 0x2080a9ac458 <col:24, line:260:13>
|   |     | |   |-DeclStmt 0x2080a9abe80 <line:245:17, col:49>
|   |     | |   | `-VarDecl 0x2080a9abce8 <col:17, col:48> col:23 used c 'char *' cinit
|   |     | |   |   `-ParenExpr 0x2080a9abe60 <col:27, col:48> 'char *'
|   |     | |   |     `-CallExpr 0x2080a9abe00 <col:28, col:47> 'char *'
|   |     | |   |       |-ImplicitCastExpr 0x2080a9abde8 <col:28> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |     | |   |       | `-DeclRefExpr 0x2080a9abd50 <col:28> 'char *(const char *, int)' Function 0x2080a8b60d0 'strchr' 'char *(const char *, int)'
|   |     | |   |       |-ImplicitCastExpr 0x2080a9abe48 <col:35> 'const char *' <NoOp>
|   |     | |   |       | `-ImplicitCastExpr 0x2080a9abe30 <col:35> 'char *' <LValueToRValue>
|   |     | |   |       |   `-DeclRefExpr 0x2080a9abd70 <col:35> 'char *' lvalue Var 0x2080a9172f8 'passwd' 'char *'
|   |     | |   |       `-CharacterLiteral 0x2080a9abd90 <col:43> 'int' 10
|   |     | |   |-IfStmt 0x2080a9ac258 <line:246:17, line:254:17> has_else
|   |     | |   | |-BinaryOperator 0x2080a9abf88 <line:246:21, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   |     | |   | | |-ImplicitCastExpr 0x2080a9abf58 <.//openssl//file_jk/before\apps\passwd.c:246:21> 'char *' <LValueToRValue>
|   |     | |   | | | `-DeclRefExpr 0x2080a9abe98 <col:21> 'char *' lvalue Var 0x2080a9abce8 'c' 'char *'
|   |     | |   | | `-ImplicitCastExpr 0x2080a9abf70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   |     | |   | |   `-ParenExpr 0x2080a9abf38 <col:17, col:27> 'void *'
|   |     | |   | |     `-CStyleCastExpr 0x2080a9abf10 <col:18, col:26> 'void *' <NullToPointer>
|   |     | |   | |       `-IntegerLiteral 0x2080a9abed0 <col:26> 'int' 0
|   |     | |   | |-CompoundStmt 0x2080a9ac080 <.//openssl//file_jk/before\apps\passwd.c:246:32, line:248:17>
|   |     | |   | | `-BinaryOperator 0x2080a9ac060 <line:247:21, col:26> 'char' '='
|   |     | |   | |   |-UnaryOperator 0x2080a9abfe0 <col:21, col:22> 'char' lvalue prefix '*' cannot overflow
|   |     | |   | |   | `-ImplicitCastExpr 0x2080a9abfc8 <col:22> 'char *' <LValueToRValue>
|   |     | |   | |   |   `-DeclRefExpr 0x2080a9abfa8 <col:22> 'char *' lvalue Var 0x2080a9abce8 'c' 'char *'
|   |     | |   | |   `-ImplicitCastExpr 0x2080a9ac048 <col:26> 'char' <IntegralCast>
|   |     | |   | |     `-IntegerLiteral 0x2080a9ac020 <col:26> 'int' 0
|   |     | |   | `-CompoundStmt 0x2080a9ac240 <line:248:24, line:254:17>
|   |     | |   |   `-DeclStmt 0x2080a9ac110 <line:250:21, col:39>
|   |     | |   |     `-VarDecl 0x2080a9ac0a8 <col:21, col:26> col:26 invalid trash 'char'
|   |     | |   `-IfStmt 0x2080a9ac440 <line:256:17, line:259:26>
|   |     | |     |-OpaqueValueExpr 0x2080a9ac428 <<invalid sloc>> '_Bool'
|   |     | |     `-GotoStmt 0x2080a9ac410 <col:21, col:26> 'end' 0x2080a9189f0
|   |     | `-BinaryOperator 0x2080a9ac570 <line:261:13, col:27> 'int' '='
|   |     |   |-DeclRefExpr 0x2080a9ac498 <col:13> 'int' lvalue Var 0x2080a9ab508 'done' 'int'
|   |     |   `-ParenExpr 0x2080a9ac550 <col:20, col:27> 'int'
|   |     |     `-BinaryOperator 0x2080a9ac530 <col:21, col:26> 'int' '<='
|   |     |       |-ImplicitCastExpr 0x2080a9ac518 <col:21> 'int' <LValueToRValue>
|   |     |       | `-DeclRefExpr 0x2080a9ac4d0 <col:21> 'int' lvalue Var 0x2080a9ab9f0 'r' 'int'
|   |     |       `-IntegerLiteral 0x2080a9ac4f0 <col:26> 'int' 0
|   |     `-UnaryOperator 0x2080a9ac5f0 <line:262:18, col:19> 'int' prefix '!' cannot overflow
|   |       `-ImplicitCastExpr 0x2080a9ac5d8 <col:19> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x2080a9ac5b8 <col:19> 'int' lvalue Var 0x2080a9ab508 'done' 'int'
|   |-BinaryOperator 0x2080a9ac6d8 <line:264:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x2080a9ac690 <col:5> 'int' lvalue Var 0x2080a917e48 'ret' 'int'
|   | `-IntegerLiteral 0x2080a9ac6b0 <col:11> 'int' 0
|   |-LabelStmt 0x2080a9ac810 <line:266:2, col:5> 'end'
|   | `-NullStmt 0x2080a9ac808 <col:5>
|   |-CallExpr 0x2080a9ac970 <line:268:5, col:29> 'int'
|   | |-ImplicitCastExpr 0x2080a9ac958 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2080a9ac918 <col:5> 'int ()' Function 0x2080a9ac850 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x2080a9ac998 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2080a9ac938 <col:18> 'char *' lvalue Var 0x2080a917578 'salt_malloc' 'char *'
|   |-CallExpr 0x2080a9aca08 <line:269:5, col:31> 'int'
|   | |-ImplicitCastExpr 0x2080a9ac9f0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2080a9ac9b0 <col:5> 'int ()' Function 0x2080a9ac850 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x2080a9aca30 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2080a9ac9d0 <col:18> 'char *' lvalue Var 0x2080a917698 'passwd_malloc' 'char *'
|   `-ReturnStmt 0x2080a9acbb0 <line:271:5, col:16>
|     `-ImplicitCastExpr 0x2080a9acb98 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x2080a9acb78 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x2080a9acb58 <col:13> 'int' lvalue Var 0x2080a917e48 'ret' 'int'
|-FunctionDecl 0x2080a9acef0 <line:284:1, line:421:1> line:284:14 used md5crypt 'char *(const char *, const char *, const char *)' static
| |-ParmVarDecl 0x2080a9accb8 <col:23, col:35> col:35 used passwd 'const char *'
| |-ParmVarDecl 0x2080a9acd38 <col:43, col:55> col:55 used magic 'const char *'
| |-ParmVarDecl 0x2080a9acdb8 <col:62, col:74> col:74 used salt 'const char *'
| `-CompoundStmt 0x2080a9b5df8 <line:285:1, line:421:1>
|   |-DeclStmt 0x2080a9a8170 <line:287:5, col:40>
|   | `-VarDecl 0x2080a9a8108 <col:5, col:39> col:17 used out_buf 'char [41]' static
|   |-DeclStmt 0x2080a9a8208 <line:288:5, col:41>
|   | `-VarDecl 0x2080a9a81a0 <col:5, col:19> col:19 invalid buf 'unsigned char'
|   |-DeclStmt 0x2080a9a82a0 <line:289:5, col:19>
|   | `-VarDecl 0x2080a9a8238 <col:5, col:11> col:11 used salt_out 'char *'
|   |-DeclStmt 0x2080a9a8338 <line:290:5, col:10>
|   | `-VarDecl 0x2080a9a82d0 <col:5, col:9> col:9 used n 'int'
|   |-DeclStmt 0x2080a9a83d0 <line:291:5, col:19>
|   | `-VarDecl 0x2080a9a8368 <col:5, col:18> col:18 used i 'unsigned int'
|   |-DeclStmt 0x2080a9a8680 <line:293:5, col:43>
|   | |-VarDecl 0x2080a9a8508 <col:5, col:12> col:12 used passwd_len 'size_t':'unsigned long long'
|   | |-VarDecl 0x2080a9a8580 <col:5, col:24> col:24 used salt_len 'size_t':'unsigned long long'
|   | `-VarDecl 0x2080a9a85f8 <col:5, col:34> col:34 used magic_len 'size_t':'unsigned long long'
|   |-BinaryOperator 0x2080a9a87b0 <line:295:5, col:31> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x2080a9a8698 <col:5> 'size_t':'unsigned long long' lvalue Var 0x2080a9a8508 'passwd_len' 'size_t':'unsigned long long'
|   | `-CallExpr 0x2080a9a8770 <col:18, col:31> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x2080a9a8758 <col:18> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2080a9a86d0 <col:18> 'unsigned long long (const char *)' Function 0x2080a8bba30 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x2080a9a8798 <col:25> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2080a9a86f0 <col:25> 'const char *' lvalue ParmVar 0x2080a9accb8 'passwd' 'const char *'
|   |-BinaryOperator 0x2080a9a8898 <line:296:5, col:18> 'char' '='
|   | |-ArraySubscriptExpr 0x2080a9a8848 <col:5, col:14> 'char' lvalue
|   | | |-ImplicitCastExpr 0x2080a9a8830 <col:5> 'char *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x2080a9a87d0 <col:5> 'char [41]' lvalue Var 0x2080a9a8108 'out_buf' 'char [41]'
|   | | `-IntegerLiteral 0x2080a9a8808 <col:13> 'int' 0
|   | `-ImplicitCastExpr 0x2080a9a8880 <col:18> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x2080a9a8868 <col:18> 'int' 36
|   |-BinaryOperator 0x2080a9a8978 <line:297:5, col:18> 'char' '='
|   | |-ArraySubscriptExpr 0x2080a9a8918 <col:5, col:14> 'char' lvalue
|   | | |-ImplicitCastExpr 0x2080a9a8900 <col:5> 'char *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x2080a9a88b8 <col:5> 'char [41]' lvalue Var 0x2080a9a8108 'out_buf' 'char [41]'
|   | | `-IntegerLiteral 0x2080a9a88d8 <col:13> 'int' 1
|   | `-ImplicitCastExpr 0x2080a9a8960 <col:18> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x2080a9a8938 <col:18> 'int' 0
|   |-BinaryOperator 0x2080a9a8a80 <line:298:5, col:29> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x2080a9a8998 <col:5> 'size_t':'unsigned long long' lvalue Var 0x2080a9a85f8 'magic_len' 'size_t':'unsigned long long'
|   | `-CallExpr 0x2080a9a8a40 <col:17, col:29> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x2080a9a8a28 <col:17> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2080a9a89d0 <col:17> 'unsigned long long (const char *)' Function 0x2080a8bba30 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x2080a9a8a68 <col:24> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2080a9a89f0 <col:24> 'const char *' lvalue ParmVar 0x2080a9acd38 'magic' 'const char *'
|   |-IfStmt 0x2080a9a8be8 <line:300:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-BinaryOperator 0x2080a9a8b18 <.//openssl//file_jk/before\apps\passwd.c:300:9, col:21> 'int' '>'
|   | | |-ImplicitCastExpr 0x2080a9a8ae8 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2080a9a8aa0 <col:9> 'size_t':'unsigned long long' lvalue Var 0x2080a9a85f8 'magic_len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x2080a9a8b00 <col:21> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x2080a9a8ac0 <col:21> 'int' 4
|   | `-ReturnStmt 0x2080a9a8bd8 <line:301:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |   `-ImplicitCastExpr 0x2080a9a8bc0 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x2080a9a8ba0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x2080a9a8b78 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x2080a9a8b38 <col:26> 'int' 0
|   |-CallExpr 0x2080a9a8dc8 <.//openssl//file_jk/before\apps\passwd.c:303:5, col:52> 'int'
|   | |-ImplicitCastExpr 0x2080a9a8db0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2080a9a8cf0 <col:5> 'int ()' Function 0x2080a9a8c28 'OPENSSL_strlcat' 'int ()'
|   | |-ImplicitCastExpr 0x2080a9a8e00 <col:21> 'char *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x2080a9a8d10 <col:21> 'char [41]' lvalue Var 0x2080a9a8108 'out_buf' 'char [41]'
|   | |-ImplicitCastExpr 0x2080a9a8e18 <col:30> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x2080a9a8d30 <col:30> 'const char *' lvalue ParmVar 0x2080a9acd38 'magic' 'const char *'
|   | `-UnaryExprOrTypeTraitExpr 0x2080a9a8d90 <col:37, col:51> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x2080a9a8d70 <col:43, col:51> 'char [41]' lvalue
|   |     `-DeclRefExpr 0x2080a9a8d50 <col:44> 'char [41]' lvalue Var 0x2080a9a8108 'out_buf' 'char [41]' non_odr_use_unevaluated
|   |-CallExpr 0x2080a9a8f08 <line:304:5, col:50> 'int'
|   | |-ImplicitCastExpr 0x2080a9a8ef0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2080a9a8e30 <col:5> 'int ()' Function 0x2080a9a8c28 'OPENSSL_strlcat' 'int ()'
|   | |-ImplicitCastExpr 0x2080a9a8f40 <col:21> 'char *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x2080a9a8e50 <col:21> 'char [41]' lvalue Var 0x2080a9a8108 'out_buf' 'char [41]'
|   | |-ImplicitCastExpr 0x2080a9a8f58 <col:30> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x2080a9a8e70 <col:30> 'char [2]' lvalue "$"
|   | `-UnaryExprOrTypeTraitExpr 0x2080a9a8ed0 <col:35, col:49> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x2080a9a8eb0 <col:41, col:49> 'char [41]' lvalue
|   |     `-DeclRefExpr 0x2080a9a8e90 <col:42> 'char [41]' lvalue Var 0x2080a9a8108 'out_buf' 'char [41]' non_odr_use_unevaluated
|   |-CallExpr 0x2080a9b00d8 <line:305:5, col:51> 'int'
|   | |-ImplicitCastExpr 0x2080a9b00c0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2080a9a8f70 <col:5> 'int ()' Function 0x2080a9a8c28 'OPENSSL_strlcat' 'int ()'
|   | |-ImplicitCastExpr 0x2080a9b0110 <col:21> 'char *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x2080a9a8f90 <col:21> 'char [41]' lvalue Var 0x2080a9a8108 'out_buf' 'char [41]'
|   | |-ImplicitCastExpr 0x2080a9b0128 <col:30> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x2080a9a8fb0 <col:30> 'const char *' lvalue ParmVar 0x2080a9acdb8 'salt' 'const char *'
|   | `-UnaryExprOrTypeTraitExpr 0x2080a9b00a0 <col:36, col:50> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x2080a9b0080 <col:42, col:50> 'char [41]' lvalue
|   |     `-DeclRefExpr 0x2080a9b0060 <col:43> 'char [41]' lvalue Var 0x2080a9a8108 'out_buf' 'char [41]' non_odr_use_unevaluated
|   |-IfStmt 0x2080a9b0360 <line:307:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-BinaryOperator 0x2080a9b0290 <.//openssl//file_jk/before\apps\passwd.c:307:9, col:31> 'int' '>'
|   | | |-CallExpr 0x2080a9b01b0 <col:9, col:23> 'unsigned long long'
|   | | | |-ImplicitCastExpr 0x2080a9b0198 <col:9> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x2080a9b0140 <col:9> 'unsigned long long (const char *)' Function 0x2080a8bba30 'strlen' 'unsigned long long (const char *)'
|   | | | `-ImplicitCastExpr 0x2080a9b01f0 <col:16> 'const char *' <NoOp>
|   | | |   `-ImplicitCastExpr 0x2080a9b01d8 <col:16> 'char *' <ArrayToPointerDecay>
|   | | |     `-DeclRefExpr 0x2080a9b0160 <col:16> 'char [41]' lvalue Var 0x2080a9a8108 'out_buf' 'char [41]'
|   | | `-ImplicitCastExpr 0x2080a9b0278 <col:27, col:31> 'unsigned long long' <IntegralCast>
|   | |   `-BinaryOperator 0x2080a9b0258 <col:27, col:31> 'int' '+'
|   | |     |-IntegerLiteral 0x2080a9b0208 <col:27> 'int' 6
|   | |     `-IntegerLiteral 0x2080a9b0230 <col:31> 'int' 8
|   | `-ReturnStmt 0x2080a9b0350 <line:308:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |   `-ImplicitCastExpr 0x2080a9b0338 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x2080a9b0318 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x2080a9b02f0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x2080a9b02b0 <col:26> 'int' 0
|   |-BinaryOperator 0x2080a9b0488 <.//openssl//file_jk/before\apps\passwd.c:310:5, col:30> 'char *' '='
|   | |-DeclRefExpr 0x2080a9b0378 <col:5> 'char *' lvalue Var 0x2080a9a8238 'salt_out' 'char *'
|   | `-BinaryOperator 0x2080a9b0468 <col:16, col:30> 'char *' '+'
|   |   |-BinaryOperator 0x2080a9b0410 <col:16, col:26> 'char *' '+'
|   |   | |-ImplicitCastExpr 0x2080a9b03f8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x2080a9b03b0 <col:16> 'char [41]' lvalue Var 0x2080a9a8108 'out_buf' 'char [41]'
|   |   | `-IntegerLiteral 0x2080a9b03d0 <col:26> 'int' 2
|   |   `-ImplicitCastExpr 0x2080a9b0450 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x2080a9b0430 <col:30> 'size_t':'unsigned long long' lvalue Var 0x2080a9a85f8 'magic_len' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x2080a9b05a8 <line:311:5, col:31> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x2080a9b04a8 <col:5> 'size_t':'unsigned long long' lvalue Var 0x2080a9a8580 'salt_len' 'size_t':'unsigned long long'
|   | `-CallExpr 0x2080a9b0550 <col:16, col:31> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x2080a9b0538 <col:16> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2080a9b04e0 <col:16> 'unsigned long long (const char *)' Function 0x2080a8bba30 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x2080a9b0590 <col:23> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x2080a9b0578 <col:23> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2080a9b0500 <col:23> 'char *' lvalue Var 0x2080a9a8238 'salt_out' 'char *'
|   |-IfStmt 0x2080a9b0710 <line:313:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-BinaryOperator 0x2080a9b0640 <.//openssl//file_jk/before\apps\passwd.c:313:9, col:20> 'int' '>'
|   | | |-ImplicitCastExpr 0x2080a9b0610 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2080a9b05c8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x2080a9a8580 'salt_len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x2080a9b0628 <col:20> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x2080a9b05e8 <col:20> 'int' 8
|   | `-ReturnStmt 0x2080a9b0700 <line:314:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |   `-ImplicitCastExpr 0x2080a9b06e8 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x2080a9b06c8 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x2080a9b06a0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x2080a9b0660 <col:26> 'int' 0
|   |-IfStmt 0x2080a9b0f38 <.//openssl//file_jk/before\apps\passwd.c:317:5, line:324:14>
|   | |-OpaqueValueExpr 0x2080a9b0f20 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2080a9b0f08 <col:9, col:14> 'err' 0x2080a9b0eb8
|   |-IfStmt 0x2080a9a93b8 <line:327:5, line:333:14>
|   | |-OpaqueValueExpr 0x2080a9a93a0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2080a9a9388 <col:9, col:14> 'err' 0x2080a9b0eb8
|   |-IfStmt 0x2080a9a95a8 <line:339:5, line:340:14>
|   | |-OpaqueValueExpr 0x2080a9a9590 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2080a9a9578 <col:9, col:14> 'err' 0x2080a9b0eb8
|   |-BinaryOperator 0x2080a9a9648 <line:342:5, col:9> 'int' '='
|   | |-DeclRefExpr 0x2080a9a95c0 <col:5> 'int' lvalue Var 0x2080a9a82d0 'n' 'int'
|   | `-ImplicitCastExpr 0x2080a9a9630 <col:9> 'int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x2080a9a9618 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x2080a9a95f8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x2080a9a8508 'passwd_len' 'size_t':'unsigned long long'
|   |-WhileStmt 0x2080a9a99f8 <line:343:5, line:347:5>
|   | |-ImplicitCastExpr 0x2080a9a9688 <line:343:12> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x2080a9a9668 <col:12> 'int' lvalue Var 0x2080a9a82d0 'n' 'int'
|   | `-CompoundStmt 0x2080a9a99d8 <col:15, line:347:5>
|   |   |-IfStmt 0x2080a9a9930 <line:344:9, line:345:18>
|   |   | |-OpaqueValueExpr 0x2080a9a9918 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x2080a9a9900 <col:13, col:18> 'err' 0x2080a9b0eb8
|   |   `-CompoundAssignOperator 0x2080a9a99a8 <line:346:9, col:15> 'int' '>>=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x2080a9a9948 <col:9> 'int' lvalue Var 0x2080a9a82d0 'n' 'int'
|   |     `-IntegerLiteral 0x2080a9a9968 <col:15> 'int' 1
|   |-IfStmt 0x2080a9a9b80 <line:348:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-OpaqueValueExpr 0x2080a9a9b68 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2080a9a9b58 <.//openssl//file_jk/before\apps\passwd.c:349:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |   `-ImplicitCastExpr 0x2080a9a9b40 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x2080a9a9b20 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x2080a9a9af8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x2080a9a9ab8 <col:26> 'int' 0
|   |-ForStmt 0x2080a9b17b0 <.//openssl//file_jk/before\apps\passwd.c:351:5, line:372:5>
|   | |-BinaryOperator 0x2080a9a9bf8 <line:351:10, col:14> 'unsigned int' '='
|   | | |-DeclRefExpr 0x2080a9a9b98 <col:10> 'unsigned int' lvalue Var 0x2080a9a8368 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x2080a9a9be0 <col:14> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x2080a9a9bb8 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2080a9a9c90 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x2080a9a9c60 <col:17> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2080a9a9c18 <col:17> 'unsigned int' lvalue Var 0x2080a9a8368 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x2080a9a9c78 <col:21> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x2080a9a9c38 <col:21> 'int' 1000
|   | |-UnaryOperator 0x2080a9a9cd0 <col:27, col:28> 'unsigned int' postfix '++'
|   | | `-DeclRefExpr 0x2080a9a9cb0 <col:27> 'unsigned int' lvalue Var 0x2080a9a8368 'i' 'unsigned int'
|   | `-CompoundStmt 0x2080a9b1770 <col:32, line:372:5>
|   |   |-IfStmt 0x2080a9a9e18 <line:352:9, line:353:18>
|   |   | |-OpaqueValueExpr 0x2080a9a9e00 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x2080a9a9de8 <col:13, col:18> 'err' 0x2080a9b0eb8
|   |   |-IfStmt 0x2080a9b1118 <line:354:9, line:357:18>
|   |   | |-OpaqueValueExpr 0x2080a9b1100 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x2080a9b10e8 <col:13, col:18> 'err' 0x2080a9b0eb8
|   |   |-IfStmt 0x2080a9b1288 <line:358:9, line:361:9>
|   |   | |-BinaryOperator 0x2080a9b11a8 <line:358:13, col:17> 'unsigned int' '%'
|   |   | | |-ImplicitCastExpr 0x2080a9b1178 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2080a9b1130 <col:13> 'unsigned int' lvalue Var 0x2080a9a8368 'i' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x2080a9b1190 <col:17> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x2080a9b1150 <col:17> 'int' 3
|   |   | `-CompoundStmt 0x2080a9b1270 <col:20, line:361:9>
|   |   |   `-IfStmt 0x2080a9b1258 <line:359:13, line:360:22>
|   |   |     |-OpaqueValueExpr 0x2080a9b1240 <<invalid sloc>> '_Bool'
|   |   |     `-GotoStmt 0x2080a9b1228 <col:17, col:22> 'err' 0x2080a9b0eb8
|   |   |-IfStmt 0x2080a9b13f8 <line:362:9, line:365:9>
|   |   | |-BinaryOperator 0x2080a9b1318 <line:362:13, col:17> 'unsigned int' '%'
|   |   | | |-ImplicitCastExpr 0x2080a9b12e8 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2080a9b12a0 <col:13> 'unsigned int' lvalue Var 0x2080a9a8368 'i' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x2080a9b1300 <col:17> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x2080a9b12c0 <col:17> 'int' 7
|   |   | `-CompoundStmt 0x2080a9b13e0 <col:20, line:365:9>
|   |   |   `-IfStmt 0x2080a9b13c8 <line:363:13, line:364:22>
|   |   |     |-OpaqueValueExpr 0x2080a9b13b0 <<invalid sloc>> '_Bool'
|   |   |     `-GotoStmt 0x2080a9b1398 <col:17, col:22> 'err' 0x2080a9b0eb8
|   |   |-IfStmt 0x2080a9b1668 <line:366:9, line:369:22>
|   |   | |-OpaqueValueExpr 0x2080a9b1650 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x2080a9b1638 <col:17, col:22> 'err' 0x2080a9b0eb8
|   |   `-IfStmt 0x2080a9b1758 <line:370:9, line:371:22>
|   |     |-OpaqueValueExpr 0x2080a9b1740 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x2080a9b1728 <col:17, col:22> 'err' 0x2080a9b0eb8
|   |-CompoundStmt 0x2080a9b5c40 <line:378:5, line:413:5>
|   | |-DeclStmt 0x2080a9b1aa8 <line:380:9, col:44>
|   | | `-VarDecl 0x2080a9b1a40 <col:9, col:23> col:23 invalid buf_perm 'unsigned char'
|   | |-DeclStmt 0x2080a9b1bd8 <line:381:9, col:25>
|   | | |-VarDecl 0x2080a9b1ad8 <col:9, col:13> col:13 used dest 'int'
|   | | `-VarDecl 0x2080a9b1b58 <col:9, col:19> col:19 used source 'int'
|   | |-DeclStmt 0x2080a9b1c70 <line:382:9, col:21>
|   | | `-VarDecl 0x2080a9b1c08 <col:9, col:15> col:15 used output 'char *'
|   | |-BinaryOperator 0x2080a9aa378 <line:395:9, col:29> 'char *' '='
|   | | |-DeclRefExpr 0x2080a9aa2b0 <col:9> 'char *' lvalue Var 0x2080a9b1c08 'output' 'char *'
|   | | `-BinaryOperator 0x2080a9aa358 <col:18, col:29> 'char *' '+'
|   | |   |-ImplicitCastExpr 0x2080a9aa328 <col:18> 'char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x2080a9aa2e8 <col:18> 'char *' lvalue Var 0x2080a9a8238 'salt_out' 'char *'
|   | |   `-ImplicitCastExpr 0x2080a9aa340 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     `-DeclRefExpr 0x2080a9aa308 <col:29> 'size_t':'unsigned long long' lvalue Var 0x2080a9a8580 'salt_len' 'size_t':'unsigned long long'
|   | |-CStyleCastExpr 0x2080a9aa868 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
|   | | `-ParenExpr 0x2080a9aa848 <col:35, col:128> 'int'
|   | |   `-BinaryOperator 0x2080a9aa7f8 <col:37, col:126> 'int' '||'
|   | |     |-ParenExpr 0x2080a9aa560 <col:37, col:53> 'int'
|   | |     | `-UnaryOperator 0x2080a9aa548 <col:38, col:52> 'int' prefix '!' cannot overflow
|   | |     |   `-UnaryOperator 0x2080a9aa530 <col:39, col:52> 'int' prefix '!' cannot overflow
|   | |     |     `-ParenExpr 0x2080a9aa510 <col:40, col:52> 'int'
|   | |     |       `-BinaryOperator 0x2080a9aa4f0 <.//openssl//file_jk/before\apps\passwd.c:396:16, col:50> 'int' '=='
|   | |     |         |-ImplicitCastExpr 0x2080a9aa4d8 <col:16> 'char *' <LValueToRValue>
|   | |     |         | `-DeclRefExpr 0x2080a9aa398 <col:16> 'char *' lvalue Var 0x2080a9b1c08 'output' 'char *'
|   | |     |         `-BinaryOperator 0x2080a9aa4b8 <col:26, col:50> 'char *' '+'
|   | |     |           |-ImplicitCastExpr 0x2080a9aa4a0 <col:26> 'char *' <ArrayToPointerDecay>
|   | |     |           | `-DeclRefExpr 0x2080a9aa3b8 <col:26> 'char [41]' lvalue Var 0x2080a9a8108 'out_buf' 'char [41]'
|   | |     |           `-CallExpr 0x2080a9aa448 <col:36, col:50> 'unsigned long long'
|   | |     |             |-ImplicitCastExpr 0x2080a9aa430 <col:36> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   | |     |             | `-DeclRefExpr 0x2080a9aa3d8 <col:36> 'unsigned long long (const char *)' Function 0x2080a8bba30 'strlen' 'unsigned long long (const char *)'
|   | |     |             `-ImplicitCastExpr 0x2080a9aa488 <col:43> 'const char *' <NoOp>
|   | |     |               `-ImplicitCastExpr 0x2080a9aa470 <col:43> 'char *' <ArrayToPointerDecay>
|   | |     |                 `-DeclRefExpr 0x2080a9aa3f8 <col:43> 'char [41]' lvalue Var 0x2080a9a8108 'out_buf' 'char [41]'
|   | |     `-ParenExpr 0x2080a9aa7d8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   | |       `-BinaryOperator 0x2080a9aa7b8 <col:59, col:125> 'int' ','
|   | |         |-CallExpr 0x2080a9aa6e0 <col:59, col:122> 'void'
|   | |         | |-ImplicitCastExpr 0x2080a9aa6c8 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |         | | `-DeclRefExpr 0x2080a9aa580 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x2080a94bc20 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   | |         | |-ImplicitCastExpr 0x2080a9aa730 <<scratch space>:18:1> 'const wchar_t *' <NoOp>
|   | |         | | `-ImplicitCastExpr 0x2080a9aa718 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |         | |   `-StringLiteral 0x2080a9aa5d8 <col:1> 'unsigned short [36]' lvalue L"output == out_buf + strlen(out_buf)"
|   | |         | |-ImplicitCastExpr 0x2080a9aa760 <line:20:1> 'const wchar_t *' <NoOp>
|   | |         | | `-ImplicitCastExpr 0x2080a9aa748 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |         | |   `-StringLiteral 0x2080a9aa638 <col:1> 'unsigned short [41]' lvalue L".//openssl//file_jk/before\\apps\\passwd.c"
|   | |         | `-ImplicitCastExpr 0x2080a9aa778 <line:21:1> 'unsigned int' <IntegralCast>
|   | |         |   `-IntegerLiteral 0x2080a9aa6a0 <col:1> 'int' 396
|   | |         `-IntegerLiteral 0x2080a9aa790 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   | |-BinaryOperator 0x2080a9aa910 <.//openssl//file_jk/before\apps\passwd.c:398:9, col:21> 'char' '='
|   | | |-UnaryOperator 0x2080a9aa8c8 <col:9, col:16> 'char' lvalue prefix '*' cannot overflow
|   | | | `-UnaryOperator 0x2080a9aa8b0 <col:10, col:16> 'char *' postfix '++'
|   | | |   `-DeclRefExpr 0x2080a9aa890 <col:10> 'char *' lvalue Var 0x2080a9b1c08 'output' 'char *'
|   | | `-ImplicitCastExpr 0x2080a9aa8f8 <col:21> 'char' <IntegralCast>
|   | |   `-CharacterLiteral 0x2080a9aa8e0 <col:21> 'int' 36
|   | |-ForStmt 0x2080a9b5140 <line:400:9, line:407:9>
|   | | |-BinaryOperator 0x2080a9aa990 <line:400:14, col:18> 'unsigned int' '='
|   | | | |-DeclRefExpr 0x2080a9aa930 <col:14> 'unsigned int' lvalue Var 0x2080a9a8368 'i' 'unsigned int'
|   | | | `-ImplicitCastExpr 0x2080a9aa978 <col:18> 'unsigned int' <IntegralCast>
|   | | |   `-IntegerLiteral 0x2080a9aa950 <col:18> 'int' 0
|   | | |-<<<NULL>>>
|   | | |-BinaryOperator 0x2080a9aaa28 <col:21, col:25> 'int' '<'
|   | | | |-ImplicitCastExpr 0x2080a9aa9f8 <col:21> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2080a9aa9b0 <col:21> 'unsigned int' lvalue Var 0x2080a9a8368 'i' 'unsigned int'
|   | | | `-ImplicitCastExpr 0x2080a9aaa10 <col:25> 'unsigned int' <IntegralCast>
|   | | |   `-IntegerLiteral 0x2080a9aa9d0 <col:25> 'int' 15
|   | | |-CompoundAssignOperator 0x2080a9aaaa8 <col:29, col:34> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | | | |-DeclRefExpr 0x2080a9aaa48 <col:29> 'unsigned int' lvalue Var 0x2080a9a8368 'i' 'unsigned int'
|   | | | `-ImplicitCastExpr 0x2080a9aaa90 <col:34> 'unsigned int' <IntegralCast>
|   | | |   `-IntegerLiteral 0x2080a9aaa68 <col:34> 'int' 3
|   | | `-CompoundStmt 0x2080a9b5130 <col:37, line:407:9>
|   | |-CStyleCastExpr 0x2080a9b5530 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
|   | | `-ParenExpr 0x2080a9b5510 <col:35, col:128> 'int'
|   | |   `-BinaryOperator 0x2080a9b54c0 <col:37, col:126> 'int' '||'
|   | |     |-ParenExpr 0x2080a9b5260 <col:37, col:53> 'int'
|   | |     | `-UnaryOperator 0x2080a9b5248 <col:38, col:52> 'int' prefix '!' cannot overflow
|   | |     |   `-UnaryOperator 0x2080a9b5230 <col:39, col:52> 'int' prefix '!' cannot overflow
|   | |     |     `-ParenExpr 0x2080a9b5210 <col:40, col:52> 'int'
|   | |     |       `-BinaryOperator 0x2080a9b51f0 <.//openssl//file_jk/before\apps\passwd.c:408:16, col:21> 'int' '=='
|   | |     |         |-ImplicitCastExpr 0x2080a9b51c0 <col:16> 'unsigned int' <LValueToRValue>
|   | |     |         | `-DeclRefExpr 0x2080a9b5178 <col:16> 'unsigned int' lvalue Var 0x2080a9a8368 'i' 'unsigned int'
|   | |     |         `-ImplicitCastExpr 0x2080a9b51d8 <col:21> 'unsigned int' <IntegralCast>
|   | |     |           `-IntegerLiteral 0x2080a9b5198 <col:21> 'int' 15
|   | |     `-ParenExpr 0x2080a9b54a0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   | |       `-BinaryOperator 0x2080a9b5480 <col:59, col:125> 'int' ','
|   | |         |-CallExpr 0x2080a9b53a8 <col:59, col:122> 'void'
|   | |         | |-ImplicitCastExpr 0x2080a9b5390 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |         | | `-DeclRefExpr 0x2080a9b5280 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x2080a94bc20 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   | |         | |-ImplicitCastExpr 0x2080a9b53f8 <<scratch space>:23:1> 'const wchar_t *' <NoOp>
|   | |         | | `-ImplicitCastExpr 0x2080a9b53e0 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |         | |   `-StringLiteral 0x2080a9b52d8 <col:1> 'unsigned short [8]' lvalue L"i == 15"
|   | |         | |-ImplicitCastExpr 0x2080a9b5428 <line:25:1> 'const wchar_t *' <NoOp>
|   | |         | | `-ImplicitCastExpr 0x2080a9b5410 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |         | |   `-StringLiteral 0x2080a9b5300 <col:1> 'unsigned short [41]' lvalue L".//openssl//file_jk/before\\apps\\passwd.c"
|   | |         | `-ImplicitCastExpr 0x2080a9b5440 <line:26:1> 'unsigned int' <IntegralCast>
|   | |         |   `-IntegerLiteral 0x2080a9b5368 <col:1> 'int' 408
|   | |         `-IntegerLiteral 0x2080a9b5458 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   | |-BinaryOperator 0x2080a9b5758 <.//openssl//file_jk/before\apps\passwd.c:411:9, col:19> 'char' '='
|   | | |-UnaryOperator 0x2080a9b5700 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow
|   | | | `-ImplicitCastExpr 0x2080a9b56e8 <col:10> 'char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2080a9b56c8 <col:10> 'char *' lvalue Var 0x2080a9b1c08 'output' 'char *'
|   | | `-ImplicitCastExpr 0x2080a9b5740 <col:19> 'char' <IntegralCast>
|   | |   `-IntegerLiteral 0x2080a9b5718 <col:19> 'int' 0
|   | `-CStyleCastExpr 0x2080a9b5c18 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
|   |   `-ParenExpr 0x2080a9b5bf8 <col:35, col:128> 'int'
|   |     `-BinaryOperator 0x2080a9b5ba8 <col:37, col:126> 'int' '||'
|   |       |-ParenExpr 0x2080a9b5910 <col:37, col:53> 'int'
|   |       | `-UnaryOperator 0x2080a9b58f8 <col:38, col:52> 'int' prefix '!' cannot overflow
|   |       |   `-UnaryOperator 0x2080a9b58e0 <col:39, col:52> 'int' prefix '!' cannot overflow
|   |       |     `-ParenExpr 0x2080a9b58c0 <col:40, col:52> 'int'
|   |       |       `-BinaryOperator 0x2080a9b58a0 <.//openssl//file_jk/before\apps\passwd.c:412:16, col:48> 'int' '<'
|   |       |         |-CallExpr 0x2080a9b57e8 <col:16, col:30> 'unsigned long long'
|   |       |         | |-ImplicitCastExpr 0x2080a9b57d0 <col:16> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |       |         | | `-DeclRefExpr 0x2080a9b5778 <col:16> 'unsigned long long (const char *)' Function 0x2080a8bba30 'strlen' 'unsigned long long (const char *)'
|   |       |         | `-ImplicitCastExpr 0x2080a9b5828 <col:23> 'const char *' <NoOp>
|   |       |         |   `-ImplicitCastExpr 0x2080a9b5810 <col:23> 'char *' <ArrayToPointerDecay>
|   |       |         |     `-DeclRefExpr 0x2080a9b5798 <col:23> 'char [41]' lvalue Var 0x2080a9a8108 'out_buf' 'char [41]'
|   |       |         `-UnaryExprOrTypeTraitExpr 0x2080a9b5880 <col:34, col:48> 'unsigned long long' sizeof
|   |       |           `-ParenExpr 0x2080a9b5860 <col:40, col:48> 'char [41]' lvalue
|   |       |             `-DeclRefExpr 0x2080a9b5840 <col:41> 'char [41]' lvalue Var 0x2080a9a8108 'out_buf' 'char [41]' non_odr_use_unevaluated
|   |       `-ParenExpr 0x2080a9b5b88 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   |         `-BinaryOperator 0x2080a9b5b68 <col:59, col:125> 'int' ','
|   |           |-CallExpr 0x2080a9b5a90 <col:59, col:122> 'void'
|   |           | |-ImplicitCastExpr 0x2080a9b5a78 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |           | | `-DeclRefExpr 0x2080a9b5930 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x2080a94bc20 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   |           | |-ImplicitCastExpr 0x2080a9b5ae0 <<scratch space>:28:1> 'const wchar_t *' <NoOp>
|   |           | | `-ImplicitCastExpr 0x2080a9b5ac8 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   |           | |   `-StringLiteral 0x2080a9b5988 <col:1> 'unsigned short [34]' lvalue L"strlen(out_buf) < sizeof(out_buf)"
|   |           | |-ImplicitCastExpr 0x2080a9b5b10 <line:30:1> 'const wchar_t *' <NoOp>
|   |           | | `-ImplicitCastExpr 0x2080a9b5af8 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   |           | |   `-StringLiteral 0x2080a9b59e8 <col:1> 'unsigned short [41]' lvalue L".//openssl//file_jk/before\\apps\\passwd.c"
|   |           | `-ImplicitCastExpr 0x2080a9b5b28 <line:31:1> 'unsigned int' <IntegralCast>
|   |           |   `-IntegerLiteral 0x2080a9b5a50 <col:1> 'int' 412
|   |           `-IntegerLiteral 0x2080a9b5b40 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   |-ReturnStmt 0x2080a9b5cd8 <.//openssl//file_jk/before\apps\passwd.c:415:5, col:12>
|   | `-ImplicitCastExpr 0x2080a9b5cc0 <col:12> 'char *' <ArrayToPointerDecay>
|   |   `-DeclRefExpr 0x2080a9b5ca0 <col:12> 'char [41]' lvalue Var 0x2080a9a8108 'out_buf' 'char [41]'
|   |-LabelStmt 0x2080a9b5d10 <line:417:2, col:5> 'err'
|   | `-NullStmt 0x2080a9b5d08 <col:5>
|   `-ReturnStmt 0x2080a9b5de8 <line:420:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|     `-ImplicitCastExpr 0x2080a9b5dd0 <col:17, col:27> 'char *' <NullToPointer>
|       `-ParenExpr 0x2080a9b5db0 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x2080a9b5d88 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x2080a9b5d48 <col:26> 'int' 0
`-FunctionDecl 0x2080a9b2568 <.//openssl//file_jk/before\apps\passwd.c:424:1, line:504:1> line:424:12 invalid do_passwd 'int (int, char **, char **, char *, int *, int, int, int, size_t, int, int, int)' static
  |-ParmVarDecl 0x2080a9b5f08 <col:22, col:26> col:26 used passed_salt 'int'
  |-ParmVarDecl 0x2080a9b5f88 <col:39, col:46> col:46 used salt_p 'char **'
  |-ParmVarDecl 0x2080a9b6008 <col:54, col:61> col:61 used salt_malloc_p 'char **'
  |-ParmVarDecl 0x2080a9b2080 <line:425:22, col:28> col:28 used passwd 'char *'
  |-ParmVarDecl 0x2080a9b2100 <col:36, col:41> col:41 invalid out 'int *'
  |-ParmVarDecl 0x2080a9b2180 <col:46, col:50> col:50 used quiet 'int'
  |-ParmVarDecl 0x2080a9b2200 <col:57, col:61> col:61 used table 'int'
  |-ParmVarDecl 0x2080a9b2280 <line:426:22, col:26> col:26 used reverse 'int'
  |-ParmVarDecl 0x2080a9b22f8 <col:35, col:42> col:42 used pw_maxlen 'size_t':'unsigned long long'
  |-ParmVarDecl 0x2080a9b2378 <col:53, col:57> col:57 used usecrypt 'int'
  |-ParmVarDecl 0x2080a9b23f8 <col:67, col:71> col:71 used use1 'int'
  |-ParmVarDecl 0x2080a9b2478 <line:427:22, col:26> col:26 used useapr1 'int'
  `-CompoundStmt 0x2080a9b7600 <line:428:1, line:504:1>
    |-DeclStmt 0x2080a9b27a0 <line:429:5, col:22>
    | `-VarDecl 0x2080a9b2698 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\apps\passwd.c:429:11 used hash 'char *' cinit
    |   `-ImplicitCastExpr 0x2080a9b2788 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
    |     `-ParenExpr 0x2080a9b2768 <col:17, col:27> 'void *'
    |       `-CStyleCastExpr 0x2080a9b2740 <col:18, col:26> 'void *' <NullToPointer>
    |         `-IntegerLiteral 0x2080a9b2700 <col:26> 'int' 0
    |-CStyleCastExpr 0x2080a9b2bc0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
    | `-ParenExpr 0x2080a9b2ba0 <col:35, col:128> 'int'
    |   `-BinaryOperator 0x2080a9b2b50 <col:37, col:126> 'int' '||'
    |     |-ParenExpr 0x2080a9b2918 <col:37, col:53> 'int'
    |     | `-UnaryOperator 0x2080a9b2900 <col:38, col:52> 'int' prefix '!' cannot overflow
    |     |   `-UnaryOperator 0x2080a9b28e8 <col:39, col:52> 'int' prefix '!' cannot overflow
    |     |     `-ParenExpr 0x2080a9b28c8 <col:40, col:52> 'int'
    |     |       `-BinaryOperator 0x2080a9b28a8 <.//openssl//file_jk/before\apps\passwd.c:431:12, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
    |     |         |-ImplicitCastExpr 0x2080a9b2878 <.//openssl//file_jk/before\apps\passwd.c:431:12> 'char **' <LValueToRValue>
    |     |         | `-DeclRefExpr 0x2080a9b27b8 <col:12> 'char **' lvalue ParmVar 0x2080a9b5f88 'salt_p' 'char **'
    |     |         `-ImplicitCastExpr 0x2080a9b2890 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char **' <BitCast>
    |     |           `-ParenExpr 0x2080a9b2858 <col:17, col:27> 'void *'
    |     |             `-CStyleCastExpr 0x2080a9b2830 <col:18, col:26> 'void *' <NullToPointer>
    |     |               `-IntegerLiteral 0x2080a9b27f0 <col:26> 'int' 0
    |     `-ParenExpr 0x2080a9b2b30 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
    |       `-BinaryOperator 0x2080a9b2b10 <col:59, col:125> 'int' ','
    |         |-CallExpr 0x2080a9b2a38 <col:59, col:122> 'void'
    |         | |-ImplicitCastExpr 0x2080a9b2a20 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x2080a9b2938 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x2080a94bc20 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
    |         | |-ImplicitCastExpr 0x2080a9b2a88 <<scratch space>:33:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x2080a9b2a70 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x2080a9b2958 <col:1> 'unsigned short [15]' lvalue L"salt_p != NULL"
    |         | |-ImplicitCastExpr 0x2080a9b2ab8 <line:35:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x2080a9b2aa0 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x2080a9b2990 <col:1> 'unsigned short [41]' lvalue L".//openssl//file_jk/before\\apps\\passwd.c"
    |         | `-ImplicitCastExpr 0x2080a9b2ad0 <line:36:1> 'unsigned int' <IntegralCast>
    |         |   `-IntegerLiteral 0x2080a9b29f8 <col:1> 'int' 431
    |         `-IntegerLiteral 0x2080a9b2ae8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
    |-CStyleCastExpr 0x2080a9b3040 <col:29, col:128> 'void' <ToVoid>
    | `-ParenExpr 0x2080a9b3020 <col:35, col:128> 'int'
    |   `-BinaryOperator 0x2080a9b2fd0 <col:37, col:126> 'int' '||'
    |     |-ParenExpr 0x2080a9b2d48 <col:37, col:53> 'int'
    |     | `-UnaryOperator 0x2080a9b2d30 <col:38, col:52> 'int' prefix '!' cannot overflow
    |     |   `-UnaryOperator 0x2080a9b2d18 <col:39, col:52> 'int' prefix '!' cannot overflow
    |     |     `-ParenExpr 0x2080a9b2cf8 <col:40, col:52> 'int'
    |     |       `-BinaryOperator 0x2080a9b2cd8 <.//openssl//file_jk/before\apps\passwd.c:432:12, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
    |     |         |-ImplicitCastExpr 0x2080a9b2ca8 <.//openssl//file_jk/before\apps\passwd.c:432:12> 'char **' <LValueToRValue>
    |     |         | `-DeclRefExpr 0x2080a9b2be8 <col:12> 'char **' lvalue ParmVar 0x2080a9b6008 'salt_malloc_p' 'char **'
    |     |         `-ImplicitCastExpr 0x2080a9b2cc0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char **' <BitCast>
    |     |           `-ParenExpr 0x2080a9b2c88 <col:17, col:27> 'void *'
    |     |             `-CStyleCastExpr 0x2080a9b2c60 <col:18, col:26> 'void *' <NullToPointer>
    |     |               `-IntegerLiteral 0x2080a9b2c20 <col:26> 'int' 0
    |     `-ParenExpr 0x2080a9b2fb0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
    |       `-BinaryOperator 0x2080a9b2f90 <col:59, col:125> 'int' ','
    |         |-CallExpr 0x2080a9b2eb8 <col:59, col:122> 'void'
    |         | |-ImplicitCastExpr 0x2080a9b2ea0 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x2080a9b2d68 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x2080a94bc20 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
    |         | |-ImplicitCastExpr 0x2080a9b2f08 <<scratch space>:38:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x2080a9b2ef0 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x2080a9b2dc8 <col:1> 'unsigned short [22]' lvalue L"salt_malloc_p != NULL"
    |         | |-ImplicitCastExpr 0x2080a9b2f38 <line:40:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x2080a9b2f20 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x2080a9b2e10 <col:1> 'unsigned short [41]' lvalue L".//openssl//file_jk/before\\apps\\passwd.c"
    |         | `-ImplicitCastExpr 0x2080a9b2f50 <line:41:1> 'unsigned int' <IntegralCast>
    |         |   `-IntegerLiteral 0x2080a9b2e78 <col:1> 'int' 432
    |         `-IntegerLiteral 0x2080a9b2f68 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
    |-IfStmt 0x2080a9baae8 <.//openssl//file_jk/before\apps\passwd.c:435:5, line:466:5>
    | |-UnaryOperator 0x2080a9b9140 <line:435:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x2080a9b9128 <col:10> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x2080a9b90f0 <col:10> 'int' lvalue ParmVar 0x2080a9b5f08 'passed_salt' 'int'
    | `-CompoundStmt 0x2080a9baac8 <col:23, line:466:5>
    |   |-IfStmt 0x2080a9b9ea0 <line:437:9, line:449:9>
    |   | |-ImplicitCastExpr 0x2080a9b9190 <line:437:13> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x2080a9b9158 <col:13> 'int' lvalue ParmVar 0x2080a9b2378 'usecrypt' 'int'
    |   | `-CompoundStmt 0x2080a9b9e68 <col:23, line:449:9>
    |   |   |-IfStmt 0x2080a9b94b0 <line:438:13, line:439:71>
    |   |   | |-BinaryOperator 0x2080a9b92b0 <line:438:17, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
    |   |   | | |-ImplicitCastExpr 0x2080a9b9280 <.//openssl//file_jk/before\apps\passwd.c:438:17, col:18> 'char *' <LValueToRValue>
    |   |   | | | `-UnaryOperator 0x2080a9b91e0 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
    |   |   | | |   `-ImplicitCastExpr 0x2080a9b91c8 <col:18> 'char **' <LValueToRValue>
    |   |   | | |     `-DeclRefExpr 0x2080a9b91a8 <col:18> 'char **' lvalue ParmVar 0x2080a9b6008 'salt_malloc_p' 'char **'
    |   |   | | `-ImplicitCastExpr 0x2080a9b9298 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
    |   |   | |   `-ParenExpr 0x2080a9b9260 <col:17, col:27> 'void *'
    |   |   | |     `-CStyleCastExpr 0x2080a9b9238 <col:18, col:26> 'void *' <NullToPointer>
    |   |   | |       `-IntegerLiteral 0x2080a9b91f8 <col:26> 'int' 0
    |   |   | `-BinaryOperator 0x2080a9b9490 <.//openssl//file_jk/before\apps\passwd.c:439:17, col:71> 'char *' '='
    |   |   |   |-UnaryOperator 0x2080a9b9308 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
    |   |   |   | `-ImplicitCastExpr 0x2080a9b92f0 <col:18> 'char **' <LValueToRValue>
    |   |   |   |   `-DeclRefExpr 0x2080a9b92d0 <col:18> 'char **' lvalue ParmVar 0x2080a9b5f88 'salt_p' 'char **'
    |   |   |   `-BinaryOperator 0x2080a9b9470 <col:27, col:71> 'char *' '='
    |   |   |     |-UnaryOperator 0x2080a9b9358 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
    |   |   |     | `-ImplicitCastExpr 0x2080a9b9340 <col:28> 'char **' <LValueToRValue>
    |   |   |     |   `-DeclRefExpr 0x2080a9b9320 <col:28> 'char **' lvalue ParmVar 0x2080a9b6008 'salt_malloc_p' 'char **'
    |   |   |     `-ImplicitCastExpr 0x2080a9b9458 <col:44, col:71> 'char *' <BitCast>
    |   |   |       `-CallExpr 0x2080a9b93f8 <col:44, col:71> 'void *'
    |   |   |         |-ImplicitCastExpr 0x2080a9b93e0 <col:44> 'void *(*)(int, const char *)' <FunctionToPointerDecay>
    |   |   |         | `-DeclRefExpr 0x2080a9b9370 <col:44> 'void *(int, const char *)' Function 0x2080a90a860 'app_malloc' 'void *(int, const char *)'
    |   |   |         |-IntegerLiteral 0x2080a9b9390 <col:55> 'int' 3
    |   |   |         `-ImplicitCastExpr 0x2080a9b9440 <col:58> 'const char *' <NoOp>
    |   |   |           `-ImplicitCastExpr 0x2080a9b9428 <col:58> 'char *' <ArrayToPointerDecay>
    |   |   |             `-StringLiteral 0x2080a9b93b8 <col:58> 'char [12]' lvalue "salt buffer"
    |   |   |-IfStmt 0x2080a9b97a0 <line:440:13, line:441:22>
    |   |   | |-BinaryOperator 0x2080a9b9718 <line:440:17, col:60> 'int' '<='
    |   |   | | |-CallExpr 0x2080a9b96c0 <col:17, col:55> 'int'
    |   |   | | | |-ImplicitCastExpr 0x2080a9b96a8 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | | | `-DeclRefExpr 0x2080a9b95b8 <col:17> 'int ()' Function 0x2080a9b94f0 'RAND_bytes' 'int ()'
    |   |   | | | |-CStyleCastExpr 0x2080a9b9658 <col:28, col:46> 'unsigned char *' <BitCast>
    |   |   | | | | `-ImplicitCastExpr 0x2080a9b9640 <col:45, col:46> 'char *' <LValueToRValue> part_of_explicit_cast
    |   |   | | | |   `-UnaryOperator 0x2080a9b9610 <col:45, col:46> 'char *' lvalue prefix '*' cannot overflow
    |   |   | | | |     `-ImplicitCastExpr 0x2080a9b95f8 <col:46> 'char **' <LValueToRValue>
    |   |   | | | |       `-DeclRefExpr 0x2080a9b95d8 <col:46> 'char **' lvalue ParmVar 0x2080a9b5f88 'salt_p' 'char **'
    |   |   | | | `-IntegerLiteral 0x2080a9b9680 <col:54> 'int' 2
    |   |   | | `-IntegerLiteral 0x2080a9b96f0 <col:60> 'int' 0
    |   |   | `-GotoStmt 0x2080a9b9788 <line:441:17, col:22> 'end' 0x2080a9b9738
    |   |   |-BinaryOperator 0x2080a9b9a58 <line:442:13, col:57> 'char' '='
    |   |   | |-ArraySubscriptExpr 0x2080a9b9868 <col:13, col:24> 'char' lvalue
    |   |   | | |-ImplicitCastExpr 0x2080a9b9850 <col:13, col:21> 'char *' <LValueToRValue>
    |   |   | | | `-ParenExpr 0x2080a9b9808 <col:13, col:21> 'char *' lvalue
    |   |   | | |   `-UnaryOperator 0x2080a9b97f0 <col:14, col:15> 'char *' lvalue prefix '*' cannot overflow
    |   |   | | |     `-ImplicitCastExpr 0x2080a9b97d8 <col:15> 'char **' <LValueToRValue>
    |   |   | | |       `-DeclRefExpr 0x2080a9b97b8 <col:15> 'char **' lvalue ParmVar 0x2080a9b5f88 'salt_p' 'char **'
    |   |   | | `-IntegerLiteral 0x2080a9b9828 <col:23> 'int' 0
    |   |   | `-ImplicitCastExpr 0x2080a9b9a40 <col:28, col:57> 'char' <IntegralCast>
    |   |   |   `-ImplicitCastExpr 0x2080a9b9a28 <col:28, col:57> 'unsigned char' <LValueToRValue>
    |   |   |     `-ArraySubscriptExpr 0x2080a9b9a08 <col:28, col:57> 'const unsigned char' lvalue
    |   |   |       |-ImplicitCastExpr 0x2080a9b99f0 <col:28> 'const unsigned char *' <ArrayToPointerDecay>
    |   |   |       | `-DeclRefExpr 0x2080a9b9888 <col:28> 'const unsigned char [64]' lvalue Var 0x2080a914c60 'cov_2char' 'const unsigned char [64]'
    |   |   |       `-BinaryOperator 0x2080a9b99d0 <col:38, col:53> 'int' '&'
    |   |   |         |-ImplicitCastExpr 0x2080a9b99b8 <col:38, col:49> 'int' <IntegralCast>
    |   |   |         | `-ImplicitCastExpr 0x2080a9b99a0 <col:38, col:49> 'char' <LValueToRValue>
    |   |   |         |   `-ArraySubscriptExpr 0x2080a9b9958 <col:38, col:49> 'char' lvalue
    |   |   |         |     |-ImplicitCastExpr 0x2080a9b9940 <col:38, col:46> 'char *' <LValueToRValue>
    |   |   |         |     | `-ParenExpr 0x2080a9b98f8 <col:38, col:46> 'char *' lvalue
    |   |   |         |     |   `-UnaryOperator 0x2080a9b98e0 <col:39, col:40> 'char *' lvalue prefix '*' cannot overflow
    |   |   |         |     |     `-ImplicitCastExpr 0x2080a9b98c8 <col:40> 'char **' <LValueToRValue>
    |   |   |         |     |       `-DeclRefExpr 0x2080a9b98a8 <col:40> 'char **' lvalue ParmVar 0x2080a9b5f88 'salt_p' 'char **'
    |   |   |         |     `-IntegerLiteral 0x2080a9b9918 <col:48> 'int' 0
    |   |   |         `-IntegerLiteral 0x2080a9b9978 <col:53> 'int' 63
    |   |   |-BinaryOperator 0x2080a9b9d18 <line:443:13, col:57> 'char' '='
    |   |   | |-ArraySubscriptExpr 0x2080a9b9b28 <col:13, col:24> 'char' lvalue
    |   |   | | |-ImplicitCastExpr 0x2080a9b9b10 <col:13, col:21> 'char *' <LValueToRValue>
    |   |   | | | `-ParenExpr 0x2080a9b9ac8 <col:13, col:21> 'char *' lvalue
    |   |   | | |   `-UnaryOperator 0x2080a9b9ab0 <col:14, col:15> 'char *' lvalue prefix '*' cannot overflow
    |   |   | | |     `-ImplicitCastExpr 0x2080a9b9a98 <col:15> 'char **' <LValueToRValue>
    |   |   | | |       `-DeclRefExpr 0x2080a9b9a78 <col:15> 'char **' lvalue ParmVar 0x2080a9b5f88 'salt_p' 'char **'
    |   |   | | `-IntegerLiteral 0x2080a9b9ae8 <col:23> 'int' 1
    |   |   | `-ImplicitCastExpr 0x2080a9b9d00 <col:28, col:57> 'char' <IntegralCast>
    |   |   |   `-ImplicitCastExpr 0x2080a9b9ce8 <col:28, col:57> 'unsigned char' <LValueToRValue>
    |   |   |     `-ArraySubscriptExpr 0x2080a9b9cc8 <col:28, col:57> 'const unsigned char' lvalue
    |   |   |       |-ImplicitCastExpr 0x2080a9b9cb0 <col:28> 'const unsigned char *' <ArrayToPointerDecay>
    |   |   |       | `-DeclRefExpr 0x2080a9b9b48 <col:28> 'const unsigned char [64]' lvalue Var 0x2080a914c60 'cov_2char' 'const unsigned char [64]'
    |   |   |       `-BinaryOperator 0x2080a9b9c90 <col:38, col:53> 'int' '&'
    |   |   |         |-ImplicitCastExpr 0x2080a9b9c78 <col:38, col:49> 'int' <IntegralCast>
    |   |   |         | `-ImplicitCastExpr 0x2080a9b9c60 <col:38, col:49> 'char' <LValueToRValue>
    |   |   |         |   `-ArraySubscriptExpr 0x2080a9b9c18 <col:38, col:49> 'char' lvalue
    |   |   |         |     |-ImplicitCastExpr 0x2080a9b9c00 <col:38, col:46> 'char *' <LValueToRValue>
    |   |   |         |     | `-ParenExpr 0x2080a9b9bb8 <col:38, col:46> 'char *' lvalue
    |   |   |         |     |   `-UnaryOperator 0x2080a9b9ba0 <col:39, col:40> 'char *' lvalue prefix '*' cannot overflow
    |   |   |         |     |     `-ImplicitCastExpr 0x2080a9b9b88 <col:40> 'char **' <LValueToRValue>
    |   |   |         |     |       `-DeclRefExpr 0x2080a9b9b68 <col:40> 'char **' lvalue ParmVar 0x2080a9b5f88 'salt_p' 'char **'
    |   |   |         |     `-IntegerLiteral 0x2080a9b9bd8 <col:48> 'int' 1
    |   |   |         `-IntegerLiteral 0x2080a9b9c38 <col:53> 'int' 63
    |   |   `-BinaryOperator 0x2080a9b9e48 <line:444:13, col:28> 'char' '='
    |   |     |-ArraySubscriptExpr 0x2080a9b9de8 <col:13, col:24> 'char' lvalue
    |   |     | |-ImplicitCastExpr 0x2080a9b9dd0 <col:13, col:21> 'char *' <LValueToRValue>
    |   |     | | `-ParenExpr 0x2080a9b9d88 <col:13, col:21> 'char *' lvalue
    |   |     | |   `-UnaryOperator 0x2080a9b9d70 <col:14, col:15> 'char *' lvalue prefix '*' cannot overflow
    |   |     | |     `-ImplicitCastExpr 0x2080a9b9d58 <col:15> 'char **' <LValueToRValue>
    |   |     | |       `-DeclRefExpr 0x2080a9b9d38 <col:15> 'char **' lvalue ParmVar 0x2080a9b5f88 'salt_p' 'char **'
    |   |     | `-IntegerLiteral 0x2080a9b9da8 <col:23> 'int' 2
    |   |     `-ImplicitCastExpr 0x2080a9b9e30 <col:28> 'char' <IntegralCast>
    |   |       `-IntegerLiteral 0x2080a9b9e08 <col:28> 'int' 0
    |   `-IfStmt 0x2080a9baab0 <line:453:9, line:464:9>
    |     |-BinaryOperator 0x2080a9b9f58 <line:453:13, col:21> 'int' '||'
    |     | |-ImplicitCastExpr 0x2080a9b9f28 <col:13> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x2080a9b9eb8 <col:13> 'int' lvalue ParmVar 0x2080a9b23f8 'use1' 'int'
    |     | `-ImplicitCastExpr 0x2080a9b9f40 <col:21> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x2080a9b9ef0 <col:21> 'int' lvalue ParmVar 0x2080a9b2478 'useapr1' 'int'
    |     `-CompoundStmt 0x2080a9baa78 <col:30, line:464:9>
    |       |-DeclStmt 0x2080a9b9ff8 <line:454:13, col:18>
    |       | `-VarDecl 0x2080a9b9f90 <col:13, col:17> col:17 used i 'int'
    |       |-IfStmt 0x2080a9ba330 <line:456:13, line:457:71>
    |       | |-BinaryOperator 0x2080a9ba130 <line:456:17, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
    |       | | |-ImplicitCastExpr 0x2080a9ba100 <.//openssl//file_jk/before\apps\passwd.c:456:17, col:18> 'char *' <LValueToRValue>
    |       | | | `-UnaryOperator 0x2080a9ba048 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
    |       | | |   `-ImplicitCastExpr 0x2080a9ba030 <col:18> 'char **' <LValueToRValue>
    |       | | |     `-DeclRefExpr 0x2080a9ba010 <col:18> 'char **' lvalue ParmVar 0x2080a9b6008 'salt_malloc_p' 'char **'
    |       | | `-ImplicitCastExpr 0x2080a9ba118 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
    |       | |   `-ParenExpr 0x2080a9ba0c8 <col:17, col:27> 'void *'
    |       | |     `-CStyleCastExpr 0x2080a9ba0a0 <col:18, col:26> 'void *' <NullToPointer>
    |       | |       `-IntegerLiteral 0x2080a9ba060 <col:26> 'int' 0
    |       | `-BinaryOperator 0x2080a9ba310 <.//openssl//file_jk/before\apps\passwd.c:457:17, col:71> 'char *' '='
    |       |   |-UnaryOperator 0x2080a9ba188 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
    |       |   | `-ImplicitCastExpr 0x2080a9ba170 <col:18> 'char **' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x2080a9ba150 <col:18> 'char **' lvalue ParmVar 0x2080a9b5f88 'salt_p' 'char **'
    |       |   `-BinaryOperator 0x2080a9ba2f0 <col:27, col:71> 'char *' '='
    |       |     |-UnaryOperator 0x2080a9ba1d8 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
    |       |     | `-ImplicitCastExpr 0x2080a9ba1c0 <col:28> 'char **' <LValueToRValue>
    |       |     |   `-DeclRefExpr 0x2080a9ba1a0 <col:28> 'char **' lvalue ParmVar 0x2080a9b6008 'salt_malloc_p' 'char **'
    |       |     `-ImplicitCastExpr 0x2080a9ba2d8 <col:44, col:71> 'char *' <BitCast>
    |       |       `-CallExpr 0x2080a9ba278 <col:44, col:71> 'void *'
    |       |         |-ImplicitCastExpr 0x2080a9ba260 <col:44> 'void *(*)(int, const char *)' <FunctionToPointerDecay>
    |       |         | `-DeclRefExpr 0x2080a9ba1f0 <col:44> 'void *(int, const char *)' Function 0x2080a90a860 'app_malloc' 'void *(int, const char *)'
    |       |         |-IntegerLiteral 0x2080a9ba210 <col:55> 'int' 9
    |       |         `-ImplicitCastExpr 0x2080a9ba2c0 <col:58> 'const char *' <NoOp>
    |       |           `-ImplicitCastExpr 0x2080a9ba2a8 <col:58> 'char *' <ArrayToPointerDecay>
    |       |             `-StringLiteral 0x2080a9ba238 <col:58> 'char [12]' lvalue "salt buffer"
    |       |-IfStmt 0x2080a9ba4e0 <line:458:13, line:459:22>
    |       | |-BinaryOperator 0x2080a9ba4a8 <line:458:17, col:60> 'int' '<='
    |       | | |-CallExpr 0x2080a9ba450 <col:17, col:55> 'int'
    |       | | | |-ImplicitCastExpr 0x2080a9ba438 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |       | | | | `-DeclRefExpr 0x2080a9ba348 <col:17> 'int ()' Function 0x2080a9b94f0 'RAND_bytes' 'int ()'
    |       | | | |-CStyleCastExpr 0x2080a9ba3e8 <col:28, col:46> 'unsigned char *' <BitCast>
    |       | | | | `-ImplicitCastExpr 0x2080a9ba3d0 <col:45, col:46> 'char *' <LValueToRValue> part_of_explicit_cast
    |       | | | |   `-UnaryOperator 0x2080a9ba3a0 <col:45, col:46> 'char *' lvalue prefix '*' cannot overflow
    |       | | | |     `-ImplicitCastExpr 0x2080a9ba388 <col:46> 'char **' <LValueToRValue>
    |       | | | |       `-DeclRefExpr 0x2080a9ba368 <col:46> 'char **' lvalue ParmVar 0x2080a9b5f88 'salt_p' 'char **'
    |       | | | `-IntegerLiteral 0x2080a9ba410 <col:54> 'int' 8
    |       | | `-IntegerLiteral 0x2080a9ba480 <col:60> 'int' 0
    |       | `-GotoStmt 0x2080a9ba4c8 <line:459:17, col:22> 'end' 0x2080a9b9738
    |       |-ForStmt 0x2080a9ba910 <line:461:13, line:462:61>
    |       | |-BinaryOperator 0x2080a9ba558 <line:461:18, col:22> 'int' '='
    |       | | |-DeclRefExpr 0x2080a9ba4f8 <col:18> 'int' lvalue Var 0x2080a9b9f90 'i' 'int'
    |       | | `-IntegerLiteral 0x2080a9ba530 <col:22> 'int' 0
    |       | |-<<<NULL>>>
    |       | |-BinaryOperator 0x2080a9ba5d8 <col:25, col:29> 'int' '<'
    |       | | |-ImplicitCastExpr 0x2080a9ba5c0 <col:25> 'int' <LValueToRValue>
    |       | | | `-DeclRefExpr 0x2080a9ba578 <col:25> 'int' lvalue Var 0x2080a9b9f90 'i' 'int'
    |       | | `-IntegerLiteral 0x2080a9ba598 <col:29> 'int' 8
    |       | |-UnaryOperator 0x2080a9ba618 <col:32, col:33> 'int' postfix '++'
    |       | | `-DeclRefExpr 0x2080a9ba5f8 <col:32> 'int' lvalue Var 0x2080a9b9f90 'i' 'int'
    |       | `-BinaryOperator 0x2080a9ba8f0 <line:462:17, col:61> 'char' '='
    |       |   |-ArraySubscriptExpr 0x2080a9ba6f0 <col:17, col:28> 'char' lvalue
    |       |   | |-ImplicitCastExpr 0x2080a9ba6c0 <col:17, col:25> 'char *' <LValueToRValue>
    |       |   | | `-ParenExpr 0x2080a9ba680 <col:17, col:25> 'char *' lvalue
    |       |   | |   `-UnaryOperator 0x2080a9ba668 <col:18, col:19> 'char *' lvalue prefix '*' cannot overflow
    |       |   | |     `-ImplicitCastExpr 0x2080a9ba650 <col:19> 'char **' <LValueToRValue>
    |       |   | |       `-DeclRefExpr 0x2080a9ba630 <col:19> 'char **' lvalue ParmVar 0x2080a9b5f88 'salt_p' 'char **'
    |       |   | `-ImplicitCastExpr 0x2080a9ba6d8 <col:27> 'int' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x2080a9ba6a0 <col:27> 'int' lvalue Var 0x2080a9b9f90 'i' 'int'
    |       |   `-ImplicitCastExpr 0x2080a9ba8d8 <col:32, col:61> 'char' <IntegralCast>
    |       |     `-ImplicitCastExpr 0x2080a9ba8c0 <col:32, col:61> 'unsigned char' <LValueToRValue>
    |       |       `-ArraySubscriptExpr 0x2080a9ba8a0 <col:32, col:61> 'const unsigned char' lvalue
    |       |         |-ImplicitCastExpr 0x2080a9ba888 <col:32> 'const unsigned char *' <ArrayToPointerDecay>
    |       |         | `-DeclRefExpr 0x2080a9ba710 <col:32> 'const unsigned char [64]' lvalue Var 0x2080a914c60 'cov_2char' 'const unsigned char [64]'
    |       |         `-BinaryOperator 0x2080a9ba868 <col:42, col:57> 'int' '&'
    |       |           |-ImplicitCastExpr 0x2080a9ba850 <col:42, col:53> 'int' <IntegralCast>
    |       |           | `-ImplicitCastExpr 0x2080a9ba838 <col:42, col:53> 'char' <LValueToRValue>
    |       |           |   `-ArraySubscriptExpr 0x2080a9ba7f0 <col:42, col:53> 'char' lvalue
    |       |           |     |-ImplicitCastExpr 0x2080a9ba7c0 <col:42, col:50> 'char *' <LValueToRValue>
    |       |           |     | `-ParenExpr 0x2080a9ba780 <col:42, col:50> 'char *' lvalue
    |       |           |     |   `-UnaryOperator 0x2080a9ba768 <col:43, col:44> 'char *' lvalue prefix '*' cannot overflow
    |       |           |     |     `-ImplicitCastExpr 0x2080a9ba750 <col:44> 'char **' <LValueToRValue>
    |       |           |     |       `-DeclRefExpr 0x2080a9ba730 <col:44> 'char **' lvalue ParmVar 0x2080a9b5f88 'salt_p' 'char **'
    |       |           |     `-ImplicitCastExpr 0x2080a9ba7d8 <col:52> 'int' <LValueToRValue>
    |       |           |       `-DeclRefExpr 0x2080a9ba7a0 <col:52> 'int' lvalue Var 0x2080a9b9f90 'i' 'int'
    |       |           `-IntegerLiteral 0x2080a9ba810 <col:57> 'int' 63
    |       `-BinaryOperator 0x2080a9baa58 <line:463:13, col:28> 'char' '='
    |         |-ArraySubscriptExpr 0x2080a9ba9f8 <col:13, col:24> 'char' lvalue
    |         | |-ImplicitCastExpr 0x2080a9ba9e0 <col:13, col:21> 'char *' <LValueToRValue>
    |         | | `-ParenExpr 0x2080a9ba998 <col:13, col:21> 'char *' lvalue
    |         | |   `-UnaryOperator 0x2080a9ba980 <col:14, col:15> 'char *' lvalue prefix '*' cannot overflow
    |         | |     `-ImplicitCastExpr 0x2080a9ba968 <col:15> 'char **' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x2080a9ba948 <col:15> 'char **' lvalue ParmVar 0x2080a9b5f88 'salt_p' 'char **'
    |         | `-IntegerLiteral 0x2080a9ba9b8 <col:23> 'int' 8
    |         `-ImplicitCastExpr 0x2080a9baa40 <col:28> 'char' <IntegralCast>
    |           `-IntegerLiteral 0x2080a9baa18 <col:28> 'int' 0
    |-CStyleCastExpr 0x2080a9baf20 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
    | `-ParenExpr 0x2080a9baf00 <col:35, col:128> 'int'
    |   `-BinaryOperator 0x2080a9baeb0 <col:37, col:126> 'int' '||'
    |     |-ParenExpr 0x2080a9bac78 <col:37, col:53> 'int'
    |     | `-UnaryOperator 0x2080a9bac60 <col:38, col:52> 'int' prefix '!' cannot overflow
    |     |   `-UnaryOperator 0x2080a9bac48 <col:39, col:52> 'int' prefix '!' cannot overflow
    |     |     `-ParenExpr 0x2080a9bac28 <col:40, col:52> 'int'
    |     |       `-BinaryOperator 0x2080a9bac08 <.//openssl//file_jk/before\apps\passwd.c:468:12, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
    |     |         |-ImplicitCastExpr 0x2080a9babd8 <.//openssl//file_jk/before\apps\passwd.c:468:12, col:13> 'char *' <LValueToRValue>
    |     |         | `-UnaryOperator 0x2080a9bab38 <col:12, col:13> 'char *' lvalue prefix '*' cannot overflow
    |     |         |   `-ImplicitCastExpr 0x2080a9bab20 <col:13> 'char **' <LValueToRValue>
    |     |         |     `-DeclRefExpr 0x2080a9bab00 <col:13> 'char **' lvalue ParmVar 0x2080a9b5f88 'salt_p' 'char **'
    |     |         `-ImplicitCastExpr 0x2080a9babf0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
    |     |           `-ParenExpr 0x2080a9babb8 <col:17, col:27> 'void *'
    |     |             `-CStyleCastExpr 0x2080a9bab90 <col:18, col:26> 'void *' <NullToPointer>
    |     |               `-IntegerLiteral 0x2080a9bab50 <col:26> 'int' 0
    |     `-ParenExpr 0x2080a9bae90 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
    |       `-BinaryOperator 0x2080a9bae70 <col:59, col:125> 'int' ','
    |         |-CallExpr 0x2080a9bad98 <col:59, col:122> 'void'
    |         | |-ImplicitCastExpr 0x2080a9bad80 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x2080a9bac98 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x2080a94bc20 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
    |         | |-ImplicitCastExpr 0x2080a9bade8 <<scratch space>:43:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x2080a9badd0 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x2080a9bacb8 <col:1> 'unsigned short [16]' lvalue L"*salt_p != NULL"
    |         | |-ImplicitCastExpr 0x2080a9bae18 <line:45:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x2080a9bae00 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x2080a9bacf0 <col:1> 'unsigned short [41]' lvalue L".//openssl//file_jk/before\\apps\\passwd.c"
    |         | `-ImplicitCastExpr 0x2080a9bae30 <line:46:1> 'unsigned int' <IntegralCast>
    |         |   `-IntegerLiteral 0x2080a9bad58 <col:1> 'int' 468
    |         `-IntegerLiteral 0x2080a9bae48 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
    |-IfStmt 0x2080a9b6310 <.//openssl//file_jk/before\apps\passwd.c:471:5, line:480:5>
    | |-ParenExpr 0x2080a9bb098 <line:471:9, col:36> 'int'
    | | `-BinaryOperator 0x2080a9bb078 <col:10, col:27> 'int' '>'
    | |   |-CallExpr 0x2080a9bafd0 <col:10, col:23> 'unsigned long long'
    | |   | |-ImplicitCastExpr 0x2080a9bafb8 <col:10> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
    | |   | | `-DeclRefExpr 0x2080a9baf48 <col:10> 'unsigned long long (const char *)' Function 0x2080a8bba30 'strlen' 'unsigned long long (const char *)'
    | |   | `-ImplicitCastExpr 0x2080a9bb010 <col:17> 'const char *' <NoOp>
    | |   |   `-ImplicitCastExpr 0x2080a9baff8 <col:17> 'char *' <LValueToRValue>
    | |   |     `-DeclRefExpr 0x2080a9baf68 <col:17> 'char *' lvalue ParmVar 0x2080a9b2080 'passwd' 'char *'
    | |   `-ImplicitCastExpr 0x2080a9bb060 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
    | |     `-DeclRefExpr 0x2080a9bb028 <col:27> 'size_t':'unsigned long long' lvalue ParmVar 0x2080a9b22f8 'pw_maxlen' 'size_t':'unsigned long long'
    | `-CompoundStmt 0x2080a9b62f8 <col:39, line:480:5>
    |   `-BinaryOperator 0x2080a9b62d8 <line:479:9, col:29> 'char' '='
    |     |-ArraySubscriptExpr 0x2080a9b6278 <col:9, col:25> 'char' lvalue
    |     | |-ImplicitCastExpr 0x2080a9b6248 <col:9> 'char *' <LValueToRValue>
    |     | | `-DeclRefExpr 0x2080a9b6208 <col:9> 'char *' lvalue ParmVar 0x2080a9b2080 'passwd' 'char *'
    |     | `-ImplicitCastExpr 0x2080a9b6260 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
    |     |   `-DeclRefExpr 0x2080a9b6228 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x2080a9b22f8 'pw_maxlen' 'size_t':'unsigned long long'
    |     `-ImplicitCastExpr 0x2080a9b62c0 <col:29> 'char' <IntegralCast>
    |       `-IntegerLiteral 0x2080a9b6298 <col:29> 'int' 0
    |-CStyleCastExpr 0x2080a9b6798 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
    | `-ParenExpr 0x2080a9b6778 <col:35, col:128> 'int'
    |   `-BinaryOperator 0x2080a9b6728 <col:37, col:126> 'int' '||'
    |     |-ParenExpr 0x2080a9b6498 <col:37, col:53> 'int'
    |     | `-UnaryOperator 0x2080a9b6480 <col:38, col:52> 'int' prefix '!' cannot overflow
    |     |   `-UnaryOperator 0x2080a9b6468 <col:39, col:52> 'int' prefix '!' cannot overflow
    |     |     `-ParenExpr 0x2080a9b6448 <col:40, col:52> 'int'
    |     |       `-BinaryOperator 0x2080a9b6428 <.//openssl//file_jk/before\apps\passwd.c:481:12, col:30> 'int' '<='
    |     |         |-CallExpr 0x2080a9b6398 <col:12, col:25> 'unsigned long long'
    |     |         | |-ImplicitCastExpr 0x2080a9b6380 <col:12> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
    |     |         | | `-DeclRefExpr 0x2080a9b6328 <col:12> 'unsigned long long (const char *)' Function 0x2080a8bba30 'strlen' 'unsigned long long (const char *)'
    |     |         | `-ImplicitCastExpr 0x2080a9b63d8 <col:19> 'const char *' <NoOp>
    |     |         |   `-ImplicitCastExpr 0x2080a9b63c0 <col:19> 'char *' <LValueToRValue>
    |     |         |     `-DeclRefExpr 0x2080a9b6348 <col:19> 'char *' lvalue ParmVar 0x2080a9b2080 'passwd' 'char *'
    |     |         `-ImplicitCastExpr 0x2080a9b6410 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
    |     |           `-DeclRefExpr 0x2080a9b63f0 <col:30> 'size_t':'unsigned long long' lvalue ParmVar 0x2080a9b22f8 'pw_maxlen' 'size_t':'unsigned long long'
    |     `-ParenExpr 0x2080a9b6708 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
    |       `-BinaryOperator 0x2080a9b66e8 <col:59, col:125> 'int' ','
    |         |-CallExpr 0x2080a9b6610 <col:59, col:122> 'void'
    |         | |-ImplicitCastExpr 0x2080a9b65f8 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x2080a9b64b8 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x2080a94bc20 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
    |         | |-ImplicitCastExpr 0x2080a9b6660 <<scratch space>:48:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x2080a9b6648 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x2080a9b6518 <col:1> 'unsigned short [28]' lvalue L"strlen(passwd) <= pw_maxlen"
    |         | |-ImplicitCastExpr 0x2080a9b6690 <line:50:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x2080a9b6678 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x2080a9b6568 <col:1> 'unsigned short [41]' lvalue L".//openssl//file_jk/before\\apps\\passwd.c"
    |         | `-ImplicitCastExpr 0x2080a9b66a8 <line:51:1> 'unsigned int' <IntegralCast>
    |         |   `-IntegerLiteral 0x2080a9b65d0 <col:1> 'int' 481
    |         `-IntegerLiteral 0x2080a9b66c0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
    |-IfStmt 0x2080a9b6a60 <.//openssl//file_jk/before\apps\passwd.c:485:5, line:486:41>
    | |-ImplicitCastExpr 0x2080a9b67e0 <line:485:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x2080a9b67c0 <col:9> 'int' lvalue ParmVar 0x2080a9b2378 'usecrypt' 'int'
    | `-BinaryOperator 0x2080a9b6a40 <line:486:9, col:41> 'char *' '='
    |   |-DeclRefExpr 0x2080a9b67f8 <col:9> 'char *' lvalue Var 0x2080a9b2698 'hash' 'char *'
    |   `-ImplicitCastExpr 0x2080a9b6a28 <col:16, col:41> 'char *' <IntegralToPointer>
    |     `-CallExpr 0x2080a9b69c8 <col:16, col:41> 'int'
    |       |-ImplicitCastExpr 0x2080a9b69b0 <col:16> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x2080a9b6920 <col:16> 'int ()' Function 0x2080a9b6858 'DES_crypt' 'int ()'
    |       |-ImplicitCastExpr 0x2080a9b69f8 <col:26> 'char *' <LValueToRValue>
    |       | `-DeclRefExpr 0x2080a9b6940 <col:26> 'char *' lvalue ParmVar 0x2080a9b2080 'passwd' 'char *'
    |       `-ImplicitCastExpr 0x2080a9b6a10 <col:34, col:35> 'char *' <LValueToRValue>
    |         `-UnaryOperator 0x2080a9b6998 <col:34, col:35> 'char *' lvalue prefix '*' cannot overflow
    |           `-ImplicitCastExpr 0x2080a9b6980 <col:35> 'char **' <LValueToRValue>
    |             `-DeclRefExpr 0x2080a9b6960 <col:35> 'char **' lvalue ParmVar 0x2080a9b5f88 'salt_p' 'char **'
    |-IfStmt 0x2080a9b6dc0 <line:489:5, line:490:63>
    | |-BinaryOperator 0x2080a9b6ae8 <line:489:9, col:17> 'int' '||'
    | | |-ImplicitCastExpr 0x2080a9b6ab8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x2080a9b6a78 <col:9> 'int' lvalue ParmVar 0x2080a9b23f8 'use1' 'int'
    | | `-ImplicitCastExpr 0x2080a9b6ad0 <col:17> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x2080a9b6a98 <col:17> 'int' lvalue ParmVar 0x2080a9b2478 'useapr1' 'int'
    | `-BinaryOperator 0x2080a9b6da0 <line:490:9, col:63> 'char *' '='
    |   |-DeclRefExpr 0x2080a9b6b08 <col:9> 'char *' lvalue Var 0x2080a9b2698 'hash' 'char *'
    |   `-CallExpr 0x2080a9b6cf0 <col:16, col:63> 'char *'
    |     |-ImplicitCastExpr 0x2080a9b6cd8 <col:16> 'char *(*)(const char *, const char *, const char *)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x2080a9b6b28 <col:16> 'char *(const char *, const char *, const char *)' Function 0x2080a9acef0 'md5crypt' 'char *(const char *, const char *, const char *)'
    |     |-ImplicitCastExpr 0x2080a9b6d40 <col:25> 'const char *' <NoOp>
    |     | `-ImplicitCastExpr 0x2080a9b6d28 <col:25> 'char *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x2080a9b6b48 <col:25> 'char *' lvalue ParmVar 0x2080a9b2080 'passwd' 'char *'
    |     |-ImplicitCastExpr 0x2080a9b6d58 <col:33, col:53> 'const char *' <NoOp>
    |     | `-ParenExpr 0x2080a9b6c40 <col:33, col:53> 'char *'
    |     |   `-ConditionalOperator 0x2080a9b6c10 <col:34, col:47> 'char *'
    |     |     |-ImplicitCastExpr 0x2080a9b6bc8 <col:34> 'int' <LValueToRValue>
    |     |     | `-DeclRefExpr 0x2080a9b6b68 <col:34> 'int' lvalue ParmVar 0x2080a9b23f8 'use1' 'int'
    |     |     |-ImplicitCastExpr 0x2080a9b6be0 <col:41> 'char *' <ArrayToPointerDecay>
    |     |     | `-StringLiteral 0x2080a9b6b88 <col:41> 'char [2]' lvalue "1"
    |     |     `-ImplicitCastExpr 0x2080a9b6bf8 <col:47> 'char *' <ArrayToPointerDecay>
    |     |       `-StringLiteral 0x2080a9b6ba8 <col:47> 'char [5]' lvalue "apr1"
    |     `-ImplicitCastExpr 0x2080a9b6d88 <col:56, col:57> 'const char *' <NoOp>
    |       `-ImplicitCastExpr 0x2080a9b6d70 <col:56, col:57> 'char *' <LValueToRValue>
    |         `-UnaryOperator 0x2080a9b6c98 <col:56, col:57> 'char *' lvalue prefix '*' cannot overflow
    |           `-ImplicitCastExpr 0x2080a9b6c80 <col:57> 'char **' <LValueToRValue>
    |             `-DeclRefExpr 0x2080a9b6c60 <col:57> 'char **' lvalue ParmVar 0x2080a9b5f88 'salt_p' 'char **'
    |-CStyleCastExpr 0x2080a9b7208 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
    | `-ParenExpr 0x2080a9b71e8 <col:35, col:128> 'int'
    |   `-BinaryOperator 0x2080a9b7198 <col:37, col:126> 'int' '||'
    |     |-ParenExpr 0x2080a9b6f20 <col:37, col:53> 'int'
    |     | `-UnaryOperator 0x2080a9b6f08 <col:38, col:52> 'int' prefix '!' cannot overflow
    |     |   `-UnaryOperator 0x2080a9b6ef0 <col:39, col:52> 'int' prefix '!' cannot overflow
    |     |     `-ParenExpr 0x2080a9b6ed0 <col:40, col:52> 'int'
    |     |       `-BinaryOperator 0x2080a9b6eb0 <.//openssl//file_jk/before\apps\passwd.c:492:12, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
    |     |         |-ImplicitCastExpr 0x2080a9b6e80 <.//openssl//file_jk/before\apps\passwd.c:492:12> 'char *' <LValueToRValue>
    |     |         | `-DeclRefExpr 0x2080a9b6dd8 <col:12> 'char *' lvalue Var 0x2080a9b2698 'hash' 'char *'
    |     |         `-ImplicitCastExpr 0x2080a9b6e98 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
    |     |           `-ParenExpr 0x2080a9b6e60 <col:17, col:27> 'void *'
    |     |             `-CStyleCastExpr 0x2080a9b6e38 <col:18, col:26> 'void *' <NullToPointer>
    |     |               `-IntegerLiteral 0x2080a9b6df8 <col:26> 'int' 0
    |     `-ParenExpr 0x2080a9b7178 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
    |       `-BinaryOperator 0x2080a9b7158 <col:59, col:125> 'int' ','
    |         |-CallExpr 0x2080a9b7070 <col:59, col:122> 'void'
    |         | |-ImplicitCastExpr 0x2080a9b7058 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x2080a9b6f40 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x2080a94bc20 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
    |         | |-ImplicitCastExpr 0x2080a9b70d0 <<scratch space>:53:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x2080a9b70a8 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x2080a9b6f98 <col:1> 'unsigned short [13]' lvalue L"hash != NULL"
    |         | |-ImplicitCastExpr 0x2080a9b7100 <line:55:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x2080a9b70e8 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x2080a9b6fc8 <col:1> 'unsigned short [41]' lvalue L".//openssl//file_jk/before\\apps\\passwd.c"
    |         | `-ImplicitCastExpr 0x2080a9b7118 <line:56:1> 'unsigned int' <IntegralCast>
    |         |   `-IntegerLiteral 0x2080a9b7030 <col:1> 'int' 492
    |         `-IntegerLiteral 0x2080a9b7130 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
    |-ReturnStmt 0x2080a9b75a0 <.//openssl//file_jk/before\apps\passwd.c:500:5, col:12>
    | `-IntegerLiteral 0x2080a9b7578 <col:12> 'int' 1
    `-LabelStmt 0x2080a9b75e8 <line:502:2, line:503:12> 'end'
      `-ReturnStmt 0x2080a9b75d8 <col:5, col:12>
        `-IntegerLiteral 0x2080a9b75b0 <col:12> 'int' 0
