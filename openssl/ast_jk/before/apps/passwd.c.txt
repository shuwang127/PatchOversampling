TranslationUnitDecl 0x28413314c58 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x284133154f0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x284133151f0 '__int128'
|-TypedefDecl 0x28413315560 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x28413315210 'unsigned __int128'
|-TypedefDecl 0x28413315898 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x28413315650 'struct __NSConstantString_tag'
|   `-Record 0x284133155b8 '__NSConstantString_tag'
|-TypedefDecl 0x28413315908 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x28413314e30 'unsigned long long'
|-TypedefDecl 0x284133159a0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x28413315960 'char *'
|   `-BuiltinType 0x28413314cf0 'char'
|-TypedefDecl 0x28413315a10 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x28413315960 'char *'
|   `-BuiltinType 0x28413314cf0 'char'
|-TypedefDecl 0x28413315ad0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x28413314e30 'unsigned long long'
|-TypedefDecl 0x28413315b40 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x28413315960 'char *'
|   `-BuiltinType 0x28413314cf0 'char'
|-FunctionDecl 0x28414dd4440 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x28414dd44e0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x28414dd4550 <col:21> Implicit
|-FunctionDecl 0x28414dd45a8 prev 0x28414dd4440 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x28414dd42d0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x28414dd4698 <col:21> Inherited Implicit
|-TypedefDecl 0x28414dd46d8 prev 0x28413315908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x28413314e30 'unsigned long long'
|-TypedefDecl 0x28414dd4780 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x28414dd4750 'size_t' sugar
|   |-Typedef 0x28414dd46d8 'size_t'
|   `-BuiltinType 0x28413314e30 'unsigned long long'
|-TypedefDecl 0x28414dd47f0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x28413314d90 'long long'
|-TypedefDecl 0x28414dd4860 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x28413314d90 'long long'
|-TypedefDecl 0x28414dd48d0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x28413314dd0 'unsigned short'
|-TypedefDecl 0x28414dd4940 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x28413314dd0 'unsigned short'
|-TypedefDecl 0x28414dd49b0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x28413314dd0 'unsigned short'
|-TypedefDecl 0x28414dd4a20 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x28413314d50 'int'
|-TypedefDecl 0x28414dd4a90 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x28413314d70 'long'
|-TypedefDecl 0x28414dd4b00 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x28413314d90 'long long'
|-TypedefDecl 0x28414dd4b90 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x28414dd4b60 '__time64_t' sugar
|   |-Typedef 0x28414dd4b00 '__time64_t'
|   `-BuiltinType 0x28413314d90 'long long'
|-FunctionDecl 0x28414dd4d08 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x28414dd4f28 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x28414e111c0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x28414dd5068 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x28414dd50e0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x28414dd5158 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x28414dd51d8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x28414e10f60 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x28414e112a0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x28414e11360 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x28414e114d0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x28414e11480 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x28414e11420 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x28414e11340 'struct threadlocaleinfostruct'
|       `-Record 0x28414e16fc0 'threadlocaleinfostruct'
|-TypedefDecl 0x28414e115e0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x28414e11590 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x28414e11530 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x28414e11400 'struct threadmbcinfostruct'
|       `-Record 0x28414e11360 'threadmbcinfostruct'
|-RecordDecl 0x28414e11638 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x28414e116f0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x28414e117b0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x28414e11840 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x28414e118d0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x28414e11988 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x28414e11930 'struct localeinfo_struct' sugar
|   `-RecordType 0x28414e11790 'struct localeinfo_struct'
|     `-Record 0x28414e116f0 'localeinfo_struct'
|-TypedefDecl 0x28414e11a60 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x28414e11a10 'struct localeinfo_struct *'
|   `-ElaboratedType 0x28414e11930 'struct localeinfo_struct' sugar
|     `-RecordType 0x28414e11790 'struct localeinfo_struct'
|       `-Record 0x28414e116f0 'localeinfo_struct'
|-RecordDecl 0x28414e11ad8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x28414e11b90 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x28414e11c08 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x28414e11cc8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x28414e11d60 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x28414e11dd0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x28414e11e88 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x28414e11e30 'struct localerefcount' sugar
|   `-RecordType 0x28414e11b70 'struct localerefcount'
|     `-Record 0x28414e11ad8 'localerefcount'
|-RecordDecl 0x28414e16fc0 prev 0x28414e112a0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x28414e17040 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x28414e170b8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x28414e17128 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x28414e17198 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x28414e17208 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x28414e173c8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x28414e17438 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x28414e174a8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x28414e17518 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x28414e17588 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x28414e175f8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x28414e17650 parent 0x28413314c58 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x28414e177e0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x28414e17850 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x28414e178c0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x28414e17930 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x28414e179d0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x28414e17a40 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x28414e17b50 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x28414e17c88 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x28414e17d38 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x28414e17ce0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x28414e11340 'struct threadlocaleinfostruct'
|     `-Record 0x28414e16fc0 'threadlocaleinfostruct'
|-FunctionDecl 0x28414e191f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x28414e17dc0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x28414e17e70 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x28414e17ef0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x28414e18fe0 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28414e195b8 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x28414e19658 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x28414e196c0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x28414e19728 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x28414e197a8 prev 0x28414e195b8 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x28414e192e0 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x28414e19360 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x28414e193d8 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28414e19b68 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x28414e19890 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x28414e19910 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x28414e19988 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x28414e11fc0 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x28414e19c50 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x28414e19cd0 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x28414e19d48 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28414e19de0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28414e122c8 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x28414e12368 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x28414e123d0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x28414e12438 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x28414e124b8 prev 0x28414e122c8 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x28414e120b0 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x28414e12130 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x28414e121a8 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x28414e12878 <line:55:17> col:17 implicit memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x28414e12918 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x28414e12980 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x28414e129e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x28414e12a68 prev 0x28414e12878 <col:1, col:127> col:17 memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x28414e125a0 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x28414e12620 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x28414e12698 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x28414e19ff0 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x28414e12b78 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x28414e12c10 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x28414e12c90 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x28414e12d08 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x28414e1a3b8 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x28414e1a458 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x28414e1a4c0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x28414e1a528 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x28414e1a5a8 prev 0x28414e1a3b8 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x28414e1a0e0 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x28414e1a160 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x28414e1a1d8 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x28414e1aa28 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x28414e1aac8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x28414e1ab30 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x28414e1ab98 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x28414e1ac00 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x28414e1ac88 prev 0x28414e1aa28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x28414e1a770 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x28414e1a7f0 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x28414e1a870 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x28414e1a8e8 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x28414e1ad48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x28414e1b198 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x28414e1af10 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x28414e1b000 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x28414e1b078 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x28414e1b250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x28414e1b640 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x28414e1b378 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x28414e1b3f0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28414e1b470 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x28414e1ba10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x28414e1b820 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x28414e1b8a0 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x28414e1bac0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28414e1bed0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x28414e1bc08 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x28414e1bc80 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x28414e1bd00 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x28414e1e2f0 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x28414e1e390 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x28414e1e3f8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x28414e1e470 prev 0x28414e1e2f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x28414e1e108 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x28414e1e188 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x28414e1e520 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28414e1e878 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x28414e1e668 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x28414e1e6e0 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x28414e1e760 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x28414e1eba0 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x28414e1ec40 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x28414e1eca8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x28414e1ed20 prev 0x28414e1eba0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x28414e1ea20 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x28414e1eaa0 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x28414e1edd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28414e22140 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x28414e221e0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x28414e22248 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x28414e222c0 prev 0x28414e22140 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x28414e1ef18 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x28414e1ef98 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x28414e22510 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x28414e225b0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x28414e22620 prev 0x28414e22510 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x28414e223a0 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x28414e22918 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x28414e226f8 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x28414e22770 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28414e22b68 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x28414e229f8 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x28414e22a70 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x28414e22e98 <line:131:1, line:133:1>
|   `-ReturnStmt 0x28414e22e88 <line:132:5, col:51>
|     `-ConditionalOperator 0x28414e22e58 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x28414e22cc8 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x28414e22ca8 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x28414e22c78 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x28414e22c30 <col:13> 'const char *' lvalue ParmVar 0x28414e229f8 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x28414e22c90 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x28414e22c50 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x28414e22e40 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x28414e22ce8 <col:24> 'int' 0
|       `-CallExpr 0x28414e22de0 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x28414e22dc8 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x28414e22d10 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x28414e22918 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x28414e22e10 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x28414e22d30 <col:36> 'const char *' lvalue ParmVar 0x28414e229f8 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x28414e22e28 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x28414e22d50 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x28414e22a70 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x28414e1d158 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x28414e22ec8 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x28414e22f40 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x28414e22fc0 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x28414e1d020 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x28414e1d460 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x28414e1d500 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x28414e1d568 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x28414e1d5d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x28414e1d650 prev 0x28414e1d460 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x28414e1d248 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x28414e1d2c8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x28414e1d340 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x28414e1d888 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x28414e1d738 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x28414e1db50 <line:152:54> col:54 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x28414e1dbf0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x28414e1dc58 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x28414e1dcd0 prev 0x28414e1db50 <col:38, col:100> col:54 used strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x28414e1d960 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x28414e1d9e0 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x28414e1df30 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x28414e1ddb0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x28414e1de30 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x28414e1f1c0 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x28414e1f040 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x28414e1f0c0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x28414e1f578 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x28414e1f2a0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x28414e1f320 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x28414e1f398 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28414e1f7e0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x28414e1f660 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x28414e1f6e0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x28414e1fad8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x28414e1f8c0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x28414e1f940 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x28414e1f9b8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28414e1fd40 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x28414e1fbc0 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x28414e1fc40 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x28414e1c010 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x28414e1fe20 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x28414e1fea0 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x28414e1ff18 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28414e1c3c8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x28414e1c0f8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x28414e1c178 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x28414e1c1f0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28414e1c830 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x28414e1c4b0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x28414e1c530 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x28414e1c5a8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28414e1c620 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28414e1cb38 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x28414e1c920 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x28414e1c9a0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x28414e1ca18 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28414e1ced0 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x28414e1cc20 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x28414e1cca0 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x28414e1cd18 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28414e1cd90 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28414e252c8 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x28414e25368 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x28414e253d0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x28414e25448 prev 0x28414e252c8 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x28414e250a0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x28414e25120 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x28414e25700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x28414e25620 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x28414e257a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28414e25b80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x28414e258f0 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x28414e25968 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28414e259e8 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x28414e25e98 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x28414e25f38 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x28414e25fa8 prev 0x28414e25e98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x28414e25d60 <col:90> col:93 'int'
| `-DeprecatedAttr 0x28414e26050 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28414e263c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x28414e261b0 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x28414e26228 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28414e262a8 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x28414e266c8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x28414e264a8 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x28414e26520 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x28414e269b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x28414e26868 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x28414e26a60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28414e26e70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x28414e26ba8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x28414e26c20 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28414e26c98 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28414e20200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x28414e27018 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x28414e20050 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x28414e202b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28414e20768 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x28414e203f8 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x28414e20470 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x28414e204f0 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x28414e20568 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x28414e20be8 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x28414e20c88 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x28414e20cf0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x28414e20d58 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x28414e20dd8 prev 0x28414e20be8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x28414e20918 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x28414e20998 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x28414e20a10 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x28414e20e90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28414e23230 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x28414e232d0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x28414e23338 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x28414e233a0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x28414e23420 prev 0x28414e23230 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x28414e20fd8 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x28414e23098 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x28414e23110 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28414e23720 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x28414e23508 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x28414e23588 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x28414e23600 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28414e23ab8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x28414e23808 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x28414e23888 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x28414e23900 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28414e23978 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28414e23e50 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x28414e23ba8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x28414e23c20 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x28414e23ca0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x28414e23d18 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x28414e211f8 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x28414e21298 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x28414e21300 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x28414e21368 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x28414e213e8 prev 0x28414e211f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x28414e24000 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x28414e21060 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x28414e210d8 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x28414e214a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28414e21958 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x28414e215e8 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x28414e21660 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28414e216e0 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x28414e21758 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28414e21dd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x28414e21b08 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x28414e21b88 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x28414e21c00 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x28414e21e90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28414e24200 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x28414e242a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x28414e24308 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x28414e24380 prev 0x28414e24200 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x28414e21fd8 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x28414e24090 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x28414e245e0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x28414e24680 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x28414e246e8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x28414e24760 prev 0x28414e245e0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x28414e24460 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x28414e244e0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x28414e24920 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x28414e24840 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x28414e24b70 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x28414e24c10 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x28414e24c78 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x28414e24cf0 prev 0x28414e24b70 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x28414e249f8 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x28414e24a78 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x28414e24f50 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x28414e24ff0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x28414ea1010 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x28414ea1088 prev 0x28414e24f50 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x28414e24dd0 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x28414e24e50 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x28414ea13a8 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x28414ea1448 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x28414ea14b0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x28414ea1528 prev 0x28414ea13a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x28414ea1228 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x28414ea12a8 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x28414ea15d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28414ea19b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x28414ea1720 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x28414ea17a0 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x28414ea1820 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x28414ea1c10 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x28414ea1aa0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x28414ea1b18 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x28414ea1e90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x28414ea1db0 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x28414ea1f38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28414e9f2f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x28414e9f0f0 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x28414e9f168 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28414e9f1e0 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28414e9f618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x28414e9f4a0 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x28414e9f518 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x28414e9f6c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28414e9fae0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x28414e9fb80 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x28414e9fbe8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x28414e9fc50 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x28414e9fcd0 prev 0x28414e9fae0 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x28414e9f810 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x28414e9f890 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x28414e9f908 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28414e9b0e8 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x28414e9fdb8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x28414e9fe38 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x28414e9feb0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28414e9ff28 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28414e9b390 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x28414e9b430 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x28414e9b4a0 prev 0x28414e9b390 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x28414e9b2b0 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x28414e9b548 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x28414e9b890 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x28414e9b710 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x28414e9b790 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x28414e9b940 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x28414e9bc88 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x28414e9bb08 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x28414e9bb88 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x28414e9bd38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x28414e99fd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x28414e9bf00 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x28414e9a080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x28414e9a498 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x28414e9a280 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x28414e9a300 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x28414e9a378 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x28414e9a550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x28414e9a930 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x28414e9a718 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x28414e9a798 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x28414e9a810 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x28414e9a9e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x28414e9ac90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x28414e9abb0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x28414e9ad38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x28414ea2120 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x28414e9af00 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x28414ea2020 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x28414ea21d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x28414ea2478 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x28414ea2398 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x28414ea2520 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x28414ea27b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x28414ea2640 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x28414ea2b40 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x28414ea2880 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x28414ea28f8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x28414ea2970 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x28414ea2ef8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28414ea2ce0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x28414ea2d58 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x28414ea2fa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28414ea3348 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x28414ea33e8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x28414ea3450 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x28414ea34c8 prev 0x28414ea3348 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x28414ea3128 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x28414ea31a0 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x28414ea37c0 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x28414ea3860 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x28414ea38c8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x28414ea3940 prev 0x28414ea37c0 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x28414ea35a0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x28414ea3618 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x28414ea3c20 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x28414ea3a18 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x28414ea3a90 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x28414ea3b08 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x28414ea3f30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28414ea3dc0 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x28414ea3e38 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x28414ea3fe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28414e9d2e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28414e9d0c8 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x28414e9d140 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x28414e9d530 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x28414e9d5d0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x28414e9d640 prev 0x28414e9d530 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x28414e9d3c0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x28414e9d928 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x28414e9d710 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x28414e9d788 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28414e9db70 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x28414e9da00 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x28414e9da78 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x28414e9df08 <line:306:1, line:308:1>
|   `-ReturnStmt 0x28414e9def8 <line:307:5, col:56>
|     `-ConditionalOperator 0x28414e9dec8 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x28414e9dd30 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x28414e9dd10 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x28414e9dce0 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x28414e9dc38 <col:13> 'const wchar_t *' lvalue ParmVar 0x28414e9da00 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x28414e9dcf8 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x28414e9dcc0 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x28414e9dc98 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x28414e9dc58 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x28414e9deb0 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x28414e9dd50 <col:29> 'int' 0
|       `-CallExpr 0x28414e9de50 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x28414e9de38 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x28414e9dd78 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x28414e9d928 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x28414e9de80 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x28414e9dd98 <col:41> 'const wchar_t *' lvalue ParmVar 0x28414e9da00 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x28414e9de98 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x28414e9ddb8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x28414e9da78 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x28414e9c2b8 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x28414e9df30 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x28414e9bfc0 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x28414e9c038 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x28414e9c0b0 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x28414e9c720 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x28414e9c460 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x28414e9c4d8 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x28414e9c550 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x28414e9c7d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28414e9cbe8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x28414e9cc88 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x28414e9ccf0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x28414e9cd58 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x28414e9cdd8 prev 0x28414e9cbe8 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x28414e9c918 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x28414e9c990 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x28414e9ca08 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28414ea41f0 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x28414e9ceb8 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x28414e9cf30 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x28414ea4040 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x28414ea40b8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x28414ea45a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x28414ea4398 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x28414ea4410 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x28414ea4488 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x28414ea4658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28414ea49b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28414ea4798 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x28414ea4810 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x28414ea4c00 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x28414ea4a90 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x28414ea4b08 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x28414ea4e48 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28414ea4cd8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x28414ea4d50 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x28414ea50b0 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28414ea4f20 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x28414ea4f98 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x28414ea53b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28414ea5248 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x28414ea52c0 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x28414ea5468 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28414ea58d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x28414ea55a8 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x28414ea5620 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x28414ea5700 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x28414ea5bf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x28414ea5a78 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x28414ea5c98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28414eaa110 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x28414ea5dd8 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x28414ea5e50 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28414ea5ed0 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x28414eaa3c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x28414eaa2e8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x28414eaa468 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28414eaa830 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x28414eaa5a8 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x28414eaa620 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28414eaa698 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x28414eaaa88 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28414eaa910 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x28414eaa988 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x28414eaae28 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x28414eaab60 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x28414eaabd8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x28414eaac50 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28414eab138 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x28414eaaf08 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x28414eaaf80 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x28414eaaff8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28414eab590 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x28414eab218 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x28414eab290 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x28414eab308 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28414eab380 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28414eab9e8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x28414eab678 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x28414eab6f0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28414eab768 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x28414eab7e0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28414eabe50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x28414eabb90 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x28414eabc08 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x28414eabc80 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x28414eabf08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28414ea8190 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x28414eac048 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x28414ea8520 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x28414ea8260 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x28414ea82d8 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28414ea8350 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x28414ea88d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x28414ea86c0 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x28414ea8738 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x28414ea8988 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28414ea8ce8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x28414ea8ac8 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x28414ea8b40 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x28414ea8f58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x28414ea8e80 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x28414ea9000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28414ea6420 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x28414ea6158 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x28414ea61d0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28414ea6248 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28414ea67d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x28414ea65c0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x28414ea6638 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x28414ea6888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28414ea6b38 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x28414ea69c8 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x28414ea6a40 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x28414ea6da8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x28414ea6cd0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x28414ea6e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28414eac250 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x28414ea6f90 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x28414eac0c0 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28414eac138 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28414eac560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x28414eac3f0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x28414eac468 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x28414eac610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28414eaca10 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x28414eac750 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x28414eac7c8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x28414eac840 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28414eace58 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x28414eacaf0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x28414eacb68 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x28414eacbe0 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28414eacc58 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28414ead0d0 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28414eacf40 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x28414eacfb8 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x28414ead3b8 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x28414ead1a8 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x28414ead220 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x28414ead298 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28414ead610 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28414ead498 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x28414ead510 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x28414ead8f8 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x28414ead6e8 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x28414ead760 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x28414ead7d8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28414eadbe8 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x28414ead9d8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x28414eada50 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x28414eadac8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28414eadf70 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x28414eadcc8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x28414eadd40 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x28414eaddb8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28414eade30 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28414eae278 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x28414eae058 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x28414eae0e0 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x28414eae158 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28414eae600 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x28414eae358 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x28414eae3d0 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x28414eae448 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28414eae4c0 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28414eae860 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x28414eae788 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x28414eae908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x28414eaec40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28414eaeac8 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x28414eaeb40 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x28414eaecf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x28414ea7070 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x28414eaeeb0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x28414eaef28 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x28414eaefa0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x28414ea7128 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x28414ea74f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x28414ea72e8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x28414ea7360 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x28414ea73d8 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x28414ea75a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x28414ea7840 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x28414ea7768 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x28414ea78e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x28414ea7c18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x28414ea7aa8 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x28414ea7b20 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x28414ea7cc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x28414ea7f60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x28414ea7e88 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x28414ea8008 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x28414eb53a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x28414eb52c8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x28414eb5448 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x28414eb5780 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28414eb5608 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x28414eb5680 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x28414eb5830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x28414eb5c20 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:35:9, col:112> col:22 used _wassert 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
| |-ParmVarDecl 0x28414eb5950 <col:38, col:54> col:54 _Message 'const wchar_t *'
| |-ParmVarDecl 0x28414eb59c8 <col:71, col:86> col:86 _File 'const wchar_t *'
| `-ParmVarDecl 0x28414eb5a48 <col:98, col:107> col:107 _Line 'unsigned int'
|-TypedefDecl 0x28414eb5d08 <D:\Microsoft Visual Studio 12.0\VC\include\signal.h:28:1, col:13> col:13 sig_atomic_t 'int'
| `-BuiltinType 0x28413314d50 'int'
|-FunctionDecl 0x28414eb5ec0 <line:88:1, col:45> col:25 __pxcptinfoptrs 'void **(void) __attribute__((cdecl))':'void **(void)' extern
|-FunctionDecl 0x28414eb6470 <line:94:9, col:100> col:33 signal 'void (*(int, void (*)(int) __attribute__((cdecl))))(int) __attribute__((cdecl)) __attribute__((cdecl))'
| |-ParmVarDecl 0x28414eb5f90 <col:45, col:49> col:49 _SigNum 'int'
| `-ParmVarDecl 0x28414eb61f8 <col:67, col:83> col:83 _Func 'void (*)(int) __attribute__((cdecl))'
|-FunctionDecl 0x28414eb6698 <line:97:9, col:43> col:21 raise 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x28414eb6550 <col:32, col:36> col:36 _SigNum 'int'
|-FunctionDecl 0x28414eb6900 <.//openssl//file_jk/before\apps/apps.h:43:1, col:55> col:5 app_RAND_load_file 'int (const char *, int)'
| |-ParmVarDecl 0x28414eb6770 <col:24, col:36> col:36 file 'const char *'
| `-ParmVarDecl 0x28414eb67f0 <col:42, col:46> col:46 dont_warn 'int'
|-FunctionDecl 0x28414eb6ac0 <line:44:1, col:41> col:5 app_RAND_write_file 'int (const char *)'
| `-ParmVarDecl 0x28414eb69e0 <col:25, col:37> col:37 file 'const char *'
|-FunctionDecl 0x28414eb6c18 <line:48:1, col:36> col:6 app_RAND_allow_write_file 'void (void)'
|-FunctionDecl 0x28414eb6dd0 <line:49:1, col:36> col:6 app_RAND_load_files 'long (char *)'
| `-ParmVarDecl 0x28414eb6ce8 <col:26, col:32> col:32 file 'char *'
|-VarDecl 0x28414eb6ea8 <line:54:1, col:14> col:14 default_config_file 'char *' extern
|-VarDecl 0x28414eb6f40 <line:55:1, col:13> col:13 invalid bio_in 'int *' extern
|-VarDecl 0x28414eb6fc0 <line:56:1, col:13> col:13 invalid bio_out 'int *' extern
|-VarDecl 0x28414eb7040 <line:57:1, col:13> col:13 invalid bio_err 'int *' extern
|-FunctionDecl 0x28414eb81e0 <line:58:1, col:27> col:6 invalid dup_bio_in 'int *(int)'
| `-ParmVarDecl 0x28414eb70c0 <col:17, col:21> col:21 format 'int'
|-FunctionDecl 0x28414eb8350 <line:59:1, col:28> col:6 invalid dup_bio_out 'int *(int)'
| `-ParmVarDecl 0x28414eb82a0 <col:18, col:22> col:22 format 'int'
|-FunctionDecl 0x28414eb84c0 <line:60:1, col:28> col:6 invalid dup_bio_err 'int *(int)'
| `-ParmVarDecl 0x28414eb8410 <col:18, col:22> col:22 format 'int'
|-FunctionDecl 0x28414eb87b0 <line:61:1, col:66> col:6 invalid bio_open_owner 'int *(const char *, int, int)'
| |-ParmVarDecl 0x28414eb8580 <col:21, col:33> col:33 filename 'const char *'
| |-ParmVarDecl 0x28414eb8600 <col:43, col:47> col:47 format 'int'
| `-ParmVarDecl 0x28414eb8680 <col:55, col:59> col:59 private 'int'
|-FunctionDecl 0x28414eb8ab0 <line:62:1, col:66> col:6 invalid bio_open_default 'int *(const char *, char, int)'
| |-ParmVarDecl 0x28414eb8880 <col:23, col:35> col:35 filename 'const char *'
| |-ParmVarDecl 0x28414eb88f8 <col:45, col:50> col:50 mode 'char'
| `-ParmVarDecl 0x28414eb8978 <col:56, col:60> col:60 format 'int'
|-FunctionDecl 0x28414eb8d68 <line:63:1, col:72> col:6 invalid bio_open_default_quiet 'int *(const char *, char, int)'
| |-ParmVarDecl 0x28414eb8b80 <col:29, col:41> col:41 filename 'const char *'
| |-ParmVarDecl 0x28414eb8bf8 <col:51, col:56> col:56 mode 'char'
| `-ParmVarDecl 0x28414eb8c78 <col:62, col:66> col:66 format 'int'
|-FunctionDecl 0x28414eb8f20 <line:64:1, col:43> col:7 invalid app_load_config 'int *(const char *)'
| `-ParmVarDecl 0x28414eb8e38 <col:23, col:35> col:35 filename 'const char *'
|-FunctionDecl 0x28414eb9090 <line:65:1, col:49> col:7 invalid app_load_config_quiet 'int *(const char *)'
| `-ParmVarDecl 0x28414eb8fe0 <col:29, col:41> col:41 filename 'const char *'
|-FunctionDecl 0x28414eb11e0 <line:66:1, col:40> col:5 invalid app_load_modules 'int (const int *)'
| `-ParmVarDecl 0x28414eb1110 <col:22, col:34> col:34 invalid config 'const int *'
|-FunctionDecl 0x28414eb1368 <line:67:1, col:23> col:6 invalid unbuffer 'void (int *)'
| `-ParmVarDecl 0x28414eb12a0 <col:15, col:21> col:21 invalid fp 'int *'
|-FunctionDecl 0x28414eb14b8 <line:68:1, col:27> col:6 invalid wait_for_async 'void (int *)'
| `-ParmVarDecl 0x28414eb1428 <col:21, col:26> col:26 invalid s 'int *'
|-FunctionDecl 0x28414eb1638 <line:73:1, col:52> col:6 invalid corrupt_signature 'void (const int *)'
| `-ParmVarDecl 0x28414eb1578 <col:24, col:43> col:43 invalid signature 'const int *'
|-FunctionDecl 0x28414eb1970 <line:74:1, line:75:28> line:74:5 invalid set_cert_times 'int (int *, const char *, const char *, int)'
| |-ParmVarDecl 0x28414eb16f8 <col:20, col:26> col:26 invalid x 'int *'
| |-ParmVarDecl 0x28414eb1778 <col:29, col:41> col:41 startdate 'const char *'
| |-ParmVarDecl 0x28414eb17f8 <col:52, col:64> col:64 enddate 'const char *'
| `-ParmVarDecl 0x28414eb1878 <line:75:20, col:24> col:24 days 'int'
|-VarDecl 0x28414eb1aa8 <line:291:1, col:32> col:19 OPT_HELP_STR 'const char []' extern
|-VarDecl 0x28414eb1b48 <line:292:1, col:32> col:19 OPT_MORE_STR 'const char []' extern
|-RecordDecl 0x28414eb1bc8 <line:293:9, line:304:1> line:293:16 struct options_st definition
| |-FieldDecl 0x28414eb1c98 <line:294:5, col:17> col:17 name 'const char *'
| |-FieldDecl 0x28414eb1d08 <line:295:5, col:9> col:9 retval 'int'
| |-FieldDecl 0x28414eb1d78 <line:302:5, col:9> col:9 valtype 'int'
| `-FieldDecl 0x28414eb1de8 <line:303:5, col:17> col:17 helpstr 'const char *'
|-TypedefDecl 0x28414eb1e98 <line:293:1, line:304:3> col:3 referenced OPTIONS 'struct options_st':'struct options_st'
| `-ElaboratedType 0x28414eb1e40 'struct options_st' sugar
|   `-RecordType 0x28414eb1c60 'struct options_st'
|     `-Record 0x28414eb1bc8 'options_st'
|-RecordDecl 0x28414eb1f08 <line:311:9, line:314:1> line:311:16 struct string_int_pair_st definition
| |-FieldDecl 0x28414eb1fd8 <line:312:5, col:17> col:17 name 'const char *'
| `-FieldDecl 0x28414eb2048 <line:313:5, col:9> col:9 retval 'int'
|-TypedefDecl 0x28414e562f0 <line:311:1, line:314:3> col:3 referenced OPT_PAIR 'struct string_int_pair_st':'struct string_int_pair_st'
| `-ElaboratedType 0x28414eb20a0 'struct string_int_pair_st' sugar
|   `-RecordType 0x28414eb1fa0 'struct string_int_pair_st'
|     `-Record 0x28414eb1f08 'string_int_pair_st'
|-TypedefDecl 0x28414e56368 <line:311:1, line:314:13> col:13 STRINT_PAIR 'struct string_int_pair_st':'struct string_int_pair_st'
| `-ElaboratedType 0x28414eb20a0 'struct string_int_pair_st' sugar
|   `-RecordType 0x28414eb1fa0 'struct string_int_pair_st'
|     `-Record 0x28414eb1f08 'string_int_pair_st'
|-FunctionDecl 0x28414e564a8 <line:334:1, col:37> col:7 opt_progname 'char *(const char *)'
| `-ParmVarDecl 0x28414e563f8 <col:20, col:32> col:32 argv0 'const char *'
|-FunctionDecl 0x28414e56630 <line:335:1, col:23> col:7 opt_getprog 'char *(void)'
|-FunctionDecl 0x28414e569f0 <line:336:1, col:52> col:7 used opt_init 'char *(int, char **, const OPTIONS *)'
| |-ParmVarDecl 0x28414e56700 <col:16, col:20> col:20 ac 'int'
| |-ParmVarDecl 0x28414e56780 <col:24, col:31> col:31 av 'char **'
| `-ParmVarDecl 0x28414e56878 <col:35, col:51> col:51 o 'const OPTIONS *'
|-FunctionDecl 0x28414e56b90 <line:337:1, col:18> col:5 used opt_next 'int (void)'
|-FunctionDecl 0x28414e56e90 <line:338:1, col:63> col:5 opt_format 'int (const char *, unsigned long, int *)'
| |-ParmVarDecl 0x28414e56c60 <col:16, col:28> col:28 s 'const char *'
| |-ParmVarDecl 0x28414e56ce0 <col:31, col:45> col:45 flags 'unsigned long'
| `-ParmVarDecl 0x28414e56d60 <col:52, col:57> col:57 result 'int *'
|-FunctionDecl 0x28414e57100 <line:339:1, col:41> col:5 opt_int 'int (const char *, int *)'
| |-ParmVarDecl 0x28414e56f78 <col:13, col:25> col:25 arg 'const char *'
| `-ParmVarDecl 0x28414e56ff8 <col:30, col:35> col:35 result 'int *'
|-FunctionDecl 0x28414e5b450 <line:340:1, col:53> col:5 opt_ulong 'int (const char *, unsigned long *)'
| |-ParmVarDecl 0x28414e571e0 <col:15, col:27> col:27 arg 'const char *'
| `-ParmVarDecl 0x28414e5b340 <col:32, col:47> col:47 result 'unsigned long *'
|-FunctionDecl 0x28414e5b6f0 <line:341:1, col:43> col:5 opt_long 'int (const char *, long *)'
| |-ParmVarDecl 0x28414e5b530 <col:14, col:26> col:26 arg 'const char *'
| `-ParmVarDecl 0x28414e5b5e0 <col:31, col:37> col:37 result 'long *'
|-FunctionDecl 0x28414e5bac0 <line:352:1, col:66> col:5 opt_pair 'int (const char *, const OPT_PAIR *, int *)'
| |-ParmVarDecl 0x28414e5b7d0 <col:14, col:26> col:26 arg 'const char *'
| |-ParmVarDecl 0x28414e5b8c8 <col:31, col:48> col:48 pairs 'const OPT_PAIR *'
| `-ParmVarDecl 0x28414e5b948 <col:55, col:60> col:60 result 'int *'
|-FunctionDecl 0x28414e5bd30 <line:353:1, col:60> col:5 invalid opt_cipher 'int (const char *, const int **)'
| |-ParmVarDecl 0x28414e5bba8 <col:16, col:28> col:28 name 'const char *'
| `-ParmVarDecl 0x28414e5bc58 <col:34, col:53> col:53 invalid cipherp 'const int **'
|-FunctionDecl 0x28414e5bf20 <line:354:1, col:48> col:5 invalid opt_md 'int (const char *, const int **)'
| |-ParmVarDecl 0x28414e5bdf8 <col:12, col:24> col:24 name 'const char *'
| `-ParmVarDecl 0x28414e5be80 <col:30, col:45> col:45 invalid mdp 'const int **'
|-FunctionDecl 0x28414e5c070 <line:355:1, col:19> col:7 used opt_arg 'char *(void)'
|-FunctionDecl 0x28414e5c1c8 <line:356:1, col:20> col:7 opt_flag 'char *(void)'
|-FunctionDecl 0x28414e5c350 <line:357:1, col:23> col:7 opt_unknown 'char *(void)'
|-FunctionDecl 0x28414e5c4a8 <line:358:1, col:21> col:7 opt_reset 'char *(void)'
|-FunctionDecl 0x28414e5c630 <line:359:1, col:21> col:8 used opt_rest 'char **(void)'
|-FunctionDecl 0x28414e5c788 <line:360:1, col:22> col:5 used opt_num_rest 'int (void)'
|-FunctionDecl 0x28414e5c9b0 <line:361:1, col:45> col:5 invalid opt_verify 'int (int, int *)'
| |-ParmVarDecl 0x28414e5c858 <col:16, col:20> col:20 i 'int'
| `-ParmVarDecl 0x28414e5c8d8 <col:23, col:42> col:42 invalid vpm 'int *'
|-FunctionDecl 0x28414e5cb78 <line:362:1, col:35> col:6 used opt_help 'void (const OPTIONS *)'
| `-ParmVarDecl 0x28414e5ca70 <col:15, col:31> col:31 list 'const OPTIONS *'
|-FunctionDecl 0x28414e5cde0 <line:363:1, col:56> col:5 opt_format_error 'int (const char *, unsigned long)'
| |-ParmVarDecl 0x28414e5cc50 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x28414e5ccd0 <col:37, col:51> col:51 flags 'unsigned long'
|-RecordDecl 0x28414e5cea8 <line:365:9, line:369:1> line:365:16 struct args_st definition
| |-FieldDecl 0x28414e5cf78 <line:366:5, col:9> col:9 size 'int'
| |-FieldDecl 0x28414e5cfe8 <line:367:5, col:9> col:9 argc 'int'
| `-FieldDecl 0x28414e5d058 <line:368:5, col:12> col:12 argv 'char **'
|-TypedefDecl 0x28414e5d108 <line:365:1, line:369:3> col:3 referenced ARGS 'struct args_st':'struct args_st'
| `-ElaboratedType 0x28414e5d0b0 'struct args_st' sugar
|   `-RecordType 0x28414e5cf40 'struct args_st'
|     `-Record 0x28414e5cea8 'args_st'
|-FunctionDecl 0x28414e55390 <line:376:1, col:41> col:8 copy_argv 'char **(int *, char **)'
| |-ParmVarDecl 0x28414e5d190 <col:18, col:23> col:23 argc 'int *'
| `-ParmVarDecl 0x28414e5d280 <col:29, col:40> col:35 argv 'char **':'char **'
|-FunctionDecl 0x28414e556d8 <line:381:1, col:45> col:6 win32_utf8argv 'void (int *, char ***)'
| |-ParmVarDecl 0x28414e55470 <col:21, col:26> col:26 argc 'int *'
| `-ParmVarDecl 0x28414e55590 <col:32, col:44> col:39 argv 'char ***':'char ***'
|-RecordDecl 0x28414e557a0 <line:385:9, line:388:1> line:385:16 struct pw_cb_data definition
| |-FieldDecl 0x28414e55878 <line:386:5, col:17> col:17 password 'const void *'
| `-FieldDecl 0x28414e558e8 <line:387:5, col:17> col:17 prompt_info 'const char *'
|-TypedefDecl 0x28414e55998 <line:385:1, line:388:3> col:3 referenced PW_CB_DATA 'struct pw_cb_data':'struct pw_cb_data'
| `-ElaboratedType 0x28414e55940 'struct pw_cb_data' sugar
|   `-RecordType 0x28414e55840 'struct pw_cb_data'
|     `-Record 0x28414e557a0 'pw_cb_data'
|-FunctionDecl 0x28414e55dc0 <line:390:1, col:77> col:5 password_callback 'int (char *, int, int, PW_CB_DATA *)'
| |-ParmVarDecl 0x28414e55a20 <col:23, col:29> col:29 buf 'char *'
| |-ParmVarDecl 0x28414e55aa0 <col:34, col:38> col:38 bufsiz 'int'
| |-ParmVarDecl 0x28414e55b20 <col:46, col:50> col:50 verify 'int'
| `-ParmVarDecl 0x28414e55c18 <col:58, col:70> col:70 cb_data 'PW_CB_DATA *'
|-FunctionDecl 0x28414e55f38 <line:392:1, col:25> col:5 setup_ui_method 'int (void)'
|-FunctionDecl 0x28414e56088 <line:393:1, col:28> col:6 destroy_ui_method 'void (void)'
|-FunctionDecl 0x28414e64480 <line:395:1, col:37> col:5 chopup_args 'int (ARGS *, char *)'
| |-ParmVarDecl 0x28414e561c8 <col:17, col:23> col:23 arg 'ARGS *'
| `-ParmVarDecl 0x28414e56248 <col:28, col:34> col:34 buf 'char *'
|-FunctionDecl 0x28414e64898 <line:401:1, line:402:43> line:401:6 invalid print_bignum_var 'void (int *, const int *, const char *, int, unsigned char *)'
| |-ParmVarDecl 0x28414e64560 <col:23, <invalid sloc>> col:28 invalid 'int *'
| |-ParmVarDecl 0x28414e645e0 <col:30, <invalid sloc>> col:44 invalid 'const int *'
| |-ParmVarDecl 0x28414e64660 <col:46, col:56> col:57 'const char *'
| |-ParmVarDecl 0x28414e646e0 <line:402:23> col:26 'int'
| `-ParmVarDecl 0x28414e64790 <col:28, col:42> col:43 'unsigned char *'
|-FunctionDecl 0x28414e64be8 <line:403:1, col:65> col:6 invalid print_array 'void (int *, const char *, int, const unsigned char *)'
| |-ParmVarDecl 0x28414e64978 <col:18, <invalid sloc>> col:23 invalid 'int *'
| |-ParmVarDecl 0x28414e649f8 <col:25, col:36> col:37 'const char *'
| |-ParmVarDecl 0x28414e64a78 <col:39> col:42 'int'
| `-ParmVarDecl 0x28414e64af8 <col:44, col:64> col:65 'const unsigned char *'
|-FunctionDecl 0x28414e64e50 <line:404:1, col:54> col:5 set_cert_ex 'int (unsigned long *, const char *)'
| |-ParmVarDecl 0x28414e64cc0 <col:17, col:32> col:32 flags 'unsigned long *'
| `-ParmVarDecl 0x28414e64d40 <col:39, col:51> col:51 arg 'const char *'
|-FunctionDecl 0x28414e65080 <line:405:1, col:54> col:5 set_name_ex 'int (unsigned long *, const char *)'
| |-ParmVarDecl 0x28414e64f30 <col:17, col:32> col:32 flags 'unsigned long *'
| `-ParmVarDecl 0x28414e64fb0 <col:39, col:51> col:51 arg 'const char *'
|-FunctionDecl 0x28414e652f0 <line:406:1, col:49> col:5 set_ext_copy 'int (int *, const char *)'
| |-ParmVarDecl 0x28414e65160 <col:18, col:23> col:23 copy_type 'int *'
| `-ParmVarDecl 0x28414e651e0 <col:34, col:46> col:46 arg 'const char *'
|-FunctionDecl 0x28414e60580 <line:407:1, col:58> col:5 invalid copy_extensions 'int (int *, int *, int)'
| |-ParmVarDecl 0x28414e60390 <col:21, col:27> col:27 invalid x 'int *'
| |-ParmVarDecl 0x28414e60410 <col:30, col:40> col:40 invalid req 'int *'
| `-ParmVarDecl 0x28414e60490 <col:45, col:49> col:49 copy_type 'int'
|-FunctionDecl 0x28414e60930 <line:408:1, col:78> col:5 app_passwd 'int (const char *, const char *, char **, char **)'
| |-ParmVarDecl 0x28414e60650 <col:16, col:28> col:28 arg1 'const char *'
| |-ParmVarDecl 0x28414e606d0 <col:34, col:46> col:46 arg2 'const char *'
| |-ParmVarDecl 0x28414e60750 <col:52, col:59> col:59 pass1 'char **'
| `-ParmVarDecl 0x28414e607d0 <col:66, col:73> col:73 pass2 'char **'
|-FunctionDecl 0x28414e60af0 <line:409:1, col:31> col:5 invalid add_oid_section 'int (int *)'
| `-ParmVarDecl 0x28414e60a20 <col:21, col:27> col:27 invalid conf 'int *'
|-FunctionDecl 0x28414e60de0 <line:410:1, col:71> col:7 invalid load_cert 'int *(const char *, int, const char *)'
| |-ParmVarDecl 0x28414e60bb0 <col:17, col:29> col:29 file 'const char *'
| |-ParmVarDecl 0x28414e60c30 <col:35, col:39> col:39 format 'int'
| `-ParmVarDecl 0x28414e60cb0 <col:47, col:59> col:59 cert_descrip 'const char *'
|-FunctionDecl 0x28414e61040 <line:411:1, col:50> col:11 invalid load_crl 'int *(const char *, int)'
| |-ParmVarDecl 0x28414e60eb0 <col:20, col:32> col:32 infile 'const char *'
| `-ParmVarDecl 0x28414e60f30 <col:40, col:44> col:44 format 'int'
|-FunctionDecl 0x28414e634e0 <line:412:1, line:413:72> line:412:11 invalid load_key 'int *(const char *, int, int, const char *, int *, const char *)'
| |-ParmVarDecl 0x28414e61108 <col:20, col:32> col:32 file 'const char *'
| |-ParmVarDecl 0x28414e61188 <col:38, col:42> col:42 format 'int'
| |-ParmVarDecl 0x28414e61208 <col:50, col:54> col:54 maybe_stdin 'int'
| |-ParmVarDecl 0x28414e61288 <line:413:20, col:32> col:32 pass 'const char *'
| |-ParmVarDecl 0x28414e61308 <col:38, col:46> col:46 invalid e 'int *'
| `-ParmVarDecl 0x28414e633c0 <col:49, col:61> col:61 key_descrip 'const char *'
|-FunctionDecl 0x28414e63908 <line:414:1, line:415:75> line:414:11 invalid load_pubkey 'int *(const char *, int, int, const char *, int *, const char *)'
| |-ParmVarDecl 0x28414e635c8 <col:23, col:35> col:35 file 'const char *'
| |-ParmVarDecl 0x28414e63648 <col:41, col:45> col:45 format 'int'
| |-ParmVarDecl 0x28414e636c8 <col:53, col:57> col:57 maybe_stdin 'int'
| |-ParmVarDecl 0x28414e63748 <line:415:23, col:35> col:35 pass 'const char *'
| |-ParmVarDecl 0x28414e637c8 <col:41, col:49> col:49 invalid e 'int *'
| `-ParmVarDecl 0x28414e63848 <col:52, col:64> col:64 key_descrip 'const char *'
|-FunctionDecl 0x28414e63c30 <line:416:1, line:417:58> line:416:5 invalid load_certs 'int (const char *, int (*)())'
| |-ParmVarDecl 0x28414e639f0 <col:16, col:28> col:28 file 'const char *'
| `-ParmVarDecl 0x28414e63b10 <col:34, <invalid sloc>> col:34 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x28414e63e28 <line:418:1, line:419:57> line:418:5 invalid load_crls 'int (const char *, int (*)())'
| |-ParmVarDecl 0x28414e63cf8 <col:15, col:27> col:27 file 'const char *'
| `-ParmVarDecl 0x28414e63d88 <col:33, <invalid sloc>> col:33 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x28414e641d0 <line:420:1, line:421:52> line:420:13 invalid setup_verify 'int *(const char *, const char *, int, int)'
| |-ParmVarDecl 0x28414e63ef0 <col:26, col:38> col:38 CAfile 'const char *'
| |-ParmVarDecl 0x28414e63f70 <col:46, col:58> col:58 CApath 'const char *'
| |-ParmVarDecl 0x28414e63ff0 <line:421:26, col:30> col:30 noCAfile 'int'
| `-ParmVarDecl 0x28414e64070 <col:40, col:44> col:44 noCApath 'int'
|-FunctionDecl 0x28414e615b0 <line:422:1, line:424:49> line:422:12 invalid ctx_set_verify_locations 'int (int *, const char *, const char *, int, int)'
| |-ParmVarDecl 0x28414e642a8 <col:37, col:46> col:46 invalid ctx 'int *'
| |-ParmVarDecl 0x28414e64328 <col:51, col:63> col:63 CAfile 'const char *'
| |-ParmVarDecl 0x28414e613a0 <line:423:37, col:49> col:49 CApath 'const char *'
| |-ParmVarDecl 0x28414e61420 <col:57, col:61> col:61 noCAfile 'int'
| `-ParmVarDecl 0x28414e614a0 <line:424:37, col:41> col:41 noCApath 'int'
|-FunctionDecl 0x28414e617b0 <line:433:1, col:66> col:12 invalid ctx_set_ctlog_list_file 'int (int *, const char *)'
| |-ParmVarDecl 0x28414e61690 <col:36, col:45> col:45 invalid ctx 'int *'
| `-ParmVarDecl 0x28414e61710 <col:50, col:62> col:62 path 'const char *'
|-FunctionDecl 0x28414e619c8 <line:437:1, col:51> col:9 invalid setup_engine 'int *(const char *, int)'
| |-ParmVarDecl 0x28414e61878 <col:22, col:34> col:34 engine 'const char *'
| `-ParmVarDecl 0x28414e618f8 <col:42, col:46> col:46 debug 'int'
|-FunctionDecl 0x28414e61b20 <line:438:1, col:30> col:6 invalid release_engine 'void (int *)'
| `-ParmVarDecl 0x28414e61a90 <col:21, col:29> col:29 invalid e 'int *'
|-FunctionDecl 0x28414e61ff0 <line:441:1, line:445:49> line:441:16 invalid process_responder 'int *(int *, const char *, const char *, const char *, int, int (*)())'
| |-ParmVarDecl 0x28414e61be0 <col:34, col:48> col:48 invalid req 'int *'
| |-ParmVarDecl 0x28414e61c60 <line:442:34, col:46> col:46 host 'const char *'
| |-ParmVarDecl 0x28414e61ce0 <col:52, col:64> col:64 path 'const char *'
| |-ParmVarDecl 0x28414e61d60 <line:443:34, col:46> col:46 port 'const char *'
| |-ParmVarDecl 0x28414e61de0 <col:52, col:56> col:56 use_ssl 'int'
| `-ParmVarDecl 0x28414e61e70 <line:444:34, <invalid sloc>> col:34 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x28414e65480 <line:449:1, line:450:66> line:449:5 invalid unpack_revinfo 'int (int **, int *, int **, int **, const char *)'
| |-ParmVarDecl 0x28414e62108 <col:20, col:32> col:32 invalid prevtm 'int **'
| |-ParmVarDecl 0x28414e62188 <col:40, col:45> col:45 preason 'int *'
| |-ParmVarDecl 0x28414e62210 <col:54, col:68> col:68 invalid phold 'int **'
| |-ParmVarDecl 0x28414e62298 <line:450:20, col:43> col:43 invalid pinvtm 'int **'
| `-ParmVarDecl 0x28414e62318 <col:51, col:63> col:63 str 'const char *'
|-RecordDecl 0x28414e65548 <line:465:9, line:467:1> line:465:16 struct db_attr_st definition
| `-FieldDecl 0x28414e65618 <line:466:5, col:9> col:9 unique_subject 'int'
|-TypedefDecl 0x28414e656c8 <line:465:1, line:467:3> col:3 referenced DB_ATTR 'struct db_attr_st':'struct db_attr_st'
| `-ElaboratedType 0x28414e65670 'struct db_attr_st' sugar
|   `-RecordType 0x28414e655e0 'struct db_attr_st'
|     `-Record 0x28414e65548 'db_attr_st'
|-RecordDecl 0x28414e65738 <line:468:9, line:471:1> line:468:16 invalid struct ca_db_st definition
| |-FieldDecl 0x28414e65820 <line:469:5, col:13> col:13 attributes 'DB_ATTR':'struct db_attr_st'
| `-FieldDecl 0x28414e65890 <line:470:5, col:13> col:13 invalid db 'int *'
|-TypedefDecl 0x28414e65998 <line:468:1, line:471:3> col:3 referenced CA_DB 'struct ca_db_st':'struct ca_db_st'
| `-ElaboratedType 0x28414e65940 'struct ca_db_st' sugar
|   `-RecordType 0x28414e657d0 'struct ca_db_st'
|     `-Record 0x28414e65738 'ca_db_st'
|-FunctionDecl 0x28414e65bb0 <line:473:1, col:42> col:7 used app_malloc 'void *(int, const char *)'
| |-ParmVarDecl 0x28414e65a20 <col:18, col:22> col:22 sz 'int'
| `-ParmVarDecl 0x28414e65aa0 <col:26, col:38> col:38 what 'const char *'
|-FunctionDecl 0x28414e65e80 <line:474:1, col:77> col:9 invalid load_serial 'int *(const char *, int, int **)'
| |-ParmVarDecl 0x28414e65c90 <col:21, col:33> col:33 serialfile 'const char *'
| |-ParmVarDecl 0x28414e65d10 <col:45, col:49> col:49 create 'int'
| `-ParmVarDecl 0x28414e65d98 <col:57, col:72> col:72 invalid retai 'int **'
|-FunctionDecl 0x28414e661d0 <line:475:1, line:476:37> line:475:5 invalid save_serial 'int (const char *, const char *, const int *, int **)'
| |-ParmVarDecl 0x28414e65f50 <col:17, col:29> col:29 serialfile 'const char *'
| |-ParmVarDecl 0x28414e65fd0 <col:41, col:53> col:53 suffix 'const char *'
| |-ParmVarDecl 0x28414e66050 <col:61, col:75> col:75 invalid serial 'const int *'
| `-ParmVarDecl 0x28414e660d8 <line:476:17, col:32> col:32 invalid retai 'int **'
|-FunctionDecl 0x28414e5e4a0 <line:477:1, line:478:41> line:477:5 rotate_serial 'int (const char *, const char *, const char *)'
| |-ParmVarDecl 0x28414e662a8 <col:19, col:31> col:31 serialfile 'const char *'
| |-ParmVarDecl 0x28414e66328 <col:43, col:55> col:55 new_suffix 'const char *'
| `-ParmVarDecl 0x28414e5e370 <line:478:19, col:31> col:31 old_suffix 'const char *'
|-FunctionDecl 0x28414e5e6e0 <line:479:1, col:44> col:5 invalid rand_serial 'int (int *, int *)'
| |-ParmVarDecl 0x28414e5e588 <col:17, col:25> col:25 invalid b 'int *'
| `-ParmVarDecl 0x28414e5e608 <col:28, col:42> col:42 invalid ai 'int *'
|-FunctionDecl 0x28414e5ea38 <line:480:1, col:54> col:8 load_index 'CA_DB *(const char *, DB_ATTR *)'
| |-ParmVarDecl 0x28414e5e7c8 <col:19, col:31> col:31 dbfile 'const char *'
| `-ParmVarDecl 0x28414e5e898 <col:39, col:48> col:48 dbattr 'DB_ATTR *'
|-FunctionDecl 0x28414e5ec20 <line:481:1, col:26> col:5 index_index 'int (CA_DB *)'
| `-ParmVarDecl 0x28414e5eb10 <col:17, col:24> col:24 db 'CA_DB *'
|-FunctionDecl 0x28414e5ef60 <line:482:1, col:65> col:5 save_index 'int (const char *, const char *, CA_DB *)'
| |-ParmVarDecl 0x28414e5ecf8 <col:16, col:28> col:28 dbfile 'const char *'
| |-ParmVarDecl 0x28414e5ed78 <col:36, col:48> col:48 suffix 'const char *'
| `-ParmVarDecl 0x28414e5edf0 <col:56, col:63> col:63 db 'CA_DB *'
|-FunctionDecl 0x28414e5f238 <line:483:1, line:484:40> line:483:5 rotate_index 'int (const char *, const char *, const char *)'
| |-ParmVarDecl 0x28414e5f048 <col:18, col:30> col:30 dbfile 'const char *'
| |-ParmVarDecl 0x28414e5f0c8 <col:38, col:50> col:50 new_suffix 'const char *'
| `-ParmVarDecl 0x28414e5f148 <line:484:18, col:30> col:30 old_suffix 'const char *'
|-FunctionDecl 0x28414e67508 <line:485:1, col:26> col:6 free_index 'void (CA_DB *)'
| `-ParmVarDecl 0x28414e67400 <col:17, col:24> col:24 db 'CA_DB *'
|-FunctionDecl 0x28414e67740 <line:489:1, col:70> col:5 invalid index_name_cmp 'int (const int *, const int *)'
| |-ParmVarDecl 0x28414e675e0 <col:20, col:43> col:43 invalid a 'const int *'
| `-ParmVarDecl 0x28414e67660 <col:46, col:69> col:69 invalid b 'const int *'
|-FunctionDecl 0x28414e67958 <line:490:1, col:41> col:5 parse_yesno 'int (const char *, int)'
| |-ParmVarDecl 0x28414e67808 <col:17, col:29> col:29 str 'const char *'
| `-ParmVarDecl 0x28414e67888 <col:34, col:38> col:38 def 'int'
|-FunctionDecl 0x28414e67c70 <line:492:1, col:65> col:12 invalid parse_name 'int *(const char *, long, int)'
| |-ParmVarDecl 0x28414e67a38 <col:23, col:35> col:35 str 'const char *'
| |-ParmVarDecl 0x28414e67ab8 <col:40, col:45> col:45 chtype 'long'
| `-ParmVarDecl 0x28414e67b38 <col:53, col:57> col:57 multirdn 'int'
|-FunctionDecl 0x28414e67fd0 <line:493:1, line:494:52> line:493:5 invalid args_verify 'int (char ***, int *, int *, int **)'
| |-ParmVarDecl 0x28414e67d48 <col:17, col:25> col:25 pargs 'char ***'
| |-ParmVarDecl 0x28414e67dc8 <col:32, col:37> col:37 pargc 'int *'
| |-ParmVarDecl 0x28414e67e48 <line:494:17, col:22> col:22 badarg 'int *'
| `-ParmVarDecl 0x28414e67ed0 <col:30, col:50> col:50 invalid pm 'int **'
|-FunctionDecl 0x28414e68138 <line:495:1, col:40> col:6 invalid policies_print 'void (int *)'
| `-ParmVarDecl 0x28414e680a8 <col:21, col:37> col:37 invalid ctx 'int *'
|-FunctionDecl 0x28414e6a470 <line:496:1, col:56> col:5 invalid bio_to_mem 'int (unsigned char **, int, int *)'
| |-ParmVarDecl 0x28414e68228 <col:16, col:32> col:32 out 'unsigned char **'
| |-ParmVarDecl 0x28414e682a8 <col:37, col:41> col:41 maxlen 'int'
| `-ParmVarDecl 0x28414e68328 <col:49, col:54> col:54 invalid in 'int *'
|-FunctionDecl 0x28414e6a660 <line:497:1, col:58> col:5 invalid pkey_ctrl_string 'int (int *, const char *)'
| |-ParmVarDecl 0x28414e6a540 <col:22, col:36> col:36 invalid ctx 'int *'
| `-ParmVarDecl 0x28414e6a5c0 <col:41, col:53> col:53 value 'const char *'
|-FunctionDecl 0x28414e6a9b0 <line:498:1, line:499:62> line:498:5 invalid init_gen_str 'int (int **, const char *, int *, int)'
| |-ParmVarDecl 0x28414e6a730 <col:18, col:33> col:33 invalid pctx 'int **'
| |-ParmVarDecl 0x28414e6a7b0 <line:499:18, col:30> col:30 algname 'const char *'
| |-ParmVarDecl 0x28414e6a830 <col:39, col:47> col:47 invalid e 'int *'
| `-ParmVarDecl 0x28414e6a8b0 <col:50, col:54> col:54 do_param 'int'
|-FunctionDecl 0x28414e6ad60 <line:500:1, line:501:51> line:500:5 invalid do_X509_sign 'int (int *, int *, const int *, int (*)())'
| |-ParmVarDecl 0x28414e6aa88 <col:18, col:24> col:24 invalid x 'int *'
| |-ParmVarDecl 0x28414e6ab08 <col:27, col:37> col:37 invalid pkey 'int *'
| |-ParmVarDecl 0x28414e6ab88 <col:43, col:57> col:57 invalid md 'const int *'
| `-ParmVarDecl 0x28414e6ac18 <line:501:18, <invalid sloc>> col:18 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x28414e6b078 <line:502:1, line:503:55> line:502:5 invalid do_X509_REQ_sign 'int (int *, int *, const int *, int (*)())'
| |-ParmVarDecl 0x28414e6ae38 <col:22, col:32> col:32 invalid x 'int *'
| |-ParmVarDecl 0x28414e6aeb8 <col:35, col:45> col:45 invalid pkey 'int *'
| |-ParmVarDecl 0x28414e6af38 <col:51, col:65> col:65 invalid md 'const int *'
| `-ParmVarDecl 0x28414e6afc8 <line:503:22, <invalid sloc>> col:22 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x28414e6b390 <line:504:1, line:505:55> line:504:5 invalid do_X509_CRL_sign 'int (int *, int *, const int *, int (*)())'
| |-ParmVarDecl 0x28414e6b150 <col:22, col:32> col:32 invalid x 'int *'
| |-ParmVarDecl 0x28414e6b1d0 <col:35, col:45> col:45 invalid pkey 'int *'
| |-ParmVarDecl 0x28414e6b250 <col:51, col:65> col:65 invalid md 'const int *'
| `-ParmVarDecl 0x28414e6b2e0 <line:505:22, <invalid sloc>> col:22 invalid STACK_OF 'int (*)()':'int (*)()'
|-VarDecl 0x28414e6d498 <line:507:1, col:14> col:14 psk_key 'char *' extern
|-FunctionDecl 0x28414e6d750 <line:510:1, col:64> col:16 next_protos_parse 'unsigned char *(size_t *, const char *)'
| |-ParmVarDecl 0x28414e6d588 <col:34, col:42> col:42 outlen 'size_t *'
| `-ParmVarDecl 0x28414e6d608 <col:50, col:62> col:62 in 'const char *'
|-FunctionDecl 0x28414e6db38 <line:512:1, line:514:67> line:512:6 invalid print_cert_checks 'void (int *, int *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x28414e6d830 <col:24, col:29> col:29 invalid bio 'int *'
| |-ParmVarDecl 0x28414e6d8b0 <col:34, col:40> col:40 invalid x 'int *'
| |-ParmVarDecl 0x28414e6d930 <line:513:24, col:36> col:36 checkhost 'const char *'
| |-ParmVarDecl 0x28414e6d9b0 <line:514:24, col:36> col:36 checkemail 'const char *'
| `-ParmVarDecl 0x28414e6da30 <col:48, col:60> col:60 checkip 'const char *'
|-FunctionDecl 0x28414e6dca8 <line:516:1, col:45> col:6 invalid store_setup_crl_download 'void (int *)'
| `-ParmVarDecl 0x28414e6dc18 <col:31, col:43> col:43 invalid st 'int *'
|-FunctionDecl 0x28414e6de00 <line:551:1, col:27> col:5 app_isdir 'int (const char *)'
| `-ParmVarDecl 0x28414e6dd68 <col:15, col:26> col:27 'const char *'
|-FunctionDecl 0x28414e6e010 <line:552:1, col:38> col:5 app_access 'int (const char *, int)'
| |-ParmVarDecl 0x28414e6ded8 <col:16, col:27> col:28 'const char *'
| `-ParmVarDecl 0x28414e6df58 <col:30, col:34> col:34 flag 'int'
|-FunctionDecl 0x28414e6e178 <line:553:1, col:22> col:5 fileno_stdin 'int (void)'
|-FunctionDecl 0x28414e6e2d0 <line:554:1, col:23> col:5 fileno_stdout 'int (void)'
|-FunctionDecl 0x28414e6b520 <line:555:1, col:31> col:5 raw_read_stdin 'int (void *, int)'
| |-ParmVarDecl 0x28414e6e3a0 <col:20, col:25> col:26 'void *'
| `-ParmVarDecl 0x28414e6b440 <col:28> col:31 'int'
|-FunctionDecl 0x28414e6b760 <line:556:1, col:39> col:5 raw_write_stdout 'int (const void *, int)'
| |-ParmVarDecl 0x28414e6b600 <col:22, col:33> col:34 'const void *'
| `-ParmVarDecl 0x28414e6b680 <col:36> col:39 'int'
|-FunctionDecl 0x28414e6b9d0 <line:560:1, col:45> col:8 app_tminterval 'double (int, int)'
| |-ParmVarDecl 0x28414e6b840 <col:23, col:27> col:27 stop 'int'
| `-ParmVarDecl 0x28414e6b8c0 <col:33, col:37> col:37 usertime 'int'
|-RecordDecl 0x28414e6ba98 <line:562:9, line:567:1> line:562:16 struct verify_options_st definition
| |-FieldDecl 0x28414e6bb68 <line:563:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x28414e6bbd8 <line:564:5, col:9> col:9 quiet 'int'
| |-FieldDecl 0x28414e6bc48 <line:565:5, col:9> col:9 error 'int'
| `-FieldDecl 0x28414e6bcb8 <line:566:5, col:9> col:9 return_error 'int'
|-TypedefDecl 0x28414e6bd68 <line:562:1, line:567:3> col:3 referenced VERIFY_CB_ARGS 'struct verify_options_st':'struct verify_options_st'
| `-ElaboratedType 0x28414e6bd10 'struct verify_options_st' sugar
|   `-RecordType 0x28414e6bb30 'struct verify_options_st'
|     `-Record 0x28414e6ba98 'verify_options_st'
|-VarDecl 0x28414e6be10 <line:569:1, col:23> col:23 verify_args 'VERIFY_CB_ARGS':'struct verify_options_st' extern
|-VarDecl 0x28414e6bf70 <.//openssl//file_jk/before\apps\passwd.c:31:1, line:41:1> line:31:28 used cov_2char 'const unsigned char [64]' static cinit
| `-InitListExpr 0x28414e66bf8 <col:44, line:41:1> 'const unsigned char [64]'
|   |-ImplicitCastExpr 0x28414e66e38 <line:33:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6bfd8 <col:5> 'int' 46
|   |-ImplicitCastExpr 0x28414e66e50 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6c000 <col:11> 'int' 47
|   |-ImplicitCastExpr 0x28414e66e68 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6c028 <col:17> 'int' 48
|   |-ImplicitCastExpr 0x28414e66e80 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6c050 <col:23> 'int' 49
|   |-ImplicitCastExpr 0x28414e66e98 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6c078 <col:29> 'int' 50
|   |-ImplicitCastExpr 0x28414e66eb0 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6c0a0 <col:35> 'int' 51
|   |-ImplicitCastExpr 0x28414e66ec8 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6c0c8 <col:41> 'int' 52
|   |-ImplicitCastExpr 0x28414e66ee0 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6c0f0 <col:47> 'int' 53
|   |-ImplicitCastExpr 0x28414e66ef8 <line:34:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6c118 <col:5> 'int' 54
|   |-ImplicitCastExpr 0x28414e66f10 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6c140 <col:11> 'int' 55
|   |-ImplicitCastExpr 0x28414e66f28 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6c168 <col:17> 'int' 56
|   |-ImplicitCastExpr 0x28414e66f40 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6c190 <col:23> 'int' 57
|   |-ImplicitCastExpr 0x28414e66f58 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6c1b8 <col:29> 'int' 65
|   |-ImplicitCastExpr 0x28414e66f70 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6c1e0 <col:35> 'int' 66
|   |-ImplicitCastExpr 0x28414e66f88 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6c208 <col:41> 'int' 67
|   |-ImplicitCastExpr 0x28414e66fa0 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6c230 <col:47> 'int' 68
|   |-ImplicitCastExpr 0x28414e66fb8 <line:35:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6c258 <col:5> 'int' 69
|   |-ImplicitCastExpr 0x28414e66fd0 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6c280 <col:11> 'int' 70
|   |-ImplicitCastExpr 0x28414e66fe8 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6c2a8 <col:17> 'int' 71
|   |-ImplicitCastExpr 0x28414e67000 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6c2d0 <col:23> 'int' 72
|   |-ImplicitCastExpr 0x28414e67018 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6c2f8 <col:29> 'int' 73
|   |-ImplicitCastExpr 0x28414e67030 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6c320 <col:35> 'int' 74
|   |-ImplicitCastExpr 0x28414e67048 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6c348 <col:41> 'int' 75
|   |-ImplicitCastExpr 0x28414e67060 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6c370 <col:47> 'int' 76
|   |-ImplicitCastExpr 0x28414e67078 <line:36:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6c398 <col:5> 'int' 77
|   |-ImplicitCastExpr 0x28414e67090 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6c3c0 <col:11> 'int' 78
|   |-ImplicitCastExpr 0x28414e670a8 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6c3e8 <col:17> 'int' 79
|   |-ImplicitCastExpr 0x28414e670c0 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e6c410 <col:23> 'int' 80
|   |-ImplicitCastExpr 0x28414e670d8 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e663f0 <col:29> 'int' 81
|   |-ImplicitCastExpr 0x28414e670f0 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e66418 <col:35> 'int' 82
|   |-ImplicitCastExpr 0x28414e67108 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e66440 <col:41> 'int' 83
|   |-ImplicitCastExpr 0x28414e67120 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e66468 <col:47> 'int' 84
|   |-ImplicitCastExpr 0x28414e67138 <line:37:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e66490 <col:5> 'int' 85
|   |-ImplicitCastExpr 0x28414e67150 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e664b8 <col:11> 'int' 86
|   |-ImplicitCastExpr 0x28414e67168 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e664e0 <col:17> 'int' 87
|   |-ImplicitCastExpr 0x28414e67180 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e66508 <col:23> 'int' 88
|   |-ImplicitCastExpr 0x28414e67198 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e66530 <col:29> 'int' 89
|   |-ImplicitCastExpr 0x28414e671b0 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e66558 <col:35> 'int' 90
|   |-ImplicitCastExpr 0x28414e671c8 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e66580 <col:41> 'int' 97
|   |-ImplicitCastExpr 0x28414e671e0 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e665a8 <col:47> 'int' 98
|   |-ImplicitCastExpr 0x28414e671f8 <line:38:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e665d0 <col:5> 'int' 99
|   |-ImplicitCastExpr 0x28414e67210 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e665f8 <col:11> 'int' 100
|   |-ImplicitCastExpr 0x28414e67228 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e66620 <col:17> 'int' 101
|   |-ImplicitCastExpr 0x28414e67240 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e66648 <col:23> 'int' 102
|   |-ImplicitCastExpr 0x28414e67258 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e66670 <col:29> 'int' 103
|   |-ImplicitCastExpr 0x28414e67270 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e66698 <col:35> 'int' 104
|   |-ImplicitCastExpr 0x28414e67288 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e666c0 <col:41> 'int' 105
|   |-ImplicitCastExpr 0x28414e672a0 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e666e8 <col:47> 'int' 106
|   |-ImplicitCastExpr 0x28414e672b8 <line:39:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e66710 <col:5> 'int' 107
|   |-ImplicitCastExpr 0x28414e672d0 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e66738 <col:11> 'int' 108
|   |-ImplicitCastExpr 0x28414e672e8 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e66760 <col:17> 'int' 109
|   |-ImplicitCastExpr 0x28414e67300 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e66788 <col:23> 'int' 110
|   |-ImplicitCastExpr 0x28414e67318 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e667b0 <col:29> 'int' 111
|   |-ImplicitCastExpr 0x28414e67330 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e667d8 <col:35> 'int' 112
|   |-ImplicitCastExpr 0x28414e67348 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e66800 <col:41> 'int' 113
|   |-ImplicitCastExpr 0x28414e67360 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e66828 <col:47> 'int' 114
|   |-ImplicitCastExpr 0x28414e67378 <line:40:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e66850 <col:5> 'int' 115
|   |-ImplicitCastExpr 0x28414e67390 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e66878 <col:11> 'int' 116
|   |-ImplicitCastExpr 0x28414e673a8 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e668a0 <col:17> 'int' 117
|   |-ImplicitCastExpr 0x28414e673c0 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e668c8 <col:23> 'int' 118
|   |-ImplicitCastExpr 0x28414e673d8 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e668f0 <col:29> 'int' 119
|   |-ImplicitCastExpr 0x28414e724b0 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e66918 <col:35> 'int' 120
|   |-ImplicitCastExpr 0x28414e724c8 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x28414e66940 <col:41> 'int' 121
|   `-ImplicitCastExpr 0x28414e724e0 <col:47> 'unsigned char' <IntegralCast>
|     `-IntegerLiteral 0x28414e66968 <col:47> 'int' 122
|-FunctionDecl 0x28414e72c90 <line:43:1, line:46:33> line:43:12 invalid do_passwd 'int (int, char **, char **, char *, int *, int, int, int, size_t, int, int, int)' static
| |-ParmVarDecl 0x28414e72510 <col:22, col:26> col:26 passed_salt 'int'
| |-ParmVarDecl 0x28414e72590 <col:39, col:46> col:46 salt_p 'char **'
| |-ParmVarDecl 0x28414e72610 <col:54, col:61> col:61 salt_malloc_p 'char **'
| |-ParmVarDecl 0x28414e72690 <line:44:22, col:28> col:28 passwd 'char *'
| |-ParmVarDecl 0x28414e72710 <col:36, col:41> col:41 invalid out 'int *'
| |-ParmVarDecl 0x28414e72790 <col:46, col:50> col:50 quiet 'int'
| |-ParmVarDecl 0x28414e72810 <col:57, col:61> col:61 table 'int'
| |-ParmVarDecl 0x28414e72890 <line:45:22, col:26> col:26 reverse 'int'
| |-ParmVarDecl 0x28414e72908 <col:35, col:42> col:42 pw_maxlen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28414e72988 <col:53, col:57> col:57 usecrypt 'int'
| |-ParmVarDecl 0x28414e72a08 <col:67, col:71> col:71 use1 'int'
| `-ParmVarDecl 0x28414e72a88 <line:46:22, col:26> col:26 useapr1 'int'
|-EnumDecl 0x28414e72d90 <line:48:9, line:53:1> line:48:14 OPTION_choice
| |-EnumConstantDecl 0x28414e72ec8 <line:49:5, col:16> col:5 referenced OPT_ERR 'int'
| | `-ConstantExpr 0x28414e72eb0 <col:15, col:16> 'int'
| |   `-UnaryOperator 0x28414e72e98 <col:15, col:16> 'int' prefix '-'
| |     `-IntegerLiteral 0x28414e72e70 <col:16> 'int' 1
| |-EnumConstantDecl 0x28414e72f60 <col:19, col:29> col:19 referenced OPT_EOF 'int'
| | `-ConstantExpr 0x28414e72f48 <col:29> 'int'
| |   `-IntegerLiteral 0x28414e72f20 <col:29> 'int' 0
| |-EnumConstantDecl 0x28414e72fb8 <col:32> col:32 referenced OPT_HELP 'int'
| |-EnumConstantDecl 0x28414e73010 <line:50:5> col:5 referenced OPT_IN 'int'
| |-EnumConstantDecl 0x28414e73068 <line:51:5> col:5 referenced OPT_NOVERIFY 'int'
| |-EnumConstantDecl 0x28414e730c0 <col:19> col:19 referenced OPT_QUIET 'int'
| |-EnumConstantDecl 0x28414e73118 <col:30> col:30 referenced OPT_TABLE 'int'
| |-EnumConstantDecl 0x28414e73170 <col:41> col:41 referenced OPT_REVERSE 'int'
| |-EnumConstantDecl 0x28414e731c8 <col:54> col:54 referenced OPT_APR1 'int'
| |-EnumConstantDecl 0x28414e73220 <line:52:5> col:5 referenced OPT_1 'int'
| |-EnumConstantDecl 0x28414e73278 <col:12> col:12 referenced OPT_CRYPT 'int'
| |-EnumConstantDecl 0x28414e732d0 <col:23> col:23 referenced OPT_SALT 'int'
| `-EnumConstantDecl 0x28414e73328 <col:33> col:33 referenced OPT_STDIN 'int'
|-TypedefDecl 0x28414e733d8 <line:48:1, line:53:3> col:3 referenced OPTION_CHOICE 'enum OPTION_choice':'enum OPTION_choice'
| `-ElaboratedType 0x28414e73380 'enum OPTION_choice' sugar
|   `-EnumType 0x28414e72e50 'enum OPTION_choice'
|     `-Enum 0x28414e72d90 'OPTION_choice'
|-VarDecl 0x28414e6e490 <line:55:1, line:73:1> line:55:9 used passwd_options 'OPTIONS [12]' cinit
| `-InitListExpr 0x28414e6f558 <col:28, line:73:1> 'OPTIONS [12]'
|   |-InitListExpr 0x28414e6f5a8 <line:56:5, col:51> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x28414e6f620 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x28414e6f608 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x28414e6e538 <col:6> 'char [5]' lvalue "help"
|   | |-DeclRefExpr 0x28414e6e558 <col:14> 'int' EnumConstant 0x28414e72fb8 'OPT_HELP' 'int'
|   | |-CharacterLiteral 0x28414e6e578 <col:24> 'int' 45
|   | `-ImplicitCastExpr 0x28414e6f650 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x28414e6f638 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x28414e6e5c8 <col:29> 'char [21]' lvalue "Display this summary"
|   |-InitListExpr 0x28414e6f680 <line:57:5, col:51> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x28414e6f6f8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x28414e6f6e0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x28414e6e698 <col:6> 'char [3]' lvalue "in"
|   | |-DeclRefExpr 0x28414e6e6b8 <col:12> 'int' EnumConstant 0x28414e73010 'OPT_IN' 'int'
|   | |-CharacterLiteral 0x28414e6e6d8 <col:20> 'int' 60
|   | `-ImplicitCastExpr 0x28414e6f728 <col:25> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x28414e6f710 <col:25> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x28414e6e728 <col:25> 'char [25]' lvalue "Read passwords from file"
|   |-InitListExpr 0x28414e6f760 <line:58:5, line:59:56> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x28414e6f7d8 <line:58:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x28414e6f7c0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x28414e6e7f8 <col:6> 'char [9]' lvalue "noverify"
|   | |-DeclRefExpr 0x28414e6e818 <col:18> 'int' EnumConstant 0x28414e73068 'OPT_NOVERIFY' 'int'
|   | |-CharacterLiteral 0x28414e6e838 <col:32> 'int' 45
|   | `-ImplicitCastExpr 0x28414e6f808 <line:59:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x28414e6f7f0 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x28414e6e888 <col:6> 'char [49]' lvalue "Never verify when reading password from terminal"
|   |-InitListExpr 0x28414e6f850 <line:60:5, col:44> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x28414e6f8c8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x28414e6f8b0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x28414e6e968 <col:6> 'char [6]' lvalue "quiet"
|   | |-DeclRefExpr 0x28414e6e988 <col:15> 'int' EnumConstant 0x28414e730c0 'OPT_QUIET' 'int'
|   | |-CharacterLiteral 0x28414e6e9a8 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x28414e6f8f8 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x28414e6f8e0 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x28414e6e9f8 <col:31> 'char [12]' lvalue "No warnings"
|   |-InitListExpr 0x28414e6f920 <line:61:5, col:55> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x28414e6f998 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x28414e6f980 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x28414e6ea80 <col:6> 'char [6]' lvalue "table"
|   | |-DeclRefExpr 0x28414e6eaa0 <col:15> 'int' EnumConstant 0x28414e73118 'OPT_TABLE' 'int'
|   | |-CharacterLiteral 0x28414e6eac0 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x28414e6f9c8 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x28414e6f9b0 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x28414e6eb18 <col:31> 'char [23]' lvalue "Format output as table"
|   |-InitListExpr 0x28414e6fa30 <line:62:5, col:57> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x28414e6faa8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x28414e6fa90 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x28414e6ebe8 <col:6> 'char [8]' lvalue "reverse"
|   | |-DeclRefExpr 0x28414e6ec08 <col:17> 'int' EnumConstant 0x28414e73170 'OPT_REVERSE' 'int'
|   | |-CharacterLiteral 0x28414e6ec28 <col:30> 'int' 45
|   | `-ImplicitCastExpr 0x28414e6fad8 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x28414e6fac0 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x28414e6ec40 <col:35> 'char [21]' lvalue "Switch table columns"
|   |-InitListExpr 0x28414e6fb00 <line:63:5, col:48> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x28414e6fb78 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x28414e6fb60 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x28414e6ecd0 <col:6> 'char [5]' lvalue "salt"
|   | |-DeclRefExpr 0x28414e6ecf0 <col:14> 'int' EnumConstant 0x28414e732d0 'OPT_SALT' 'int'
|   | |-CharacterLiteral 0x28414e6ed10 <col:24> 'int' 115
|   | `-ImplicitCastExpr 0x28414e6fba8 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x28414e6fb90 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x28414e6ed68 <col:29> 'char [18]' lvalue "Use provided salt"
|   |-InitListExpr 0x28414e6fbd0 <line:64:5, col:58> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x28414e6fc48 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x28414e6fc30 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x28414e6edf8 <col:6> 'char [6]' lvalue "stdin"
|   | |-DeclRefExpr 0x28414e6ee18 <col:15> 'int' EnumConstant 0x28414e73328 'OPT_STDIN' 'int'
|   | |-CharacterLiteral 0x28414e6ee38 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x28414e6fc78 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x28414e6fc60 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x28414e6ee88 <col:31> 'char [26]' lvalue "Read passwords from stdin"
|   |-InitListExpr 0x28414e6fca0 <line:66:5, col:75> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x28414e6fd18 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x28414e6fd00 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x28414e6ef20 <col:6> 'char [5]' lvalue "apr1"
|   | |-DeclRefExpr 0x28414e6ef40 <col:14> 'int' EnumConstant 0x28414e731c8 'OPT_APR1' 'int'
|   | |-CharacterLiteral 0x28414e6ef60 <col:24> 'int' 45
|   | `-ImplicitCastExpr 0x28414e6fd48 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x28414e6fd30 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x28414e6efb8 <col:29> 'char [45]' lvalue "MD5-based password algorithm, Apache variant"
|   |-InitListExpr 0x28414e6fdf0 <line:67:5, col:53> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x28414e6fe68 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x28414e6fe50 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x28414e6f098 <col:6> 'char [2]' lvalue "1"
|   | |-DeclRefExpr 0x28414e6f0b8 <col:11> 'int' EnumConstant 0x28414e73220 'OPT_1' 'int'
|   | |-CharacterLiteral 0x28414e6f0d8 <col:18> 'int' 45
|   | `-ImplicitCastExpr 0x28414e6fe98 <col:23> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x28414e6fe80 <col:23> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x28414e6f128 <col:23> 'char [29]' lvalue "MD5-based password algorithm"
|   |-InitListExpr 0x28414e6fec0 <line:70:5, col:75> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x28414e6ff38 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x28414e6ff20 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x28414e6f1c0 <col:6> 'char [6]' lvalue "crypt"
|   | |-DeclRefExpr 0x28414e6f1e0 <col:15> 'int' EnumConstant 0x28414e73278 'OPT_CRYPT' 'int'
|   | |-CharacterLiteral 0x28414e6f200 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x28414e6ff68 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x28414e6ff50 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x28414e6f258 <col:31> 'char [43]' lvalue "Standard Unix password algorithm (default)"
|   `-InitListExpr 0x28414e6ff90 <line:72:5, col:10> 'OPTIONS':'struct options_st'
|     |-ImplicitCastExpr 0x28414e6fff0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <NullToPointer>
|     | `-ParenExpr 0x28414e6f368 <col:17, col:27> 'void *'
|     |   `-CStyleCastExpr 0x28414e6f340 <col:18, col:26> 'void *' <NullToPointer>
|     |     `-IntegerLiteral 0x28414e6f300 <col:26> 'int' 0
|     |-ImplicitValueInitExpr 0x28414e70008 <<invalid sloc>> 'int'
|     |-ImplicitValueInitExpr 0x28414e70018 <<invalid sloc>> 'int'
|     `-ImplicitValueInitExpr 0x28414e70028 <<invalid sloc>> 'const char *'
|-FunctionDecl 0x28414e70260 <.//openssl//file_jk/before\apps\passwd.c:75:1, line:272:1> line:75:5 passwd_main 'int (int, char **)'
| |-ParmVarDecl 0x28414e700d0 <col:17, col:21> col:21 used argc 'int'
| |-ParmVarDecl 0x28414e70150 <col:27, col:34> col:34 used argv 'char **'
| `-CompoundStmt 0x28414f0ebb0 <line:76:1, line:272:1>
|   |-DeclStmt 0x28414e70878 <line:78:5, col:72>
|   | |-VarDecl 0x28414e703c8 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\apps\passwd.c:78:11 used infile 'char *' cinit
|   | | `-ImplicitCastExpr 0x28414e704d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x28414e704b8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x28414e70490 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x28414e70430 <col:26> 'int' 0
|   | |-VarDecl 0x28414e70508 <.//openssl//file_jk/before\apps\passwd.c:78:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\apps\passwd.c:78:27 used salt 'char *' cinit
|   | | `-ImplicitCastExpr 0x28414e705f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x28414e705d8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x28414e705b0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x28414e70570 <col:26> 'int' 0
|   | |-VarDecl 0x28414e70628 <.//openssl//file_jk/before\apps\passwd.c:78:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\apps\passwd.c:78:41 used passwd 'char *' cinit
|   | | `-ImplicitCastExpr 0x28414e70718 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x28414e706f8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x28414e706d0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x28414e70690 <col:26> 'int' 0
|   | `-VarDecl 0x28414e70748 <.//openssl//file_jk/before\apps\passwd.c:78:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\apps\passwd.c:78:58 used passwds 'char **' cinit
|   |   `-ImplicitCastExpr 0x28414e70838 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char **' <NullToPointer>
|   |     `-ParenExpr 0x28414e70818 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x28414e707f0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x28414e707b0 <col:26> 'int' 0
|   |-DeclStmt 0x28414e70b70 <.//openssl//file_jk/before\apps\passwd.c:79:5, col:59>
|   | |-VarDecl 0x28414e708a8 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\apps\passwd.c:79:11 used salt_malloc 'char *' cinit
|   | | `-ImplicitCastExpr 0x28414e70998 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x28414e70978 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x28414e70950 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x28414e70910 <col:26> 'int' 0
|   | |-VarDecl 0x28414e709c8 <.//openssl//file_jk/before\apps\passwd.c:79:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\apps\passwd.c:79:32 used passwd_malloc 'char *' cinit
|   | | `-ImplicitCastExpr 0x28414e70ab8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x28414e70a98 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x28414e70a70 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x28414e70a30 <col:26> 'int' 0
|   | `-VarDecl 0x28414e70ae8 <.//openssl//file_jk/before\apps\passwd.c:79:5, col:55> col:55 used prog 'char *'
|   |-DeclStmt 0x28414e70c28 <line:80:5, col:20>
|   | `-VarDecl 0x28414e70bc0 <col:5, col:19> col:19 used o 'OPTION_CHOICE':'enum OPTION_choice'
|   |-DeclStmt 0x28414e70da8 <line:81:5, col:44>
|   | |-VarDecl 0x28414e70c58 <col:5, col:20> col:9 used in_stdin 'int' cinit
|   | | `-IntegerLiteral 0x28414e70cc0 <col:20> 'int' 0
|   | `-VarDecl 0x28414e70d00 <col:5, col:43> col:23 used pw_source_defined 'int' cinit
|   |   `-IntegerLiteral 0x28414e70d68 <col:43> 'int' 0
|   |-DeclStmt 0x28414e70e68 <line:83:5, col:24>
|   | `-VarDecl 0x28414e70dd8 <col:5, col:23> col:9 used in_noverify 'int' cinit
|   |   `-IntegerLiteral 0x28414e70e40 <col:23> 'int' 0
|   |-DeclStmt 0x28414e71148 <line:85:5, col:59>
|   | |-VarDecl 0x28414e70e98 <col:5, col:23> col:9 used passed_salt 'int' cinit
|   | | `-IntegerLiteral 0x28414e70f00 <col:23> 'int' 0
|   | |-VarDecl 0x28414e70f40 <col:5, col:34> col:26 used quiet 'int' cinit
|   | | `-IntegerLiteral 0x28414e70fa8 <col:34> 'int' 0
|   | |-VarDecl 0x28414e70fe8 <col:5, col:45> col:37 used table 'int' cinit
|   | | `-IntegerLiteral 0x28414e71050 <col:45> 'int' 0
|   | `-VarDecl 0x28414e71090 <col:5, col:58> col:48 used reverse 'int' cinit
|   |   `-IntegerLiteral 0x28414e710f8 <col:58> 'int' 0
|   |-DeclStmt 0x28414e71428 <line:86:5, col:53>
|   | |-VarDecl 0x28414e71178 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x28414e711e0 <col:15> 'int' 1
|   | |-VarDecl 0x28414e71220 <col:5, col:29> col:18 used usecrypt 'int' cinit
|   | | `-IntegerLiteral 0x28414e71288 <col:29> 'int' 0
|   | |-VarDecl 0x28414e712c8 <col:5, col:39> col:32 used use1 'int' cinit
|   | | `-IntegerLiteral 0x28414e71330 <col:39> 'int' 0
|   | `-VarDecl 0x28414e71370 <col:5, col:52> col:42 used useapr1 'int' cinit
|   |   `-IntegerLiteral 0x28414e713d8 <col:52> 'int' 0
|   |-DeclStmt 0x28414e71618 <line:87:5, col:51>
|   | |-VarDecl 0x28414e714a0 <col:5, col:33> col:12 used passwd_malloc_size 'size_t':'unsigned long long' cinit
|   | | `-ImplicitCastExpr 0x28414e71530 <col:33> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x28414e71508 <col:33> 'int' 0
|   | `-VarDecl 0x28414e71558 <col:5, col:48> col:36 used pw_maxlen 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x28414e715e8 <col:48> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x28414e715c0 <col:48> 'int' 256
|   |-BinaryOperator 0x28414e71858 <line:89:5, col:47> 'char *' '='
|   | |-DeclRefExpr 0x28414e71630 <col:5> 'char *' lvalue Var 0x28414e70ae8 'prog' 'char *'
|   | `-CallExpr 0x28414e71760 <col:12, col:47> 'char *'
|   |   |-ImplicitCastExpr 0x28414e71748 <col:12> 'char *(*)(int, char **, const OPTIONS *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x28414e71668 <col:12> 'char *(int, char **, const OPTIONS *)' Function 0x28414e569f0 'opt_init' 'char *(int, char **, const OPTIONS *)'
|   |   |-ImplicitCastExpr 0x28414e71798 <col:21> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x28414e71688 <col:21> 'int' lvalue ParmVar 0x28414e700d0 'argc' 'int'
|   |   |-ImplicitCastExpr 0x28414e717b0 <col:27> 'char **' <LValueToRValue>
|   |   | `-DeclRefExpr 0x28414e716a8 <col:27> 'char **' lvalue ParmVar 0x28414e70150 'argv' 'char **'
|   |   `-ImplicitCastExpr 0x28414e71840 <col:33> 'const OPTIONS *' <NoOp>
|   |     `-ImplicitCastExpr 0x28414e71828 <col:33> 'OPTIONS *' <ArrayToPointerDecay>
|   |       `-DeclRefExpr 0x28414e716c8 <col:33> 'OPTIONS [12]' lvalue Var 0x28414e6e490 'passwd_options' 'OPTIONS [12]'
|   |-WhileStmt 0x28414f10818 <line:90:5, line:141:5>
|   | |-BinaryOperator 0x28414e719c0 <line:90:12, col:32> 'int' '!='
|   | | |-ImplicitCastExpr 0x28414e719a8 <col:12, col:27> 'int' <IntegralCast>
|   | | | `-ParenExpr 0x28414e71968 <col:12, col:27> 'OPTION_CHOICE':'enum OPTION_choice'
|   | | |   `-BinaryOperator 0x28414e71948 <col:13, col:26> 'OPTION_CHOICE':'enum OPTION_choice' '='
|   | | |     |-DeclRefExpr 0x28414e71878 <col:13> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x28414e70bc0 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   | | |     `-ImplicitCastExpr 0x28414e71930 <col:17, col:26> 'OPTION_CHOICE':'enum OPTION_choice' <IntegralCast>
|   | | |       `-CallExpr 0x28414e71910 <col:17, col:26> 'int'
|   | | |         `-ImplicitCastExpr 0x28414e718f8 <col:17> 'int (*)(void)' <FunctionToPointerDecay>
|   | | |           `-DeclRefExpr 0x28414e718b0 <col:17> 'int (void)' Function 0x28414e56b90 'opt_next' 'int (void)'
|   | | `-DeclRefExpr 0x28414e71988 <col:32> 'int' EnumConstant 0x28414e72f60 'OPT_EOF' 'int'
|   | `-CompoundStmt 0x28414f10800 <col:41, line:141:5>
|   |   `-SwitchStmt 0x28414e71a30 <line:91:9, line:140:9>
|   |     |-ImplicitCastExpr 0x28414e71a18 <line:91:17> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x28414e71a00 <col:17> 'OPTION_CHOICE':'enum OPTION_choice' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x28414e719e0 <col:17> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x28414e70bc0 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   |     `-CompoundStmt 0x28414f10700 <col:20, line:140:9>
|   |       |-CaseStmt 0x28414e71a88 <line:92:9, line:94:9>
|   |       | |-ConstantExpr 0x28414e71a70 <line:92:14> 'int'
|   |       | | `-DeclRefExpr 0x28414e71a50 <col:14> 'int' EnumConstant 0x28414e72f60 'OPT_EOF' 'int'
|   |       | `-CaseStmt 0x28414e71ae8 <line:93:9, line:94:9>
|   |       |   |-ConstantExpr 0x28414e71ad0 <line:93:14> 'int'
|   |       |   | `-DeclRefExpr 0x28414e71ab0 <col:14> 'int' EnumConstant 0x28414e72ec8 'OPT_ERR' 'int'
|   |       |   `-LabelStmt 0x28414e71d08 <line:94:2, col:9> 'opthelp'
|   |       |     `-NullStmt 0x28414e71cb0 <col:9>
|   |       |-GotoStmt 0x28414e71d70 <line:96:13, col:18> 'end' 0x28414e71d20
|   |       |-CaseStmt 0x28414e71dc0 <line:97:9, line:98:36>
|   |       | |-ConstantExpr 0x28414e71da8 <line:97:14> 'int'
|   |       | | `-DeclRefExpr 0x28414e71d88 <col:14> 'int' EnumConstant 0x28414e72fb8 'OPT_HELP' 'int'
|   |       | `-CallExpr 0x28414e71ea0 <line:98:13, col:36> 'void'
|   |       |   |-ImplicitCastExpr 0x28414e71e88 <col:13> 'void (*)(const OPTIONS *)' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x28414e71de8 <col:13> 'void (const OPTIONS *)' Function 0x28414e5cb78 'opt_help' 'void (const OPTIONS *)'
|   |       |   `-ImplicitCastExpr 0x28414e71ee0 <col:22> 'const OPTIONS *' <NoOp>
|   |       |     `-ImplicitCastExpr 0x28414e71ec8 <col:22> 'OPTIONS *' <ArrayToPointerDecay>
|   |       |       `-DeclRefExpr 0x28414e71e08 <col:22> 'OPTIONS [12]' lvalue Var 0x28414e6e490 'passwd_options' 'OPTIONS [12]'
|   |       |-BinaryOperator 0x28414e71f58 <line:99:13, col:19> 'int' '='
|   |       | |-DeclRefExpr 0x28414e71ef8 <col:13> 'int' lvalue Var 0x28414e71178 'ret' 'int'
|   |       | `-IntegerLiteral 0x28414e71f30 <col:19> 'int' 0
|   |       |-GotoStmt 0x28414e71f78 <line:100:13, col:18> 'end' 0x28414e71d20
|   |       |-CaseStmt 0x28414e71fc8 <line:101:9, line:103:22>
|   |       | |-ConstantExpr 0x28414e71fb0 <line:101:14> 'int'
|   |       | | `-DeclRefExpr 0x28414e71f90 <col:14> 'int' EnumConstant 0x28414e73010 'OPT_IN' 'int'
|   |       | `-IfStmt 0x28414e72058 <line:102:13, line:103:22>
|   |       |   |-ImplicitCastExpr 0x28414e72028 <line:102:17> 'int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x28414e71ff0 <col:17> 'int' lvalue Var 0x28414e70d00 'pw_source_defined' 'int'
|   |       |   `-GotoStmt 0x28414e72040 <line:103:17, col:22> 'opthelp' 0x28414e71cb8
|   |       |-BinaryOperator 0x28414e72130 <line:104:13, col:30> 'char *' '='
|   |       | |-DeclRefExpr 0x28414e72070 <col:13> 'char *' lvalue Var 0x28414e703c8 'infile' 'char *'
|   |       | `-CallExpr 0x28414e72110 <col:22, col:30> 'char *'
|   |       |   `-ImplicitCastExpr 0x28414e720f8 <col:22> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |     `-DeclRefExpr 0x28414e720a8 <col:22> 'char *(void)' Function 0x28414e5c070 'opt_arg' 'char *(void)'
|   |       |-BinaryOperator 0x28414e72198 <line:105:13, col:33> 'int' '='
|   |       | |-DeclRefExpr 0x28414e72150 <col:13> 'int' lvalue Var 0x28414e70d00 'pw_source_defined' 'int'
|   |       | `-IntegerLiteral 0x28414e72170 <col:33> 'int' 1
|   |       |-BreakStmt 0x28414e721b8 <line:106:13>
|   |       |-CaseStmt 0x28414e721f8 <line:107:9, line:109:27>
|   |       | |-ConstantExpr 0x28414e721e0 <line:107:14> 'int'
|   |       | | `-DeclRefExpr 0x28414e721c0 <col:14> 'int' EnumConstant 0x28414e73068 'OPT_NOVERIFY' 'int'
|   |       | `-BinaryOperator 0x28414e72280 <line:109:13, col:27> 'int' '='
|   |       |   |-DeclRefExpr 0x28414e72220 <col:13> 'int' lvalue Var 0x28414e70dd8 'in_noverify' 'int'
|   |       |   `-IntegerLiteral 0x28414e72258 <col:27> 'int' 1
|   |       |-BreakStmt 0x28414e722a0 <line:111:13>
|   |       |-CaseStmt 0x28414e722e0 <line:112:9, line:113:21>
|   |       | |-ConstantExpr 0x28414e722c8 <line:112:14> 'int'
|   |       | | `-DeclRefExpr 0x28414e722a8 <col:14> 'int' EnumConstant 0x28414e730c0 'OPT_QUIET' 'int'
|   |       | `-BinaryOperator 0x28414e72368 <line:113:13, col:21> 'int' '='
|   |       |   |-DeclRefExpr 0x28414e72308 <col:13> 'int' lvalue Var 0x28414e70f40 'quiet' 'int'
|   |       |   `-IntegerLiteral 0x28414e72340 <col:21> 'int' 1
|   |       |-BreakStmt 0x28414e72388 <line:114:13>
|   |       |-CaseStmt 0x28414e723c8 <line:115:9, line:116:21>
|   |       | |-ConstantExpr 0x28414e723b0 <line:115:14> 'int'
|   |       | | `-DeclRefExpr 0x28414e72390 <col:14> 'int' EnumConstant 0x28414e73118 'OPT_TABLE' 'int'
|   |       | `-BinaryOperator 0x28414e72450 <line:116:13, col:21> 'int' '='
|   |       |   |-DeclRefExpr 0x28414e723f0 <col:13> 'int' lvalue Var 0x28414e70fe8 'table' 'int'
|   |       |   `-IntegerLiteral 0x28414e72428 <col:21> 'int' 1
|   |       |-BreakStmt 0x28414e72470 <line:117:13>
|   |       |-CaseStmt 0x28414f10048 <line:118:9, line:119:23>
|   |       | |-ConstantExpr 0x28414f10030 <line:118:14> 'int'
|   |       | | `-DeclRefExpr 0x28414e72478 <col:14> 'int' EnumConstant 0x28414e73170 'OPT_REVERSE' 'int'
|   |       | `-BinaryOperator 0x28414f100d0 <line:119:13, col:23> 'int' '='
|   |       |   |-DeclRefExpr 0x28414f10070 <col:13> 'int' lvalue Var 0x28414e71090 'reverse' 'int'
|   |       |   `-IntegerLiteral 0x28414f100a8 <col:23> 'int' 1
|   |       |-BreakStmt 0x28414f100f0 <line:120:13>
|   |       |-CaseStmt 0x28414f10130 <line:121:9, line:122:20>
|   |       | |-ConstantExpr 0x28414f10118 <line:121:14> 'int'
|   |       | | `-DeclRefExpr 0x28414f100f8 <col:14> 'int' EnumConstant 0x28414e73220 'OPT_1' 'int'
|   |       | `-BinaryOperator 0x28414f101b8 <line:122:13, col:20> 'int' '='
|   |       |   |-DeclRefExpr 0x28414f10158 <col:13> 'int' lvalue Var 0x28414e712c8 'use1' 'int'
|   |       |   `-IntegerLiteral 0x28414f10190 <col:20> 'int' 1
|   |       |-BreakStmt 0x28414f101d8 <line:123:13>
|   |       |-CaseStmt 0x28414f10218 <line:124:9, line:125:23>
|   |       | |-ConstantExpr 0x28414f10200 <line:124:14> 'int'
|   |       | | `-DeclRefExpr 0x28414f101e0 <col:14> 'int' EnumConstant 0x28414e731c8 'OPT_APR1' 'int'
|   |       | `-BinaryOperator 0x28414f102a0 <line:125:13, col:23> 'int' '='
|   |       |   |-DeclRefExpr 0x28414f10240 <col:13> 'int' lvalue Var 0x28414e71370 'useapr1' 'int'
|   |       |   `-IntegerLiteral 0x28414f10278 <col:23> 'int' 1
|   |       |-BreakStmt 0x28414f102c0 <line:126:13>
|   |       |-CaseStmt 0x28414f10300 <line:127:9, line:128:24>
|   |       | |-ConstantExpr 0x28414f102e8 <line:127:14> 'int'
|   |       | | `-DeclRefExpr 0x28414f102c8 <col:14> 'int' EnumConstant 0x28414e73278 'OPT_CRYPT' 'int'
|   |       | `-BinaryOperator 0x28414f10388 <line:128:13, col:24> 'int' '='
|   |       |   |-DeclRefExpr 0x28414f10328 <col:13> 'int' lvalue Var 0x28414e71220 'usecrypt' 'int'
|   |       |   `-IntegerLiteral 0x28414f10360 <col:24> 'int' 1
|   |       |-BreakStmt 0x28414f103a8 <line:129:13>
|   |       |-CaseStmt 0x28414f103e8 <line:130:9, line:131:27>
|   |       | |-ConstantExpr 0x28414f103d0 <line:130:14> 'int'
|   |       | | `-DeclRefExpr 0x28414f103b0 <col:14> 'int' EnumConstant 0x28414e732d0 'OPT_SALT' 'int'
|   |       | `-BinaryOperator 0x28414f10470 <line:131:13, col:27> 'int' '='
|   |       |   |-DeclRefExpr 0x28414f10410 <col:13> 'int' lvalue Var 0x28414e70e98 'passed_salt' 'int'
|   |       |   `-IntegerLiteral 0x28414f10448 <col:27> 'int' 1
|   |       |-BinaryOperator 0x28414f10520 <line:132:13, col:28> 'char *' '='
|   |       | |-DeclRefExpr 0x28414f10490 <col:13> 'char *' lvalue Var 0x28414e70508 'salt' 'char *'
|   |       | `-CallExpr 0x28414f10500 <col:20, col:28> 'char *'
|   |       |   `-ImplicitCastExpr 0x28414f104e8 <col:20> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |     `-DeclRefExpr 0x28414f104c8 <col:20> 'char *(void)' Function 0x28414e5c070 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x28414f10540 <line:133:13>
|   |       |-CaseStmt 0x28414f10580 <line:134:9, line:136:22>
|   |       | |-ConstantExpr 0x28414f10568 <line:134:14> 'int'
|   |       | | `-DeclRefExpr 0x28414f10548 <col:14> 'int' EnumConstant 0x28414e73328 'OPT_STDIN' 'int'
|   |       | `-IfStmt 0x28414f105f8 <line:135:13, line:136:22>
|   |       |   |-ImplicitCastExpr 0x28414f105c8 <line:135:17> 'int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x28414f105a8 <col:17> 'int' lvalue Var 0x28414e70d00 'pw_source_defined' 'int'
|   |       |   `-GotoStmt 0x28414f105e0 <line:136:17, col:22> 'opthelp' 0x28414e71cb8
|   |       |-BinaryOperator 0x28414f10670 <line:137:13, col:24> 'int' '='
|   |       | |-DeclRefExpr 0x28414f10610 <col:13> 'int' lvalue Var 0x28414e70c58 'in_stdin' 'int'
|   |       | `-IntegerLiteral 0x28414f10648 <col:24> 'int' 1
|   |       |-BinaryOperator 0x28414f106d8 <line:138:13, col:33> 'int' '='
|   |       | |-DeclRefExpr 0x28414f10690 <col:13> 'int' lvalue Var 0x28414e70d00 'pw_source_defined' 'int'
|   |       | `-IntegerLiteral 0x28414f106b0 <col:33> 'int' 1
|   |       `-BreakStmt 0x28414f106f8 <line:139:13>
|   |-BinaryOperator 0x28414f108a8 <line:142:5, col:25> 'int' '='
|   | |-DeclRefExpr 0x28414f10830 <col:5> 'int' lvalue ParmVar 0x28414e700d0 'argc' 'int'
|   | `-CallExpr 0x28414f10888 <col:12, col:25> 'int'
|   |   `-ImplicitCastExpr 0x28414f10870 <col:12> 'int (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x28414f10850 <col:12> 'int (void)' Function 0x28414e5c788 'opt_num_rest' 'int (void)'
|   |-BinaryOperator 0x28414f10970 <line:143:5, col:21> 'char **' '='
|   | |-DeclRefExpr 0x28414f108c8 <col:5> 'char **' lvalue ParmVar 0x28414e70150 'argv' 'char **'
|   | `-CallExpr 0x28414f10950 <col:12, col:21> 'char **'
|   |   `-ImplicitCastExpr 0x28414f10938 <col:12> 'char **(*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x28414f108e8 <col:12> 'char **(void)' Function 0x28414e5c630 'opt_rest' 'char **(void)'
|   |-IfStmt 0x28414f10b80 <line:145:5, line:150:5>
|   | |-ImplicitCastExpr 0x28414f109e0 <line:145:9, col:10> 'char *' <LValueToRValue>
|   | | `-UnaryOperator 0x28414f109c8 <col:9, col:10> 'char *' lvalue prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x28414f109b0 <col:10> 'char **' <LValueToRValue>
|   | |     `-DeclRefExpr 0x28414f10990 <col:10> 'char **' lvalue ParmVar 0x28414e70150 'argv' 'char **'
|   | `-CompoundStmt 0x28414f10b58 <col:16, line:150:5>
|   |   |-IfStmt 0x28414f10a48 <line:146:9, line:147:18>
|   |   | |-ImplicitCastExpr 0x28414f10a18 <line:146:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x28414f109f8 <col:13> 'int' lvalue Var 0x28414e70d00 'pw_source_defined' 'int'
|   |   | `-GotoStmt 0x28414f10a30 <line:147:13, col:18> 'opthelp' 0x28414e71cb8
|   |   |-BinaryOperator 0x28414f10aa8 <line:148:9, col:29> 'int' '='
|   |   | |-DeclRefExpr 0x28414f10a60 <col:9> 'int' lvalue Var 0x28414e70d00 'pw_source_defined' 'int'
|   |   | `-IntegerLiteral 0x28414f10a80 <col:29> 'int' 1
|   |   `-BinaryOperator 0x28414f10b38 <line:149:9, col:19> 'char **' '='
|   |     |-DeclRefExpr 0x28414f10ac8 <col:9> 'char **' lvalue Var 0x28414e70748 'passwds' 'char **'
|   |     `-ImplicitCastExpr 0x28414f10b20 <col:19> 'char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x28414f10b00 <col:19> 'char **' lvalue ParmVar 0x28414e70150 'argv' 'char **'
|   |-IfStmt 0x28414f10d48 <line:152:5, line:155:5>
|   | |-BinaryOperator 0x28414f10ca8 <line:152:9, col:32> 'int' '&&'
|   | | |-BinaryOperator 0x28414f10c38 <col:9, col:23> 'int' '&&'
|   | | | |-UnaryOperator 0x28414f10bd0 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x28414f10bb8 <col:10> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x28414f10b98 <col:10> 'int' lvalue Var 0x28414e71220 'usecrypt' 'int'
|   | | | `-UnaryOperator 0x28414f10c20 <col:22, col:23> 'int' prefix '!' cannot overflow
|   | | |   `-ImplicitCastExpr 0x28414f10c08 <col:23> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x28414f10be8 <col:23> 'int' lvalue Var 0x28414e712c8 'use1' 'int'
|   | | `-UnaryOperator 0x28414f10c90 <col:31, col:32> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x28414f10c78 <col:32> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x28414f10c58 <col:32> 'int' lvalue Var 0x28414e71370 'useapr1' 'int'
|   | `-CompoundStmt 0x28414f10d30 <col:41, line:155:5>
|   |   `-BinaryOperator 0x28414f10d10 <line:154:9, col:20> 'int' '='
|   |     |-DeclRefExpr 0x28414f10cc8 <col:9> 'int' lvalue Var 0x28414e71220 'usecrypt' 'int'
|   |     `-IntegerLiteral 0x28414f10ce8 <col:20> 'int' 1
|   |-IfStmt 0x28414f10ec0 <line:156:5, line:159:5>
|   | |-BinaryOperator 0x28414f10e70 <line:156:9, col:37> 'int' '>'
|   | | |-BinaryOperator 0x28414f10e28 <col:9, col:27> 'int' '+'
|   | | | |-BinaryOperator 0x28414f10dd0 <col:9, col:20> 'int' '+'
|   | | | | |-ImplicitCastExpr 0x28414f10da0 <col:9> 'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x28414f10d60 <col:9> 'int' lvalue Var 0x28414e71220 'usecrypt' 'int'
|   | | | | `-ImplicitCastExpr 0x28414f10db8 <col:20> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x28414f10d80 <col:20> 'int' lvalue Var 0x28414e712c8 'use1' 'int'
|   | | | `-ImplicitCastExpr 0x28414f10e10 <col:27> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x28414f10df0 <col:27> 'int' lvalue Var 0x28414e71370 'useapr1' 'int'
|   | | `-IntegerLiteral 0x28414f10e48 <col:37> 'int' 1
|   | `-CompoundStmt 0x28414f10ea8 <col:40, line:159:5>
|   |   `-GotoStmt 0x28414f10e90 <line:158:9, col:14> 'opthelp' 0x28414e71cb8
|   |-IfStmt 0x28414f11128 <line:170:5, line:173:5>
|   | |-BinaryOperator 0x28414f11008 <line:170:9, col:27> 'int' '&&'
|   | | |-BinaryOperator 0x28414f10fb0 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | | |-ImplicitCastExpr 0x28414f10f80 <.//openssl//file_jk/before\apps\passwd.c:170:9> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x28414f10ed8 <col:9> 'char *' lvalue Var 0x28414e703c8 'infile' 'char *'
|   | | | `-ImplicitCastExpr 0x28414f10f98 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | | |   `-ParenExpr 0x28414f10f60 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x28414f10f38 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x28414f10ef8 <col:26> 'int' 0
|   | | `-ImplicitCastExpr 0x28414f10ff0 <.//openssl//file_jk/before\apps\passwd.c:170:27> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x28414f10fd0 <col:27> 'int' lvalue Var 0x28414e70c58 'in_stdin' 'int'
|   | `-CompoundStmt 0x28414f11110 <col:37, line:173:5>
|   |   `-GotoStmt 0x28414f110f8 <line:172:9, col:14> 'end' 0x28414e71d20
|   |-IfStmt 0x28414f11440 <line:175:5, line:183:5>
|   | |-BinaryOperator 0x28414f11270 <line:175:9, col:27> 'int' '||'
|   | | |-BinaryOperator 0x28414f11218 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | | |-ImplicitCastExpr 0x28414f111e8 <.//openssl//file_jk/before\apps\passwd.c:175:9> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x28414f11140 <col:9> 'char *' lvalue Var 0x28414e703c8 'infile' 'char *'
|   | | | `-ImplicitCastExpr 0x28414f11200 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | | |   `-ParenExpr 0x28414f111c8 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x28414f111a0 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x28414f11160 <col:26> 'int' 0
|   | | `-ImplicitCastExpr 0x28414f11258 <.//openssl//file_jk/before\apps\passwd.c:175:27> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x28414f11238 <col:27> 'int' lvalue Var 0x28414e70c58 'in_stdin' 'int'
|   | `-CompoundStmt 0x28414f11428 <col:37, line:183:5>
|   |   `-IfStmt 0x28414f11410 <line:181:9, line:182:18>
|   |     |-OpaqueValueExpr 0x28414f113f8 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x28414f113e0 <col:13, col:18> 'end' 0x28414e71d20
|   |-IfStmt 0x28414f11650 <line:185:5, line:188:21> has_else
|   | |-ImplicitCastExpr 0x28414f11478 <line:185:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x28414f11458 <col:9> 'int' lvalue Var 0x28414e71220 'usecrypt' 'int'
|   | |-BinaryOperator 0x28414f11508 <line:186:9, col:21> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x28414f11490 <col:9> 'size_t':'unsigned long long' lvalue Var 0x28414e71558 'pw_maxlen' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x28414f114f0 <col:21> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x28414f114c8 <col:21> 'int' 8
|   | `-IfStmt 0x28414f11638 <line:187:10, line:188:21>
|   |   |-BinaryOperator 0x28414f11598 <line:187:14, col:22> 'int' '||'
|   |   | |-ImplicitCastExpr 0x28414f11568 <col:14> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x28414f11528 <col:14> 'int' lvalue Var 0x28414e712c8 'use1' 'int'
|   |   | `-ImplicitCastExpr 0x28414f11580 <col:22> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x28414f11548 <col:22> 'int' lvalue Var 0x28414e71370 'useapr1' 'int'
|   |   `-BinaryOperator 0x28414f11618 <line:188:9, col:21> 'size_t':'unsigned long long' '='
|   |     |-DeclRefExpr 0x28414f115b8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x28414e71558 'pw_maxlen' 'size_t':'unsigned long long'
|   |     `-ImplicitCastExpr 0x28414f11600 <col:21> 'size_t':'unsigned long long' <IntegralCast>
|   |       `-IntegerLiteral 0x28414f115d8 <col:21> 'int' 256
|   |-IfStmt 0x28414f11ab8 <line:191:5, line:198:5>
|   | |-BinaryOperator 0x28414f11750 <line:191:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x28414f11720 <.//openssl//file_jk/before\apps\passwd.c:191:9> 'char **' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28414f11678 <col:9> 'char **' lvalue Var 0x28414e70748 'passwds' 'char **'
|   | | `-ImplicitCastExpr 0x28414f11738 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char **' <BitCast>
|   | |   `-ParenExpr 0x28414f11700 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x28414f116d8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x28414f11698 <col:26> 'int' 0
|   | `-CompoundStmt 0x28414f11a98 <.//openssl//file_jk/before\apps\passwd.c:191:26, line:198:5>
|   |   |-BinaryOperator 0x28414f11840 <line:194:9, col:42> 'size_t':'unsigned long long' '='
|   |   | |-DeclRefExpr 0x28414f11770 <col:9> 'size_t':'unsigned long long' lvalue Var 0x28414e714a0 'passwd_malloc_size' 'size_t':'unsigned long long'
|   |   | `-BinaryOperator 0x28414f11820 <col:30, col:42> 'unsigned long long' '+'
|   |   |   |-ImplicitCastExpr 0x28414f117f0 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x28414f117a8 <col:30> 'size_t':'unsigned long long' lvalue Var 0x28414e71558 'pw_maxlen' 'size_t':'unsigned long long'
|   |   |   `-ImplicitCastExpr 0x28414f11808 <col:42> 'unsigned long long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x28414f117c8 <col:42> 'int' 2
|   |   `-BinaryOperator 0x28414f11a78 <line:196:9, line:197:61> 'char *' '='
|   |     |-DeclRefExpr 0x28414f11860 <line:196:9> 'char *' lvalue Var 0x28414e70628 'passwd' 'char *'
|   |     `-BinaryOperator 0x28414f11a58 <col:18, line:197:61> 'char *' '='
|   |       |-DeclRefExpr 0x28414f11898 <line:196:18> 'char *' lvalue Var 0x28414e709c8 'passwd_malloc' 'char *'
|   |       `-ImplicitCastExpr 0x28414f11a40 <line:197:13, col:61> 'char *' <BitCast>
|   |         `-CallExpr 0x28414f119b0 <col:13, col:61> 'void *'
|   |           |-ImplicitCastExpr 0x28414f11998 <col:13> 'void *(*)(int, const char *)' <FunctionToPointerDecay>
|   |           | `-DeclRefExpr 0x28414f118d0 <col:13> 'void *(int, const char *)' Function 0x28414e65bb0 'app_malloc' 'void *(int, const char *)'
|   |           |-ImplicitCastExpr 0x28414f119f8 <col:24> 'int' <IntegralCast>
|   |           | `-ImplicitCastExpr 0x28414f119e0 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   `-DeclRefExpr 0x28414f118f0 <col:24> 'size_t':'unsigned long long' lvalue Var 0x28414e714a0 'passwd_malloc_size' 'size_t':'unsigned long long'
|   |           `-ImplicitCastExpr 0x28414f11a28 <col:44> 'const char *' <NoOp>
|   |             `-ImplicitCastExpr 0x28414f11a10 <col:44> 'char *' <ArrayToPointerDecay>
|   |               `-StringLiteral 0x28414f11948 <col:44> 'char [16]' lvalue "password buffer"
|   |-IfStmt 0x28414f126d0 <line:200:5, line:224:5>
|   | |-OpaqueValueExpr 0x28414f126b8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x28414f126a0 <line:200:44, line:224:5>
|   |   `-IfStmt 0x28414f12678 <line:206:9, line:223:9> has_else
|   |     |-IntegerLiteral 0x28414f11c70 <line:206:13> 'int' 1
|   |     |-CompoundStmt 0x28414f12590 <col:16, line:219:9>
|   |     | |-DeclStmt 0x28414f11f98 <line:209:13, col:60>
|   |     | | `-VarDecl 0x28414f11d40 <col:13, col:59> col:26 used passwds_static 'char *[2]' static cinit
|   |     | |   `-InitListExpr 0x28414f11f18 <col:46, col:59> 'char *[2]'
|   |     | |     |-ImplicitCastExpr 0x28414f11f68 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   |     | |     | `-ParenExpr 0x28414f11e10 <col:17, col:27> 'void *'
|   |     | |     |   `-CStyleCastExpr 0x28414f11de8 <col:18, col:26> 'void *' <NullToPointer>
|   |     | |     |     `-IntegerLiteral 0x28414f11da8 <col:26> 'int' 0
|   |     | |     `-ImplicitCastExpr 0x28414f11f80 <col:17, col:27> 'char *' <NullToPointer>
|   |     | |       `-ParenExpr 0x28414f11e98 <col:17, col:27> 'void *'
|   |     | |         `-CStyleCastExpr 0x28414f11e70 <col:18, col:26> 'void *' <NullToPointer>
|   |     | |           `-IntegerLiteral 0x28414f11e30 <col:26> 'int' 0
|   |     | |-BinaryOperator 0x28414f12020 <.//openssl//file_jk/before\apps\passwd.c:211:13, col:23> 'char **' '='
|   |     | | |-DeclRefExpr 0x28414f11fb0 <col:13> 'char **' lvalue Var 0x28414e70748 'passwds' 'char **'
|   |     | | `-ImplicitCastExpr 0x28414f12008 <col:23> 'char **' <ArrayToPointerDecay>
|   |     | |   `-DeclRefExpr 0x28414f11fd0 <col:23> 'char *[2]' lvalue Var 0x28414f11d40 'passwds_static' 'char *[2]'
|   |     | |-IfStmt 0x28414f124a0 <line:212:13, line:217:13>
|   |     | | |-OpaqueValueExpr 0x28414f12488 <<invalid sloc>> '_Bool'
|   |     | | `-CompoundStmt 0x28414f12470 <line:212:29, line:217:13>
|   |     | |   `-IfStmt 0x28414f12458 <line:213:17, line:216:26>
|   |     | |     |-BinaryOperator 0x28414f12420 <line:213:21, line:215:56> 'int' '!='
|   |     | |     | |-CallExpr 0x28414f12370 <line:213:21, line:215:51> 'int'
|   |     | |     | | |-ImplicitCastExpr 0x28414f12358 <line:213:21> 'int (*)()' <FunctionToPointerDecay>
|   |     | |     | | | `-DeclRefExpr 0x28414f121c8 <col:21> 'int ()' Function 0x28414f12100 'EVP_read_pw_string' 'int ()'
|   |     | |     | | |-ImplicitCastExpr 0x28414f123b0 <line:214:22> 'char *' <LValueToRValue>
|   |     | |     | | | `-DeclRefExpr 0x28414f121e8 <col:22> 'char *' lvalue Var 0x28414e709c8 'passwd_malloc' 'char *'
|   |     | |     | | |-ImplicitCastExpr 0x28414f123c8 <col:37> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |     | | | `-DeclRefExpr 0x28414f12208 <col:37> 'size_t':'unsigned long long' lvalue Var 0x28414e714a0 'passwd_malloc_size' 'size_t':'unsigned long long'
|   |     | |     | | |-ImplicitCastExpr 0x28414f123e0 <col:57> 'char *' <ArrayToPointerDecay>
|   |     | |     | | | `-StringLiteral 0x28414f12268 <col:57> 'char [11]' lvalue "Password: "
|   |     | |     | | `-UnaryOperator 0x28414f12340 <line:215:22, col:50> 'int' prefix '!' cannot overflow
|   |     | |     | |   `-ParenExpr 0x28414f12320 <col:23, col:50> 'int'
|   |     | |     | |     `-BinaryOperator 0x28414f12300 <col:24, col:39> 'int' '||'
|   |     | |     | |       |-ImplicitCastExpr 0x28414f122d0 <col:24> 'int' <LValueToRValue>
|   |     | |     | |       | `-DeclRefExpr 0x28414f12290 <col:24> 'int' lvalue Var 0x28414e70e98 'passed_salt' 'int'
|   |     | |     | |       `-ImplicitCastExpr 0x28414f122e8 <col:39> 'int' <LValueToRValue>
|   |     | |     | |         `-DeclRefExpr 0x28414f122b0 <col:39> 'int' lvalue Var 0x28414e70dd8 'in_noverify' 'int'
|   |     | |     | `-IntegerLiteral 0x28414f123f8 <col:56> 'int' 0
|   |     | |     `-GotoStmt 0x28414f12440 <line:216:21, col:26> 'end' 0x28414e71d20
|   |     | `-BinaryOperator 0x28414f12570 <line:218:13, col:26> 'char *' '='
|   |     |   |-ArraySubscriptExpr 0x28414f12518 <col:13, col:22> 'char *' lvalue
|   |     |   | |-ImplicitCastExpr 0x28414f12500 <col:13> 'char **' <LValueToRValue>
|   |     |   | | `-DeclRefExpr 0x28414f124b8 <col:13> 'char **' lvalue Var 0x28414e70748 'passwds' 'char **'
|   |     |   | `-IntegerLiteral 0x28414f124d8 <col:21> 'int' 0
|   |     |   `-ImplicitCastExpr 0x28414f12558 <col:26> 'char *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x28414f12538 <col:26> 'char *' lvalue Var 0x28414e709c8 'passwd_malloc' 'char *'
|   |     `-CompoundStmt 0x28414f12660 <line:219:16, line:223:9>
|   |       `-GotoStmt 0x28414f12648 <line:222:13, col:18> 'end' 0x28414e71d20
|   |-IfStmt 0x28414f0e658 <line:226:5, line:263:5> has_else
|   | |-OpaqueValueExpr 0x28414f0e640 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x28414f13518 <line:226:21, line:237:5>
|   | | |-CStyleCastExpr 0x28414f12c38 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
|   | | | `-ParenExpr 0x28414f12c18 <col:35, col:128> 'int'
|   | | |   `-BinaryOperator 0x28414f12bc8 <col:37, col:126> 'int' '||'
|   | | |     |-ParenExpr 0x28414f128b8 <col:37, col:53> 'int'
|   | | |     | `-UnaryOperator 0x28414f128a0 <col:38, col:52> 'int' prefix '!' cannot overflow
|   | | |     |   `-UnaryOperator 0x28414f12888 <col:39, col:52> 'int' prefix '!' cannot overflow
|   | | |     |     `-ParenExpr 0x28414f12868 <col:40, col:52> 'int'
|   | | |     |       `-BinaryOperator 0x28414f12848 <.//openssl//file_jk/before\apps\passwd.c:227:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |     |         |-ImplicitCastExpr 0x28414f12818 <.//openssl//file_jk/before\apps\passwd.c:227:16> 'char **' <LValueToRValue>
|   | | |     |         | `-DeclRefExpr 0x28414f12770 <col:16> 'char **' lvalue Var 0x28414e70748 'passwds' 'char **'
|   | | |     |         `-ImplicitCastExpr 0x28414f12830 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char **' <BitCast>
|   | | |     |           `-ParenExpr 0x28414f127f8 <col:17, col:27> 'void *'
|   | | |     |             `-CStyleCastExpr 0x28414f127d0 <col:18, col:26> 'void *' <NullToPointer>
|   | | |     |               `-IntegerLiteral 0x28414f12790 <col:26> 'int' 0
|   | | |     `-ParenExpr 0x28414f12ba8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   | | |       `-BinaryOperator 0x28414f12b88 <col:59, col:125> 'int' ','
|   | | |         |-CallExpr 0x28414f12ab0 <col:59, col:122> 'void'
|   | | |         | |-ImplicitCastExpr 0x28414f12a98 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | |         | | `-DeclRefExpr 0x28414f128d8 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x28414eb5c20 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   | | |         | |-ImplicitCastExpr 0x28414f12b00 <<scratch space>:304:1> 'const wchar_t *' <NoOp>
|   | | |         | | `-ImplicitCastExpr 0x28414f12ae8 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | | |         | |   `-StringLiteral 0x28414f12938 <col:1> 'unsigned short [16]' lvalue L"passwds != NULL"
|   | | |         | |-ImplicitCastExpr 0x28414f12b30 <line:306:1> 'const wchar_t *' <NoOp>
|   | | |         | | `-ImplicitCastExpr 0x28414f12b18 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | | |         | |   `-StringLiteral 0x28414f129a8 <col:1> 'unsigned short [41]' lvalue L".//openssl//file_jk/before\\apps\\passwd.c"
|   | | |         | `-ImplicitCastExpr 0x28414f12b48 <line:307:1> 'unsigned int' <IntegralCast>
|   | | |         |   `-IntegerLiteral 0x28414f12a10 <col:1> 'int' 227
|   | | |         `-IntegerLiteral 0x28414f12b60 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   | | |-CStyleCastExpr 0x28414f130f0 <col:29, col:128> 'void' <ToVoid>
|   | | | `-ParenExpr 0x28414f130d0 <col:35, col:128> 'int'
|   | | |   `-BinaryOperator 0x28414f13080 <col:37, col:126> 'int' '||'
|   | | |     |-ParenExpr 0x28414f12e00 <col:37, col:53> 'int'
|   | | |     | `-UnaryOperator 0x28414f12de8 <col:38, col:52> 'int' prefix '!' cannot overflow
|   | | |     |   `-UnaryOperator 0x28414f12dd0 <col:39, col:52> 'int' prefix '!' cannot overflow
|   | | |     |     `-ParenExpr 0x28414f12db0 <col:40, col:52> 'int'
|   | | |     |       `-BinaryOperator 0x28414f12d90 <.//openssl//file_jk/before\apps\passwd.c:228:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |     |         |-ImplicitCastExpr 0x28414f12d60 <.//openssl//file_jk/before\apps\passwd.c:228:16, col:17> 'char *' <LValueToRValue>
|   | | |     |         | `-UnaryOperator 0x28414f12cc0 <col:16, col:17> 'char *' lvalue prefix '*' cannot overflow
|   | | |     |         |   `-ImplicitCastExpr 0x28414f12ca8 <col:17> 'char **' <LValueToRValue>
|   | | |     |         |     `-DeclRefExpr 0x28414f12c88 <col:17> 'char **' lvalue Var 0x28414e70748 'passwds' 'char **'
|   | | |     |         `-ImplicitCastExpr 0x28414f12d78 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | | |     |           `-ParenExpr 0x28414f12d40 <col:17, col:27> 'void *'
|   | | |     |             `-CStyleCastExpr 0x28414f12d18 <col:18, col:26> 'void *' <NullToPointer>
|   | | |     |               `-IntegerLiteral 0x28414f12cd8 <col:26> 'int' 0
|   | | |     `-ParenExpr 0x28414f13060 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   | | |       `-BinaryOperator 0x28414f13030 <col:59, col:125> 'int' ','
|   | | |         |-CallExpr 0x28414f12f58 <col:59, col:122> 'void'
|   | | |         | |-ImplicitCastExpr 0x28414f12f40 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | |         | | `-DeclRefExpr 0x28414f12e20 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x28414eb5c20 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   | | |         | |-ImplicitCastExpr 0x28414f12fa8 <<scratch space>:3:1> 'const wchar_t *' <NoOp>
|   | | |         | | `-ImplicitCastExpr 0x28414f12f90 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | | |         | |   `-StringLiteral 0x28414f12e78 <col:1> 'unsigned short [17]' lvalue L"*passwds != NULL"
|   | | |         | |-ImplicitCastExpr 0x28414f12fd8 <line:5:1> 'const wchar_t *' <NoOp>
|   | | |         | | `-ImplicitCastExpr 0x28414f12fc0 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | | |         | |   `-StringLiteral 0x28414f12eb0 <col:1> 'unsigned short [41]' lvalue L".//openssl//file_jk/before\\apps\\passwd.c"
|   | | |         | `-ImplicitCastExpr 0x28414f12ff0 <line:6:1> 'unsigned int' <IntegralCast>
|   | | |         |   `-IntegerLiteral 0x28414f12f18 <col:1> 'int' 228
|   | | |         `-IntegerLiteral 0x28414f13008 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   | | `-DoStmt 0x28414f134f8 <.//openssl//file_jk/before\apps\passwd.c:230:9, line:236:34>
|   | |   |-CompoundStmt 0x28414f133b0 <line:230:12, line:236:9>
|   | |   | |-BinaryOperator 0x28414f131a0 <line:231:13, col:30> 'char *' '='
|   | |   | | |-DeclRefExpr 0x28414f13118 <col:13> 'char *' lvalue Var 0x28414e70628 'passwd' 'char *'
|   | |   | | `-ImplicitCastExpr 0x28414f13188 <col:22, col:30> 'char *' <LValueToRValue>
|   | |   | |   `-UnaryOperator 0x28414f13170 <col:22, col:30> 'char *' lvalue prefix '*' cannot overflow
|   | |   | |     `-UnaryOperator 0x28414f13158 <col:23, col:30> 'char **' postfix '++'
|   | |   | |       `-DeclRefExpr 0x28414f13138 <col:23> 'char **' lvalue Var 0x28414e70748 'passwds' 'char **'
|   | |   | `-IfStmt 0x28414f13398 <line:232:13, line:235:22>
|   | |   |   |-OpaqueValueExpr 0x28414f13380 <<invalid sloc>> '_Bool'
|   | |   |   `-GotoStmt 0x28414f13368 <col:17, col:22> 'end' 0x28414e71d20
|   | |   `-BinaryOperator 0x28414f134d8 <line:236:18, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |     |-ImplicitCastExpr 0x28414f134a8 <.//openssl//file_jk/before\apps\passwd.c:236:18, col:19> 'char *' <LValueToRValue>
|   | |     | `-UnaryOperator 0x28414f13408 <col:18, col:19> 'char *' lvalue prefix '*' cannot overflow
|   | |     |   `-ImplicitCastExpr 0x28414f133f0 <col:19> 'char **' <LValueToRValue>
|   | |     |     `-DeclRefExpr 0x28414f133d0 <col:19> 'char **' lvalue Var 0x28414e70748 'passwds' 'char **'
|   | |     `-ImplicitCastExpr 0x28414f134c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |       `-ParenExpr 0x28414f13488 <col:17, col:27> 'void *'
|   | |         `-CStyleCastExpr 0x28414f13460 <col:18, col:26> 'void *' <NullToPointer>
|   | |           `-IntegerLiteral 0x28414f13420 <col:26> 'int' 0
|   | `-CompoundStmt 0x28414f0e618 <.//openssl//file_jk/before\apps\passwd.c:237:12, line:263:5>
|   |   |-DeclStmt 0x28414f135c0 <line:239:9, col:17>
|   |   | `-VarDecl 0x28414f13558 <col:9, col:13> col:13 used done 'int'
|   |   |-CStyleCastExpr 0x28414f13a00 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
|   |   | `-ParenExpr 0x28414f139e0 <col:35, col:128> 'int'
|   |   |   `-BinaryOperator 0x28414f13990 <col:37, col:126> 'int' '||'
|   |   |     |-ParenExpr 0x28414f13720 <col:37, col:53> 'int'
|   |   |     | `-UnaryOperator 0x28414f13708 <col:38, col:52> 'int' prefix '!' cannot overflow
|   |   |     |   `-UnaryOperator 0x28414f136f0 <col:39, col:52> 'int' prefix '!' cannot overflow
|   |   |     |     `-ParenExpr 0x28414f136d0 <col:40, col:52> 'int'
|   |   |     |       `-BinaryOperator 0x28414f136b0 <.//openssl//file_jk/before\apps\passwd.c:241:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   |   |     |         |-ImplicitCastExpr 0x28414f13680 <.//openssl//file_jk/before\apps\passwd.c:241:16> 'char *' <LValueToRValue>
|   |   |     |         | `-DeclRefExpr 0x28414f135d8 <col:16> 'char *' lvalue Var 0x28414e70628 'passwd' 'char *'
|   |   |     |         `-ImplicitCastExpr 0x28414f13698 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   |   |     |           `-ParenExpr 0x28414f13660 <col:17, col:27> 'void *'
|   |   |     |             `-CStyleCastExpr 0x28414f13638 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     |               `-IntegerLiteral 0x28414f135f8 <col:26> 'int' 0
|   |   |     `-ParenExpr 0x28414f13970 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   |   |       `-BinaryOperator 0x28414f13950 <col:59, col:125> 'int' ','
|   |   |         |-CallExpr 0x28414f13878 <col:59, col:122> 'void'
|   |   |         | |-ImplicitCastExpr 0x28414f13860 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |         | | `-DeclRefExpr 0x28414f13740 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x28414eb5c20 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   |   |         | |-ImplicitCastExpr 0x28414f138c8 <<scratch space>:8:1> 'const wchar_t *' <NoOp>
|   |   |         | | `-ImplicitCastExpr 0x28414f138b0 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   |   |         | |   `-StringLiteral 0x28414f13798 <col:1> 'unsigned short [15]' lvalue L"passwd != NULL"
|   |   |         | |-ImplicitCastExpr 0x28414f138f8 <line:10:1> 'const wchar_t *' <NoOp>
|   |   |         | | `-ImplicitCastExpr 0x28414f138e0 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   |   |         | |   `-StringLiteral 0x28414f137d0 <col:1> 'unsigned short [41]' lvalue L".//openssl//file_jk/before\\apps\\passwd.c"
|   |   |         | `-ImplicitCastExpr 0x28414f13910 <line:11:1> 'unsigned int' <IntegralCast>
|   |   |         |   `-IntegerLiteral 0x28414f13838 <col:1> 'int' 241
|   |   |         `-IntegerLiteral 0x28414f13928 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   |   `-DoStmt 0x28414f0e5f8 <.//openssl//file_jk/before\apps\passwd.c:242:9, line:262:23>
|   |     |-CompoundStmt 0x28414f0e580 <line:242:12, line:262:9>
|   |     | |-DeclStmt 0x28414f13c70 <line:243:13, col:56>
|   |     | | `-VarDecl 0x28414f13a40 <col:13, col:17> col:17 used r 'int'
|   |     | |-IfStmt 0x28414f0e470 <line:244:13, line:260:13>
|   |     | | |-BinaryOperator 0x28414f13d00 <line:244:17, col:21> 'int' '>'
|   |     | | | |-ImplicitCastExpr 0x28414f13ce8 <col:17> 'int' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x28414f13c88 <col:17> 'int' lvalue Var 0x28414f13a40 'r' 'int'
|   |     | | | `-IntegerLiteral 0x28414f13cc0 <col:21> 'int' 0
|   |     | | `-CompoundStmt 0x28414f0e448 <col:24, line:260:13>
|   |     | |   |-DeclStmt 0x28414f13ed0 <line:245:17, col:49>
|   |     | |   | `-VarDecl 0x28414f13d38 <col:17, col:48> col:23 used c 'char *' cinit
|   |     | |   |   `-ParenExpr 0x28414f13eb0 <col:27, col:48> 'char *'
|   |     | |   |     `-CallExpr 0x28414f13e50 <col:28, col:47> 'char *'
|   |     | |   |       |-ImplicitCastExpr 0x28414f13e38 <col:28> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |     | |   |       | `-DeclRefExpr 0x28414f13da0 <col:28> 'char *(const char *, int)' Function 0x28414e1dcd0 'strchr' 'char *(const char *, int)'
|   |     | |   |       |-ImplicitCastExpr 0x28414f13e98 <col:35> 'const char *' <NoOp>
|   |     | |   |       | `-ImplicitCastExpr 0x28414f13e80 <col:35> 'char *' <LValueToRValue>
|   |     | |   |       |   `-DeclRefExpr 0x28414f13dc0 <col:35> 'char *' lvalue Var 0x28414e70628 'passwd' 'char *'
|   |     | |   |       `-CharacterLiteral 0x28414f13de0 <col:43> 'int' 10
|   |     | |   |-IfStmt 0x28414f0e248 <line:246:17, line:254:17> has_else
|   |     | |   | |-BinaryOperator 0x28414f13fd8 <line:246:21, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   |     | |   | | |-ImplicitCastExpr 0x28414f13fa8 <.//openssl//file_jk/before\apps\passwd.c:246:21> 'char *' <LValueToRValue>
|   |     | |   | | | `-DeclRefExpr 0x28414f13ee8 <col:21> 'char *' lvalue Var 0x28414f13d38 'c' 'char *'
|   |     | |   | | `-ImplicitCastExpr 0x28414f13fc0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   |     | |   | |   `-ParenExpr 0x28414f13f88 <col:17, col:27> 'void *'
|   |     | |   | |     `-CStyleCastExpr 0x28414f13f60 <col:18, col:26> 'void *' <NullToPointer>
|   |     | |   | |       `-IntegerLiteral 0x28414f13f20 <col:26> 'int' 0
|   |     | |   | |-CompoundStmt 0x28414f0e070 <.//openssl//file_jk/before\apps\passwd.c:246:32, line:248:17>
|   |     | |   | | `-BinaryOperator 0x28414f0e050 <line:247:21, col:26> 'char' '='
|   |     | |   | |   |-UnaryOperator 0x28414f14030 <col:21, col:22> 'char' lvalue prefix '*' cannot overflow
|   |     | |   | |   | `-ImplicitCastExpr 0x28414f14018 <col:22> 'char *' <LValueToRValue>
|   |     | |   | |   |   `-DeclRefExpr 0x28414f13ff8 <col:22> 'char *' lvalue Var 0x28414f13d38 'c' 'char *'
|   |     | |   | |   `-ImplicitCastExpr 0x28414f0e038 <col:26> 'char' <IntegralCast>
|   |     | |   | |     `-IntegerLiteral 0x28414f0e010 <col:26> 'int' 0
|   |     | |   | `-CompoundStmt 0x28414f0e230 <line:248:24, line:254:17>
|   |     | |   |   `-DeclStmt 0x28414f0e100 <line:250:21, col:39>
|   |     | |   |     `-VarDecl 0x28414f0e098 <col:21, col:26> col:26 invalid trash 'char'
|   |     | |   `-IfStmt 0x28414f0e430 <line:256:17, line:259:26>
|   |     | |     |-OpaqueValueExpr 0x28414f0e418 <<invalid sloc>> '_Bool'
|   |     | |     `-GotoStmt 0x28414f0e400 <col:21, col:26> 'end' 0x28414e71d20
|   |     | `-BinaryOperator 0x28414f0e560 <line:261:13, col:27> 'int' '='
|   |     |   |-DeclRefExpr 0x28414f0e488 <col:13> 'int' lvalue Var 0x28414f13558 'done' 'int'
|   |     |   `-ParenExpr 0x28414f0e540 <col:20, col:27> 'int'
|   |     |     `-BinaryOperator 0x28414f0e520 <col:21, col:26> 'int' '<='
|   |     |       |-ImplicitCastExpr 0x28414f0e508 <col:21> 'int' <LValueToRValue>
|   |     |       | `-DeclRefExpr 0x28414f0e4c0 <col:21> 'int' lvalue Var 0x28414f13a40 'r' 'int'
|   |     |       `-IntegerLiteral 0x28414f0e4e0 <col:26> 'int' 0
|   |     `-UnaryOperator 0x28414f0e5e0 <line:262:18, col:19> 'int' prefix '!' cannot overflow
|   |       `-ImplicitCastExpr 0x28414f0e5c8 <col:19> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x28414f0e5a8 <col:19> 'int' lvalue Var 0x28414f13558 'done' 'int'
|   |-BinaryOperator 0x28414f0e6c8 <line:264:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x28414f0e680 <col:5> 'int' lvalue Var 0x28414e71178 'ret' 'int'
|   | `-IntegerLiteral 0x28414f0e6a0 <col:11> 'int' 0
|   |-LabelStmt 0x28414f0e800 <line:266:2, col:5> 'end'
|   | `-NullStmt 0x28414f0e7f8 <col:5>
|   |-CallExpr 0x28414f0e960 <line:268:5, col:29> 'int'
|   | |-ImplicitCastExpr 0x28414f0e948 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28414f0e908 <col:5> 'int ()' Function 0x28414f0e840 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x28414f0e988 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x28414f0e928 <col:18> 'char *' lvalue Var 0x28414e708a8 'salt_malloc' 'char *'
|   |-CallExpr 0x28414f0e9f8 <line:269:5, col:31> 'int'
|   | |-ImplicitCastExpr 0x28414f0e9e0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28414f0e9a0 <col:5> 'int ()' Function 0x28414f0e840 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x28414f0ea20 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x28414f0e9c0 <col:18> 'char *' lvalue Var 0x28414e709c8 'passwd_malloc' 'char *'
|   `-ReturnStmt 0x28414f0eba0 <line:271:5, col:16>
|     `-ImplicitCastExpr 0x28414f0eb88 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x28414f0eb68 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x28414f0eb48 <col:13> 'int' lvalue Var 0x28414e71178 'ret' 'int'
|-FunctionDecl 0x28414f0eee0 <line:284:1, line:421:1> line:284:14 used md5crypt 'char *(const char *, const char *, const char *)' static
| |-ParmVarDecl 0x28414f0eca8 <col:23, col:35> col:35 used passwd 'const char *'
| |-ParmVarDecl 0x28414f0ed28 <col:43, col:55> col:55 used magic 'const char *'
| |-ParmVarDecl 0x28414f0eda8 <col:62, col:74> col:74 used salt 'const char *'
| `-CompoundStmt 0x28414f0fd68 <line:285:1, line:421:1>
|   |-DeclStmt 0x28414f0c180 <line:287:5, col:40>
|   | `-VarDecl 0x28414f0c118 <col:5, col:39> col:17 used out_buf 'char [41]' static
|   |-DeclStmt 0x28414f0c218 <line:288:5, col:41>
|   | `-VarDecl 0x28414f0c1b0 <col:5, col:19> col:19 invalid buf 'unsigned char'
|   |-DeclStmt 0x28414f0c2b0 <line:289:5, col:19>
|   | `-VarDecl 0x28414f0c248 <col:5, col:11> col:11 used salt_out 'char *'
|   |-DeclStmt 0x28414f0c348 <line:290:5, col:10>
|   | `-VarDecl 0x28414f0c2e0 <col:5, col:9> col:9 used n 'int'
|   |-DeclStmt 0x28414f0c3e0 <line:291:5, col:19>
|   | `-VarDecl 0x28414f0c378 <col:5, col:18> col:18 used i 'unsigned int'
|   |-DeclStmt 0x28414f0c690 <line:293:5, col:43>
|   | |-VarDecl 0x28414f0c518 <col:5, col:12> col:12 used passwd_len 'size_t':'unsigned long long'
|   | |-VarDecl 0x28414f0c590 <col:5, col:24> col:24 used salt_len 'size_t':'unsigned long long'
|   | `-VarDecl 0x28414f0c608 <col:5, col:34> col:34 used magic_len 'size_t':'unsigned long long'
|   |-BinaryOperator 0x28414f0c7c0 <line:295:5, col:31> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x28414f0c6a8 <col:5> 'size_t':'unsigned long long' lvalue Var 0x28414f0c518 'passwd_len' 'size_t':'unsigned long long'
|   | `-CallExpr 0x28414f0c780 <col:18, col:31> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x28414f0c768 <col:18> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x28414f0c6e0 <col:18> 'unsigned long long (const char *)' Function 0x28414e22620 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x28414f0c7a8 <col:25> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x28414f0c700 <col:25> 'const char *' lvalue ParmVar 0x28414f0eca8 'passwd' 'const char *'
|   |-BinaryOperator 0x28414f0c8a8 <line:296:5, col:18> 'char' '='
|   | |-ArraySubscriptExpr 0x28414f0c858 <col:5, col:14> 'char' lvalue
|   | | |-ImplicitCastExpr 0x28414f0c840 <col:5> 'char *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28414f0c7e0 <col:5> 'char [41]' lvalue Var 0x28414f0c118 'out_buf' 'char [41]'
|   | | `-IntegerLiteral 0x28414f0c818 <col:13> 'int' 0
|   | `-ImplicitCastExpr 0x28414f0c890 <col:18> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x28414f0c878 <col:18> 'int' 36
|   |-BinaryOperator 0x28414f0c988 <line:297:5, col:18> 'char' '='
|   | |-ArraySubscriptExpr 0x28414f0c928 <col:5, col:14> 'char' lvalue
|   | | |-ImplicitCastExpr 0x28414f0c910 <col:5> 'char *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28414f0c8c8 <col:5> 'char [41]' lvalue Var 0x28414f0c118 'out_buf' 'char [41]'
|   | | `-IntegerLiteral 0x28414f0c8e8 <col:13> 'int' 1
|   | `-ImplicitCastExpr 0x28414f0c970 <col:18> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x28414f0c948 <col:18> 'int' 0
|   |-BinaryOperator 0x28414f0ca90 <line:298:5, col:29> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x28414f0c9a8 <col:5> 'size_t':'unsigned long long' lvalue Var 0x28414f0c608 'magic_len' 'size_t':'unsigned long long'
|   | `-CallExpr 0x28414f0ca50 <col:17, col:29> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x28414f0ca38 <col:17> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x28414f0c9e0 <col:17> 'unsigned long long (const char *)' Function 0x28414e22620 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x28414f0ca78 <col:24> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x28414f0ca00 <col:24> 'const char *' lvalue ParmVar 0x28414f0ed28 'magic' 'const char *'
|   |-IfStmt 0x28414f0cbf8 <line:300:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-BinaryOperator 0x28414f0cb28 <.//openssl//file_jk/before\apps\passwd.c:300:9, col:21> 'int' '>'
|   | | |-ImplicitCastExpr 0x28414f0caf8 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28414f0cab0 <col:9> 'size_t':'unsigned long long' lvalue Var 0x28414f0c608 'magic_len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x28414f0cb10 <col:21> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x28414f0cad0 <col:21> 'int' 4
|   | `-ReturnStmt 0x28414f0cbe8 <line:301:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |   `-ImplicitCastExpr 0x28414f0cbd0 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x28414f0cbb0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x28414f0cb88 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x28414f0cb48 <col:26> 'int' 0
|   |-CallExpr 0x28414f0cdd8 <.//openssl//file_jk/before\apps\passwd.c:303:5, col:52> 'int'
|   | |-ImplicitCastExpr 0x28414f0cdc0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28414f0cd00 <col:5> 'int ()' Function 0x28414f0cc38 'OPENSSL_strlcat' 'int ()'
|   | |-ImplicitCastExpr 0x28414f0ce10 <col:21> 'char *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28414f0cd20 <col:21> 'char [41]' lvalue Var 0x28414f0c118 'out_buf' 'char [41]'
|   | |-ImplicitCastExpr 0x28414f0ce28 <col:30> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x28414f0cd40 <col:30> 'const char *' lvalue ParmVar 0x28414f0ed28 'magic' 'const char *'
|   | `-UnaryExprOrTypeTraitExpr 0x28414f0cda0 <col:37, col:51> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x28414f0cd80 <col:43, col:51> 'char [41]' lvalue
|   |     `-DeclRefExpr 0x28414f0cd60 <col:44> 'char [41]' lvalue Var 0x28414f0c118 'out_buf' 'char [41]' non_odr_use_unevaluated
|   |-CallExpr 0x28414f0cf18 <line:304:5, col:50> 'int'
|   | |-ImplicitCastExpr 0x28414f0cf00 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28414f0ce40 <col:5> 'int ()' Function 0x28414f0cc38 'OPENSSL_strlcat' 'int ()'
|   | |-ImplicitCastExpr 0x28414f0cf50 <col:21> 'char *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28414f0ce60 <col:21> 'char [41]' lvalue Var 0x28414f0c118 'out_buf' 'char [41]'
|   | |-ImplicitCastExpr 0x28414f0cf68 <col:30> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x28414f0ce80 <col:30> 'char [2]' lvalue "$"
|   | `-UnaryExprOrTypeTraitExpr 0x28414f0cee0 <col:35, col:49> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x28414f0cec0 <col:41, col:49> 'char [41]' lvalue
|   |     `-DeclRefExpr 0x28414f0cea0 <col:42> 'char [41]' lvalue Var 0x28414f0c118 'out_buf' 'char [41]' non_odr_use_unevaluated
|   |-CallExpr 0x28414f140e8 <line:305:5, col:51> 'int'
|   | |-ImplicitCastExpr 0x28414f140d0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28414f0cf80 <col:5> 'int ()' Function 0x28414f0cc38 'OPENSSL_strlcat' 'int ()'
|   | |-ImplicitCastExpr 0x28414f14120 <col:21> 'char *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28414f0cfa0 <col:21> 'char [41]' lvalue Var 0x28414f0c118 'out_buf' 'char [41]'
|   | |-ImplicitCastExpr 0x28414f14138 <col:30> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x28414f0cfc0 <col:30> 'const char *' lvalue ParmVar 0x28414f0eda8 'salt' 'const char *'
|   | `-UnaryExprOrTypeTraitExpr 0x28414f140b0 <col:36, col:50> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x28414f14090 <col:42, col:50> 'char [41]' lvalue
|   |     `-DeclRefExpr 0x28414f14070 <col:43> 'char [41]' lvalue Var 0x28414f0c118 'out_buf' 'char [41]' non_odr_use_unevaluated
|   |-IfStmt 0x28414f14370 <line:307:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-BinaryOperator 0x28414f142a0 <.//openssl//file_jk/before\apps\passwd.c:307:9, col:31> 'int' '>'
|   | | |-CallExpr 0x28414f141c0 <col:9, col:23> 'unsigned long long'
|   | | | |-ImplicitCastExpr 0x28414f141a8 <col:9> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x28414f14150 <col:9> 'unsigned long long (const char *)' Function 0x28414e22620 'strlen' 'unsigned long long (const char *)'
|   | | | `-ImplicitCastExpr 0x28414f14200 <col:16> 'const char *' <NoOp>
|   | | |   `-ImplicitCastExpr 0x28414f141e8 <col:16> 'char *' <ArrayToPointerDecay>
|   | | |     `-DeclRefExpr 0x28414f14170 <col:16> 'char [41]' lvalue Var 0x28414f0c118 'out_buf' 'char [41]'
|   | | `-ImplicitCastExpr 0x28414f14288 <col:27, col:31> 'unsigned long long' <IntegralCast>
|   | |   `-BinaryOperator 0x28414f14268 <col:27, col:31> 'int' '+'
|   | |     |-IntegerLiteral 0x28414f14218 <col:27> 'int' 6
|   | |     `-IntegerLiteral 0x28414f14240 <col:31> 'int' 8
|   | `-ReturnStmt 0x28414f14360 <line:308:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |   `-ImplicitCastExpr 0x28414f14348 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x28414f14328 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x28414f14300 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x28414f142c0 <col:26> 'int' 0
|   |-BinaryOperator 0x28414f14498 <.//openssl//file_jk/before\apps\passwd.c:310:5, col:30> 'char *' '='
|   | |-DeclRefExpr 0x28414f14388 <col:5> 'char *' lvalue Var 0x28414f0c248 'salt_out' 'char *'
|   | `-BinaryOperator 0x28414f14478 <col:16, col:30> 'char *' '+'
|   |   |-BinaryOperator 0x28414f14420 <col:16, col:26> 'char *' '+'
|   |   | |-ImplicitCastExpr 0x28414f14408 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x28414f143c0 <col:16> 'char [41]' lvalue Var 0x28414f0c118 'out_buf' 'char [41]'
|   |   | `-IntegerLiteral 0x28414f143e0 <col:26> 'int' 2
|   |   `-ImplicitCastExpr 0x28414f14460 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x28414f14440 <col:30> 'size_t':'unsigned long long' lvalue Var 0x28414f0c608 'magic_len' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x28414f145b8 <line:311:5, col:31> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x28414f144b8 <col:5> 'size_t':'unsigned long long' lvalue Var 0x28414f0c590 'salt_len' 'size_t':'unsigned long long'
|   | `-CallExpr 0x28414f14560 <col:16, col:31> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x28414f14548 <col:16> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x28414f144f0 <col:16> 'unsigned long long (const char *)' Function 0x28414e22620 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x28414f145a0 <col:23> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x28414f14588 <col:23> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x28414f14510 <col:23> 'char *' lvalue Var 0x28414f0c248 'salt_out' 'char *'
|   |-IfStmt 0x28414f14720 <line:313:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-BinaryOperator 0x28414f14650 <.//openssl//file_jk/before\apps\passwd.c:313:9, col:20> 'int' '>'
|   | | |-ImplicitCastExpr 0x28414f14620 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28414f145d8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x28414f0c590 'salt_len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x28414f14638 <col:20> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x28414f145f8 <col:20> 'int' 8
|   | `-ReturnStmt 0x28414f14710 <line:314:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |   `-ImplicitCastExpr 0x28414f146f8 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x28414f146d8 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x28414f146b0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x28414f14670 <col:26> 'int' 0
|   |-IfStmt 0x28414f14f48 <.//openssl//file_jk/before\apps\passwd.c:317:5, line:324:14>
|   | |-OpaqueValueExpr 0x28414f14f30 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x28414f14f18 <col:9, col:14> 'err' 0x28414f14ec8
|   |-IfStmt 0x28414f0d3c8 <line:327:5, line:333:14>
|   | |-OpaqueValueExpr 0x28414f0d3b0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x28414f0d398 <col:9, col:14> 'err' 0x28414f14ec8
|   |-IfStmt 0x28414f0d5b8 <line:339:5, line:340:14>
|   | |-OpaqueValueExpr 0x28414f0d5a0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x28414f0d588 <col:9, col:14> 'err' 0x28414f14ec8
|   |-BinaryOperator 0x28414f0d658 <line:342:5, col:9> 'int' '='
|   | |-DeclRefExpr 0x28414f0d5d0 <col:5> 'int' lvalue Var 0x28414f0c2e0 'n' 'int'
|   | `-ImplicitCastExpr 0x28414f0d640 <col:9> 'int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x28414f0d628 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x28414f0d608 <col:9> 'size_t':'unsigned long long' lvalue Var 0x28414f0c518 'passwd_len' 'size_t':'unsigned long long'
|   |-WhileStmt 0x28414f0da08 <line:343:5, line:347:5>
|   | |-ImplicitCastExpr 0x28414f0d698 <line:343:12> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x28414f0d678 <col:12> 'int' lvalue Var 0x28414f0c2e0 'n' 'int'
|   | `-CompoundStmt 0x28414f0d9e8 <col:15, line:347:5>
|   |   |-IfStmt 0x28414f0d940 <line:344:9, line:345:18>
|   |   | |-OpaqueValueExpr 0x28414f0d928 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x28414f0d910 <col:13, col:18> 'err' 0x28414f14ec8
|   |   `-CompoundAssignOperator 0x28414f0d9b8 <line:346:9, col:15> 'int' '>>=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x28414f0d958 <col:9> 'int' lvalue Var 0x28414f0c2e0 'n' 'int'
|   |     `-IntegerLiteral 0x28414f0d978 <col:15> 'int' 1
|   |-IfStmt 0x28414f0db90 <line:348:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-OpaqueValueExpr 0x28414f0db78 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x28414f0db68 <.//openssl//file_jk/before\apps\passwd.c:349:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |   `-ImplicitCastExpr 0x28414f0db50 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x28414f0db30 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x28414f0db08 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x28414f0dac8 <col:26> 'int' 0
|   |-ForStmt 0x28414f157c0 <.//openssl//file_jk/before\apps\passwd.c:351:5, line:372:5>
|   | |-BinaryOperator 0x28414f0dc08 <line:351:10, col:14> 'unsigned int' '='
|   | | |-DeclRefExpr 0x28414f0dba8 <col:10> 'unsigned int' lvalue Var 0x28414f0c378 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x28414f0dbf0 <col:14> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x28414f0dbc8 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x28414f0dca0 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x28414f0dc70 <col:17> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28414f0dc28 <col:17> 'unsigned int' lvalue Var 0x28414f0c378 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x28414f0dc88 <col:21> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x28414f0dc48 <col:21> 'int' 1000
|   | |-UnaryOperator 0x28414f0dce0 <col:27, col:28> 'unsigned int' postfix '++'
|   | | `-DeclRefExpr 0x28414f0dcc0 <col:27> 'unsigned int' lvalue Var 0x28414f0c378 'i' 'unsigned int'
|   | `-CompoundStmt 0x28414f15780 <col:32, line:372:5>
|   |   |-IfStmt 0x28414f0de28 <line:352:9, line:353:18>
|   |   | |-OpaqueValueExpr 0x28414f0de10 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x28414f0ddf8 <col:13, col:18> 'err' 0x28414f14ec8
|   |   |-IfStmt 0x28414f15128 <line:354:9, line:357:18>
|   |   | |-OpaqueValueExpr 0x28414f15110 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x28414f150f8 <col:13, col:18> 'err' 0x28414f14ec8
|   |   |-IfStmt 0x28414f15298 <line:358:9, line:361:9>
|   |   | |-BinaryOperator 0x28414f151b8 <line:358:13, col:17> 'unsigned int' '%'
|   |   | | |-ImplicitCastExpr 0x28414f15188 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x28414f15140 <col:13> 'unsigned int' lvalue Var 0x28414f0c378 'i' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x28414f151a0 <col:17> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x28414f15160 <col:17> 'int' 3
|   |   | `-CompoundStmt 0x28414f15280 <col:20, line:361:9>
|   |   |   `-IfStmt 0x28414f15268 <line:359:13, line:360:22>
|   |   |     |-OpaqueValueExpr 0x28414f15250 <<invalid sloc>> '_Bool'
|   |   |     `-GotoStmt 0x28414f15238 <col:17, col:22> 'err' 0x28414f14ec8
|   |   |-IfStmt 0x28414f15408 <line:362:9, line:365:9>
|   |   | |-BinaryOperator 0x28414f15328 <line:362:13, col:17> 'unsigned int' '%'
|   |   | | |-ImplicitCastExpr 0x28414f152f8 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x28414f152b0 <col:13> 'unsigned int' lvalue Var 0x28414f0c378 'i' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x28414f15310 <col:17> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x28414f152d0 <col:17> 'int' 7
|   |   | `-CompoundStmt 0x28414f153f0 <col:20, line:365:9>
|   |   |   `-IfStmt 0x28414f153d8 <line:363:13, line:364:22>
|   |   |     |-OpaqueValueExpr 0x28414f153c0 <<invalid sloc>> '_Bool'
|   |   |     `-GotoStmt 0x28414f153a8 <col:17, col:22> 'err' 0x28414f14ec8
|   |   |-IfStmt 0x28414f15678 <line:366:9, line:369:22>
|   |   | |-OpaqueValueExpr 0x28414f15660 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x28414f15648 <col:17, col:22> 'err' 0x28414f14ec8
|   |   `-IfStmt 0x28414f15768 <line:370:9, line:371:22>
|   |     |-OpaqueValueExpr 0x28414f15750 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x28414f15738 <col:17, col:22> 'err' 0x28414f14ec8
|   |-CompoundStmt 0x28414f0fbb0 <line:378:5, line:413:5>
|   | |-DeclStmt 0x28414f15ab8 <line:380:9, col:44>
|   | | `-VarDecl 0x28414f15a50 <col:9, col:23> col:23 invalid buf_perm 'unsigned char'
|   | |-DeclStmt 0x28414f15be8 <line:381:9, col:25>
|   | | |-VarDecl 0x28414f15ae8 <col:9, col:13> col:13 used dest 'int'
|   | | `-VarDecl 0x28414f15b68 <col:9, col:19> col:19 used source 'int'
|   | |-DeclStmt 0x28414f15c80 <line:382:9, col:21>
|   | | `-VarDecl 0x28414f15c18 <col:9, col:15> col:15 used output 'char *'
|   | |-BinaryOperator 0x28414f16408 <line:395:9, col:29> 'char *' '='
|   | | |-DeclRefExpr 0x28414f16340 <col:9> 'char *' lvalue Var 0x28414f15c18 'output' 'char *'
|   | | `-BinaryOperator 0x28414f163e8 <col:18, col:29> 'char *' '+'
|   | |   |-ImplicitCastExpr 0x28414f163b8 <col:18> 'char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x28414f16378 <col:18> 'char *' lvalue Var 0x28414f0c248 'salt_out' 'char *'
|   | |   `-ImplicitCastExpr 0x28414f163d0 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     `-DeclRefExpr 0x28414f16398 <col:29> 'size_t':'unsigned long long' lvalue Var 0x28414f0c590 'salt_len' 'size_t':'unsigned long long'
|   | |-CStyleCastExpr 0x28414f168f8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
|   | | `-ParenExpr 0x28414f168d8 <col:35, col:128> 'int'
|   | |   `-BinaryOperator 0x28414f16888 <col:37, col:126> 'int' '||'
|   | |     |-ParenExpr 0x28414f165f0 <col:37, col:53> 'int'
|   | |     | `-UnaryOperator 0x28414f165d8 <col:38, col:52> 'int' prefix '!' cannot overflow
|   | |     |   `-UnaryOperator 0x28414f165c0 <col:39, col:52> 'int' prefix '!' cannot overflow
|   | |     |     `-ParenExpr 0x28414f165a0 <col:40, col:52> 'int'
|   | |     |       `-BinaryOperator 0x28414f16580 <.//openssl//file_jk/before\apps\passwd.c:396:16, col:50> 'int' '=='
|   | |     |         |-ImplicitCastExpr 0x28414f16568 <col:16> 'char *' <LValueToRValue>
|   | |     |         | `-DeclRefExpr 0x28414f16428 <col:16> 'char *' lvalue Var 0x28414f15c18 'output' 'char *'
|   | |     |         `-BinaryOperator 0x28414f16548 <col:26, col:50> 'char *' '+'
|   | |     |           |-ImplicitCastExpr 0x28414f16530 <col:26> 'char *' <ArrayToPointerDecay>
|   | |     |           | `-DeclRefExpr 0x28414f16448 <col:26> 'char [41]' lvalue Var 0x28414f0c118 'out_buf' 'char [41]'
|   | |     |           `-CallExpr 0x28414f164d8 <col:36, col:50> 'unsigned long long'
|   | |     |             |-ImplicitCastExpr 0x28414f164c0 <col:36> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   | |     |             | `-DeclRefExpr 0x28414f16468 <col:36> 'unsigned long long (const char *)' Function 0x28414e22620 'strlen' 'unsigned long long (const char *)'
|   | |     |             `-ImplicitCastExpr 0x28414f16518 <col:43> 'const char *' <NoOp>
|   | |     |               `-ImplicitCastExpr 0x28414f16500 <col:43> 'char *' <ArrayToPointerDecay>
|   | |     |                 `-DeclRefExpr 0x28414f16488 <col:43> 'char [41]' lvalue Var 0x28414f0c118 'out_buf' 'char [41]'
|   | |     `-ParenExpr 0x28414f16868 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   | |       `-BinaryOperator 0x28414f16848 <col:59, col:125> 'int' ','
|   | |         |-CallExpr 0x28414f16770 <col:59, col:122> 'void'
|   | |         | |-ImplicitCastExpr 0x28414f16758 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |         | | `-DeclRefExpr 0x28414f16610 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x28414eb5c20 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   | |         | |-ImplicitCastExpr 0x28414f167c0 <<scratch space>:18:1> 'const wchar_t *' <NoOp>
|   | |         | | `-ImplicitCastExpr 0x28414f167a8 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |         | |   `-StringLiteral 0x28414f16668 <col:1> 'unsigned short [36]' lvalue L"output == out_buf + strlen(out_buf)"
|   | |         | |-ImplicitCastExpr 0x28414f167f0 <line:20:1> 'const wchar_t *' <NoOp>
|   | |         | | `-ImplicitCastExpr 0x28414f167d8 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |         | |   `-StringLiteral 0x28414f166c8 <col:1> 'unsigned short [41]' lvalue L".//openssl//file_jk/before\\apps\\passwd.c"
|   | |         | `-ImplicitCastExpr 0x28414f16808 <line:21:1> 'unsigned int' <IntegralCast>
|   | |         |   `-IntegerLiteral 0x28414f16730 <col:1> 'int' 396
|   | |         `-IntegerLiteral 0x28414f16820 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   | |-BinaryOperator 0x28414f169a0 <.//openssl//file_jk/before\apps\passwd.c:398:9, col:21> 'char' '='
|   | | |-UnaryOperator 0x28414f16958 <col:9, col:16> 'char' lvalue prefix '*' cannot overflow
|   | | | `-UnaryOperator 0x28414f16940 <col:10, col:16> 'char *' postfix '++'
|   | | |   `-DeclRefExpr 0x28414f16920 <col:10> 'char *' lvalue Var 0x28414f15c18 'output' 'char *'
|   | | `-ImplicitCastExpr 0x28414f16988 <col:21> 'char' <IntegralCast>
|   | |   `-CharacterLiteral 0x28414f16970 <col:21> 'int' 36
|   | |-ForStmt 0x28414f0f0b0 <line:400:9, line:407:9>
|   | | |-BinaryOperator 0x28414f16a20 <line:400:14, col:18> 'unsigned int' '='
|   | | | |-DeclRefExpr 0x28414f169c0 <col:14> 'unsigned int' lvalue Var 0x28414f0c378 'i' 'unsigned int'
|   | | | `-ImplicitCastExpr 0x28414f16a08 <col:18> 'unsigned int' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28414f169e0 <col:18> 'int' 0
|   | | |-<<<NULL>>>
|   | | |-BinaryOperator 0x28414f16ab8 <col:21, col:25> 'int' '<'
|   | | | |-ImplicitCastExpr 0x28414f16a88 <col:21> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x28414f16a40 <col:21> 'unsigned int' lvalue Var 0x28414f0c378 'i' 'unsigned int'
|   | | | `-ImplicitCastExpr 0x28414f16aa0 <col:25> 'unsigned int' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28414f16a60 <col:25> 'int' 15
|   | | |-CompoundAssignOperator 0x28414f16b38 <col:29, col:34> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | | | |-DeclRefExpr 0x28414f16ad8 <col:29> 'unsigned int' lvalue Var 0x28414f0c378 'i' 'unsigned int'
|   | | | `-ImplicitCastExpr 0x28414f16b20 <col:34> 'unsigned int' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28414f16af8 <col:34> 'int' 3
|   | | `-CompoundStmt 0x28414f0f0a0 <col:37, line:407:9>
|   | |-CStyleCastExpr 0x28414f0f4a0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
|   | | `-ParenExpr 0x28414f0f480 <col:35, col:128> 'int'
|   | |   `-BinaryOperator 0x28414f0f430 <col:37, col:126> 'int' '||'
|   | |     |-ParenExpr 0x28414f0f1d0 <col:37, col:53> 'int'
|   | |     | `-UnaryOperator 0x28414f0f1b8 <col:38, col:52> 'int' prefix '!' cannot overflow
|   | |     |   `-UnaryOperator 0x28414f0f1a0 <col:39, col:52> 'int' prefix '!' cannot overflow
|   | |     |     `-ParenExpr 0x28414f0f180 <col:40, col:52> 'int'
|   | |     |       `-BinaryOperator 0x28414f0f160 <.//openssl//file_jk/before\apps\passwd.c:408:16, col:21> 'int' '=='
|   | |     |         |-ImplicitCastExpr 0x28414f0f130 <col:16> 'unsigned int' <LValueToRValue>
|   | |     |         | `-DeclRefExpr 0x28414f0f0e8 <col:16> 'unsigned int' lvalue Var 0x28414f0c378 'i' 'unsigned int'
|   | |     |         `-ImplicitCastExpr 0x28414f0f148 <col:21> 'unsigned int' <IntegralCast>
|   | |     |           `-IntegerLiteral 0x28414f0f108 <col:21> 'int' 15
|   | |     `-ParenExpr 0x28414f0f410 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   | |       `-BinaryOperator 0x28414f0f3f0 <col:59, col:125> 'int' ','
|   | |         |-CallExpr 0x28414f0f318 <col:59, col:122> 'void'
|   | |         | |-ImplicitCastExpr 0x28414f0f300 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |         | | `-DeclRefExpr 0x28414f0f1f0 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x28414eb5c20 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   | |         | |-ImplicitCastExpr 0x28414f0f368 <<scratch space>:23:1> 'const wchar_t *' <NoOp>
|   | |         | | `-ImplicitCastExpr 0x28414f0f350 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |         | |   `-StringLiteral 0x28414f0f248 <col:1> 'unsigned short [8]' lvalue L"i == 15"
|   | |         | |-ImplicitCastExpr 0x28414f0f398 <line:25:1> 'const wchar_t *' <NoOp>
|   | |         | | `-ImplicitCastExpr 0x28414f0f380 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |         | |   `-StringLiteral 0x28414f0f270 <col:1> 'unsigned short [41]' lvalue L".//openssl//file_jk/before\\apps\\passwd.c"
|   | |         | `-ImplicitCastExpr 0x28414f0f3b0 <line:26:1> 'unsigned int' <IntegralCast>
|   | |         |   `-IntegerLiteral 0x28414f0f2d8 <col:1> 'int' 408
|   | |         `-IntegerLiteral 0x28414f0f3c8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   | |-BinaryOperator 0x28414f0f6c8 <.//openssl//file_jk/before\apps\passwd.c:411:9, col:19> 'char' '='
|   | | |-UnaryOperator 0x28414f0f670 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow
|   | | | `-ImplicitCastExpr 0x28414f0f658 <col:10> 'char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x28414f0f638 <col:10> 'char *' lvalue Var 0x28414f15c18 'output' 'char *'
|   | | `-ImplicitCastExpr 0x28414f0f6b0 <col:19> 'char' <IntegralCast>
|   | |   `-IntegerLiteral 0x28414f0f688 <col:19> 'int' 0
|   | `-CStyleCastExpr 0x28414f0fb88 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
|   |   `-ParenExpr 0x28414f0fb68 <col:35, col:128> 'int'
|   |     `-BinaryOperator 0x28414f0fb18 <col:37, col:126> 'int' '||'
|   |       |-ParenExpr 0x28414f0f880 <col:37, col:53> 'int'
|   |       | `-UnaryOperator 0x28414f0f868 <col:38, col:52> 'int' prefix '!' cannot overflow
|   |       |   `-UnaryOperator 0x28414f0f850 <col:39, col:52> 'int' prefix '!' cannot overflow
|   |       |     `-ParenExpr 0x28414f0f830 <col:40, col:52> 'int'
|   |       |       `-BinaryOperator 0x28414f0f810 <.//openssl//file_jk/before\apps\passwd.c:412:16, col:48> 'int' '<'
|   |       |         |-CallExpr 0x28414f0f758 <col:16, col:30> 'unsigned long long'
|   |       |         | |-ImplicitCastExpr 0x28414f0f740 <col:16> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |       |         | | `-DeclRefExpr 0x28414f0f6e8 <col:16> 'unsigned long long (const char *)' Function 0x28414e22620 'strlen' 'unsigned long long (const char *)'
|   |       |         | `-ImplicitCastExpr 0x28414f0f798 <col:23> 'const char *' <NoOp>
|   |       |         |   `-ImplicitCastExpr 0x28414f0f780 <col:23> 'char *' <ArrayToPointerDecay>
|   |       |         |     `-DeclRefExpr 0x28414f0f708 <col:23> 'char [41]' lvalue Var 0x28414f0c118 'out_buf' 'char [41]'
|   |       |         `-UnaryExprOrTypeTraitExpr 0x28414f0f7f0 <col:34, col:48> 'unsigned long long' sizeof
|   |       |           `-ParenExpr 0x28414f0f7d0 <col:40, col:48> 'char [41]' lvalue
|   |       |             `-DeclRefExpr 0x28414f0f7b0 <col:41> 'char [41]' lvalue Var 0x28414f0c118 'out_buf' 'char [41]' non_odr_use_unevaluated
|   |       `-ParenExpr 0x28414f0faf8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   |         `-BinaryOperator 0x28414f0fad8 <col:59, col:125> 'int' ','
|   |           |-CallExpr 0x28414f0fa00 <col:59, col:122> 'void'
|   |           | |-ImplicitCastExpr 0x28414f0f9e8 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |           | | `-DeclRefExpr 0x28414f0f8a0 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x28414eb5c20 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   |           | |-ImplicitCastExpr 0x28414f0fa50 <<scratch space>:28:1> 'const wchar_t *' <NoOp>
|   |           | | `-ImplicitCastExpr 0x28414f0fa38 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   |           | |   `-StringLiteral 0x28414f0f8f8 <col:1> 'unsigned short [34]' lvalue L"strlen(out_buf) < sizeof(out_buf)"
|   |           | |-ImplicitCastExpr 0x28414f0fa80 <line:30:1> 'const wchar_t *' <NoOp>
|   |           | | `-ImplicitCastExpr 0x28414f0fa68 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   |           | |   `-StringLiteral 0x28414f0f958 <col:1> 'unsigned short [41]' lvalue L".//openssl//file_jk/before\\apps\\passwd.c"
|   |           | `-ImplicitCastExpr 0x28414f0fa98 <line:31:1> 'unsigned int' <IntegralCast>
|   |           |   `-IntegerLiteral 0x28414f0f9c0 <col:1> 'int' 412
|   |           `-IntegerLiteral 0x28414f0fab0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   |-ReturnStmt 0x28414f0fc48 <.//openssl//file_jk/before\apps\passwd.c:415:5, col:12>
|   | `-ImplicitCastExpr 0x28414f0fc30 <col:12> 'char *' <ArrayToPointerDecay>
|   |   `-DeclRefExpr 0x28414f0fc10 <col:12> 'char [41]' lvalue Var 0x28414f0c118 'out_buf' 'char [41]'
|   |-LabelStmt 0x28414f0fc80 <line:417:2, col:5> 'err'
|   | `-NullStmt 0x28414f0fc78 <col:5>
|   `-ReturnStmt 0x28414f0fd58 <line:420:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|     `-ImplicitCastExpr 0x28414f0fd40 <col:17, col:27> 'char *' <NullToPointer>
|       `-ParenExpr 0x28414f0fd20 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x28414f0fcf8 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x28414f0fcb8 <col:26> 'int' 0
`-FunctionDecl 0x28414f1e5f8 <.//openssl//file_jk/before\apps\passwd.c:424:1, line:504:1> line:424:12 invalid do_passwd 'int (int, char **, char **, char *, int *, int, int, int, size_t, int, int, int)' static
  |-ParmVarDecl 0x28414f0fe78 <col:22, col:26> col:26 used passed_salt 'int'
  |-ParmVarDecl 0x28414f0fef8 <col:39, col:46> col:46 used salt_p 'char **'
  |-ParmVarDecl 0x28414f0ff78 <col:54, col:61> col:61 used salt_malloc_p 'char **'
  |-ParmVarDecl 0x28414f1e110 <line:425:22, col:28> col:28 used passwd 'char *'
  |-ParmVarDecl 0x28414f1e190 <col:36, col:41> col:41 invalid out 'int *'
  |-ParmVarDecl 0x28414f1e210 <col:46, col:50> col:50 used quiet 'int'
  |-ParmVarDecl 0x28414f1e290 <col:57, col:61> col:61 used table 'int'
  |-ParmVarDecl 0x28414f1e310 <line:426:22, col:26> col:26 used reverse 'int'
  |-ParmVarDecl 0x28414f1e388 <col:35, col:42> col:42 used pw_maxlen 'size_t':'unsigned long long'
  |-ParmVarDecl 0x28414f1e408 <col:53, col:57> col:57 used usecrypt 'int'
  |-ParmVarDecl 0x28414f1e488 <col:67, col:71> col:71 used use1 'int'
  |-ParmVarDecl 0x28414f1e508 <line:427:22, col:26> col:26 used useapr1 'int'
  `-CompoundStmt 0x28414f1d630 <line:428:1, line:504:1>
    |-DeclStmt 0x28414f1e830 <line:429:5, col:22>
    | `-VarDecl 0x28414f1e728 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\apps\passwd.c:429:11 used hash 'char *' cinit
    |   `-ImplicitCastExpr 0x28414f1e818 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
    |     `-ParenExpr 0x28414f1e7f8 <col:17, col:27> 'void *'
    |       `-CStyleCastExpr 0x28414f1e7d0 <col:18, col:26> 'void *' <NullToPointer>
    |         `-IntegerLiteral 0x28414f1e790 <col:26> 'int' 0
    |-CStyleCastExpr 0x28414f1ec50 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
    | `-ParenExpr 0x28414f1ec30 <col:35, col:128> 'int'
    |   `-BinaryOperator 0x28414f1ebe0 <col:37, col:126> 'int' '||'
    |     |-ParenExpr 0x28414f1e9a8 <col:37, col:53> 'int'
    |     | `-UnaryOperator 0x28414f1e990 <col:38, col:52> 'int' prefix '!' cannot overflow
    |     |   `-UnaryOperator 0x28414f1e978 <col:39, col:52> 'int' prefix '!' cannot overflow
    |     |     `-ParenExpr 0x28414f1e958 <col:40, col:52> 'int'
    |     |       `-BinaryOperator 0x28414f1e938 <.//openssl//file_jk/before\apps\passwd.c:431:12, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
    |     |         |-ImplicitCastExpr 0x28414f1e908 <.//openssl//file_jk/before\apps\passwd.c:431:12> 'char **' <LValueToRValue>
    |     |         | `-DeclRefExpr 0x28414f1e848 <col:12> 'char **' lvalue ParmVar 0x28414f0fef8 'salt_p' 'char **'
    |     |         `-ImplicitCastExpr 0x28414f1e920 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char **' <BitCast>
    |     |           `-ParenExpr 0x28414f1e8e8 <col:17, col:27> 'void *'
    |     |             `-CStyleCastExpr 0x28414f1e8c0 <col:18, col:26> 'void *' <NullToPointer>
    |     |               `-IntegerLiteral 0x28414f1e880 <col:26> 'int' 0
    |     `-ParenExpr 0x28414f1ebc0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
    |       `-BinaryOperator 0x28414f1eba0 <col:59, col:125> 'int' ','
    |         |-CallExpr 0x28414f1eac8 <col:59, col:122> 'void'
    |         | |-ImplicitCastExpr 0x28414f1eab0 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x28414f1e9c8 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x28414eb5c20 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
    |         | |-ImplicitCastExpr 0x28414f1eb18 <<scratch space>:33:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x28414f1eb00 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x28414f1e9e8 <col:1> 'unsigned short [15]' lvalue L"salt_p != NULL"
    |         | |-ImplicitCastExpr 0x28414f1eb48 <line:35:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x28414f1eb30 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x28414f1ea20 <col:1> 'unsigned short [41]' lvalue L".//openssl//file_jk/before\\apps\\passwd.c"
    |         | `-ImplicitCastExpr 0x28414f1eb60 <line:36:1> 'unsigned int' <IntegralCast>
    |         |   `-IntegerLiteral 0x28414f1ea88 <col:1> 'int' 431
    |         `-IntegerLiteral 0x28414f1eb78 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
    |-CStyleCastExpr 0x28414f1f0d0 <col:29, col:128> 'void' <ToVoid>
    | `-ParenExpr 0x28414f1f0b0 <col:35, col:128> 'int'
    |   `-BinaryOperator 0x28414f1f060 <col:37, col:126> 'int' '||'
    |     |-ParenExpr 0x28414f1edd8 <col:37, col:53> 'int'
    |     | `-UnaryOperator 0x28414f1edc0 <col:38, col:52> 'int' prefix '!' cannot overflow
    |     |   `-UnaryOperator 0x28414f1eda8 <col:39, col:52> 'int' prefix '!' cannot overflow
    |     |     `-ParenExpr 0x28414f1ed88 <col:40, col:52> 'int'
    |     |       `-BinaryOperator 0x28414f1ed68 <.//openssl//file_jk/before\apps\passwd.c:432:12, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
    |     |         |-ImplicitCastExpr 0x28414f1ed38 <.//openssl//file_jk/before\apps\passwd.c:432:12> 'char **' <LValueToRValue>
    |     |         | `-DeclRefExpr 0x28414f1ec78 <col:12> 'char **' lvalue ParmVar 0x28414f0ff78 'salt_malloc_p' 'char **'
    |     |         `-ImplicitCastExpr 0x28414f1ed50 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char **' <BitCast>
    |     |           `-ParenExpr 0x28414f1ed18 <col:17, col:27> 'void *'
    |     |             `-CStyleCastExpr 0x28414f1ecf0 <col:18, col:26> 'void *' <NullToPointer>
    |     |               `-IntegerLiteral 0x28414f1ecb0 <col:26> 'int' 0
    |     `-ParenExpr 0x28414f1f040 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
    |       `-BinaryOperator 0x28414f1f020 <col:59, col:125> 'int' ','
    |         |-CallExpr 0x28414f1ef48 <col:59, col:122> 'void'
    |         | |-ImplicitCastExpr 0x28414f1ef30 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x28414f1edf8 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x28414eb5c20 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
    |         | |-ImplicitCastExpr 0x28414f1ef98 <<scratch space>:38:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x28414f1ef80 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x28414f1ee58 <col:1> 'unsigned short [22]' lvalue L"salt_malloc_p != NULL"
    |         | |-ImplicitCastExpr 0x28414f1efc8 <line:40:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x28414f1efb0 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x28414f1eea0 <col:1> 'unsigned short [41]' lvalue L".//openssl//file_jk/before\\apps\\passwd.c"
    |         | `-ImplicitCastExpr 0x28414f1efe0 <line:41:1> 'unsigned int' <IntegralCast>
    |         |   `-IntegerLiteral 0x28414f1ef08 <col:1> 'int' 432
    |         `-IntegerLiteral 0x28414f1eff8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
    |-IfStmt 0x28414f1cad8 <.//openssl//file_jk/before\apps\passwd.c:435:5, line:466:5>
    | |-UnaryOperator 0x28414f19110 <line:435:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x28414f190f8 <col:10> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x28414f190c0 <col:10> 'int' lvalue ParmVar 0x28414f0fe78 'passed_salt' 'int'
    | `-CompoundStmt 0x28414f1cab8 <col:23, line:466:5>
    |   |-IfStmt 0x28414f19e70 <line:437:9, line:449:9>
    |   | |-ImplicitCastExpr 0x28414f19160 <line:437:13> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x28414f19128 <col:13> 'int' lvalue ParmVar 0x28414f1e408 'usecrypt' 'int'
    |   | `-CompoundStmt 0x28414f19e38 <col:23, line:449:9>
    |   |   |-IfStmt 0x28414f19480 <line:438:13, line:439:71>
    |   |   | |-BinaryOperator 0x28414f19280 <line:438:17, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
    |   |   | | |-ImplicitCastExpr 0x28414f19250 <.//openssl//file_jk/before\apps\passwd.c:438:17, col:18> 'char *' <LValueToRValue>
    |   |   | | | `-UnaryOperator 0x28414f191b0 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
    |   |   | | |   `-ImplicitCastExpr 0x28414f19198 <col:18> 'char **' <LValueToRValue>
    |   |   | | |     `-DeclRefExpr 0x28414f19178 <col:18> 'char **' lvalue ParmVar 0x28414f0ff78 'salt_malloc_p' 'char **'
    |   |   | | `-ImplicitCastExpr 0x28414f19268 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
    |   |   | |   `-ParenExpr 0x28414f19230 <col:17, col:27> 'void *'
    |   |   | |     `-CStyleCastExpr 0x28414f19208 <col:18, col:26> 'void *' <NullToPointer>
    |   |   | |       `-IntegerLiteral 0x28414f191c8 <col:26> 'int' 0
    |   |   | `-BinaryOperator 0x28414f19460 <.//openssl//file_jk/before\apps\passwd.c:439:17, col:71> 'char *' '='
    |   |   |   |-UnaryOperator 0x28414f192d8 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
    |   |   |   | `-ImplicitCastExpr 0x28414f192c0 <col:18> 'char **' <LValueToRValue>
    |   |   |   |   `-DeclRefExpr 0x28414f192a0 <col:18> 'char **' lvalue ParmVar 0x28414f0fef8 'salt_p' 'char **'
    |   |   |   `-BinaryOperator 0x28414f19440 <col:27, col:71> 'char *' '='
    |   |   |     |-UnaryOperator 0x28414f19328 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
    |   |   |     | `-ImplicitCastExpr 0x28414f19310 <col:28> 'char **' <LValueToRValue>
    |   |   |     |   `-DeclRefExpr 0x28414f192f0 <col:28> 'char **' lvalue ParmVar 0x28414f0ff78 'salt_malloc_p' 'char **'
    |   |   |     `-ImplicitCastExpr 0x28414f19428 <col:44, col:71> 'char *' <BitCast>
    |   |   |       `-CallExpr 0x28414f193c8 <col:44, col:71> 'void *'
    |   |   |         |-ImplicitCastExpr 0x28414f193b0 <col:44> 'void *(*)(int, const char *)' <FunctionToPointerDecay>
    |   |   |         | `-DeclRefExpr 0x28414f19340 <col:44> 'void *(int, const char *)' Function 0x28414e65bb0 'app_malloc' 'void *(int, const char *)'
    |   |   |         |-IntegerLiteral 0x28414f19360 <col:55> 'int' 3
    |   |   |         `-ImplicitCastExpr 0x28414f19410 <col:58> 'const char *' <NoOp>
    |   |   |           `-ImplicitCastExpr 0x28414f193f8 <col:58> 'char *' <ArrayToPointerDecay>
    |   |   |             `-StringLiteral 0x28414f19388 <col:58> 'char [12]' lvalue "salt buffer"
    |   |   |-IfStmt 0x28414f19770 <line:440:13, line:441:22>
    |   |   | |-BinaryOperator 0x28414f196e8 <line:440:17, col:60> 'int' '<='
    |   |   | | |-CallExpr 0x28414f19690 <col:17, col:55> 'int'
    |   |   | | | |-ImplicitCastExpr 0x28414f19678 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | | | `-DeclRefExpr 0x28414f19588 <col:17> 'int ()' Function 0x28414f194c0 'RAND_bytes' 'int ()'
    |   |   | | | |-CStyleCastExpr 0x28414f19628 <col:28, col:46> 'unsigned char *' <BitCast>
    |   |   | | | | `-ImplicitCastExpr 0x28414f19610 <col:45, col:46> 'char *' <LValueToRValue> part_of_explicit_cast
    |   |   | | | |   `-UnaryOperator 0x28414f195e0 <col:45, col:46> 'char *' lvalue prefix '*' cannot overflow
    |   |   | | | |     `-ImplicitCastExpr 0x28414f195c8 <col:46> 'char **' <LValueToRValue>
    |   |   | | | |       `-DeclRefExpr 0x28414f195a8 <col:46> 'char **' lvalue ParmVar 0x28414f0fef8 'salt_p' 'char **'
    |   |   | | | `-IntegerLiteral 0x28414f19650 <col:54> 'int' 2
    |   |   | | `-IntegerLiteral 0x28414f196c0 <col:60> 'int' 0
    |   |   | `-GotoStmt 0x28414f19758 <line:441:17, col:22> 'end' 0x28414f19708
    |   |   |-BinaryOperator 0x28414f19a28 <line:442:13, col:57> 'char' '='
    |   |   | |-ArraySubscriptExpr 0x28414f19838 <col:13, col:24> 'char' lvalue
    |   |   | | |-ImplicitCastExpr 0x28414f19820 <col:13, col:21> 'char *' <LValueToRValue>
    |   |   | | | `-ParenExpr 0x28414f197d8 <col:13, col:21> 'char *' lvalue
    |   |   | | |   `-UnaryOperator 0x28414f197c0 <col:14, col:15> 'char *' lvalue prefix '*' cannot overflow
    |   |   | | |     `-ImplicitCastExpr 0x28414f197a8 <col:15> 'char **' <LValueToRValue>
    |   |   | | |       `-DeclRefExpr 0x28414f19788 <col:15> 'char **' lvalue ParmVar 0x28414f0fef8 'salt_p' 'char **'
    |   |   | | `-IntegerLiteral 0x28414f197f8 <col:23> 'int' 0
    |   |   | `-ImplicitCastExpr 0x28414f19a10 <col:28, col:57> 'char' <IntegralCast>
    |   |   |   `-ImplicitCastExpr 0x28414f199f8 <col:28, col:57> 'unsigned char' <LValueToRValue>
    |   |   |     `-ArraySubscriptExpr 0x28414f199d8 <col:28, col:57> 'const unsigned char' lvalue
    |   |   |       |-ImplicitCastExpr 0x28414f199c0 <col:28> 'const unsigned char *' <ArrayToPointerDecay>
    |   |   |       | `-DeclRefExpr 0x28414f19858 <col:28> 'const unsigned char [64]' lvalue Var 0x28414e6bf70 'cov_2char' 'const unsigned char [64]'
    |   |   |       `-BinaryOperator 0x28414f199a0 <col:38, col:53> 'int' '&'
    |   |   |         |-ImplicitCastExpr 0x28414f19988 <col:38, col:49> 'int' <IntegralCast>
    |   |   |         | `-ImplicitCastExpr 0x28414f19970 <col:38, col:49> 'char' <LValueToRValue>
    |   |   |         |   `-ArraySubscriptExpr 0x28414f19928 <col:38, col:49> 'char' lvalue
    |   |   |         |     |-ImplicitCastExpr 0x28414f19910 <col:38, col:46> 'char *' <LValueToRValue>
    |   |   |         |     | `-ParenExpr 0x28414f198c8 <col:38, col:46> 'char *' lvalue
    |   |   |         |     |   `-UnaryOperator 0x28414f198b0 <col:39, col:40> 'char *' lvalue prefix '*' cannot overflow
    |   |   |         |     |     `-ImplicitCastExpr 0x28414f19898 <col:40> 'char **' <LValueToRValue>
    |   |   |         |     |       `-DeclRefExpr 0x28414f19878 <col:40> 'char **' lvalue ParmVar 0x28414f0fef8 'salt_p' 'char **'
    |   |   |         |     `-IntegerLiteral 0x28414f198e8 <col:48> 'int' 0
    |   |   |         `-IntegerLiteral 0x28414f19948 <col:53> 'int' 63
    |   |   |-BinaryOperator 0x28414f19ce8 <line:443:13, col:57> 'char' '='
    |   |   | |-ArraySubscriptExpr 0x28414f19af8 <col:13, col:24> 'char' lvalue
    |   |   | | |-ImplicitCastExpr 0x28414f19ae0 <col:13, col:21> 'char *' <LValueToRValue>
    |   |   | | | `-ParenExpr 0x28414f19a98 <col:13, col:21> 'char *' lvalue
    |   |   | | |   `-UnaryOperator 0x28414f19a80 <col:14, col:15> 'char *' lvalue prefix '*' cannot overflow
    |   |   | | |     `-ImplicitCastExpr 0x28414f19a68 <col:15> 'char **' <LValueToRValue>
    |   |   | | |       `-DeclRefExpr 0x28414f19a48 <col:15> 'char **' lvalue ParmVar 0x28414f0fef8 'salt_p' 'char **'
    |   |   | | `-IntegerLiteral 0x28414f19ab8 <col:23> 'int' 1
    |   |   | `-ImplicitCastExpr 0x28414f19cd0 <col:28, col:57> 'char' <IntegralCast>
    |   |   |   `-ImplicitCastExpr 0x28414f19cb8 <col:28, col:57> 'unsigned char' <LValueToRValue>
    |   |   |     `-ArraySubscriptExpr 0x28414f19c98 <col:28, col:57> 'const unsigned char' lvalue
    |   |   |       |-ImplicitCastExpr 0x28414f19c80 <col:28> 'const unsigned char *' <ArrayToPointerDecay>
    |   |   |       | `-DeclRefExpr 0x28414f19b18 <col:28> 'const unsigned char [64]' lvalue Var 0x28414e6bf70 'cov_2char' 'const unsigned char [64]'
    |   |   |       `-BinaryOperator 0x28414f19c60 <col:38, col:53> 'int' '&'
    |   |   |         |-ImplicitCastExpr 0x28414f19c48 <col:38, col:49> 'int' <IntegralCast>
    |   |   |         | `-ImplicitCastExpr 0x28414f19c30 <col:38, col:49> 'char' <LValueToRValue>
    |   |   |         |   `-ArraySubscriptExpr 0x28414f19be8 <col:38, col:49> 'char' lvalue
    |   |   |         |     |-ImplicitCastExpr 0x28414f19bd0 <col:38, col:46> 'char *' <LValueToRValue>
    |   |   |         |     | `-ParenExpr 0x28414f19b88 <col:38, col:46> 'char *' lvalue
    |   |   |         |     |   `-UnaryOperator 0x28414f19b70 <col:39, col:40> 'char *' lvalue prefix '*' cannot overflow
    |   |   |         |     |     `-ImplicitCastExpr 0x28414f19b58 <col:40> 'char **' <LValueToRValue>
    |   |   |         |     |       `-DeclRefExpr 0x28414f19b38 <col:40> 'char **' lvalue ParmVar 0x28414f0fef8 'salt_p' 'char **'
    |   |   |         |     `-IntegerLiteral 0x28414f19ba8 <col:48> 'int' 1
    |   |   |         `-IntegerLiteral 0x28414f19c08 <col:53> 'int' 63
    |   |   `-BinaryOperator 0x28414f19e18 <line:444:13, col:28> 'char' '='
    |   |     |-ArraySubscriptExpr 0x28414f19db8 <col:13, col:24> 'char' lvalue
    |   |     | |-ImplicitCastExpr 0x28414f19da0 <col:13, col:21> 'char *' <LValueToRValue>
    |   |     | | `-ParenExpr 0x28414f19d58 <col:13, col:21> 'char *' lvalue
    |   |     | |   `-UnaryOperator 0x28414f19d40 <col:14, col:15> 'char *' lvalue prefix '*' cannot overflow
    |   |     | |     `-ImplicitCastExpr 0x28414f19d28 <col:15> 'char **' <LValueToRValue>
    |   |     | |       `-DeclRefExpr 0x28414f19d08 <col:15> 'char **' lvalue ParmVar 0x28414f0fef8 'salt_p' 'char **'
    |   |     | `-IntegerLiteral 0x28414f19d78 <col:23> 'int' 2
    |   |     `-ImplicitCastExpr 0x28414f19e00 <col:28> 'char' <IntegralCast>
    |   |       `-IntegerLiteral 0x28414f19dd8 <col:28> 'int' 0
    |   `-IfStmt 0x28414f1caa0 <line:453:9, line:464:9>
    |     |-BinaryOperator 0x28414f19f28 <line:453:13, col:21> 'int' '||'
    |     | |-ImplicitCastExpr 0x28414f19ef8 <col:13> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x28414f19e88 <col:13> 'int' lvalue ParmVar 0x28414f1e488 'use1' 'int'
    |     | `-ImplicitCastExpr 0x28414f19f10 <col:21> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x28414f19ec0 <col:21> 'int' lvalue ParmVar 0x28414f1e508 'useapr1' 'int'
    |     `-CompoundStmt 0x28414f1ca68 <col:30, line:464:9>
    |       |-DeclStmt 0x28414f19fc8 <line:454:13, col:18>
    |       | `-VarDecl 0x28414f19f60 <col:13, col:17> col:17 used i 'int'
    |       |-IfStmt 0x28414f1c320 <line:456:13, line:457:71>
    |       | |-BinaryOperator 0x28414f1c120 <line:456:17, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
    |       | | |-ImplicitCastExpr 0x28414f1c0f0 <.//openssl//file_jk/before\apps\passwd.c:456:17, col:18> 'char *' <LValueToRValue>
    |       | | | `-UnaryOperator 0x28414f1a018 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
    |       | | |   `-ImplicitCastExpr 0x28414f1a000 <col:18> 'char **' <LValueToRValue>
    |       | | |     `-DeclRefExpr 0x28414f19fe0 <col:18> 'char **' lvalue ParmVar 0x28414f0ff78 'salt_malloc_p' 'char **'
    |       | | `-ImplicitCastExpr 0x28414f1c108 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
    |       | |   `-ParenExpr 0x28414f1a098 <col:17, col:27> 'void *'
    |       | |     `-CStyleCastExpr 0x28414f1a070 <col:18, col:26> 'void *' <NullToPointer>
    |       | |       `-IntegerLiteral 0x28414f1a030 <col:26> 'int' 0
    |       | `-BinaryOperator 0x28414f1c300 <.//openssl//file_jk/before\apps\passwd.c:457:17, col:71> 'char *' '='
    |       |   |-UnaryOperator 0x28414f1c178 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
    |       |   | `-ImplicitCastExpr 0x28414f1c160 <col:18> 'char **' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x28414f1c140 <col:18> 'char **' lvalue ParmVar 0x28414f0fef8 'salt_p' 'char **'
    |       |   `-BinaryOperator 0x28414f1c2e0 <col:27, col:71> 'char *' '='
    |       |     |-UnaryOperator 0x28414f1c1c8 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
    |       |     | `-ImplicitCastExpr 0x28414f1c1b0 <col:28> 'char **' <LValueToRValue>
    |       |     |   `-DeclRefExpr 0x28414f1c190 <col:28> 'char **' lvalue ParmVar 0x28414f0ff78 'salt_malloc_p' 'char **'
    |       |     `-ImplicitCastExpr 0x28414f1c2c8 <col:44, col:71> 'char *' <BitCast>
    |       |       `-CallExpr 0x28414f1c268 <col:44, col:71> 'void *'
    |       |         |-ImplicitCastExpr 0x28414f1c250 <col:44> 'void *(*)(int, const char *)' <FunctionToPointerDecay>
    |       |         | `-DeclRefExpr 0x28414f1c1e0 <col:44> 'void *(int, const char *)' Function 0x28414e65bb0 'app_malloc' 'void *(int, const char *)'
    |       |         |-IntegerLiteral 0x28414f1c200 <col:55> 'int' 9
    |       |         `-ImplicitCastExpr 0x28414f1c2b0 <col:58> 'const char *' <NoOp>
    |       |           `-ImplicitCastExpr 0x28414f1c298 <col:58> 'char *' <ArrayToPointerDecay>
    |       |             `-StringLiteral 0x28414f1c228 <col:58> 'char [12]' lvalue "salt buffer"
    |       |-IfStmt 0x28414f1c4d0 <line:458:13, line:459:22>
    |       | |-BinaryOperator 0x28414f1c498 <line:458:17, col:60> 'int' '<='
    |       | | |-CallExpr 0x28414f1c440 <col:17, col:55> 'int'
    |       | | | |-ImplicitCastExpr 0x28414f1c428 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |       | | | | `-DeclRefExpr 0x28414f1c338 <col:17> 'int ()' Function 0x28414f194c0 'RAND_bytes' 'int ()'
    |       | | | |-CStyleCastExpr 0x28414f1c3d8 <col:28, col:46> 'unsigned char *' <BitCast>
    |       | | | | `-ImplicitCastExpr 0x28414f1c3c0 <col:45, col:46> 'char *' <LValueToRValue> part_of_explicit_cast
    |       | | | |   `-UnaryOperator 0x28414f1c390 <col:45, col:46> 'char *' lvalue prefix '*' cannot overflow
    |       | | | |     `-ImplicitCastExpr 0x28414f1c378 <col:46> 'char **' <LValueToRValue>
    |       | | | |       `-DeclRefExpr 0x28414f1c358 <col:46> 'char **' lvalue ParmVar 0x28414f0fef8 'salt_p' 'char **'
    |       | | | `-IntegerLiteral 0x28414f1c400 <col:54> 'int' 8
    |       | | `-IntegerLiteral 0x28414f1c470 <col:60> 'int' 0
    |       | `-GotoStmt 0x28414f1c4b8 <line:459:17, col:22> 'end' 0x28414f19708
    |       |-ForStmt 0x28414f1c900 <line:461:13, line:462:61>
    |       | |-BinaryOperator 0x28414f1c548 <line:461:18, col:22> 'int' '='
    |       | | |-DeclRefExpr 0x28414f1c4e8 <col:18> 'int' lvalue Var 0x28414f19f60 'i' 'int'
    |       | | `-IntegerLiteral 0x28414f1c520 <col:22> 'int' 0
    |       | |-<<<NULL>>>
    |       | |-BinaryOperator 0x28414f1c5c8 <col:25, col:29> 'int' '<'
    |       | | |-ImplicitCastExpr 0x28414f1c5b0 <col:25> 'int' <LValueToRValue>
    |       | | | `-DeclRefExpr 0x28414f1c568 <col:25> 'int' lvalue Var 0x28414f19f60 'i' 'int'
    |       | | `-IntegerLiteral 0x28414f1c588 <col:29> 'int' 8
    |       | |-UnaryOperator 0x28414f1c608 <col:32, col:33> 'int' postfix '++'
    |       | | `-DeclRefExpr 0x28414f1c5e8 <col:32> 'int' lvalue Var 0x28414f19f60 'i' 'int'
    |       | `-BinaryOperator 0x28414f1c8e0 <line:462:17, col:61> 'char' '='
    |       |   |-ArraySubscriptExpr 0x28414f1c6e0 <col:17, col:28> 'char' lvalue
    |       |   | |-ImplicitCastExpr 0x28414f1c6b0 <col:17, col:25> 'char *' <LValueToRValue>
    |       |   | | `-ParenExpr 0x28414f1c670 <col:17, col:25> 'char *' lvalue
    |       |   | |   `-UnaryOperator 0x28414f1c658 <col:18, col:19> 'char *' lvalue prefix '*' cannot overflow
    |       |   | |     `-ImplicitCastExpr 0x28414f1c640 <col:19> 'char **' <LValueToRValue>
    |       |   | |       `-DeclRefExpr 0x28414f1c620 <col:19> 'char **' lvalue ParmVar 0x28414f0fef8 'salt_p' 'char **'
    |       |   | `-ImplicitCastExpr 0x28414f1c6c8 <col:27> 'int' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x28414f1c690 <col:27> 'int' lvalue Var 0x28414f19f60 'i' 'int'
    |       |   `-ImplicitCastExpr 0x28414f1c8c8 <col:32, col:61> 'char' <IntegralCast>
    |       |     `-ImplicitCastExpr 0x28414f1c8b0 <col:32, col:61> 'unsigned char' <LValueToRValue>
    |       |       `-ArraySubscriptExpr 0x28414f1c890 <col:32, col:61> 'const unsigned char' lvalue
    |       |         |-ImplicitCastExpr 0x28414f1c878 <col:32> 'const unsigned char *' <ArrayToPointerDecay>
    |       |         | `-DeclRefExpr 0x28414f1c700 <col:32> 'const unsigned char [64]' lvalue Var 0x28414e6bf70 'cov_2char' 'const unsigned char [64]'
    |       |         `-BinaryOperator 0x28414f1c858 <col:42, col:57> 'int' '&'
    |       |           |-ImplicitCastExpr 0x28414f1c840 <col:42, col:53> 'int' <IntegralCast>
    |       |           | `-ImplicitCastExpr 0x28414f1c828 <col:42, col:53> 'char' <LValueToRValue>
    |       |           |   `-ArraySubscriptExpr 0x28414f1c7e0 <col:42, col:53> 'char' lvalue
    |       |           |     |-ImplicitCastExpr 0x28414f1c7b0 <col:42, col:50> 'char *' <LValueToRValue>
    |       |           |     | `-ParenExpr 0x28414f1c770 <col:42, col:50> 'char *' lvalue
    |       |           |     |   `-UnaryOperator 0x28414f1c758 <col:43, col:44> 'char *' lvalue prefix '*' cannot overflow
    |       |           |     |     `-ImplicitCastExpr 0x28414f1c740 <col:44> 'char **' <LValueToRValue>
    |       |           |     |       `-DeclRefExpr 0x28414f1c720 <col:44> 'char **' lvalue ParmVar 0x28414f0fef8 'salt_p' 'char **'
    |       |           |     `-ImplicitCastExpr 0x28414f1c7c8 <col:52> 'int' <LValueToRValue>
    |       |           |       `-DeclRefExpr 0x28414f1c790 <col:52> 'int' lvalue Var 0x28414f19f60 'i' 'int'
    |       |           `-IntegerLiteral 0x28414f1c800 <col:57> 'int' 63
    |       `-BinaryOperator 0x28414f1ca48 <line:463:13, col:28> 'char' '='
    |         |-ArraySubscriptExpr 0x28414f1c9e8 <col:13, col:24> 'char' lvalue
    |         | |-ImplicitCastExpr 0x28414f1c9d0 <col:13, col:21> 'char *' <LValueToRValue>
    |         | | `-ParenExpr 0x28414f1c988 <col:13, col:21> 'char *' lvalue
    |         | |   `-UnaryOperator 0x28414f1c970 <col:14, col:15> 'char *' lvalue prefix '*' cannot overflow
    |         | |     `-ImplicitCastExpr 0x28414f1c958 <col:15> 'char **' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x28414f1c938 <col:15> 'char **' lvalue ParmVar 0x28414f0fef8 'salt_p' 'char **'
    |         | `-IntegerLiteral 0x28414f1c9a8 <col:23> 'int' 8
    |         `-ImplicitCastExpr 0x28414f1ca30 <col:28> 'char' <IntegralCast>
    |           `-IntegerLiteral 0x28414f1ca08 <col:28> 'int' 0
    |-CStyleCastExpr 0x28414f1cf10 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
    | `-ParenExpr 0x28414f1cef0 <col:35, col:128> 'int'
    |   `-BinaryOperator 0x28414f1cea0 <col:37, col:126> 'int' '||'
    |     |-ParenExpr 0x28414f1cc68 <col:37, col:53> 'int'
    |     | `-UnaryOperator 0x28414f1cc50 <col:38, col:52> 'int' prefix '!' cannot overflow
    |     |   `-UnaryOperator 0x28414f1cc38 <col:39, col:52> 'int' prefix '!' cannot overflow
    |     |     `-ParenExpr 0x28414f1cc18 <col:40, col:52> 'int'
    |     |       `-BinaryOperator 0x28414f1cbf8 <.//openssl//file_jk/before\apps\passwd.c:468:12, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
    |     |         |-ImplicitCastExpr 0x28414f1cbc8 <.//openssl//file_jk/before\apps\passwd.c:468:12, col:13> 'char *' <LValueToRValue>
    |     |         | `-UnaryOperator 0x28414f1cb28 <col:12, col:13> 'char *' lvalue prefix '*' cannot overflow
    |     |         |   `-ImplicitCastExpr 0x28414f1cb10 <col:13> 'char **' <LValueToRValue>
    |     |         |     `-DeclRefExpr 0x28414f1caf0 <col:13> 'char **' lvalue ParmVar 0x28414f0fef8 'salt_p' 'char **'
    |     |         `-ImplicitCastExpr 0x28414f1cbe0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
    |     |           `-ParenExpr 0x28414f1cba8 <col:17, col:27> 'void *'
    |     |             `-CStyleCastExpr 0x28414f1cb80 <col:18, col:26> 'void *' <NullToPointer>
    |     |               `-IntegerLiteral 0x28414f1cb40 <col:26> 'int' 0
    |     `-ParenExpr 0x28414f1ce80 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
    |       `-BinaryOperator 0x28414f1ce60 <col:59, col:125> 'int' ','
    |         |-CallExpr 0x28414f1cd88 <col:59, col:122> 'void'
    |         | |-ImplicitCastExpr 0x28414f1cd70 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x28414f1cc88 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x28414eb5c20 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
    |         | |-ImplicitCastExpr 0x28414f1cdd8 <<scratch space>:43:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x28414f1cdc0 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x28414f1cca8 <col:1> 'unsigned short [16]' lvalue L"*salt_p != NULL"
    |         | |-ImplicitCastExpr 0x28414f1ce08 <line:45:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x28414f1cdf0 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x28414f1cce0 <col:1> 'unsigned short [41]' lvalue L".//openssl//file_jk/before\\apps\\passwd.c"
    |         | `-ImplicitCastExpr 0x28414f1ce20 <line:46:1> 'unsigned int' <IntegralCast>
    |         |   `-IntegerLiteral 0x28414f1cd48 <col:1> 'int' 468
    |         `-IntegerLiteral 0x28414f1ce38 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
    |-IfStmt 0x28414f1b330 <.//openssl//file_jk/before\apps\passwd.c:471:5, line:480:5>
    | |-ParenExpr 0x28414f1d088 <line:471:9, col:36> 'int'
    | | `-BinaryOperator 0x28414f1d068 <col:10, col:27> 'int' '>'
    | |   |-CallExpr 0x28414f1cfc0 <col:10, col:23> 'unsigned long long'
    | |   | |-ImplicitCastExpr 0x28414f1cfa8 <col:10> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
    | |   | | `-DeclRefExpr 0x28414f1cf38 <col:10> 'unsigned long long (const char *)' Function 0x28414e22620 'strlen' 'unsigned long long (const char *)'
    | |   | `-ImplicitCastExpr 0x28414f1d000 <col:17> 'const char *' <NoOp>
    | |   |   `-ImplicitCastExpr 0x28414f1cfe8 <col:17> 'char *' <LValueToRValue>
    | |   |     `-DeclRefExpr 0x28414f1cf58 <col:17> 'char *' lvalue ParmVar 0x28414f1e110 'passwd' 'char *'
    | |   `-ImplicitCastExpr 0x28414f1d050 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
    | |     `-DeclRefExpr 0x28414f1d018 <col:27> 'size_t':'unsigned long long' lvalue ParmVar 0x28414f1e388 'pw_maxlen' 'size_t':'unsigned long long'
    | `-CompoundStmt 0x28414f1b318 <col:39, line:480:5>
    |   `-BinaryOperator 0x28414f1b2f8 <line:479:9, col:29> 'char' '='
    |     |-ArraySubscriptExpr 0x28414f1b298 <col:9, col:25> 'char' lvalue
    |     | |-ImplicitCastExpr 0x28414f1b268 <col:9> 'char *' <LValueToRValue>
    |     | | `-DeclRefExpr 0x28414f1b228 <col:9> 'char *' lvalue ParmVar 0x28414f1e110 'passwd' 'char *'
    |     | `-ImplicitCastExpr 0x28414f1b280 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
    |     |   `-DeclRefExpr 0x28414f1b248 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x28414f1e388 'pw_maxlen' 'size_t':'unsigned long long'
    |     `-ImplicitCastExpr 0x28414f1b2e0 <col:29> 'char' <IntegralCast>
    |       `-IntegerLiteral 0x28414f1b2b8 <col:29> 'int' 0
    |-CStyleCastExpr 0x28414f1b7b8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
    | `-ParenExpr 0x28414f1b798 <col:35, col:128> 'int'
    |   `-BinaryOperator 0x28414f1b748 <col:37, col:126> 'int' '||'
    |     |-ParenExpr 0x28414f1b4b8 <col:37, col:53> 'int'
    |     | `-UnaryOperator 0x28414f1b4a0 <col:38, col:52> 'int' prefix '!' cannot overflow
    |     |   `-UnaryOperator 0x28414f1b488 <col:39, col:52> 'int' prefix '!' cannot overflow
    |     |     `-ParenExpr 0x28414f1b468 <col:40, col:52> 'int'
    |     |       `-BinaryOperator 0x28414f1b448 <.//openssl//file_jk/before\apps\passwd.c:481:12, col:30> 'int' '<='
    |     |         |-CallExpr 0x28414f1b3b8 <col:12, col:25> 'unsigned long long'
    |     |         | |-ImplicitCastExpr 0x28414f1b3a0 <col:12> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
    |     |         | | `-DeclRefExpr 0x28414f1b348 <col:12> 'unsigned long long (const char *)' Function 0x28414e22620 'strlen' 'unsigned long long (const char *)'
    |     |         | `-ImplicitCastExpr 0x28414f1b3f8 <col:19> 'const char *' <NoOp>
    |     |         |   `-ImplicitCastExpr 0x28414f1b3e0 <col:19> 'char *' <LValueToRValue>
    |     |         |     `-DeclRefExpr 0x28414f1b368 <col:19> 'char *' lvalue ParmVar 0x28414f1e110 'passwd' 'char *'
    |     |         `-ImplicitCastExpr 0x28414f1b430 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
    |     |           `-DeclRefExpr 0x28414f1b410 <col:30> 'size_t':'unsigned long long' lvalue ParmVar 0x28414f1e388 'pw_maxlen' 'size_t':'unsigned long long'
    |     `-ParenExpr 0x28414f1b728 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
    |       `-BinaryOperator 0x28414f1b708 <col:59, col:125> 'int' ','
    |         |-CallExpr 0x28414f1b630 <col:59, col:122> 'void'
    |         | |-ImplicitCastExpr 0x28414f1b618 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x28414f1b4d8 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x28414eb5c20 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
    |         | |-ImplicitCastExpr 0x28414f1b680 <<scratch space>:48:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x28414f1b668 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x28414f1b538 <col:1> 'unsigned short [28]' lvalue L"strlen(passwd) <= pw_maxlen"
    |         | |-ImplicitCastExpr 0x28414f1b6b0 <line:50:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x28414f1b698 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x28414f1b588 <col:1> 'unsigned short [41]' lvalue L".//openssl//file_jk/before\\apps\\passwd.c"
    |         | `-ImplicitCastExpr 0x28414f1b6c8 <line:51:1> 'unsigned int' <IntegralCast>
    |         |   `-IntegerLiteral 0x28414f1b5f0 <col:1> 'int' 481
    |         `-IntegerLiteral 0x28414f1b6e0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
    |-IfStmt 0x28414f1ba80 <.//openssl//file_jk/before\apps\passwd.c:485:5, line:486:41>
    | |-ImplicitCastExpr 0x28414f1b800 <line:485:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x28414f1b7e0 <col:9> 'int' lvalue ParmVar 0x28414f1e408 'usecrypt' 'int'
    | `-BinaryOperator 0x28414f1ba60 <line:486:9, col:41> 'char *' '='
    |   |-DeclRefExpr 0x28414f1b818 <col:9> 'char *' lvalue Var 0x28414f1e728 'hash' 'char *'
    |   `-ImplicitCastExpr 0x28414f1ba48 <col:16, col:41> 'char *' <IntegralToPointer>
    |     `-CallExpr 0x28414f1b9e8 <col:16, col:41> 'int'
    |       |-ImplicitCastExpr 0x28414f1b9d0 <col:16> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x28414f1b940 <col:16> 'int ()' Function 0x28414f1b878 'DES_crypt' 'int ()'
    |       |-ImplicitCastExpr 0x28414f1ba18 <col:26> 'char *' <LValueToRValue>
    |       | `-DeclRefExpr 0x28414f1b960 <col:26> 'char *' lvalue ParmVar 0x28414f1e110 'passwd' 'char *'
    |       `-ImplicitCastExpr 0x28414f1ba30 <col:34, col:35> 'char *' <LValueToRValue>
    |         `-UnaryOperator 0x28414f1b9b8 <col:34, col:35> 'char *' lvalue prefix '*' cannot overflow
    |           `-ImplicitCastExpr 0x28414f1b9a0 <col:35> 'char **' <LValueToRValue>
    |             `-DeclRefExpr 0x28414f1b980 <col:35> 'char **' lvalue ParmVar 0x28414f0fef8 'salt_p' 'char **'
    |-IfStmt 0x28414f1bde0 <line:489:5, line:490:63>
    | |-BinaryOperator 0x28414f1bb08 <line:489:9, col:17> 'int' '||'
    | | |-ImplicitCastExpr 0x28414f1bad8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x28414f1ba98 <col:9> 'int' lvalue ParmVar 0x28414f1e488 'use1' 'int'
    | | `-ImplicitCastExpr 0x28414f1baf0 <col:17> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x28414f1bab8 <col:17> 'int' lvalue ParmVar 0x28414f1e508 'useapr1' 'int'
    | `-BinaryOperator 0x28414f1bdc0 <line:490:9, col:63> 'char *' '='
    |   |-DeclRefExpr 0x28414f1bb28 <col:9> 'char *' lvalue Var 0x28414f1e728 'hash' 'char *'
    |   `-CallExpr 0x28414f1bd10 <col:16, col:63> 'char *'
    |     |-ImplicitCastExpr 0x28414f1bcf8 <col:16> 'char *(*)(const char *, const char *, const char *)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x28414f1bb48 <col:16> 'char *(const char *, const char *, const char *)' Function 0x28414f0eee0 'md5crypt' 'char *(const char *, const char *, const char *)'
    |     |-ImplicitCastExpr 0x28414f1bd60 <col:25> 'const char *' <NoOp>
    |     | `-ImplicitCastExpr 0x28414f1bd48 <col:25> 'char *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x28414f1bb68 <col:25> 'char *' lvalue ParmVar 0x28414f1e110 'passwd' 'char *'
    |     |-ImplicitCastExpr 0x28414f1bd78 <col:33, col:53> 'const char *' <NoOp>
    |     | `-ParenExpr 0x28414f1bc60 <col:33, col:53> 'char *'
    |     |   `-ConditionalOperator 0x28414f1bc30 <col:34, col:47> 'char *'
    |     |     |-ImplicitCastExpr 0x28414f1bbe8 <col:34> 'int' <LValueToRValue>
    |     |     | `-DeclRefExpr 0x28414f1bb88 <col:34> 'int' lvalue ParmVar 0x28414f1e488 'use1' 'int'
    |     |     |-ImplicitCastExpr 0x28414f1bc00 <col:41> 'char *' <ArrayToPointerDecay>
    |     |     | `-StringLiteral 0x28414f1bba8 <col:41> 'char [2]' lvalue "1"
    |     |     `-ImplicitCastExpr 0x28414f1bc18 <col:47> 'char *' <ArrayToPointerDecay>
    |     |       `-StringLiteral 0x28414f1bbc8 <col:47> 'char [5]' lvalue "apr1"
    |     `-ImplicitCastExpr 0x28414f1bda8 <col:56, col:57> 'const char *' <NoOp>
    |       `-ImplicitCastExpr 0x28414f1bd90 <col:56, col:57> 'char *' <LValueToRValue>
    |         `-UnaryOperator 0x28414f1bcb8 <col:56, col:57> 'char *' lvalue prefix '*' cannot overflow
    |           `-ImplicitCastExpr 0x28414f1bca0 <col:57> 'char **' <LValueToRValue>
    |             `-DeclRefExpr 0x28414f1bc80 <col:57> 'char **' lvalue ParmVar 0x28414f0fef8 'salt_p' 'char **'
    |-CStyleCastExpr 0x28414f1d238 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
    | `-ParenExpr 0x28414f1d218 <col:35, col:128> 'int'
    |   `-BinaryOperator 0x28414f1d1c8 <col:37, col:126> 'int' '||'
    |     |-ParenExpr 0x28414f1bf40 <col:37, col:53> 'int'
    |     | `-UnaryOperator 0x28414f1bf28 <col:38, col:52> 'int' prefix '!' cannot overflow
    |     |   `-UnaryOperator 0x28414f1bf10 <col:39, col:52> 'int' prefix '!' cannot overflow
    |     |     `-ParenExpr 0x28414f1bef0 <col:40, col:52> 'int'
    |     |       `-BinaryOperator 0x28414f1bed0 <.//openssl//file_jk/before\apps\passwd.c:492:12, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
    |     |         |-ImplicitCastExpr 0x28414f1bea0 <.//openssl//file_jk/before\apps\passwd.c:492:12> 'char *' <LValueToRValue>
    |     |         | `-DeclRefExpr 0x28414f1bdf8 <col:12> 'char *' lvalue Var 0x28414f1e728 'hash' 'char *'
    |     |         `-ImplicitCastExpr 0x28414f1beb8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
    |     |           `-ParenExpr 0x28414f1be80 <col:17, col:27> 'void *'
    |     |             `-CStyleCastExpr 0x28414f1be58 <col:18, col:26> 'void *' <NullToPointer>
    |     |               `-IntegerLiteral 0x28414f1be18 <col:26> 'int' 0
    |     `-ParenExpr 0x28414f1d1a8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
    |       `-BinaryOperator 0x28414f1d188 <col:59, col:125> 'int' ','
    |         |-CallExpr 0x28414f1c090 <col:59, col:122> 'void'
    |         | |-ImplicitCastExpr 0x28414f1c078 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x28414f1bf60 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x28414eb5c20 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
    |         | |-ImplicitCastExpr 0x28414f1d100 <<scratch space>:53:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x28414f1c0c8 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x28414f1bfb8 <col:1> 'unsigned short [13]' lvalue L"hash != NULL"
    |         | |-ImplicitCastExpr 0x28414f1d130 <line:55:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x28414f1d118 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x28414f1bfe8 <col:1> 'unsigned short [41]' lvalue L".//openssl//file_jk/before\\apps\\passwd.c"
    |         | `-ImplicitCastExpr 0x28414f1d148 <line:56:1> 'unsigned int' <IntegralCast>
    |         |   `-IntegerLiteral 0x28414f1c050 <col:1> 'int' 492
    |         `-IntegerLiteral 0x28414f1d160 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
    |-ReturnStmt 0x28414f1d5d0 <.//openssl//file_jk/before\apps\passwd.c:500:5, col:12>
    | `-IntegerLiteral 0x28414f1d5a8 <col:12> 'int' 1
    `-LabelStmt 0x28414f1d618 <line:502:2, line:503:12> 'end'
      `-ReturnStmt 0x28414f1d608 <col:5, col:12>
        `-IntegerLiteral 0x28414f1d5e0 <col:12> 'int' 0
