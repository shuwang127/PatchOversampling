TranslationUnitDecl 0x188e3f58c58 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x188e3f594f0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x188e3f591f0 '__int128'
|-TypedefDecl 0x188e3f59560 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x188e3f59210 'unsigned __int128'
|-TypedefDecl 0x188e3f59898 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x188e3f59650 'struct __NSConstantString_tag'
|   `-Record 0x188e3f595b8 '__NSConstantString_tag'
|-TypedefDecl 0x188e3f59908 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x188e3f58e30 'unsigned long long'
|-TypedefDecl 0x188e3f599a0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x188e3f59960 'char *'
|   `-BuiltinType 0x188e3f58cf0 'char'
|-TypedefDecl 0x188e3f59a10 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x188e3f59960 'char *'
|   `-BuiltinType 0x188e3f58cf0 'char'
|-TypedefDecl 0x188e3f59ad0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x188e3f58e30 'unsigned long long'
|-TypedefDecl 0x188e3f59b40 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x188e3f59960 'char *'
|   `-BuiltinType 0x188e3f58cf0 'char'
|-FunctionDecl 0x188e5976460 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x188e5976500 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x188e5976570 <col:21> Implicit
|-FunctionDecl 0x188e59765c8 prev 0x188e5976460 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x188e59762f0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x188e59766b8 <col:21> Inherited Implicit
|-TypedefDecl 0x188e59766f8 prev 0x188e3f59908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x188e3f58e30 'unsigned long long'
|-TypedefDecl 0x188e59767a0 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x188e5976770 'size_t' sugar
|   |-Typedef 0x188e59766f8 'size_t'
|   `-BuiltinType 0x188e3f58e30 'unsigned long long'
|-TypedefDecl 0x188e5976810 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x188e3f58d90 'long long'
|-TypedefDecl 0x188e5976880 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x188e3f58d90 'long long'
|-TypedefDecl 0x188e59768f0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x188e3f58dd0 'unsigned short'
|-TypedefDecl 0x188e5976960 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x188e3f58dd0 'unsigned short'
|-TypedefDecl 0x188e59769d0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x188e3f58dd0 'unsigned short'
|-TypedefDecl 0x188e5976a40 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x188e3f58d50 'int'
|-TypedefDecl 0x188e5976ab0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x188e3f58d70 'long'
|-TypedefDecl 0x188e5976b20 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x188e3f58d90 'long long'
|-TypedefDecl 0x188e5976bb0 <line:580:1, col:20> col:20 referenced time_t '__time64_t':'long long'
| `-TypedefType 0x188e5976b80 '__time64_t' sugar
|   |-Typedef 0x188e5976b20 '__time64_t'
|   `-BuiltinType 0x188e3f58d90 'long long'
|-FunctionDecl 0x188e5976d28 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x188e5976f48 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x188e59b1df0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x188e5977088 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x188e5977100 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x188e5977178 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x188e59771f8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x188e59b1b90 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x188e59b1ed0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x188e59b1f90 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x188e59b2100 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x188e59b20b0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x188e59b2050 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x188e59b1f70 'struct threadlocaleinfostruct'
|       `-Record 0x188e59b6be0 'threadlocaleinfostruct'
|-TypedefDecl 0x188e59b2210 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x188e59b21c0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x188e59b2160 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x188e59b2030 'struct threadmbcinfostruct'
|       `-Record 0x188e59b1f90 'threadmbcinfostruct'
|-RecordDecl 0x188e59b2268 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x188e59b2320 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x188e59b23e0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x188e59b2470 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x188e59b2500 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x188e59b25b8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x188e59b2560 'struct localeinfo_struct' sugar
|   `-RecordType 0x188e59b23c0 'struct localeinfo_struct'
|     `-Record 0x188e59b2320 'localeinfo_struct'
|-TypedefDecl 0x188e59b2690 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x188e59b2640 'struct localeinfo_struct *'
|   `-ElaboratedType 0x188e59b2560 'struct localeinfo_struct' sugar
|     `-RecordType 0x188e59b23c0 'struct localeinfo_struct'
|       `-Record 0x188e59b2320 'localeinfo_struct'
|-RecordDecl 0x188e59b2708 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x188e59b27c0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x188e59b2838 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x188e59b28f8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x188e59b2990 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x188e59b2a00 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x188e59b2ab8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x188e59b2a60 'struct localerefcount' sugar
|   `-RecordType 0x188e59b27a0 'struct localerefcount'
|     `-Record 0x188e59b2708 'localerefcount'
|-RecordDecl 0x188e59b6be0 prev 0x188e59b1ed0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x188e59b6c60 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x188e59b6cd8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x188e59b6d48 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x188e59b6db8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x188e59b6e28 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x188e59b6fe8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x188e59b7058 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x188e59b70c8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x188e59b7138 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x188e59b71a8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x188e59b7218 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x188e59b7270 parent 0x188e3f58c58 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x188e59b7400 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x188e59b7470 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x188e59b74e0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x188e59b7550 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x188e59b75f0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x188e59b7660 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x188e59b7770 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x188e59b78a8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x188e59b7958 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x188e59b7900 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x188e59b1f70 'struct threadlocaleinfostruct'
|     `-Record 0x188e59b6be0 'threadlocaleinfostruct'
|-RecordDecl 0x188e59b79f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x188e59b7ab0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x188e59b7b28 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x188e59afb70 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x188e59afbe0 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x188e59afc50 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x188e59afcc0 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x188e59afd30 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x188e59afda0 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x188e59afe10 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x188e59afec0 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x188e59afe70 'struct _iobuf' sugar
|   `-RecordType 0x188e59b7a90 'struct _iobuf'
|     `-Record 0x188e59b79f0 '_iobuf'
|-FunctionDecl 0x188e59b00f8 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x188e59b01c8 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x188e3f58d90 'long long'
|-FunctionDecl 0x188e59b03a8 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x188e59b0230 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x188e59b06a0 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x188e59b0480 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x188e59b04f8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x188e59b0a50 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x188e59b0780 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x188e59b0800 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x188e59b0880 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x188e59b9d80 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x188e59b9c10 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x188e59b9fb0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x188e59b9e70 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x188e59ba160 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x188e59ba080 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x188e59ba350 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x188e59ba648 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x188e59ba420 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x188e59ba4a0 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x188e59ba800 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x188e59ba720 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x188e59ba9b0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x188e59ba8d0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x188e59bab60 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x188e59baa80 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x188e59bcd48 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x188e59bcc68 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x188e59bced8 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x188e59bd240 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x188e59bcfa0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x188e59bd098 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x188e59bd5f8 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x188e59bd320 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x188e59bd3a0 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x188e59bd418 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x188e59bd7b8 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x188e59bd6d8 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x188e59bda80 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x188e59bd890 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x188e59bd910 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x188e59bec60 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x188e59bf058 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x188e59bf0f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x188e59bf160 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x188e59bf1d8 prev 0x188e59bf058 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x188e59bee30 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x188e59beeb0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x188e59bf288 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e59bf700 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x188e59bf430 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x188e59bf4b0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x188e59bf530 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x188e59bfa20 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x188e59bfac0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x188e59bfb28 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x188e59bfba0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x188e59bfc70 prev 0x188e59bfa20 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x188e59bf7e0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x188e59bf860 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x188e59bfd68 <col:40> Inherited printf 2 3
|-FunctionDecl 0x188e59bff30 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x188e59bfdb0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x188e59bfe30 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x188e59c0188 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x188e59c0010 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x188e59c0088 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x188e59c03b8 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x188e59c0268 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x188e59c06b0 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x188e59c0490 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x188e59c0508 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x188e59c0b48 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x188e59c0be8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x188e59b8c00 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x188e59b8c68 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x188e59b8cd0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x188e59b8d58 prev 0x188e59c0b48 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x188e59c0790 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x188e59c0808 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e59c0880 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e59c08f8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x188e59b9260 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x188e59b8e48 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x188e59b8ec0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e59b8f38 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e59b8fb0 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e59b9028 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x188e59b9720 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x188e59b9450 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x188e59b94d0 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x188e59b9548 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x188e59b97d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e59c2d48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x188e59b9920 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x188e59b99a0 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x188e59b9a20 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x188e59b9a98 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x188e59c30f0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x188e59c3190 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x188e59c31f8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x188e59c3270 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x188e59c32d8 prev 0x188e59c30f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x188e59c2f28 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x188e59c2fa8 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x188e59c34b8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x188e59c3388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e59c38f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x188e59c35f8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x188e59c3678 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x188e59c3710 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x188e59c39b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e59c0c80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x188e59c3af0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x188e59c3b70 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x188e59c0f70 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x188e59c0d58 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x188e59c0dd8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x188e59c0e50 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e59c12d0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x188e59c1050 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x188e59c1128 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x188e59c1688 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x188e59c13a8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x188e59c1428 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x188e59c14a8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x188e59c18e8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x188e59c1768 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x188e59c1cd8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x188e59c19b8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x188e59c1a38 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x188e59c1ab8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x188e59c1f38 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x188e59c1db8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x188e59c23f8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x188e59c2498 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x188e59c2500 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x188e59c2568 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x188e59c25d0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x188e59c2658 prev 0x188e59c23f8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x188e59c2040 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x188e59c20b8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e59c2130 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e59c21a8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x188e59c2820 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x188e59c2740 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x188e59c29b0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x188e59c2b38 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x188e59c4e80 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x188e59c2c08 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x188e59c4cd0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x188e59c51a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x188e59c5060 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x188e59c5250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e59c5470 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x188e59c5390 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x188e59c5690 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x188e59c5548 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x188e59c5840 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x188e59c5760 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x188e59c5a90 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x188e59c5918 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x188e59c5998 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x188e59c5cd0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x188e59c5d70 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x188e59c5de0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x188e59c5e48 prev 0x188e59c5cd0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x188e59c5b70 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x188e59c5f38 <col:40> Inherited printf 1 2
|-FunctionDecl 0x188e59c6068 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x188e59c5f88 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x188e59c62b8 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x188e59c6140 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x188e59c61b8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x188e59c6478 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x188e59c6398 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x188e59c6698 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x188e59c6550 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x188e59c68e8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x188e59c6770 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x188e59c67e8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x188e59c6aa8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x188e59c69c8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x188e5a16070 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x188e59c6b80 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x188e59c6c00 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x188e5a16230 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x188e5a16150 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x188e5a164c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x188e5a163e0 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x188e5a16568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x188e5a16760 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x188e5a16688 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x188e5a168f0 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x188e5a16b98 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x188e5a16c38 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x188e5a16ca8 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x188e5a16d10 prev 0x188e5a16b98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x188e5a16a80 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x188e5a16ee8 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x188e5a16db8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a12270 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a12038 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x188e5a120b0 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x188e5a12320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a12548 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x188e5a12468 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x188e5a12798 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a12620 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x188e5a12698 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a12b58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x188e5a12930 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x188e5a129b0 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x188e5a12c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a12e30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x188e5a12d50 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x188e5a18108 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x188e5a17fc0 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x188e5a182f0 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x188e5a18740 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x188e5a183b8 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x188e5a18438 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x188e5a184b8 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x188e5a18530 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5a18bc0 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x188e5a18830 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a188a8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a18920 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a189a0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x188e5a18fd0 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x188e5a18cb0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a18d28 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a18da8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x188e5a19198 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x188e5a190b8 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x188e5a19570 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x188e5a19610 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x188e5a19678 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x188e5a196f0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x188e5a19758 prev 0x188e5a19570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x188e5a19330 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x188e5a193b0 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x188e5a19938 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x188e5a19808 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a19d28 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a19a48 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x188e5a19ac8 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x188e5a19b40 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x188e5a19de0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a1a0e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x188e5a19f28 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x188e5a19fe0 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x188e5a1a3d8 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a1a1c0 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x188e5a1a240 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x188e5a1a2b8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a1a868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x188e5a1a580 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x188e5a1a5f8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a1a678 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x188e5a1a920 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a1aef0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a1ab60 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x188e5a1abd8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a1ac58 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x188e5a1acd0 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x188e5a14f90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a152f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x188e5a150d8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x188e5a15150 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a151d0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x188e5a15688 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a153d8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x188e5a15450 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a154d0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x188e5a15548 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a158e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x188e5a15988 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a15c40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x188e5a15ad0 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x188e5a12f70 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x188e5a15d18 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x188e5a15d90 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x188e5a131f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x188e5a13110 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x188e5a13298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a13558 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x188e5a133e0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x188e5a13458 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x188e5a13970 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x188e5a13a10 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x188e5a13a78 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x188e5a13ae0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x188e5a13b60 <col:40> Implicit printf 2 0
|-FunctionDecl 0x188e5a13bc8 prev 0x188e5a13970 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x188e5a13630 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x188e5a136b0 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x188e5a13728 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x188e5a13cc8 <col:40> Inherited printf 2 0
|-FunctionDecl 0x188e5a16fb0 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x188e5a17050 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x188e5a170b8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x188e5a17120 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x188e5a171a0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x188e5a17208 prev 0x188e5a16fb0 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x188e5a13d10 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x188e5a13d90 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x188e5a13e08 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x188e5a17308 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x188e5a17568 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x188e5a17350 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x188e5a173d0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x188e5a17448 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a17860 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x188e5a17648 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x188e5a176c8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x188e5a17740 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a17ba8 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x188e5a17c48 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x188e5a17cb0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x188e5a17d28 <col:40> Implicit printf 1 0
|-FunctionDecl 0x188e5a17d90 prev 0x188e5a17ba8 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x188e5a17948 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x188e5a179c0 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x188e5a17e88 <col:40> Inherited printf 1 0
|-FunctionDecl 0x188e5a1b128 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x188e5a1b1c8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x188e5a1b230 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x188e5a1b2a8 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x188e5a1b310 prev 0x188e5a1b128 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x188e5a17ed8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x188e5a1aff0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x188e5a1b408 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x188e5a1b5d0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x188e5a1b458 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x188e5a1b4d0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a1b828 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x188e5a1b6b0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x188e5a1b728 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a1bd88 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x188e5a1be28 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x188e5a1be90 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x188e5a1bef8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x188e5a1bf60 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x188e5a13f80 <col:77> Implicit printf 3 0
|-FunctionDecl 0x188e5a13fe8 prev 0x188e5a1bd88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x188e5a1b9c8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a1ba40 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a1bac0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x188e5a1bb38 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x188e5a141d8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x188e5a140a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a14648 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x188e5a14228 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a142a0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a14318 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a14398 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x188e5a14410 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a14a88 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x188e5a14740 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a147b8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a14830 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a148b0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x188e5a14928 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a14e58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x188e5a14c40 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x188e5a14cb8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a14d38 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x188e5a14f10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a1c470 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x188e5a1c1c0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x188e5a1c238 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a1c2b8 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x188e5a1c330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x188e5a1c530 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a1c928 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x188e5a1c678 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a1c6f0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a1c770 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x188e5a1c7e8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a1cce8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x188e5a1ca18 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x188e5a1ca98 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x188e5a1cb10 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a22100 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x188e5a221a0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x188e5a22208 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x188e5a22280 <col:85> Implicit printf 2 3
|-FunctionDecl 0x188e5a222e8 prev 0x188e5a22100 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x188e5a1ce90 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x188e5a1cf10 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x188e5a224c8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x188e5a22398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a228f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x188e5a22990 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x188e5a229f8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x188e5a22a60 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x188e5a22ae0 <col:94> Implicit printf 2 0
|-FunctionDecl 0x188e5a22b48 prev 0x188e5a228f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x188e5a225d8 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x188e5a22658 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x188e5a226d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x188e5a22d30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x188e5a22c00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a1e020 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x188e5a1e0c0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x188e5a1e128 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x188e5a1e190 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x188e5a1e210 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x188e5a1e278 prev 0x188e5a1e020 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x188e5a22d80 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x188e5a22e00 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x188e5a22e78 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x188e5a1e378 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x188e5a1e540 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x188e5a1e3c8 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x188e5a1e440 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a1e838 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x188e5a1e620 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a1e698 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a1e718 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x188e5a1ebd0 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x188e5a1e920 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a1e998 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a1ea18 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x188e5a1ea90 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a1ee38 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x188e5a1ecb8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x188e5a1ed38 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x188e5a21050 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x188e5a1ef18 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x188e5a21340 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x188e5a21128 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x188e5a211a0 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a21220 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x188e5a21638 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x188e5a21420 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x188e5a214a0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x188e5a21518 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a21898 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x188e5a21720 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x188e5a21798 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a21c28 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x188e5a21978 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x188e5a219f0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a21a70 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x188e5a21ae8 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a21df8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x188e5a21d18 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x188e5a1d010 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x188e5a21ed0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x188e5a21f48 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a1d1d0 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x188e5a1d0f0 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x188e5a1d360 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x188e5a1d5a8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a1d430 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x188e5a1d4a8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a1d800 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a1d688 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x188e5a1d700 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a1da58 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a1d8e0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x188e5a1d958 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a1de08 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a1db38 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x188e5a1dbb0 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x188e5a1dc28 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a261c0 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a1def0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x188e5a1df68 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x188e5a260a0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a264b8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a262a8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x188e5a26320 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x188e5a26398 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a267b0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a26598 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x188e5a26618 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x188e5a26690 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a26aa8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a26890 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x188e5a26910 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x188e5a26988 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a26da0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a26b88 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x188e5a26c08 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x188e5a26c80 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a231d0 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a26e80 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x188e5a26f00 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x188e5a26f78 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x188e5a26ff0 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a23568 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a232b8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x188e5a23338 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x188e5a233b0 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x188e5a23428 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a23900 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a23650 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x188e5a236d0 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x188e5a23748 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x188e5a237c0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a23d98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a23ab0 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a23b30 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x188e5a23ba8 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x188e5a23e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a273c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a23f98 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a270b0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a27130 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x188e5a271a8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a27760 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a274b0 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a27528 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a275a8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x188e5a27620 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a27cb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a27950 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a279d0 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x188e5a27a48 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x188e5a27ac0 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x188e5a27d70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a20278 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a27eb8 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a27f30 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a27fb0 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x188e5a28028 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x188e5a20040 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a206b8 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a20370 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a203e8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a20468 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x188e5a204e0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x188e5a20558 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a20928 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a207b0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x188e5a20828 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a20b80 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a20a08 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x188e5a20a80 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a20e70 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a20c60 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x188e5a20cd8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x188e5a20d50 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a241b0 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a20f58 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x188e5a20fd0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x188e5a24090 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a24608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a24358 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a243d0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a24450 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x188e5a244c8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x188e5a246c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a24ac0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a24810 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a24888 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a24908 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x188e5a24980 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a2b0f0 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a24bb0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a24c28 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a24ca0 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a24d20 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x188e5a24d98 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a2b630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a2b2e8 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a2b360 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a2b3e0 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x188e5a2b458 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x188e5a2b4d0 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x188e5a2b6f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a2bb78 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a2b848 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a2b8c0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a2b940 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x188e5a2b9b8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x188e5a2ba30 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a28120 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a2bc70 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a2bce8 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a2bd60 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a2bde0 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x188e5a2be58 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x188e5a2bed0 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a284e0 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x188e5a28218 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x188e5a28290 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x188e5a28310 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x188e5a28750 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x188e5a285e0 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x188e5a28968 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x188e5a28c48 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x188e5a28a30 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x188e5a28aa8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x188e5a28e90 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x188e5a28d20 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x188e5a290d0 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x188e5a28f60 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x188e5a29258 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x188e5a29490 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x188e5a29320 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x188e5a29398 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x188e5a29640 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x188e5a29568 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x188e5a298e8 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x188e5a29710 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x188e5a29788 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x188e5a29c90 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x188e5a299c0 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x188e5a29a40 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x188e5a29ab8 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x188e5a29f90 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x188e5a29d70 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x188e5a29de8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x188e5a2c2b8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x188e5a2a068 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x188e5a2c110 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5a2c5c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x188e5a2c450 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x188e5a2c668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a2c928 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x188e5a2c7a8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x188e5a2cc30 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x188e5a2c9f8 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x188e5a2ca70 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x188e5a2ce80 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x188e5a2cd08 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x188e5a2cd80 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x188e5a25090 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x188e5a2cf58 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x188e5a25240 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x188e5a25160 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x188e5a253f0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x188e5a25310 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x188e5a25788 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x188e5a254c0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x188e5a25538 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a255b0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a25a78 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x188e5a25868 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x188e5a258e0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a25958 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a25d68 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x188e5a25b58 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x188e5a25bd0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a25c48 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a2d110 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x188e5a25e48 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x188e5a25ec0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a25f38 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a2d410 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x188e5a2d1f0 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a2d268 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a2d660 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x188e5a2d4e8 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a2d560 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a2d8b0 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x188e5a2d738 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a2d7b0 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a2db00 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x188e5a2d988 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a2da00 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a2deb8 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x188e5a2dbd8 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x188e5a2dc50 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a2dcc8 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x188e5a2e330 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x188e5a2df98 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x188e5a2e010 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a2e088 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a2e120 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a2e6e8 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x188e5a2e418 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x188e5a2e490 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a2e508 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a2e9d8 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x188e5a2e7c8 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x188e5a2e840 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a2e8b8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a2ecc8 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x188e5a2eab8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x188e5a2eb30 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a2eba8 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x188e5a2f050 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x188e5a2eda8 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x188e5a2ee20 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a2ee98 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a2ef10 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a2f4e0 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x188e5a2f158 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x188e5a2f1d0 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a2f248 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a2f2c0 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x188e5a2f9e8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x188e5a2f5c8 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x188e5a2f640 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a2f6b8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a2f730 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a2f7a8 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a2fda8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x188e5a2fb98 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x188e5a2fc10 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a2fc88 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x188e5a2fe60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a30370 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x188e5a30060 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x188e5a30140 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a301b8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x188e5a30230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x188e5a30430 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a306e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x188e5a30570 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x188e5a305e8 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x188e5a308a0 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x188e5a307c0 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x188e5a30b80 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x188e5a30970 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x188e5a309e8 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a30a60 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a30dd8 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x188e5a30c60 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a30cd8 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a33fa0 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x188e5a30eb0 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x188e5a30f28 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a30fa0 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x188e5a34328 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x188e5a34080 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x188e5a340f8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a34170 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a341e8 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a344f0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x188e5a34410 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x188e5a34738 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x188e5a345c0 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a34638 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a34a40 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a34810 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a34888 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a34c90 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a34b18 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a34b90 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a34ee0 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a34d68 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a34de0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a33288 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a32fb8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x188e5a33030 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x188e5a330a8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a33578 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a33368 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x188e5a333e0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x188e5a33458 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a33868 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a33658 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x188e5a336d0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x188e5a33748 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a33c28 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a33948 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x188e5a339c0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a33a38 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a38ff0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a33d08 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x188e5a33d80 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a33df8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a392e0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a390d0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x188e5a39148 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a391c0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a39730 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a393c0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x188e5a39438 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x188e5a394b0 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x188e5a39528 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a39ac0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a39818 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x188e5a39890 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x188e5a39908 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x188e5a39980 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a39e50 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a39ba8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x188e5a39c20 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x188e5a39c98 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x188e5a39d10 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a3a310 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a39f38 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x188e5a3a000 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a3a078 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a3a0f0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a3a6a0 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a3a3f8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x188e5a3a470 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a3a4e8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a3a560 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a3aa30 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a3a788 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x188e5a3a800 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a3a878 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a3a8f0 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a3af38 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a3ab18 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x188e5a3ab90 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a3ac08 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x188e5a3ac80 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x188e5a3acf8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a3b378 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a3b038 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x188e5a3b0b0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a3b128 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x188e5a3b1a0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x188e5a3b218 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a3b7a8 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a3b468 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x188e5a3b4e0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a3b558 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x188e5a3b5d0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x188e5a3b648 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a3ba10 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a3b898 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a3b910 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a3bc60 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a3bae8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a3bb60 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a3bf48 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a3bd38 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x188e5a3bdb0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x188e5a3be28 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a3c3b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a3c110 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x188e5a3c188 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a3c200 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x188e5a3c278 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x188e5a3c478 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a3c9e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a3c5c0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x188e5a3c638 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a3c6b0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a3c728 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a3c7a0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a3cf20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a3cbe0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x188e5a3cc58 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a3ccd0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x188e5a3cd48 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x188e5a3cdc0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x188e5a34fb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a355c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a350f8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x188e5a35170 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a351e8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a35260 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x188e5a352d8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x188e5a35350 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a35ac0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x188e5a35888 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x188e5a35900 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x188e5a35b70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x188e5a35c88 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x188e5a3d298 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x188e5a35f40 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x188e5a3d040 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x188e5a3d0b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x188e5a3d350 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x188e5a3d468 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x188e5a3da08 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a3d728 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x188e5a3d7a0 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x188e5a3d818 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x188e5a3dac0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x188e5a3dbe0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x188e5a361d0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a3dea0 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x188e5a3df18 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x188e5a3df90 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x188e5a35fc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x188e5a36290 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x188e5a363b0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x188e5a366b8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x188e5a364d8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x188e5a36550 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a365c8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x188e5a37270 <line:37:1, line:44:1>
|   |-DeclStmt 0x188e5a36800 <line:38:5, col:21>
|   | `-VarDecl 0x188e5a36798 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x188e5a36898 <line:39:5, col:13>
|   | `-VarDecl 0x188e5a36830 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x188e5a36bf0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x188e5a36bd8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x188e5a36af0 <col:34> '<builtin fn type>' Function 0x188e5a36988 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x188e5a36b28 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x188e5a36798 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x188e5a36b60 <col:29> 'const wchar_t *' lvalue ParmVar 0x188e5a365c8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x188e5a36eb0 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x188e5a36c20 <col:5> 'int' lvalue Var 0x188e5a36830 '_Ret' 'int'
|   | `-CallExpr 0x188e5a36df0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x188e5a36dd8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x188e5a36c58 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x188e5a3af38 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x188e5a36e38 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x188e5a36c78 <col:27> 'wchar_t *' lvalue ParmVar 0x188e5a364d8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x188e5a36e50 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x188e5a36c98 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x188e5a36550 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x188e5a36e68 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x188e5a36cb8 <col:44> 'const wchar_t *' lvalue ParmVar 0x188e5a365c8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x188e5a36e80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x188e5a36d40 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x188e5a36d18 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x188e5a36cd8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x188e5a36e98 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x188e5a36d60 <col:59> 'va_list':'char *' lvalue Var 0x188e5a36798 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x188e5a37200 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x188e5a371e8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x188e5a37138 <col:34> '<builtin fn type>' Function 0x188e5a36fd0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x188e5a37170 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x188e5a36798 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x188e5a37260 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x188e5a37248 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x188e5a37228 <col:12> 'int' lvalue Var 0x188e5a36830 '_Ret' 'int'
|-FunctionDecl 0x188e5a36988 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x188e5a36a28 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x188e5a36a98 <col:34> Implicit
|-FunctionDecl 0x188e5a36fd0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x188e5a37070 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x188e5a370e0 <col:34> Implicit
|-FunctionDecl 0x188e5a37568 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x188e5a372c0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x188e5a37338 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a373b0 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x188e5a37428 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x188e5a37850 <line:50:1, line:52:1>
|   `-ReturnStmt 0x188e5a37840 <line:51:5, col:62>
|     `-CallExpr 0x188e5a37780 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x188e5a37768 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x188e5a37640 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x188e5a3af38 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x188e5a377c8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x188e5a37660 <col:27> 'wchar_t *' lvalue ParmVar 0x188e5a372c0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x188e5a377e0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x188e5a37680 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x188e5a37338 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x188e5a377f8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x188e5a376a0 <col:44> 'const wchar_t *' lvalue ParmVar 0x188e5a373b0 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x188e5a37810 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x188e5a37728 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x188e5a37700 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x188e5a376c0 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x188e5a37828 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x188e5a37748 <col:59> 'va_list':'char *' lvalue ParmVar 0x188e5a37428 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x188e5a37af0 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x188e5a37878 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x188e5a378f0 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a37968 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x188e5a379e0 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x188e5a41118 <line:61:1, line:68:1>
|   |-DeclStmt 0x188e5a37c40 <line:62:5, col:21>
|   | `-VarDecl 0x188e5a37bd8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x188e5a37cd8 <line:63:5, col:13>
|   | `-VarDecl 0x188e5a37c70 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x188e5a37d80 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x188e5a37d68 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x188e5a37cf0 <col:34> '<builtin fn type>' Function 0x188e5a36988 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x188e5a37d10 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x188e5a37bd8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x188e5a37d48 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x188e5a379e0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x188e5a37f80 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x188e5a37db0 <col:5> 'int' lvalue Var 0x188e5a37c70 '_Ret' 'int'
|   | `-CallExpr 0x188e5a37ec0 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x188e5a37ea8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x188e5a37de8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x188e5a3af38 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x188e5a37f08 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x188e5a37e08 <col:27> 'wchar_t *' lvalue ParmVar 0x188e5a37878 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x188e5a37f20 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x188e5a37e28 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x188e5a378f0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x188e5a37f38 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x188e5a37e48 <col:44> 'const wchar_t *' lvalue ParmVar 0x188e5a37968 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x188e5a37f50 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x188e5a37e68 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x188e5a379e0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x188e5a37f68 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x188e5a37e88 <col:64> 'va_list':'char *' lvalue Var 0x188e5a37bd8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x188e5a410a8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x188e5a41090 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x188e5a37fa0 <col:34> '<builtin fn type>' Function 0x188e5a36fd0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x188e5a41070 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x188e5a37bd8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x188e5a41108 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x188e5a410f0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x188e5a410d0 <col:12> 'int' lvalue Var 0x188e5a37c70 '_Ret' 'int'
|-FunctionDecl 0x188e5a414a8 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x188e5a41168 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x188e5a411e0 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a41258 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x188e5a412d0 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x188e5a41348 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x188e5a41730 <line:74:1, line:76:1>
|   `-ReturnStmt 0x188e5a41720 <line:75:5, col:67>
|     `-CallExpr 0x188e5a41660 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x188e5a41648 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x188e5a41588 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x188e5a3af38 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x188e5a416a8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x188e5a415a8 <col:27> 'wchar_t *' lvalue ParmVar 0x188e5a41168 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x188e5a416c0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x188e5a415c8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x188e5a411e0 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x188e5a416d8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x188e5a415e8 <col:44> 'const wchar_t *' lvalue ParmVar 0x188e5a41258 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x188e5a416f0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x188e5a41608 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x188e5a412d0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x188e5a41708 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x188e5a41628 <col:64> 'va_list':'char *' lvalue ParmVar 0x188e5a41348 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x188e5a41978 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x188e5a41758 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x188e5a417d0 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x188e5a41bc8 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x188e5a41a50 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a41ac8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a41eb0 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x188e5a41ca0 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x188e5a41d18 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x188e5a41d90 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x188e5a3f1c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x188e5a3f050 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x188e5a3f0c8 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x188e5a3f278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a3f688 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a3f478 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x188e5a3f4f0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x188e5a3f568 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x188e5a3f740 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a3f9f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x188e5a3f880 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x188e5a3f8f8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x188e5a3fce0 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a3fad0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x188e5a3fb48 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a3fbc0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a420f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x188e5a3fe80 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x188e5a3fef8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x188e5a421a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a42678 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a423a0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x188e5a42418 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x188e5a42490 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x188e5a42730 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a429e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x188e5a42870 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x188e5a428e8 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x188e5a42cd0 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a42ac0 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x188e5a42b38 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a42bb0 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a471b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x188e5a42e70 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x188e5a42ee8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a42f60 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x188e5a47270 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a477f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a47470 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x188e5a474e8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a47560 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x188e5a475d8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x188e5a478b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a47c00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x188e5a479f0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x188e5a47a68 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a47ae0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x188e5a47f88 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a47ce0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x188e5a47d58 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a47dd0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a47e48 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a45260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x188e5a45180 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x188e5a45308 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a45680 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a45508 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x188e5a45580 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x188e5a45730 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a45950 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x188e5a45870 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x188e5a45b98 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x188e5a45a20 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x188e5a45a98 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a45e98 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x188e5a45c78 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x188e5a45cf0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x188e5a40208 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x188e5a46030 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x188e5a40060 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x188e5a402b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a406c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x188e5a40400 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x188e5a40478 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x188e5a404f0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x188e5a40b20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x188e5a40860 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x188e5a408d8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x188e5a40950 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x188e5a40bd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a46108 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x188e5a40d20 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x188e5a40d98 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x188e5a40e10 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x188e5a40e88 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x188e5a46360 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x188e5a461f0 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x188e5a465a0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x188e5a46430 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x188e5a464a8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x188e5a46758 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x188e5a46678 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x188e5a46a48 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x188e5a46828 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x188e5a468a0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5a46cb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x188e5a46be0 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x188e5a46d60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a46f78 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x188e5a46ea0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x188e5a491e8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x188e5a47048 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x188e5a490f0 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x188e5a49430 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x188e5a492c0 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x188e5a49338 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x188e5a495e0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x188e5a49508 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x188e5a49788 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x188e5a496b0 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x188e5a49938 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x188e5a49858 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x188e5a49ae8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x188e5a49a08 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x188e5a49e60 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x188e5a49bc0 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x188e5a49c38 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a49cb0 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a49d28 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x188e5a43260 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x188e5a49f50 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x188e5a49fc8 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a4a040 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a43090 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a43108 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x188e5a43570 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x188e5a43350 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x188e5a433d0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x188e5a43450 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x188e5a43730 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x188e5a43650 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x188e5a43a20 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x188e5a43800 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x188e5a43880 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x188e5a43900 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x188e5a43be0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x188e5a43b00 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x188e5a43f58 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x188e5a43cb8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x188e5a43d30 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a43da8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a43e20 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x188e5a4b288 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x188e5a4b110 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x188e5a4b188 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x188e5a4b5c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x188e5a4b440 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x188e5a4b4c0 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x188e5a4b670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x188e5a4b928 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x188e5a4b9c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x188e5a4bd08 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x188e5a4bb90 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x188e5a4bc10 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x188e5a4bdb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x188e5a440a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x188e5a44140 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x188e5a443e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x188e5a44300 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x188e5a44488 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x188e5a44708 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x188e5a447a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x188e5a44a50 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x188e5a44970 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x188e5a44af8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x188e5a44dd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x188e5a44cf8 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x188e5a44e80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x188e5a4c298 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x188e5a4c120 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x188e5a4c198 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x188e5a4c348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x188e5a4c608 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x188e5a4c6a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-TypedefDecl 0x188e5a4c978 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:52:1, col:24> col:24 referenced _onexit_t 'int (*)(void) __attribute__((cdecl))'
| `-PointerType 0x188e5a4c910 'int (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x188e5a4c8b0 'int (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x188e5a4c860 'int (void)' sugar
|     | `-FunctionProtoType 0x188e59ba2a0 'int (void)' cdecl
|     |   `-BuiltinType 0x188e3f58d50 'int'
|     `-ParenType 0x188e5a4c860 'int (void)' sugar
|       `-FunctionProtoType 0x188e59ba2a0 'int (void)' cdecl
|         `-BuiltinType 0x188e3f58d50 'int'
|-RecordDecl 0x188e5a4c9d0 <line:75:9, line:78:1> line:75:16 struct _div_t definition
| |-MaxFieldAlignmentAttr 0x188e5a4ca90 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x188e5a4cb08 <line:76:9, col:13> col:13 quot 'int'
| `-FieldDecl 0x188e5a4cb78 <line:77:9, col:13> col:13 rem 'int'
|-TypedefDecl 0x188e5a4cc28 <line:75:1, line:78:3> col:3 referenced div_t 'struct _div_t':'struct _div_t'
| `-ElaboratedType 0x188e5a4cbd0 'struct _div_t' sugar
|   `-RecordType 0x188e5a4ca70 'struct _div_t'
|     `-Record 0x188e5a4c9d0 '_div_t'
|-RecordDecl 0x188e5a4cc98 <line:80:9, line:83:1> line:80:16 struct _ldiv_t definition
| |-MaxFieldAlignmentAttr 0x188e5a4cd50 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x188e5a4cdc8 <line:81:9, col:14> col:14 quot 'long'
| `-FieldDecl 0x188e5a4ce38 <line:82:9, col:14> col:14 rem 'long'
|-TypedefDecl 0x188e5a4cee8 <line:80:1, line:83:3> col:3 referenced ldiv_t 'struct _ldiv_t':'struct _ldiv_t'
| `-ElaboratedType 0x188e5a4ce90 'struct _ldiv_t' sugar
|   `-RecordType 0x188e5a4cd30 'struct _ldiv_t'
|     `-Record 0x188e5a4cc98 '_ldiv_t'
|-RecordDecl 0x188e5a4cf58 <line:85:9, line:88:1> line:85:16 struct _lldiv_t definition
| |-MaxFieldAlignmentAttr 0x188e5a4d010 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x188e5a4d088 <line:86:9, col:19> col:19 quot 'long long'
| `-FieldDecl 0x188e5a5b020 <line:87:9, col:19> col:19 rem 'long long'
|-TypedefDecl 0x188e5a5b0d8 <line:85:1, line:88:3> col:3 referenced lldiv_t 'struct _lldiv_t':'struct _lldiv_t'
| `-ElaboratedType 0x188e5a5b080 'struct _lldiv_t' sugar
|   `-RecordType 0x188e5a4cff0 'struct _lldiv_t'
|     `-Record 0x188e5a4cf58 '_lldiv_t'
|-RecordDecl 0x188e5a5b170 <line:103:9, line:105:1> line:103:9 struct definition
| |-MaxFieldAlignmentAttr 0x188e5a5b230 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x188e5a5b330 <line:104:5, col:24> col:19 ld 'unsigned char [10]'
|-TypedefDecl 0x188e5a5b3e8 <line:103:1, line:105:3> col:3 referenced _LDOUBLE 'struct _LDOUBLE':'_LDOUBLE'
| `-ElaboratedType 0x188e5a5b390 'struct _LDOUBLE' sugar
|   `-RecordType 0x188e5a5b210 '_LDOUBLE'
|     `-Record 0x188e5a5b170 ''
|-RecordDecl 0x188e5a5b458 <line:122:9, line:124:1> line:122:9 struct definition
| `-FieldDecl 0x188e5a5b528 <line:123:9, col:16> col:16 x 'double'
|-TypedefDecl 0x188e5a5b5d8 <line:122:1, line:124:3> col:3 referenced _CRT_DOUBLE 'struct _CRT_DOUBLE':'_CRT_DOUBLE'
| `-ElaboratedType 0x188e5a5b580 'struct _CRT_DOUBLE' sugar
|   `-RecordType 0x188e5a5b4f0 '_CRT_DOUBLE'
|     `-Record 0x188e5a5b458 ''
|-RecordDecl 0x188e5a5b648 <line:126:9, line:128:1> line:126:9 struct definition
| `-FieldDecl 0x188e5a5b718 <line:127:5, col:11> col:11 f 'float'
|-TypedefDecl 0x188e5a5b7c8 <line:126:1, line:128:3> col:3 referenced _CRT_FLOAT 'struct _CRT_FLOAT':'_CRT_FLOAT'
| `-ElaboratedType 0x188e5a5b770 'struct _CRT_FLOAT' sugar
|   `-RecordType 0x188e5a5b6e0 '_CRT_FLOAT'
|     `-Record 0x188e5a5b648 ''
|-RecordDecl 0x188e5a5b838 <line:134:9, line:139:1> line:134:9 struct definition
| `-FieldDecl 0x188e5a5b908 <line:138:9, col:21> col:21 x 'long double'
|-TypedefDecl 0x188e5a5b9b8 <line:134:1, line:139:3> col:3 _LONGDOUBLE 'struct _LONGDOUBLE':'_LONGDOUBLE'
| `-ElaboratedType 0x188e5a5b960 'struct _LONGDOUBLE' sugar
|   `-RecordType 0x188e5a5b8d0 '_LONGDOUBLE'
|     `-Record 0x188e5a5b838 ''
|-RecordDecl 0x188e5a5ba50 <line:144:9, line:146:1> line:144:9 struct definition
| |-MaxFieldAlignmentAttr 0x188e5a5bb10 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x188e5a5bc10 <line:145:5, col:26> col:19 ld12 'unsigned char [12]'
|-TypedefDecl 0x188e5a5bcc8 <line:144:1, line:146:3> col:3 _LDBL12 'struct _LDBL12':'_LDBL12'
| `-ElaboratedType 0x188e5a5bc70 'struct _LDBL12' sugar
|   `-RecordType 0x188e5a5baf0 '_LDBL12'
|     `-Record 0x188e5a5ba50 ''
|-VarDecl 0x188e5a5bd50 <line:170:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x188e5a5bea0 <line:175:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x188e5a5c0f8 <line:176:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x188e5a5bf68 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-TypedefDecl 0x188e5a5c340 <line:215:1, col:24> col:24 referenced _purecall_handler 'void (*)(void) __attribute__((cdecl))'
| `-PointerType 0x188e5a5c2e0 'void (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x188e5a5c280 'void (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x188e5a5c230 'void (void)' sugar
|     | `-FunctionProtoType 0x188e5976c80 'void (void)' cdecl
|     |   `-BuiltinType 0x188e3f58cb0 'void'
|     `-ParenType 0x188e5a5c230 'void (void)' sugar
|       `-FunctionProtoType 0x188e5976c80 'void (void)' cdecl
|         `-BuiltinType 0x188e3f58cb0 'void'
|-FunctionDecl 0x188e5a5c540 <line:218:9, col:92> col:35 _set_purecall_handler '_purecall_handler (_purecall_handler) __attribute__((cdecl))':'_purecall_handler (_purecall_handler)'
| `-ParmVarDecl 0x188e5a5c3d0 <col:66, col:84> col:84 _Handler '_purecall_handler':'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x188e5a5c758 <line:219:9, col:61> col:35 _get_purecall_handler '_purecall_handler (void) __attribute__((cdecl))':'_purecall_handler (void)'
|-TypedefDecl 0x188e5a5cba8 <line:235:1, col:24> col:24 referenced _invalid_parameter_handler 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
| `-PointerType 0x188e5a5cb20 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|   `-AttributedType 0x188e5a5cac0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))' sugar
|     |-ParenType 0x188e5a5ca70 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|     | `-FunctionProtoType 0x188e59b1c50 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|     |   |-BuiltinType 0x188e3f58cb0 'void'
|     |   |-PointerType 0x188e5977050 'const wchar_t *'
|     |   | `-QualType 0x188e5977001 'const wchar_t' const
|     |   |   `-TypedefType 0x188e5977000 'wchar_t' sugar
|     |   |     |-Typedef 0x188e59768f0 'wchar_t'
|     |   |     `-BuiltinType 0x188e3f58dd0 'unsigned short'
|     |   |-PointerType 0x188e5977050 'const wchar_t *'
|     |   | `-QualType 0x188e5977001 'const wchar_t' const
|     |   |   `-TypedefType 0x188e5977000 'wchar_t' sugar
|     |   |     |-Typedef 0x188e59768f0 'wchar_t'
|     |   |     `-BuiltinType 0x188e3f58dd0 'unsigned short'
|     |   |-PointerType 0x188e5977050 'const wchar_t *'
|     |   | `-QualType 0x188e5977001 'const wchar_t' const
|     |   |   `-TypedefType 0x188e5977000 'wchar_t' sugar
|     |   |     |-Typedef 0x188e59768f0 'wchar_t'
|     |   |     `-BuiltinType 0x188e3f58dd0 'unsigned short'
|     |   |-BuiltinType 0x188e3f58df0 'unsigned int'
|     |   `-TypedefType 0x188e5977260 'uintptr_t' sugar
|     |     |-Typedef 0x188e3f59ad0 'uintptr_t'
|     |     `-BuiltinType 0x188e3f58e30 'unsigned long long'
|     `-ParenType 0x188e5a5ca70 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|       `-FunctionProtoType 0x188e59b1c50 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|         |-BuiltinType 0x188e3f58cb0 'void'
|         |-PointerType 0x188e5977050 'const wchar_t *'
|         | `-QualType 0x188e5977001 'const wchar_t' const
|         |   `-TypedefType 0x188e5977000 'wchar_t' sugar
|         |     |-Typedef 0x188e59768f0 'wchar_t'
|         |     `-BuiltinType 0x188e3f58dd0 'unsigned short'
|         |-PointerType 0x188e5977050 'const wchar_t *'
|         | `-QualType 0x188e5977001 'const wchar_t' const
|         |   `-TypedefType 0x188e5977000 'wchar_t' sugar
|         |     |-Typedef 0x188e59768f0 'wchar_t'
|         |     `-BuiltinType 0x188e3f58dd0 'unsigned short'
|         |-PointerType 0x188e5977050 'const wchar_t *'
|         | `-QualType 0x188e5977001 'const wchar_t' const
|         |   `-TypedefType 0x188e5977000 'wchar_t' sugar
|         |     |-Typedef 0x188e59768f0 'wchar_t'
|         |     `-BuiltinType 0x188e3f58dd0 'unsigned short'
|         |-BuiltinType 0x188e3f58df0 'unsigned int'
|         `-TypedefType 0x188e5977260 'uintptr_t' sugar
|           |-Typedef 0x188e3f59ad0 'uintptr_t'
|           `-BuiltinType 0x188e3f58e30 'unsigned long long'
|-FunctionDecl 0x188e5a5cda0 <line:238:9, col:119> col:44 _set_invalid_parameter_handler '_invalid_parameter_handler (_invalid_parameter_handler) __attribute__((cdecl))':'_invalid_parameter_handler (_invalid_parameter_handler)'
| `-ParmVarDecl 0x188e5a5cc30 <col:84, col:111> col:111 _Handler '_invalid_parameter_handler':'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|-FunctionDecl 0x188e5a5d040 <line:239:9, col:79> col:44 _get_invalid_parameter_handler '_invalid_parameter_handler (void) __attribute__((cdecl))':'_invalid_parameter_handler (void)'
|-FunctionDecl 0x188e5a5d220 <line:245:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x188e5a5d430 <line:248:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x188e5a5d2f0 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x188e5a5d680 <line:249:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x188e5a5d508 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x188e5a5d8a0 <line:252:9, col:48> col:33 __doserrno 'unsigned long *(void) __attribute__((cdecl))':'unsigned long *(void)'
|-FunctionDecl 0x188e5a5dae0 <line:255:1, col:56> col:17 _set_doserrno 'errno_t (unsigned long) __attribute__((cdecl))':'errno_t (unsigned long)'
| `-ParmVarDecl 0x188e5a5d970 <col:36, col:50> col:50 _Value 'unsigned long'
|-FunctionDecl 0x188e5a5dd30 <line:256:1, col:59> col:17 _get_doserrno 'errno_t (unsigned long *) __attribute__((cdecl))':'errno_t (unsigned long *)'
| `-ParmVarDecl 0x188e5a5dbb8 <col:37, col:53> col:53 _Value 'unsigned long *'
|-FunctionDecl 0x188e5a650c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:259:77> col:59 __sys_errlist 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x188e5a65160 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a65420 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:262:72> col:57 __sys_nerr 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x188e5a654c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x188e5a65608 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:288:9, col:20> col:20 __argc 'int' extern
|-VarDecl 0x188e5a656a0 <line:289:9, col:24> col:24 __argv 'char **' extern
|-VarDecl 0x188e5a65790 <line:290:9, col:27> col:27 __wargv 'wchar_t **' extern
|-VarDecl 0x188e5a65828 <line:306:9, col:24> col:24 _environ 'char **' extern
|-VarDecl 0x188e5a658c0 <line:307:9, col:27> col:27 _wenviron 'wchar_t **' extern
|-VarDecl 0x188e5a65a18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:311:68> col:68 _pgmptr 'char *' extern
| `-DeprecatedAttr 0x188e5a65a80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_pgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x188e5a65c80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:312:72> col:72 _wpgmptr 'wchar_t *' extern
| `-DeprecatedAttr 0x188e5a65ce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_wpgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a65fa0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:339:1, col:61> col:17 _get_pgmptr 'errno_t (char **) __attribute__((cdecl))':'errno_t (char **)'
| `-ParmVarDecl 0x188e5a65e30 <col:47, col:55> col:55 _Value 'char **'
|-FunctionDecl 0x188e5a5f1d0 <line:340:1, col:65> col:17 _get_wpgmptr 'errno_t (wchar_t **) __attribute__((cdecl))':'errno_t (wchar_t **)'
| `-ParmVarDecl 0x188e5a5f060 <col:48, col:59> col:59 _Value 'wchar_t **'
|-VarDecl 0x188e5a5f368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:346:64> col:64 _fmode 'int' extern
| `-DeprecatedAttr 0x188e5a5f3d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_fmode instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a5f5f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:353:9, col:50> col:25 _set_fmode 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x188e5a5f518 <col:41, col:45> col:45 _Mode 'int'
|-FunctionDecl 0x188e5a5f7a0 <line:354:9, col:54> col:25 _get_fmode 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x188e5a5f6c8 <col:42, col:48> col:48 _PMode 'int *'
|-FunctionDecl 0x188e5a5f9f0 <line:376:43> col:43 implicit exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x188e5a5fa90 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x188e5a5fb00 prev 0x188e5a5f9f0 <col:9, col:62> col:43 exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x188e5a5f878 <col:53, col:57> col:57 _Code 'int'
|-FunctionDecl 0x188e5a5fcb0 <line:378:43> col:43 implicit _exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x188e5a5fd50 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x188e5a5fdc0 prev 0x188e5a5fcb0 <col:9, col:63> col:43 _exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x188e5a5fbd8 <col:54, col:58> col:58 _Code 'int'
|-FunctionDecl 0x188e5a5ff48 <line:379:43> col:43 implicit abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x188e5a60070 prev 0x188e5a5ff48 <col:9, col:53> col:43 abort 'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x188e5a60330 <line:382:9, col:99> col:30 _set_abort_behavior 'unsigned int (unsigned int, unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int, unsigned int)'
| |-ParmVarDecl 0x188e5a60140 <col:55, col:68> col:68 _Flags 'unsigned int'
| `-ParmVarDecl 0x188e5a601c0 <col:81, col:94> col:94 _Mask 'unsigned int'
|-FunctionDecl 0x188e5a604f0 <line:384:19> col:19 implicit abs 'int (int)' extern
| |-ParmVarDecl 0x188e5a60590 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x188e5a60600 <col:19> Implicit
| `-ConstAttr 0x188e5a60658 <col:19> Implicit
|-FunctionDecl 0x188e5a60680 prev 0x188e5a604f0 <col:1, col:34> col:19 abs 'int (int)'
| |-ParmVarDecl 0x188e5a60410 <col:28, col:32> col:32 _X 'int'
| |-NoThrowAttr 0x188e5a60770 <col:19> Inherited Implicit
| `-ConstAttr 0x188e5a60798 <col:19> Inherited Implicit
|-FunctionDecl 0x188e5a60928 <line:385:19> col:19 implicit labs 'long (long)' extern
| |-ParmVarDecl 0x188e5a609c8 <<invalid sloc>> <invalid sloc> 'long'
| |-NoThrowAttr 0x188e5a60a38 <col:19> Implicit
| `-ConstAttr 0x188e5a60a90 <col:19> Implicit
|-FunctionDecl 0x188e5a60ab8 prev 0x188e5a60928 <col:1, col:36> col:19 labs 'long (long)'
| |-ParmVarDecl 0x188e5a607d8 <col:29, col:34> col:34 _X 'long'
| |-NoThrowAttr 0x188e5a60ba8 <col:19> Inherited Implicit
| `-ConstAttr 0x188e5a60bd0 <col:19> Inherited Implicit
|-FunctionDecl 0x188e5a60d58 <line:386:19> col:19 implicit llabs 'long long (long long)' extern
| |-ParmVarDecl 0x188e5a60df8 <<invalid sloc>> <invalid sloc> 'long long'
| |-NoThrowAttr 0x188e5a60e68 <col:19> Implicit
| `-ConstAttr 0x188e5a60ec0 <col:19> Implicit
|-FunctionDecl 0x188e5a60ee8 prev 0x188e5a60d58 <col:1, col:42> col:19 llabs 'long long (long long)'
| |-ParmVarDecl 0x188e5a60c10 <col:30, col:40> col:40 _X 'long long'
| |-NoThrowAttr 0x188e5a60fd8 <col:19> Inherited Implicit
| `-ConstAttr 0x188e5a61000 <col:19> Inherited Implicit
|-FunctionDecl 0x188e5a66198 <line:388:9, col:42> col:28 _abs64 'long long (long long) __attribute__((cdecl))':'long long (long long)'
| `-ParmVarDecl 0x188e5a660d0 <col:35> col:42 'long long'
|-FunctionDecl 0x188e5a66498 <line:426:9, col:53> col:24 atexit 'int (void (*)(void) __attribute__((cdecl))) __attribute__((cdecl))':'int (void (*)(void) __attribute__((cdecl)))'
| `-ParmVarDecl 0x188e5a66330 <col:31, col:45> col:46 'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x188e5a666b8 <line:428:24, col:71> col:40 atof 'double (const char *) __attribute__((cdecl))':'double (const char *)'
| `-ParmVarDecl 0x188e5a66570 <col:52, col:64> col:64 _String 'const char *'
|-FunctionDecl 0x188e5a669b0 <line:429:24, col:102> col:40 _atof_l 'double (const char *, _locale_t) __attribute__((cdecl))':'double (const char *, _locale_t)'
| |-ParmVarDecl 0x188e5a66790 <col:55, col:67> col:67 _String 'const char *'
| `-ParmVarDecl 0x188e5a66808 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a66b70 <line:430:43, col:86> col:58 used atoi 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x188e5a66a90 <col:70, col:82> col:82 _Str 'const char *'
|-FunctionDecl 0x188e5a66e70 <line:431:24, col:98> col:39 _atoi_l 'int (const char *, _locale_t) __attribute__((cdecl))':'int (const char *, _locale_t)'
| |-ParmVarDecl 0x188e5a66c48 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x188e5a66cc0 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a670e0 <line:432:24, col:67> col:39 atol 'long (const char *) __attribute__((cdecl))':'long (const char *)'
| `-ParmVarDecl 0x188e5a66f50 <col:51, col:63> col:63 _Str 'const char *'
|-FunctionDecl 0x188e5a673e0 <line:433:24, col:98> col:39 _atol_l 'long (const char *, _locale_t) __attribute__((cdecl))':'long (const char *, _locale_t)'
| |-ParmVarDecl 0x188e5a671b8 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x188e5a67230 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a67608 <line:434:24, col:71> col:42 atoll 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x188e5a674c0 <col:55, col:67> col:67 _Str 'const char *'
|-FunctionDecl 0x188e5a67900 <line:435:24, col:102> col:42 _atoll_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x188e5a676e0 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x188e5a67758 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a68200 <line:439:24, line:441:97> line:439:39 bsearch_s 'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x188e5a679e0 <col:54, col:67> col:67 _Key 'const void *'
| |-ParmVarDecl 0x188e5a67a60 <col:124, col:137> col:137 _Base 'const void *'
| |-ParmVarDecl 0x188e5a67ad8 <line:440:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a67b50 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a67eb0 <line:441:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x188e5a67f30 <col:82, col:89> col:89 _Context 'void *'
|-FunctionDecl 0x188e5a68988 <line:443:24, line:445:72> line:443:39 bsearch 'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x188e5a68300 <col:52, col:65> col:65 _Key 'const void *'
| |-ParmVarDecl 0x188e5a68380 <col:122, col:135> col:135 _Base 'const void *'
| |-ParmVarDecl 0x188e5a683f8 <line:444:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a68470 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a68748 <line:445:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x188e5a61080 <line:448:9, line:450:96> line:448:22 qsort_s 'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x188e5a68a80 <col:85, col:92> col:92 _Base 'void *'
| |-ParmVarDecl 0x188e5a68af8 <line:449:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a68b70 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a68dd8 <line:450:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x188e5a68e58 <col:82, col:88> col:88 _Context 'void *'
|-FunctionDecl 0x188e5a61648 <line:452:9, line:454:72> line:452:22 qsort 'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x188e5a61178 <col:84, col:91> col:91 _Base 'void *'
| |-ParmVarDecl 0x188e5a611f0 <line:453:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a61268 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a61448 <line:454:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x188e5a61848 <line:456:47> col:47 implicit _byteswap_ushort 'unsigned short (unsigned short)' extern
| |-ParmVarDecl 0x188e5a618e8 <<invalid sloc>> <invalid sloc> 'unsigned short'
| |-NoThrowAttr 0x188e5a61958 <col:47> Implicit
| `-ConstAttr 0x188e5a619b0 <col:47> Implicit
|-FunctionDecl 0x188e5a619d8 prev 0x188e5a61848 <col:24, col:90> col:47 _byteswap_ushort 'unsigned short (unsigned short)'
| |-ParmVarDecl 0x188e5a61738 <col:69, col:84> col:84 _Short 'unsigned short'
| |-NoThrowAttr 0x188e5a61ac8 <col:47> Inherited Implicit
| `-ConstAttr 0x188e5a61af0 <col:47> Inherited Implicit
|-FunctionDecl 0x188e5a61c78 <line:457:47> col:47 implicit _byteswap_ulong 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x188e5a61d18 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x188e5a61d88 <col:47> Implicit
| `-ConstAttr 0x188e5a61de0 <col:47> Implicit
|-FunctionDecl 0x188e5a61e08 prev 0x188e5a61c78 <col:24, col:88> col:47 _byteswap_ulong 'unsigned long (unsigned long)'
| |-ParmVarDecl 0x188e5a61b30 <col:69, col:83> col:83 _Long 'unsigned long'
| |-NoThrowAttr 0x188e5a61ef8 <col:47> Inherited Implicit
| `-ConstAttr 0x188e5a61f20 <col:47> Inherited Implicit
|-FunctionDecl 0x188e5a6f198 <line:458:49> col:49 implicit _byteswap_uint64 'unsigned long long (unsigned long long)' extern
| |-ParmVarDecl 0x188e5a6f238 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-NoThrowAttr 0x188e5a6f2a8 <col:49> Implicit
| `-ConstAttr 0x188e5a6f300 <col:49> Implicit
|-FunctionDecl 0x188e5a6f328 prev 0x188e5a6f198 <col:24, col:94> col:49 _byteswap_uint64 'unsigned long long (unsigned long long)'
| |-ParmVarDecl 0x188e5a61f60 <col:71, col:88> col:88 _Int64 'unsigned long long'
| |-NoThrowAttr 0x188e5a6f418 <col:49> Inherited Implicit
| `-ConstAttr 0x188e5a6f440 <col:49> Inherited Implicit
|-FunctionDecl 0x188e5a6f6c8 <line:459:24, col:85> col:39 div 'div_t (int, int) __attribute__((cdecl))':'div_t (int, int)'
| |-ParmVarDecl 0x188e5a6f4a8 <col:48, col:52> col:52 _Numerator 'int'
| `-ParmVarDecl 0x188e5a6f528 <col:69, col:73> col:73 _Denominator 'int'
|-FunctionDecl 0x188e5a6f9b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:462:109> col:74 getenv 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x188e5a6f868 <col:88, col:101> col:101 _VarName 'const char *'
| `-DeprecatedAttr 0x188e5a6fa60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _dupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a6ff78 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:464:28, col:177> col:44 getenv_s 'errno_t (size_t *, char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (size_t *, char *, rsize_t, const char *)'
| |-ParmVarDecl 0x188e5a6fbf8 <col:59, col:68> col:68 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x188e5a6fc78 <col:110, col:117> col:117 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a6fcf0 <col:131, col:139> col:139 _DstSize 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a6fd70 <col:156, col:169> col:169 _VarName 'const char *'
|-FunctionDecl 0x188e5a692d0 <line:472:28, col:212> col:44 _dupenv_s 'errno_t (char **, size_t *, const char *) __attribute__((cdecl))':'errno_t (char **, size_t *, const char *)'
| |-ParmVarDecl 0x188e5a70068 <col:127, col:134> col:134 _PBuffer 'char **'
| |-ParmVarDecl 0x188e5a700e0 <col:154, col:163> col:163 _PBufferSizeInBytes 'size_t *'
| `-ParmVarDecl 0x188e5a69100 <col:191, col:204> col:204 _VarName 'const char *'
|-FunctionDecl 0x188e5a69738 <line:479:28, col:141> col:44 _itoa_s 'errno_t (int, char *, size_t, int) __attribute__((cdecl))':'errno_t (int, char *, size_t, int)'
| |-ParmVarDecl 0x188e5a693b8 <col:57, col:61> col:61 _Value 'int'
| |-ParmVarDecl 0x188e5a69438 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a694b0 <col:112, col:119> col:119 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a69530 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x188e5a69b88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:481:79 _itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x188e5a698e8 <col:91, col:96> col:96 _Value 'int'
| |-ParmVarDecl 0x188e5a69968 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x188e5a699e8 <col:146, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x188e5a69c40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a701b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:482:28, col:145> col:44 _i64toa_s 'errno_t (long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long long, char *, size_t, int)'
| |-ParmVarDecl 0x188e5a69d88 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x188e5a69e08 <col:95, col:102> col:102 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a69e80 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a69f00 <col:135, col:139> col:139 _Radix 'int'
|-FunctionDecl 0x188e5a70608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:483:140> col:59 _i64toa 'char *(long long, char *, int) __attribute__((cdecl))':'char *(long long, char *, int)'
| |-ParmVarDecl 0x188e5a70368 <col:72, col:80> col:80 _Val 'long long'
| |-ParmVarDecl 0x188e5a703e8 <col:109, col:116> col:116 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a70468 <col:130, col:134> col:134 _Radix 'int'
| `-DeprecatedAttr 0x188e5a706c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a70b88 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:484:28, col:155> col:44 _ui64toa_s 'errno_t (unsigned long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, char *, size_t, int)'
| |-ParmVarDecl 0x188e5a70808 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x188e5a70888 <col:105, col:112> col:112 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a70900 <col:126, col:133> col:133 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a70980 <col:145, col:149> col:149 _Radix 'int'
|-FunctionDecl 0x188e5a70fd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:485:151> col:60 _ui64toa 'char *(unsigned long long, char *, int) __attribute__((cdecl))':'char *(unsigned long long, char *, int)'
| |-ParmVarDecl 0x188e5a70d38 <col:74, col:91> col:91 _Val 'unsigned long long'
| |-ParmVarDecl 0x188e5a70db8 <col:120, col:127> col:127 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a70e38 <col:141, col:145> col:145 _Radix 'int'
| `-DeprecatedAttr 0x188e5a71090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a6d320 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:486:24, col:75> col:40 _atoi64 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x188e5a6d240 <col:55, col:68> col:68 _String 'const char *'
|-FunctionDecl 0x188e5a6d570 <line:487:24, col:105> col:40 _atoi64_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x188e5a6d3f8 <col:57, col:70> col:70 _String 'const char *'
| `-ParmVarDecl 0x188e5a6d470 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a6d8e8 <line:488:24, col:136> col:40 _strtoi64 'long long (const char *, char **, int) __attribute__((cdecl))':'long long (const char *, char **, int)'
| |-ParmVarDecl 0x188e5a6d650 <col:57, col:70> col:70 _String 'const char *'
| |-ParmVarDecl 0x188e5a6d6d0 <col:104, col:112> col:112 _EndPtr 'char **'
| `-ParmVarDecl 0x188e5a6d750 <col:126, col:130> col:130 _Radix 'int'
|-FunctionDecl 0x188e5a6dd50 <line:489:24, col:166> col:40 _strtoi64_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x188e5a6d9d0 <col:59, col:72> col:72 _String 'const char *'
| |-ParmVarDecl 0x188e5a6da50 <col:106, col:114> col:114 _EndPtr 'char **'
| |-ParmVarDecl 0x188e5a6dad0 <col:128, col:132> col:132 _Radix 'int'
| `-ParmVarDecl 0x188e5a6db48 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a6c130 <line:490:24, col:146> col:49 _strtoui64 'unsigned long long (const char *, char **, int) __attribute__((cdecl))':'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x188e5a6de40 <col:67, col:80> col:80 _String 'const char *'
| |-ParmVarDecl 0x188e5a6dec0 <col:114, col:122> col:122 _EndPtr 'char **'
| `-ParmVarDecl 0x188e5a6df40 <col:136, col:140> col:140 _Radix 'int'
|-FunctionDecl 0x188e5a6c5a0 <line:491:24, col:177> col:49 _strtoui64_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x188e5a6c218 <col:69, col:82> col:82 _String 'const char *'
| |-ParmVarDecl 0x188e5a6c298 <col:116, col:124> col:124 _EndPtr 'char **'
| |-ParmVarDecl 0x188e5a6c318 <col:138, col:143> col:143 _Radix 'int'
| `-ParmVarDecl 0x188e5a6c390 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a6c8d8 <line:492:24, col:88> col:39 ldiv 'ldiv_t (long, long) __attribute__((cdecl))':'ldiv_t (long, long)'
| |-ParmVarDecl 0x188e5a6c6b8 <col:49, col:54> col:54 _Numerator 'long'
| `-ParmVarDecl 0x188e5a6c738 <col:71, col:76> col:76 _Denominator 'long'
|-FunctionDecl 0x188e5a6cbf8 <line:493:24, col:100> col:40 lldiv 'lldiv_t (long long, long long) __attribute__((cdecl))':'lldiv_t (long long, long long)'
| |-ParmVarDecl 0x188e5a6c9d8 <col:51, col:61> col:61 _Numerator 'long long'
| `-ParmVarDecl 0x188e5a6ca58 <col:78, col:88> col:88 _Denominator 'long long'
|-FunctionDecl 0x188e5a6d058 <line:515:28, col:140> col:44 _ltoa_s 'errno_t (long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long, char *, size_t, int)'
| |-ParmVarDecl 0x188e5a6ccd8 <col:57, col:62> col:62 _Val 'long'
| |-ParmVarDecl 0x188e5a6cd58 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a6cdd0 <col:111, col:118> col:118 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a6ce50 <col:130, col:134> col:134 _Radix 'int'
|-FunctionDecl 0x188e5a6a488 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:517:79 _ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x188e5a6a1e8 <col:91, col:97> col:97 _Value 'long'
| |-ParmVarDecl 0x188e5a6a268 <col:129, col:135> col:135 _Dest 'char *'
| |-ParmVarDecl 0x188e5a6a2e8 <col:147, col:152> col:152 _Radix 'int'
| `-DeprecatedAttr 0x188e5a6a540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a6a8b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:518:24, col:128> col:39 mblen 'int (const char *, size_t) __attribute__((cdecl))':'int (const char *, size_t)'
| |-ParmVarDecl 0x188e5a6a688 <col:89, col:102> col:102 _Ch 'const char *'
| `-ParmVarDecl 0x188e5a6a700 <col:112, col:119> col:119 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5a6ac58 <line:519:24, col:159> col:39 _mblen_l 'int (const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x188e5a6a990 <col:92, col:105> col:105 _Ch 'const char *'
| |-ParmVarDecl 0x188e5a6aa08 <col:115, col:122> col:122 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a6aa80 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a6aeb0 <line:520:24, col:73> col:39 _mbstrlen 'size_t (const char *) __attribute__((cdecl))':'size_t (const char *)'
| `-ParmVarDecl 0x188e5a6ad40 <col:56, col:69> col:69 _Str 'const char *'
|-FunctionDecl 0x188e5a6e218 <line:521:24, col:102> col:39 _mbstrlen_l 'size_t (const char *, _locale_t) __attribute__((cdecl))':'size_t (const char *, _locale_t)'
| |-ParmVarDecl 0x188e5a6af88 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x188e5a6b000 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a6e518 <line:522:24, col:96> col:39 _mbstrnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x188e5a6e2f8 <col:57, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x188e5a6e370 <col:80, col:87> col:87 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5a6e8c0 <line:523:24, col:126> col:39 _mbstrnlen_l 'size_t (const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x188e5a6e5f8 <col:59, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x188e5a6e670 <col:82, col:89> col:89 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a6e6e8 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a6ec78 <line:524:9, col:170> col:24 mbtowc 'int (wchar_t *, const char *, size_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x188e5a6e9a0 <col:54, col:64> col:64 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x188e5a6ea20 <col:122, col:135> col:135 _SrcCh 'const char *'
| `-ParmVarDecl 0x188e5a6ea98 <col:148, col:155> col:155 _SrcSizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5a6b120 <line:525:9, col:201> col:24 _mbtowc_l 'int (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x188e5a6ed58 <col:57, col:67> col:67 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x188e5a6edd8 <col:125, col:138> col:138 _SrcCh 'const char *'
| |-ParmVarDecl 0x188e5a6ee50 <col:151, col:158> col:158 _SrcSizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a6eec8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a6b620 <line:526:28, col:271> col:44 mbstowcs_s 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t)'
| |-ParmVarDecl 0x188e5a6b208 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x188e5a6b280 <col:155, col:165> col:165 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x188e5a6b2f8 <col:179, col:186> col:186 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a6b378 <col:227, col:240> col:240 _SrcBuf 'const char *'
| `-ParmVarDecl 0x188e5a6b3f0 <col:254, col:261> col:261 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5a6baa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:528:56 mbstowcs 'size_t (wchar_t *, const char *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x188e5a6b7d0 <col:97, col:106> col:106 _Dest 'wchar_t *'
| |-ParmVarDecl 0x188e5a6b850 <col:120, col:134> col:134 _Source 'const char *'
| |-ParmVarDecl 0x188e5a6b8c8 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x188e5a6bb58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using mbstowcs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a77238 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:530:28, col:301> col:44 _mbstowcs_s_l 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x188e5a6bc98 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x188e5a6bd10 <col:158, col:168> col:168 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x188e5a6bd88 <col:182, col:189> col:189 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a6be08 <col:230, col:243> col:243 _SrcBuf 'const char *'
| |-ParmVarDecl 0x188e5a6be80 <col:257, col:264> col:264 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a6bef8 <col:284, col:294> col:294 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a77768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:532:59 _mbstowcs_l 'size_t (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x188e5a773f0 <col:149, col:158> col:158 _Dest 'wchar_t *'
| |-ParmVarDecl 0x188e5a77470 <col:172, col:186> col:186 _Source 'const char *'
| |-ParmVarDecl 0x188e5a774e8 <col:200, col:208> col:208 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a77560 <col:228, col:239> col:239 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x188e5a77828 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _mbstowcs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a77a28 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:534:24, col:48> col:39 rand 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x188e5a77bd8 <line:539:28, col:73> col:43 _set_error_mode 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x188e5a77af8 <col:64, col:68> col:68 _Mode 'int'
|-FunctionDecl 0x188e5a77df0 <line:541:9, col:53> col:24 srand 'void (unsigned int) __attribute__((cdecl))':'void (unsigned int)'
| `-ParmVarDecl 0x188e5a77cb0 <col:35, col:48> col:48 _Seed 'unsigned int'
|-FunctionDecl 0x188e5a780b0 <line:542:39> col:39 implicit strtod 'double (const char *, char **)' extern
| |-ParmVarDecl 0x188e5a78150 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x188e5a781f0 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x188e5a78268 prev 0x188e5a780b0 <col:24, col:112> col:39 strtod 'double (const char *, char **)'
| |-ParmVarDecl 0x188e5a77ec8 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x188e5a77f48 <col:97, col:105> col:105 _EndPtr 'char **'
|-FunctionDecl 0x188e5a78618 <line:543:24, col:143> col:39 _strtod_l 'double (const char *, char **, _locale_t) __attribute__((cdecl))':'double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x188e5a78348 <col:56, col:69> col:69 _Str 'const char *'
| |-ParmVarDecl 0x188e5a783c8 <col:100, col:108> col:108 _EndPtr 'char **'
| `-ParmVarDecl 0x188e5a78440 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a78998 <line:544:39> col:39 implicit strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x188e5a78a38 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x188e5a78aa0 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x188e5a78b08 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x188e5a78b88 prev 0x188e5a78998 <col:24, col:130> col:39 strtol 'long (const char *, char **, int)'
| |-ParmVarDecl 0x188e5a78700 <col:53, col:66> col:66 _Str 'const char *'
| |-ParmVarDecl 0x188e5a78780 <col:97, col:105> col:105 _EndPtr 'char **'
| `-ParmVarDecl 0x188e5a78800 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x188e5a78ff0 <line:545:24, col:158> col:39 _strtol_l 'long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x188e5a78c70 <col:56, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x188e5a78cf0 <col:99, col:106> col:106 _EndPtr 'char **'
| |-ParmVarDecl 0x188e5a78d70 <col:120, col:124> col:124 _Radix 'int'
| `-ParmVarDecl 0x188e5a78de8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a79320 <line:546:43> col:43 implicit strtoll 'long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x188e5a793c0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x188e5a79428 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x188e5a79490 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x188e5a79510 prev 0x188e5a79320 <col:24, col:135> col:43 strtoll 'long long (const char *, char **, int)'
| |-ParmVarDecl 0x188e5a790e0 <col:58, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x188e5a79160 <col:102, col:110> col:110 _EndPtr 'char **'
| `-ParmVarDecl 0x188e5a79200 <col:124, col:128> col:128 _Radix 'int'
|-FunctionDecl 0x188e5a798b0 <line:547:24, col:166> col:43 _strtoll_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x188e5a795f8 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x188e5a79678 <col:105, col:113> col:113 _EndPtr 'char **'
| |-ParmVarDecl 0x188e5a796f8 <col:127, col:131> col:131 _Radix 'int'
| `-ParmVarDecl 0x188e5a79770 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a79c38 <line:548:46> col:46 implicit strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0x188e5a79cd8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x188e5a79d40 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x188e5a79da8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x188e5a79e28 prev 0x188e5a79c38 <col:24, col:137> col:46 strtoul 'unsigned long (const char *, char **, int)'
| |-ParmVarDecl 0x188e5a799a0 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x188e5a79a20 <col:105, col:113> col:113 _EndPtr 'char **'
| `-ParmVarDecl 0x188e5a79aa0 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x188e5a72240 <line:549:24, col:160> col:46 _strtoul_l 'unsigned long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x188e5a79f10 <col:57, col:70> col:70 _Str 'const char *'
| |-ParmVarDecl 0x188e5a79f90 <col:101, col:108> col:108 _EndPtr 'char **'
| |-ParmVarDecl 0x188e5a7a010 <col:122, col:126> col:126 _Radix 'int'
| `-ParmVarDecl 0x188e5a7a088 <col:143, col:153> col:153 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a72550 <line:550:51> col:51 implicit strtoull 'unsigned long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x188e5a725f0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x188e5a72658 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x188e5a726c0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x188e5a72740 prev 0x188e5a72550 <col:24, col:143> col:51 strtoull 'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x188e5a72330 <col:67, col:80> col:80 _Str 'const char *'
| |-ParmVarDecl 0x188e5a723b0 <col:111, col:119> col:119 _EndPtr 'char **'
| `-ParmVarDecl 0x188e5a72430 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x188e5a72ae0 <line:551:24, col:174> col:51 _strtoull_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x188e5a72828 <col:70, col:83> col:83 _Str 'const char *'
| |-ParmVarDecl 0x188e5a728a8 <col:114, col:122> col:122 _EndPtr 'char **'
| |-ParmVarDecl 0x188e5a72928 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x188e5a729a0 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a72dc0 <line:552:44> col:44 implicit strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0x188e5a72e60 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x188e5a72ec8 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x188e5a72f40 prev 0x188e5a72dc0 <col:24, col:118> col:44 strtold 'long double (const char *, char **)'
| |-ParmVarDecl 0x188e5a72bd0 <col:59, col:72> col:72 _Str 'const char *'
| `-ParmVarDecl 0x188e5a72c50 <col:103, col:111> col:111 _EndPtr 'char **'
|-FunctionDecl 0x188e5a7a388 <line:553:24, col:149> col:44 _strtold_l 'long double (const char *, char **, _locale_t) __attribute__((cdecl))':'long double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x188e5a73020 <col:62, col:75> col:75 _Str 'const char *'
| |-ParmVarDecl 0x188e5a730a0 <col:106, col:114> col:114 _EndPtr 'char **'
| `-ParmVarDecl 0x188e5a73118 <col:132, col:142> col:142 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a7a660 <line:554:38> col:38 implicit strtof 'float (const char *, char **)' extern
| |-ParmVarDecl 0x188e5a7a700 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x188e5a7a768 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x188e5a7a7e0 prev 0x188e5a7a660 <col:24, col:111> col:38 strtof 'float (const char *, char **)'
| |-ParmVarDecl 0x188e5a7a470 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x188e5a7a4f0 <col:96, col:104> col:104 _EndPtr 'char **'
|-FunctionDecl 0x188e5a7ab98 <line:555:24, col:142> col:38 _strtof_l 'float (const char *, char **, _locale_t) __attribute__((cdecl))':'float (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x188e5a7a8c0 <col:55, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x188e5a7a940 <col:99, col:107> col:107 _EndPtr 'char **'
| `-ParmVarDecl 0x188e5a7a9b8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a7ad60 <line:560:9, col:60> col:21 system 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x188e5a7ac80 <col:39, col:52> col:52 _Command 'const char *'
|-FunctionDecl 0x188e5a761d0 <line:564:28, col:150> col:44 _ultoa_s 'errno_t (unsigned long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, char *, size_t, int)'
| |-ParmVarDecl 0x188e5a7ae38 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x188e5a7aeb8 <col:100, col:107> col:107 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a7af30 <col:121, col:128> col:128 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a7afb0 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x188e5a76618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:566:79 _ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x188e5a76380 <col:92, col:107> col:107 _Value 'unsigned long'
| |-ParmVarDecl 0x188e5a76400 <col:139, col:145> col:145 _Dest 'char *'
| |-ParmVarDecl 0x188e5a76480 <col:157, col:162> col:162 _Radix 'int'
| `-DeprecatedAttr 0x188e5a766d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a76b00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:567:127> col:58 wctomb 'int (char *, wchar_t) __attribute__((cdecl))':'int (char *, wchar_t)'
| |-ParmVarDecl 0x188e5a768d8 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x188e5a76950 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x188e5a76bb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wctomb_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a77088 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:568:155> col:61 _wctomb_l 'int (char *, wchar_t, _locale_t) __attribute__((cdecl))':'int (char *, wchar_t, _locale_t)'
| |-ParmVarDecl 0x188e5a76db8 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x188e5a76e30 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x188e5a76ea8 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x188e5a77140 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctomb_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a73618 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:570:28, col:200> col:44 wctomb_s 'errno_t (int *, char *, rsize_t, wchar_t) __attribute__((cdecl))':'errno_t (int *, char *, rsize_t, wchar_t)'
| |-ParmVarDecl 0x188e5a732a0 <col:63, col:69> col:69 _SizeConverted 'int *'
| |-ParmVarDecl 0x188e5a73320 <col:142, col:149> col:149 _MbCh 'char *'
| |-ParmVarDecl 0x188e5a73398 <col:161, col:169> col:169 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a73410 <col:188, col:196> col:196 _WCh 'wchar_t':'unsigned short'
|-FunctionDecl 0x188e5a73b20 <line:572:28, col:206> col:44 _wctomb_s_l 'errno_t (int *, char *, size_t, wchar_t, _locale_t) __attribute__((cdecl))':'errno_t (int *, char *, size_t, wchar_t, _locale_t)'
| |-ParmVarDecl 0x188e5a73708 <col:66, col:72> col:72 _SizeConverted 'int *'
| |-ParmVarDecl 0x188e5a73788 <col:121, col:128> col:128 _MbCh 'char *'
| |-ParmVarDecl 0x188e5a73800 <col:140, col:147> col:147 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a73878 <col:166, col:174> col:174 _WCh 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x188e5a738f0 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a74030 <line:573:28, col:263> col:44 wcstombs_s 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t)'
| |-ParmVarDecl 0x188e5a73c10 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x188e5a73c90 <col:164, col:171> col:171 _Dst 'char *'
| |-ParmVarDecl 0x188e5a73d08 <col:182, col:189> col:189 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a73d80 <col:213, col:229> col:229 _Src 'const wchar_t *'
| `-ParmVarDecl 0x188e5a73df8 <col:240, col:247> col:247 _MaxCountInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5a7b5c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:575:56 wcstombs 'size_t (char *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x188e5a7b2f8 <col:97, col:103> col:103 _Dest 'char *'
| |-ParmVarDecl 0x188e5a7b370 <col:117, col:134> col:134 _Source 'const wchar_t *'
| |-ParmVarDecl 0x188e5a7b3e8 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x188e5a7b678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstombs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a7bc78 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:576:28, col:294> col:44 _wcstombs_s_l 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x188e5a7b7b8 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x188e5a7b838 <col:167, col:174> col:174 _Dst 'char *'
| |-ParmVarDecl 0x188e5a7b8b0 <col:185, col:192> col:192 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a7b928 <col:216, col:232> col:232 _Src 'const wchar_t *'
| |-ParmVarDecl 0x188e5a7b9a0 <col:243, col:250> col:250 _MaxCountInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a7ba18 <col:277, col:287> col:287 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a741b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:578:59 _wcstombs_l 'size_t (char *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x188e5a7be38 <col:146, col:152> col:152 _Dest 'char *'
| |-ParmVarDecl 0x188e5a7beb0 <col:166, col:183> col:183 _Source 'const wchar_t *'
| |-ParmVarDecl 0x188e5a7bf28 <col:197, col:205> col:205 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a7bfa0 <col:225, col:236> col:236 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x188e5a74270 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcstombs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a745d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:142> col:142 implicit calloc 'void *(unsigned long long, unsigned long long)' extern
| |-ParmVarDecl 0x188e5a74670 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x188e5a746d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x188e5a74750 prev 0x188e5a745d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:224> col:142 calloc 'void *(unsigned long long, unsigned long long)'
| |-ParmVarDecl 0x188e5a743b0 <col:173, col:180> col:180 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a74428 <col:212, col:219> col:219 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x188e5a74800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x188e5a74858 <line:615:33> restrict
|-FunctionDecl 0x188e5a749f0 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:641:182> col:132 free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x188e5a748b0 <col:168, col:175> col:175 _Memory 'void *'
| `-NoAliasAttr 0x188e5a74a98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x188e5a74c98 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:161> col:161 implicit malloc 'void *(unsigned long long)' extern
| `-ParmVarDecl 0x188e5a74d38 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x188e5a74da8 prev 0x188e5a74c98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:204> col:161 malloc 'void *(unsigned long long)'
| |-ParmVarDecl 0x188e5a74b18 <col:192, col:199> col:199 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x188e5a74e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x188e5a74ea8 <line:615:33> restrict
|-FunctionDecl 0x188e5a751c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:142> col:142 implicit realloc 'void *(void *, unsigned long long)' extern
| |-ParmVarDecl 0x188e5a75260 <<invalid sloc>> <invalid sloc> 'void *'
| `-ParmVarDecl 0x188e5a752c8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x188e5a75340 prev 0x188e5a751c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:236> col:142 realloc 'void *(void *, unsigned long long)'
| |-ParmVarDecl 0x188e5a74f00 <col:181, col:188> col:188 _Memory 'void *'
| |-ParmVarDecl 0x188e5a74f78 <col:221, col:228> col:228 _NewSize 'size_t':'unsigned long long'
| |-NoAliasAttr 0x188e5a753f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x188e5a75448 <line:615:33> restrict
|-FunctionDecl 0x188e5a75768 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:646:274> col:142 _recalloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x188e5a754a0 <col:183, col:190> col:190 _Memory 'void *'
| |-ParmVarDecl 0x188e5a75518 <col:223, col:230> col:230 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a75590 <col:262, col:269> col:269 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x188e5a75820 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x188e5a75878 <line:615:33> restrict
|-FunctionDecl 0x188e5a759a8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:647:191> col:132 _aligned_free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x188e5a758d0 <col:177, col:184> col:184 _Memory 'void *'
| `-NoAliasAttr 0x188e5a75a50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x188e5a75c48 <col:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:648:218> col:142 _aligned_malloc 'void *(size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t)'
| |-ParmVarDecl 0x188e5a75ad0 <col:182, col:189> col:189 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a75b48 <col:201, col:208> col:208 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x188e5a75cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x188e5a75d50 <line:615:33> restrict
|-FunctionDecl 0x188e5a76068 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:649:246> col:142 _aligned_offset_malloc 'void *(size_t, size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t, size_t)'
| |-ParmVarDecl 0x188e5a75da0 <col:189, col:196> col:196 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a75e18 <col:208, col:215> col:215 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a75e90 <col:232, col:239> col:239 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x188e5a76120 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x188e5a76178 <line:615:33> restrict
|-FunctionDecl 0x188e5a844d8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:651:272> col:145 _aligned_realloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x188e5a842c8 <col:193, col:200> col:200 _Memory 'void *'
| |-ParmVarDecl 0x188e5a84340 <col:233, col:240> col:240 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a843b8 <col:255, col:262> col:262 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x188e5a84590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x188e5a845e8 <line:615:33> restrict
|-FunctionDecl 0x188e5a849b0 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:653:306> col:142 _aligned_recalloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x188e5a84640 <col:191, col:198> col:198 _Memory 'void *'
| |-ParmVarDecl 0x188e5a846b8 <col:231, col:238> col:238 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a84730 <col:270, col:277> col:277 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a847a8 <col:289, col:296> col:296 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x188e5a84a70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x188e5a84ac8 <line:615:33> restrict
|-FunctionDecl 0x188e5a84dc8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:655:300> col:145 _aligned_offset_realloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x188e5a84b20 <col:200, col:207> col:207 _Memory 'void *'
| |-ParmVarDecl 0x188e5a84b98 <col:240, col:247> col:247 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a84c10 <col:262, col:269> col:269 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a84c88 <col:286, col:293> col:293 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x188e5a84e88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x188e5a84ee0 <line:615:33> restrict
|-FunctionDecl 0x188e5a7e308 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:657:334> col:142 _aligned_offset_recalloc 'void *(void *, size_t, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t, size_t)'
| |-ParmVarDecl 0x188e5a84f38 <col:198, col:205> col:205 _Memory 'void *'
| |-ParmVarDecl 0x188e5a84fb0 <col:238, col:245> col:245 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a85028 <col:277, col:284> col:284 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a850a0 <col:296, col:303> col:303 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a85118 <col:320, col:327> col:327 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x188e5a7e3d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x188e5a7e428 <line:615:33> restrict
|-FunctionDecl 0x188e5a7e740 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:658:73, col:176> col:88 _aligned_msize 'size_t (void *, size_t, size_t) __attribute__((cdecl))':'size_t (void *, size_t, size_t)'
| |-ParmVarDecl 0x188e5a7e480 <col:117, col:124> col:124 _Memory 'void *'
| |-ParmVarDecl 0x188e5a7e4f8 <col:138, col:145> col:145 _Alignment 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a7e570 <col:162, col:169> col:169 _Offset 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5a7eb98 <line:685:28, col:157> col:44 _itow_s 'errno_t (int, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (int, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x188e5a7e828 <col:58, col:62> col:62 _Val 'int'
| |-ParmVarDecl 0x188e5a7e8a0 <col:97, col:107> col:107 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x188e5a7e918 <col:121, col:128> col:128 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a7e998 <col:147, col:151> col:151 _Radix 'int'
|-FunctionDecl 0x188e5a7f010 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:687:82 _itow 'wchar_t *(int, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(int, wchar_t *, int)'
| |-ParmVarDecl 0x188e5a7ed48 <col:94, col:99> col:99 _Value 'int'
| |-ParmVarDecl 0x188e5a7edc0 <col:131, col:140> col:140 _Dest 'wchar_t *'
| |-ParmVarDecl 0x188e5a7ee40 <col:152, col:157> col:157 _Radix 'int'
| `-DeprecatedAttr 0x188e5a7f0c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a85638 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:688:28, col:158> col:44 _ltow_s 'errno_t (long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x188e5a852c0 <col:58, col:63> col:63 _Val 'long'
| |-ParmVarDecl 0x188e5a85338 <col:98, col:108> col:108 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x188e5a853b0 <col:122, col:129> col:129 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a85430 <col:148, col:152> col:152 _Radix 'int'
|-FunctionDecl 0x188e5a85ab0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:690:82 _ltow 'wchar_t *(long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long, wchar_t *, int)'
| |-ParmVarDecl 0x188e5a857e8 <col:94, col:100> col:100 _Value 'long'
| |-ParmVarDecl 0x188e5a85860 <col:132, col:141> col:141 _Dest 'wchar_t *'
| |-ParmVarDecl 0x188e5a858e0 <col:153, col:158> col:158 _Radix 'int'
| `-DeprecatedAttr 0x188e5a85b68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a86028 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:691:28, col:168> col:44 _ultow_s 'errno_t (unsigned long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x188e5a85cb0 <col:59, col:73> col:73 _Val 'unsigned long'
| |-ParmVarDecl 0x188e5a85d28 <col:108, col:118> col:118 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x188e5a85da0 <col:132, col:139> col:139 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a85e20 <col:158, col:162> col:162 _Radix 'int'
|-FunctionDecl 0x188e5a7f450 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:693:82 _ultow 'wchar_t *(unsigned long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long, wchar_t *, int)'
| |-ParmVarDecl 0x188e5a861d8 <col:95, col:110> col:110 _Value 'unsigned long'
| |-ParmVarDecl 0x188e5a86250 <col:142, col:151> col:151 _Dest 'wchar_t *'
| |-ParmVarDecl 0x188e5a7f278 <col:163, col:168> col:168 _Radix 'int'
| `-DeprecatedAttr 0x188e5a7f508 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a7f870 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:694:24, col:118> col:39 wcstod 'double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x188e5a7f648 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x188e5a7f6c8 <col:100, col:111> col:111 _EndPtr 'wchar_t **'
|-FunctionDecl 0x188e5a7fc18 <line:695:24, col:148> col:39 _wcstod_l 'double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x188e5a7f948 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x188e5a7f9c8 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x188e5a7fa40 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a7ffd8 <line:696:24, col:129> col:39 wcstol 'long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x188e5a7fcf8 <col:53, col:68> col:68 _Str 'const wchar_t *'
| |-ParmVarDecl 0x188e5a7fd78 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x188e5a7fdf8 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x188e5a81490 <line:697:24, col:159> col:39 _wcstol_l 'long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x188e5a800b8 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x188e5a80138 <col:102, col:112> col:112 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x188e5a801b8 <col:121, col:125> col:125 _Radix 'int'
| `-ParmVarDecl 0x188e5a81280 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a81858 <line:698:24, col:133> col:43 wcstoll 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x188e5a81578 <col:58, col:73> col:73 _Str 'const wchar_t *'
| |-ParmVarDecl 0x188e5a815f8 <col:104, col:114> col:114 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x188e5a81678 <col:123, col:127> col:127 _Radix 'int'
|-FunctionDecl 0x188e5a81cc0 <line:699:24, col:164> col:43 _wcstoll_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x188e5a81938 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x188e5a819b8 <col:107, col:117> col:117 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x188e5a81a38 <col:126, col:130> col:130 _Radix 'int'
| `-ParmVarDecl 0x188e5a81ab0 <col:147, col:157> col:157 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a82088 <line:700:24, col:137> col:46 wcstoul 'unsigned long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x188e5a81da8 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x188e5a81e28 <col:107, col:118> col:118 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x188e5a81ea8 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x188e5a83520 <line:701:24, col:167> col:46 _wcstoul_l 'unsigned long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x188e5a82168 <col:64, col:79> col:79 _Str 'const wchar_t *'
| |-ParmVarDecl 0x188e5a821e8 <col:110, col:120> col:120 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x188e5a832a0 <col:129, col:133> col:133 _Radix 'int'
| `-ParmVarDecl 0x188e5a83318 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a838e8 <line:702:24, col:143> col:51 wcstoull 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x188e5a83608 <col:67, col:82> col:82 _Str 'const wchar_t *'
| |-ParmVarDecl 0x188e5a83688 <col:113, col:124> col:124 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x188e5a83708 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x188e5a83d50 <line:703:24, col:174> col:51 _wcstoull_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x188e5a839c8 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x188e5a83a48 <col:116, col:127> col:127 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x188e5a83ac8 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x188e5a83b40 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a84060 <line:704:24, col:124> col:44 wcstold 'long double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x188e5a83e38 <col:59, col:75> col:75 _Str 'const wchar_t *'
| `-ParmVarDecl 0x188e5a83eb8 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
|-FunctionDecl 0x188e5a86448 <line:705:24, col:155> col:44 _wcstold_l 'long double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x188e5a84138 <col:62, col:78> col:78 _Str 'const wchar_t *'
| |-ParmVarDecl 0x188e5a841b8 <col:109, col:120> col:120 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x188e5a84230 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a86750 <line:706:24, col:117> col:38 wcstof 'float (const wchar_t *, wchar_t **) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x188e5a86528 <col:52, col:68> col:68 _Str 'const wchar_t *'
| `-ParmVarDecl 0x188e5a865a8 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
|-FunctionDecl 0x188e5a86af8 <line:707:24, col:148> col:38 _wcstof_l 'float (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x188e5a86828 <col:55, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x188e5a868a8 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x188e5a86920 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a86e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:711:118> col:78 _wgetenv 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x188e5a86c98 <col:94, col:110> col:110 _VarName 'const wchar_t *'
| `-DeprecatedAttr 0x188e5a86eb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wdupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a87388 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:712:28, col:198> col:44 _wgetenv_s 'errno_t (size_t *, wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x188e5a86ff8 <col:61, col:70> col:70 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x188e5a87070 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x188e5a870e8 <col:143, col:150> col:150 _DstSizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a87160 <col:174, col:190> col:190 _VarName 'const wchar_t *'
|-FunctionDecl 0x188e5a87740 <line:720:28, col:214> col:44 _wdupenv_s 'errno_t (wchar_t **, size_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t **, size_t *, const wchar_t *)'
| |-ParmVarDecl 0x188e5a87478 <col:127, col:137> col:137 _Buffer 'wchar_t **'
| |-ParmVarDecl 0x188e5a874f0 <col:156, col:164> col:164 _BufferSizeInWords 'size_t *'
| `-ParmVarDecl 0x188e5a87568 <col:191, col:206> col:206 _VarName 'const wchar_t *'
|-FunctionDecl 0x188e5a87900 <line:728:9, col:65> col:21 _wsystem 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x188e5a87820 <col:41, col:57> col:57 _Command 'const wchar_t *'
|-FunctionDecl 0x188e5a87b48 <line:733:24, col:71> col:39 _wtof 'double (const wchar_t *) __attribute__((cdecl))':'double (const wchar_t *)'
| `-ParmVarDecl 0x188e5a879d0 <col:52, col:67> col:67 _Str 'const wchar_t *'
|-FunctionDecl 0x188e5a87e40 <line:734:24, col:101> col:39 _wtof_l 'double (const wchar_t *, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x188e5a87c18 <col:54, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x188e5a87c90 <col:84, col:94> col:94 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a87ff8 <line:735:24, col:68> col:36 _wtoi 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x188e5a87f18 <col:49, col:64> col:64 _Str 'const wchar_t *'
|-FunctionDecl 0x188e5a802b0 <line:736:24, col:98> col:36 _wtoi_l 'int (const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x188e5a880c8 <col:51, col:66> col:66 _Str 'const wchar_t *'
| `-ParmVarDecl 0x188e5a88140 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a80508 <line:737:24, col:69> col:37 _wtol 'long (const wchar_t *) __attribute__((cdecl))':'long (const wchar_t *)'
| `-ParmVarDecl 0x188e5a80388 <col:50, col:65> col:65 _Str 'const wchar_t *'
|-FunctionDecl 0x188e5a80800 <line:738:24, col:99> col:37 _wtol_l 'long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x188e5a805d8 <col:52, col:67> col:67 _Str 'const wchar_t *'
| `-ParmVarDecl 0x188e5a80650 <col:82, col:92> col:92 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a80a58 <line:739:24, col:75> col:42 _wtoll 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x188e5a808d8 <col:56, col:71> col:71 _Str 'const wchar_t *'
|-FunctionDecl 0x188e5a80d50 <line:740:24, col:105> col:42 _wtoll_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x188e5a80b28 <col:58, col:73> col:73 _Str 'const wchar_t *'
| `-ParmVarDecl 0x188e5a80ba0 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a811a8 <line:742:28, col:162> col:44 _i64tow_s 'errno_t (long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x188e5a80e30 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x188e5a80ea8 <col:102, col:112> col:112 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x188e5a80f20 <col:126, col:133> col:133 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a80fa0 <col:152, col:156> col:156 _Radix 'int'
|-FunctionDecl 0x188e5a886b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:743:146> col:62 _i64tow 'wchar_t *(long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long long, wchar_t *, int)'
| |-ParmVarDecl 0x188e5a883e0 <col:75, col:83> col:83 _Val 'long long'
| |-ParmVarDecl 0x188e5a88458 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x188e5a884d8 <col:136, col:140> col:140 _Radix 'int'
| `-DeprecatedAttr 0x188e5a88768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a88c28 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:744:28, col:172> col:44 _ui64tow_s 'errno_t (unsigned long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x188e5a888b0 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x188e5a88928 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x188e5a889a0 <col:136, col:143> col:143 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a88a20 <col:162, col:166> col:166 _Radix 'int'
|-FunctionDecl 0x188e5a890a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:745:157> col:63 _ui64tow 'wchar_t *(unsigned long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long long, wchar_t *, int)'
| |-ParmVarDecl 0x188e5a88dd8 <col:77, col:94> col:94 _Val 'unsigned long long'
| |-ParmVarDecl 0x188e5a88e50 <col:123, col:133> col:133 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x188e5a88ed0 <col:147, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x188e5a89158 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a893e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:746:24, col:76> col:42 _wtoi64 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x188e5a89300 <col:57, col:72> col:72 _Str 'const wchar_t *'
|-FunctionDecl 0x188e5a89628 <line:747:24, col:106> col:42 _wtoi64_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x188e5a894b0 <col:59, col:74> col:74 _Str 'const wchar_t *'
| `-ParmVarDecl 0x188e5a89528 <col:89, col:99> col:99 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a89920 <line:748:24, col:141> col:42 _wcstoi64 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x188e5a89700 <col:59, col:75> col:75 _Str 'const wchar_t *'
| |-ParmVarDecl 0x188e5a89780 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x188e5a89800 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x188e5a89cb8 <line:749:24, col:171> col:42 _wcstoi64_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x188e5a89a00 <col:61, col:77> col:77 _Str 'const wchar_t *'
| |-ParmVarDecl 0x188e5a89a80 <col:108, col:119> col:119 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x188e5a89b00 <col:133, col:137> col:137 _Radix 'int'
| `-ParmVarDecl 0x188e5a89b78 <col:154, col:164> col:164 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a89fc0 <line:750:24, col:150> col:50 _wcstoui64 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x188e5a89da0 <col:68, col:84> col:84 _Str 'const wchar_t *'
| |-ParmVarDecl 0x188e5a89e20 <col:115, col:126> col:126 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x188e5a89ea0 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x188e5a82308 <line:751:24, col:180> col:50 _wcstoui64_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x188e5a8a0a0 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x188e5a8a120 <col:117, col:128> col:128 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x188e5a8a1a0 <col:142, col:146> col:146 _Radix 'int'
| `-ParmVarDecl 0x188e5a8a218 <col:163, col:173> col:173 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a826c8 <line:770:24, col:151> col:39 _fullpath 'char *(char *, const char *, size_t) __attribute__((cdecl))':'char *(char *, const char *, size_t)'
| |-ParmVarDecl 0x188e5a823f8 <col:82, col:89> col:89 _FullPath 'char *'
| |-ParmVarDecl 0x188e5a82478 <col:107, col:120> col:120 _Path 'const char *'
| `-ParmVarDecl 0x188e5a824f0 <col:132, col:139> col:139 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5a82c88 <line:778:28, col:189> col:44 _ecvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x188e5a827b0 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a82828 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a828a8 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x188e5a82928 <col:132, col:136> col:136 _NumOfDights 'int'
| |-ParmVarDecl 0x188e5a829a8 <col:156, col:162> col:162 _PtDec 'int *'
| `-ParmVarDecl 0x188e5a82a28 <col:176, col:182> col:182 _PtSign 'int *'
|-FunctionDecl 0x188e5a83180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:780:158> col:72 _ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x188e5a82e48 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x188e5a82ec8 <col:101, col:105> col:105 _NumOfDigits 'int'
| |-ParmVarDecl 0x188e5a82f48 <col:125, col:131> col:131 _PtDec 'int *'
| |-ParmVarDecl 0x188e5a82fc8 <col:145, col:151> col:151 _PtSign 'int *'
| `-DeprecatedAttr 0x188e5a83240 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a8f850 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:781:28, col:186> col:44 _fcvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x188e5a8f460 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a8f4d8 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a8f558 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x188e5a8f5d8 <col:132, col:136> col:136 _NumOfDec 'int'
| |-ParmVarDecl 0x188e5a8f658 <col:153, col:159> col:159 _PtDec 'int *'
| `-ParmVarDecl 0x188e5a8f6d8 <col:173, col:179> col:179 _PtSign 'int *'
|-FunctionDecl 0x188e5a8fcd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:783:155> col:72 _fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x188e5a8fa10 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x188e5a8fa90 <col:101, col:105> col:105 _NumOfDec 'int'
| |-ParmVarDecl 0x188e5a8fb10 <col:122, col:128> col:128 _PtDec 'int *'
| |-ParmVarDecl 0x188e5a8fb90 <col:142, col:148> col:148 _PtSign 'int *'
| `-DeprecatedAttr 0x188e5a8fd90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a90258 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:784:9, col:129> col:25 _gcvt_s 'errno_t (char *, size_t, double, int) __attribute__((cdecl))':'errno_t (char *, size_t, double, int)'
| |-ParmVarDecl 0x188e5a8fed8 <col:55, col:62> col:62 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a8ff50 <col:76, col:83> col:83 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a8ffd0 <col:95, col:102> col:102 _Val 'double'
| `-ParmVarDecl 0x188e5a90050 <col:113, col:117> col:117 _NumOfDigits 'int'
|-FunctionDecl 0x188e5a916f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:786:141> col:57 _gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x188e5a91458 <col:68, col:75> col:75 _Val 'double'
| |-ParmVarDecl 0x188e5a914d8 <col:86, col:90> col:90 _NumOfDigits 'int'
| |-ParmVarDecl 0x188e5a91558 <col:127, col:134> col:134 _DstBuf 'char *'
| `-DeprecatedAttr 0x188e5a917b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a91b90 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:788:24, col:91> col:36 _atodbl 'int (_CRT_DOUBLE *, char *) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *)'
| |-ParmVarDecl 0x188e5a91968 <col:50, col:64> col:64 _Result '_CRT_DOUBLE *'
| `-ParmVarDecl 0x188e5a919e8 <col:80, col:87> col:87 _Str 'char *'
|-FunctionDecl 0x188e5a91f10 <line:789:24, col:89> col:36 _atoldbl 'int (_LDOUBLE *, char *) __attribute__((cdecl))':'int (_LDOUBLE *, char *)'
| |-ParmVarDecl 0x188e5a91ce8 <col:51, col:62> col:62 _Result '_LDOUBLE *'
| `-ParmVarDecl 0x188e5a91d68 <col:78, col:85> col:85 _Str 'char *'
|-FunctionDecl 0x188e5a92290 <line:790:24, col:96> col:36 _atoflt 'int (_CRT_FLOAT *, const char *) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *)'
| |-ParmVarDecl 0x188e5a92068 <col:50, col:63> col:63 _Result '_CRT_FLOAT *'
| `-ParmVarDecl 0x188e5a920e8 <col:79, col:92> col:92 _Str 'const char *'
|-FunctionDecl 0x188e5a8b5f8 <line:791:24, col:121> col:36 _atodbl_l 'int (_CRT_DOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x188e5a8b320 <col:52, col:66> col:66 _Result '_CRT_DOUBLE *'
| |-ParmVarDecl 0x188e5a8b3a0 <col:82, col:89> col:89 _Str 'char *'
| `-ParmVarDecl 0x188e5a8b418 <col:104, col:114> col:114 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a8b9a8 <line:792:24, col:119> col:36 _atoldbl_l 'int (_LDOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_LDOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x188e5a8b6d8 <col:53, col:64> col:64 _Result '_LDOUBLE *'
| |-ParmVarDecl 0x188e5a8b758 <col:80, col:87> col:87 _Str 'char *'
| `-ParmVarDecl 0x188e5a8b7d0 <col:102, col:112> col:112 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a8bd58 <line:793:24, col:126> col:36 _atoflt_l 'int (_CRT_FLOAT *, const char *, _locale_t) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *, _locale_t)'
| |-ParmVarDecl 0x188e5a8ba88 <col:52, col:65> col:65 _Result '_CRT_FLOAT *'
| |-ParmVarDecl 0x188e5a8bb08 <col:81, col:94> col:94 _Str 'const char *'
| `-ParmVarDecl 0x188e5a8bb80 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a8c030 <line:794:46> col:46 implicit _lrotl 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x188e5a8c0d0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x188e5a8c138 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x188e5a8c1b0 <col:46> Implicit
|-FunctionDecl 0x188e5a8c208 prev 0x188e5a8c030 <col:24, col:93> col:46 _lrotl 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x188e5a8be40 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x188e5a8bec0 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x188e5a8d340 <col:46> Inherited Implicit
|-FunctionDecl 0x188e5a8d500 <line:795:46> col:46 implicit _lrotr 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x188e5a8d5a0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x188e5a8d608 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x188e5a8d680 <col:46> Implicit
|-FunctionDecl 0x188e5a8d6d8 prev 0x188e5a8d500 <col:24, col:93> col:46 _lrotr 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x188e5a8d380 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x188e5a8d400 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x188e5a8d7d0 <col:46> Inherited Implicit
|-FunctionDecl 0x188e5a8dce8 <line:796:40, line:797:37> line:796:58 _makepath_s 'errno_t (char *, size_t, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x188e5a8d810 <col:99, col:106> col:106 _PathResult 'char *'
| |-ParmVarDecl 0x188e5a8d888 <col:124, col:131> col:131 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a8d908 <col:156, col:169> col:169 _Drive 'const char *'
| |-ParmVarDecl 0x188e5a8d988 <col:188, col:201> col:201 _Dir 'const char *'
| |-ParmVarDecl 0x188e5a8da08 <col:218, col:231> col:231 _Filename 'const char *'
| `-ParmVarDecl 0x188e5a8da88 <line:797:20, col:33> col:33 _Ext 'const char *'
|-FunctionDecl 0x188e5a8e290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:799:78 _makepath 'void (char *, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'void (char *, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x188e5a8dea8 <col:113, col:119> col:119 _Path 'char *'
| |-ParmVarDecl 0x188e5a8df28 <col:137, col:151> col:151 _Drive 'const char *'
| |-ParmVarDecl 0x188e5a8dfa8 <col:170, col:184> col:184 _Dir 'const char *'
| |-ParmVarDecl 0x188e5a8e028 <col:201, col:215> col:215 _Filename 'const char *'
| |-ParmVarDecl 0x188e5a8e0a8 <col:237, col:251> col:251 _Ext 'const char *'
| `-DeprecatedAttr 0x188e5a90398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _makepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a90670 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:826:9, col:59> col:27 _onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x188e5a90500 <col:44, col:54> col:54 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x188e5a90828 <line:838:24, col:77> col:39 _putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x188e5a90748 <col:54, col:67> col:67 _EnvString 'const char *'
|-FunctionDecl 0x188e5a90ae8 <line:839:28, col:107> col:44 _putenv_s 'errno_t (const char *, const char *) __attribute__((cdecl))':'errno_t (const char *, const char *)'
| |-ParmVarDecl 0x188e5a90900 <col:61, col:74> col:74 _Name 'const char *'
| `-ParmVarDecl 0x188e5a90980 <col:88, col:101> col:101 _Value 'const char *'
|-FunctionDecl 0x188e5a90db0 <line:842:30> col:30 implicit _rotl 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x188e5a90e50 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x188e5a90eb8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x188e5a90f30 <col:30> Implicit
|-FunctionDecl 0x188e5a90f88 prev 0x188e5a90db0 <col:9, col:75> col:30 _rotl 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x188e5a90bc8 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x188e5a90c48 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x188e5a91080 <col:30> Inherited Implicit
|-FunctionDecl 0x188e5a912b0 <line:843:34> col:34 implicit _rotl64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x188e5a92390 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x188e5a923f8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x188e5a92470 <col:34> Implicit
|-FunctionDecl 0x188e5a924c8 prev 0x188e5a912b0 <col:9, col:85> col:34 _rotl64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x188e5a910c0 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x188e5a91140 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x188e5a925c0 <col:34> Inherited Implicit
|-FunctionDecl 0x188e5a92780 <line:844:30> col:30 implicit _rotr 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x188e5a92820 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x188e5a92888 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x188e5a92900 <col:30> Implicit
|-FunctionDecl 0x188e5a92958 prev 0x188e5a92780 <col:9, col:75> col:30 _rotr 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x188e5a92600 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x188e5a92680 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x188e5a92a50 <col:30> Inherited Implicit
|-FunctionDecl 0x188e5a92c10 <line:845:34> col:34 implicit _rotr64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x188e5a92cb0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x188e5a92d18 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x188e5a92d90 <col:34> Implicit
|-FunctionDecl 0x188e5a92de8 prev 0x188e5a92c10 <col:9, col:85> col:34 _rotr64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x188e5a92a90 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x188e5a92b10 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x188e5a92ee0 <col:34> Inherited Implicit
|-FunctionDecl 0x188e5a93298 <line:849:9, col:171> col:25 _searchenv_s 'errno_t (const char *, const char *, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, const char *, char *, size_t)'
| |-ParmVarDecl 0x188e5a92f20 <col:45, col:58> col:58 _Filename 'const char *'
| |-ParmVarDecl 0x188e5a92fa0 <col:76, col:89> col:89 _EnvVar 'const char *'
| |-ParmVarDecl 0x188e5a93020 <col:127, col:134> col:134 _ResultPath 'char *'
| `-ParmVarDecl 0x188e5a93098 <col:152, col:159> col:159 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5a93710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:851:78 _searchenv 'void (const char *, const char *, char *) __attribute__((cdecl))':'void (const char *, const char *, char *)'
| |-ParmVarDecl 0x188e5a93478 <col:97, col:111> col:111 _Filename 'const char *'
| |-ParmVarDecl 0x188e5a934f8 <col:129, col:143> col:143 _EnvVar 'const char *'
| |-ParmVarDecl 0x188e5a93578 <col:176, col:182> col:182 _ResultPath 'char *'
| `-DeprecatedAttr 0x188e5a937c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _searchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a93db0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:854:261> col:62 _splitpath 'void (const char *, char *, char *, char *, char *) __attribute__((cdecl))':'void (const char *, char *, char *, char *, char *)'
| |-ParmVarDecl 0x188e5a939d0 <col:80, col:93> col:93 _FullPath 'const char *'
| |-ParmVarDecl 0x188e5a93a50 <col:129, col:136> col:136 _Drive 'char *'
| |-ParmVarDecl 0x188e5a93ad0 <col:169, col:176> col:176 _Dir 'char *'
| |-ParmVarDecl 0x188e5a93b50 <col:207, col:214> col:214 _Filename 'char *'
| |-ParmVarDecl 0x188e5a93bd0 <col:250, col:257> col:257 _Ext 'char *'
| `-DeprecatedAttr 0x188e5a93e78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _splitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a8c620 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:855:40, line:859:79> line:855:57 _splitpath_s 'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t)'
| |-ParmVarDecl 0x188e5a93fc0 <col:77, col:90> col:90 _FullPath 'const char *'
| |-ParmVarDecl 0x188e5a94040 <line:856:48, col:55> col:55 _Drive 'char *'
| |-ParmVarDecl 0x188e5a940b8 <col:68, col:75> col:75 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a94138 <line:857:46, col:53> col:53 _Dir 'char *'
| |-ParmVarDecl 0x188e5a941b0 <col:64, col:71> col:71 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a94230 <line:858:51, col:58> col:58 _Filename 'char *'
| |-ParmVarDecl 0x188e5a942a8 <col:74, col:81> col:81 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a94328 <line:859:46, col:53> col:53 _Ext 'char *'
| `-ParmVarDecl 0x188e5a8c330 <col:64, col:71> col:71 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5a8c9d0 <line:862:9, col:204> col:24 _swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x188e5a8c738 <col:95, col:102> col:102 _Buf1 'char *'
| |-ParmVarDecl 0x188e5a8c7b8 <col:174, col:181> col:181 _Buf2 'char *'
| `-ParmVarDecl 0x188e5a8c838 <col:188, col:192> col:192 _SizeInBytes 'int'
|-FunctionDecl 0x188e5a8cd70 <line:873:24, col:161> col:42 _wfullpath 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x188e5a8cab0 <col:86, col:96> col:96 _FullPath 'wchar_t *'
| |-ParmVarDecl 0x188e5a8cb28 <col:114, col:130> col:130 _Path 'const wchar_t *'
| `-ParmVarDecl 0x188e5a8cba0 <col:142, col:149> col:149 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5a953c0 <line:879:40, line:880:40> line:879:56 _wmakepath_s 'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x188e5a8ce50 <col:91, col:101> col:101 _PathResult 'wchar_t *'
| |-ParmVarDecl 0x188e5a8cec8 <col:119, col:126> col:126 _SIZE 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a8cf40 <col:144, col:160> col:160 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x188e5a8cfb8 <col:179, col:195> col:195 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x188e5a8d030 <col:212, col:228> col:228 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x188e5a8d0a8 <line:880:20, col:36> col:36 _Ext 'const wchar_t *'
|-FunctionDecl 0x188e5a95990 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:882:78 _wmakepath 'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x188e5a95578 <col:114, col:123> col:123 _ResultPath 'wchar_t *'
| |-ParmVarDecl 0x188e5a955f0 <col:147, col:164> col:164 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x188e5a95668 <col:183, col:200> col:200 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x188e5a956e0 <col:217, col:234> col:234 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x188e5a95758 <col:256, col:273> col:273 _Ext 'const wchar_t *'
| `-DeprecatedAttr 0x188e5a95a58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wmakepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a95c78 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:889:24, col:81> col:39 _wputenv 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x188e5a95b98 <col:55, col:71> col:71 _EnvString 'const wchar_t *'
|-FunctionDecl 0x188e5a95f68 <line:890:28, col:114> col:44 _wputenv_s 'errno_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x188e5a95d48 <col:62, col:78> col:78 _Name 'const wchar_t *'
| `-ParmVarDecl 0x188e5a95dc0 <col:92, col:108> col:108 _Value 'const wchar_t *'
|-FunctionDecl 0x188e5a943b0 <line:891:9, col:181> col:25 _wsearchenv_s 'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t)'
| |-ParmVarDecl 0x188e5a96040 <col:46, col:62> col:62 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x188e5a960b8 <col:80, col:96> col:96 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x188e5a96130 <col:134, col:144> col:144 _ResultPath 'wchar_t *'
| `-ParmVarDecl 0x188e5a961a8 <col:162, col:169> col:169 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5a94820 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:893:78 _wsearchenv 'void (const wchar_t *, const wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x188e5a94558 <col:98, col:115> col:115 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x188e5a945d0 <col:133, col:150> col:150 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x188e5a94648 <col:183, col:192> col:192 _ResultPath 'wchar_t *'
| `-DeprecatedAttr 0x188e5a948d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsearchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a94ef0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:896:278> col:63 _wsplitpath 'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x188e5a94ad8 <col:82, col:98> col:98 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x188e5a94b50 <col:134, col:144> col:144 _Drive 'wchar_t *'
| |-ParmVarDecl 0x188e5a94bc8 <col:177, col:187> col:187 _Dir 'wchar_t *'
| |-ParmVarDecl 0x188e5a94c40 <col:218, col:228> col:228 _Filename 'wchar_t *'
| |-ParmVarDecl 0x188e5a94cb8 <col:264, col:274> col:274 _Ext 'wchar_t *'
| `-DeprecatedAttr 0x188e5a94fb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsplitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a8e7b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:897:21, line:901:82> line:897:37 _wsplitpath_s 'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t)'
| |-ParmVarDecl 0x188e5a950f8 <col:58, col:74> col:74 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x188e5a95170 <line:898:48, col:58> col:58 _Drive 'wchar_t *'
| |-ParmVarDecl 0x188e5a951e8 <col:71, col:78> col:78 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a95260 <line:899:46, col:56> col:56 _Dir 'wchar_t *'
| |-ParmVarDecl 0x188e5a952d8 <col:67, col:74> col:74 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a8e350 <line:900:51, col:61> col:61 _Filename 'wchar_t *'
| |-ParmVarDecl 0x188e5a8e3c8 <col:77, col:84> col:84 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a8e440 <line:901:46, col:56> col:56 _Ext 'wchar_t *'
| `-ParmVarDecl 0x188e5a8e4b8 <col:67, col:74> col:74 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5a8ead0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:909:78> col:50 _seterrormode 'void (int) __attribute__((cdecl))':'void (int)'
| |-ParmVarDecl 0x188e5a8e9c8 <col:69, col:73> col:73 _Mode 'int'
| `-DeprecatedAttr 0x188e5a8eb78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetErrorMode instead. See online help for details." ""
|-FunctionDecl 0x188e5a8ef68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:910:97> col:42 _beep 'void (unsigned int, unsigned int) __attribute__((cdecl))':'void (unsigned int, unsigned int)'
| |-ParmVarDecl 0x188e5a8ed88 <col:53, col:62> col:62 _Frequency 'unsigned int'
| |-ParmVarDecl 0x188e5a8ee08 <col:79, col:88> col:88 _Duration 'unsigned int'
| `-DeprecatedAttr 0x188e5a8f018 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Beep instead. See online help for details." ""
|-FunctionDecl 0x188e5a96400 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:911:78> col:43 _sleep 'void (unsigned long) __attribute__((cdecl))':'void (unsigned long)'
| |-ParmVarDecl 0x188e5a8f220 <col:55, col:69> col:69 _Duration 'unsigned long'
| `-DeprecatedAttr 0x188e5a964a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Sleep instead. See online help for details." ""
|-FunctionDecl 0x188e5a96a10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:934:187> col:102 ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x188e5a96750 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x188e5a967d0 <col:130, col:134> col:134 _NumOfDigits 'int'
| |-ParmVarDecl 0x188e5a96850 <col:154, col:160> col:160 _PtDec 'int *'
| |-ParmVarDecl 0x188e5a968d0 <col:174, col:180> col:180 _PtSign 'int *'
| |-DeprecatedAttr 0x188e5a96ad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ecvt. See online help for details." ""
| `-DeprecatedAttr 0x188e5a96bc8 <col:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a97100 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:935:184> col:102 fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x188e5a96e40 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x188e5a96ec0 <col:130, col:134> col:134 _NumOfDec 'int'
| |-ParmVarDecl 0x188e5a96f40 <col:151, col:157> col:157 _PtDec 'int *'
| |-ParmVarDecl 0x188e5a96fc0 <col:171, col:177> col:177 _PtSign 'int *'
| |-DeprecatedAttr 0x188e5a971c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcvt. See online help for details." ""
| `-DeprecatedAttr 0x188e5a972b8 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a99798 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:936:179> col:96 gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x188e5a99578 <col:106, col:113> col:113 _Val 'double'
| |-ParmVarDecl 0x188e5a995f8 <col:124, col:128> col:128 _NumOfDigits 'int'
| |-ParmVarDecl 0x188e5a99678 <col:165, col:172> col:172 _DstBuf 'char *'
| |-DeprecatedAttr 0x188e5a99850 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _gcvt. See online help for details." ""
| `-DeprecatedAttr 0x188e5a99948 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a99de0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:937:170> col:96 itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x188e5a99bc0 <col:106, col:110> col:110 _Val 'int'
| |-ParmVarDecl 0x188e5a99c40 <col:139, col:146> col:146 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a99cc0 <col:160, col:164> col:164 _Radix 'int'
| |-DeprecatedAttr 0x188e5a99e98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _itoa. See online help for details." ""
| `-DeprecatedAttr 0x188e5a99f90 <col:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a97428 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:938:171> col:96 ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x188e5a9a208 <col:106, col:111> col:111 _Val 'long'
| |-ParmVarDecl 0x188e5a9a288 <col:140, col:147> col:147 _DstBuf 'char *'
| |-ParmVarDecl 0x188e5a9a308 <col:161, col:165> col:165 _Radix 'int'
| |-DeprecatedAttr 0x188e5a974e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ltoa. See online help for details." ""
| `-DeprecatedAttr 0x188e5a975d8 <col:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a97870 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:941:108> col:71 putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x188e5a97790 <col:85, col:98> col:98 _EnvString 'const char *'
| `-DeprecatedAttr 0x188e5a97918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putenv. See online help for details." ""
|-FunctionDecl 0x188e5a97cf8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:944:245> col:128 swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x188e5a97ae0 <col:165, col:172> col:172 _Buf1 'char *'
| |-ParmVarDecl 0x188e5a97b60 <col:210, col:217> col:217 _Buf2 'char *'
| |-ParmVarDecl 0x188e5a97be0 <col:229, col:233> col:233 _SizeInBytes 'int'
| `-DeprecatedAttr 0x188e5a97db0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _swab. See online help for details." ""
|-FunctionDecl 0x188e5a98258 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:945:181> col:96 ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x188e5a98038 <col:107, col:121> col:121 _Val 'unsigned long'
| |-ParmVarDecl 0x188e5a980b8 <col:150, col:157> col:157 _Dstbuf 'char *'
| |-ParmVarDecl 0x188e5a98138 <col:171, col:175> col:175 _Radix 'int'
| |-DeprecatedAttr 0x188e5a98310 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ultoa. See online help for details." ""
| `-DeprecatedAttr 0x188e5a98420 <col:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a98608 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:64:18, line:947:48> col:18 onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x188e5a98530 <line:64:18, line:947:43> col:43 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x188e5a98a60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x188e5a986e0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x188e5a98760 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x188e5a987e0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x188e5a98858 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5a98e28 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x188e5a98ec8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x188e5a98f30 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x188e5a98f98 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x188e5a99018 prev 0x188e5a98e28 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x188e5a98b50 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x188e5a98bd0 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x188e5a98c48 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5b43100 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x188e5a99100 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x188e5a99180 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x188e5a991f8 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5b43560 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x188e5b431e8 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x188e5b43268 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x188e5b432e0 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5b43358 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5b43868 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x188e5b43908 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x188e5b43970 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x188e5b439d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x188e5b43a58 prev 0x188e5b43868 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x188e5b43650 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x188e5b436d0 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x188e5b43748 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5b43e18 <line:55:17> col:17 implicit memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x188e5b43eb8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x188e5b43f20 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x188e5b43f88 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x188e5b44008 prev 0x188e5b43e18 <col:1, col:127> col:17 memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x188e5b43b40 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x188e5b43bc0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x188e5b43c38 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5b464a8 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x188e5b46130 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x188e5b461a8 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x188e5b46228 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x188e5b462a0 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x188e5b46868 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x188e5b46908 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x188e5b46970 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x188e5b469d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x188e5b46a58 prev 0x188e5b46868 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x188e5b46598 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x188e5b46618 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x188e5b46690 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5b46e98 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x188e5b46f38 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x188e5b46fa0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x188e5b47008 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x188e5b47070 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x188e5b44110 prev 0x188e5b46e98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x188e5b46be0 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x188e5b46c60 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x188e5b46ce0 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x188e5b46d58 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x188e5b441d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x188e5b445b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x188e5b44398 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x188e5b44418 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x188e5b44490 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x188e5b44668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x188e5b44a60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x188e5b44790 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x188e5b44808 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5b44888 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x188e5b44df0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x188e5b44c08 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x188e5b44c88 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x188e5b44ea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5b452f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x188e5b44fe8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x188e5b45060 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x188e5b45120 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x188e5b45680 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x188e5b45720 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x188e5b45788 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x188e5b45800 prev 0x188e5b45680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x188e5b45498 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x188e5b45518 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x188e5b458b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5b45c08 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x188e5b459f8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x188e5b45a70 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x188e5b45af0 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x188e5b45f30 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x188e5b45fd0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x188e5b46038 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x188e5b47140 prev 0x188e5b45f30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x188e5b45db0 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x188e5b45e30 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x188e5b471f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5b474b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x188e5b47558 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x188e5b475c0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x188e5b47638 prev 0x188e5b474b8 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x188e5b47338 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x188e5b473b8 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x188e5b477f0 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x188e5b47890 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x188e5b47900 prev 0x188e5b477f0 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x188e5b47718 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x188e5b47b48 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x188e5b479d8 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x188e5b47a50 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5b47d98 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x188e5b47c28 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x188e5b47ca0 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x188e5b480c8 <line:131:1, line:133:1>
|   `-ReturnStmt 0x188e5b480b8 <line:132:5, col:51>
|     `-ConditionalOperator 0x188e5b48088 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x188e5b47ef8 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x188e5b47ed8 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x188e5b47ea8 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x188e5b47e60 <col:13> 'const char *' lvalue ParmVar 0x188e5b47c28 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x188e5b47ec0 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x188e5b47e80 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x188e5b48070 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x188e5b47f18 <col:24> 'int' 0
|       `-CallExpr 0x188e5b48010 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x188e5b47ff8 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x188e5b47f40 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x188e5b47b48 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x188e5b48040 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x188e5b47f60 <col:36> 'const char *' lvalue ParmVar 0x188e5b47c28 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x188e5b48058 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x188e5b47f80 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x188e5b47ca0 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5b40378 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x188e5b400d0 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x188e5b40148 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x188e5b401c8 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x188e5b40240 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x188e5b40680 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x188e5b40720 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x188e5b40788 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x188e5b407f0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x188e5b40870 prev 0x188e5b40680 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x188e5b40468 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x188e5b404e8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x188e5b40560 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5b40a38 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x188e5b40958 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x188e5b40d00 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x188e5b40da0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x188e5b40e08 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x188e5b40e80 prev 0x188e5b40d00 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x188e5b40b10 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x188e5b40b90 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x188e5b48190 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x188e5b40f60 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x188e5b40fe0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x188e5b483f0 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x188e5b48270 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x188e5b482f0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x188e5b487a8 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x188e5b484d0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x188e5b48550 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x188e5b485c8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5b48a10 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x188e5b48890 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x188e5b48910 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x188e5b48d08 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x188e5b48af0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x188e5b48b70 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x188e5b48be8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5b48f70 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x188e5b48df0 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x188e5b48e70 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x188e5a9fa90 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x188e5b49050 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x188e5b490d0 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x188e5a9f970 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a9fe48 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x188e5a9fb78 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x188e5a9fbf8 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x188e5a9fc70 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5aa02b0 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x188e5a9ff30 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x188e5a9ffb0 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x188e5aa0028 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5aa00a0 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5aa05b8 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x188e5aa03a0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x188e5aa0420 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x188e5aa0498 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5aa0950 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x188e5aa06a0 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x188e5aa0720 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x188e5aa0798 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5aa0810 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5aa0c68 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x188e5aa0d08 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x188e5aa0d70 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x188e5aa0de8 prev 0x188e5aa0c68 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x188e5aa0a40 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x188e5aa0ac0 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x188e5aa1068 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x188e5aa0f88 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x188e5aa1110 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5aa14e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x188e5aa1258 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x188e5aa12d0 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5aa1350 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x188e5aa17b8 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x188e5aa1858 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x188e5aa18c8 prev 0x188e5aa17b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x188e5aa1688 <col:90> col:93 'int'
| `-DeprecatedAttr 0x188e5aa5980 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5aa5cd8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x188e5aa5ac8 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x188e5aa5b40 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5aa5bc0 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x188e5aa5f98 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x188e5aa5dc0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x188e5aa5e38 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5aa6218 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x188e5aa6138 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x188e5aa62c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5aa66d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x188e5aa6408 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x188e5aa6480 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5aa64f8 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5aa6aa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x188e5aa6878 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x188e5aa68f0 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x188e5aa6b50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5aa7008 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x188e5aa6c98 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x188e5aa6d10 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x188e5aa6d90 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x188e5aa6e08 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x188e5aa73d0 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x188e5aa7470 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x188e5aa74d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x188e5aa7540 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x188e5aa75c0 prev 0x188e5aa73d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x188e5aa71b8 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x188e5aa7238 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x188e5aa72b0 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x188e5aa7678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5aa7a00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x188e5aa7aa0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x188e5aa7b08 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x188e5aa7b70 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x188e5aa7bf0 prev 0x188e5aa7a00 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x188e5aa77c0 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x188e5aa7840 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x188e5aa78b8 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5aa7ef0 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x188e5aa7cd8 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x188e5aa7d58 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x188e5aa7dd0 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5aa8288 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x188e5aa7fd8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x188e5aa8058 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x188e5aa80d0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5aa8148 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5aa8620 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x188e5aa8378 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x188e5aa83f0 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x188e5aa8470 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x188e5aa84e8 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x188e5aa89e8 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x188e5aa8a88 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x188e5aa8af0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x188e5aa8b58 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x188e5aa8bd8 prev 0x188e5aa89e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x188e5aa87d0 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x188e5aa8850 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x188e5aa88c8 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x188e5aa8c90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5aa9148 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x188e5aa8dd8 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x188e5aa8e50 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5aa8ed0 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x188e5aa8f48 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5aa95c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x188e5aa92f8 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x188e5aa9378 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x188e5aa93f0 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x188e5aa9680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e59f3b80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x188e59f3c20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x188e59f3c88 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x188e59f3d00 prev 0x188e59f3b80 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x188e5aa97c8 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x188e5aa9848 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x188e59f3f60 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x188e59f4000 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x188e59f4068 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x188e59f40e0 prev 0x188e59f3f60 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x188e59f3de0 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x188e59f3e60 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x188e59f42a0 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x188e59f41c0 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x188e59f44f0 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x188e59f4590 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x188e59f45f8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x188e59f4670 prev 0x188e59f44f0 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x188e59f4378 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x188e59f43f8 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x188e59f48d0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x188e59f4970 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x188e59f49d8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x188e59f4a50 prev 0x188e59f48d0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x188e59f4750 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x188e59f47d0 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x188e59f4d70 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x188e59f4e10 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x188e59f4e78 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x188e59f4ef0 prev 0x188e59f4d70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x188e59f4bf0 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x188e59f4c70 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x188e59f4fa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e59f5388 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x188e59f50e8 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x188e59f5168 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x188e59f51e8 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x188e59f55e0 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x188e59f5470 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x188e59f54e8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x188e59f5860 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x188e59f5780 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x188e59f5908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e59f5ca8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x188e59f5a50 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x188e59f5ac8 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e59f5b90 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e59f5fc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x188e59f5e50 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x188e59f5ec8 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x188e59f6078 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e59f6490 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x188e59f6530 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x188e59f6598 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x188e59f6600 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x188e59f6680 prev 0x188e59f6490 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x188e59f61c0 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x188e59f6240 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x188e59f62b8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x188e59f6ad8 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x188e59f6768 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x188e59f67e8 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x188e59f6860 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e59f68d8 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e59f6d48 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x188e59f6de8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x188e59f6e58 prev 0x188e59f6d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x188e59f6c68 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x188e59f6f00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x188e59f7248 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x188e59f70c8 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x188e59f7148 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x188e59f72f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x188e59f7640 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x188e59f74c0 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x188e59f7540 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x188e59f76f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x188e59f7998 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x188e59f78b8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x188e59f7a40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x188e59f9e80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x188e59f9c68 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x188e59f9ce8 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x188e59f9d60 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x188e59f9f38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x188e59fa318 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x188e59fa100 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x188e59fa180 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x188e59fa1f8 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x188e59fa3d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x188e59fa678 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x188e59fa598 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x188e59fa720 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x188e59faa68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x188e59fa8e8 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x188e59fa968 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x188e59fab18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x188e59fadc0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x188e59face0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x188e59fae68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x188e59fb060 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x188e59faf88 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x188e59fb3f0 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x188e59fb130 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x188e59fb1a8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x188e59fb220 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x188e59fb7a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x188e59fb590 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x188e59fb608 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x188e59fb858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e59fdc08 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x188e59fdca8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x188e59fdd10 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x188e59fdd88 prev 0x188e59fdc08 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x188e59fb998 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x188e59fba10 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x188e59fe040 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x188e59fe0e0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x188e59fe148 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x188e59fe1c0 prev 0x188e59fe040 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x188e59fde60 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x188e59fded8 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x188e59fe4a0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x188e59fe298 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x188e59fe310 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x188e59fe388 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x188e59fe7b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x188e59fe640 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x188e59fe6b8 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x188e59fe860 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e59febb8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x188e59fe9a0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x188e59fea18 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x188e59fee00 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x188e59feea0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x188e59fef10 prev 0x188e59fee00 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x188e59fec90 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x188e59ff1f8 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x188e59fefe0 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x188e59ff058 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x188e59ff440 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x188e59ff2d0 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x188e59ff348 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x188e59ff7d8 <line:306:1, line:308:1>
|   `-ReturnStmt 0x188e59ff7c8 <line:307:5, col:56>
|     `-ConditionalOperator 0x188e59ff798 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x188e59ff600 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x188e59ff5e0 <col:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x188e59ff5b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x188e59ff508 <col:13> 'const wchar_t *' lvalue ParmVar 0x188e59ff2d0 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x188e59ff5c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x188e59ff590 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x188e59ff568 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x188e59ff528 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x188e59ff780 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x188e59ff620 <col:29> 'int' 0
|       `-CallExpr 0x188e59ff720 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x188e59ff708 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x188e59ff648 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x188e59ff1f8 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x188e59ff750 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x188e59ff668 <col:41> 'const wchar_t *' lvalue ParmVar 0x188e59ff2d0 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x188e59ff768 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x188e59ff688 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x188e59ff348 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x188e59ffbe0 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x188e59ff800 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x188e59ff878 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x188e59ff8f0 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x188e59ff968 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x188e59fff90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x188e59ffd88 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x188e59ffe00 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x188e59ffe78 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x188e5a00048 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a00458 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x188e5a004f8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x188e5a00560 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x188e5a005c8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x188e5a00648 prev 0x188e5a00458 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x188e5a00188 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x188e5a00200 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x188e5a00278 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5a009c8 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x188e5a00728 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x188e5a007a0 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a00818 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x188e5a00890 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x188e5a00d78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x188e5a00b70 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x188e5a00be8 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x188e5a00c60 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x188e5a00e30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a010e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x188e5a00f70 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x188e5a00fe8 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x188e5a01328 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x188e5a011b8 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x188e5a01230 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x188e5a01570 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x188e5a01400 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x188e5a01478 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x188e5a017b8 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x188e5a01648 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x188e5a016c0 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x188e5a01ac0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x188e5a01950 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x188e5a019c8 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x188e5a01b70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a01fb0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x188e5a01ce8 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x188e5a01d60 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x188e5a01de0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x188e5a022d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x188e5a02158 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x188e5a02378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a02780 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x188e5a024b8 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x188e5a02530 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a025b0 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x188e5a029f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x188e5a02920 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x188e5a02aa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a02e60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x188e5a02be0 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x188e5a02c58 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a02cd0 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x188e5a030b8 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x188e5a02f40 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x188e5a02fb8 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x188e5a03458 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x188e5a03190 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x188e5a03208 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x188e5a03280 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a03748 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x188e5a03538 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x188e5a035b0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x188e5a03628 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5a03c00 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x188e5a03828 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x188e5a038a0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x188e5a03918 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a03990 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a04058 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x188e5a03ce8 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x188e5a03d60 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x188e5a03dd8 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x188e5a03e50 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5a044c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x188e5a04200 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x188e5a04278 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x188e5a042f0 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x188e5a04578 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a04790 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x188e5a046b8 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x188e5a04b20 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x188e5a04860 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x188e5a048d8 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a04950 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x188e5a04ed8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x188e5a04cc0 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x188e5a04d38 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x188e5a04f88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a05238 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x188e5a050c8 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x188e5a05140 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5a054a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x188e5a053d0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x188e5a05550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a05950 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x188e5a05690 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x188e5a05708 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a05780 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a05d18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x188e5a05af0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x188e5a05b68 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x188e5a05dc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a06078 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x188e5a05f08 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x188e5a05f80 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5a062e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x188e5a06210 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x188e5a06390 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a066d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x188e5a064d0 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x188e5a06548 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a065c0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a069e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x188e5a06878 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x188e5a068f0 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x188e5a06a98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x188e5a06ea0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x188e5a06bd8 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x188e5a06c50 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x188e5a06cc8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5a072e8 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x188e5a06f80 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x188e5a06ff8 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x188e5a07070 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a070e8 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a07548 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x188e5a073d0 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x188e5a07448 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x188e5a07830 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x188e5a07620 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x188e5a07698 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x188e5a07710 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a07a88 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x188e5a07910 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x188e5a07988 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x188e5a07db8 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x188e5a07b60 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x188e5a07c20 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x188e5a07c98 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a080a8 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x188e5a07e98 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x188e5a07f10 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x188e5a07f88 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5a08430 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x188e5a08188 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x188e5a08200 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x188e5a08278 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a082f0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a08728 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x188e5a08518 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x188e5a08590 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x188e5a08608 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x188e5a08ab0 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x188e5a08808 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x188e5a08880 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x188e5a088f8 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x188e5a08970 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x188e5a08d10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x188e5a08c38 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x188e5a08db8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x188e5a090f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x188e5a08f78 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x188e5a08ff0 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x188e5a091a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x188e5a09570 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x188e5a09360 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x188e5a093d8 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x188e5a09450 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x188e5a09628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x188e5a099f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x188e5a097e8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x188e5a09860 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x188e5a098d8 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x188e5a09aa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x188e5a09db8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x188e5a09ce0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x188e5a09e60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x188e5a0a190 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x188e5a0a020 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x188e5a0a098 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x188e5a0a240 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x188e5a0a4d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x188e5a0a400 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x188e5a0a580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x188e5a0a818 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x188e5a0a740 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x188e5a0a8c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x188e5a0abf8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x188e5a0aa80 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x188e5a0aaf8 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x188e5a0aca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x188e5a0b090 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:35:9, col:112> col:22 used _wassert 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
| |-ParmVarDecl 0x188e5a0adc8 <col:38, col:54> col:54 _Message 'const wchar_t *'
| |-ParmVarDecl 0x188e5a0ae40 <col:71, col:86> col:86 _File 'const wchar_t *'
| `-ParmVarDecl 0x188e5a0aec0 <col:98, col:107> col:107 _Line 'unsigned int'
|-TypedefDecl 0x188e5a0b178 <D:\Microsoft Visual Studio 12.0\VC\include\signal.h:28:1, col:13> col:13 sig_atomic_t 'int'
| `-BuiltinType 0x188e3f58d50 'int'
|-FunctionDecl 0x188e5a0b330 <line:88:1, col:45> col:25 __pxcptinfoptrs 'void **(void) __attribute__((cdecl))':'void **(void)' extern
|-FunctionDecl 0x188e5a0b880 <line:94:9, col:100> col:33 signal 'void (*(int, void (*)(int) __attribute__((cdecl))))(int) __attribute__((cdecl)) __attribute__((cdecl))'
| |-ParmVarDecl 0x188e5a0b400 <col:45, col:49> col:49 _SigNum 'int'
| `-ParmVarDecl 0x188e5a0b608 <col:67, col:83> col:83 _Func 'void (*)(int) __attribute__((cdecl))'
|-FunctionDecl 0x188e5a0ba40 <line:97:9, col:43> col:21 raise 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x188e5a0b960 <col:32, col:36> col:36 _SigNum 'int'
|-FunctionDecl 0x188e5a0ee20 <.//openssl//file_jk/before\apps/apps.h:43:1, col:55> col:5 used app_RAND_load_file 'int (const char *, int)'
| |-ParmVarDecl 0x188e5a0bb18 <col:24, col:36> col:36 file 'const char *'
| `-ParmVarDecl 0x188e5a0bb98 <col:42, col:46> col:46 dont_warn 'int'
|-FunctionDecl 0x188e5a0efb0 <line:44:1, col:41> col:5 used app_RAND_write_file 'int (const char *)'
| `-ParmVarDecl 0x188e5a0ef00 <col:25, col:37> col:37 file 'const char *'
|-FunctionDecl 0x188e5a0f108 <line:48:1, col:36> col:6 app_RAND_allow_write_file 'void (void)'
|-FunctionDecl 0x188e5a0f2c0 <line:49:1, col:36> col:6 app_RAND_load_files 'long (char *)'
| `-ParmVarDecl 0x188e5a0f1d8 <col:26, col:32> col:32 file 'char *'
|-VarDecl 0x188e5a0f398 <line:54:1, col:14> col:14 default_config_file 'char *' extern
|-VarDecl 0x188e5a0f430 <line:55:1, col:13> col:13 invalid bio_in 'int *' extern
|-VarDecl 0x188e5a0f4b0 <line:56:1, col:13> col:13 invalid bio_out 'int *' extern
|-VarDecl 0x188e5a0f530 <line:57:1, col:13> col:13 invalid bio_err 'int *' extern
|-FunctionDecl 0x188e5a0f690 <line:58:1, col:27> col:6 invalid dup_bio_in 'int *(int)'
| `-ParmVarDecl 0x188e5a0f5b0 <col:17, col:21> col:21 format 'int'
|-FunctionDecl 0x188e5a0f800 <line:59:1, col:28> col:6 invalid dup_bio_out 'int *(int)'
| `-ParmVarDecl 0x188e5a0f750 <col:18, col:22> col:22 format 'int'
|-FunctionDecl 0x188e5a0f970 <line:60:1, col:28> col:6 invalid dup_bio_err 'int *(int)'
| `-ParmVarDecl 0x188e5a0f8c0 <col:18, col:22> col:22 format 'int'
|-FunctionDecl 0x188e5a0fc60 <line:61:1, col:66> col:6 invalid bio_open_owner 'int *(const char *, int, int)'
| |-ParmVarDecl 0x188e5a0fa30 <col:21, col:33> col:33 filename 'const char *'
| |-ParmVarDecl 0x188e5a0fab0 <col:43, col:47> col:47 format 'int'
| `-ParmVarDecl 0x188e5a0fb30 <col:55, col:59> col:59 private 'int'
|-FunctionDecl 0x188e5a0ff60 <line:62:1, col:66> col:6 invalid bio_open_default 'int *(const char *, char, int)'
| |-ParmVarDecl 0x188e5a0fd30 <col:23, col:35> col:35 filename 'const char *'
| |-ParmVarDecl 0x188e5a0fda8 <col:45, col:50> col:50 mode 'char'
| `-ParmVarDecl 0x188e5a0fe28 <col:56, col:60> col:60 format 'int'
|-FunctionDecl 0x188e5a10218 <line:63:1, col:72> col:6 invalid bio_open_default_quiet 'int *(const char *, char, int)'
| |-ParmVarDecl 0x188e5a10030 <col:29, col:41> col:41 filename 'const char *'
| |-ParmVarDecl 0x188e5a100a8 <col:51, col:56> col:56 mode 'char'
| `-ParmVarDecl 0x188e5a10128 <col:62, col:66> col:66 format 'int'
|-FunctionDecl 0x188e5a103d0 <line:64:1, col:43> col:7 invalid app_load_config 'int *(const char *)'
| `-ParmVarDecl 0x188e5a102e8 <col:23, col:35> col:35 filename 'const char *'
|-FunctionDecl 0x188e5a10540 <line:65:1, col:49> col:7 invalid app_load_config_quiet 'int *(const char *)'
| `-ParmVarDecl 0x188e5a10490 <col:29, col:41> col:41 filename 'const char *'
|-FunctionDecl 0x188e5a106d0 <line:66:1, col:40> col:5 invalid app_load_modules 'int (const int *)'
| `-ParmVarDecl 0x188e5a10600 <col:22, col:34> col:34 invalid config 'const int *'
|-FunctionDecl 0x188e5a10830 <line:67:1, col:23> col:6 unbuffer 'void (FILE *)'
| `-ParmVarDecl 0x188e5a10788 <col:15, col:21> col:21 fp 'FILE *'
|-FunctionDecl 0x188e5a109c8 <line:68:1, col:27> col:6 invalid wait_for_async 'void (int *)'
| `-ParmVarDecl 0x188e5a10908 <col:21, col:26> col:26 invalid s 'int *'
|-FunctionDecl 0x188e5a10b48 <line:73:1, col:52> col:6 invalid corrupt_signature 'void (const int *)'
| `-ParmVarDecl 0x188e5a10a88 <col:24, col:43> col:43 invalid signature 'const int *'
|-FunctionDecl 0x188e5b8a120 <line:74:1, line:75:28> line:74:5 invalid set_cert_times 'int (int *, const char *, const char *, int)'
| |-ParmVarDecl 0x188e5a10c08 <col:20, col:26> col:26 invalid x 'int *'
| |-ParmVarDecl 0x188e5a10c88 <col:29, col:41> col:41 startdate 'const char *'
| |-ParmVarDecl 0x188e5a10d08 <col:52, col:64> col:64 enddate 'const char *'
| `-ParmVarDecl 0x188e5b8a020 <line:75:20, col:24> col:24 days 'int'
|-VarDecl 0x188e5b8a258 <line:291:1, col:32> col:19 OPT_HELP_STR 'const char []' extern
|-VarDecl 0x188e5b8a2f8 <line:292:1, col:32> col:19 used OPT_MORE_STR 'const char []' extern
|-RecordDecl 0x188e5b8a378 <line:293:9, line:304:1> line:293:16 struct options_st definition
| |-FieldDecl 0x188e5b8a448 <line:294:5, col:17> col:17 name 'const char *'
| |-FieldDecl 0x188e5b8a4b8 <line:295:5, col:9> col:9 retval 'int'
| |-FieldDecl 0x188e5b8a528 <line:302:5, col:9> col:9 valtype 'int'
| `-FieldDecl 0x188e5b8a598 <line:303:5, col:17> col:17 helpstr 'const char *'
|-TypedefDecl 0x188e5b8a648 <line:293:1, line:304:3> col:3 referenced OPTIONS 'struct options_st':'struct options_st'
| `-ElaboratedType 0x188e5b8a5f0 'struct options_st' sugar
|   `-RecordType 0x188e5b8a410 'struct options_st'
|     `-Record 0x188e5b8a378 'options_st'
|-RecordDecl 0x188e5b8a6b8 <line:311:9, line:314:1> line:311:16 struct string_int_pair_st definition
| |-FieldDecl 0x188e5b8a788 <line:312:5, col:17> col:17 name 'const char *'
| `-FieldDecl 0x188e5b8a7f8 <line:313:5, col:9> col:9 retval 'int'
|-TypedefDecl 0x188e5b8a8a8 <line:311:1, line:314:3> col:3 referenced OPT_PAIR 'struct string_int_pair_st':'struct string_int_pair_st'
| `-ElaboratedType 0x188e5b8a850 'struct string_int_pair_st' sugar
|   `-RecordType 0x188e5b8a750 'struct string_int_pair_st'
|     `-Record 0x188e5b8a6b8 'string_int_pair_st'
|-TypedefDecl 0x188e5b8a920 <line:311:1, line:314:13> col:13 STRINT_PAIR 'struct string_int_pair_st':'struct string_int_pair_st'
| `-ElaboratedType 0x188e5b8a850 'struct string_int_pair_st' sugar
|   `-RecordType 0x188e5b8a750 'struct string_int_pair_st'
|     `-Record 0x188e5b8a6b8 'string_int_pair_st'
|-FunctionDecl 0x188e5b8aa60 <line:334:1, col:37> col:7 opt_progname 'char *(const char *)'
| `-ParmVarDecl 0x188e5b8a9b0 <col:20, col:32> col:32 argv0 'const char *'
|-FunctionDecl 0x188e5b8abf0 <line:335:1, col:23> col:7 opt_getprog 'char *(void)'
|-FunctionDecl 0x188e5b8afb0 <line:336:1, col:52> col:7 used opt_init 'char *(int, char **, const OPTIONS *)'
| |-ParmVarDecl 0x188e5b8acc0 <col:16, col:20> col:20 ac 'int'
| |-ParmVarDecl 0x188e5b8ad40 <col:24, col:31> col:31 av 'char **'
| `-ParmVarDecl 0x188e5b8ae38 <col:35, col:51> col:51 o 'const OPTIONS *'
|-FunctionDecl 0x188e5b8b120 <line:337:1, col:18> col:5 used opt_next 'int (void)'
|-FunctionDecl 0x188e5b8b420 <line:338:1, col:63> col:5 used opt_format 'int (const char *, unsigned long, int *)'
| |-ParmVarDecl 0x188e5b8b1f0 <col:16, col:28> col:28 s 'const char *'
| |-ParmVarDecl 0x188e5b8b270 <col:31, col:45> col:45 flags 'unsigned long'
| `-ParmVarDecl 0x188e5b8b2f0 <col:52, col:57> col:57 result 'int *'
|-FunctionDecl 0x188e5b8b690 <line:339:1, col:41> col:5 opt_int 'int (const char *, int *)'
| |-ParmVarDecl 0x188e5b8b508 <col:13, col:25> col:25 arg 'const char *'
| `-ParmVarDecl 0x188e5b8b588 <col:30, col:35> col:35 result 'int *'
|-FunctionDecl 0x188e5b8b900 <line:340:1, col:53> col:5 opt_ulong 'int (const char *, unsigned long *)'
| |-ParmVarDecl 0x188e5b8b770 <col:15, col:27> col:27 arg 'const char *'
| `-ParmVarDecl 0x188e5b8b7f0 <col:32, col:47> col:47 result 'unsigned long *'
|-FunctionDecl 0x188e5b8bba0 <line:341:1, col:43> col:5 used opt_long 'int (const char *, long *)'
| |-ParmVarDecl 0x188e5b8b9e0 <col:14, col:26> col:26 arg 'const char *'
| `-ParmVarDecl 0x188e5b8ba90 <col:31, col:37> col:37 result 'long *'
|-FunctionDecl 0x188e5b8bf70 <line:352:1, col:66> col:5 opt_pair 'int (const char *, const OPT_PAIR *, int *)'
| |-ParmVarDecl 0x188e5b8bc80 <col:14, col:26> col:26 arg 'const char *'
| |-ParmVarDecl 0x188e5b8bd78 <col:31, col:48> col:48 pairs 'const OPT_PAIR *'
| `-ParmVarDecl 0x188e5b8bdf8 <col:55, col:60> col:60 result 'int *'
|-FunctionDecl 0x188e5b96e60 <line:353:1, col:60> col:5 invalid opt_cipher 'int (const char *, const int **)'
| |-ParmVarDecl 0x188e5b96cd8 <col:16, col:28> col:28 name 'const char *'
| `-ParmVarDecl 0x188e5b96d88 <col:34, col:53> col:53 invalid cipherp 'const int **'
|-FunctionDecl 0x188e5b97050 <line:354:1, col:48> col:5 invalid opt_md 'int (const char *, const int **)'
| |-ParmVarDecl 0x188e5b96f28 <col:12, col:24> col:24 name 'const char *'
| `-ParmVarDecl 0x188e5b96fb0 <col:30, col:45> col:45 invalid mdp 'const int **'
|-FunctionDecl 0x188e5b971a0 <line:355:1, col:19> col:7 used opt_arg 'char *(void)'
|-FunctionDecl 0x188e5b972f8 <line:356:1, col:20> col:7 opt_flag 'char *(void)'
|-FunctionDecl 0x188e5b97450 <line:357:1, col:23> col:7 used opt_unknown 'char *(void)'
|-FunctionDecl 0x188e5b975a8 <line:358:1, col:21> col:7 opt_reset 'char *(void)'
|-FunctionDecl 0x188e5b97700 <line:359:1, col:21> col:8 used opt_rest 'char **(void)'
|-FunctionDecl 0x188e5b97858 <line:360:1, col:22> col:5 used opt_num_rest 'int (void)'
|-FunctionDecl 0x188e5b97a80 <line:361:1, col:45> col:5 invalid opt_verify 'int (int, int *)'
| |-ParmVarDecl 0x188e5b97928 <col:16, col:20> col:20 i 'int'
| `-ParmVarDecl 0x188e5b979a8 <col:23, col:42> col:42 invalid vpm 'int *'
|-FunctionDecl 0x188e5b97c48 <line:362:1, col:35> col:6 used opt_help 'void (const OPTIONS *)'
| `-ParmVarDecl 0x188e5b97b40 <col:15, col:31> col:31 list 'const OPTIONS *'
|-FunctionDecl 0x188e5b97eb0 <line:363:1, col:56> col:5 opt_format_error 'int (const char *, unsigned long)'
| |-ParmVarDecl 0x188e5b97d20 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x188e5b97da0 <col:37, col:51> col:51 flags 'unsigned long'
|-RecordDecl 0x188e5b97f78 <line:365:9, line:369:1> line:365:16 struct args_st definition
| |-FieldDecl 0x188e5b98048 <line:366:5, col:9> col:9 size 'int'
| |-FieldDecl 0x188e5b980b8 <line:367:5, col:9> col:9 argc 'int'
| `-FieldDecl 0x188e5b98128 <line:368:5, col:12> col:12 argv 'char **'
|-TypedefDecl 0x188e5b981d8 <line:365:1, line:369:3> col:3 referenced ARGS 'struct args_st':'struct args_st'
| `-ElaboratedType 0x188e5b98180 'struct args_st' sugar
|   `-RecordType 0x188e5b98010 'struct args_st'
|     `-Record 0x188e5b97f78 'args_st'
|-FunctionDecl 0x188e5b984a0 <line:376:1, col:41> col:8 copy_argv 'char **(int *, char **)'
| |-ParmVarDecl 0x188e5b98260 <col:18, col:23> col:23 argc 'int *'
| `-ParmVarDecl 0x188e5b98350 <col:29, col:40> col:35 argv 'char **':'char **'
|-FunctionDecl 0x188e5b987e8 <line:381:1, col:45> col:6 win32_utf8argv 'void (int *, char ***)'
| |-ParmVarDecl 0x188e5b98580 <col:21, col:26> col:26 argc 'int *'
| `-ParmVarDecl 0x188e5b986a0 <col:32, col:44> col:39 argv 'char ***':'char ***'
|-RecordDecl 0x188e5b988b0 <line:385:9, line:388:1> line:385:16 struct pw_cb_data definition
| |-FieldDecl 0x188e5b98988 <line:386:5, col:17> col:17 password 'const void *'
| `-FieldDecl 0x188e5b989f8 <line:387:5, col:17> col:17 prompt_info 'const char *'
|-TypedefDecl 0x188e5b98aa8 <line:385:1, line:388:3> col:3 referenced PW_CB_DATA 'struct pw_cb_data':'struct pw_cb_data'
| `-ElaboratedType 0x188e5b98a50 'struct pw_cb_data' sugar
|   `-RecordType 0x188e5b98950 'struct pw_cb_data'
|     `-Record 0x188e5b988b0 'pw_cb_data'
|-FunctionDecl 0x188e5b92f10 <line:390:1, col:77> col:5 password_callback 'int (char *, int, int, PW_CB_DATA *)'
| |-ParmVarDecl 0x188e5b98b30 <col:23, col:29> col:29 buf 'char *'
| |-ParmVarDecl 0x188e5b98bb0 <col:34, col:38> col:38 bufsiz 'int'
| |-ParmVarDecl 0x188e5b92c70 <col:46, col:50> col:50 verify 'int'
| `-ParmVarDecl 0x188e5b92d68 <col:58, col:70> col:70 cb_data 'PW_CB_DATA *'
|-FunctionDecl 0x188e5b93088 <line:392:1, col:25> col:5 setup_ui_method 'int (void)'
|-FunctionDecl 0x188e5b931d8 <line:393:1, col:28> col:6 destroy_ui_method 'void (void)'
|-FunctionDecl 0x188e5b934e0 <line:395:1, col:37> col:5 chopup_args 'int (ARGS *, char *)'
| |-ParmVarDecl 0x188e5b93318 <col:17, col:23> col:23 arg 'ARGS *'
| `-ParmVarDecl 0x188e5b93398 <col:28, col:34> col:34 buf 'char *'
|-FunctionDecl 0x188e5b938f8 <line:401:1, line:402:43> line:401:6 invalid print_bignum_var 'void (int *, const int *, const char *, int, unsigned char *)'
| |-ParmVarDecl 0x188e5b935c0 <col:23, <invalid sloc>> col:28 invalid 'int *'
| |-ParmVarDecl 0x188e5b93640 <col:30, <invalid sloc>> col:44 invalid 'const int *'
| |-ParmVarDecl 0x188e5b936c0 <col:46, col:56> col:57 'const char *'
| |-ParmVarDecl 0x188e5b93740 <line:402:23> col:26 'int'
| `-ParmVarDecl 0x188e5b937f0 <col:28, col:42> col:43 'unsigned char *'
|-FunctionDecl 0x188e5b93c48 <line:403:1, col:65> col:6 invalid print_array 'void (int *, const char *, int, const unsigned char *)'
| |-ParmVarDecl 0x188e5b939d8 <col:18, <invalid sloc>> col:23 invalid 'int *'
| |-ParmVarDecl 0x188e5b93a58 <col:25, col:36> col:37 'const char *'
| |-ParmVarDecl 0x188e5b93ad8 <col:39> col:42 'int'
| `-ParmVarDecl 0x188e5b93b58 <col:44, col:64> col:65 'const unsigned char *'
|-FunctionDecl 0x188e5b93eb0 <line:404:1, col:54> col:5 used set_cert_ex 'int (unsigned long *, const char *)'
| |-ParmVarDecl 0x188e5b93d20 <col:17, col:32> col:32 flags 'unsigned long *'
| `-ParmVarDecl 0x188e5b93da0 <col:39, col:51> col:51 arg 'const char *'
|-FunctionDecl 0x188e5b940e0 <line:405:1, col:54> col:5 used set_name_ex 'int (unsigned long *, const char *)'
| |-ParmVarDecl 0x188e5b93f90 <col:17, col:32> col:32 flags 'unsigned long *'
| `-ParmVarDecl 0x188e5b94010 <col:39, col:51> col:51 arg 'const char *'
|-FunctionDecl 0x188e5b94350 <line:406:1, col:49> col:5 set_ext_copy 'int (int *, const char *)'
| |-ParmVarDecl 0x188e5b941c0 <col:18, col:23> col:23 copy_type 'int *'
| `-ParmVarDecl 0x188e5b94240 <col:34, col:46> col:46 arg 'const char *'
|-FunctionDecl 0x188e5b94620 <line:407:1, col:58> col:5 invalid copy_extensions 'int (int *, int *, int)'
| |-ParmVarDecl 0x188e5b94430 <col:21, col:27> col:27 invalid x 'int *'
| |-ParmVarDecl 0x188e5b944b0 <col:30, col:40> col:40 invalid req 'int *'
| `-ParmVarDecl 0x188e5b94530 <col:45, col:49> col:49 copy_type 'int'
|-FunctionDecl 0x188e5b949d0 <line:408:1, col:78> col:5 used app_passwd 'int (const char *, const char *, char **, char **)'
| |-ParmVarDecl 0x188e5b946f0 <col:16, col:28> col:28 arg1 'const char *'
| |-ParmVarDecl 0x188e5b94770 <col:34, col:46> col:46 arg2 'const char *'
| |-ParmVarDecl 0x188e5b947f0 <col:52, col:59> col:59 pass1 'char **'
| `-ParmVarDecl 0x188e5b94870 <col:66, col:73> col:73 pass2 'char **'
|-FunctionDecl 0x188e5b94b58 <line:409:1, col:31> col:5 invalid add_oid_section 'int (int *)'
| `-ParmVarDecl 0x188e5b94ac0 <col:21, col:27> col:27 invalid conf 'int *'
|-FunctionDecl 0x188e5b98ed0 <line:410:1, col:71> col:7 invalid load_cert 'int *(const char *, int, const char *)'
| |-ParmVarDecl 0x188e5b98ca0 <col:17, col:29> col:29 file 'const char *'
| |-ParmVarDecl 0x188e5b98d20 <col:35, col:39> col:39 format 'int'
| `-ParmVarDecl 0x188e5b98da0 <col:47, col:59> col:59 cert_descrip 'const char *'
|-FunctionDecl 0x188e5b99130 <line:411:1, col:50> col:11 invalid load_crl 'int *(const char *, int)'
| |-ParmVarDecl 0x188e5b98fa0 <col:20, col:32> col:32 infile 'const char *'
| `-ParmVarDecl 0x188e5b99020 <col:40, col:44> col:44 format 'int'
|-FunctionDecl 0x188e5b99590 <line:412:1, line:413:72> line:412:11 invalid load_key 'int *(const char *, int, int, const char *, int *, const char *)'
| |-ParmVarDecl 0x188e5b991f8 <col:20, col:32> col:32 file 'const char *'
| |-ParmVarDecl 0x188e5b99278 <col:38, col:42> col:42 format 'int'
| |-ParmVarDecl 0x188e5b992f8 <col:50, col:54> col:54 maybe_stdin 'int'
| |-ParmVarDecl 0x188e5b99378 <line:413:20, col:32> col:32 pass 'const char *'
| |-ParmVarDecl 0x188e5b993f8 <col:38, col:46> col:46 invalid e 'int *'
| `-ParmVarDecl 0x188e5b99478 <col:49, col:61> col:61 key_descrip 'const char *'
|-FunctionDecl 0x188e5b999b8 <line:414:1, line:415:75> line:414:11 invalid load_pubkey 'int *(const char *, int, int, const char *, int *, const char *)'
| |-ParmVarDecl 0x188e5b99678 <col:23, col:35> col:35 file 'const char *'
| |-ParmVarDecl 0x188e5b996f8 <col:41, col:45> col:45 format 'int'
| |-ParmVarDecl 0x188e5b99778 <col:53, col:57> col:57 maybe_stdin 'int'
| |-ParmVarDecl 0x188e5b997f8 <line:415:23, col:35> col:35 pass 'const char *'
| |-ParmVarDecl 0x188e5b99878 <col:41, col:49> col:49 invalid e 'int *'
| `-ParmVarDecl 0x188e5b998f8 <col:52, col:64> col:64 key_descrip 'const char *'
|-FunctionDecl 0x188e5b99ce0 <line:416:1, line:417:58> line:416:5 invalid load_certs 'int (const char *, int (*)())'
| |-ParmVarDecl 0x188e5b99aa0 <col:16, col:28> col:28 file 'const char *'
| `-ParmVarDecl 0x188e5b99bc0 <col:34, <invalid sloc>> col:34 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x188e5b99ed8 <line:418:1, line:419:57> line:418:5 invalid load_crls 'int (const char *, int (*)())'
| |-ParmVarDecl 0x188e5b99da8 <col:15, col:27> col:27 file 'const char *'
| `-ParmVarDecl 0x188e5b99e38 <col:33, <invalid sloc>> col:33 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x188e5b9a280 <line:420:1, line:421:52> line:420:13 invalid setup_verify 'int *(const char *, const char *, int, int)'
| |-ParmVarDecl 0x188e5b99fa0 <col:26, col:38> col:38 CAfile 'const char *'
| |-ParmVarDecl 0x188e5b9a020 <col:46, col:58> col:58 CApath 'const char *'
| |-ParmVarDecl 0x188e5b9a0a0 <line:421:26, col:30> col:30 noCAfile 'int'
| `-ParmVarDecl 0x188e5b9a120 <col:40, col:44> col:44 noCApath 'int'
|-FunctionDecl 0x188e5b9a660 <line:422:1, line:424:49> line:422:12 invalid ctx_set_verify_locations 'int (int *, const char *, const char *, int, int)'
| |-ParmVarDecl 0x188e5b9a358 <col:37, col:46> col:46 invalid ctx 'int *'
| |-ParmVarDecl 0x188e5b9a3d8 <col:51, col:63> col:63 CAfile 'const char *'
| |-ParmVarDecl 0x188e5b9a458 <line:423:37, col:49> col:49 CApath 'const char *'
| |-ParmVarDecl 0x188e5b9a4d8 <col:57, col:61> col:61 noCAfile 'int'
| `-ParmVarDecl 0x188e5b9a558 <line:424:37, col:41> col:41 noCApath 'int'
|-FunctionDecl 0x188e5b9a860 <line:433:1, col:66> col:12 invalid ctx_set_ctlog_list_file 'int (int *, const char *)'
| |-ParmVarDecl 0x188e5b9a740 <col:36, col:45> col:45 invalid ctx 'int *'
| `-ParmVarDecl 0x188e5b9a7c0 <col:50, col:62> col:62 path 'const char *'
|-FunctionDecl 0x188e5b9aa78 <line:437:1, col:51> col:9 invalid setup_engine 'int *(const char *, int)'
| |-ParmVarDecl 0x188e5b9a928 <col:22, col:34> col:34 engine 'const char *'
| `-ParmVarDecl 0x188e5b9a9a8 <col:42, col:46> col:46 debug 'int'
|-FunctionDecl 0x188e5b9abd0 <line:438:1, col:30> col:6 invalid release_engine 'void (int *)'
| `-ParmVarDecl 0x188e5b9ab40 <col:21, col:29> col:29 invalid e 'int *'
|-FunctionDecl 0x188e5b9b0c0 <line:441:1, line:445:49> line:441:16 invalid process_responder 'int *(int *, const char *, const char *, const char *, int, int (*)())'
| |-ParmVarDecl 0x188e5b9acb0 <col:34, col:48> col:48 invalid req 'int *'
| |-ParmVarDecl 0x188e5b9ad30 <line:442:34, col:46> col:46 host 'const char *'
| |-ParmVarDecl 0x188e5b9adb0 <col:52, col:64> col:64 path 'const char *'
| |-ParmVarDecl 0x188e5b9ae30 <line:443:34, col:46> col:46 port 'const char *'
| |-ParmVarDecl 0x188e5b9aeb0 <col:52, col:56> col:56 use_ssl 'int'
| `-ParmVarDecl 0x188e5b9af40 <line:444:34, <invalid sloc>> col:34 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x188e5b9b4f0 <line:449:1, line:450:66> line:449:5 invalid unpack_revinfo 'int (int **, int *, int **, int **, const char *)'
| |-ParmVarDecl 0x188e5b9b1d8 <col:20, col:32> col:32 invalid prevtm 'int **'
| |-ParmVarDecl 0x188e5b9b258 <col:40, col:45> col:45 preason 'int *'
| |-ParmVarDecl 0x188e5b9b2e0 <col:54, col:68> col:68 invalid phold 'int **'
| |-ParmVarDecl 0x188e5b9b368 <line:450:20, col:43> col:43 invalid pinvtm 'int **'
| `-ParmVarDecl 0x188e5b9b3e8 <col:51, col:63> col:63 str 'const char *'
|-RecordDecl 0x188e5b9b5b8 <line:465:9, line:467:1> line:465:16 struct db_attr_st definition
| `-FieldDecl 0x188e5b9b688 <line:466:5, col:9> col:9 unique_subject 'int'
|-TypedefDecl 0x188e5b9b738 <line:465:1, line:467:3> col:3 referenced DB_ATTR 'struct db_attr_st':'struct db_attr_st'
| `-ElaboratedType 0x188e5b9b6e0 'struct db_attr_st' sugar
|   `-RecordType 0x188e5b9b650 'struct db_attr_st'
|     `-Record 0x188e5b9b5b8 'db_attr_st'
|-RecordDecl 0x188e5b9b7a8 <line:468:9, line:471:1> line:468:16 invalid struct ca_db_st definition
| |-FieldDecl 0x188e5b9b890 <line:469:5, col:13> col:13 attributes 'DB_ATTR':'struct db_attr_st'
| `-FieldDecl 0x188e5b9b900 <line:470:5, col:13> col:13 invalid db 'int *'
|-TypedefDecl 0x188e5b9ba08 <line:468:1, line:471:3> col:3 referenced CA_DB 'struct ca_db_st':'struct ca_db_st'
| `-ElaboratedType 0x188e5b9b9b0 'struct ca_db_st' sugar
|   `-RecordType 0x188e5b9b840 'struct ca_db_st'
|     `-Record 0x188e5b9b7a8 'ca_db_st'
|-FunctionDecl 0x188e5b9bc20 <line:473:1, col:42> col:7 used app_malloc 'void *(int, const char *)'
| |-ParmVarDecl 0x188e5b9ba90 <col:18, col:22> col:22 sz 'int'
| `-ParmVarDecl 0x188e5b9bb10 <col:26, col:38> col:38 what 'const char *'
|-FunctionDecl 0x188e5b9bef0 <line:474:1, col:77> col:9 invalid load_serial 'int *(const char *, int, int **)'
| |-ParmVarDecl 0x188e5b9bd00 <col:21, col:33> col:33 serialfile 'const char *'
| |-ParmVarDecl 0x188e5b9bd80 <col:45, col:49> col:49 create 'int'
| `-ParmVarDecl 0x188e5b9be08 <col:57, col:72> col:72 invalid retai 'int **'
|-FunctionDecl 0x188e5b9c240 <line:475:1, line:476:37> line:475:5 invalid save_serial 'int (const char *, const char *, const int *, int **)'
| |-ParmVarDecl 0x188e5b9bfc0 <col:17, col:29> col:29 serialfile 'const char *'
| |-ParmVarDecl 0x188e5b9c040 <col:41, col:53> col:53 suffix 'const char *'
| |-ParmVarDecl 0x188e5b9c0c0 <col:61, col:75> col:75 invalid serial 'const int *'
| `-ParmVarDecl 0x188e5b9c148 <line:476:17, col:32> col:32 invalid retai 'int **'
|-FunctionDecl 0x188e5b9c550 <line:477:1, line:478:41> line:477:5 rotate_serial 'int (const char *, const char *, const char *)'
| |-ParmVarDecl 0x188e5b9c318 <col:19, col:31> col:31 serialfile 'const char *'
| |-ParmVarDecl 0x188e5b9c398 <col:43, col:55> col:55 new_suffix 'const char *'
| `-ParmVarDecl 0x188e5b9c418 <line:478:19, col:31> col:31 old_suffix 'const char *'
|-FunctionDecl 0x188e5b9c790 <line:479:1, col:44> col:5 invalid rand_serial 'int (int *, int *)'
| |-ParmVarDecl 0x188e5b9c638 <col:17, col:25> col:25 invalid b 'int *'
| `-ParmVarDecl 0x188e5b9c6b8 <col:28, col:42> col:42 invalid ai 'int *'
|-FunctionDecl 0x188e5b9cae8 <line:480:1, col:54> col:8 load_index 'CA_DB *(const char *, DB_ATTR *)'
| |-ParmVarDecl 0x188e5b9c878 <col:19, col:31> col:31 dbfile 'const char *'
| `-ParmVarDecl 0x188e5b9c948 <col:39, col:48> col:48 dbattr 'DB_ATTR *'
|-FunctionDecl 0x188e5ba0d10 <line:481:1, col:26> col:5 index_index 'int (CA_DB *)'
| `-ParmVarDecl 0x188e5b9cbc0 <col:17, col:24> col:24 db 'CA_DB *'
|-FunctionDecl 0x188e5ba1050 <line:482:1, col:65> col:5 save_index 'int (const char *, const char *, CA_DB *)'
| |-ParmVarDecl 0x188e5ba0de8 <col:16, col:28> col:28 dbfile 'const char *'
| |-ParmVarDecl 0x188e5ba0e68 <col:36, col:48> col:48 suffix 'const char *'
| `-ParmVarDecl 0x188e5ba0ee0 <col:56, col:63> col:63 db 'CA_DB *'
|-FunctionDecl 0x188e5ba1328 <line:483:1, line:484:40> line:483:5 rotate_index 'int (const char *, const char *, const char *)'
| |-ParmVarDecl 0x188e5ba1138 <col:18, col:30> col:30 dbfile 'const char *'
| |-ParmVarDecl 0x188e5ba11b8 <col:38, col:50> col:50 new_suffix 'const char *'
| `-ParmVarDecl 0x188e5ba1238 <line:484:18, col:30> col:30 old_suffix 'const char *'
|-FunctionDecl 0x188e5ba1518 <line:485:1, col:26> col:6 free_index 'void (CA_DB *)'
| `-ParmVarDecl 0x188e5ba1408 <col:17, col:24> col:24 db 'CA_DB *'
|-FunctionDecl 0x188e5ba1750 <line:489:1, col:70> col:5 invalid index_name_cmp 'int (const int *, const int *)'
| |-ParmVarDecl 0x188e5ba15f0 <col:20, col:43> col:43 invalid a 'const int *'
| `-ParmVarDecl 0x188e5ba1670 <col:46, col:69> col:69 invalid b 'const int *'
|-FunctionDecl 0x188e5ba1968 <line:490:1, col:41> col:5 parse_yesno 'int (const char *, int)'
| |-ParmVarDecl 0x188e5ba1818 <col:17, col:29> col:29 str 'const char *'
| `-ParmVarDecl 0x188e5ba1898 <col:34, col:38> col:38 def 'int'
|-FunctionDecl 0x188e5ba1c80 <line:492:1, col:65> col:12 invalid parse_name 'int *(const char *, long, int)'
| |-ParmVarDecl 0x188e5ba1a48 <col:23, col:35> col:35 str 'const char *'
| |-ParmVarDecl 0x188e5ba1ac8 <col:40, col:45> col:45 chtype 'long'
| `-ParmVarDecl 0x188e5ba1b48 <col:53, col:57> col:57 multirdn 'int'
|-FunctionDecl 0x188e5ba1fe0 <line:493:1, line:494:52> line:493:5 invalid args_verify 'int (char ***, int *, int *, int **)'
| |-ParmVarDecl 0x188e5ba1d58 <col:17, col:25> col:25 pargs 'char ***'
| |-ParmVarDecl 0x188e5ba1dd8 <col:32, col:37> col:37 pargc 'int *'
| |-ParmVarDecl 0x188e5ba1e58 <line:494:17, col:22> col:22 badarg 'int *'
| `-ParmVarDecl 0x188e5ba1ee0 <col:30, col:50> col:50 invalid pm 'int **'
|-FunctionDecl 0x188e5ba2148 <line:495:1, col:40> col:6 invalid policies_print 'void (int *)'
| `-ParmVarDecl 0x188e5ba20b8 <col:21, col:37> col:37 invalid ctx 'int *'
|-FunctionDecl 0x188e5ba2420 <line:496:1, col:56> col:5 invalid bio_to_mem 'int (unsigned char **, int, int *)'
| |-ParmVarDecl 0x188e5ba2238 <col:16, col:32> col:32 out 'unsigned char **'
| |-ParmVarDecl 0x188e5ba22b8 <col:37, col:41> col:41 maxlen 'int'
| `-ParmVarDecl 0x188e5ba2338 <col:49, col:54> col:54 invalid in 'int *'
|-FunctionDecl 0x188e5ba2610 <line:497:1, col:58> col:5 invalid pkey_ctrl_string 'int (int *, const char *)'
| |-ParmVarDecl 0x188e5ba24f0 <col:22, col:36> col:36 invalid ctx 'int *'
| `-ParmVarDecl 0x188e5ba2570 <col:41, col:53> col:53 value 'const char *'
|-FunctionDecl 0x188e5ba2960 <line:498:1, line:499:62> line:498:5 invalid init_gen_str 'int (int **, const char *, int *, int)'
| |-ParmVarDecl 0x188e5ba26e0 <col:18, col:33> col:33 invalid pctx 'int **'
| |-ParmVarDecl 0x188e5ba2760 <line:499:18, col:30> col:30 algname 'const char *'
| |-ParmVarDecl 0x188e5ba27e0 <col:39, col:47> col:47 invalid e 'int *'
| `-ParmVarDecl 0x188e5ba2860 <col:50, col:54> col:54 do_param 'int'
|-FunctionDecl 0x188e5b9cd08 <line:500:1, line:501:51> line:500:5 invalid do_X509_sign 'int (int *, int *, const int *, int (*)())'
| |-ParmVarDecl 0x188e5ba2a38 <col:18, col:24> col:24 invalid x 'int *'
| |-ParmVarDecl 0x188e5ba2ab8 <col:27, col:37> col:37 invalid pkey 'int *'
| |-ParmVarDecl 0x188e5ba2b38 <col:43, col:57> col:57 invalid md 'const int *'
| `-ParmVarDecl 0x188e5ba2bc8 <line:501:18, <invalid sloc>> col:18 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x188e5b9d020 <line:502:1, line:503:55> line:502:5 invalid do_X509_REQ_sign 'int (int *, int *, const int *, int (*)())'
| |-ParmVarDecl 0x188e5b9cde0 <col:22, col:32> col:32 invalid x 'int *'
| |-ParmVarDecl 0x188e5b9ce60 <col:35, col:45> col:45 invalid pkey 'int *'
| |-ParmVarDecl 0x188e5b9cee0 <col:51, col:65> col:65 invalid md 'const int *'
| `-ParmVarDecl 0x188e5b9cf70 <line:503:22, <invalid sloc>> col:22 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x188e5b9d338 <line:504:1, line:505:55> line:504:5 invalid do_X509_CRL_sign 'int (int *, int *, const int *, int (*)())'
| |-ParmVarDecl 0x188e5b9d0f8 <col:22, col:32> col:32 invalid x 'int *'
| |-ParmVarDecl 0x188e5b9d178 <col:35, col:45> col:45 invalid pkey 'int *'
| |-ParmVarDecl 0x188e5b9d1f8 <col:51, col:65> col:65 invalid md 'const int *'
| `-ParmVarDecl 0x188e5b9d288 <line:505:22, <invalid sloc>> col:22 invalid STACK_OF 'int (*)()':'int (*)()'
|-VarDecl 0x188e5b9d410 <line:507:1, col:14> col:14 psk_key 'char *' extern
|-FunctionDecl 0x188e5b9d670 <line:510:1, col:64> col:16 next_protos_parse 'unsigned char *(size_t *, const char *)'
| |-ParmVarDecl 0x188e5b9d4a0 <col:34, col:42> col:42 outlen 'size_t *'
| `-ParmVarDecl 0x188e5b9d520 <col:50, col:62> col:62 in 'const char *'
|-FunctionDecl 0x188e5b9da58 <line:512:1, line:514:67> line:512:6 invalid print_cert_checks 'void (int *, int *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x188e5b9d750 <col:24, col:29> col:29 invalid bio 'int *'
| |-ParmVarDecl 0x188e5b9d7d0 <col:34, col:40> col:40 invalid x 'int *'
| |-ParmVarDecl 0x188e5b9d850 <line:513:24, col:36> col:36 checkhost 'const char *'
| |-ParmVarDecl 0x188e5b9d8d0 <line:514:24, col:36> col:36 checkemail 'const char *'
| `-ParmVarDecl 0x188e5b9d950 <col:48, col:60> col:60 checkip 'const char *'
|-FunctionDecl 0x188e5b9dbc8 <line:516:1, col:45> col:6 invalid store_setup_crl_download 'void (int *)'
| `-ParmVarDecl 0x188e5b9db38 <col:31, col:43> col:43 invalid st 'int *'
|-FunctionDecl 0x188e5b9dd20 <line:551:1, col:27> col:5 app_isdir 'int (const char *)'
| `-ParmVarDecl 0x188e5b9dc88 <col:15, col:26> col:27 'const char *'
|-FunctionDecl 0x188e5b9df30 <line:552:1, col:38> col:5 app_access 'int (const char *, int)'
| |-ParmVarDecl 0x188e5b9ddf8 <col:16, col:27> col:28 'const char *'
| `-ParmVarDecl 0x188e5b9de78 <col:30, col:34> col:34 flag 'int'
|-FunctionDecl 0x188e5b9e098 <line:553:1, col:22> col:5 fileno_stdin 'int (void)'
|-FunctionDecl 0x188e5b9e1f0 <line:554:1, col:23> col:5 fileno_stdout 'int (void)'
|-FunctionDecl 0x188e5b9e420 <line:555:1, col:31> col:5 raw_read_stdin 'int (void *, int)'
| |-ParmVarDecl 0x188e5b9e2c0 <col:20, col:25> col:26 'void *'
| `-ParmVarDecl 0x188e5b9e340 <col:28> col:31 'int'
|-FunctionDecl 0x188e5b9e660 <line:556:1, col:39> col:5 raw_write_stdout 'int (const void *, int)'
| |-ParmVarDecl 0x188e5b9e500 <col:22, col:33> col:34 'const void *'
| `-ParmVarDecl 0x188e5b9e580 <col:36> col:39 'int'
|-FunctionDecl 0x188e5b9e8d0 <line:560:1, col:45> col:8 app_tminterval 'double (int, int)'
| |-ParmVarDecl 0x188e5b9e740 <col:23, col:27> col:27 stop 'int'
| `-ParmVarDecl 0x188e5b9e7c0 <col:33, col:37> col:37 usertime 'int'
|-RecordDecl 0x188e5b9e998 <line:562:9, line:567:1> line:562:16 struct verify_options_st definition
| |-FieldDecl 0x188e5b9ea68 <line:563:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x188e5b9ead8 <line:564:5, col:9> col:9 quiet 'int'
| |-FieldDecl 0x188e5b9eb48 <line:565:5, col:9> col:9 error 'int'
| `-FieldDecl 0x188e5b9ebb8 <line:566:5, col:9> col:9 return_error 'int'
|-TypedefDecl 0x188e5b9ec68 <line:562:1, line:567:3> col:3 referenced VERIFY_CB_ARGS 'struct verify_options_st':'struct verify_options_st'
| `-ElaboratedType 0x188e5b9ec10 'struct verify_options_st' sugar
|   `-RecordType 0x188e5b9ea30 'struct verify_options_st'
|     `-Record 0x188e5b9e998 'verify_options_st'
|-VarDecl 0x188e5b94cd0 <line:569:1, col:23> col:23 verify_args 'VERIFY_CB_ARGS':'struct verify_options_st' extern
|-FunctionDecl 0x188e5b94e88 <.//openssl//file_jk/before\apps\x509.c:34:1, col:45> col:12 invalid callb 'int (int, int *)' static
| |-ParmVarDecl 0x188e5b94d68 <col:18, col:22> col:22 ok 'int'
| `-ParmVarDecl 0x188e5b94de8 <col:26, col:42> col:42 invalid ctx 'int *'
|-FunctionDecl 0x188e5b95380 <line:35:1, line:36:70> line:35:12 invalid sign 'int (int *, int *, int, int, const int *, int *, const char *)' static
| |-ParmVarDecl 0x188e5b94f50 <col:17, col:23> col:23 invalid x 'int *'
| |-ParmVarDecl 0x188e5b94fd0 <col:26, col:36> col:36 invalid pkey 'int *'
| |-ParmVarDecl 0x188e5b95050 <col:42, col:46> col:46 days 'int'
| |-ParmVarDecl 0x188e5b950d0 <col:52, col:56> col:56 clrext 'int'
| |-ParmVarDecl 0x188e5b95150 <line:36:17, col:31> col:31 invalid digest 'const int *'
| |-ParmVarDecl 0x188e5b951d0 <col:39, col:45> col:45 invalid conf 'int *'
| `-ParmVarDecl 0x188e5b95250 <col:51, col:63> col:63 section 'const char *'
|-FunctionDecl 0x188e5b95910 <line:37:1, line:41:76> line:37:12 invalid x509_certify 'int (int *, const char *, const int *, int *, int *, int *, int (*)())' static
| |-ParmVarDecl 0x188e5b95470 <col:25, col:37> col:37 invalid ctx 'int *'
| |-ParmVarDecl 0x188e5b954f0 <col:42, col:54> col:54 CAfile 'const char *'
| |-ParmVarDecl 0x188e5b95570 <col:62, col:76> col:76 invalid digest 'const int *'
| |-ParmVarDecl 0x188e5b955f0 <line:38:25, col:31> col:31 invalid x 'int *'
| |-ParmVarDecl 0x188e5b95670 <col:34, col:40> col:40 invalid xca 'int *'
| |-ParmVarDecl 0x188e5b956f0 <col:45, col:55> col:55 invalid pkey 'int *'
| `-ParmVarDecl 0x188e5b95780 <line:39:25, <invalid sloc>> col:25 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x188e5b95bf0 <line:42:1, col:64> col:12 invalid purpose_print 'int (int *, int *, int *)' static
| |-ParmVarDecl 0x188e5b95a00 <col:26, col:31> col:31 invalid bio 'int *'
| |-ParmVarDecl 0x188e5b95a80 <col:36, col:42> col:42 invalid cert 'int *'
| `-ParmVarDecl 0x188e5b95b00 <col:48, col:62> col:62 invalid pt 'int *'
|-EnumDecl 0x188e5b95ca8 <line:44:9, line:60:1> line:44:14 OPTION_choice
| |-EnumConstantDecl 0x188e5b95dd8 <line:45:5, col:16> col:5 referenced OPT_ERR 'int'
| | `-ConstantExpr 0x188e5b95dc0 <col:15, col:16> 'int'
| |   `-UnaryOperator 0x188e5b95da8 <col:15, col:16> 'int' prefix '-'
| |     `-IntegerLiteral 0x188e5b95d80 <col:16> 'int' 1
| |-EnumConstantDecl 0x188e5b95e70 <col:19, col:29> col:19 referenced OPT_EOF 'int'
| | `-ConstantExpr 0x188e5b95e58 <col:29> 'int'
| |   `-IntegerLiteral 0x188e5b95e30 <col:29> 'int' 0
| |-EnumConstantDecl 0x188e5b95ec8 <col:32> col:32 referenced OPT_HELP 'int'
| |-EnumConstantDecl 0x188e5b95f20 <line:46:5> col:5 referenced OPT_INFORM 'int'
| |-EnumConstantDecl 0x188e5b95f78 <col:17> col:17 referenced OPT_OUTFORM 'int'
| |-EnumConstantDecl 0x188e5b95fd0 <col:30> col:30 referenced OPT_KEYFORM 'int'
| |-EnumConstantDecl 0x188e5b96028 <col:43> col:43 referenced OPT_REQ 'int'
| |-EnumConstantDecl 0x188e5b96080 <col:52> col:52 referenced OPT_CAFORM 'int'
| |-EnumConstantDecl 0x188e5b960d8 <line:47:5> col:5 referenced OPT_CAKEYFORM 'int'
| |-EnumConstantDecl 0x188e5b96130 <col:20> col:20 referenced OPT_SIGOPT 'int'
| |-EnumConstantDecl 0x188e5b96188 <col:32> col:32 referenced OPT_DAYS 'int'
| |-EnumConstantDecl 0x188e5b961e0 <col:42> col:42 referenced OPT_PASSIN 'int'
| |-EnumConstantDecl 0x188e5b96238 <col:54> col:54 referenced OPT_EXTFILE 'int'
| |-EnumConstantDecl 0x188e5b96290 <line:48:5> col:5 referenced OPT_EXTENSIONS 'int'
| |-EnumConstantDecl 0x188e5b962e8 <col:21> col:21 referenced OPT_IN 'int'
| |-EnumConstantDecl 0x188e5b96340 <col:29> col:29 referenced OPT_OUT 'int'
| |-EnumConstantDecl 0x188e5b96398 <col:38> col:38 referenced OPT_SIGNKEY 'int'
| |-EnumConstantDecl 0x188e5b963f0 <col:51> col:51 referenced OPT_CA 'int'
| |-EnumConstantDecl 0x188e5b96448 <line:49:5> col:5 referenced OPT_CAKEY 'int'
| |-EnumConstantDecl 0x188e5b964a0 <col:16> col:16 referenced OPT_CASERIAL 'int'
| |-EnumConstantDecl 0x188e5b964f8 <col:30> col:30 referenced OPT_SET_SERIAL 'int'
| |-EnumConstantDecl 0x188e5b96550 <col:46> col:46 referenced OPT_FORCE_PUBKEY 'int'
| |-EnumConstantDecl 0x188e5b965a8 <line:50:5> col:5 referenced OPT_ADDTRUST 'int'
| |-EnumConstantDecl 0x188e5b96600 <col:19> col:19 referenced OPT_ADDREJECT 'int'
| |-EnumConstantDecl 0x188e5b96658 <col:34> col:34 referenced OPT_SETALIAS 'int'
| |-EnumConstantDecl 0x188e5b966b0 <col:48> col:48 referenced OPT_CERTOPT 'int'
| |-EnumConstantDecl 0x188e5b96708 <col:61> col:61 referenced OPT_NAMEOPT 'int'
| |-EnumConstantDecl 0x188e5b96760 <line:51:5> col:5 referenced OPT_C 'int'
| |-EnumConstantDecl 0x188e5b967b8 <col:12> col:12 referenced OPT_EMAIL 'int'
| |-EnumConstantDecl 0x188e5b96810 <col:23> col:23 referenced OPT_OCSP_URI 'int'
| |-EnumConstantDecl 0x188e5b96868 <col:37> col:37 referenced OPT_SERIAL 'int'
| |-EnumConstantDecl 0x188e5b968c0 <col:49> col:49 referenced OPT_NEXT_SERIAL 'int'
| |-EnumConstantDecl 0x188e5b96918 <line:52:5> col:5 referenced OPT_MODULUS 'int'
| |-EnumConstantDecl 0x188e5b96970 <col:18> col:18 referenced OPT_PUBKEY 'int'
| |-EnumConstantDecl 0x188e5b969c8 <col:30> col:30 referenced OPT_X509TOREQ 'int'
| |-EnumConstantDecl 0x188e5b96a20 <col:45> col:45 referenced OPT_TEXT 'int'
| |-EnumConstantDecl 0x188e5b96a78 <col:55> col:55 referenced OPT_HASH 'int'
| |-EnumConstantDecl 0x188e5b96ad0 <line:53:5> col:5 referenced OPT_ISSUER_HASH 'int'
| |-EnumConstantDecl 0x188e5b96b28 <col:22> col:22 referenced OPT_SUBJECT 'int'
| |-EnumConstantDecl 0x188e5b96b80 <col:35> col:35 referenced OPT_ISSUER 'int'
| |-EnumConstantDecl 0x188e5b96bd8 <col:47> col:47 referenced OPT_FINGERPRINT 'int'
| |-EnumConstantDecl 0x188e5baad30 <col:64> col:64 referenced OPT_DATES 'int'
| |-EnumConstantDecl 0x188e5baad88 <line:54:5> col:5 referenced OPT_PURPOSE 'int'
| |-EnumConstantDecl 0x188e5baade0 <col:18> col:18 referenced OPT_STARTDATE 'int'
| |-EnumConstantDecl 0x188e5baae38 <col:33> col:33 referenced OPT_ENDDATE 'int'
| |-EnumConstantDecl 0x188e5baae90 <col:46> col:46 referenced OPT_CHECKEND 'int'
| |-EnumConstantDecl 0x188e5baaee8 <col:60> col:60 referenced OPT_CHECKHOST 'int'
| |-EnumConstantDecl 0x188e5baaf40 <line:55:5> col:5 referenced OPT_CHECKEMAIL 'int'
| |-EnumConstantDecl 0x188e5baaf98 <col:21> col:21 referenced OPT_CHECKIP 'int'
| |-EnumConstantDecl 0x188e5baaff0 <col:34> col:34 referenced OPT_NOOUT 'int'
| |-EnumConstantDecl 0x188e5bab048 <col:45> col:45 referenced OPT_TRUSTOUT 'int'
| |-EnumConstantDecl 0x188e5bab0a0 <col:59> col:59 referenced OPT_CLRTRUST 'int'
| |-EnumConstantDecl 0x188e5bab0f8 <line:56:5> col:5 referenced OPT_CLRREJECT 'int'
| |-EnumConstantDecl 0x188e5bab150 <col:20> col:20 referenced OPT_ALIAS 'int'
| |-EnumConstantDecl 0x188e5bab1a8 <col:31> col:31 referenced OPT_CACREATESERIAL 'int'
| |-EnumConstantDecl 0x188e5bab200 <col:51> col:51 referenced OPT_CLREXT 'int'
| |-EnumConstantDecl 0x188e5bab258 <col:63> col:63 referenced OPT_OCSPID 'int'
| |-EnumConstantDecl 0x188e5bab2b0 <line:57:5> col:5 referenced OPT_SUBJECT_HASH_OLD 'int'
| |-EnumConstantDecl 0x188e5bab308 <line:58:5> col:5 referenced OPT_ISSUER_HASH_OLD 'int'
| |-EnumConstantDecl 0x188e5bab360 <line:59:5> col:5 referenced OPT_BADSIG 'int'
| |-EnumConstantDecl 0x188e5bab3b8 <col:17> col:17 referenced OPT_MD 'int'
| |-EnumConstantDecl 0x188e5bab410 <col:25> col:25 referenced OPT_ENGINE 'int'
| `-EnumConstantDecl 0x188e5bab468 <col:37> col:37 referenced OPT_NOCERT 'int'
|-TypedefDecl 0x188e5bab518 <line:44:1, line:60:3> col:3 referenced OPTION_CHOICE 'enum OPTION_choice':'enum OPTION_choice'
| `-ElaboratedType 0x188e5bab4c0 'enum OPTION_choice' sugar
|   `-EnumType 0x188e5b95d60 'enum OPTION_choice'
|     `-Enum 0x188e5b95ca8 'OPTION_choice'
|-VarDecl 0x188e5bab608 <line:62:1, line:144:1> line:62:9 used x509_options 'OPTIONS [64]' cinit
| `-InitListExpr 0x188e5ba04b8 <col:26, line:144:1> 'OPTIONS [64]'
|   |-InitListExpr 0x188e5ba0508 <line:63:5, col:51> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba0580 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba0568 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bab6a8 <col:6> 'char [5]' lvalue "help"
|   | |-DeclRefExpr 0x188e5bab6c8 <col:14> 'int' EnumConstant 0x188e5b95ec8 'OPT_HELP' 'int'
|   | |-CharacterLiteral 0x188e5bab6e8 <col:24> 'int' 45
|   | `-ImplicitCastExpr 0x188e5ba05b0 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba0598 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bab738 <col:29> 'char [21]' lvalue "Display this summary"
|   |-InitListExpr 0x188e5ba05e0 <line:64:5, line:65:59> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba0658 <line:64:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba0640 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bab808 <col:6> 'char [7]' lvalue "inform"
|   | |-DeclRefExpr 0x188e5bab828 <col:16> 'int' EnumConstant 0x188e5b95f20 'OPT_INFORM' 'int'
|   | |-CharacterLiteral 0x188e5bab848 <col:28> 'int' 102
|   | `-ImplicitCastExpr 0x188e5ba0688 <line:65:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba0670 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bab898 <col:6> 'char [52]' lvalue "Input format - default PEM (one of DER, NET or PEM)"
|   |-InitListExpr 0x188e5ba06c0 <line:66:5, col:53> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba0738 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba0720 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bab988 <col:6> 'char [3]' lvalue "in"
|   | |-DeclRefExpr 0x188e5bab9a8 <col:12> 'int' EnumConstant 0x188e5b962e8 'OPT_IN' 'int'
|   | |-CharacterLiteral 0x188e5bab9c8 <col:20> 'int' 60
|   | `-ImplicitCastExpr 0x188e5ba0768 <col:25> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba0750 <col:25> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5baba18 <col:25> 'char [27]' lvalue "Input file - default stdin"
|   |-InitListExpr 0x188e5ba07b0 <line:67:5, line:68:60> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba0828 <line:67:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba0810 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5babae8 <col:6> 'char [8]' lvalue "outform"
|   | |-DeclRefExpr 0x188e5babb08 <col:17> 'int' EnumConstant 0x188e5b95f78 'OPT_OUTFORM' 'int'
|   | |-CharacterLiteral 0x188e5babb28 <col:30> 'int' 102
|   | `-ImplicitCastExpr 0x188e5ba0858 <line:68:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba0840 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5babb78 <col:6> 'char [53]' lvalue "Output format - default PEM (one of DER, NET or PEM)"
|   |-InitListExpr 0x188e5ba0880 <line:69:5, col:57> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba08f8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba08e0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5babc68 <col:6> 'char [4]' lvalue "out"
|   | |-DeclRefExpr 0x188e5babc88 <col:13> 'int' EnumConstant 0x188e5b96340 'OPT_OUT' 'int'
|   | |-CharacterLiteral 0x188e5babca8 <col:22> 'int' 62
|   | `-ImplicitCastExpr 0x188e5ba0928 <col:27> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba0910 <col:27> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5babcf8 <col:27> 'char [29]' lvalue "Output file - default stdout"
|   |-InitListExpr 0x188e5ba0990 <line:70:5, col:69> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba0a08 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba09f0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5babd90 <col:6> 'char [8]' lvalue "keyform"
|   | |-DeclRefExpr 0x188e5babdb0 <col:17> 'int' EnumConstant 0x188e5b95fd0 'OPT_KEYFORM' 'int'
|   | |-CharacterLiteral 0x188e5babdd0 <col:30> 'int' 70
|   | `-ImplicitCastExpr 0x188e5ba0a38 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba0a20 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5babe28 <col:35> 'char [33]' lvalue "Private key format - default PEM"
|   |-InitListExpr 0x188e5ba0a60 <line:71:5, col:74> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba0ad8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba0ac0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5babec0 <col:6> 'char [7]' lvalue "passin"
|   | |-DeclRefExpr 0x188e5babee0 <col:16> 'int' EnumConstant 0x188e5b961e0 'OPT_PASSIN' 'int'
|   | |-CharacterLiteral 0x188e5babf00 <col:28> 'int' 115
|   | `-ImplicitCastExpr 0x188e5ba0b08 <col:33> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba0af0 <col:33> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5babf58 <col:33> 'char [40]' lvalue "Private key password/pass-phrase source"
|   |-InitListExpr 0x188e5ba0b30 <line:72:5, col:60> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba0ba8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba0b90 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5babff8 <col:6> 'char [7]' lvalue "serial"
|   | |-DeclRefExpr 0x188e5bac018 <col:16> 'int' EnumConstant 0x188e5b96868 'OPT_SERIAL' 'int'
|   | |-CharacterLiteral 0x188e5bac038 <col:28> 'int' 45
|   | `-ImplicitCastExpr 0x188e5ba0bd8 <col:33> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba0bc0 <col:33> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bac088 <col:33> 'char [26]' lvalue "Print serial number value"
|   |-InitListExpr 0x188e5ba0c00 <line:73:5, col:63> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba0c78 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba0c60 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bac158 <col:6> 'char [13]' lvalue "subject_hash"
|   | |-DeclRefExpr 0x188e5bac180 <col:22> 'int' EnumConstant 0x188e5b96a78 'OPT_HASH' 'int'
|   | |-CharacterLiteral 0x188e5bac1a0 <col:32> 'int' 45
|   | `-ImplicitCastExpr 0x188e5ba0ca8 <col:37> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba0c90 <col:37> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bac1f8 <col:37> 'char [25]' lvalue "Print subject hash value"
|   |-InitListExpr 0x188e5ba2d80 <line:74:5, col:68> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba2df8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba2de0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bac2c8 <col:6> 'char [12]' lvalue "issuer_hash"
|   | |-DeclRefExpr 0x188e5bac2f0 <col:21> 'int' EnumConstant 0x188e5b96ad0 'OPT_ISSUER_HASH' 'int'
|   | |-CharacterLiteral 0x188e5bac310 <col:38> 'int' 45
|   | `-ImplicitCastExpr 0x188e5ba2e28 <col:43> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba2e10 <col:43> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bac368 <col:43> 'char [24]' lvalue "Print issuer hash value"
|   |-InitListExpr 0x188e5ba2e50 <line:75:5, col:56> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba2ec8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba2eb0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bac3f8 <col:6> 'char [5]' lvalue "hash"
|   | |-DeclRefExpr 0x188e5bac418 <col:14> 'int' EnumConstant 0x188e5b96a78 'OPT_HASH' 'int'
|   | |-CharacterLiteral 0x188e5bac438 <col:24> 'int' 45
|   | `-ImplicitCastExpr 0x188e5ba2ef8 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba2ee0 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bac450 <col:29> 'char [26]' lvalue "Synonym for -subject_hash"
|   |-InitListExpr 0x188e5ba2f20 <line:76:5, col:53> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba2f98 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba2f80 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bac4e8 <col:6> 'char [8]' lvalue "subject"
|   | |-DeclRefExpr 0x188e5bac508 <col:17> 'int' EnumConstant 0x188e5b96b28 'OPT_SUBJECT' 'int'
|   | |-CharacterLiteral 0x188e5bac528 <col:30> 'int' 45
|   | `-ImplicitCastExpr 0x188e5ba2fc8 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba2fb0 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bac578 <col:35> 'char [17]' lvalue "Print subject DN"
|   |-InitListExpr 0x188e5ba2ff0 <line:77:5, col:50> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba3068 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba3050 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bac600 <col:6> 'char [7]' lvalue "issuer"
|   | |-DeclRefExpr 0x188e5bac620 <col:16> 'int' EnumConstant 0x188e5b96b80 'OPT_ISSUER' 'int'
|   | |-CharacterLiteral 0x188e5bac640 <col:28> 'int' 45
|   | `-ImplicitCastExpr 0x188e5ba3098 <col:33> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba3080 <col:33> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bac698 <col:33> 'char [16]' lvalue "Print issuer DN"
|   |-InitListExpr 0x188e5ba30c0 <line:78:5, col:56> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba3138 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba3120 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bac758 <col:6> 'char [6]' lvalue "email"
|   | |-DeclRefExpr 0x188e5bac778 <col:15> 'int' EnumConstant 0x188e5b967b8 'OPT_EMAIL' 'int'
|   | |-CharacterLiteral 0x188e5bac798 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x188e5ba3168 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba3150 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bac7b0 <col:31> 'char [24]' lvalue "Print email address(es)"
|   |-InitListExpr 0x188e5ba3190 <line:79:5, col:60> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba3208 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba31f0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bac878 <col:6> 'char [10]' lvalue "startdate"
|   | |-DeclRefExpr 0x188e5bac8a0 <col:19> 'int' EnumConstant 0x188e5baade0 'OPT_STARTDATE' 'int'
|   | |-CharacterLiteral 0x188e5bac8c0 <col:34> 'int' 45
|   | `-ImplicitCastExpr 0x188e5ba3238 <col:39> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba3220 <col:39> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bac918 <col:39> 'char [20]' lvalue "Set notBefore field"
|   |-InitListExpr 0x188e5ba3260 <line:80:5, col:55> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba32d8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba32c0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bac9a8 <col:6> 'char [8]' lvalue "enddate"
|   | |-DeclRefExpr 0x188e5bac9c8 <col:17> 'int' EnumConstant 0x188e5baae38 'OPT_ENDDATE' 'int'
|   | |-CharacterLiteral 0x188e5bac9e8 <col:30> 'int' 45
|   | `-ImplicitCastExpr 0x188e5ba3308 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba32f0 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5baca38 <col:35> 'char [19]' lvalue "Set notAfter field"
|   |-InitListExpr 0x188e5ba3330 <line:81:5, col:67> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba33a8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba3390 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bacac8 <col:6> 'char [8]' lvalue "purpose"
|   | |-DeclRefExpr 0x188e5bacae8 <col:17> 'int' EnumConstant 0x188e5baad88 'OPT_PURPOSE' 'int'
|   | |-CharacterLiteral 0x188e5bacb08 <col:30> 'int' 45
|   | `-ImplicitCastExpr 0x188e5ba33d8 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba33c0 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bacb58 <col:35> 'char [31]' lvalue "Print out certificate purposes"
|   |-InitListExpr 0x188e5ba3500 <line:82:5, col:60> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba3578 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba3560 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bacbf0 <col:6> 'char [6]' lvalue "dates"
|   | |-DeclRefExpr 0x188e5bacc10 <col:15> 'int' EnumConstant 0x188e5baad30 'OPT_DATES' 'int'
|   | |-CharacterLiteral 0x188e5bacc30 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x188e5ba35a8 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba3590 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bacc88 <col:31> 'char [28]' lvalue "Both Before and After dates"
|   |-InitListExpr 0x188e5ba35d0 <line:83:5, col:62> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba3648 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba3630 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bacd40 <col:6> 'char [8]' lvalue "modulus"
|   | |-DeclRefExpr 0x188e5bacd60 <col:17> 'int' EnumConstant 0x188e5b96918 'OPT_MODULUS' 'int'
|   | |-CharacterLiteral 0x188e5bacd80 <col:30> 'int' 45
|   | `-ImplicitCastExpr 0x188e5ba3678 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba3660 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bacd98 <col:35> 'char [26]' lvalue "Print the RSA key modulus"
|   |-InitListExpr 0x188e5ba36a0 <line:84:5, col:56> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba3718 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba3700 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bace30 <col:6> 'char [7]' lvalue "pubkey"
|   | |-DeclRefExpr 0x188e5bace50 <col:16> 'int' EnumConstant 0x188e5b96970 'OPT_PUBKEY' 'int'
|   | |-CharacterLiteral 0x188e5bace70 <col:28> 'int' 45
|   | `-ImplicitCastExpr 0x188e5ba3748 <col:33> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba3730 <col:33> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bacec8 <col:33> 'char [22]' lvalue "Output the public key"
|   |-InitListExpr 0x188e5ba3770 <line:85:5, line:86:41> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba37e8 <line:85:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba37d0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bacf58 <col:6> 'char [12]' lvalue "fingerprint"
|   | |-DeclRefExpr 0x188e5bacf80 <col:21> 'int' EnumConstant 0x188e5b96bd8 'OPT_FINGERPRINT' 'int'
|   | |-CharacterLiteral 0x188e5bacfa0 <col:38> 'int' 45
|   | `-ImplicitCastExpr 0x188e5ba3818 <line:86:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba3800 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bacff8 <col:6> 'char [34]' lvalue "Print the certificate fingerprint"
|   |-InitListExpr 0x188e5ba3840 <line:87:5, col:57> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba38b8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba38a0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bad098 <col:6> 'char [6]' lvalue "alias"
|   | |-DeclRefExpr 0x188e5bad0b8 <col:15> 'int' EnumConstant 0x188e5bab150 'OPT_ALIAS' 'int'
|   | |-CharacterLiteral 0x188e5bad0d8 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x188e5ba38e8 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba38d0 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bad0f0 <col:31> 'char [25]' lvalue "Output certificate alias"
|   |-InitListExpr 0x188e5ba3910 <line:88:5, col:55> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba3988 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba3970 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bad180 <col:6> 'char [6]' lvalue "noout"
|   | |-DeclRefExpr 0x188e5bad1a0 <col:15> 'int' EnumConstant 0x188e5baaff0 'OPT_NOOUT' 'int'
|   | |-CharacterLiteral 0x188e5bad1c0 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x188e5ba39b8 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba39a0 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bad218 <col:31> 'char [23]' lvalue "No output, just status"
|   |-InitListExpr 0x188e5ba39e0 <line:89:5, col:56> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba3a58 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba3a40 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bad2a8 <col:6> 'char [7]' lvalue "nocert"
|   | |-DeclRefExpr 0x188e5bad2c8 <col:16> 'int' EnumConstant 0x188e5bab468 'OPT_NOCERT' 'int'
|   | |-CharacterLiteral 0x188e5bad2e8 <col:28> 'int' 45
|   | `-ImplicitCastExpr 0x188e5ba3a88 <col:33> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba3a70 <col:33> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bad300 <col:33> 'char [22]' lvalue "No certificate output"
|   |-InitListExpr 0x188e5ba3ab0 <line:90:5, line:91:66> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba3b28 <line:90:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba3b10 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bad390 <col:6> 'char [7]' lvalue "ocspid"
|   | |-DeclRefExpr 0x188e5bad3b0 <col:16> 'int' EnumConstant 0x188e5bab258 'OPT_OCSPID' 'int'
|   | |-CharacterLiteral 0x188e5bad3d0 <col:28> 'int' 45
|   | `-ImplicitCastExpr 0x188e5ba3b58 <line:91:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba3b40 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bad428 <col:6> 'char [59]' lvalue "Print OCSP hash values for the subject name and public key"
|   |-InitListExpr 0x188e5ba3b80 <line:92:5, col:66> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba3bf8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba3be0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bad518 <col:6> 'char [9]' lvalue "ocsp_uri"
|   | |-DeclRefExpr 0x188e5bad538 <col:18> 'int' EnumConstant 0x188e5b96810 'OPT_OCSP_URI' 'int'
|   | |-CharacterLiteral 0x188e5bad558 <col:32> 'int' 45
|   | `-ImplicitCastExpr 0x188e5ba3c28 <col:37> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba3c10 <col:37> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bad570 <col:37> 'char [28]' lvalue "Print OCSP Responder URL(s)"
|   |-InitListExpr 0x188e5ba3c50 <line:93:5, col:67> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba3cc8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba3cb0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bad608 <col:6> 'char [9]' lvalue "trustout"
|   | |-DeclRefExpr 0x188e5bad628 <col:18> 'int' EnumConstant 0x188e5bab048 'OPT_TRUSTOUT' 'int'
|   | |-CharacterLiteral 0x188e5bad648 <col:32> 'int' 45
|   | `-ImplicitCastExpr 0x188e5ba3cf8 <col:37> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba3ce0 <col:37> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bad660 <col:37> 'char [29]' lvalue "Output a trusted certificate"
|   |-InitListExpr 0x188e5ba3d20 <line:94:5, col:65> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba3d98 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba3d80 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bad6f8 <col:6> 'char [9]' lvalue "clrtrust"
|   | |-DeclRefExpr 0x188e5bad718 <col:18> 'int' EnumConstant 0x188e5bab0a0 'OPT_CLRTRUST' 'int'
|   | |-CharacterLiteral 0x188e5bad738 <col:32> 'int' 45
|   | `-ImplicitCastExpr 0x188e5ba3dc8 <col:37> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba3db0 <col:37> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bad750 <col:37> 'char [27]' lvalue "Clear all trusted purposes"
|   |-InitListExpr 0x188e5ba3df0 <line:95:5, col:67> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba3e68 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba3e50 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bad7e8 <col:6> 'char [7]' lvalue "clrext"
|   | |-DeclRefExpr 0x188e5bad808 <col:16> 'int' EnumConstant 0x188e5bab200 'OPT_CLREXT' 'int'
|   | |-CharacterLiteral 0x188e5bad828 <col:28> 'int' 45
|   | `-ImplicitCastExpr 0x188e5ba3e98 <col:33> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba3e80 <col:33> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bad840 <col:33> 'char [33]' lvalue "Clear all certificate extensions"
|   |-InitListExpr 0x188e5ba3ec0 <line:96:5, col:76> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba3f38 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba3f20 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bad8d8 <col:6> 'char [9]' lvalue "addtrust"
|   | |-DeclRefExpr 0x188e5bad8f8 <col:18> 'int' EnumConstant 0x188e5b965a8 'OPT_ADDTRUST' 'int'
|   | |-CharacterLiteral 0x188e5bad918 <col:32> 'int' 115
|   | `-ImplicitCastExpr 0x188e5ba3f68 <col:37> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba3f50 <col:37> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bad968 <col:37> 'char [38]' lvalue "Trust certificate for a given purpose"
|   |-InitListExpr 0x188e5ba3f90 <line:97:5, line:98:46> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba4008 <line:97:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba3ff0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bada08 <col:6> 'char [10]' lvalue "addreject"
|   | |-DeclRefExpr 0x188e5bada30 <col:19> 'int' EnumConstant 0x188e5b96600 'OPT_ADDREJECT' 'int'
|   | |-CharacterLiteral 0x188e5bada50 <col:34> 'int' 115
|   | `-ImplicitCastExpr 0x188e5ba4038 <line:98:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba4020 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5badaa8 <col:6> 'char [39]' lvalue "Reject certificate for a given purpose"
|   |-InitListExpr 0x188e5ba4060 <line:99:5, col:60> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba40d8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba40c0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5badb48 <col:6> 'char [9]' lvalue "setalias"
|   | |-DeclRefExpr 0x188e5badb68 <col:18> 'int' EnumConstant 0x188e5b96658 'OPT_SETALIAS' 'int'
|   | |-CharacterLiteral 0x188e5badb88 <col:32> 'int' 115
|   | `-ImplicitCastExpr 0x188e5ba4108 <col:37> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba40f0 <col:37> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5badba0 <col:37> 'char [22]' lvalue "Set certificate alias"
|   |-InitListExpr 0x188e5ba4130 <line:100:5, line:101:66> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba41a8 <line:100:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba4190 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5badc30 <col:6> 'char [5]' lvalue "days"
|   | |-DeclRefExpr 0x188e5badc50 <col:14> 'int' EnumConstant 0x188e5b96188 'OPT_DAYS' 'int'
|   | |-CharacterLiteral 0x188e5badc70 <col:24> 'int' 110
|   | `-ImplicitCastExpr 0x188e5ba41d8 <line:101:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba41c0 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5badc88 <col:6> 'char [59]' lvalue "How long till expiry of a signed certificate - def 30 days"
|   |-InitListExpr 0x188e5ba4400 <line:102:5, line:103:62> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba4478 <line:102:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba4460 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5badd40 <col:6> 'char [9]' lvalue "checkend"
|   | |-DeclRefExpr 0x188e5badd60 <col:18> 'int' EnumConstant 0x188e5baae90 'OPT_CHECKEND' 'int'
|   | |-CharacterLiteral 0x188e5badd80 <col:32> 'int' 77
|   | `-ImplicitCastExpr 0x188e5ba44a8 <line:103:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba4490 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5baddd8 <col:6> 'char [55]' lvalue "Check whether the cert expires in the next arg seconds"
|   |-InitListExpr 0x188e5ba44d0 <line:104:5, col:50> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba4530 <col:6> 'const char *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x188e5bade88 <col:6> 'const char []' lvalue Var 0x188e5b8a2f8 'OPT_MORE_STR' 'const char []'
|   | |-IntegerLiteral 0x188e5badea8 <col:20> 'int' 1
|   | |-IntegerLiteral 0x188e5baded0 <col:23> 'int' 1
|   | `-ImplicitCastExpr 0x188e5ba4560 <col:26> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba4548 <col:26> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5badef8 <col:26> 'char [23]' lvalue "Exit 1 if so, 0 if not"
|   |-InitListExpr 0x188e5ba4588 <line:105:5, col:60> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba4600 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba45e8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5badf88 <col:6> 'char [8]' lvalue "signkey"
|   | |-DeclRefExpr 0x188e5badfa8 <col:17> 'int' EnumConstant 0x188e5b96398 'OPT_SIGNKEY' 'int'
|   | |-CharacterLiteral 0x188e5badfc8 <col:30> 'int' 60
|   | `-ImplicitCastExpr 0x188e5ba4630 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba4618 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5badfe0 <col:35> 'char [24]' lvalue "Self sign cert with arg"
|   |-InitListExpr 0x188e5ba4658 <line:106:5, line:107:45> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba46d0 <line:106:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba46b8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bae070 <col:6> 'char [10]' lvalue "x509toreq"
|   | |-DeclRefExpr 0x188e5bae098 <col:19> 'int' EnumConstant 0x188e5b969c8 'OPT_X509TOREQ' 'int'
|   | |-CharacterLiteral 0x188e5bae0b8 <col:34> 'int' 45
|   | `-ImplicitCastExpr 0x188e5ba4700 <line:107:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba46e8 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bae0d0 <col:6> 'char [38]' lvalue "Output a certification request object"
|   |-InitListExpr 0x188e5ba4728 <line:108:5, col:76> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba47a0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba4788 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bae170 <col:6> 'char [4]' lvalue "req"
|   | |-DeclRefExpr 0x188e5bae190 <col:13> 'int' EnumConstant 0x188e5b96028 'OPT_REQ' 'int'
|   | |-CharacterLiteral 0x188e5bae1b0 <col:22> 'int' 45
|   | `-ImplicitCastExpr 0x188e5ba47d0 <col:27> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba47b8 <col:27> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bae208 <col:27> 'char [48]' lvalue "Input is a certificate request, sign and output"
|   |-InitListExpr 0x188e5ba47f8 <line:109:5, col:69> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba4870 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba4858 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bae2b0 <col:6> 'char [3]' lvalue "CA"
|   | |-DeclRefExpr 0x188e5bae2d0 <col:12> 'int' EnumConstant 0x188e5b963f0 'OPT_CA' 'int'
|   | |-CharacterLiteral 0x188e5bae2f0 <col:20> 'int' 60
|   | `-ImplicitCastExpr 0x188e5ba48a0 <col:25> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba4888 <col:25> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bae348 <col:25> 'char [43]' lvalue "Set the CA certificate, must be PEM format"
|   |-InitListExpr 0x188e5ba48c8 <line:110:5, line:111:56> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba4940 <line:110:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba4928 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bae3f0 <col:6> 'char [6]' lvalue "CAkey"
|   | |-DeclRefExpr 0x188e5bae410 <col:15> 'int' EnumConstant 0x188e5b96448 'OPT_CAKEY' 'int'
|   | |-CharacterLiteral 0x188e5bae430 <col:26> 'int' 115
|   | `-ImplicitCastExpr 0x188e5ba4970 <line:111:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba4958 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bae488 <col:6> 'char [49]' lvalue "The CA key, must be PEM format; if not in CAfile"
|   |-InitListExpr 0x188e5ba4998 <line:112:5, line:113:54> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba4a10 <line:112:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba49f8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bae568 <col:6> 'char [15]' lvalue "CAcreateserial"
|   | |-DeclRefExpr 0x188e5bae590 <col:24> 'int' EnumConstant 0x188e5bab1a8 'OPT_CACREATESERIAL' 'int'
|   | |-CharacterLiteral 0x188e5bae5b0 <col:44> 'int' 45
|   | `-ImplicitCastExpr 0x188e5ba4a40 <line:113:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba4a28 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bae608 <col:6> 'char [47]' lvalue "Create serial number file if it does not exist"
|   |-InitListExpr 0x188e5ba4a68 <line:114:5, col:50> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba4ae0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba4ac8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bae6b0 <col:6> 'char [9]' lvalue "CAserial"
|   | |-DeclRefExpr 0x188e5bae6d0 <col:18> 'int' EnumConstant 0x188e5b964a0 'OPT_CASERIAL' 'int'
|   | |-CharacterLiteral 0x188e5bae6f0 <col:32> 'int' 115
|   | `-ImplicitCastExpr 0x188e5ba4b10 <col:37> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba4af8 <col:37> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bae708 <col:37> 'char [12]' lvalue "Serial file"
|   |-InitListExpr 0x188e5ba4b38 <line:115:5, col:63> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba4bb0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba4b98 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bae7c8 <col:6> 'char [11]' lvalue "set_serial"
|   | |-DeclRefExpr 0x188e5bae7f0 <col:20> 'int' EnumConstant 0x188e5b964f8 'OPT_SET_SERIAL' 'int'
|   | |-CharacterLiteral 0x188e5bae810 <col:36> 'int' 115
|   | `-ImplicitCastExpr 0x188e5ba4be0 <col:41> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba4bc8 <col:41> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bae828 <col:41> 'char [21]' lvalue "Serial number to use"
|   |-InitListExpr 0x188e5ba4c08 <line:116:5, col:65> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5ba4c80 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5ba4c68 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5bae8b8 <col:6> 'char [5]' lvalue "text"
|   | |-DeclRefExpr 0x188e5bae8d8 <col:14> 'int' EnumConstant 0x188e5b96a20 'OPT_TEXT' 'int'
|   | |-CharacterLiteral 0x188e5bae8f8 <col:24> 'int' 45
|   | `-ImplicitCastExpr 0x188e5ba4cb0 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5ba4c98 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5bae948 <col:29> 'char [35]' lvalue "Print the certificate in text form"
|   |-InitListExpr 0x188e5baed50 <line:117:5, col:47> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5baedc8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5baedb0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5baea28 <col:6> 'char [2]' lvalue "C"
|   | |-DeclRefExpr 0x188e5baea48 <col:11> 'int' EnumConstant 0x188e5b96760 'OPT_C' 'int'
|   | |-CharacterLiteral 0x188e5baea68 <col:18> 'int' 45
|   | `-ImplicitCastExpr 0x188e5baedf8 <col:23> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5baede0 <col:23> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5baea80 <col:23> 'char [23]' lvalue "Print out C code forms"
|   |-InitListExpr 0x188e5baee20 <line:118:5, col:71> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5baee98 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5baee80 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5baeb10 <col:6> 'char [8]' lvalue "extfile"
|   | |-DeclRefExpr 0x188e5baeb30 <col:17> 'int' EnumConstant 0x188e5b96238 'OPT_EXTFILE' 'int'
|   | |-CharacterLiteral 0x188e5baeb50 <col:30> 'int' 60
|   | `-ImplicitCastExpr 0x188e5baeec8 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5baeeb0 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5baeb68 <col:35> 'char [35]' lvalue "File with X509V3 extensions to add"
|   |-InitListExpr 0x188e5baeef0 <line:119:5, col:74> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5baef68 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5baef50 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5baec08 <col:6> 'char [11]' lvalue "extensions"
|   | |-DeclRefExpr 0x188e5baec30 <col:20> 'int' EnumConstant 0x188e5b96290 'OPT_EXTENSIONS' 'int'
|   | |-CharacterLiteral 0x188e5baec50 <col:36> 'int' 115
|   | `-ImplicitCastExpr 0x188e5baef98 <col:41> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5baef80 <col:41> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5baeca8 <col:41> 'char [32]' lvalue "Section from config file to use"
|   |-InitListExpr 0x188e5baefc0 <line:120:5, col:69> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5baf038 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5baf020 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5b9ecd0 <col:6> 'char [8]' lvalue "nameopt"
|   | |-DeclRefExpr 0x188e5b9ecf0 <col:17> 'int' EnumConstant 0x188e5b96708 'OPT_NAMEOPT' 'int'
|   | |-CharacterLiteral 0x188e5b9ed10 <col:30> 'int' 115
|   | `-ImplicitCastExpr 0x188e5baf068 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5baf050 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5b9ed28 <col:35> 'char [33]' lvalue "Various certificate name options"
|   |-InitListExpr 0x188e5baf090 <line:121:5, col:69> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5baf108 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5baf0f0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5b9edc0 <col:6> 'char [8]' lvalue "certopt"
|   | |-DeclRefExpr 0x188e5b9ede0 <col:17> 'int' EnumConstant 0x188e5b966b0 'OPT_CERTOPT' 'int'
|   | |-CharacterLiteral 0x188e5b9ee00 <col:30> 'int' 115
|   | `-ImplicitCastExpr 0x188e5baf138 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5baf120 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5b9ee18 <col:35> 'char [33]' lvalue "Various certificate text options"
|   |-InitListExpr 0x188e5baf160 <line:122:5, col:71> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5baf1d8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5baf1c0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5b9eeb0 <col:6> 'char [10]' lvalue "checkhost"
|   | |-DeclRefExpr 0x188e5b9eed8 <col:19> 'int' EnumConstant 0x188e5baaee8 'OPT_CHECKHOST' 'int'
|   | |-CharacterLiteral 0x188e5b9eef8 <col:34> 'int' 115
|   | `-ImplicitCastExpr 0x188e5baf208 <col:39> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5baf1f0 <col:39> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5b9ef10 <col:39> 'char [31]' lvalue "Check certificate matches host"
|   |-InitListExpr 0x188e5baf230 <line:123:5, col:74> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5baf2a8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5baf290 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5b9efa8 <col:6> 'char [11]' lvalue "checkemail"
|   | |-DeclRefExpr 0x188e5b9efd0 <col:20> 'int' EnumConstant 0x188e5baaf40 'OPT_CHECKEMAIL' 'int'
|   | |-CharacterLiteral 0x188e5b9eff0 <col:36> 'int' 115
|   | `-ImplicitCastExpr 0x188e5baf2d8 <col:41> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5baf2c0 <col:41> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5b9f008 <col:41> 'char [32]' lvalue "Check certificate matches email"
|   |-InitListExpr 0x188e5baf300 <line:124:5, col:69> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5baf378 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5baf360 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5b9f0a0 <col:6> 'char [8]' lvalue "checkip"
|   | |-DeclRefExpr 0x188e5b9f0c0 <col:17> 'int' EnumConstant 0x188e5baaf98 'OPT_CHECKIP' 'int'
|   | |-CharacterLiteral 0x188e5b9f0e0 <col:30> 'int' 115
|   | `-ImplicitCastExpr 0x188e5baf3a8 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5baf390 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5b9f0f8 <col:35> 'char [33]' lvalue "Check certificate matches ipaddr"
|   |-InitListExpr 0x188e5baf3d0 <line:125:5, col:58> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5baf448 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5baf430 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5b9f190 <col:6> 'char [7]' lvalue "CAform"
|   | |-DeclRefExpr 0x188e5b9f1b0 <col:16> 'int' EnumConstant 0x188e5b96080 'OPT_CAFORM' 'int'
|   | |-CharacterLiteral 0x188e5b9f1d0 <col:28> 'int' 70
|   | `-ImplicitCastExpr 0x188e5baf478 <col:33> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5baf460 <col:33> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5b9f1e8 <col:33> 'char [24]' lvalue "CA format - default PEM"
|   |-InitListExpr 0x188e5baf4a0 <line:126:5, col:68> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5baf518 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5baf500 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5b9f278 <col:6> 'char [10]' lvalue "CAkeyform"
|   | |-DeclRefExpr 0x188e5b9f2a0 <col:19> 'int' EnumConstant 0x188e5b960d8 'OPT_CAKEYFORM' 'int'
|   | |-CharacterLiteral 0x188e5b9f2c0 <col:34> 'int' 102
|   | `-ImplicitCastExpr 0x188e5baf548 <col:39> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5baf530 <col:39> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5b9f2d8 <col:39> 'char [28]' lvalue "CA key format - default PEM"
|   |-InitListExpr 0x188e5baf570 <line:127:5, col:66> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5baf5e8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5baf5d0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5b9f370 <col:6> 'char [7]' lvalue "sigopt"
|   | |-DeclRefExpr 0x188e5b9f390 <col:16> 'int' EnumConstant 0x188e5b96130 'OPT_SIGOPT' 'int'
|   | |-CharacterLiteral 0x188e5b9f3b0 <col:28> 'int' 115
|   | `-ImplicitCastExpr 0x188e5baf618 <col:33> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5baf600 <col:33> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5b9f3c8 <col:33> 'char [32]' lvalue "Signature parameter in n:v form"
|   |-InitListExpr 0x188e5baf640 <line:128:5, col:86> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5baf6b8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5baf6a0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5b9f460 <col:6> 'char [13]' lvalue "force_pubkey"
|   | |-DeclRefExpr 0x188e5b9f488 <col:22> 'int' EnumConstant 0x188e5b96550 'OPT_FORCE_PUBKEY' 'int'
|   | |-CharacterLiteral 0x188e5b9f4a8 <col:40> 'int' 60
|   | `-ImplicitCastExpr 0x188e5baf6e8 <col:45> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5baf6d0 <col:45> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5b9f4c0 <col:45> 'char [40]' lvalue "Force the Key to put inside certificate"
|   |-InitListExpr 0x188e5baf710 <line:129:5, col:88> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5baf788 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5baf770 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5b9f560 <col:6> 'char [12]' lvalue "next_serial"
|   | |-DeclRefExpr 0x188e5b9f588 <col:21> 'int' EnumConstant 0x188e5b968c0 'OPT_NEXT_SERIAL' 'int'
|   | |-CharacterLiteral 0x188e5b9f5a8 <col:38> 'int' 45
|   | `-ImplicitCastExpr 0x188e5baf7b8 <col:43> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5baf7a0 <col:43> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5b9f5f8 <col:43> 'char [44]' lvalue "Increment current certificate serial number"
|   |-InitListExpr 0x188e5baf7e0 <line:130:5, line:131:69> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5baf858 <line:130:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5baf840 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5b9f6a0 <col:6> 'char [10]' lvalue "clrreject"
|   | |-DeclRefExpr 0x188e5b9f6c8 <col:19> 'int' EnumConstant 0x188e5bab0f8 'OPT_CLRREJECT' 'int'
|   | |-CharacterLiteral 0x188e5b9f6e8 <col:34> 'int' 45
|   | `-ImplicitCastExpr 0x188e5baf888 <line:131:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5baf870 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5b9f738 <col:6> 'char [62]' lvalue "Clears all the prohibited or rejected uses of the certificate"
|   |-InitListExpr 0x188e5baf8b0 <line:132:5, col:88> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5baf928 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5baf910 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5b9f7f0 <col:6> 'char [7]' lvalue "badsig"
|   | |-DeclRefExpr 0x188e5b9f810 <col:16> 'int' EnumConstant 0x188e5bab360 'OPT_BADSIG' 'int'
|   | |-CharacterLiteral 0x188e5b9f830 <col:28> 'int' 45
|   | `-ImplicitCastExpr 0x188e5baf958 <col:33> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5baf940 <col:33> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5b9f888 <col:33> 'char [54]' lvalue "Corrupt last byte of certificate signature (for test)"
|   |-InitListExpr 0x188e5baf980 <line:133:5, col:45> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5baf9f8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5baf9e0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5b9f978 <col:6> 'char [1]' lvalue ""
|   | |-DeclRefExpr 0x188e5b9f990 <col:10> 'int' EnumConstant 0x188e5bab3b8 'OPT_MD' 'int'
|   | |-CharacterLiteral 0x188e5b9f9b0 <col:18> 'int' 45
|   | `-ImplicitCastExpr 0x188e5bafa28 <col:23> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5bafa10 <col:23> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5b9f9c8 <col:23> 'char [21]' lvalue "Any supported digest"
|   |-InitListExpr 0x188e5bafa50 <line:135:5, line:136:47> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5bafac8 <line:135:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5bafab0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5b9fa58 <col:6> 'char [17]' lvalue "subject_hash_old"
|   | |-DeclRefExpr 0x188e5b9fa80 <col:26> 'int' EnumConstant 0x188e5bab2b0 'OPT_SUBJECT_HASH_OLD' 'int'
|   | |-CharacterLiteral 0x188e5b9faa0 <col:48> 'int' 45
|   | `-ImplicitCastExpr 0x188e5bafaf8 <line:136:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5bafae0 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5b9fab8 <col:6> 'char [40]' lvalue "Print old-style (MD5) issuer hash value"
|   |-InitListExpr 0x188e5bafb20 <line:137:5, line:138:48> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5bafb98 <line:137:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5bafb80 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5b9fb58 <col:6> 'char [16]' lvalue "issuer_hash_old"
|   | |-DeclRefExpr 0x188e5b9fb80 <col:25> 'int' EnumConstant 0x188e5bab308 'OPT_ISSUER_HASH_OLD' 'int'
|   | |-CharacterLiteral 0x188e5b9fba0 <col:46> 'int' 45
|   | `-ImplicitCastExpr 0x188e5bafbc8 <line:138:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5bafbb0 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5b9fbf8 <col:6> 'char [41]' lvalue "Print old-style (MD5) subject hash value"
|   |-InitListExpr 0x188e5bafbf0 <line:141:5, col:73> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x188e5bafc68 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x188e5bafc50 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x188e5b9fc98 <col:6> 'char [7]' lvalue "engine"
|   | |-DeclRefExpr 0x188e5b9fcb8 <col:16> 'int' EnumConstant 0x188e5bab410 'OPT_ENGINE' 'int'
|   | |-CharacterLiteral 0x188e5b9fcd8 <col:28> 'int' 115
|   | `-ImplicitCastExpr 0x188e5bafc98 <col:33> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x188e5bafc80 <col:33> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5b9fcf0 <col:33> 'char [39]' lvalue "Use engine, possibly a hardware device"
|   `-InitListExpr 0x188e5bafcc0 <line:143:5, col:10> 'OPTIONS':'struct options_st'
|     |-ImplicitCastExpr 0x188e5bafd20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <NullToPointer>
|     | `-ParenExpr 0x188e5b9fdf8 <col:17, col:27> 'void *'
|     |   `-CStyleCastExpr 0x188e5b9fdd0 <col:18, col:26> 'void *' <NullToPointer>
|     |     `-IntegerLiteral 0x188e5b9fd90 <col:26> 'int' 0
|     |-ImplicitValueInitExpr 0x188e5bafd38 <<invalid sloc>> 'int'
|     |-ImplicitValueInitExpr 0x188e5bafd48 <<invalid sloc>> 'int'
|     `-ImplicitValueInitExpr 0x188e5bafd58 <<invalid sloc>> 'const char *'
|-FunctionDecl 0x188e5baff90 <.//openssl//file_jk/before\apps\x509.c:146:1, line:897:1> line:146:5 x509_main 'int (int, char **)'
| |-ParmVarDecl 0x188e5bafe00 <col:15, col:19> col:19 used argc 'int'
| |-ParmVarDecl 0x188e5bafe80 <col:25, col:32> col:32 used argv 'char **'
| `-CompoundStmt 0x188e5ac45e8 <line:147:1, line:897:1>
|   |-DeclStmt 0x188e5bb0a88 <line:158:5, col:32>
|   | `-VarDecl 0x188e5bb0998 <col:5, col:19> col:19 invalid digest 'const int *'
|   |-DeclStmt 0x188e5ba4f50 <line:159:5, col:78>
|   | |-VarDecl 0x188e5bb0ab8 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\apps\x509.c:159:11 used CAkeyfile 'char *' cinit
|   | | `-ImplicitCastExpr 0x188e5bb0ba8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x188e5bb0b88 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x188e5bb0b60 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x188e5bb0b20 <col:26> 'int' 0
|   | |-VarDecl 0x188e5bb0bd8 <.//openssl//file_jk/before\apps\x509.c:159:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\apps\x509.c:159:30 used CAserial 'char *' cinit
|   | | `-ImplicitCastExpr 0x188e5bb0cc8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x188e5bb0ca8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x188e5bb0c80 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x188e5bb0c40 <col:26> 'int' 0
|   | |-VarDecl 0x188e5ba4d00 <.//openssl//file_jk/before\apps\x509.c:159:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\apps\x509.c:159:48 used fkeyfile 'char *' cinit
|   | | `-ImplicitCastExpr 0x188e5ba4df0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x188e5ba4dd0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x188e5ba4da8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x188e5ba4d68 <col:26> 'int' 0
|   | `-VarDecl 0x188e5ba4e20 <.//openssl//file_jk/before\apps\x509.c:159:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\apps\x509.c:159:66 used alias 'char *' cinit
|   |   `-ImplicitCastExpr 0x188e5ba4f10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x188e5ba4ef0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x188e5ba4ec8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x188e5ba4e88 <col:26> 'int' 0
|   |-DeclStmt 0x188e5ba52e8 <.//openssl//file_jk/before\apps\x509.c:160:5, col:64>
|   | |-VarDecl 0x188e5ba4f80 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\apps\x509.c:160:11 used checkhost 'char *' cinit
|   | | `-ImplicitCastExpr 0x188e5ba5070 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x188e5ba5050 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x188e5ba5028 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x188e5ba4fe8 <col:26> 'int' 0
|   | |-VarDecl 0x188e5ba50a0 <.//openssl//file_jk/before\apps\x509.c:160:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\apps\x509.c:160:30 used checkemail 'char *' cinit
|   | | `-ImplicitCastExpr 0x188e5ba5190 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x188e5ba5170 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x188e5ba5148 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x188e5ba5108 <col:26> 'int' 0
|   | `-VarDecl 0x188e5ba51c0 <.//openssl//file_jk/before\apps\x509.c:160:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\apps\x509.c:160:50 used checkip 'char *' cinit
|   |   `-ImplicitCastExpr 0x188e5ba52b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x188e5ba5290 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x188e5ba5268 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x188e5ba5228 <col:26> 'int' 0
|   |-DeclStmt 0x188e5ba57a8 <.//openssl//file_jk/before\apps\x509.c:161:5, col:77>
|   | |-VarDecl 0x188e5ba5318 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\apps\x509.c:161:11 used extsect 'char *' cinit
|   | | `-ImplicitCastExpr 0x188e5ba5408 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x188e5ba53e8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x188e5ba53c0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x188e5ba5380 <col:26> 'int' 0
|   | |-VarDecl 0x188e5ba5438 <.//openssl//file_jk/before\apps\x509.c:161:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\apps\x509.c:161:28 used extfile 'char *' cinit
|   | | `-ImplicitCastExpr 0x188e5ba5528 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x188e5ba5508 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x188e5ba54e0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x188e5ba54a0 <col:26> 'int' 0
|   | |-VarDecl 0x188e5ba5558 <.//openssl//file_jk/before\apps\x509.c:161:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\apps\x509.c:161:45 used passin 'char *' cinit
|   | | `-ImplicitCastExpr 0x188e5ba5648 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x188e5ba5628 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x188e5ba5600 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x188e5ba55c0 <col:26> 'int' 0
|   | `-VarDecl 0x188e5ba5678 <.//openssl//file_jk/before\apps\x509.c:161:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\apps\x509.c:161:61 used passinarg 'char *' cinit
|   |   `-ImplicitCastExpr 0x188e5ba5768 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x188e5ba5748 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x188e5ba5720 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x188e5ba56e0 <col:26> 'int' 0
|   |-DeclStmt 0x188e5ba5c68 <.//openssl//file_jk/before\apps\x509.c:162:5, col:74>
|   | |-VarDecl 0x188e5ba57d8 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\apps\x509.c:162:11 used infile 'char *' cinit
|   | | `-ImplicitCastExpr 0x188e5ba58c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x188e5ba58a8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x188e5ba5880 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x188e5ba5840 <col:26> 'int' 0
|   | |-VarDecl 0x188e5ba58f8 <.//openssl//file_jk/before\apps\x509.c:162:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\apps\x509.c:162:27 used outfile 'char *' cinit
|   | | `-ImplicitCastExpr 0x188e5ba59e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x188e5ba59c8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x188e5ba59a0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x188e5ba5960 <col:26> 'int' 0
|   | |-VarDecl 0x188e5ba5a18 <.//openssl//file_jk/before\apps\x509.c:162:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\apps\x509.c:162:44 used keyfile 'char *' cinit
|   | | `-ImplicitCastExpr 0x188e5ba5b08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x188e5ba5ae8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x188e5ba5ac0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x188e5ba5a80 <col:26> 'int' 0
|   | `-VarDecl 0x188e5ba5b38 <.//openssl//file_jk/before\apps\x509.c:162:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\apps\x509.c:162:61 used CAfile 'char *' cinit
|   |   `-ImplicitCastExpr 0x188e5ba5c28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x188e5ba5c08 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x188e5ba5be0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x188e5ba5ba0 <col:26> 'int' 0
|   |-DeclStmt 0x188e5ba5e18 <.//openssl//file_jk/before\apps\x509.c:163:5, col:25>
|   | |-VarDecl 0x188e5ba5d18 <col:5, col:17> col:10 used buf 'char [256]'
|   | `-VarDecl 0x188e5ba5d98 <col:5, col:21> col:21 used prog 'char *'
|   |-DeclStmt 0x188e5ba61a8 <line:164:5, col:74>
|   | |-VarDecl 0x188e5ba5e48 <col:5, col:19> col:9 used x509req 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba5eb0 <col:19> 'int' 0
|   | |-VarDecl 0x188e5ba5ef0 <col:5, line:32:25> line:164:22 used days 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba5f58 <line:32:25> 'int' 30
|   | |-VarDecl 0x188e5ba5f98 <line:164:5, col:49> col:39 used modulus 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba6000 <col:49> 'int' 0
|   | |-VarDecl 0x188e5ba6040 <col:5, col:61> col:52 used pubkey 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba60a8 <col:61> 'int' 0
|   | `-VarDecl 0x188e5ba60e8 <col:5, col:73> col:64 used pprint 'int' cinit
|   |   `-IntegerLiteral 0x188e5ba6150 <col:73> 'int' 0
|   |-DeclStmt 0x188e5ba64a8 <line:165:5, col:63>
|   | |-VarDecl 0x188e5ba61d8 <col:5, col:13> col:9 used C 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba6240 <col:13> 'int' 0
|   | |-VarDecl 0x188e5ba6280 <col:5, .//openssl//file_jk/before\apps/apps.h:530:43> .//openssl//file_jk/before\apps\x509.c:165:16 used CAformat 'int' cinit
|   | | `-ParenExpr 0x188e5ba6358 <.//openssl//file_jk/before\apps/apps.h:530:25, col:43> 'int'
|   | |   `-BinaryOperator 0x188e5ba6338 <col:26, line:524:26> 'int' '|'
|   | |     |-IntegerLiteral 0x188e5ba62e8 <line:530:26> 'int' 5
|   | |     `-IntegerLiteral 0x188e5ba6310 <line:524:26> 'int' 32768
|   | `-VarDecl 0x188e5ba6390 <.//openssl//file_jk/before\apps\x509.c:165:5, .//openssl//file_jk/before\apps/apps.h:530:43> .//openssl//file_jk/before\apps\x509.c:165:39 used CAkeyformat 'int' cinit
|   |   `-ParenExpr 0x188e5ba6468 <.//openssl//file_jk/before\apps/apps.h:530:25, col:43> 'int'
|   |     `-BinaryOperator 0x188e5ba6448 <col:26, line:524:26> 'int' '|'
|   |       |-IntegerLiteral 0x188e5ba63f8 <line:530:26> 'int' 5
|   |       `-IntegerLiteral 0x188e5ba6420 <line:524:26> 'int' 32768
|   |-DeclStmt 0x188e5ba6788 <.//openssl//file_jk/before\apps\x509.c:166:5, col:66>
|   | |-VarDecl 0x188e5ba64d8 <col:5, col:23> col:9 used fingerprint 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba6540 <col:23> 'int' 0
|   | |-VarDecl 0x188e5ba6580 <col:5, col:36> col:26 used reqfile 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba65e8 <col:36> 'int' 0
|   | |-VarDecl 0x188e5ba6628 <col:5, col:51> col:39 used need_rand 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba6690 <col:51> 'int' 0
|   | `-VarDecl 0x188e5ba66d0 <col:5, col:65> col:54 used checkend 'int' cinit
|   |   `-IntegerLiteral 0x188e5ba6738 <col:65> 'int' 0
|   |-DeclStmt 0x188e5ba6af0 <line:167:5, col:78>
|   | |-VarDecl 0x188e5ba67b8 <col:5, .//openssl//file_jk/before\apps/apps.h:530:43> .//openssl//file_jk/before\apps\x509.c:167:9 used informat 'int' cinit
|   | | `-ParenExpr 0x188e5ba6890 <.//openssl//file_jk/before\apps/apps.h:530:25, col:43> 'int'
|   | |   `-BinaryOperator 0x188e5ba6870 <col:26, line:524:26> 'int' '|'
|   | |     |-IntegerLiteral 0x188e5ba6820 <line:530:26> 'int' 5
|   | |     `-IntegerLiteral 0x188e5ba6848 <line:524:26> 'int' 32768
|   | |-VarDecl 0x188e5ba68c8 <.//openssl//file_jk/before\apps\x509.c:167:5, .//openssl//file_jk/before\apps/apps.h:530:43> .//openssl//file_jk/before\apps\x509.c:167:32 used outformat 'int' cinit
|   | | `-ParenExpr 0x188e5ba69a0 <.//openssl//file_jk/before\apps/apps.h:530:25, col:43> 'int'
|   | |   `-BinaryOperator 0x188e5ba6980 <col:26, line:524:26> 'int' '|'
|   | |     |-IntegerLiteral 0x188e5ba6930 <line:530:26> 'int' 5
|   | |     `-IntegerLiteral 0x188e5ba6958 <line:524:26> 'int' 32768
|   | `-VarDecl 0x188e5ba69d8 <.//openssl//file_jk/before\apps\x509.c:167:5, .//openssl//file_jk/before\apps/apps.h:530:43> .//openssl//file_jk/before\apps\x509.c:167:56 used keyformat 'int' cinit
|   |   `-ParenExpr 0x188e5ba6ab0 <.//openssl//file_jk/before\apps/apps.h:530:25, col:43> 'int'
|   |     `-BinaryOperator 0x188e5ba6a90 <col:26, line:524:26> 'int' '|'
|   |       |-IntegerLiteral 0x188e5ba6a40 <line:530:26> 'int' 5
|   |       `-IntegerLiteral 0x188e5ba6a68 <line:524:26> 'int' 32768
|   |-DeclStmt 0x188e5ba6de0 <.//openssl//file_jk/before\apps\x509.c:168:5, col:71>
|   | |-VarDecl 0x188e5ba6b20 <col:5, col:23> col:9 used next_serial 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba6b88 <col:23> 'int' 0
|   | |-VarDecl 0x188e5ba6bc8 <col:5, col:41> col:26 used subject_hash 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba6c30 <col:41> 'int' 0
|   | |-VarDecl 0x188e5ba6c70 <col:5, col:58> col:44 used issuer_hash 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba6cd8 <col:58> 'int' 0
|   | `-VarDecl 0x188e5ba6d28 <col:5, col:70> col:61 used ocspid 'int' cinit
|   |   `-IntegerLiteral 0x188e5ba6d90 <col:70> 'int' 0
|   |-DeclStmt 0x188e5ba7170 <line:169:5, col:78>
|   | |-VarDecl 0x188e5ba6e10 <col:5, col:17> col:9 used noout 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba6e78 <col:17> 'int' 0
|   | |-VarDecl 0x188e5ba6eb8 <col:5, col:32> col:20 used sign_flag 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba6f20 <col:32> 'int' 0
|   | |-VarDecl 0x188e5ba6f60 <col:5, col:45> col:35 used CA_flag 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba6fc8 <col:45> 'int' 0
|   | |-VarDecl 0x188e5ba7008 <col:5, col:66> col:48 used CA_createserial 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba7070 <col:66> 'int' 0
|   | `-VarDecl 0x188e5ba70b0 <col:5, col:77> col:69 used email 'int' cinit
|   |   `-IntegerLiteral 0x188e5ba7118 <col:77> 'int' 0
|   |-DeclStmt 0x188e5ba7500 <line:170:5, col:78>
|   | |-VarDecl 0x188e5ba71a0 <col:5, col:20> col:9 used ocsp_uri 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba7208 <col:20> 'int' 0
|   | |-VarDecl 0x188e5ba7248 <col:5, col:34> col:23 used trustout 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba72b0 <col:34> 'int' 0
|   | |-VarDecl 0x188e5ba72f0 <col:5, col:48> col:37 used clrtrust 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba7358 <col:48> 'int' 0
|   | |-VarDecl 0x188e5ba7398 <col:5, col:63> col:51 used clrreject 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba7400 <col:63> 'int' 0
|   | `-VarDecl 0x188e5ba7440 <col:5, col:77> col:66 used aliasout 'int' cinit
|   |   `-IntegerLiteral 0x188e5ba74a8 <col:77> 'int' 0
|   |-DeclStmt 0x188e5ba7918 <line:171:5, col:64>
|   | |-VarDecl 0x188e5ba7530 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba7598 <col:15> 'int' 1
|   | |-VarDecl 0x188e5ba75d8 <col:5, col:18> col:18 used i 'int'
|   | |-VarDecl 0x188e5ba7658 <col:5, col:27> col:21 used num 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba76c0 <col:27> 'int' 0
|   | |-VarDecl 0x188e5ba7700 <col:5, col:39> col:30 used badsig 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba7768 <col:39> 'int' 0
|   | |-VarDecl 0x188e5ba77a8 <col:5, col:51> col:42 used clrext 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba7810 <col:51> 'int' 0
|   | `-VarDecl 0x188e5ba7850 <col:5, col:63> col:54 used nocert 'int' cinit
|   |   `-IntegerLiteral 0x188e5ba78b8 <col:63> 'int' 0
|   |-DeclStmt 0x188e5ba7ca8 <line:172:5, col:69>
|   | |-VarDecl 0x188e5ba7948 <col:5, col:16> col:9 used text 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba79b0 <col:16> 'int' 0
|   | |-VarDecl 0x188e5ba79f0 <col:5, col:28> col:19 used serial 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba7a58 <col:28> 'int' 0
|   | |-VarDecl 0x188e5ba7a98 <col:5, col:41> col:31 used subject 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba7b00 <col:41> 'int' 0
|   | |-VarDecl 0x188e5ba7b40 <col:5, col:53> col:44 used issuer 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba7ba8 <col:53> 'int' 0
|   | `-VarDecl 0x188e5ba7be8 <col:5, col:68> col:56 used startdate 'int' cinit
|   |   `-IntegerLiteral 0x188e5ba7c50 <col:68> 'int' 0
|   |-DeclStmt 0x188e5ba7d68 <line:173:5, col:20>
|   | `-VarDecl 0x188e5ba7cd8 <col:5, col:19> col:9 used enddate 'int' cinit
|   |   `-IntegerLiteral 0x188e5ba7d40 <col:19> 'int' 0
|   |-DeclStmt 0x188e5ba7e58 <line:174:5, col:27>
|   | `-VarDecl 0x188e5ba7db0 <col:5, col:26> col:12 used checkoffset 'time_t':'long long' cinit
|   |   `-ImplicitCastExpr 0x188e5ba7e40 <col:26> 'time_t':'long long' <IntegralCast>
|   |     `-IntegerLiteral 0x188e5ba7e18 <col:26> 'int' 0
|   |-DeclStmt 0x188e5ba8008 <line:175:5, col:43>
|   | |-VarDecl 0x188e5ba7e88 <col:5, col:28> col:19 used nmflag 'unsigned long' cinit
|   | | `-ImplicitCastExpr 0x188e5ba7f18 <col:28> 'unsigned long' <IntegralCast>
|   | |   `-IntegerLiteral 0x188e5ba7ef0 <col:28> 'int' 0
|   | `-VarDecl 0x188e5ba7f48 <col:5, col:42> col:31 used certflag 'unsigned long' cinit
|   |   `-ImplicitCastExpr 0x188e5ba7fd8 <col:42> 'unsigned long' <IntegralCast>
|   |     `-IntegerLiteral 0x188e5ba7fb0 <col:42> 'int' 0
|   |-DeclStmt 0x188e5ba80d8 <line:176:5, col:24>
|   | `-VarDecl 0x188e5ba8030 <col:5, col:23> col:10 used nmflag_set 'char' cinit
|   |   `-ImplicitCastExpr 0x188e5ba80c0 <col:23> 'char' <IntegralCast>
|   |     `-IntegerLiteral 0x188e5ba8098 <col:23> 'int' 0
|   |-DeclStmt 0x188e5ba8188 <line:177:5, col:20>
|   | `-VarDecl 0x188e5ba8120 <col:5, col:19> col:19 used o 'OPTION_CHOICE':'enum OPTION_choice'
|   |-DeclStmt 0x188e5ba8390 <line:180:5, col:50>
|   | |-VarDecl 0x188e5ba8240 <col:5, col:28> col:9 used subject_hash_old 'int' cinit
|   | | `-IntegerLiteral 0x188e5ba82a8 <col:28> 'int' 0
|   | `-VarDecl 0x188e5ba82e8 <col:5, col:49> col:31 used issuer_hash_old 'int' cinit
|   |   `-IntegerLiteral 0x188e5ba8350 <col:49> 'int' 0
|   |-IfStmt 0x188e5ba85f8 <line:184:5, line:185:14>
|   | |-OpaqueValueExpr 0x188e5ba85e0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x188e5ba85c8 <col:9, col:14> 'end' 0x188e5ba8578
|   |-BinaryOperator 0x188e5ba8948 <line:188:5, col:45> 'char *' '='
|   | |-DeclRefExpr 0x188e5ba8720 <col:5> 'char *' lvalue Var 0x188e5ba5d98 'prog' 'char *'
|   | `-CallExpr 0x188e5ba8850 <col:12, col:45> 'char *'
|   |   |-ImplicitCastExpr 0x188e5ba8838 <col:12> 'char *(*)(int, char **, const OPTIONS *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x188e5ba8758 <col:12> 'char *(int, char **, const OPTIONS *)' Function 0x188e5b8afb0 'opt_init' 'char *(int, char **, const OPTIONS *)'
|   |   |-ImplicitCastExpr 0x188e5ba8888 <col:21> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x188e5ba8778 <col:21> 'int' lvalue ParmVar 0x188e5bafe00 'argc' 'int'
|   |   |-ImplicitCastExpr 0x188e5ba88a0 <col:27> 'char **' <LValueToRValue>
|   |   | `-DeclRefExpr 0x188e5ba8798 <col:27> 'char **' lvalue ParmVar 0x188e5bafe80 'argv' 'char **'
|   |   `-ImplicitCastExpr 0x188e5ba8930 <col:33> 'const OPTIONS *' <NoOp>
|   |     `-ImplicitCastExpr 0x188e5ba8918 <col:33> 'OPTIONS *' <ArrayToPointerDecay>
|   |       `-DeclRefExpr 0x188e5ba87b8 <col:33> 'OPTIONS [64]' lvalue Var 0x188e5bab608 'x509_options' 'OPTIONS [64]'
|   |-WhileStmt 0x188e5ab6ce0 <line:189:5, line:442:5>
|   | |-BinaryOperator 0x188e5ba8a88 <line:189:12, col:32> 'int' '!='
|   | | |-ImplicitCastExpr 0x188e5ba8a70 <col:12, col:27> 'int' <IntegralCast>
|   | | | `-ParenExpr 0x188e5ba8a30 <col:12, col:27> 'OPTION_CHOICE':'enum OPTION_choice'
|   | | |   `-BinaryOperator 0x188e5ba8a10 <col:13, col:26> 'OPTION_CHOICE':'enum OPTION_choice' '='
|   | | |     |-DeclRefExpr 0x188e5ba8968 <col:13> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x188e5ba8120 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   | | |     `-ImplicitCastExpr 0x188e5ba89f8 <col:17, col:26> 'OPTION_CHOICE':'enum OPTION_choice' <IntegralCast>
|   | | |       `-CallExpr 0x188e5ba89d8 <col:17, col:26> 'int'
|   | | |         `-ImplicitCastExpr 0x188e5ba89c0 <col:17> 'int (*)(void)' <FunctionToPointerDecay>
|   | | |           `-DeclRefExpr 0x188e5ba89a0 <col:17> 'int (void)' Function 0x188e5b8b120 'opt_next' 'int (void)'
|   | | `-DeclRefExpr 0x188e5ba8a50 <col:32> 'int' EnumConstant 0x188e5b95e70 'OPT_EOF' 'int'
|   | `-CompoundStmt 0x188e5ab6cc8 <col:41, line:442:5>
|   |   `-SwitchStmt 0x188e5ba8af8 <line:190:9, line:441:9>
|   |     |-ImplicitCastExpr 0x188e5ba8ae0 <line:190:17> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x188e5ba8ac8 <col:17> 'OPTION_CHOICE':'enum OPTION_choice' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x188e5ba8aa8 <col:17> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x188e5ba8120 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   |     `-CompoundStmt 0x188e5ab6868 <col:20, line:441:9>
|   |       |-CaseStmt 0x188e5ba8b50 <line:191:9, line:193:9>
|   |       | |-ConstantExpr 0x188e5ba8b38 <line:191:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ba8b18 <col:14> 'int' EnumConstant 0x188e5b95e70 'OPT_EOF' 'int'
|   |       | `-CaseStmt 0x188e5ba8bb0 <line:192:9, line:193:9>
|   |       |   |-ConstantExpr 0x188e5ba8b98 <line:192:14> 'int'
|   |       |   | `-DeclRefExpr 0x188e5ba8b78 <col:14> 'int' EnumConstant 0x188e5b95dd8 'OPT_ERR' 'int'
|   |       |   `-LabelStmt 0x188e5ab3070 <line:193:2, col:9> 'opthelp'
|   |       |     `-NullStmt 0x188e5ab3018 <col:9>
|   |       |-GotoStmt 0x188e5ab3088 <line:195:13, col:18> 'end' 0x188e5ba8578
|   |       |-CaseStmt 0x188e5ab30d8 <line:196:9, line:197:34>
|   |       | |-ConstantExpr 0x188e5ab30c0 <line:196:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab30a0 <col:14> 'int' EnumConstant 0x188e5b95ec8 'OPT_HELP' 'int'
|   |       | `-CallExpr 0x188e5ab31b0 <line:197:13, col:34> 'void'
|   |       |   |-ImplicitCastExpr 0x188e5ab3198 <col:13> 'void (*)(const OPTIONS *)' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x188e5ab3100 <col:13> 'void (const OPTIONS *)' Function 0x188e5b97c48 'opt_help' 'void (const OPTIONS *)'
|   |       |   `-ImplicitCastExpr 0x188e5ab31f0 <col:22> 'const OPTIONS *' <NoOp>
|   |       |     `-ImplicitCastExpr 0x188e5ab31d8 <col:22> 'OPTIONS *' <ArrayToPointerDecay>
|   |       |       `-DeclRefExpr 0x188e5ab3120 <col:22> 'OPTIONS [64]' lvalue Var 0x188e5bab608 'x509_options' 'OPTIONS [64]'
|   |       |-BinaryOperator 0x188e5ab3268 <line:198:13, col:19> 'int' '='
|   |       | |-DeclRefExpr 0x188e5ab3208 <col:13> 'int' lvalue Var 0x188e5ba7530 'ret' 'int'
|   |       | `-IntegerLiteral 0x188e5ab3240 <col:19> 'int' 0
|   |       |-GotoStmt 0x188e5ab3288 <line:199:13, col:18> 'end' 0x188e5ba8578
|   |       |-CaseStmt 0x188e5ab32d8 <line:200:9, line:202:22>
|   |       | |-ConstantExpr 0x188e5ab32c0 <line:200:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab32a0 <col:14> 'int' EnumConstant 0x188e5b95f20 'OPT_INFORM' 'int'
|   |       | `-IfStmt 0x188e5ab3ba8 <line:201:13, line:202:22>
|   |       |   |-UnaryOperator 0x188e5ab3b78 <line:201:17, col:62> 'int' prefix '!' cannot overflow
|   |       |   | `-CallExpr 0x188e5ab3b10 <col:18, col:62> 'int'
|   |       |   |   |-ImplicitCastExpr 0x188e5ab3af8 <col:18> 'int (*)(const char *, unsigned long, int *)' <FunctionToPointerDecay>
|   |       |   |   | `-DeclRefExpr 0x188e5ab3300 <col:18> 'int (const char *, unsigned long, int *)' Function 0x188e5b8b420 'opt_format' 'int (const char *, unsigned long, int *)'
|   |       |   |   |-ImplicitCastExpr 0x188e5ab3b48 <col:29, col:37> 'const char *' <NoOp>
|   |       |   |   | `-CallExpr 0x188e5ab3380 <col:29, col:37> 'char *'
|   |       |   |   |   `-ImplicitCastExpr 0x188e5ab3368 <col:29> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |   |   |     `-DeclRefExpr 0x188e5ab3320 <col:29> 'char *(void)' Function 0x188e5b971a0 'opt_arg' 'char *(void)'
|   |       |   |   |-ImplicitCastExpr 0x188e5ab3b60 <.//openssl//file_jk/before\apps/apps.h:329:26, line:332:64> 'unsigned long' <IntegralCast>
|   |       |   |   | `-ParenExpr 0x188e5ab3a60 <line:329:26, line:332:64> 'long'
|   |       |   |   |   `-BinaryOperator 0x188e5ab3a40 <line:317:34, line:326:43> 'long' '|'
|   |       |   |   |     |-BinaryOperator 0x188e5ab3990 <line:317:34, line:325:43> 'long' '|'
|   |       |   |   |     | |-BinaryOperator 0x188e5ab38e0 <line:317:34, line:324:43> 'long' '|'
|   |       |   |   |     | | |-BinaryOperator 0x188e5ab3830 <line:317:34, line:323:43> 'long' '|'
|   |       |   |   |     | | | |-BinaryOperator 0x188e5ab3780 <line:317:34, line:322:43> 'long' '|'
|   |       |   |   |     | | | | |-BinaryOperator 0x188e5ab36d0 <line:317:34, line:321:43> 'long' '|'
|   |       |   |   |     | | | | | |-BinaryOperator 0x188e5ab3620 <line:317:34, line:320:43> 'long' '|'
|   |       |   |   |     | | | | | | |-BinaryOperator 0x188e5ab3570 <line:317:34, line:319:43> 'long' '|'
|   |       |   |   |     | | | | | | | |-BinaryOperator 0x188e5ab34c0 <line:317:34, line:318:43> 'long' '|'
|   |       |   |   |     | | | | | | | | |-ParenExpr 0x188e5ab3410 <line:317:34, col:43> 'long'
|   |       |   |   |     | | | | | | | | | `-BinaryOperator 0x188e5ab33f0 <col:35, col:42> 'long' '<<'
|   |       |   |   |     | | | | | | | | |   |-IntegerLiteral 0x188e5ab33a0 <col:35> 'long' 1
|   |       |   |   |     | | | | | | | | |   `-IntegerLiteral 0x188e5ab33c8 <col:42> 'int' 1
|   |       |   |   |     | | | | | | | | `-ParenExpr 0x188e5ab34a0 <line:318:34, col:43> 'long'
|   |       |   |   |     | | | | | | | |   `-BinaryOperator 0x188e5ab3480 <col:35, col:42> 'long' '<<'
|   |       |   |   |     | | | | | | | |     |-IntegerLiteral 0x188e5ab3430 <col:35> 'long' 1
|   |       |   |   |     | | | | | | | |     `-IntegerLiteral 0x188e5ab3458 <col:42> 'int' 2
|   |       |   |   |     | | | | | | | `-ParenExpr 0x188e5ab3550 <line:319:34, col:43> 'long'
|   |       |   |   |     | | | | | | |   `-BinaryOperator 0x188e5ab3530 <col:35, col:42> 'long' '<<'
|   |       |   |   |     | | | | | | |     |-IntegerLiteral 0x188e5ab34e0 <col:35> 'long' 1
|   |       |   |   |     | | | | | | |     `-IntegerLiteral 0x188e5ab3508 <col:42> 'int' 3
|   |       |   |   |     | | | | | | `-ParenExpr 0x188e5ab3600 <line:320:34, col:43> 'long'
|   |       |   |   |     | | | | | |   `-BinaryOperator 0x188e5ab35e0 <col:35, col:42> 'long' '<<'
|   |       |   |   |     | | | | | |     |-IntegerLiteral 0x188e5ab3590 <col:35> 'long' 1
|   |       |   |   |     | | | | | |     `-IntegerLiteral 0x188e5ab35b8 <col:42> 'int' 4
|   |       |   |   |     | | | | | `-ParenExpr 0x188e5ab36b0 <line:321:34, col:43> 'long'
|   |       |   |   |     | | | | |   `-BinaryOperator 0x188e5ab3690 <col:35, col:42> 'long' '<<'
|   |       |   |   |     | | | | |     |-IntegerLiteral 0x188e5ab3640 <col:35> 'long' 1
|   |       |   |   |     | | | | |     `-IntegerLiteral 0x188e5ab3668 <col:42> 'int' 5
|   |       |   |   |     | | | | `-ParenExpr 0x188e5ab3760 <line:322:34, col:43> 'long'
|   |       |   |   |     | | | |   `-BinaryOperator 0x188e5ab3740 <col:35, col:42> 'long' '<<'
|   |       |   |   |     | | | |     |-IntegerLiteral 0x188e5ab36f0 <col:35> 'long' 1
|   |       |   |   |     | | | |     `-IntegerLiteral 0x188e5ab3718 <col:42> 'int' 6
|   |       |   |   |     | | | `-ParenExpr 0x188e5ab3810 <line:323:34, col:43> 'long'
|   |       |   |   |     | | |   `-BinaryOperator 0x188e5ab37f0 <col:35, col:42> 'long' '<<'
|   |       |   |   |     | | |     |-IntegerLiteral 0x188e5ab37a0 <col:35> 'long' 1
|   |       |   |   |     | | |     `-IntegerLiteral 0x188e5ab37c8 <col:42> 'int' 7
|   |       |   |   |     | | `-ParenExpr 0x188e5ab38c0 <line:324:34, col:43> 'long'
|   |       |   |   |     | |   `-BinaryOperator 0x188e5ab38a0 <col:35, col:42> 'long' '<<'
|   |       |   |   |     | |     |-IntegerLiteral 0x188e5ab3850 <col:35> 'long' 1
|   |       |   |   |     | |     `-IntegerLiteral 0x188e5ab3878 <col:42> 'int' 8
|   |       |   |   |     | `-ParenExpr 0x188e5ab3970 <line:325:34, col:43> 'long'
|   |       |   |   |     |   `-BinaryOperator 0x188e5ab3950 <col:35, col:42> 'long' '<<'
|   |       |   |   |     |     |-IntegerLiteral 0x188e5ab3900 <col:35> 'long' 1
|   |       |   |   |     |     `-IntegerLiteral 0x188e5ab3928 <col:42> 'int' 9
|   |       |   |   |     `-ParenExpr 0x188e5ab3a20 <line:326:34, col:43> 'long'
|   |       |   |   |       `-BinaryOperator 0x188e5ab3a00 <col:35, col:41> 'long' '<<'
|   |       |   |   |         |-IntegerLiteral 0x188e5ab39b0 <col:35> 'long' 1
|   |       |   |   |         `-IntegerLiteral 0x188e5ab39d8 <col:41> 'int' 10
|   |       |   |   `-UnaryOperator 0x188e5ab3ab8 <.//openssl//file_jk/before\apps\x509.c:201:53, col:54> 'int *' prefix '&' cannot overflow
|   |       |   |     `-DeclRefExpr 0x188e5ab3a80 <col:54> 'int' lvalue Var 0x188e5ba67b8 'informat' 'int'
|   |       |   `-GotoStmt 0x188e5ab3b90 <line:202:17, col:22> 'opthelp' 0x188e5ab3020
|   |       |-BreakStmt 0x188e5ab3bc0 <line:203:13>
|   |       |-CaseStmt 0x188e5ab3c00 <line:204:9, line:205:30>
|   |       | |-ConstantExpr 0x188e5ab3be8 <line:204:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab3bc8 <col:14> 'int' EnumConstant 0x188e5b962e8 'OPT_IN' 'int'
|   |       | `-BinaryOperator 0x188e5ab3cb8 <line:205:13, col:30> 'char *' '='
|   |       |   |-DeclRefExpr 0x188e5ab3c28 <col:13> 'char *' lvalue Var 0x188e5ba57d8 'infile' 'char *'
|   |       |   `-CallExpr 0x188e5ab3c98 <col:22, col:30> 'char *'
|   |       |     `-ImplicitCastExpr 0x188e5ab3c80 <col:22> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x188e5ab3c60 <col:22> 'char *(void)' Function 0x188e5b971a0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x188e5ab3cd8 <line:206:13>
|   |       |-CaseStmt 0x188e5ab3d18 <line:207:9, line:209:22>
|   |       | |-ConstantExpr 0x188e5ab3d00 <line:207:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab3ce0 <col:14> 'int' EnumConstant 0x188e5b95f78 'OPT_OUTFORM' 'int'
|   |       | `-IfStmt 0x188e5ab4598 <line:208:13, line:209:22>
|   |       |   |-UnaryOperator 0x188e5ab4568 <line:208:17, col:63> 'int' prefix '!' cannot overflow
|   |       |   | `-CallExpr 0x188e5ab4500 <col:18, col:63> 'int'
|   |       |   |   |-ImplicitCastExpr 0x188e5ab44e8 <col:18> 'int (*)(const char *, unsigned long, int *)' <FunctionToPointerDecay>
|   |       |   |   | `-DeclRefExpr 0x188e5ab3d40 <col:18> 'int (const char *, unsigned long, int *)' Function 0x188e5b8b420 'opt_format' 'int (const char *, unsigned long, int *)'
|   |       |   |   |-ImplicitCastExpr 0x188e5ab4538 <col:29, col:37> 'const char *' <NoOp>
|   |       |   |   | `-CallExpr 0x188e5ab3d98 <col:29, col:37> 'char *'
|   |       |   |   |   `-ImplicitCastExpr 0x188e5ab3d80 <col:29> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |   |   |     `-DeclRefExpr 0x188e5ab3d60 <col:29> 'char *(void)' Function 0x188e5b971a0 'opt_arg' 'char *(void)'
|   |       |   |   |-ImplicitCastExpr 0x188e5ab4550 <.//openssl//file_jk/before\apps/apps.h:329:26, line:332:64> 'unsigned long' <IntegralCast>
|   |       |   |   | `-ParenExpr 0x188e5ab4478 <line:329:26, line:332:64> 'long'
|   |       |   |   |   `-BinaryOperator 0x188e5ab4458 <line:317:34, line:326:43> 'long' '|'
|   |       |   |   |     |-BinaryOperator 0x188e5ab43a8 <line:317:34, line:325:43> 'long' '|'
|   |       |   |   |     | |-BinaryOperator 0x188e5ab42f8 <line:317:34, line:324:43> 'long' '|'
|   |       |   |   |     | | |-BinaryOperator 0x188e5ab4248 <line:317:34, line:323:43> 'long' '|'
|   |       |   |   |     | | | |-BinaryOperator 0x188e5ab4198 <line:317:34, line:322:43> 'long' '|'
|   |       |   |   |     | | | | |-BinaryOperator 0x188e5ab40e8 <line:317:34, line:321:43> 'long' '|'
|   |       |   |   |     | | | | | |-BinaryOperator 0x188e5ab4038 <line:317:34, line:320:43> 'long' '|'
|   |       |   |   |     | | | | | | |-BinaryOperator 0x188e5ab3f88 <line:317:34, line:319:43> 'long' '|'
|   |       |   |   |     | | | | | | | |-BinaryOperator 0x188e5ab3ed8 <line:317:34, line:318:43> 'long' '|'
|   |       |   |   |     | | | | | | | | |-ParenExpr 0x188e5ab3e28 <line:317:34, col:43> 'long'
|   |       |   |   |     | | | | | | | | | `-BinaryOperator 0x188e5ab3e08 <col:35, col:42> 'long' '<<'
|   |       |   |   |     | | | | | | | | |   |-IntegerLiteral 0x188e5ab3db8 <col:35> 'long' 1
|   |       |   |   |     | | | | | | | | |   `-IntegerLiteral 0x188e5ab3de0 <col:42> 'int' 1
|   |       |   |   |     | | | | | | | | `-ParenExpr 0x188e5ab3eb8 <line:318:34, col:43> 'long'
|   |       |   |   |     | | | | | | | |   `-BinaryOperator 0x188e5ab3e98 <col:35, col:42> 'long' '<<'
|   |       |   |   |     | | | | | | | |     |-IntegerLiteral 0x188e5ab3e48 <col:35> 'long' 1
|   |       |   |   |     | | | | | | | |     `-IntegerLiteral 0x188e5ab3e70 <col:42> 'int' 2
|   |       |   |   |     | | | | | | | `-ParenExpr 0x188e5ab3f68 <line:319:34, col:43> 'long'
|   |       |   |   |     | | | | | | |   `-BinaryOperator 0x188e5ab3f48 <col:35, col:42> 'long' '<<'
|   |       |   |   |     | | | | | | |     |-IntegerLiteral 0x188e5ab3ef8 <col:35> 'long' 1
|   |       |   |   |     | | | | | | |     `-IntegerLiteral 0x188e5ab3f20 <col:42> 'int' 3
|   |       |   |   |     | | | | | | `-ParenExpr 0x188e5ab4018 <line:320:34, col:43> 'long'
|   |       |   |   |     | | | | | |   `-BinaryOperator 0x188e5ab3ff8 <col:35, col:42> 'long' '<<'
|   |       |   |   |     | | | | | |     |-IntegerLiteral 0x188e5ab3fa8 <col:35> 'long' 1
|   |       |   |   |     | | | | | |     `-IntegerLiteral 0x188e5ab3fd0 <col:42> 'int' 4
|   |       |   |   |     | | | | | `-ParenExpr 0x188e5ab40c8 <line:321:34, col:43> 'long'
|   |       |   |   |     | | | | |   `-BinaryOperator 0x188e5ab40a8 <col:35, col:42> 'long' '<<'
|   |       |   |   |     | | | | |     |-IntegerLiteral 0x188e5ab4058 <col:35> 'long' 1
|   |       |   |   |     | | | | |     `-IntegerLiteral 0x188e5ab4080 <col:42> 'int' 5
|   |       |   |   |     | | | | `-ParenExpr 0x188e5ab4178 <line:322:34, col:43> 'long'
|   |       |   |   |     | | | |   `-BinaryOperator 0x188e5ab4158 <col:35, col:42> 'long' '<<'
|   |       |   |   |     | | | |     |-IntegerLiteral 0x188e5ab4108 <col:35> 'long' 1
|   |       |   |   |     | | | |     `-IntegerLiteral 0x188e5ab4130 <col:42> 'int' 6
|   |       |   |   |     | | | `-ParenExpr 0x188e5ab4228 <line:323:34, col:43> 'long'
|   |       |   |   |     | | |   `-BinaryOperator 0x188e5ab4208 <col:35, col:42> 'long' '<<'
|   |       |   |   |     | | |     |-IntegerLiteral 0x188e5ab41b8 <col:35> 'long' 1
|   |       |   |   |     | | |     `-IntegerLiteral 0x188e5ab41e0 <col:42> 'int' 7
|   |       |   |   |     | | `-ParenExpr 0x188e5ab42d8 <line:324:34, col:43> 'long'
|   |       |   |   |     | |   `-BinaryOperator 0x188e5ab42b8 <col:35, col:42> 'long' '<<'
|   |       |   |   |     | |     |-IntegerLiteral 0x188e5ab4268 <col:35> 'long' 1
|   |       |   |   |     | |     `-IntegerLiteral 0x188e5ab4290 <col:42> 'int' 8
|   |       |   |   |     | `-ParenExpr 0x188e5ab4388 <line:325:34, col:43> 'long'
|   |       |   |   |     |   `-BinaryOperator 0x188e5ab4368 <col:35, col:42> 'long' '<<'
|   |       |   |   |     |     |-IntegerLiteral 0x188e5ab4318 <col:35> 'long' 1
|   |       |   |   |     |     `-IntegerLiteral 0x188e5ab4340 <col:42> 'int' 9
|   |       |   |   |     `-ParenExpr 0x188e5ab4438 <line:326:34, col:43> 'long'
|   |       |   |   |       `-BinaryOperator 0x188e5ab4418 <col:35, col:41> 'long' '<<'
|   |       |   |   |         |-IntegerLiteral 0x188e5ab43c8 <col:35> 'long' 1
|   |       |   |   |         `-IntegerLiteral 0x188e5ab43f0 <col:41> 'int' 10
|   |       |   |   `-UnaryOperator 0x188e5ab44d0 <.//openssl//file_jk/before\apps\x509.c:208:53, col:54> 'int *' prefix '&' cannot overflow
|   |       |   |     `-DeclRefExpr 0x188e5ab4498 <col:54> 'int' lvalue Var 0x188e5ba68c8 'outformat' 'int'
|   |       |   `-GotoStmt 0x188e5ab4580 <line:209:17, col:22> 'opthelp' 0x188e5ab3020
|   |       |-BreakStmt 0x188e5ab45b0 <line:210:13>
|   |       |-CaseStmt 0x188e5ab45f0 <line:211:9, line:213:22>
|   |       | |-ConstantExpr 0x188e5ab45d8 <line:211:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab45b8 <col:14> 'int' EnumConstant 0x188e5b95fd0 'OPT_KEYFORM' 'int'
|   |       | `-IfStmt 0x188e5ab4820 <line:212:13, line:213:22>
|   |       |   |-UnaryOperator 0x188e5ab47f0 <line:212:17, col:66> 'int' prefix '!' cannot overflow
|   |       |   | `-CallExpr 0x188e5ab4788 <col:18, col:66> 'int'
|   |       |   |   |-ImplicitCastExpr 0x188e5ab4770 <col:18> 'int (*)(const char *, unsigned long, int *)' <FunctionToPointerDecay>
|   |       |   |   | `-DeclRefExpr 0x188e5ab4618 <col:18> 'int (const char *, unsigned long, int *)' Function 0x188e5b8b420 'opt_format' 'int (const char *, unsigned long, int *)'
|   |       |   |   |-ImplicitCastExpr 0x188e5ab47c0 <col:29, col:37> 'const char *' <NoOp>
|   |       |   |   | `-CallExpr 0x188e5ab4670 <col:29, col:37> 'char *'
|   |       |   |   |   `-ImplicitCastExpr 0x188e5ab4658 <col:29> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |   |   |     `-DeclRefExpr 0x188e5ab4638 <col:29> 'char *(void)' Function 0x188e5b971a0 'opt_arg' 'char *(void)'
|   |       |   |   |-ImplicitCastExpr 0x188e5ab47d8 <.//openssl//file_jk/before\apps/apps.h:317:34, col:43> 'unsigned long' <IntegralCast>
|   |       |   |   | `-ParenExpr 0x188e5ab4700 <col:34, col:43> 'long'
|   |       |   |   |   `-BinaryOperator 0x188e5ab46e0 <col:35, col:42> 'long' '<<'
|   |       |   |   |     |-IntegerLiteral 0x188e5ab4690 <col:35> 'long' 1
|   |       |   |   |     `-IntegerLiteral 0x188e5ab46b8 <col:42> 'int' 1
|   |       |   |   `-UnaryOperator 0x188e5ab4758 <.//openssl//file_jk/before\apps\x509.c:212:56, col:57> 'int *' prefix '&' cannot overflow
|   |       |   |     `-DeclRefExpr 0x188e5ab4720 <col:57> 'int' lvalue Var 0x188e5ba69d8 'keyformat' 'int'
|   |       |   `-GotoStmt 0x188e5ab4808 <line:213:17, col:22> 'opthelp' 0x188e5ab3020
|   |       |-BreakStmt 0x188e5ab4838 <line:214:13>
|   |       |-CaseStmt 0x188e5ab4878 <line:215:9, line:217:22>
|   |       | |-ConstantExpr 0x188e5ab4860 <line:215:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab4840 <col:14> 'int' EnumConstant 0x188e5b96080 'OPT_CAFORM' 'int'
|   |       | `-IfStmt 0x188e5ab4aa8 <line:216:13, line:217:22>
|   |       |   |-UnaryOperator 0x188e5ab4a78 <line:216:17, col:65> 'int' prefix '!' cannot overflow
|   |       |   | `-CallExpr 0x188e5ab4a10 <col:18, col:65> 'int'
|   |       |   |   |-ImplicitCastExpr 0x188e5ab49f8 <col:18> 'int (*)(const char *, unsigned long, int *)' <FunctionToPointerDecay>
|   |       |   |   | `-DeclRefExpr 0x188e5ab48a0 <col:18> 'int (const char *, unsigned long, int *)' Function 0x188e5b8b420 'opt_format' 'int (const char *, unsigned long, int *)'
|   |       |   |   |-ImplicitCastExpr 0x188e5ab4a48 <col:29, col:37> 'const char *' <NoOp>
|   |       |   |   | `-CallExpr 0x188e5ab48f8 <col:29, col:37> 'char *'
|   |       |   |   |   `-ImplicitCastExpr 0x188e5ab48e0 <col:29> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |   |   |     `-DeclRefExpr 0x188e5ab48c0 <col:29> 'char *(void)' Function 0x188e5b971a0 'opt_arg' 'char *(void)'
|   |       |   |   |-ImplicitCastExpr 0x188e5ab4a60 <.//openssl//file_jk/before\apps/apps.h:317:34, col:43> 'unsigned long' <IntegralCast>
|   |       |   |   | `-ParenExpr 0x188e5ab4988 <col:34, col:43> 'long'
|   |       |   |   |   `-BinaryOperator 0x188e5ab4968 <col:35, col:42> 'long' '<<'
|   |       |   |   |     |-IntegerLiteral 0x188e5ab4918 <col:35> 'long' 1
|   |       |   |   |     `-IntegerLiteral 0x188e5ab4940 <col:42> 'int' 1
|   |       |   |   `-UnaryOperator 0x188e5ab49e0 <.//openssl//file_jk/before\apps\x509.c:216:56, col:57> 'int *' prefix '&' cannot overflow
|   |       |   |     `-DeclRefExpr 0x188e5ab49a8 <col:57> 'int' lvalue Var 0x188e5ba6280 'CAformat' 'int'
|   |       |   `-GotoStmt 0x188e5ab4a90 <line:217:17, col:22> 'opthelp' 0x188e5ab3020
|   |       |-BreakStmt 0x188e5ab4ac0 <line:218:13>
|   |       |-CaseStmt 0x188e5ab4b00 <line:219:9, line:221:22>
|   |       | |-ConstantExpr 0x188e5ab4ae8 <line:219:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab4ac8 <col:14> 'int' EnumConstant 0x188e5b960d8 'OPT_CAKEYFORM' 'int'
|   |       | `-IfStmt 0x188e5aab360 <line:220:13, line:221:22>
|   |       |   |-UnaryOperator 0x188e5aab330 <line:220:17, col:65> 'int' prefix '!' cannot overflow
|   |       |   | `-CallExpr 0x188e5aab2c8 <col:18, col:65> 'int'
|   |       |   |   |-ImplicitCastExpr 0x188e5aab2b0 <col:18> 'int (*)(const char *, unsigned long, int *)' <FunctionToPointerDecay>
|   |       |   |   | `-DeclRefExpr 0x188e5ab4b28 <col:18> 'int (const char *, unsigned long, int *)' Function 0x188e5b8b420 'opt_format' 'int (const char *, unsigned long, int *)'
|   |       |   |   |-ImplicitCastExpr 0x188e5aab300 <col:29, col:37> 'const char *' <NoOp>
|   |       |   |   | `-CallExpr 0x188e5ab4b80 <col:29, col:37> 'char *'
|   |       |   |   |   `-ImplicitCastExpr 0x188e5ab4b68 <col:29> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |   |   |     `-DeclRefExpr 0x188e5ab4b48 <col:29> 'char *(void)' Function 0x188e5b971a0 'opt_arg' 'char *(void)'
|   |       |   |   |-ImplicitCastExpr 0x188e5aab318 <.//openssl//file_jk/before\apps/apps.h:329:26, line:332:64> 'unsigned long' <IntegralCast>
|   |       |   |   | `-ParenExpr 0x188e5aab240 <line:329:26, line:332:64> 'long'
|   |       |   |   |   `-BinaryOperator 0x188e5aab220 <line:317:34, line:326:43> 'long' '|'
|   |       |   |   |     |-BinaryOperator 0x188e5aab170 <line:317:34, line:325:43> 'long' '|'
|   |       |   |   |     | |-BinaryOperator 0x188e5aab0c0 <line:317:34, line:324:43> 'long' '|'
|   |       |   |   |     | | |-BinaryOperator 0x188e5aab010 <line:317:34, line:323:43> 'long' '|'
|   |       |   |   |     | | | |-BinaryOperator 0x188e5ab4f80 <line:317:34, line:322:43> 'long' '|'
|   |       |   |   |     | | | | |-BinaryOperator 0x188e5ab4ed0 <line:317:34, line:321:43> 'long' '|'
|   |       |   |   |     | | | | | |-BinaryOperator 0x188e5ab4e20 <line:317:34, line:320:43> 'long' '|'
|   |       |   |   |     | | | | | | |-BinaryOperator 0x188e5ab4d70 <line:317:34, line:319:43> 'long' '|'
|   |       |   |   |     | | | | | | | |-BinaryOperator 0x188e5ab4cc0 <line:317:34, line:318:43> 'long' '|'
|   |       |   |   |     | | | | | | | | |-ParenExpr 0x188e5ab4c10 <line:317:34, col:43> 'long'
|   |       |   |   |     | | | | | | | | | `-BinaryOperator 0x188e5ab4bf0 <col:35, col:42> 'long' '<<'
|   |       |   |   |     | | | | | | | | |   |-IntegerLiteral 0x188e5ab4ba0 <col:35> 'long' 1
|   |       |   |   |     | | | | | | | | |   `-IntegerLiteral 0x188e5ab4bc8 <col:42> 'int' 1
|   |       |   |   |     | | | | | | | | `-ParenExpr 0x188e5ab4ca0 <line:318:34, col:43> 'long'
|   |       |   |   |     | | | | | | | |   `-BinaryOperator 0x188e5ab4c80 <col:35, col:42> 'long' '<<'
|   |       |   |   |     | | | | | | | |     |-IntegerLiteral 0x188e5ab4c30 <col:35> 'long' 1
|   |       |   |   |     | | | | | | | |     `-IntegerLiteral 0x188e5ab4c58 <col:42> 'int' 2
|   |       |   |   |     | | | | | | | `-ParenExpr 0x188e5ab4d50 <line:319:34, col:43> 'long'
|   |       |   |   |     | | | | | | |   `-BinaryOperator 0x188e5ab4d30 <col:35, col:42> 'long' '<<'
|   |       |   |   |     | | | | | | |     |-IntegerLiteral 0x188e5ab4ce0 <col:35> 'long' 1
|   |       |   |   |     | | | | | | |     `-IntegerLiteral 0x188e5ab4d08 <col:42> 'int' 3
|   |       |   |   |     | | | | | | `-ParenExpr 0x188e5ab4e00 <line:320:34, col:43> 'long'
|   |       |   |   |     | | | | | |   `-BinaryOperator 0x188e5ab4de0 <col:35, col:42> 'long' '<<'
|   |       |   |   |     | | | | | |     |-IntegerLiteral 0x188e5ab4d90 <col:35> 'long' 1
|   |       |   |   |     | | | | | |     `-IntegerLiteral 0x188e5ab4db8 <col:42> 'int' 4
|   |       |   |   |     | | | | | `-ParenExpr 0x188e5ab4eb0 <line:321:34, col:43> 'long'
|   |       |   |   |     | | | | |   `-BinaryOperator 0x188e5ab4e90 <col:35, col:42> 'long' '<<'
|   |       |   |   |     | | | | |     |-IntegerLiteral 0x188e5ab4e40 <col:35> 'long' 1
|   |       |   |   |     | | | | |     `-IntegerLiteral 0x188e5ab4e68 <col:42> 'int' 5
|   |       |   |   |     | | | | `-ParenExpr 0x188e5ab4f60 <line:322:34, col:43> 'long'
|   |       |   |   |     | | | |   `-BinaryOperator 0x188e5ab4f40 <col:35, col:42> 'long' '<<'
|   |       |   |   |     | | | |     |-IntegerLiteral 0x188e5ab4ef0 <col:35> 'long' 1
|   |       |   |   |     | | | |     `-IntegerLiteral 0x188e5ab4f18 <col:42> 'int' 6
|   |       |   |   |     | | | `-ParenExpr 0x188e5aaaff0 <line:323:34, col:43> 'long'
|   |       |   |   |     | | |   `-BinaryOperator 0x188e5aaafd0 <col:35, col:42> 'long' '<<'
|   |       |   |   |     | | |     |-IntegerLiteral 0x188e5aaaf80 <col:35> 'long' 1
|   |       |   |   |     | | |     `-IntegerLiteral 0x188e5aaafa8 <col:42> 'int' 7
|   |       |   |   |     | | `-ParenExpr 0x188e5aab0a0 <line:324:34, col:43> 'long'
|   |       |   |   |     | |   `-BinaryOperator 0x188e5aab080 <col:35, col:42> 'long' '<<'
|   |       |   |   |     | |     |-IntegerLiteral 0x188e5aab030 <col:35> 'long' 1
|   |       |   |   |     | |     `-IntegerLiteral 0x188e5aab058 <col:42> 'int' 8
|   |       |   |   |     | `-ParenExpr 0x188e5aab150 <line:325:34, col:43> 'long'
|   |       |   |   |     |   `-BinaryOperator 0x188e5aab130 <col:35, col:42> 'long' '<<'
|   |       |   |   |     |     |-IntegerLiteral 0x188e5aab0e0 <col:35> 'long' 1
|   |       |   |   |     |     `-IntegerLiteral 0x188e5aab108 <col:42> 'int' 9
|   |       |   |   |     `-ParenExpr 0x188e5aab200 <line:326:34, col:43> 'long'
|   |       |   |   |       `-BinaryOperator 0x188e5aab1e0 <col:35, col:41> 'long' '<<'
|   |       |   |   |         |-IntegerLiteral 0x188e5aab190 <col:35> 'long' 1
|   |       |   |   |         `-IntegerLiteral 0x188e5aab1b8 <col:41> 'int' 10
|   |       |   |   `-UnaryOperator 0x188e5aab298 <.//openssl//file_jk/before\apps\x509.c:220:53, col:54> 'int *' prefix '&' cannot overflow
|   |       |   |     `-DeclRefExpr 0x188e5aab260 <col:54> 'int' lvalue Var 0x188e5ba6390 'CAkeyformat' 'int'
|   |       |   `-GotoStmt 0x188e5aab348 <line:221:17, col:22> 'opthelp' 0x188e5ab3020
|   |       |-BreakStmt 0x188e5aab378 <line:222:13>
|   |       |-CaseStmt 0x188e5aab3b8 <line:223:9, line:224:31>
|   |       | |-ConstantExpr 0x188e5aab3a0 <line:223:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5aab380 <col:14> 'int' EnumConstant 0x188e5b96340 'OPT_OUT' 'int'
|   |       | `-BinaryOperator 0x188e5aab470 <line:224:13, col:31> 'char *' '='
|   |       |   |-DeclRefExpr 0x188e5aab3e0 <col:13> 'char *' lvalue Var 0x188e5ba58f8 'outfile' 'char *'
|   |       |   `-CallExpr 0x188e5aab450 <col:23, col:31> 'char *'
|   |       |     `-ImplicitCastExpr 0x188e5aab438 <col:23> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x188e5aab418 <col:23> 'char *(void)' Function 0x188e5b971a0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x188e5aab490 <line:225:13>
|   |       |-CaseStmt 0x188e5aab4d0 <line:226:9, line:227:35>
|   |       | |-ConstantExpr 0x188e5aab4b8 <line:226:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5aab498 <col:14> 'int' EnumConstant 0x188e5b96028 'OPT_REQ' 'int'
|   |       | `-BinaryOperator 0x188e5aab5b0 <line:227:13, col:35> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5aab4f8 <col:13> 'int' lvalue Var 0x188e5ba6580 'reqfile' 'int'
|   |       |   `-BinaryOperator 0x188e5aab590 <col:23, col:35> 'int' '='
|   |       |     |-DeclRefExpr 0x188e5aab530 <col:23> 'int' lvalue Var 0x188e5ba6628 'need_rand' 'int'
|   |       |     `-IntegerLiteral 0x188e5aab568 <col:35> 'int' 1
|   |       |-BreakStmt 0x188e5aab5d0 <line:228:13>
|   |       |-CaseStmt 0x188e5aab610 <line:230:9, <invalid sloc>>
|   |       | |-ConstantExpr 0x188e5aab5f8 <col:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5aab5d8 <col:14> 'int' EnumConstant 0x188e5b96130 'OPT_SIGOPT' 'int'
|   |       | `-NullStmt 0x188e5aab780 <<invalid sloc>>
|   |       |-IfStmt 0x188e5aab920 <line:233:13, line:234:22>
|   |       | |-OpaqueValueExpr 0x188e5aab908 <<invalid sloc>> '_Bool'
|   |       | `-GotoStmt 0x188e5aab8f0 <col:17, col:22> 'opthelp' 0x188e5ab3020
|   |       |-BreakStmt 0x188e5aab938 <line:235:13>
|   |       |-CaseStmt 0x188e5aab978 <line:236:9, line:237:34>
|   |       | |-ConstantExpr 0x188e5aab960 <line:236:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5aab940 <col:14> 'int' EnumConstant 0x188e5b96188 'OPT_DAYS' 'int'
|   |       | `-BinaryOperator 0x188e5aabb00 <line:237:13, col:34> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5aab9a0 <col:13> 'int' lvalue Var 0x188e5ba5ef0 'days' 'int'
|   |       |   `-CallExpr 0x188e5aabac0 <col:20, col:34> 'int'
|   |       |     |-ImplicitCastExpr 0x188e5aabaa8 <col:20> 'int (*)(const char *) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |       |     | `-DeclRefExpr 0x188e5aab9d8 <col:20> 'int (const char *) __attribute__((cdecl))':'int (const char *)' Function 0x188e5a66b70 'atoi' 'int (const char *) __attribute__((cdecl))':'int (const char *)'
|   |       |     `-ImplicitCastExpr 0x188e5aabae8 <col:25, col:33> 'const char *' <NoOp>
|   |       |       `-CallExpr 0x188e5aaba30 <col:25, col:33> 'char *'
|   |       |         `-ImplicitCastExpr 0x188e5aaba18 <col:25> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |           `-DeclRefExpr 0x188e5aab9f8 <col:25> 'char *(void)' Function 0x188e5b971a0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x188e5aabb20 <line:238:13>
|   |       |-CaseStmt 0x188e5aabb60 <line:239:9, line:240:33>
|   |       | |-ConstantExpr 0x188e5aabb48 <line:239:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5aabb28 <col:14> 'int' EnumConstant 0x188e5b961e0 'OPT_PASSIN' 'int'
|   |       | `-BinaryOperator 0x188e5aabc18 <line:240:13, col:33> 'char *' '='
|   |       |   |-DeclRefExpr 0x188e5aabb88 <col:13> 'char *' lvalue Var 0x188e5ba5678 'passinarg' 'char *'
|   |       |   `-CallExpr 0x188e5aabbf8 <col:25, col:33> 'char *'
|   |       |     `-ImplicitCastExpr 0x188e5aabbe0 <col:25> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x188e5aabbc0 <col:25> 'char *(void)' Function 0x188e5b971a0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x188e5aabc38 <line:241:13>
|   |       |-CaseStmt 0x188e5aabc78 <line:242:9, line:243:31>
|   |       | |-ConstantExpr 0x188e5aabc60 <line:242:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5aabc40 <col:14> 'int' EnumConstant 0x188e5b96238 'OPT_EXTFILE' 'int'
|   |       | `-BinaryOperator 0x188e5aabd30 <line:243:13, col:31> 'char *' '='
|   |       |   |-DeclRefExpr 0x188e5aabca0 <col:13> 'char *' lvalue Var 0x188e5ba5438 'extfile' 'char *'
|   |       |   `-CallExpr 0x188e5aabd10 <col:23, col:31> 'char *'
|   |       |     `-ImplicitCastExpr 0x188e5aabcf8 <col:23> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x188e5aabcd8 <col:23> 'char *(void)' Function 0x188e5b971a0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x188e5aabd50 <line:244:13>
|   |       |-CaseStmt 0x188e5aabd90 <line:245:9, line:246:31>
|   |       | |-ConstantExpr 0x188e5aabd78 <line:245:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5aabd58 <col:14> 'int' EnumConstant 0x188e5b96290 'OPT_EXTENSIONS' 'int'
|   |       | `-BinaryOperator 0x188e5aabe48 <line:246:13, col:31> 'char *' '='
|   |       |   |-DeclRefExpr 0x188e5aabdb8 <col:13> 'char *' lvalue Var 0x188e5ba5318 'extsect' 'char *'
|   |       |   `-CallExpr 0x188e5aabe28 <col:23, col:31> 'char *'
|   |       |     `-ImplicitCastExpr 0x188e5aabe10 <col:23> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x188e5aabdf0 <col:23> 'char *(void)' Function 0x188e5b971a0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x188e5aabe68 <line:247:13>
|   |       |-CaseStmt 0x188e5aabea8 <line:248:9, line:249:31>
|   |       | |-ConstantExpr 0x188e5aabe90 <line:248:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5aabe70 <col:14> 'int' EnumConstant 0x188e5b96398 'OPT_SIGNKEY' 'int'
|   |       | `-BinaryOperator 0x188e5aabf60 <line:249:13, col:31> 'char *' '='
|   |       |   |-DeclRefExpr 0x188e5aabed0 <col:13> 'char *' lvalue Var 0x188e5ba5a18 'keyfile' 'char *'
|   |       |   `-CallExpr 0x188e5aabf40 <col:23, col:31> 'char *'
|   |       |     `-ImplicitCastExpr 0x188e5aabf28 <col:23> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x188e5aabf08 <col:23> 'char *(void)' Function 0x188e5b971a0 'opt_arg' 'char *(void)'
|   |       |-BinaryOperator 0x188e5aac008 <line:250:13, col:27> 'int' '='
|   |       | |-DeclRefExpr 0x188e5aabf80 <col:13> 'int' lvalue Var 0x188e5ba6eb8 'sign_flag' 'int'
|   |       | `-UnaryOperator 0x188e5aabff0 <col:25, col:27> 'int' prefix '++'
|   |       |   `-DeclRefExpr 0x188e5aabfb8 <col:27> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BinaryOperator 0x188e5aac070 <line:251:13, col:25> 'int' '='
|   |       | |-DeclRefExpr 0x188e5aac028 <col:13> 'int' lvalue Var 0x188e5ba6628 'need_rand' 'int'
|   |       | `-IntegerLiteral 0x188e5aac048 <col:25> 'int' 1
|   |       |-BreakStmt 0x188e5aac090 <line:252:13>
|   |       |-CaseStmt 0x188e5aac0d0 <line:253:9, line:254:30>
|   |       | |-ConstantExpr 0x188e5aac0b8 <line:253:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5aac098 <col:14> 'int' EnumConstant 0x188e5b963f0 'OPT_CA' 'int'
|   |       | `-BinaryOperator 0x188e5aac188 <line:254:13, col:30> 'char *' '='
|   |       |   |-DeclRefExpr 0x188e5aac0f8 <col:13> 'char *' lvalue Var 0x188e5ba5b38 'CAfile' 'char *'
|   |       |   `-CallExpr 0x188e5aac168 <col:22, col:30> 'char *'
|   |       |     `-ImplicitCastExpr 0x188e5aac150 <col:22> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x188e5aac130 <col:22> 'char *(void)' Function 0x188e5b971a0 'opt_arg' 'char *(void)'
|   |       |-BinaryOperator 0x188e5aac218 <line:255:13, col:25> 'int' '='
|   |       | |-DeclRefExpr 0x188e5aac1a8 <col:13> 'int' lvalue Var 0x188e5ba6f60 'CA_flag' 'int'
|   |       | `-UnaryOperator 0x188e5aac200 <col:23, col:25> 'int' prefix '++'
|   |       |   `-DeclRefExpr 0x188e5aac1e0 <col:25> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BinaryOperator 0x188e5aac280 <line:256:13, col:25> 'int' '='
|   |       | |-DeclRefExpr 0x188e5aac238 <col:13> 'int' lvalue Var 0x188e5ba6628 'need_rand' 'int'
|   |       | `-IntegerLiteral 0x188e5aac258 <col:25> 'int' 1
|   |       |-BreakStmt 0x188e5aac2a0 <line:257:13>
|   |       |-CaseStmt 0x188e5aac2e0 <line:258:9, line:259:33>
|   |       | |-ConstantExpr 0x188e5aac2c8 <line:258:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5aac2a8 <col:14> 'int' EnumConstant 0x188e5b96448 'OPT_CAKEY' 'int'
|   |       | `-BinaryOperator 0x188e5aac398 <line:259:13, col:33> 'char *' '='
|   |       |   |-DeclRefExpr 0x188e5aac308 <col:13> 'char *' lvalue Var 0x188e5bb0ab8 'CAkeyfile' 'char *'
|   |       |   `-CallExpr 0x188e5aac378 <col:25, col:33> 'char *'
|   |       |     `-ImplicitCastExpr 0x188e5aac360 <col:25> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x188e5aac340 <col:25> 'char *(void)' Function 0x188e5b971a0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x188e5aac3b8 <line:260:13>
|   |       |-CaseStmt 0x188e5aac3f8 <line:261:9, line:262:32>
|   |       | |-ConstantExpr 0x188e5aac3e0 <line:261:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5aac3c0 <col:14> 'int' EnumConstant 0x188e5b964a0 'OPT_CASERIAL' 'int'
|   |       | `-BinaryOperator 0x188e5aac4b0 <line:262:13, col:32> 'char *' '='
|   |       |   |-DeclRefExpr 0x188e5aac420 <col:13> 'char *' lvalue Var 0x188e5bb0bd8 'CAserial' 'char *'
|   |       |   `-CallExpr 0x188e5aac490 <col:24, col:32> 'char *'
|   |       |     `-ImplicitCastExpr 0x188e5aac478 <col:24> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x188e5aac458 <col:24> 'char *(void)' Function 0x188e5b971a0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x188e5aac4d0 <line:263:13>
|   |       |-CaseStmt 0x188e5aac510 <line:264:9, line:268:13>
|   |       | |-ConstantExpr 0x188e5aac4f8 <line:264:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5aac4d8 <col:14> 'int' EnumConstant 0x188e5b964f8 'OPT_SET_SERIAL' 'int'
|   |       | `-IfStmt 0x188e5aac698 <line:265:13, line:268:13>
|   |       |   |-OpaqueValueExpr 0x188e5aac680 <<invalid sloc>> '_Bool'
|   |       |   `-CompoundStmt 0x188e5aac668 <line:265:30, line:268:13>
|   |       |     `-GotoStmt 0x188e5aac650 <line:267:17, col:22> 'opthelp' 0x188e5ab3020
|   |       |-IfStmt 0x188e5aac9a0 <line:269:13, line:270:22>
|   |       | |-OpaqueValueExpr 0x188e5aac988 <<invalid sloc>> '_Bool'
|   |       | `-GotoStmt 0x188e5aac970 <col:17, col:22> 'opthelp' 0x188e5ab3020
|   |       |-BreakStmt 0x188e5aac9b8 <line:271:13>
|   |       |-CaseStmt 0x188e5aac9f8 <line:272:9, line:273:32>
|   |       | |-ConstantExpr 0x188e5aac9e0 <line:272:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5aac9c0 <col:14> 'int' EnumConstant 0x188e5b96550 'OPT_FORCE_PUBKEY' 'int'
|   |       | `-BinaryOperator 0x188e5aacab0 <line:273:13, col:32> 'char *' '='
|   |       |   |-DeclRefExpr 0x188e5aaca20 <col:13> 'char *' lvalue Var 0x188e5ba4d00 'fkeyfile' 'char *'
|   |       |   `-CallExpr 0x188e5aaca90 <col:24, col:32> 'char *'
|   |       |     `-ImplicitCastExpr 0x188e5aaca78 <col:24> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x188e5aaca58 <col:24> 'char *(void)' Function 0x188e5b971a0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x188e5aacad0 <line:274:13>
|   |       |-CaseStmt 0x188e5aacb10 <line:275:9, line:281:13>
|   |       | |-ConstantExpr 0x188e5aacaf8 <line:275:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5aacad8 <col:14> 'int' EnumConstant 0x188e5b965a8 'OPT_ADDTRUST' 'int'
|   |       | `-IfStmt 0x188e5aaceb8 <line:276:13, line:281:13>
|   |       |   |-OpaqueValueExpr 0x188e5aacea0 <<invalid sloc>> '_Bool'
|   |       |   `-CompoundStmt 0x188e5aace88 <line:276:63, line:281:13>
|   |       |     `-GotoStmt 0x188e5aace70 <line:280:17, col:22> 'opthelp' 0x188e5ab3020
|   |       |-IfStmt 0x188e5ab1188 <line:282:13, line:283:22>
|   |       | |-OpaqueValueExpr 0x188e5ab1170 <<invalid sloc>> '_Bool'
|   |       | `-GotoStmt 0x188e5ab1158 <col:17, col:22> 'end' 0x188e5ba8578
|   |       |-BinaryOperator 0x188e5ab1398 <line:286:13, col:24> 'int' '='
|   |       | |-DeclRefExpr 0x188e5ab1338 <col:13> 'int' lvalue Var 0x188e5ba7248 'trustout' 'int'
|   |       | `-IntegerLiteral 0x188e5ab1370 <col:24> 'int' 1
|   |       |-BreakStmt 0x188e5ab13b8 <line:287:13>
|   |       |-CaseStmt 0x188e5ab13f8 <line:288:9, line:294:13>
|   |       | |-ConstantExpr 0x188e5ab13e0 <line:288:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab13c0 <col:14> 'int' EnumConstant 0x188e5b96600 'OPT_ADDREJECT' 'int'
|   |       | `-IfStmt 0x188e5ab16e8 <line:289:13, line:294:13>
|   |       |   |-OpaqueValueExpr 0x188e5ab16d0 <<invalid sloc>> '_Bool'
|   |       |   `-CompoundStmt 0x188e5ab16b8 <line:289:63, line:294:13>
|   |       |     `-GotoStmt 0x188e5ab16a0 <line:293:17, col:22> 'opthelp' 0x188e5ab3020
|   |       |-IfStmt 0x188e5ab1898 <line:295:13, line:297:22>
|   |       | |-OpaqueValueExpr 0x188e5ab1880 <<invalid sloc>> '_Bool'
|   |       | `-GotoStmt 0x188e5ab1868 <col:17, col:22> 'end' 0x188e5ba8578
|   |       |-BinaryOperator 0x188e5ab19a0 <line:300:13, col:24> 'int' '='
|   |       | |-DeclRefExpr 0x188e5ab1958 <col:13> 'int' lvalue Var 0x188e5ba7248 'trustout' 'int'
|   |       | `-IntegerLiteral 0x188e5ab1978 <col:24> 'int' 1
|   |       |-BreakStmt 0x188e5ab19c0 <line:301:13>
|   |       |-CaseStmt 0x188e5ab1a00 <line:302:9, line:303:29>
|   |       | |-ConstantExpr 0x188e5ab19e8 <line:302:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab19c8 <col:14> 'int' EnumConstant 0x188e5b96658 'OPT_SETALIAS' 'int'
|   |       | `-BinaryOperator 0x188e5ab1ab8 <line:303:13, col:29> 'char *' '='
|   |       |   |-DeclRefExpr 0x188e5ab1a28 <col:13> 'char *' lvalue Var 0x188e5ba4e20 'alias' 'char *'
|   |       |   `-CallExpr 0x188e5ab1a98 <col:21, col:29> 'char *'
|   |       |     `-ImplicitCastExpr 0x188e5ab1a80 <col:21> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x188e5ab1a60 <col:21> 'char *(void)' Function 0x188e5b971a0 'opt_arg' 'char *(void)'
|   |       |-BinaryOperator 0x188e5ab1b20 <line:304:13, col:24> 'int' '='
|   |       | |-DeclRefExpr 0x188e5ab1ad8 <col:13> 'int' lvalue Var 0x188e5ba7248 'trustout' 'int'
|   |       | `-IntegerLiteral 0x188e5ab1af8 <col:24> 'int' 1
|   |       |-BreakStmt 0x188e5ab1b40 <line:305:13>
|   |       |-CaseStmt 0x188e5ab1b80 <line:306:9, line:308:22>
|   |       | |-ConstantExpr 0x188e5ab1b68 <line:306:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab1b48 <col:14> 'int' EnumConstant 0x188e5b966b0 'OPT_CERTOPT' 'int'
|   |       | `-IfStmt 0x188e5ab1d28 <line:307:13, line:308:22>
|   |       |   |-UnaryOperator 0x188e5ab1cf8 <line:307:17, col:50> 'int' prefix '!' cannot overflow
|   |       |   | `-CallExpr 0x188e5ab1cb0 <col:18, col:50> 'int'
|   |       |   |   |-ImplicitCastExpr 0x188e5ab1c98 <col:18> 'int (*)(unsigned long *, const char *)' <FunctionToPointerDecay>
|   |       |   |   | `-DeclRefExpr 0x188e5ab1ba8 <col:18> 'int (unsigned long *, const char *)' Function 0x188e5b93eb0 'set_cert_ex' 'int (unsigned long *, const char *)'
|   |       |   |   |-UnaryOperator 0x188e5ab1c00 <col:30, col:31> 'unsigned long *' prefix '&' cannot overflow
|   |       |   |   | `-DeclRefExpr 0x188e5ab1bc8 <col:31> 'unsigned long' lvalue Var 0x188e5ba7f48 'certflag' 'unsigned long'
|   |       |   |   `-ImplicitCastExpr 0x188e5ab1ce0 <col:41, col:49> 'const char *' <NoOp>
|   |       |   |     `-CallExpr 0x188e5ab1c50 <col:41, col:49> 'char *'
|   |       |   |       `-ImplicitCastExpr 0x188e5ab1c38 <col:41> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |   |         `-DeclRefExpr 0x188e5ab1c18 <col:41> 'char *(void)' Function 0x188e5b971a0 'opt_arg' 'char *(void)'
|   |       |   `-GotoStmt 0x188e5ab1d10 <line:308:17, col:22> 'opthelp' 0x188e5ab3020
|   |       |-BreakStmt 0x188e5ab1d40 <line:309:13>
|   |       |-CaseStmt 0x188e5ab1d80 <line:310:9, line:311:26>
|   |       | |-ConstantExpr 0x188e5ab1d68 <line:310:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab1d48 <col:14> 'int' EnumConstant 0x188e5b96708 'OPT_NAMEOPT' 'int'
|   |       | `-BinaryOperator 0x188e5ab1e20 <line:311:13, col:26> 'char' '='
|   |       |   |-DeclRefExpr 0x188e5ab1da8 <col:13> 'char' lvalue Var 0x188e5ba8030 'nmflag_set' 'char'
|   |       |   `-ImplicitCastExpr 0x188e5ab1e08 <col:26> 'char' <IntegralCast>
|   |       |     `-IntegerLiteral 0x188e5ab1de0 <col:26> 'int' 1
|   |       |-IfStmt 0x188e5ab1f98 <line:312:13, line:313:22>
|   |       | |-UnaryOperator 0x188e5ab1f68 <line:312:17, col:48> 'int' prefix '!' cannot overflow
|   |       | | `-CallExpr 0x188e5ab1f20 <col:18, col:48> 'int'
|   |       | |   |-ImplicitCastExpr 0x188e5ab1f08 <col:18> 'int (*)(unsigned long *, const char *)' <FunctionToPointerDecay>
|   |       | |   | `-DeclRefExpr 0x188e5ab1e40 <col:18> 'int (unsigned long *, const char *)' Function 0x188e5b940e0 'set_name_ex' 'int (unsigned long *, const char *)'
|   |       | |   |-UnaryOperator 0x188e5ab1e98 <col:30, col:31> 'unsigned long *' prefix '&' cannot overflow
|   |       | |   | `-DeclRefExpr 0x188e5ab1e60 <col:31> 'unsigned long' lvalue Var 0x188e5ba7e88 'nmflag' 'unsigned long'
|   |       | |   `-ImplicitCastExpr 0x188e5ab1f50 <col:39, col:47> 'const char *' <NoOp>
|   |       | |     `-CallExpr 0x188e5ab1ee8 <col:39, col:47> 'char *'
|   |       | |       `-ImplicitCastExpr 0x188e5ab1ed0 <col:39> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       | |         `-DeclRefExpr 0x188e5ab1eb0 <col:39> 'char *(void)' Function 0x188e5b971a0 'opt_arg' 'char *(void)'
|   |       | `-GotoStmt 0x188e5ab1f80 <line:313:17, col:22> 'opthelp' 0x188e5ab3020
|   |       |-BreakStmt 0x188e5ab1fb0 <line:314:13>
|   |       |-CaseStmt 0x188e5ab1ff0 <line:315:9, <invalid sloc>>
|   |       | |-ConstantExpr 0x188e5ab1fd8 <col:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab1fb8 <col:14> 'int' EnumConstant 0x188e5bab410 'OPT_ENGINE' 'int'
|   |       | `-NullStmt 0x188e5ab2098 <<invalid sloc>>
|   |       |-BreakStmt 0x188e5ab20a0 <line:317:13>
|   |       |-CaseStmt 0x188e5ab20e0 <line:318:9, line:319:19>
|   |       | |-ConstantExpr 0x188e5ab20c8 <line:318:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab20a8 <col:14> 'int' EnumConstant 0x188e5b96760 'OPT_C' 'int'
|   |       | `-BinaryOperator 0x188e5ab2178 <line:319:13, col:19> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab2108 <col:13> 'int' lvalue Var 0x188e5ba61d8 'C' 'int'
|   |       |   `-UnaryOperator 0x188e5ab2160 <col:17, col:19> 'int' prefix '++'
|   |       |     `-DeclRefExpr 0x188e5ab2140 <col:19> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BreakStmt 0x188e5ab2198 <line:320:13>
|   |       |-CaseStmt 0x188e5ab21d8 <line:321:9, line:322:23>
|   |       | |-ConstantExpr 0x188e5ab21c0 <line:321:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab21a0 <col:14> 'int' EnumConstant 0x188e5b967b8 'OPT_EMAIL' 'int'
|   |       | `-BinaryOperator 0x188e5ab2270 <line:322:13, col:23> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab2200 <col:13> 'int' lvalue Var 0x188e5ba70b0 'email' 'int'
|   |       |   `-UnaryOperator 0x188e5ab2258 <col:21, col:23> 'int' prefix '++'
|   |       |     `-DeclRefExpr 0x188e5ab2238 <col:23> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BreakStmt 0x188e5ab2290 <line:323:13>
|   |       |-CaseStmt 0x188e5ab22d0 <line:324:9, line:325:26>
|   |       | |-ConstantExpr 0x188e5ab22b8 <line:324:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab2298 <col:14> 'int' EnumConstant 0x188e5b96810 'OPT_OCSP_URI' 'int'
|   |       | `-BinaryOperator 0x188e5ab2368 <line:325:13, col:26> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab22f8 <col:13> 'int' lvalue Var 0x188e5ba71a0 'ocsp_uri' 'int'
|   |       |   `-UnaryOperator 0x188e5ab2350 <col:24, col:26> 'int' prefix '++'
|   |       |     `-DeclRefExpr 0x188e5ab2330 <col:26> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BreakStmt 0x188e5ab2388 <line:326:13>
|   |       |-CaseStmt 0x188e5ab23c8 <line:327:9, line:328:24>
|   |       | |-ConstantExpr 0x188e5ab23b0 <line:327:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab2390 <col:14> 'int' EnumConstant 0x188e5b96868 'OPT_SERIAL' 'int'
|   |       | `-BinaryOperator 0x188e5ab2460 <line:328:13, col:24> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab23f0 <col:13> 'int' lvalue Var 0x188e5ba79f0 'serial' 'int'
|   |       |   `-UnaryOperator 0x188e5ab2448 <col:22, col:24> 'int' prefix '++'
|   |       |     `-DeclRefExpr 0x188e5ab2428 <col:24> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BreakStmt 0x188e5ab2480 <line:329:13>
|   |       |-CaseStmt 0x188e5ab24c0 <line:330:9, line:331:29>
|   |       | |-ConstantExpr 0x188e5ab24a8 <line:330:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab2488 <col:14> 'int' EnumConstant 0x188e5b968c0 'OPT_NEXT_SERIAL' 'int'
|   |       | `-BinaryOperator 0x188e5ab2558 <line:331:13, col:29> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab24e8 <col:13> 'int' lvalue Var 0x188e5ba6b20 'next_serial' 'int'
|   |       |   `-UnaryOperator 0x188e5ab2540 <col:27, col:29> 'int' prefix '++'
|   |       |     `-DeclRefExpr 0x188e5ab2520 <col:29> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BreakStmt 0x188e5ab2578 <line:332:13>
|   |       |-CaseStmt 0x188e5ab25b8 <line:333:9, line:334:25>
|   |       | |-ConstantExpr 0x188e5ab25a0 <line:333:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab2580 <col:14> 'int' EnumConstant 0x188e5b96918 'OPT_MODULUS' 'int'
|   |       | `-BinaryOperator 0x188e5ab2650 <line:334:13, col:25> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab25e0 <col:13> 'int' lvalue Var 0x188e5ba5f98 'modulus' 'int'
|   |       |   `-UnaryOperator 0x188e5ab2638 <col:23, col:25> 'int' prefix '++'
|   |       |     `-DeclRefExpr 0x188e5ab2618 <col:25> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BreakStmt 0x188e5ab2670 <line:335:13>
|   |       |-CaseStmt 0x188e5ab26b0 <line:336:9, line:337:24>
|   |       | |-ConstantExpr 0x188e5ab2698 <line:336:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab2678 <col:14> 'int' EnumConstant 0x188e5b96970 'OPT_PUBKEY' 'int'
|   |       | `-BinaryOperator 0x188e5ab2748 <line:337:13, col:24> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab26d8 <col:13> 'int' lvalue Var 0x188e5ba6040 'pubkey' 'int'
|   |       |   `-UnaryOperator 0x188e5ab2730 <col:22, col:24> 'int' prefix '++'
|   |       |     `-DeclRefExpr 0x188e5ab2710 <col:24> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BreakStmt 0x188e5ab2768 <line:338:13>
|   |       |-CaseStmt 0x188e5ab27a8 <line:339:9, line:340:25>
|   |       | |-ConstantExpr 0x188e5ab2790 <line:339:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab2770 <col:14> 'int' EnumConstant 0x188e5b969c8 'OPT_X509TOREQ' 'int'
|   |       | `-BinaryOperator 0x188e5ab2840 <line:340:13, col:25> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab27d0 <col:13> 'int' lvalue Var 0x188e5ba5e48 'x509req' 'int'
|   |       |   `-UnaryOperator 0x188e5ab2828 <col:23, col:25> 'int' prefix '++'
|   |       |     `-DeclRefExpr 0x188e5ab2808 <col:25> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BreakStmt 0x188e5ab2860 <line:341:13>
|   |       |-CaseStmt 0x188e5ab28a0 <line:342:9, line:343:22>
|   |       | |-ConstantExpr 0x188e5ab2888 <line:342:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab2868 <col:14> 'int' EnumConstant 0x188e5b96a20 'OPT_TEXT' 'int'
|   |       | `-BinaryOperator 0x188e5ab2938 <line:343:13, col:22> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab28c8 <col:13> 'int' lvalue Var 0x188e5ba7948 'text' 'int'
|   |       |   `-UnaryOperator 0x188e5ab2920 <col:20, col:22> 'int' prefix '++'
|   |       |     `-DeclRefExpr 0x188e5ab2900 <col:22> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BreakStmt 0x188e5ab2958 <line:344:13>
|   |       |-CaseStmt 0x188e5ab2998 <line:345:9, line:346:25>
|   |       | |-ConstantExpr 0x188e5ab2980 <line:345:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab2960 <col:14> 'int' EnumConstant 0x188e5b96b28 'OPT_SUBJECT' 'int'
|   |       | `-BinaryOperator 0x188e5ab2a30 <line:346:13, col:25> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab29c0 <col:13> 'int' lvalue Var 0x188e5ba7a98 'subject' 'int'
|   |       |   `-UnaryOperator 0x188e5ab2a18 <col:23, col:25> 'int' prefix '++'
|   |       |     `-DeclRefExpr 0x188e5ab29f8 <col:25> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BreakStmt 0x188e5ab2a50 <line:347:13>
|   |       |-CaseStmt 0x188e5ab2a90 <line:348:9, line:349:24>
|   |       | |-ConstantExpr 0x188e5ab2a78 <line:348:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab2a58 <col:14> 'int' EnumConstant 0x188e5b96b80 'OPT_ISSUER' 'int'
|   |       | `-BinaryOperator 0x188e5ab2b28 <line:349:13, col:24> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab2ab8 <col:13> 'int' lvalue Var 0x188e5ba7b40 'issuer' 'int'
|   |       |   `-UnaryOperator 0x188e5ab2b10 <col:22, col:24> 'int' prefix '++'
|   |       |     `-DeclRefExpr 0x188e5ab2af0 <col:24> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BreakStmt 0x188e5ab2b48 <line:350:13>
|   |       |-CaseStmt 0x188e5ab2b88 <line:351:9, line:352:29>
|   |       | |-ConstantExpr 0x188e5ab2b70 <line:351:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab2b50 <col:14> 'int' EnumConstant 0x188e5b96bd8 'OPT_FINGERPRINT' 'int'
|   |       | `-BinaryOperator 0x188e5ab2c20 <line:352:13, col:29> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab2bb0 <col:13> 'int' lvalue Var 0x188e5ba64d8 'fingerprint' 'int'
|   |       |   `-UnaryOperator 0x188e5ab2c08 <col:27, col:29> 'int' prefix '++'
|   |       |     `-DeclRefExpr 0x188e5ab2be8 <col:29> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BreakStmt 0x188e5ab2c40 <line:353:13>
|   |       |-CaseStmt 0x188e5ab2c80 <line:354:9, line:355:30>
|   |       | |-ConstantExpr 0x188e5ab2c68 <line:354:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab2c48 <col:14> 'int' EnumConstant 0x188e5b96a78 'OPT_HASH' 'int'
|   |       | `-BinaryOperator 0x188e5ab2d18 <line:355:13, col:30> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab2ca8 <col:13> 'int' lvalue Var 0x188e5ba6bc8 'subject_hash' 'int'
|   |       |   `-UnaryOperator 0x188e5ab2d00 <col:28, col:30> 'int' prefix '++'
|   |       |     `-DeclRefExpr 0x188e5ab2ce0 <col:30> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BreakStmt 0x188e5ab2d38 <line:356:13>
|   |       |-CaseStmt 0x188e5ab2d78 <line:357:9, line:358:29>
|   |       | |-ConstantExpr 0x188e5ab2d60 <line:357:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab2d40 <col:14> 'int' EnumConstant 0x188e5b96ad0 'OPT_ISSUER_HASH' 'int'
|   |       | `-BinaryOperator 0x188e5ab2e10 <line:358:13, col:29> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab2da0 <col:13> 'int' lvalue Var 0x188e5ba6c70 'issuer_hash' 'int'
|   |       |   `-UnaryOperator 0x188e5ab2df8 <col:27, col:29> 'int' prefix '++'
|   |       |     `-DeclRefExpr 0x188e5ab2dd8 <col:29> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BreakStmt 0x188e5ab2e30 <line:359:13>
|   |       |-CaseStmt 0x188e5ab2e70 <line:360:9, line:361:24>
|   |       | |-ConstantExpr 0x188e5ab2e58 <line:360:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab2e38 <col:14> 'int' EnumConstant 0x188e5baad88 'OPT_PURPOSE' 'int'
|   |       | `-BinaryOperator 0x188e5ab2f08 <line:361:13, col:24> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab2e98 <col:13> 'int' lvalue Var 0x188e5ba60e8 'pprint' 'int'
|   |       |   `-UnaryOperator 0x188e5ab2ef0 <col:22, col:24> 'int' prefix '++'
|   |       |     `-DeclRefExpr 0x188e5ab2ed0 <col:24> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BreakStmt 0x188e5ab2f28 <line:362:13>
|   |       |-CaseStmt 0x188e5ab2f68 <line:363:9, line:364:27>
|   |       | |-ConstantExpr 0x188e5ab2f50 <line:363:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab2f30 <col:14> 'int' EnumConstant 0x188e5baade0 'OPT_STARTDATE' 'int'
|   |       | `-BinaryOperator 0x188e5ab5020 <line:364:13, col:27> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab2f90 <col:13> 'int' lvalue Var 0x188e5ba7be8 'startdate' 'int'
|   |       |   `-UnaryOperator 0x188e5ab5008 <col:25, col:27> 'int' prefix '++'
|   |       |     `-DeclRefExpr 0x188e5ab4fe8 <col:27> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BreakStmt 0x188e5ab5040 <line:365:13>
|   |       |-CaseStmt 0x188e5ab5080 <line:366:9, line:367:25>
|   |       | |-ConstantExpr 0x188e5ab5068 <line:366:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab5048 <col:14> 'int' EnumConstant 0x188e5baae38 'OPT_ENDDATE' 'int'
|   |       | `-BinaryOperator 0x188e5ab5118 <line:367:13, col:25> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab50a8 <col:13> 'int' lvalue Var 0x188e5ba7cd8 'enddate' 'int'
|   |       |   `-UnaryOperator 0x188e5ab5100 <col:23, col:25> 'int' prefix '++'
|   |       |     `-DeclRefExpr 0x188e5ab50e0 <col:25> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BreakStmt 0x188e5ab5138 <line:368:13>
|   |       |-CaseStmt 0x188e5ab5178 <line:369:9, line:370:23>
|   |       | |-ConstantExpr 0x188e5ab5160 <line:369:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab5140 <col:14> 'int' EnumConstant 0x188e5baaff0 'OPT_NOOUT' 'int'
|   |       | `-BinaryOperator 0x188e5ab5210 <line:370:13, col:23> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab51a0 <col:13> 'int' lvalue Var 0x188e5ba6e10 'noout' 'int'
|   |       |   `-UnaryOperator 0x188e5ab51f8 <col:21, col:23> 'int' prefix '++'
|   |       |     `-DeclRefExpr 0x188e5ab51d8 <col:23> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BreakStmt 0x188e5ab5230 <line:371:13>
|   |       |-CaseStmt 0x188e5ab5270 <line:372:9, line:373:22>
|   |       | |-ConstantExpr 0x188e5ab5258 <line:372:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab5238 <col:14> 'int' EnumConstant 0x188e5bab468 'OPT_NOCERT' 'int'
|   |       | `-BinaryOperator 0x188e5ab52f8 <line:373:13, col:22> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab5298 <col:13> 'int' lvalue Var 0x188e5ba7850 'nocert' 'int'
|   |       |   `-IntegerLiteral 0x188e5ab52d0 <col:22> 'int' 1
|   |       |-BreakStmt 0x188e5ab5318 <line:374:13>
|   |       |-CaseStmt 0x188e5ab5358 <line:375:9, line:376:24>
|   |       | |-ConstantExpr 0x188e5ab5340 <line:375:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab5320 <col:14> 'int' EnumConstant 0x188e5bab048 'OPT_TRUSTOUT' 'int'
|   |       | `-BinaryOperator 0x188e5ab53c8 <line:376:13, col:24> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab5380 <col:13> 'int' lvalue Var 0x188e5ba7248 'trustout' 'int'
|   |       |   `-IntegerLiteral 0x188e5ab53a0 <col:24> 'int' 1
|   |       |-BreakStmt 0x188e5ab53e8 <line:377:13>
|   |       |-CaseStmt 0x188e5ab5428 <line:378:9, line:379:26>
|   |       | |-ConstantExpr 0x188e5ab5410 <line:378:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab53f0 <col:14> 'int' EnumConstant 0x188e5bab0a0 'OPT_CLRTRUST' 'int'
|   |       | `-BinaryOperator 0x188e5ab54c0 <line:379:13, col:26> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab5450 <col:13> 'int' lvalue Var 0x188e5ba72f0 'clrtrust' 'int'
|   |       |   `-UnaryOperator 0x188e5ab54a8 <col:24, col:26> 'int' prefix '++'
|   |       |     `-DeclRefExpr 0x188e5ab5488 <col:26> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BreakStmt 0x188e5ab54e0 <line:380:13>
|   |       |-CaseStmt 0x188e5ab5520 <line:381:9, line:382:27>
|   |       | |-ConstantExpr 0x188e5ab5508 <line:381:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab54e8 <col:14> 'int' EnumConstant 0x188e5bab0f8 'OPT_CLRREJECT' 'int'
|   |       | `-BinaryOperator 0x188e5ab55b8 <line:382:13, col:27> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab5548 <col:13> 'int' lvalue Var 0x188e5ba7398 'clrreject' 'int'
|   |       |   `-UnaryOperator 0x188e5ab55a0 <col:25, col:27> 'int' prefix '++'
|   |       |     `-DeclRefExpr 0x188e5ab5580 <col:27> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BreakStmt 0x188e5ab55d8 <line:383:13>
|   |       |-CaseStmt 0x188e5ab5618 <line:384:9, line:385:26>
|   |       | |-ConstantExpr 0x188e5ab5600 <line:384:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab55e0 <col:14> 'int' EnumConstant 0x188e5bab150 'OPT_ALIAS' 'int'
|   |       | `-BinaryOperator 0x188e5ab56b0 <line:385:13, col:26> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab5640 <col:13> 'int' lvalue Var 0x188e5ba7440 'aliasout' 'int'
|   |       |   `-UnaryOperator 0x188e5ab5698 <col:24, col:26> 'int' prefix '++'
|   |       |     `-DeclRefExpr 0x188e5ab5678 <col:26> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BreakStmt 0x188e5ab56d0 <line:386:13>
|   |       |-CaseStmt 0x188e5ab5710 <line:387:9, line:388:33>
|   |       | |-ConstantExpr 0x188e5ab56f8 <line:387:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab56d8 <col:14> 'int' EnumConstant 0x188e5bab1a8 'OPT_CACREATESERIAL' 'int'
|   |       | `-BinaryOperator 0x188e5ab57a8 <line:388:13, col:33> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab5738 <col:13> 'int' lvalue Var 0x188e5ba7008 'CA_createserial' 'int'
|   |       |   `-UnaryOperator 0x188e5ab5790 <col:31, col:33> 'int' prefix '++'
|   |       |     `-DeclRefExpr 0x188e5ab5770 <col:33> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BreakStmt 0x188e5ab57c8 <line:389:13>
|   |       |-CaseStmt 0x188e5ab5808 <line:390:9, line:391:22>
|   |       | |-ConstantExpr 0x188e5ab57f0 <line:390:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab57d0 <col:14> 'int' EnumConstant 0x188e5bab200 'OPT_CLREXT' 'int'
|   |       | `-BinaryOperator 0x188e5ab5890 <line:391:13, col:22> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab5830 <col:13> 'int' lvalue Var 0x188e5ba77a8 'clrext' 'int'
|   |       |   `-IntegerLiteral 0x188e5ab5868 <col:22> 'int' 1
|   |       |-BreakStmt 0x188e5ab58b0 <line:392:13>
|   |       |-CaseStmt 0x188e5ab58f0 <line:393:9, line:394:24>
|   |       | |-ConstantExpr 0x188e5ab58d8 <line:393:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab58b8 <col:14> 'int' EnumConstant 0x188e5bab258 'OPT_OCSPID' 'int'
|   |       | `-BinaryOperator 0x188e5ab5988 <line:394:13, col:24> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab5918 <col:13> 'int' lvalue Var 0x188e5ba6d28 'ocspid' 'int'
|   |       |   `-UnaryOperator 0x188e5ab5970 <col:22, col:24> 'int' prefix '++'
|   |       |     `-DeclRefExpr 0x188e5ab5950 <col:24> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BreakStmt 0x188e5ab59a8 <line:395:13>
|   |       |-CaseStmt 0x188e5ab59e8 <line:396:9, line:397:22>
|   |       | |-ConstantExpr 0x188e5ab59d0 <line:396:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab59b0 <col:14> 'int' EnumConstant 0x188e5bab360 'OPT_BADSIG' 'int'
|   |       | `-BinaryOperator 0x188e5ab5a70 <line:397:13, col:22> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab5a10 <col:13> 'int' lvalue Var 0x188e5ba7700 'badsig' 'int'
|   |       |   `-IntegerLiteral 0x188e5ab5a48 <col:22> 'int' 1
|   |       |-BreakStmt 0x188e5ab5a90 <line:398:13>
|   |       |-CaseStmt 0x188e5ab5ad0 <line:400:9, line:401:34>
|   |       | |-ConstantExpr 0x188e5ab5ab8 <line:400:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab5a98 <col:14> 'int' EnumConstant 0x188e5bab2b0 'OPT_SUBJECT_HASH_OLD' 'int'
|   |       | `-BinaryOperator 0x188e5ab5b68 <line:401:13, col:34> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab5af8 <col:13> 'int' lvalue Var 0x188e5ba8240 'subject_hash_old' 'int'
|   |       |   `-UnaryOperator 0x188e5ab5b50 <col:32, col:34> 'int' prefix '++'
|   |       |     `-DeclRefExpr 0x188e5ab5b30 <col:34> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BreakStmt 0x188e5ab5b88 <line:402:13>
|   |       |-CaseStmt 0x188e5ab5bc8 <line:403:9, line:404:33>
|   |       | |-ConstantExpr 0x188e5ab5bb0 <line:403:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab5b90 <col:14> 'int' EnumConstant 0x188e5bab308 'OPT_ISSUER_HASH_OLD' 'int'
|   |       | `-BinaryOperator 0x188e5ab5c60 <line:404:13, col:33> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab5bf0 <col:13> 'int' lvalue Var 0x188e5ba82e8 'issuer_hash_old' 'int'
|   |       |   `-UnaryOperator 0x188e5ab5c48 <col:31, col:33> 'int' prefix '++'
|   |       |     `-DeclRefExpr 0x188e5ab5c28 <col:33> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BreakStmt 0x188e5ab5c80 <line:405:13>
|   |       |-CaseStmt 0x188e5ab5cc0 <line:411:9, line:412:27>
|   |       | |-ConstantExpr 0x188e5ab5ca8 <line:411:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab5c88 <col:14> 'int' EnumConstant 0x188e5baad30 'OPT_DATES' 'int'
|   |       | `-BinaryOperator 0x188e5ab5d40 <line:412:13, col:27> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab5ce8 <col:13> 'int' lvalue Var 0x188e5ba7be8 'startdate' 'int'
|   |       |   `-UnaryOperator 0x188e5ab5d28 <col:25, col:27> 'int' prefix '++'
|   |       |     `-DeclRefExpr 0x188e5ab5d08 <col:27> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BinaryOperator 0x188e5ab5db8 <line:413:13, col:25> 'int' '='
|   |       | |-DeclRefExpr 0x188e5ab5d60 <col:13> 'int' lvalue Var 0x188e5ba7cd8 'enddate' 'int'
|   |       | `-UnaryOperator 0x188e5ab5da0 <col:23, col:25> 'int' prefix '++'
|   |       |   `-DeclRefExpr 0x188e5ab5d80 <col:25> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |       |-BreakStmt 0x188e5ab5dd8 <line:414:13>
|   |       |-CaseStmt 0x188e5ab5e18 <line:415:9, line:416:24>
|   |       | |-ConstantExpr 0x188e5ab5e00 <line:415:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab5de0 <col:14> 'int' EnumConstant 0x188e5baae90 'OPT_CHECKEND' 'int'
|   |       | `-BinaryOperator 0x188e5ab5ea0 <line:416:13, col:24> 'int' '='
|   |       |   |-DeclRefExpr 0x188e5ab5e40 <col:13> 'int' lvalue Var 0x188e5ba66d0 'checkend' 'int'
|   |       |   `-IntegerLiteral 0x188e5ab5e78 <col:24> 'int' 1
|   |       |-CompoundStmt 0x188e5ab63e8 <line:417:13, line:427:13>
|   |       | |-DeclStmt 0x188e5ab5f80 <.//openssl//file_jk/before\apps/apps.h:349:19, .//openssl//file_jk/before\apps\x509.c:418:34>
|   |       | | `-VarDecl 0x188e5ab5ed8 <.//openssl//file_jk/before\apps/apps.h:349:19, .//openssl//file_jk/before\apps\x509.c:418:33> col:26 used temp 'long' cinit
|   |       | |   `-ImplicitCastExpr 0x188e5ab5f68 <col:33> 'long' <IntegralCast>
|   |       | |     `-IntegerLiteral 0x188e5ab5f40 <col:33> 'int' 0
|   |       | |-IfStmt 0x188e5ab6118 <line:419:17, line:420:26>
|   |       | | |-UnaryOperator 0x188e5ab60e8 <line:419:21, col:47> 'int' prefix '!' cannot overflow
|   |       | | | `-CallExpr 0x188e5ab60a0 <.//openssl//file_jk/before\apps/apps.h:347:19, .//openssl//file_jk/before\apps\x509.c:419:47> 'int'
|   |       | | |   |-ImplicitCastExpr 0x188e5ab6088 <.//openssl//file_jk/before\apps/apps.h:347:19> 'int (*)(const char *, long *)' <FunctionToPointerDecay>
|   |       | | |   | `-DeclRefExpr 0x188e5ab5f98 <col:19> 'int (const char *, long *)' Function 0x188e5b8bba0 'opt_long' 'int (const char *, long *)'
|   |       | | |   |-ImplicitCastExpr 0x188e5ab60d0 <.//openssl//file_jk/before\apps\x509.c:419:31, col:39> 'const char *' <NoOp>
|   |       | | |   | `-CallExpr 0x188e5ab5ff0 <col:31, col:39> 'char *'
|   |       | | |   |   `-ImplicitCastExpr 0x188e5ab5fd8 <col:31> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       | | |   |     `-DeclRefExpr 0x188e5ab5fb8 <col:31> 'char *(void)' Function 0x188e5b971a0 'opt_arg' 'char *(void)'
|   |       | | |   `-UnaryOperator 0x188e5ab6048 <col:42, col:43> 'long *' prefix '&' cannot overflow
|   |       | | |     `-DeclRefExpr 0x188e5ab6010 <col:43> 'long' lvalue Var 0x188e5ab5ed8 'temp' 'long'
|   |       | | `-GotoStmt 0x188e5ab6100 <line:420:21, col:26> 'opthelp' 0x188e5ab3020
|   |       | |-BinaryOperator 0x188e5ab61d8 <line:421:17, col:39> 'time_t':'long long' '='
|   |       | | |-DeclRefExpr 0x188e5ab6130 <col:17> 'time_t':'long long' lvalue Var 0x188e5ba7db0 'checkoffset' 'time_t':'long long'
|   |       | | `-CStyleCastExpr 0x188e5ab61b0 <col:31, col:39> 'time_t':'long long' <IntegralCast>
|   |       | |   `-ImplicitCastExpr 0x188e5ab6198 <col:39> 'long' <LValueToRValue> part_of_explicit_cast
|   |       | |     `-DeclRefExpr 0x188e5ab6168 <col:39> 'long' lvalue Var 0x188e5ab5ed8 'temp' 'long'
|   |       | `-IfStmt 0x188e5ab63d0 <line:422:17, line:426:17>
|   |       |   |-BinaryOperator 0x188e5ab62a8 <line:422:21, col:46> 'int' '!='
|   |       |   | |-CStyleCastExpr 0x188e5ab6248 <col:21, col:31> 'long' <IntegralCast>
|   |       |   | | `-ImplicitCastExpr 0x188e5ab6230 <col:31> 'time_t':'long long' <LValueToRValue> part_of_explicit_cast
|   |       |   | |   `-DeclRefExpr 0x188e5ab61f8 <col:31> 'time_t':'long long' lvalue Var 0x188e5ba7db0 'checkoffset' 'time_t':'long long'
|   |       |   | `-ImplicitCastExpr 0x188e5ab6290 <col:46> 'long' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x188e5ab6270 <col:46> 'long' lvalue Var 0x188e5ab5ed8 'temp' 'long'
|   |       |   `-CompoundStmt 0x188e5ab63b8 <col:52, line:426:17>
|   |       |     `-GotoStmt 0x188e5ab63a0 <line:425:21, col:26> 'opthelp' 0x188e5ab3020
|   |       |-BreakStmt 0x188e5ab6418 <line:428:13>
|   |       |-CaseStmt 0x188e5ab6458 <line:429:9, line:430:33>
|   |       | |-ConstantExpr 0x188e5ab6440 <line:429:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab6420 <col:14> 'int' EnumConstant 0x188e5baaee8 'OPT_CHECKHOST' 'int'
|   |       | `-BinaryOperator 0x188e5ab6510 <line:430:13, col:33> 'char *' '='
|   |       |   |-DeclRefExpr 0x188e5ab6480 <col:13> 'char *' lvalue Var 0x188e5ba4f80 'checkhost' 'char *'
|   |       |   `-CallExpr 0x188e5ab64f0 <col:25, col:33> 'char *'
|   |       |     `-ImplicitCastExpr 0x188e5ab64d8 <col:25> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x188e5ab64b8 <col:25> 'char *(void)' Function 0x188e5b971a0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x188e5ab6530 <line:431:13>
|   |       |-CaseStmt 0x188e5ab6570 <line:432:9, line:433:34>
|   |       | |-ConstantExpr 0x188e5ab6558 <line:432:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab6538 <col:14> 'int' EnumConstant 0x188e5baaf40 'OPT_CHECKEMAIL' 'int'
|   |       | `-BinaryOperator 0x188e5ab6628 <line:433:13, col:34> 'char *' '='
|   |       |   |-DeclRefExpr 0x188e5ab6598 <col:13> 'char *' lvalue Var 0x188e5ba50a0 'checkemail' 'char *'
|   |       |   `-CallExpr 0x188e5ab6608 <col:26, col:34> 'char *'
|   |       |     `-ImplicitCastExpr 0x188e5ab65f0 <col:26> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x188e5ab65d0 <col:26> 'char *(void)' Function 0x188e5b971a0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x188e5ab6648 <line:434:13>
|   |       |-CaseStmt 0x188e5ab6688 <line:435:9, line:436:31>
|   |       | |-ConstantExpr 0x188e5ab6670 <line:435:14> 'int'
|   |       | | `-DeclRefExpr 0x188e5ab6650 <col:14> 'int' EnumConstant 0x188e5baaf98 'OPT_CHECKIP' 'int'
|   |       | `-BinaryOperator 0x188e5ab6740 <line:436:13, col:31> 'char *' '='
|   |       |   |-DeclRefExpr 0x188e5ab66b0 <col:13> 'char *' lvalue Var 0x188e5ba51c0 'checkip' 'char *'
|   |       |   `-CallExpr 0x188e5ab6720 <col:23, col:31> 'char *'
|   |       |     `-ImplicitCastExpr 0x188e5ab6708 <col:23> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x188e5ab66e8 <col:23> 'char *(void)' Function 0x188e5b971a0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x188e5ab6760 <line:437:13>
|   |       `-CaseStmt 0x188e5ab67a0 <line:438:9, line:440:22>
|   |         |-ConstantExpr 0x188e5ab6788 <line:438:14> 'int'
|   |         | `-DeclRefExpr 0x188e5ab6768 <col:14> 'int' EnumConstant 0x188e5bab3b8 'OPT_MD' 'int'
|   |         `-IfStmt 0x188e5ab6850 <line:439:13, line:440:22>
|   |           |-OpaqueValueExpr 0x188e5ab6838 <<invalid sloc>> '_Bool'
|   |           `-GotoStmt 0x188e5ab6820 <col:17, col:22> 'opthelp' 0x188e5ab3020
|   |-BinaryOperator 0x188e5ab6d70 <line:443:5, col:25> 'int' '='
|   | |-DeclRefExpr 0x188e5ab6cf8 <col:5> 'int' lvalue ParmVar 0x188e5bafe00 'argc' 'int'
|   | `-CallExpr 0x188e5ab6d50 <col:12, col:25> 'int'
|   |   `-ImplicitCastExpr 0x188e5ab6d38 <col:12> 'int (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x188e5ab6d18 <col:12> 'int (void)' Function 0x188e5b97858 'opt_num_rest' 'int (void)'
|   |-BinaryOperator 0x188e5ab6e30 <line:444:5, col:21> 'char **' '='
|   | |-DeclRefExpr 0x188e5ab6d90 <col:5> 'char **' lvalue ParmVar 0x188e5bafe80 'argv' 'char **'
|   | `-CallExpr 0x188e5ab6e10 <col:12, col:21> 'char **'
|   |   `-ImplicitCastExpr 0x188e5ab6df8 <col:12> 'char **(*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x188e5ab6db0 <col:12> 'char **(void)' Function 0x188e5b97700 'opt_rest' 'char **(void)'
|   |-IfStmt 0x188e5ab9020 <line:445:5, line:448:5>
|   | |-BinaryOperator 0x188e5ab6eb0 <line:445:9, col:17> 'int' '!='
|   | | |-ImplicitCastExpr 0x188e5ab6e98 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x188e5ab6e50 <col:9> 'int' lvalue ParmVar 0x188e5bafe00 'argc' 'int'
|   | | `-IntegerLiteral 0x188e5ab6e70 <col:17> 'int' 0
|   | `-CompoundStmt 0x188e5ab9008 <col:20, line:448:5>
|   |   `-GotoStmt 0x188e5ab8ff0 <line:447:9, col:14> 'opthelp' 0x188e5ab3020
|   |-IfStmt 0x188e5ab9238 <line:453:5, line:454:35>
|   | |-ImplicitCastExpr 0x188e5ab90c8 <line:453:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x188e5ab90a8 <col:9> 'int' lvalue Var 0x188e5ba6628 'need_rand' 'int'
|   | `-CallExpr 0x188e5ab91f0 <line:454:9, col:35> 'int'
|   |   |-ImplicitCastExpr 0x188e5ab91d8 <col:9> 'int (*)(const char *, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x188e5ab90e0 <col:9> 'int (const char *, int)' Function 0x188e5a0ee20 'app_RAND_load_file' 'int (const char *, int)'
|   |   |-ImplicitCastExpr 0x188e5ab9220 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <NullToPointer>
|   |   | `-ParenExpr 0x188e5ab9168 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x188e5ab9140 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x188e5ab9100 <col:26> 'int' 0
|   |   `-IntegerLiteral 0x188e5ab9188 <.//openssl//file_jk/before\apps\x509.c:454:34> 'int' 0
|   |-IfStmt 0x188e5ab9568 <line:456:5, line:459:5>
|   | |-UnaryOperator 0x188e5ab94d0 <line:456:9, col:51> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x188e5ab9430 <col:10, col:51> 'int'
|   | |   |-ImplicitCastExpr 0x188e5ab9418 <col:10> 'int (*)(const char *, const char *, char **, char **)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x188e5ab9250 <col:10> 'int (const char *, const char *, char **, char **)' Function 0x188e5b949d0 'app_passwd' 'int (const char *, const char *, char **, char **)'
|   | |   |-ImplicitCastExpr 0x188e5ab9488 <col:21> 'const char *' <NoOp>
|   | |   | `-ImplicitCastExpr 0x188e5ab9470 <col:21> 'char *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x188e5ab9270 <col:21> 'char *' lvalue Var 0x188e5ba5678 'passinarg' 'char *'
|   | |   |-ImplicitCastExpr 0x188e5ab94a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <NullToPointer>
|   | |   | `-ParenExpr 0x188e5ab92f8 <col:17, col:27> 'void *'
|   | |   |   `-CStyleCastExpr 0x188e5ab92d0 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |     `-IntegerLiteral 0x188e5ab9290 <col:26> 'int' 0
|   | |   |-UnaryOperator 0x188e5ab9350 <.//openssl//file_jk/before\apps\x509.c:456:38, col:39> 'char **' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x188e5ab9318 <col:39> 'char *' lvalue Var 0x188e5ba5558 'passin' 'char *'
|   | |   `-ImplicitCastExpr 0x188e5ab94b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char **' <NullToPointer>
|   | |     `-ParenExpr 0x188e5ab93d0 <col:17, col:27> 'void *'
|   | |       `-CStyleCastExpr 0x188e5ab93a8 <col:18, col:26> 'void *' <NullToPointer>
|   | |         `-IntegerLiteral 0x188e5ab9368 <col:26> 'int' 0
|   | `-CompoundStmt 0x188e5ab9550 <.//openssl//file_jk/before\apps\x509.c:456:54, line:459:5>
|   |   `-GotoStmt 0x188e5ab9538 <line:458:9, col:14> 'end' 0x188e5ba8578
|   |-IfStmt 0x188e5ab97e8 <line:461:5, line:464:5>
|   | |-OpaqueValueExpr 0x188e5ab97d0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x188e5ab97b8 <line:461:45, line:464:5>
|   |   `-GotoStmt 0x188e5ab97a0 <line:463:9, col:14> 'end' 0x188e5ba8578
|   |-IfStmt 0x188e5ab9a38 <line:466:5, line:470:5>
|   | |-ImplicitCastExpr 0x188e5ab9820 <line:466:9> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x188e5ab9800 <col:9> 'char *' lvalue Var 0x188e5ba4d00 'fkeyfile' 'char *'
|   | `-CompoundStmt 0x188e5ab9a20 <col:19, line:470:5>
|   |   `-IfStmt 0x188e5ab9a08 <line:468:9, line:469:18>
|   |     |-OpaqueValueExpr 0x188e5ab99f0 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x188e5ab99d8 <col:13, col:18> 'end' 0x188e5ba8578
|   |-IfStmt 0x188e5ab9fd8 <line:472:5, line:478:5> has_else
|   | |-BinaryOperator 0x188e5ab9ce8 <line:472:9, col:68> 'int' '&&'
|   | | |-BinaryOperator 0x188e5ab9bc0 <col:9, col:40> 'int' '&&'
|   | | | |-ParenExpr 0x188e5ab9b48 <col:9, col:27> 'int'
|   | | | | `-BinaryOperator 0x188e5ab9b28 <col:10, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | | |   |-ImplicitCastExpr 0x188e5ab9af8 <.//openssl//file_jk/before\apps\x509.c:472:10> 'char *' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x188e5ab9a50 <col:10> 'char *' lvalue Var 0x188e5bb0ab8 'CAkeyfile' 'char *'
|   | | | |   `-ImplicitCastExpr 0x188e5ab9b10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | | | |     `-ParenExpr 0x188e5ab9ad8 <col:17, col:27> 'void *'
|   | | | |       `-CStyleCastExpr 0x188e5ab9ab0 <col:18, col:26> 'void *' <NullToPointer>
|   | | | |         `-IntegerLiteral 0x188e5ab9a70 <col:26> 'int' 0
|   | | | `-ImplicitCastExpr 0x188e5ab9ba8 <.//openssl//file_jk/before\apps\x509.c:472:32, col:40> 'int' <LValueToRValue>
|   | | |   `-ParenExpr 0x188e5ab9b88 <col:32, col:40> 'int' lvalue
|   | | |     `-DeclRefExpr 0x188e5ab9b68 <col:33> 'int' lvalue Var 0x188e5ba6f60 'CA_flag' 'int'
|   | | `-ParenExpr 0x188e5ab9cc8 <col:45, col:68> 'int'
|   | |   `-BinaryOperator 0x188e5ab9ca8 <col:46, .//openssl//file_jk/before\apps/apps.h:530:43> 'int' '=='
|   | |     |-ImplicitCastExpr 0x188e5ab9c90 <.//openssl//file_jk/before\apps\x509.c:472:46> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x188e5ab9be0 <col:46> 'int' lvalue Var 0x188e5ba6280 'CAformat' 'int'
|   | |     `-ParenExpr 0x188e5ab9c70 <.//openssl//file_jk/before\apps/apps.h:530:25, col:43> 'int'
|   | |       `-BinaryOperator 0x188e5ab9c50 <col:26, line:524:26> 'int' '|'
|   | |         |-IntegerLiteral 0x188e5ab9c00 <line:530:26> 'int' 5
|   | |         `-IntegerLiteral 0x188e5ab9c28 <line:524:26> 'int' 32768
|   | |-CompoundStmt 0x188e5ab9d80 <.//openssl//file_jk/before\apps\x509.c:472:71, line:474:5>
|   | | `-BinaryOperator 0x188e5ab9d60 <line:473:9, col:21> 'char *' '='
|   | |   |-DeclRefExpr 0x188e5ab9d08 <col:9> 'char *' lvalue Var 0x188e5bb0ab8 'CAkeyfile' 'char *'
|   | |   `-ImplicitCastExpr 0x188e5ab9d48 <col:21> 'char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x188e5ab9d28 <col:21> 'char *' lvalue Var 0x188e5ba5b38 'CAfile' 'char *'
|   | `-IfStmt 0x188e5ab9fc0 <line:474:12, line:478:5>
|   |   |-BinaryOperator 0x188e5ab9f08 <line:474:16, col:47> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x188e5ab9ef0 <col:16, col:24> 'int' <LValueToRValue>
|   |   | | `-ParenExpr 0x188e5ab9db8 <col:16, col:24> 'int' lvalue
|   |   | |   `-DeclRefExpr 0x188e5ab9d98 <col:17> 'int' lvalue Var 0x188e5ba6f60 'CA_flag' 'int'
|   |   | `-ParenExpr 0x188e5ab9ed0 <col:29, col:47> 'int'
|   |   |   `-BinaryOperator 0x188e5ab9eb0 <col:30, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |   |     |-ImplicitCastExpr 0x188e5ab9e80 <.//openssl//file_jk/before\apps\x509.c:474:30> 'char *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x188e5ab9dd8 <col:30> 'char *' lvalue Var 0x188e5bb0ab8 'CAkeyfile' 'char *'
|   |   |     `-ImplicitCastExpr 0x188e5ab9e98 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |   |       `-ParenExpr 0x188e5ab9e60 <col:17, col:27> 'void *'
|   |   |         `-CStyleCastExpr 0x188e5ab9e38 <col:18, col:26> 'void *' <NullToPointer>
|   |   |           `-IntegerLiteral 0x188e5ab9df8 <col:26> 'int' 0
|   |   `-CompoundStmt 0x188e5ab9fa8 <.//openssl//file_jk/before\apps\x509.c:474:50, line:478:5>
|   |     `-GotoStmt 0x188e5ab9f90 <line:477:9, col:14> 'end' 0x188e5ba8578
|   |-IfStmt 0x188e5abaa68 <line:480:5, line:499:5>
|   | |-ImplicitCastExpr 0x188e5aba020 <line:480:9> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x188e5aba000 <col:9> 'char *' lvalue Var 0x188e5ba5438 'extfile' 'char *'
|   | `-CompoundStmt 0x188e5abaa40 <col:18, line:499:5>
|   |   |-IfStmt 0x188e5aba110 <line:482:9, line:483:18>
|   |   | |-OpaqueValueExpr 0x188e5aba0f8 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x188e5aba0e0 <col:13, col:18> 'end' 0x188e5ba8578
|   |   |-IfStmt 0x188e5aba550 <line:484:9, line:490:9>
|   |   | |-UnaryOperator 0x188e5aba160 <line:484:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x188e5aba148 <col:14> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x188e5aba128 <col:14> 'char *' lvalue Var 0x188e5ba5318 'extsect' 'char *'
|   |   | `-CompoundStmt 0x188e5aba538 <col:23, line:490:9>
|   |   |   `-IfStmt 0x188e5aba520 <line:486:13, line:489:13>
|   |   |     |-UnaryOperator 0x188e5aba328 <line:486:17, col:18> 'int' prefix '!' cannot overflow
|   |   |     | `-ImplicitCastExpr 0x188e5aba310 <col:18> 'char *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x188e5aba2f0 <col:18> 'char *' lvalue Var 0x188e5ba5318 'extsect' 'char *'
|   |   |     `-CompoundStmt 0x188e5aba500 <col:27, line:489:13>
|   |   |       |-CallExpr 0x188e5aba468 <line:487:17, col:33> 'int'
|   |   |       | `-ImplicitCastExpr 0x188e5aba450 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |       |   `-DeclRefExpr 0x188e5aba430 <col:17> 'int ()' Function 0x188e5aba368 'ERR_clear_error' 'int ()'
|   |   |       `-BinaryOperator 0x188e5aba4e0 <line:488:17, col:27> 'char *' '='
|   |   |         |-DeclRefExpr 0x188e5aba488 <col:17> 'char *' lvalue Var 0x188e5ba5318 'extsect' 'char *'
|   |   |         `-ImplicitCastExpr 0x188e5aba4c8 <col:27> 'char *' <ArrayToPointerDecay>
|   |   |           `-StringLiteral 0x188e5aba4a8 <col:27> 'char [8]' lvalue "default"
|   |   `-IfStmt 0x188e5abaa28 <line:493:9, line:498:9>
|   |     |-OpaqueValueExpr 0x188e5abaa10 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x188e5aba9f8 <line:493:67, line:498:9>
|   |       `-GotoStmt 0x188e5aba9e0 <line:497:13, col:18> 'end' 0x188e5ba8578
|   |-IfStmt 0x188e5ab8ae8 <line:501:5, line:568:9> has_else
|   | |-ImplicitCastExpr 0x188e5abaaa0 <line:501:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x188e5abaa80 <col:9> 'int' lvalue Var 0x188e5ba6580 'reqfile' 'int'
|   | |-CompoundStmt 0x188e5ab8a08 <col:18, line:567:5>
|   | | |-IfStmt 0x188e5abac08 <line:505:9, line:508:9>
|   | | | |-BinaryOperator 0x188e5abab58 <line:505:13, col:28> 'int' '&&'
|   | | | | |-UnaryOperator 0x188e5abaaf0 <col:13, col:14> 'int' prefix '!' cannot overflow
|   | | | | | `-ImplicitCastExpr 0x188e5abaad8 <col:14> 'int' <LValueToRValue>
|   | | | | |   `-DeclRefExpr 0x188e5abaab8 <col:14> 'int' lvalue Var 0x188e5ba6eb8 'sign_flag' 'int'
|   | | | | `-UnaryOperator 0x188e5abab40 <col:27, col:28> 'int' prefix '!' cannot overflow
|   | | | |   `-ImplicitCastExpr 0x188e5abab28 <col:28> 'int' <LValueToRValue>
|   | | | |     `-DeclRefExpr 0x188e5abab08 <col:28> 'int' lvalue Var 0x188e5ba6f60 'CA_flag' 'int'
|   | | | `-CompoundStmt 0x188e5ababf0 <col:37, line:508:9>
|   | | |   `-GotoStmt 0x188e5ababd8 <line:507:13, col:18> 'end' 0x188e5ba8578
|   | | |-IfStmt 0x188e5abad30 <line:510:9, line:511:18>
|   | | | |-OpaqueValueExpr 0x188e5abad18 <<invalid sloc>> '_Bool'
|   | | | `-GotoStmt 0x188e5abad00 <col:13, col:18> 'end' 0x188e5ba8578
|   | | |-IfStmt 0x188e5ab71e0 <line:515:9, line:518:9>
|   | | | |-OpaqueValueExpr 0x188e5ab71c8 <<invalid sloc>> '_Bool'
|   | | | `-CompoundStmt 0x188e5ab71b0 <line:515:26, line:518:9>
|   | | |   `-GotoStmt 0x188e5ab7198 <line:517:13, col:18> 'end' 0x188e5ba8578
|   | | |-IfStmt 0x188e5ab7430 <line:520:9, line:523:9>
|   | | | |-OpaqueValueExpr 0x188e5ab7418 <<invalid sloc>> '_Bool'
|   | | | `-CompoundStmt 0x188e5ab7400 <line:520:57, line:523:9>
|   | | |   `-GotoStmt 0x188e5ab73e8 <line:522:13, col:18> 'end' 0x188e5ba8578
|   | | |-IfStmt 0x188e5ab76b8 <line:525:9, line:529:9>
|   | | | |-BinaryOperator 0x188e5ab75f0 <line:525:13, col:17> 'int' '<'
|   | | | | |-ImplicitCastExpr 0x188e5ab75d8 <col:13> 'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x188e5ab7590 <col:13> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   | | | | `-IntegerLiteral 0x188e5ab75b0 <col:17> 'int' 0
|   | | | `-CompoundStmt 0x188e5ab76a0 <col:20, line:529:9>
|   | | |   `-GotoStmt 0x188e5ab7688 <line:528:13, col:18> 'end' 0x188e5ba8578
|   | | |-IfStmt 0x188e5ab7878 <line:530:9, line:535:13> has_else
|   | | | |-BinaryOperator 0x188e5ab7730 <line:530:13, col:18> 'int' '=='
|   | | | | |-ImplicitCastExpr 0x188e5ab7718 <col:13> 'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x188e5ab76d0 <col:13> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   | | | | `-IntegerLiteral 0x188e5ab76f0 <col:18> 'int' 0
|   | | | |-CompoundStmt 0x188e5ab77d0 <col:21, line:534:9>
|   | | | | `-GotoStmt 0x188e5ab77b8 <line:533:13, col:18> 'end' 0x188e5ba8578
|   | | | `-NullStmt 0x188e5ab7870 <line:535:13>
|   | | |-IfStmt 0x188e5ab7d00 <line:540:9, line:541:18>
|   | | | |-OpaqueValueExpr 0x188e5ab7ce8 <<invalid sloc>> '_Bool'
|   | | | `-GotoStmt 0x188e5ab7cd0 <col:13, col:18> 'end' 0x188e5ba8578
|   | | |-IfStmt 0x188e5ab83d0 <line:543:9, line:552:18> has_else
|   | | | |-OpaqueValueExpr 0x188e5ab83b8 <<invalid sloc>> '_Bool'
|   | | | |-CompoundStmt 0x188e5ab8330 <line:543:26, line:551:9>
|   | | | | |-IfStmt 0x188e5ab8028 <line:545:13, line:546:22>
|   | | | | | |-OpaqueValueExpr 0x188e5ab8010 <<invalid sloc>> '_Bool'
|   | | | | | `-GotoStmt 0x188e5ab7ff8 <col:17, col:22> 'end' 0x188e5ba8578
|   | | | | `-IfStmt 0x188e5ab8180 <line:547:13, line:548:22>
|   | | | |   |-OpaqueValueExpr 0x188e5ab8168 <<invalid sloc>> '_Bool'
|   | | | |   `-GotoStmt 0x188e5ab8150 <col:17, col:22> 'end' 0x188e5ba8578
|   | | | `-IfStmt 0x188e5ab83a0 <line:551:16, line:552:18>
|   | | |   |-OpaqueValueExpr 0x188e5ab8388 <<invalid sloc>> '_Bool'
|   | | |   `-GotoStmt 0x188e5ab8370 <col:13, col:18> 'end' 0x188e5ba8578
|   | | |-IfStmt 0x188e5ab8558 <line:554:9, line:555:18>
|   | | | |-OpaqueValueExpr 0x188e5ab8540 <<invalid sloc>> '_Bool'
|   | | | `-GotoStmt 0x188e5ab8528 <col:13, col:18> 'end' 0x188e5ba8578
|   | | |-IfStmt 0x188e5ab86d0 <line:556:9, line:557:18>
|   | | | |-OpaqueValueExpr 0x188e5ab86b8 <<invalid sloc>> '_Bool'
|   | | | `-GotoStmt 0x188e5ab86a0 <col:13, col:18> 'end' 0x188e5ba8578
|   | | |-IfStmt 0x188e5ab8848 <line:558:9, line:559:18>
|   | | | |-OpaqueValueExpr 0x188e5ab8830 <<invalid sloc>> '_Bool'
|   | | | `-GotoStmt 0x188e5ab8818 <col:13, col:18> 'end' 0x188e5ba8578
|   | | `-IfStmt 0x188e5ab89e0 <line:561:9, line:566:9> has_else
|   | |   |-OpaqueValueExpr 0x188e5ab89c8 <<invalid sloc>> '_Bool'
|   | |   |-NullStmt 0x188e5ab89c0 <line:562:13>
|   | |   `-CompoundStmt 0x188e5ab89b0 <line:563:14, line:566:9>
|   | `-NullStmt 0x188e5ab8ae0 <line:568:9>
|   |-IfStmt 0x188e5ab8bc8 <line:570:5, line:571:14>
|   | |-OpaqueValueExpr 0x188e5ab8bb0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x188e5ab8b98 <col:9, col:14> 'end' 0x188e5ba8578
|   |-IfStmt 0x188e5ab8d68 <line:572:5, line:576:5>
|   | |-ImplicitCastExpr 0x188e5ab8c00 <line:572:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x188e5ab8be0 <col:9> 'int' lvalue Var 0x188e5ba6f60 'CA_flag' 'int'
|   | `-CompoundStmt 0x188e5ab8d50 <col:18, line:576:5>
|   |   `-IfStmt 0x188e5ab8d38 <line:574:9, line:575:18>
|   |     |-OpaqueValueExpr 0x188e5ab8d20 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x188e5ab8d08 <col:13, col:18> 'end' 0x188e5ba8578
|   |-IfStmt 0x188e5ab8e90 <line:579:5, line:580:14>
|   | |-OpaqueValueExpr 0x188e5ab8e78 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x188e5ab8e60 <col:9, col:14> 'end' 0x188e5ba8578
|   |-IfStmt 0x188e5abb1f8 <line:582:5, line:583:68>
|   | |-BinaryOperator 0x188e5ab8f88 <line:582:9, col:27> 'int' '||'
|   | | |-BinaryOperator 0x188e5ab8f30 <col:9, col:19> 'int' '||'
|   | | | |-UnaryOperator 0x188e5ab8ee0 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x188e5ab8ec8 <col:10> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x188e5ab8ea8 <col:10> 'int' lvalue Var 0x188e5ba6e10 'noout' 'int'
|   | | | `-ImplicitCastExpr 0x188e5ab8f18 <col:19> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x188e5ab8ef8 <col:19> 'int' lvalue Var 0x188e5ba7948 'text' 'int'
|   | | `-ImplicitCastExpr 0x188e5ab8f70 <col:27> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x188e5ab8f50 <col:27> 'int' lvalue Var 0x188e5ba6b20 'next_serial' 'int'
|   | `-CallExpr 0x188e5abb178 <line:583:9, col:68> 'int'
|   |   |-ImplicitCastExpr 0x188e5abb160 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x188e5abb0c8 <col:9> 'int ()' Function 0x188e5abb000 'OBJ_create' 'int ()'
|   |   |-ImplicitCastExpr 0x188e5abb1b0 <col:20> 'char *' <ArrayToPointerDecay>
|   |   | `-StringLiteral 0x188e5abb0e8 <col:20> 'char [10]' lvalue "2.99999.3"
|   |   |-ImplicitCastExpr 0x188e5abb1c8 <col:33> 'char *' <ArrayToPointerDecay>
|   |   | `-StringLiteral 0x188e5abb110 <col:33> 'char [8]' lvalue "SET.ex3"
|   |   `-ImplicitCastExpr 0x188e5abb1e0 <col:44> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x188e5abb130 <col:44> 'char [23]' lvalue "SET x509v3 extension 3"
|   |-IfStmt 0x188e5abbb70 <line:593:5, line:599:5>
|   | |-OpaqueValueExpr 0x188e5abbb58 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x188e5abbb48 <line:593:16, line:599:5>
|   |-IfStmt 0x188e5abbe78 <line:601:5, line:607:5>
|   | |-OpaqueValueExpr 0x188e5abbe60 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x188e5abbe50 <line:601:17, line:607:5>
|   |-IfStmt 0x188e5abc110 <line:609:5, line:614:5>
|   | |-ImplicitCastExpr 0x188e5abbeb0 <line:609:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x188e5abbe90 <col:9> 'int' lvalue Var 0x188e5ba7700 'badsig' 'int'
|   | `-CompoundStmt 0x188e5abc0f8 <col:17, line:614:5>
|   |   `-DeclStmt 0x188e5abbf48 <line:610:9, col:41>
|   |     `-VarDecl 0x188e5abbee0 <col:9, col:32> col:32 invalid signature 'const int *'
|   |-IfStmt 0x188e5ac6998 <line:616:5, line:837:5>
|   | |-ImplicitCastExpr 0x188e5abc148 <line:616:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x188e5abc128 <col:9> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   | `-CompoundStmt 0x188e5ac6980 <col:14, line:837:5>
|   |   `-ForStmt 0x188e5ac6948 <line:617:9, line:836:9>
|   |     |-BinaryOperator 0x188e5abc1a8 <line:617:14, col:18> 'int' '='
|   |     | |-DeclRefExpr 0x188e5abc160 <col:14> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   |     | `-IntegerLiteral 0x188e5abc180 <col:18> 'int' 1
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x188e5abc238 <col:21, col:26> 'int' '<='
|   |     | |-ImplicitCastExpr 0x188e5abc208 <col:21> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x188e5abc1c8 <col:21> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   |     | `-ImplicitCastExpr 0x188e5abc220 <col:26> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x188e5abc1e8 <col:26> 'int' lvalue Var 0x188e5ba7658 'num' 'int'
|   |     |-UnaryOperator 0x188e5abc278 <col:31, col:32> 'int' postfix '++'
|   |     | `-DeclRefExpr 0x188e5abc258 <col:31> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   |     `-CompoundStmt 0x188e5ac6930 <col:36, line:836:9>
|   |       `-IfStmt 0x188e5ac6908 <line:618:13, line:835:13> has_else
|   |         |-BinaryOperator 0x188e5abc300 <line:618:17, col:27> 'int' '=='
|   |         | |-ImplicitCastExpr 0x188e5abc2d0 <col:17> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x188e5abc290 <col:17> 'int' lvalue Var 0x188e5ba7b40 'issuer' 'int'
|   |         | `-ImplicitCastExpr 0x188e5abc2e8 <col:27> 'int' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x188e5abc2b0 <col:27> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   |         |-CompoundStmt 0x188e5abc490 <col:30, line:620:13>
|   |         `-IfStmt 0x188e5ac68e0 <col:20, line:835:13> has_else
|   |           |-BinaryOperator 0x188e5abc510 <line:620:24, col:35> 'int' '=='
|   |           | |-ImplicitCastExpr 0x188e5abc4e0 <col:24> 'int' <LValueToRValue>
|   |           | | `-DeclRefExpr 0x188e5abc4a0 <col:24> 'int' lvalue Var 0x188e5ba7a98 'subject' 'int'
|   |           | `-ImplicitCastExpr 0x188e5abc4f8 <col:35> 'int' <LValueToRValue>
|   |           |   `-DeclRefExpr 0x188e5abc4c0 <col:35> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   |           |-CompoundStmt 0x188e5abc6a0 <col:38, line:623:13>
|   |           `-IfStmt 0x188e5ac68b8 <col:20, line:835:13> has_else
|   |             |-BinaryOperator 0x188e5abc720 <line:623:24, col:34> 'int' '=='
|   |             | |-ImplicitCastExpr 0x188e5abc6f0 <col:24> 'int' <LValueToRValue>
|   |             | | `-DeclRefExpr 0x188e5abc6b0 <col:24> 'int' lvalue Var 0x188e5ba79f0 'serial' 'int'
|   |             | `-ImplicitCastExpr 0x188e5abc708 <col:34> 'int' <LValueToRValue>
|   |             |   `-DeclRefExpr 0x188e5abc6d0 <col:34> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   |             |-CompoundStmt 0x188e5abc9e0 <col:37, line:627:13>
|   |             `-IfStmt 0x188e5ac6890 <col:20, line:835:13> has_else
|   |               |-BinaryOperator 0x188e5abca60 <line:627:24, col:39> 'int' '=='
|   |               | |-ImplicitCastExpr 0x188e5abca30 <col:24> 'int' <LValueToRValue>
|   |               | | `-DeclRefExpr 0x188e5abc9f0 <col:24> 'int' lvalue Var 0x188e5ba6b20 'next_serial' 'int'
|   |               | `-ImplicitCastExpr 0x188e5abca48 <col:39> 'int' <LValueToRValue>
|   |               |   `-DeclRefExpr 0x188e5abca10 <col:39> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   |               |-CompoundStmt 0x188e5aad210 <col:42, line:642:13>
|   |               | |-IfStmt 0x188e5abcc68 <line:631:17, line:632:26>
|   |               | | |-OpaqueValueExpr 0x188e5abcc50 <<invalid sloc>> '_Bool'
|   |               | | `-GotoStmt 0x188e5abcc38 <col:21, col:26> 'end' 0x188e5ba8578
|   |               | |-IfStmt 0x188e5abcde8 <line:633:17, line:634:26>
|   |               | | |-OpaqueValueExpr 0x188e5abcdd0 <<invalid sloc>> '_Bool'
|   |               | | `-GotoStmt 0x188e5abcdb8 <col:21, col:26> 'end' 0x188e5ba8578
|   |               | `-IfStmt 0x188e5abcfc8 <line:636:17, line:637:26>
|   |               |   |-OpaqueValueExpr 0x188e5abcfb0 <<invalid sloc>> '_Bool'
|   |               |   `-GotoStmt 0x188e5abcf98 <col:21, col:26> 'end' 0x188e5ba8578
|   |               `-IfStmt 0x188e5ac6868 <line:642:20, line:835:13> has_else
|   |                 |-BinaryOperator 0x188e5aad398 <line:642:24, col:54> 'int' '||'
|   |                 | |-ParenExpr 0x188e5aad2c8 <col:24, col:35> 'int'
|   |                 | | `-BinaryOperator 0x188e5aad2a8 <col:25, col:34> 'int' '=='
|   |                 | |   |-ImplicitCastExpr 0x188e5aad278 <col:25> 'int' <LValueToRValue>
|   |                 | |   | `-DeclRefExpr 0x188e5aad238 <col:25> 'int' lvalue Var 0x188e5ba70b0 'email' 'int'
|   |                 | |   `-ImplicitCastExpr 0x188e5aad290 <col:34> 'int' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x188e5aad258 <col:34> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   |                 | `-ParenExpr 0x188e5aad378 <col:40, col:54> 'int'
|   |                 |   `-BinaryOperator 0x188e5aad358 <col:41, col:53> 'int' '=='
|   |                 |     |-ImplicitCastExpr 0x188e5aad328 <col:41> 'int' <LValueToRValue>
|   |                 |     | `-DeclRefExpr 0x188e5aad2e8 <col:41> 'int' lvalue Var 0x188e5ba71a0 'ocsp_uri' 'int'
|   |                 |     `-ImplicitCastExpr 0x188e5aad340 <col:53> 'int' <LValueToRValue>
|   |                 |       `-DeclRefExpr 0x188e5aad308 <col:53> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   |                 |-CompoundStmt 0x188e5aadb88 <col:57, line:653:13>
|   |                 | `-DeclStmt 0x188e5aad438 <line:643:17, col:22>
|   |                 |   `-VarDecl 0x188e5aad3d0 <col:17, col:21> col:21 used j 'int'
|   |                 `-IfStmt 0x188e5ac6840 <line:653:20, line:835:13> has_else
|   |                   |-BinaryOperator 0x188e5aadc10 <line:653:24, col:36> 'int' '=='
|   |                   | |-ImplicitCastExpr 0x188e5aadbe0 <col:24> 'int' <LValueToRValue>
|   |                   | | `-DeclRefExpr 0x188e5aadba0 <col:24> 'int' lvalue Var 0x188e5ba7440 'aliasout' 'int'
|   |                   | `-ImplicitCastExpr 0x188e5aadbf8 <col:36> 'int' <LValueToRValue>
|   |                   |   `-DeclRefExpr 0x188e5aadbc0 <col:36> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   |                   |-CompoundStmt 0x188e5aadf78 <col:39, line:660:13>
|   |                   | `-DeclStmt 0x188e5aadcb0 <line:654:17, col:37>
|   |                   |   `-VarDecl 0x188e5aadc48 <col:17, col:32> col:32 used alstr 'unsigned char *'
|   |                   `-IfStmt 0x188e5ac6818 <line:660:20, line:835:13> has_else
|   |                     |-BinaryOperator 0x188e5aae000 <line:660:24, col:40> 'int' '=='
|   |                     | |-ImplicitCastExpr 0x188e5aadfd0 <col:24> 'int' <LValueToRValue>
|   |                     | | `-DeclRefExpr 0x188e5aadf90 <col:24> 'int' lvalue Var 0x188e5ba6bc8 'subject_hash' 'int'
|   |                     | `-ImplicitCastExpr 0x188e5aadfe8 <col:40> 'int' <LValueToRValue>
|   |                     |   `-DeclRefExpr 0x188e5aadfb0 <col:40> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   |                     |-CompoundStmt 0x188e5aae170 <col:43, line:662:13>
|   |                     `-IfStmt 0x188e5ac67f0 <line:664:18, line:835:13> has_else
|   |                       |-BinaryOperator 0x188e5aae1f0 <line:664:22, col:42> 'int' '=='
|   |                       | |-ImplicitCastExpr 0x188e5aae1c0 <col:22> 'int' <LValueToRValue>
|   |                       | | `-DeclRefExpr 0x188e5aae180 <col:22> 'int' lvalue Var 0x188e5ba8240 'subject_hash_old' 'int'
|   |                       | `-ImplicitCastExpr 0x188e5aae1d8 <col:42> 'int' <LValueToRValue>
|   |                       |   `-DeclRefExpr 0x188e5aae1a0 <col:42> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   |                       |-CompoundStmt 0x188e5aae360 <col:45, line:666:13>
|   |                       `-IfStmt 0x188e5ac67c8 <line:668:18, line:835:13> has_else
|   |                         |-BinaryOperator 0x188e5aae3e0 <line:668:22, col:37> 'int' '=='
|   |                         | |-ImplicitCastExpr 0x188e5aae3b0 <col:22> 'int' <LValueToRValue>
|   |                         | | `-DeclRefExpr 0x188e5aae370 <col:22> 'int' lvalue Var 0x188e5ba6c70 'issuer_hash' 'int'
|   |                         | `-ImplicitCastExpr 0x188e5aae3c8 <col:37> 'int' <LValueToRValue>
|   |                         |   `-DeclRefExpr 0x188e5aae390 <col:37> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   |                         |-CompoundStmt 0x188e5aae550 <col:40, line:670:13>
|   |                         `-IfStmt 0x188e5ac67a0 <line:672:18, line:835:13> has_else
|   |                           |-BinaryOperator 0x188e5aae5d0 <line:672:22, col:41> 'int' '=='
|   |                           | |-ImplicitCastExpr 0x188e5aae5a0 <col:22> 'int' <LValueToRValue>
|   |                           | | `-DeclRefExpr 0x188e5aae560 <col:22> 'int' lvalue Var 0x188e5ba82e8 'issuer_hash_old' 'int'
|   |                           | `-ImplicitCastExpr 0x188e5aae5b8 <col:41> 'int' <LValueToRValue>
|   |                           |   `-DeclRefExpr 0x188e5aae580 <col:41> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   |                           |-CompoundStmt 0x188e5aae740 <col:44, line:674:13>
|   |                           `-IfStmt 0x188e5ac6778 <line:676:18, line:835:13> has_else
|   |                             |-BinaryOperator 0x188e5aae7c0 <line:676:22, col:32> 'int' '=='
|   |                             | |-ImplicitCastExpr 0x188e5aae790 <col:22> 'int' <LValueToRValue>
|   |                             | | `-DeclRefExpr 0x188e5aae750 <col:22> 'int' lvalue Var 0x188e5ba60e8 'pprint' 'int'
|   |                             | `-ImplicitCastExpr 0x188e5aae7a8 <col:32> 'int' <LValueToRValue>
|   |                             |   `-DeclRefExpr 0x188e5aae770 <col:32> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   |                             |-CompoundStmt 0x188e5aaecf0 <col:35, line:684:13>
|   |                             | |-DeclStmt 0x188e5aae860 <line:678:17, col:22>
|   |                             | | `-VarDecl 0x188e5aae7f8 <col:17, col:21> col:21 used j 'int'
|   |                             | `-ForStmt 0x188e5aaecb8 <line:680:17, line:683:17>
|   |                             |   |-BinaryOperator 0x188e5aae928 <line:680:22, col:26> 'int' '='
|   |                             |   | |-DeclRefExpr 0x188e5aae8c8 <col:22> 'int' lvalue Var 0x188e5aae7f8 'j' 'int'
|   |                             |   | `-IntegerLiteral 0x188e5aae900 <col:26> 'int' 0
|   |                             |   |-<<<NULL>>>
|   |                             |   |-BinaryOperator 0x188e5aaeac8 <col:29, col:56> 'int' '<'
|   |                             |   | |-ImplicitCastExpr 0x188e5aaeab0 <col:29> 'int' <LValueToRValue>
|   |                             |   | | `-DeclRefExpr 0x188e5aae948 <col:29> 'int' lvalue Var 0x188e5aae7f8 'j' 'int'
|   |                             |   | `-CallExpr 0x188e5aaea90 <col:33, col:56> 'int'
|   |                             |   |   `-ImplicitCastExpr 0x188e5aaea78 <col:33> 'int (*)()' <FunctionToPointerDecay>
|   |                             |   |     `-DeclRefExpr 0x188e5aaea58 <col:33> 'int ()' Function 0x188e5aae990 'X509_PURPOSE_get_count' 'int ()'
|   |                             |   |-UnaryOperator 0x188e5aaeb08 <col:59, col:60> 'int' postfix '++'
|   |                             |   | `-DeclRefExpr 0x188e5aaeae8 <col:59> 'int' lvalue Var 0x188e5aae7f8 'j' 'int'
|   |                             |   `-CompoundStmt 0x188e5aaeca8 <col:64, line:683:17>
|   |                             `-IfStmt 0x188e5ac6750 <line:684:20, line:835:13> has_else
|   |                               |-BinaryOperator 0x188e5aaed80 <line:684:24, col:35> 'int' '=='
|   |                               | |-ImplicitCastExpr 0x188e5aaed50 <col:24> 'int' <LValueToRValue>
|   |                               | | `-DeclRefExpr 0x188e5aaed10 <col:24> 'int' lvalue Var 0x188e5ba5f98 'modulus' 'int'
|   |                               | `-ImplicitCastExpr 0x188e5aaed68 <col:35> 'int' <LValueToRValue>
|   |                               |   `-DeclRefExpr 0x188e5aaed30 <col:35> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   |                               |-CompoundStmt 0x188e5abdc10 <col:38, line:712:13>
|   |                               | |-IfStmt 0x188e5abd078 <line:688:17, line:692:17>
|   |                               | | |-OpaqueValueExpr 0x188e5abd060 <<invalid sloc>> '_Bool'
|   |                               | | `-CompoundStmt 0x188e5abd048 <line:688:35, line:692:17>
|   |                               | |   `-GotoStmt 0x188e5abd030 <line:691:21, col:26> 'end' 0x188e5ba8578
|   |                               | `-IfStmt 0x188e5abdba8 <line:695:17, line:710:17> has_else
|   |                               |   |-OpaqueValueExpr 0x188e5abdb90 <<invalid sloc>> '_Bool'
|   |                               |   |-CompoundStmt 0x188e5abd6b8 <line:695:56, line:699:17>
|   |                               |   | `-DeclStmt 0x188e5abd260 <line:696:21, col:36>
|   |                               |   |   `-VarDecl 0x188e5abd1f8 <col:21, col:35> col:35 invalid n 'const int *'
|   |                               |   `-IfStmt 0x188e5abdb68 <line:702:17, line:710:17> has_else
|   |                               |     |-OpaqueValueExpr 0x188e5abdb50 <<invalid sloc>> '_Bool'
|   |                               |     |-CompoundStmt 0x188e5abdad8 <line:702:56, line:706:17>
|   |                               |     | `-DeclStmt 0x188e5abd7f8 <line:703:21, col:48>
|   |                               |     |   `-VarDecl 0x188e5abd708 <col:21, col:35> col:35 invalid dsapub 'const int *'
|   |                               |     `-CompoundStmt 0x188e5abdb40 <line:708:17, line:710:17>
|   |                               `-IfStmt 0x188e5ac6728 <line:712:20, line:835:13> has_else
|   |                                 |-BinaryOperator 0x188e5abdca0 <line:712:24, col:34> 'int' '=='
|   |                                 | |-ImplicitCastExpr 0x188e5abdc70 <col:24> 'int' <LValueToRValue>
|   |                                 | | `-DeclRefExpr 0x188e5abdc30 <col:24> 'int' lvalue Var 0x188e5ba6040 'pubkey' 'int'
|   |                                 | `-ImplicitCastExpr 0x188e5abdc88 <col:34> 'int' <LValueToRValue>
|   |                                 |   `-DeclRefExpr 0x188e5abdc50 <col:34> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   |                                 |-CompoundStmt 0x188e5abdf50 <col:37, line:722:13>
|   |                                 | `-IfStmt 0x188e5abde28 <line:716:17, line:720:17>
|   |                                 |   |-OpaqueValueExpr 0x188e5abde10 <<invalid sloc>> '_Bool'
|   |                                 |   `-CompoundStmt 0x188e5abddf8 <line:716:35, line:720:17>
|   |                                 |     `-GotoStmt 0x188e5abdde0 <line:719:21, col:26> 'end' 0x188e5ba8578
|   |                                 `-IfStmt 0x188e5ac6700 <line:722:20, line:835:13> has_else
|   |                                   |-BinaryOperator 0x188e5abdfd8 <line:722:24, col:29> 'int' '=='
|   |                                   | |-ImplicitCastExpr 0x188e5abdfa8 <col:24> 'int' <LValueToRValue>
|   |                                   | | `-DeclRefExpr 0x188e5abdf68 <col:24> 'int' lvalue Var 0x188e5ba61d8 'C' 'int'
|   |                                   | `-ImplicitCastExpr 0x188e5abdfc0 <col:29> 'int' <LValueToRValue>
|   |                                   |   `-DeclRefExpr 0x188e5abdf88 <col:29> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   |                                   |-CompoundStmt 0x188e5aaf2a8 <col:32, line:747:13>
|   |                                   | |-DeclStmt 0x188e5abe078 <line:723:17, col:33>
|   |                                   | | `-VarDecl 0x188e5abe010 <col:17, col:32> col:32 used d 'unsigned char *'
|   |                                   | |-DeclStmt 0x188e5abe110 <line:724:17, col:24>
|   |                                   | | `-VarDecl 0x188e5abe0a8 <col:17, col:23> col:23 used m 'char *'
|   |                                   | |-DeclStmt 0x188e5abe1a8 <line:725:17, col:24>
|   |                                   | | `-VarDecl 0x188e5abe140 <col:17, col:21> col:21 used len 'int'
|   |                                   | |-BinaryOperator 0x188e5abe870 <line:736:17, col:55> 'char *' '='
|   |                                   | | |-DeclRefExpr 0x188e5abe6f8 <col:17> 'char *' lvalue Var 0x188e5abe0a8 'm' 'char *'
|   |                                   | | `-ImplicitCastExpr 0x188e5abe858 <col:21, col:55> 'char *' <BitCast>
|   |                                   | |   `-CallExpr 0x188e5abe7e0 <col:21, col:55> 'void *'
|   |                                   | |     |-ImplicitCastExpr 0x188e5abe7c8 <col:21> 'void *(*)(int, const char *)' <FunctionToPointerDecay>
|   |                                   | |     | `-DeclRefExpr 0x188e5abe730 <col:21> 'void *(int, const char *)' Function 0x188e5b9bc20 'app_malloc' 'void *(int, const char *)'
|   |                                   | |     |-ImplicitCastExpr 0x188e5abe810 <col:32> 'int' <LValueToRValue>
|   |                                   | |     | `-DeclRefExpr 0x188e5abe750 <col:32> 'int' lvalue Var 0x188e5abe140 'len' 'int'
|   |                                   | |     `-ImplicitCastExpr 0x188e5abe840 <col:37> 'const char *' <NoOp>
|   |                                   | |       `-ImplicitCastExpr 0x188e5abe828 <col:37> 'char *' <ArrayToPointerDecay>
|   |                                   | |         `-StringLiteral 0x188e5abe770 <col:37> 'char [17]' lvalue "x509 name buffer"
|   |                                   | |-BinaryOperator 0x188e5abe940 <line:737:17, col:38> 'unsigned char *' '='
|   |                                   | | |-DeclRefExpr 0x188e5abe890 <col:17> 'unsigned char *' lvalue Var 0x188e5abe010 'd' 'unsigned char *'
|   |                                   | | `-CStyleCastExpr 0x188e5abe918 <col:21, col:38> 'unsigned char *' <BitCast>
|   |                                   | |   `-ImplicitCastExpr 0x188e5abe900 <col:38> 'char *' <LValueToRValue> part_of_explicit_cast
|   |                                   | |     `-DeclRefExpr 0x188e5abe8c8 <col:38> 'char *' lvalue Var 0x188e5abe0a8 'm' 'char *'
|   |                                   | |-BinaryOperator 0x188e5abec40 <line:740:17, col:38> 'unsigned char *' '='
|   |                                   | | |-DeclRefExpr 0x188e5abeba8 <col:17> 'unsigned char *' lvalue Var 0x188e5abe010 'd' 'unsigned char *'
|   |                                   | | `-CStyleCastExpr 0x188e5abec18 <col:21, col:38> 'unsigned char *' <BitCast>
|   |                                   | |   `-ImplicitCastExpr 0x188e5abec00 <col:38> 'char *' <LValueToRValue> part_of_explicit_cast
|   |                                   | |     `-DeclRefExpr 0x188e5abebc8 <col:38> 'char *' lvalue Var 0x188e5abe0a8 'm' 'char *'
|   |                                   | |-BinaryOperator 0x188e5aaefc8 <line:743:17, col:38> 'unsigned char *' '='
|   |                                   | | |-DeclRefExpr 0x188e5abef98 <col:17> 'unsigned char *' lvalue Var 0x188e5abe010 'd' 'unsigned char *'
|   |                                   | | `-CStyleCastExpr 0x188e5aaefa0 <col:21, col:38> 'unsigned char *' <BitCast>
|   |                                   | |   `-ImplicitCastExpr 0x188e5abeff0 <col:38> 'char *' <LValueToRValue> part_of_explicit_cast
|   |                                   | |     `-DeclRefExpr 0x188e5abefb8 <col:38> 'char *' lvalue Var 0x188e5abe0a8 'm' 'char *'
|   |                                   | `-CallExpr 0x188e5aaf268 <line:746:17, col:31> 'int'
|   |                                   |   |-ImplicitCastExpr 0x188e5aaf250 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |                                   |   | `-DeclRefExpr 0x188e5aaf210 <col:17> 'int ()' Function 0x188e5aaf148 'OPENSSL_free' 'int ()'
|   |                                   |   `-ImplicitCastExpr 0x188e5aaf290 <col:30> 'char *' <LValueToRValue>
|   |                                   |     `-DeclRefExpr 0x188e5aaf230 <col:30> 'char *' lvalue Var 0x188e5abe0a8 'm' 'char *'
|   |                                   `-IfStmt 0x188e5ac66d8 <line:747:20, line:835:13> has_else
|   |                                     |-BinaryOperator 0x188e5aaf368 <line:747:24, col:32> 'int' '=='
|   |                                     | |-ImplicitCastExpr 0x188e5aaf338 <col:24> 'int' <LValueToRValue>
|   |                                     | | `-DeclRefExpr 0x188e5aaf2f8 <col:24> 'int' lvalue Var 0x188e5ba7948 'text' 'int'
|   |                                     | `-ImplicitCastExpr 0x188e5aaf350 <col:32> 'int' <LValueToRValue>
|   |                                     |   `-DeclRefExpr 0x188e5aaf318 <col:32> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   |                                     |-CompoundStmt 0x188e5aaf4d8 <col:35, line:749:13>
|   |                                     `-IfStmt 0x188e5ac66b0 <col:20, line:835:13> has_else
|   |                                       |-BinaryOperator 0x188e5aaf558 <line:749:24, col:37> 'int' '=='
|   |                                       | |-ImplicitCastExpr 0x188e5aaf528 <col:24> 'int' <LValueToRValue>
|   |                                       | | `-DeclRefExpr 0x188e5aaf4e8 <col:24> 'int' lvalue Var 0x188e5ba7be8 'startdate' 'int'
|   |                                       | `-ImplicitCastExpr 0x188e5aaf540 <col:37> 'int' <LValueToRValue>
|   |                                       |   `-DeclRefExpr 0x188e5aaf508 <col:37> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   |                                       |-CompoundStmt 0x188e5aaf820 <col:40, line:753:13>
|   |                                       `-IfStmt 0x188e5ac6688 <col:20, line:835:13> has_else
|   |                                         |-BinaryOperator 0x188e5aaf8a0 <line:753:24, col:35> 'int' '=='
|   |                                         | |-ImplicitCastExpr 0x188e5aaf870 <col:24> 'int' <LValueToRValue>
|   |                                         | | `-DeclRefExpr 0x188e5aaf830 <col:24> 'int' lvalue Var 0x188e5ba7cd8 'enddate' 'int'
|   |                                         | `-ImplicitCastExpr 0x188e5aaf888 <col:35> 'int' <LValueToRValue>
|   |                                         |   `-DeclRefExpr 0x188e5aaf850 <col:35> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   |                                         |-CompoundStmt 0x188e5aafa78 <col:38, line:757:13>
|   |                                         `-IfStmt 0x188e5ac6660 <col:20, line:835:13> has_else
|   |                                           |-BinaryOperator 0x188e5aafaf8 <line:757:24, col:39> 'int' '=='
|   |                                           | |-ImplicitCastExpr 0x188e5aafac8 <col:24> 'int' <LValueToRValue>
|   |                                           | | `-DeclRefExpr 0x188e5aafa88 <col:24> 'int' lvalue Var 0x188e5ba64d8 'fingerprint' 'int'
|   |                                           | `-ImplicitCastExpr 0x188e5aafae0 <col:39> 'int' <LValueToRValue>
|   |                                           |   `-DeclRefExpr 0x188e5aafaa8 <col:39> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   |                                           |-CompoundStmt 0x188e5ab0728 <col:42, line:776:13>
|   |                                           | |-DeclStmt 0x188e5aafb98 <line:758:17, col:22>
|   |                                           | | `-VarDecl 0x188e5aafb30 <col:17, col:21> col:21 used j 'int'
|   |                                           | |-DeclStmt 0x188e5aafc30 <line:759:17, col:31>
|   |                                           | | `-VarDecl 0x188e5aafbc8 <col:17, col:30> col:30 used n 'unsigned int'
|   |                                           | |-DeclStmt 0x188e5aafcc8 <line:760:17, col:50>
|   |                                           | | `-VarDecl 0x188e5aafc60 <col:17, col:31> col:31 invalid md 'unsigned char'
|   |                                           | |-DeclStmt 0x188e5aafd60 <line:761:17, col:44>
|   |                                           | | `-VarDecl 0x188e5aafcf8 <col:17, col:31> col:31 invalid fdig 'const int *'
|   |                                           | |-IfStmt 0x188e5ab00e0 <line:766:17, line:769:17>
|   |                                           | | |-OpaqueValueExpr 0x188e5ab00c8 <<invalid sloc>> '_Bool'
|   |                                           | | `-CompoundStmt 0x188e5ab00b0 <line:766:52, line:769:17>
|   |                                           | |   `-GotoStmt 0x188e5ab0098 <line:768:21, col:26> 'end' 0x188e5ba8578
|   |                                           | `-ForStmt 0x188e5ab06f0 <line:772:17, line:775:17>
|   |                                           |   |-BinaryOperator 0x188e5ab03c0 <line:772:22, col:26> 'int' '='
|   |                                           |   | |-DeclRefExpr 0x188e5ab0360 <col:22> 'int' lvalue Var 0x188e5aafb30 'j' 'int'
|   |                                           |   | `-IntegerLiteral 0x188e5ab0398 <col:26> 'int' 0
|   |                                           |   |-<<<NULL>>>
|   |                                           |   |-BinaryOperator 0x188e5ab0490 <col:29, col:38> 'int' '<'
|   |                                           |   | |-ImplicitCastExpr 0x188e5ab0478 <col:29> 'int' <LValueToRValue>
|   |                                           |   | | `-DeclRefExpr 0x188e5ab03e0 <col:29> 'int' lvalue Var 0x188e5aafb30 'j' 'int'
|   |                                           |   | `-CStyleCastExpr 0x188e5ab0450 <col:33, col:38> 'int' <IntegralCast>
|   |                                           |   |   `-ImplicitCastExpr 0x188e5ab0438 <col:38> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |                                           |   |     `-DeclRefExpr 0x188e5ab0400 <col:38> 'unsigned int' lvalue Var 0x188e5aafbc8 'n' 'unsigned int'
|   |                                           |   |-UnaryOperator 0x188e5ab04d0 <col:41, col:42> 'int' postfix '++'
|   |                                           |   | `-DeclRefExpr 0x188e5ab04b0 <col:41> 'int' lvalue Var 0x188e5aafb30 'j' 'int'
|   |                                           |   `-CompoundStmt 0x188e5ab06e0 <col:46, line:775:17>
|   |                                           `-IfStmt 0x188e5ac6638 <line:779:18, line:835:13> has_else
|   |                                             |-BinaryOperator 0x188e5ab08b8 <line:779:22, col:55> 'int' '&&'
|   |                                             | |-ParenExpr 0x188e5ab07f8 <col:22, col:37> 'int'
|   |                                             | | `-BinaryOperator 0x188e5ab07d8 <col:23, col:36> 'int' '=='
|   |                                             | |   |-ImplicitCastExpr 0x188e5ab07a8 <col:23> 'int' <LValueToRValue>
|   |                                             | |   | `-DeclRefExpr 0x188e5ab0768 <col:23> 'int' lvalue Var 0x188e5ba6eb8 'sign_flag' 'int'
|   |                                             | |   `-ImplicitCastExpr 0x188e5ab07c0 <col:36> 'int' <LValueToRValue>
|   |                                             | |     `-DeclRefExpr 0x188e5ab0788 <col:36> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   |                                             | `-ParenExpr 0x188e5ab0898 <col:42, col:55> 'int'
|   |                                             |   `-BinaryOperator 0x188e5ab0878 <col:43, col:54> 'int' '=='
|   |                                             |     |-ImplicitCastExpr 0x188e5ab0860 <col:43> 'int' <LValueToRValue>
|   |                                             |     | `-DeclRefExpr 0x188e5ab0818 <col:43> 'int' lvalue Var 0x188e5ba5e48 'x509req' 'int'
|   |                                             |     `-IntegerLiteral 0x188e5ab0838 <col:54> 'int' 0
|   |                                             |-CompoundStmt 0x188e5ac50f8 <col:58, line:791:13>
|   |                                             | |-IfStmt 0x188e5ab0b60 <line:781:17, line:786:17>
|   |                                             | | |-OpaqueValueExpr 0x188e5ab0b48 <<invalid sloc>> '_Bool'
|   |                                             | | `-CompoundStmt 0x188e5ab0b30 <line:781:36, line:786:17>
|   |                                             | |   `-IfStmt 0x188e5ab0b18 <line:784:21, line:785:30>
|   |                                             | |     |-OpaqueValueExpr 0x188e5ab0b00 <<invalid sloc>> '_Bool'
|   |                                             | |     `-GotoStmt 0x188e5ab0ae8 <col:25, col:30> 'end' 0x188e5ba8578
|   |                                             | |-CStyleCastExpr 0x188e5ab0f78 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
|   |                                             | | `-ParenExpr 0x188e5ab0f58 <col:35, col:128> 'int'
|   |                                             | |   `-BinaryOperator 0x188e5ab0f08 <col:37, col:126> 'int' '||'
|   |                                             | |     |-ParenExpr 0x188e5ab0c00 <col:37, col:53> 'int'
|   |                                             | |     | `-UnaryOperator 0x188e5ab0be8 <col:38, col:52> 'int' prefix '!' cannot overflow
|   |                                             | |     |   `-UnaryOperator 0x188e5ab0bd0 <col:39, col:52> 'int' prefix '!' cannot overflow
|   |                                             | |     |     `-ImplicitCastExpr 0x188e5ab0bb8 <col:40, col:52> 'int' <LValueToRValue>
|   |                                             | |     |       `-ParenExpr 0x188e5ab0b98 <col:40, col:52> 'int' lvalue
|   |                                             | |     |         `-DeclRefExpr 0x188e5ab0b78 <.//openssl//file_jk/before\apps\x509.c:788:24> 'int' lvalue Var 0x188e5ba6628 'need_rand' 'int'
|   |                                             | |     `-ParenExpr 0x188e5ab0ee8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   |                                             | |       `-BinaryOperator 0x188e5ab0ec8 <col:59, col:125> 'int' ','
|   |                                             | |         |-CallExpr 0x188e5ab0df0 <col:59, col:122> 'void'
|   |                                             | |         | |-ImplicitCastExpr 0x188e5ab0dd8 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |                                             | |         | | `-DeclRefExpr 0x188e5ab0c20 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x188e5a0b090 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   |                                             | |         | |-ImplicitCastExpr 0x188e5ab0e40 <<scratch space>:77:1> 'const wchar_t *' <NoOp>
|   |                                             | |         | | `-ImplicitCastExpr 0x188e5ab0e28 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   |                                             | |         | |   `-StringLiteral 0x188e5ab0c78 <col:1> 'unsigned short [10]' lvalue L"need_rand"
|   |                                             | |         | |-ImplicitCastExpr 0x188e5ab0e70 <line:79:1> 'const wchar_t *' <NoOp>
|   |                                             | |         | | `-ImplicitCastExpr 0x188e5ab0e58 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   |                                             | |         | |   `-StringLiteral 0x188e5ab0ce8 <col:1> 'unsigned short [39]' lvalue L".//openssl//file_jk/before\\apps\\x509.c"
|   |                                             | |         | `-ImplicitCastExpr 0x188e5ab0e88 <line:80:1> 'unsigned int' <IntegralCast>
|   |                                             | |         |   `-IntegerLiteral 0x188e5ab0d50 <col:1> 'int' 788
|   |                                             | |         `-IntegerLiteral 0x188e5ab0ea0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   |                                             | `-IfStmt 0x188e5ac50e0 <.//openssl//file_jk/before\apps\x509.c:789:17, line:790:26>
|   |                                             |   |-OpaqueValueExpr 0x188e5ac50c8 <<invalid sloc>> '_Bool'
|   |                                             |   `-GotoStmt 0x188e5ac50b0 <col:21, col:26> 'end' 0x188e5ba8578
|   |                                             `-IfStmt 0x188e5ac6610 <line:791:20, line:835:13> has_else
|   |                                               |-BinaryOperator 0x188e5ac5190 <line:791:24, col:35> 'int' '=='
|   |                                               | |-ImplicitCastExpr 0x188e5ac5160 <col:24> 'int' <LValueToRValue>
|   |                                               | | `-DeclRefExpr 0x188e5ac5120 <col:24> 'int' lvalue Var 0x188e5ba6f60 'CA_flag' 'int'
|   |                                               | `-ImplicitCastExpr 0x188e5ac5178 <col:35> 'int' <LValueToRValue>
|   |                                               |   `-DeclRefExpr 0x188e5ac5140 <col:35> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   |                                               |-CompoundStmt 0x188e5ac5920 <col:38, line:806:13>
|   |                                               | |-IfStmt 0x188e5ac5490 <line:793:17, line:798:17>
|   |                                               | | |-BinaryOperator 0x188e5ac52d8 <line:793:21, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |                                               | | | |-ImplicitCastExpr 0x188e5ac52a8 <.//openssl//file_jk/before\apps\x509.c:793:21> 'char *' <LValueToRValue>
|   |                                               | | | | `-DeclRefExpr 0x188e5ac5200 <col:21> 'char *' lvalue Var 0x188e5bb0ab8 'CAkeyfile' 'char *'
|   |                                               | | | `-ImplicitCastExpr 0x188e5ac52c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |                                               | | |   `-ParenExpr 0x188e5ac5288 <col:17, col:27> 'void *'
|   |                                               | | |     `-CStyleCastExpr 0x188e5ac5260 <col:18, col:26> 'void *' <NullToPointer>
|   |                                               | | |       `-IntegerLiteral 0x188e5ac5220 <col:26> 'int' 0
|   |                                               | | `-CompoundStmt 0x188e5ac5478 <.//openssl//file_jk/before\apps\x509.c:793:40, line:798:17>
|   |                                               | |   `-IfStmt 0x188e5ac5460 <line:796:21, line:797:30>
|   |                                               | |     |-OpaqueValueExpr 0x188e5ac5448 <<invalid sloc>> '_Bool'
|   |                                               | |     `-GotoStmt 0x188e5ac5430 <col:25, col:30> 'end' 0x188e5ba8578
|   |                                               | |-CStyleCastExpr 0x188e5ac57d0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
|   |                                               | | `-ParenExpr 0x188e5ac57b0 <col:35, col:128> 'int'
|   |                                               | |   `-BinaryOperator 0x188e5ac5760 <col:37, col:126> 'int' '||'
|   |                                               | |     |-ParenExpr 0x188e5ac5530 <col:37, col:53> 'int'
|   |                                               | |     | `-UnaryOperator 0x188e5ac5518 <col:38, col:52> 'int' prefix '!' cannot overflow
|   |                                               | |     |   `-UnaryOperator 0x188e5ac5500 <col:39, col:52> 'int' prefix '!' cannot overflow
|   |                                               | |     |     `-ImplicitCastExpr 0x188e5ac54e8 <col:40, col:52> 'int' <LValueToRValue>
|   |                                               | |     |       `-ParenExpr 0x188e5ac54c8 <col:40, col:52> 'int' lvalue
|   |                                               | |     |         `-DeclRefExpr 0x188e5ac54a8 <.//openssl//file_jk/before\apps\x509.c:800:24> 'int' lvalue Var 0x188e5ba6628 'need_rand' 'int'
|   |                                               | |     `-ParenExpr 0x188e5ac5740 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   |                                               | |       `-BinaryOperator 0x188e5ac5720 <col:59, col:125> 'int' ','
|   |                                               | |         |-CallExpr 0x188e5ac5648 <col:59, col:122> 'void'
|   |                                               | |         | |-ImplicitCastExpr 0x188e5ac5630 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |                                               | |         | | `-DeclRefExpr 0x188e5ac5550 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x188e5a0b090 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   |                                               | |         | |-ImplicitCastExpr 0x188e5ac5698 <<scratch space>:82:1> 'const wchar_t *' <NoOp>
|   |                                               | |         | | `-ImplicitCastExpr 0x188e5ac5680 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   |                                               | |         | |   `-StringLiteral 0x188e5ac5570 <col:1> 'unsigned short [10]' lvalue L"need_rand"
|   |                                               | |         | |-ImplicitCastExpr 0x188e5ac56c8 <line:84:1> 'const wchar_t *' <NoOp>
|   |                                               | |         | | `-ImplicitCastExpr 0x188e5ac56b0 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   |                                               | |         | |   `-StringLiteral 0x188e5ac55a0 <col:1> 'unsigned short [39]' lvalue L".//openssl//file_jk/before\\apps\\x509.c"
|   |                                               | |         | `-ImplicitCastExpr 0x188e5ac56e0 <line:85:1> 'unsigned int' <IntegralCast>
|   |                                               | |         |   `-IntegerLiteral 0x188e5ac5608 <col:1> 'int' 800
|   |                                               | |         `-IntegerLiteral 0x188e5ac56f8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   |                                               | `-IfStmt 0x188e5ac5908 <.//openssl//file_jk/before\apps\x509.c:801:17, line:805:26>
|   |                                               |   |-OpaqueValueExpr 0x188e5ac58f0 <<invalid sloc>> '_Bool'
|   |                                               |   `-GotoStmt 0x188e5ac58d8 <col:21, col:26> 'end' 0x188e5ba8578
|   |                                               `-IfStmt 0x188e5ac65e8 <line:806:20, line:835:13> has_else
|   |                                                 |-BinaryOperator 0x188e5ac59b8 <line:806:24, col:35> 'int' '=='
|   |                                                 | |-ImplicitCastExpr 0x188e5ac5988 <col:24> 'int' <LValueToRValue>
|   |                                                 | | `-DeclRefExpr 0x188e5ac5948 <col:24> 'int' lvalue Var 0x188e5ba5e48 'x509req' 'int'
|   |                                                 | `-ImplicitCastExpr 0x188e5ac59a0 <col:35> 'int' <LValueToRValue>
|   |                                                 |   `-DeclRefExpr 0x188e5ac5968 <col:35> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   |                                                 |-CompoundStmt 0x188e5ac63f0 <col:38, line:833:13>
|   |                                                 | |-IfStmt 0x188e5ac5d48 <line:810:17, line:818:17> has_else
|   |                                                 | | |-BinaryOperator 0x188e5ac5b08 <line:810:21, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |                                                 | | | |-ImplicitCastExpr 0x188e5ac5ad8 <.//openssl//file_jk/before\apps\x509.c:810:21> 'char *' <LValueToRValue>
|   |                                                 | | | | `-DeclRefExpr 0x188e5ac5a30 <col:21> 'char *' lvalue Var 0x188e5ba5a18 'keyfile' 'char *'
|   |                                                 | | | `-ImplicitCastExpr 0x188e5ac5af0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |                                                 | | |   `-ParenExpr 0x188e5ac5ab8 <col:17, col:27> 'void *'
|   |                                                 | | |     `-CStyleCastExpr 0x188e5ac5a90 <col:18, col:26> 'void *' <NullToPointer>
|   |                                                 | | |       `-IntegerLiteral 0x188e5ac5a50 <col:26> 'int' 0
|   |                                                 | | |-CompoundStmt 0x188e5ac5b98 <.//openssl//file_jk/before\apps\x509.c:810:38, line:813:17>
|   |                                                 | | | `-GotoStmt 0x188e5ac5b80 <line:812:21, col:26> 'end' 0x188e5ba8578
|   |                                                 | | `-CompoundStmt 0x188e5ac5d30 <line:813:24, line:818:17>
|   |                                                 | |   `-IfStmt 0x188e5ac5d18 <line:816:21, line:817:30>
|   |                                                 | |     |-OpaqueValueExpr 0x188e5ac5d00 <<invalid sloc>> '_Bool'
|   |                                                 | |     `-GotoStmt 0x188e5ac5ce8 <col:25, col:30> 'end' 0x188e5ba8578
|   |                                                 | |-IfStmt 0x188e5ac60d8 <line:824:17, line:827:17>
|   |                                                 | | |-OpaqueValueExpr 0x188e5ac60c0 <<invalid sloc>> '_Bool'
|   |                                                 | | `-CompoundStmt 0x188e5ac60a8 <line:824:33, line:827:17>
|   |                                                 | |   `-GotoStmt 0x188e5ac6090 <line:826:21, col:26> 'end' 0x188e5ba8578
|   |                                                 | |-IfStmt 0x188e5ac6370 <line:828:17, line:831:17>
|   |                                                 | | |-UnaryOperator 0x188e5ac6128 <line:828:21, col:22> 'int' prefix '!' cannot overflow
|   |                                                 | | | `-ImplicitCastExpr 0x188e5ac6110 <col:22> 'int' <LValueToRValue>
|   |                                                 | | |   `-DeclRefExpr 0x188e5ac60f0 <col:22> 'int' lvalue Var 0x188e5ba6e10 'noout' 'int'
|   |                                                 | | `-CompoundStmt 0x188e5ac6360 <col:29, line:831:17>
|   |                                                 | `-BinaryOperator 0x188e5ac63d0 <line:832:17, col:25> 'int' '='
|   |                                                 |   |-DeclRefExpr 0x188e5ac6388 <col:17> 'int' lvalue Var 0x188e5ba6e10 'noout' 'int'
|   |                                                 |   `-IntegerLiteral 0x188e5ac63a8 <col:25> 'int' 1
|   |                                                 `-IfStmt 0x188e5ac65d0 <line:833:20, line:835:13>
|   |                                                   |-BinaryOperator 0x188e5ac6490 <line:833:24, col:34> 'int' '=='
|   |                                                   | |-ImplicitCastExpr 0x188e5ac6460 <col:24> 'int' <LValueToRValue>
|   |                                                   | | `-DeclRefExpr 0x188e5ac6420 <col:24> 'int' lvalue Var 0x188e5ba6d28 'ocspid' 'int'
|   |                                                   | `-ImplicitCastExpr 0x188e5ac6478 <col:34> 'int' <LValueToRValue>
|   |                                                   |   `-DeclRefExpr 0x188e5ac6440 <col:34> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   |                                                   `-CompoundStmt 0x188e5ac65c0 <col:37, line:835:13>
|   |-IfStmt 0x188e5ac30c0 <line:839:5, line:850:5>
|   | |-ImplicitCastExpr 0x188e5ac69d0 <line:839:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x188e5ac69b0 <col:9> 'int' lvalue Var 0x188e5ba66d0 'checkend' 'int'
|   | `-CompoundStmt 0x188e5ac3098 <col:19, line:850:5>
|   |   |-DeclStmt 0x188e5ac6ca8 <line:840:9, col:49>
|   |   | `-VarDecl 0x188e5ac69f8 <col:9, col:38> col:16 used tcheck 'time_t':'long long' cinit
|   |   |   `-BinaryOperator 0x188e5ac6c88 <col:25, col:38> 'long long' '+'
|   |   |     |-ImplicitCastExpr 0x188e5ac6c70 <col:25, col:34> 'long long' <IntegralCast>
|   |   |     | `-CallExpr 0x188e5ac6c10 <col:25, col:34> 'int'
|   |   |     |   |-ImplicitCastExpr 0x188e5ac6bf8 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   |   |     |   | `-DeclRefExpr 0x188e5ac6b50 <col:25> 'int ()' Function 0x188e5ac6a88 'time' 'int ()'
|   |   |     |   `-ParenExpr 0x188e5ac6bd8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |   |     |     `-CStyleCastExpr 0x188e5ac6bb0 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     |       `-IntegerLiteral 0x188e5ac6b70 <col:26> 'int' 0
|   |   |     `-ImplicitCastExpr 0x188e5ac6c58 <.//openssl//file_jk/before\apps\x509.c:840:38> 'time_t':'long long' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x188e5ac6c38 <col:38> 'time_t':'long long' lvalue Var 0x188e5ba7db0 'checkoffset' 'time_t':'long long'
|   |   |-IfStmt 0x188e5ac3058 <line:842:9, line:848:9> has_else
|   |   | |-OpaqueValueExpr 0x188e5ac3040 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x188e5ac6f50 <line:842:64, line:845:9>
|   |   | | `-BinaryOperator 0x188e5ac6f30 <line:844:13, col:19> 'int' '='
|   |   | |   |-DeclRefExpr 0x188e5ac6ee8 <col:13> 'int' lvalue Var 0x188e5ba7530 'ret' 'int'
|   |   | |   `-IntegerLiteral 0x188e5ac6f08 <col:19> 'int' 1
|   |   | `-CompoundStmt 0x188e5ac7028 <line:845:16, line:848:9>
|   |   |   `-BinaryOperator 0x188e5ac7008 <line:847:13, col:19> 'int' '='
|   |   |     |-DeclRefExpr 0x188e5ac6fc0 <col:13> 'int' lvalue Var 0x188e5ba7530 'ret' 'int'
|   |   |     `-IntegerLiteral 0x188e5ac6fe0 <col:19> 'int' 0
|   |   `-GotoStmt 0x188e5ac3080 <line:849:9, col:14> 'end' 0x188e5ba8578
|   |-IfStmt 0x188e5ac3268 <line:854:5, line:857:5>
|   | |-BinaryOperator 0x188e5ac31a8 <line:854:9, col:18> 'int' '||'
|   | | |-ImplicitCastExpr 0x188e5ac3178 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x188e5ac3138 <col:9> 'int' lvalue Var 0x188e5ba6e10 'noout' 'int'
|   | | `-ImplicitCastExpr 0x188e5ac3190 <col:18> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x188e5ac3158 <col:18> 'int' lvalue Var 0x188e5ba7850 'nocert' 'int'
|   | `-CompoundStmt 0x188e5ac3248 <col:26, line:857:5>
|   |   |-BinaryOperator 0x188e5ac3210 <line:855:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x188e5ac31c8 <col:9> 'int' lvalue Var 0x188e5ba7530 'ret' 'int'
|   |   | `-IntegerLiteral 0x188e5ac31e8 <col:15> 'int' 0
|   |   `-GotoStmt 0x188e5ac3230 <line:856:9, col:14> 'end' 0x188e5ba8578
|   |-IfStmt 0x188e5ac3880 <line:859:5, line:869:5> has_else
|   | |-BinaryOperator 0x188e5ac32e0 <line:859:9, .//openssl//file_jk/before\apps/apps.h:529:26> 'int' '=='
|   | | |-ImplicitCastExpr 0x188e5ac32c8 <.//openssl//file_jk/before\apps\x509.c:859:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x188e5ac3280 <col:9> 'int' lvalue Var 0x188e5ba68c8 'outformat' 'int'
|   | | `-IntegerLiteral 0x188e5ac32a0 <.//openssl//file_jk/before\apps/apps.h:529:26> 'int' 4
|   | |-NullStmt 0x188e5ac3878 <.//openssl//file_jk/before\apps\x509.c:860:9>
|   | `-IfStmt 0x188e5ac3850 <line:861:10, line:869:5> has_else
|   |   |-BinaryOperator 0x188e5ac34f8 <line:861:14, .//openssl//file_jk/before\apps/apps.h:530:43> 'int' '=='
|   |   | |-ImplicitCastExpr 0x188e5ac34e0 <.//openssl//file_jk/before\apps\x509.c:861:14> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x188e5ac3430 <col:14> 'int' lvalue Var 0x188e5ba68c8 'outformat' 'int'
|   |   | `-ParenExpr 0x188e5ac34c0 <.//openssl//file_jk/before\apps/apps.h:530:25, col:43> 'int'
|   |   |   `-BinaryOperator 0x188e5ac34a0 <col:26, line:524:26> 'int' '|'
|   |   |     |-IntegerLiteral 0x188e5ac3450 <line:530:26> 'int' 5
|   |   |     `-IntegerLiteral 0x188e5ac3478 <line:524:26> 'int' 32768
|   |   |-CompoundStmt 0x188e5ac37b0 <.//openssl//file_jk/before\apps\x509.c:861:39, line:866:5>
|   |   `-CompoundStmt 0x188e5ac3838 <col:12, line:869:5>
|   |     `-GotoStmt 0x188e5ac3820 <line:868:9, col:14> 'end' 0x188e5ba8578
|   |-IfStmt 0x188e5ac39a0 <line:870:5, line:874:5>
|   | |-UnaryOperator 0x188e5ac38e0 <line:870:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x188e5ac38c8 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x188e5ac38a8 <col:10> 'int' lvalue Var 0x188e5ba75d8 'i' 'int'
|   | `-CompoundStmt 0x188e5ac3988 <col:13, line:874:5>
|   |   `-GotoStmt 0x188e5ac3970 <line:873:9, col:14> 'end' 0x188e5ba8578
|   |-BinaryOperator 0x188e5ac3a00 <line:875:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x188e5ac39b8 <col:5> 'int' lvalue Var 0x188e5ba7530 'ret' 'int'
|   | `-IntegerLiteral 0x188e5ac39d8 <col:11> 'int' 0
|   |-LabelStmt 0x188e5ac3b70 <line:876:2, line:878:33> 'end'
|   | `-IfStmt 0x188e5ac3b58 <line:877:5, line:878:33>
|   |   |-ImplicitCastExpr 0x188e5ac3a40 <line:877:9> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x188e5ac3a20 <col:9> 'int' lvalue Var 0x188e5ba6628 'need_rand' 'int'
|   |   `-CallExpr 0x188e5ac3b18 <line:878:9, col:33> 'int'
|   |     |-ImplicitCastExpr 0x188e5ac3b00 <col:9> 'int (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x188e5ac3a58 <col:9> 'int (const char *)' Function 0x188e5a0efb0 'app_RAND_write_file' 'int (const char *)'
|   |     `-ImplicitCastExpr 0x188e5ac3b40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <NullToPointer>
|   |       `-ParenExpr 0x188e5ac3ae0 <col:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x188e5ac3ab8 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x188e5ac3a78 <col:26> 'int' 0
|   |-CallExpr 0x188e5ac4540 <.//openssl//file_jk/before\apps\x509.c:895:5, col:24> 'int'
|   | |-ImplicitCastExpr 0x188e5ac4528 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x188e5ac44e8 <col:5> 'int ()' Function 0x188e5aaf148 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x188e5ac4568 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x188e5ac4508 <col:18> 'char *' lvalue Var 0x188e5ba5558 'passin' 'char *'
|   `-ReturnStmt 0x188e5ac45d8 <line:896:5, col:16>
|     `-ImplicitCastExpr 0x188e5ac45c0 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x188e5ac45a0 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x188e5ac4580 <col:13> 'int' lvalue Var 0x188e5ba7530 'ret' 'int'
|-FunctionDecl 0x188e5ac49d0 <line:899:1, line:938:1> line:899:22 invalid x509_load_serial 'int *(const char *, const char *, int)' static
| |-ParmVarDecl 0x188e5ac47a0 <col:39, col:51> col:51 used CAfile 'const char *'
| |-ParmVarDecl 0x188e5ac4820 <col:59, col:71> col:71 used serialfile 'const char *'
| |-ParmVarDecl 0x188e5ac48a0 <line:900:39, col:43> col:43 used create 'int'
| `-CompoundStmt 0x188e5ac02f8 <line:901:1, line:938:1>
|   |-DeclStmt 0x188e5ac4c58 <line:902:5, col:25>
|   | |-VarDecl 0x188e5ac4ab8 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\apps\x509.c:902:11 used buf 'char *' cinit
|   | | `-ImplicitCastExpr 0x188e5ac4ba8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x188e5ac4b88 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x188e5ac4b60 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x188e5ac4b20 <col:26> 'int' 0
|   | `-VarDecl 0x188e5ac4bd8 <.//openssl//file_jk/before\apps\x509.c:902:5, col:24> col:24 used p 'char *'
|   |-DeclStmt 0x188e5ac4df8 <line:905:5, col:15>
|   | `-VarDecl 0x188e5ac4d90 <col:5, col:12> col:12 used len 'size_t':'unsigned long long'
|   |-BinaryOperator 0x188e5abf308 <line:907:5, line:909:38> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x188e5ac4e10 <line:907:5> 'size_t':'unsigned long long' lvalue Var 0x188e5ac4d90 'len' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x188e5abf2e8 <col:11, line:909:38> 'unsigned long long' '+'
|   |   |-ParenExpr 0x188e5abf288 <line:907:11, line:909:34> 'unsigned long long'
|   |   | `-ConditionalOperator 0x188e5abf258 <line:907:12, line:909:33> 'unsigned long long'
|   |   |   |-ParenExpr 0x188e5ac4f40 <line:907:12, col:31> 'int'
|   |   |   | `-BinaryOperator 0x188e5ac4f20 <col:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |   |   |   |-ImplicitCastExpr 0x188e5ac4ef0 <.//openssl//file_jk/before\apps\x509.c:907:13> 'const char *' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x188e5ac4e48 <col:13> 'const char *' lvalue ParmVar 0x188e5ac4820 'serialfile' 'const char *'
|   |   |   |   `-ImplicitCastExpr 0x188e5ac4f08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   |   |   |     `-ParenExpr 0x188e5ac4ed0 <col:17, col:27> 'void *'
|   |   |   |       `-CStyleCastExpr 0x188e5ac4ea8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |   |         `-IntegerLiteral 0x188e5ac4e68 <col:26> 'int' 0
|   |   |   |-ParenExpr 0x188e5abf168 <.//openssl//file_jk/before\apps\x509.c:908:14, col:51> 'unsigned long long'
|   |   |   | `-BinaryOperator 0x188e5abf148 <col:15, col:50> 'unsigned long long' '+'
|   |   |   |   |-BinaryOperator 0x188e5abf0e8 <col:15, col:46> 'unsigned long long' '+'
|   |   |   |   | |-CallExpr 0x188e5ac5000 <col:15, col:28> 'unsigned long long'
|   |   |   |   | | |-ImplicitCastExpr 0x188e5ac4fe8 <col:15> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   |   |   | | | `-DeclRefExpr 0x188e5ac4f60 <col:15> 'unsigned long long (const char *)' Function 0x188e5b47900 'strlen' 'unsigned long long (const char *)'
|   |   |   |   | | `-ImplicitCastExpr 0x188e5ac5028 <col:22> 'const char *' <LValueToRValue>
|   |   |   |   | |   `-DeclRefExpr 0x188e5ac4f80 <col:22> 'const char *' lvalue ParmVar 0x188e5ac47a0 'CAfile' 'const char *'
|   |   |   |   | `-CallExpr 0x188e5abf090 <col:32, col:46> 'unsigned long long'
|   |   |   |   |   |-ImplicitCastExpr 0x188e5abf078 <col:32> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   |   |   |   | `-DeclRefExpr 0x188e5abf020 <col:32> 'unsigned long long (const char *)' Function 0x188e5b47900 'strlen' 'unsigned long long (const char *)'
|   |   |   |   |   `-ImplicitCastExpr 0x188e5abf0d0 <line:31:17> 'const char *' <NoOp>
|   |   |   |   |     `-ImplicitCastExpr 0x188e5abf0b8 <col:17> 'char *' <ArrayToPointerDecay>
|   |   |   |   |       `-StringLiteral 0x188e5abf040 <col:17> 'char [5]' lvalue ".srl"
|   |   |   |   `-ImplicitCastExpr 0x188e5abf130 <line:908:50> 'unsigned long long' <IntegralCast>
|   |   |   |     `-IntegerLiteral 0x188e5abf108 <col:50> 'int' 1
|   |   |   `-ParenExpr 0x188e5abf238 <line:909:14, col:33> 'unsigned long long'
|   |   |     `-CallExpr 0x188e5abf1f8 <col:15, col:32> 'unsigned long long'
|   |   |       |-ImplicitCastExpr 0x188e5abf1e0 <col:15> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x188e5abf188 <col:15> 'unsigned long long (const char *)' Function 0x188e5b47900 'strlen' 'unsigned long long (const char *)'
|   |   |       `-ImplicitCastExpr 0x188e5abf220 <col:22> 'const char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x188e5abf1a8 <col:22> 'const char *' lvalue ParmVar 0x188e5ac4820 'serialfile' 'const char *'
|   |   `-ImplicitCastExpr 0x188e5abf2d0 <col:38> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x188e5abf2a8 <col:38> 'int' 1
|   |-BinaryOperator 0x188e5abf488 <line:910:5, col:43> 'char *' '='
|   | |-DeclRefExpr 0x188e5abf328 <col:5> 'char *' lvalue Var 0x188e5ac4ab8 'buf' 'char *'
|   | `-ImplicitCastExpr 0x188e5abf470 <col:11, col:43> 'char *' <BitCast>
|   |   `-CallExpr 0x188e5abf3e0 <col:11, col:43> 'void *'
|   |     |-ImplicitCastExpr 0x188e5abf3c8 <col:11> 'void *(*)(int, const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x188e5abf360 <col:11> 'void *(int, const char *)' Function 0x188e5b9bc20 'app_malloc' 'void *(int, const char *)'
|   |     |-ImplicitCastExpr 0x188e5abf428 <col:22> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x188e5abf410 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x188e5abf380 <col:22> 'size_t':'unsigned long long' lvalue Var 0x188e5ac4d90 'len' 'size_t':'unsigned long long'
|   |     `-ImplicitCastExpr 0x188e5abf458 <col:27> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x188e5abf440 <col:27> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x188e5abf3a0 <col:27> 'char [15]' lvalue "serial# buffer"
|   |-IfStmt 0x188e5abfdf0 <line:911:5, line:920:45> has_else
|   | |-BinaryOperator 0x188e5abf580 <line:911:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x188e5abf550 <.//openssl//file_jk/before\apps\x509.c:911:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x188e5abf4a8 <col:9> 'const char *' lvalue ParmVar 0x188e5ac4820 'serialfile' 'const char *'
|   | | `-ImplicitCastExpr 0x188e5abf568 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x188e5abf530 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x188e5abf508 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x188e5abf4c8 <col:26> 'int' 0
|   | |-CompoundStmt 0x188e5abfcb0 <.//openssl//file_jk/before\apps\x509.c:911:29, line:919:5>
|   | | |-CallExpr 0x188e5abf728 <line:912:9, col:41> 'int'
|   | | | |-ImplicitCastExpr 0x188e5abf710 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x188e5abf690 <col:9> 'int ()' Function 0x188e5abf5c8 'OPENSSL_strlcpy' 'int ()'
|   | | | |-ImplicitCastExpr 0x188e5abf760 <col:25> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x188e5abf6b0 <col:25> 'char *' lvalue Var 0x188e5ac4ab8 'buf' 'char *'
|   | | | |-ImplicitCastExpr 0x188e5abf778 <col:30> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x188e5abf6d0 <col:30> 'const char *' lvalue ParmVar 0x188e5ac47a0 'CAfile' 'const char *'
|   | | | `-ImplicitCastExpr 0x188e5abf790 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x188e5abf6f0 <col:38> 'size_t':'unsigned long long' lvalue Var 0x188e5ac4d90 'len' 'size_t':'unsigned long long'
|   | | |-ForStmt 0x188e5abfa70 <line:913:9, line:917:13>
|   | | | |-BinaryOperator 0x188e5abf818 <line:913:14, col:18> 'char *' '='
|   | | | | |-DeclRefExpr 0x188e5abf7a8 <col:14> 'char *' lvalue Var 0x188e5ac4bd8 'p' 'char *'
|   | | | | `-ImplicitCastExpr 0x188e5abf800 <col:18> 'char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x188e5abf7e0 <col:18> 'char *' lvalue Var 0x188e5ac4ab8 'buf' 'char *'
|   | | | |-<<<NULL>>>
|   | | | |-ImplicitCastExpr 0x188e5abf888 <col:23, col:24> 'char' <LValueToRValue>
|   | | | | `-UnaryOperator 0x188e5abf870 <col:23, col:24> 'char' lvalue prefix '*' cannot overflow
|   | | | |   `-ImplicitCastExpr 0x188e5abf858 <col:24> 'char *' <LValueToRValue>
|   | | | |     `-DeclRefExpr 0x188e5abf838 <col:24> 'char *' lvalue Var 0x188e5ac4bd8 'p' 'char *'
|   | | | |-UnaryOperator 0x188e5abf8c0 <col:27, col:28> 'char *' postfix '++'
|   | | | | `-DeclRefExpr 0x188e5abf8a0 <col:27> 'char *' lvalue Var 0x188e5ac4bd8 'p' 'char *'
|   | | | `-IfStmt 0x188e5abfa58 <line:914:13, line:917:13>
|   | | |   |-BinaryOperator 0x188e5abf970 <line:914:17, col:23> 'int' '=='
|   | | |   | |-ImplicitCastExpr 0x188e5abf958 <col:17, col:18> 'int' <IntegralCast>
|   | | |   | | `-ImplicitCastExpr 0x188e5abf940 <col:17, col:18> 'char' <LValueToRValue>
|   | | |   | |   `-UnaryOperator 0x188e5abf910 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
|   | | |   | |     `-ImplicitCastExpr 0x188e5abf8f8 <col:18> 'char *' <LValueToRValue>
|   | | |   | |       `-DeclRefExpr 0x188e5abf8d8 <col:18> 'char *' lvalue Var 0x188e5ac4bd8 'p' 'char *'
|   | | |   | `-CharacterLiteral 0x188e5abf928 <col:23> 'int' 46
|   | | |   `-CompoundStmt 0x188e5abfa38 <col:28, line:917:13>
|   | | |     |-BinaryOperator 0x188e5abfa10 <line:915:17, col:22> 'char' '='
|   | | |     | |-UnaryOperator 0x188e5abf9c8 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
|   | | |     | | `-ImplicitCastExpr 0x188e5abf9b0 <col:18> 'char *' <LValueToRValue>
|   | | |     | |   `-DeclRefExpr 0x188e5abf990 <col:18> 'char *' lvalue Var 0x188e5ac4bd8 'p' 'char *'
|   | | |     | `-ImplicitCastExpr 0x188e5abf9f8 <col:22> 'char' <IntegralCast>
|   | | |     |   `-CharacterLiteral 0x188e5abf9e0 <col:22> 'int' 0
|   | | |     `-BreakStmt 0x188e5abfa30 <line:916:17>
|   | | `-CallExpr 0x188e5abfc30 <line:918:9, col:42> 'int'
|   | |   |-ImplicitCastExpr 0x188e5abfc18 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x188e5abfb98 <col:9> 'int ()' Function 0x188e5abfad0 'OPENSSL_strlcat' 'int ()'
|   | |   |-ImplicitCastExpr 0x188e5abfc68 <col:25> 'char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x188e5abfbb8 <col:25> 'char *' lvalue Var 0x188e5ac4ab8 'buf' 'char *'
|   | |   |-ImplicitCastExpr 0x188e5abfc80 <line:31:17> 'char *' <ArrayToPointerDecay>
|   | |   | `-StringLiteral 0x188e5abfbd8 <col:17> 'char [5]' lvalue ".srl"
|   | |   `-ImplicitCastExpr 0x188e5abfc98 <line:918:39> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     `-DeclRefExpr 0x188e5abfbf8 <col:39> 'size_t':'unsigned long long' lvalue Var 0x188e5ac4d90 'len' 'size_t':'unsigned long long'
|   | `-CallExpr 0x188e5abfd70 <line:920:9, col:45> 'int'
|   |   |-ImplicitCastExpr 0x188e5abfd58 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x188e5abfcd8 <col:9> 'int ()' Function 0x188e5abf5c8 'OPENSSL_strlcpy' 'int ()'
|   |   |-ImplicitCastExpr 0x188e5abfda8 <col:25> 'char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x188e5abfcf8 <col:25> 'char *' lvalue Var 0x188e5ac4ab8 'buf' 'char *'
|   |   |-ImplicitCastExpr 0x188e5abfdc0 <col:30> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x188e5abfd18 <col:30> 'const char *' lvalue ParmVar 0x188e5ac4820 'serialfile' 'const char *'
|   |   `-ImplicitCastExpr 0x188e5abfdd8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x188e5abfd38 <col:42> 'size_t':'unsigned long long' lvalue Var 0x188e5ac4d90 'len' 'size_t':'unsigned long long'
|   |-IfStmt 0x188e5abffe8 <line:923:5, line:924:14>
|   | |-OpaqueValueExpr 0x188e5abffd0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x188e5abffb8 <col:9, col:14> 'end' 0x188e5abff68
|   |-IfStmt 0x188e5ac0120 <line:926:5, line:929:5>
|   | |-OpaqueValueExpr 0x188e5ac0108 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x188e5ac00f0 <line:926:34, line:929:5>
|   |   `-GotoStmt 0x188e5ac00d8 <line:928:9, col:14> 'end' 0x188e5abff68
|   |-IfStmt 0x188e5ac0210 <line:931:5, line:932:14>
|   | |-OpaqueValueExpr 0x188e5ac01f8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x188e5ac01e0 <col:9, col:14> 'end' 0x188e5abff68
|   `-LabelStmt 0x188e5ac02c0 <line:934:2, line:935:21> 'end'
|     `-CallExpr 0x188e5ac0280 <col:5, col:21> 'int'
|       |-ImplicitCastExpr 0x188e5ac0268 <col:5> 'int (*)()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x188e5ac0228 <col:5> 'int ()' Function 0x188e5aaf148 'OPENSSL_free' 'int ()'
|       `-ImplicitCastExpr 0x188e5ac02a8 <col:18> 'char *' <LValueToRValue>
|         `-DeclRefExpr 0x188e5ac0248 <col:18> 'char *' lvalue Var 0x188e5ac4ab8 'buf' 'char *'
|-FunctionDecl 0x188e5ac0740 <line:940:1, line:1016:1> line:940:12 invalid x509_certify 'int (int *, const char *, const int *, int *, int *, int *, int (*)())' static
| |-ParmVarDecl 0x188e5ac0368 <col:25, col:37> col:37 invalid ctx 'int *'
| |-ParmVarDecl 0x188e5ac03e8 <col:42, col:54> col:54 used CAfile 'const char *'
| |-ParmVarDecl 0x188e5ac0468 <col:62, col:76> col:76 invalid digest 'const int *'
| |-ParmVarDecl 0x188e5ac04e8 <line:941:25, col:31> col:31 invalid x 'int *'
| |-ParmVarDecl 0x188e5ac0568 <col:34, col:40> col:40 invalid xca 'int *'
| |-ParmVarDecl 0x188e5ac05e8 <col:45, col:55> col:55 invalid pkey 'int *'
| |-ParmVarDecl 0x188e5ac0678 <line:942:25, <invalid sloc>> col:25 invalid STACK_OF 'int (*)()':'int (*)()'
| `-CompoundStmt 0x188e5ad0458 <line:946:1, line:1016:1>
|   |-DeclStmt 0x188e5ac08d8 <line:947:5, col:16>
|   | `-VarDecl 0x188e5ac0848 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x188e5ac08b0 <col:15> 'int' 0
|   |-IfStmt 0x188e5ac0ba0 <line:953:5, line:956:5>
|   | |-OpaqueValueExpr 0x188e5ac0b88 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x188e5ac0b70 <line:953:24, line:956:5>
|   |   `-GotoStmt 0x188e5ac0b58 <line:955:9, col:14> 'end' 0x188e5ac0b08
|   |-IfStmt 0x188e5acf160 <line:960:5, line:963:5>
|   | |-OpaqueValueExpr 0x188e5acf148 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x188e5acf130 <line:960:65, line:963:5>
|   |   `-GotoStmt 0x188e5acf118 <line:962:9, col:14> 'end' 0x188e5ac0b08
|   |-IfStmt 0x188e5acf2a0 <line:964:5, line:967:14> has_else
|   | |-OpaqueValueExpr 0x188e5acf288 <<invalid sloc>> '_Bool'
|   | |-NullStmt 0x188e5acf280 <line:965:9>
|   | `-IfStmt 0x188e5acf268 <line:966:10, line:967:14>
|   |   |-OpaqueValueExpr 0x188e5acf250 <<invalid sloc>> '_Bool'
|   |   `-GotoStmt 0x188e5acf238 <col:9, col:14> 'end' 0x188e5ac0b08
|   |-IfStmt 0x188e5acf650 <line:975:5, line:976:14>
|   | |-OpaqueValueExpr 0x188e5acf638 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x188e5acf620 <col:9, col:14> 'end' 0x188e5ac0b08
|   |-IfStmt 0x188e5acf828 <line:978:5, line:982:5>
|   | |-OpaqueValueExpr 0x188e5acf810 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x188e5acf7f8 <line:978:45, line:982:5>
|   |   `-GotoStmt 0x188e5acf7e0 <line:981:9, col:14> 'end' 0x188e5ac0b08
|   |-IfStmt 0x188e5acf8b0 <line:984:5, line:985:14>
|   | |-OpaqueValueExpr 0x188e5acf898 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x188e5acf880 <col:9, col:14> 'end' 0x188e5ac0b08
|   |-IfStmt 0x188e5acf918 <line:986:5, line:987:14>
|   | |-OpaqueValueExpr 0x188e5acf900 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x188e5acf8e8 <col:9, col:14> 'end' 0x188e5ac0b08
|   |-IfStmt 0x188e5acfa70 <line:989:5, line:990:14>
|   | |-OpaqueValueExpr 0x188e5acfa58 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x188e5acfa40 <col:9, col:14> 'end' 0x188e5ac0b08
|   |-IfStmt 0x188e5acfd20 <line:992:5, line:995:5>
|   | |-OpaqueValueExpr 0x188e5acfd08 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x188e5acfcf8 <line:992:17, line:995:5>
|   |-IfStmt 0x188e5ad0170 <line:997:5, line:1004:5>
|   | |-OpaqueValueExpr 0x188e5ad0158 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x188e5ad0140 <line:997:15, line:1004:5>
|   |   `-IfStmt 0x188e5ad0128 <line:1002:9, line:1003:18>
|   |     |-OpaqueValueExpr 0x188e5ad0110 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x188e5ad00f8 <col:13, col:18> 'end' 0x188e5ac0b08
|   |-IfStmt 0x188e5ad01b8 <line:1006:5, line:1007:14>
|   | |-OpaqueValueExpr 0x188e5ad01a0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x188e5ad0188 <col:9, col:14> 'end' 0x188e5ac0b08
|   |-BinaryOperator 0x188e5ad0230 <line:1008:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x188e5ad01d0 <col:5> 'int' lvalue Var 0x188e5ac0848 'ret' 'int'
|   | `-IntegerLiteral 0x188e5ad0208 <col:11> 'int' 1
|   |-LabelStmt 0x188e5ad0368 <line:1009:2, col:5> 'end'
|   | `-NullStmt 0x188e5ad0360 <col:5>
|   `-ReturnStmt 0x188e5ad0448 <line:1015:5, col:12>
|     `-ImplicitCastExpr 0x188e5ad0430 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x188e5ad0410 <col:12> 'int' lvalue Var 0x188e5ac0848 'ret' 'int'
|-FunctionDecl 0x188e5ad0618 <line:1018:1, line:1049:1> line:1018:12 invalid callb 'int (int, int *)' static
| |-ParmVarDecl 0x188e5ad04f8 <col:18, col:22> col:22 used ok 'int'
| |-ParmVarDecl 0x188e5ad0578 <col:26, col:42> col:42 invalid ctx 'int *'
| `-CompoundStmt 0x188e5ad1078 <line:1019:1, line:1049:1>
|   |-DeclStmt 0x188e5ad0760 <line:1020:5, col:12>
|   | `-VarDecl 0x188e5ad06f8 <col:5, col:9> col:9 used err 'int'
|   |-IfStmt 0x188e5ad0930 <line:1028:5, line:1029:16>
|   | |-OpaqueValueExpr 0x188e5ad0918 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x188e5ad0908 <col:9, col:16>
|   |   `-IntegerLiteral 0x188e5ad08e0 <col:16> 'int' 1
|   `-IfStmt 0x188e5ad1050 <line:1036:5, line:1048:5> has_else
|     |-ImplicitCastExpr 0x188e5ad0980 <line:1036:9> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x188e5ad0948 <col:9> 'int' lvalue ParmVar 0x188e5ad04f8 'ok' 'int'
|     |-CompoundStmt 0x188e5ad0a88 <col:13, line:1040:5>
|     | `-ReturnStmt 0x188e5ad0a78 <line:1039:9, col:16>
|     |   `-IntegerLiteral 0x188e5ad0a50 <col:16> 'int' 0
|     `-CompoundStmt 0x188e5ad1038 <line:1040:12, line:1048:5>
|       `-ReturnStmt 0x188e5ad1028 <line:1047:9, col:16>
|         `-IntegerLiteral 0x188e5ad1000 <col:16> 'int' 1
|-FunctionDecl 0x188e5ac1410 <line:1052:1, line:1080:1> line:1052:12 invalid sign 'int (int *, int *, int, int, const int *, int *, const char *)' static
| |-ParmVarDecl 0x188e5ac1048 <col:17, col:23> col:23 invalid x 'int *'
| |-ParmVarDecl 0x188e5ac10c8 <col:26, col:36> col:36 invalid pkey 'int *'
| |-ParmVarDecl 0x188e5ac1148 <col:42, col:46> col:46 used days 'int'
| |-ParmVarDecl 0x188e5ac11c8 <col:52, col:56> col:56 used clrext 'int'
| |-ParmVarDecl 0x188e5ac1248 <line:1053:17, col:31> col:31 invalid digest 'const int *'
| |-ParmVarDecl 0x188e5ac12c8 <col:39, col:45> col:45 invalid conf 'int *'
| |-ParmVarDecl 0x188e5ac1348 <col:51, col:63> col:63 used section 'const char *'
| `-CompoundStmt 0x188e5ac1d88 <line:1054:1, line:1080:1>
|   |-IfStmt 0x188e5ac15c0 <line:1056:5, line:1057:14>
|   | |-OpaqueValueExpr 0x188e5ac15a8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x188e5ac1590 <col:9, col:14> 'err' 0x188e5ac1540
|   |-IfStmt 0x188e5ac1750 <line:1058:5, line:1059:14>
|   | |-OpaqueValueExpr 0x188e5ac1738 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x188e5ac1720 <col:9, col:14> 'err' 0x188e5ac1540
|   |-IfStmt 0x188e5ac17b8 <line:1060:5, line:1061:14>
|   | |-OpaqueValueExpr 0x188e5ac17a0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x188e5ac1788 <col:9, col:14> 'err' 0x188e5ac1540
|   |-IfStmt 0x188e5ac18c0 <line:1062:5, line:1065:5>
|   | |-ImplicitCastExpr 0x188e5ac1808 <line:1062:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x188e5ac17d0 <col:9> 'int' lvalue ParmVar 0x188e5ac11c8 'clrext' 'int'
|   | `-CompoundStmt 0x188e5ac18b0 <col:17, line:1065:5>
|   |-IfStmt 0x188e5ac1b68 <line:1066:5, line:1073:5>
|   | |-OpaqueValueExpr 0x188e5ac1b50 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x188e5ac1b38 <line:1066:15, line:1073:5>
|   |   `-IfStmt 0x188e5ac1b20 <line:1071:9, line:1072:18>
|   |     |-OpaqueValueExpr 0x188e5ac1b08 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x188e5ac1af0 <col:13, col:18> 'err' 0x188e5ac1540
|   |-IfStmt 0x188e5ac1cc0 <line:1074:5, line:1075:14>
|   | |-OpaqueValueExpr 0x188e5ac1ca8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x188e5ac1c90 <col:9, col:14> 'err' 0x188e5ac1540
|   |-ReturnStmt 0x188e5ac1d00 <line:1076:5, col:12>
|   | `-IntegerLiteral 0x188e5ac1cd8 <col:12> 'int' 1
|   |-LabelStmt 0x188e5ac1d38 <line:1077:2, col:5> 'err'
|   | `-NullStmt 0x188e5ac1d30 <col:5>
|   `-ReturnStmt 0x188e5ac1d78 <line:1079:5, col:12>
|     `-IntegerLiteral 0x188e5ac1d50 <col:12> 'int' 0
`-FunctionDecl 0x188e5ac1fa0 <line:1082:1, line:1099:1> line:1082:12 invalid purpose_print 'int (int *, int *, int *)' static
  |-ParmVarDecl 0x188e5ac1df8 <col:26, col:31> col:31 invalid bio 'int *'
  |-ParmVarDecl 0x188e5ac1e78 <col:36, col:42> col:42 invalid cert 'int *'
  |-ParmVarDecl 0x188e5ac1ef8 <col:48, col:62> col:62 invalid pt 'int *'
  `-CompoundStmt 0x188e5ac2c70 <line:1083:1, line:1099:1>
    |-DeclStmt 0x188e5ac2210 <line:1084:5, col:21>
    | |-VarDecl 0x188e5ac2088 <col:5, col:9> col:9 used id 'int'
    | |-VarDecl 0x188e5ac2108 <col:5, col:13> col:13 used i 'int'
    | `-VarDecl 0x188e5ac2188 <col:5, col:16> col:16 used idret 'int'
    |-DeclStmt 0x188e5ac22a8 <line:1085:5, col:22>
    | `-VarDecl 0x188e5ac2240 <col:5, col:17> col:17 used pname 'const char *'
    |-ForStmt 0x188e5ac2c00 <line:1088:5, line:1097:5>
    | |-BinaryOperator 0x188e5ac25b0 <line:1088:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x188e5ac2550 <col:10> 'int' lvalue Var 0x188e5ac2108 'i' 'int'
    | | `-IntegerLiteral 0x188e5ac2588 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x188e5ac2630 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x188e5ac2618 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x188e5ac25d0 <col:17> 'int' lvalue Var 0x188e5ac2108 'i' 'int'
    | | `-IntegerLiteral 0x188e5ac25f0 <col:21> 'int' 2
    | |-UnaryOperator 0x188e5ac2670 <col:24, col:25> 'int' postfix '++'
    | | `-DeclRefExpr 0x188e5ac2650 <col:24> 'int' lvalue Var 0x188e5ac2108 'i' 'int'
    | `-CompoundStmt 0x188e5ac2bf0 <col:29, line:1097:5>
    `-ReturnStmt 0x188e5ac2c60 <line:1098:5, col:12>
      `-IntegerLiteral 0x188e5ac2c38 <col:12> 'int' 1
