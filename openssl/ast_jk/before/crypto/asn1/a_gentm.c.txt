TranslationUnitDecl 0x23fb3a82348 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x23fb3a82be0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x23fb3a828e0 '__int128'
|-TypedefDecl 0x23fb3a82c50 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x23fb3a82900 'unsigned __int128'
|-TypedefDecl 0x23fb3a82f88 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x23fb3a82d40 'struct __NSConstantString_tag'
|   `-Record 0x23fb3a82ca8 '__NSConstantString_tag'
|-TypedefDecl 0x23fb3a82ff8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x23fb3a82520 'unsigned long long'
|-TypedefDecl 0x23fb3a83090 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x23fb3a83050 'char *'
|   `-BuiltinType 0x23fb3a823e0 'char'
|-TypedefDecl 0x23fb3a83100 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x23fb3a83050 'char *'
|   `-BuiltinType 0x23fb3a823e0 'char'
|-TypedefDecl 0x23fb3a831c0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x23fb3a82520 'unsigned long long'
|-TypedefDecl 0x23fb3a83230 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x23fb3a83050 'char *'
|   `-BuiltinType 0x23fb3a823e0 'char'
|-FunctionDecl 0x23fb55763c0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x23fb5576460 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x23fb55764d0 <col:21> Implicit
|-FunctionDecl 0x23fb5576528 prev 0x23fb55763c0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x23fb5576250 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x23fb5576618 <col:21> Inherited Implicit
|-TypedefDecl 0x23fb5576658 prev 0x23fb3a82ff8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x23fb3a82520 'unsigned long long'
|-TypedefDecl 0x23fb5576700 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x23fb55766d0 'size_t' sugar
|   |-Typedef 0x23fb5576658 'size_t'
|   `-BuiltinType 0x23fb3a82520 'unsigned long long'
|-TypedefDecl 0x23fb5576770 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x23fb3a82480 'long long'
|-TypedefDecl 0x23fb55767e0 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x23fb3a82480 'long long'
|-TypedefDecl 0x23fb5576850 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x23fb3a824c0 'unsigned short'
|-TypedefDecl 0x23fb55768c0 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x23fb3a824c0 'unsigned short'
|-TypedefDecl 0x23fb5576930 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x23fb3a824c0 'unsigned short'
|-TypedefDecl 0x23fb55769a0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x23fb3a82440 'int'
|-TypedefDecl 0x23fb5576a10 <line:567:1, col:19> col:19 referenced __time32_t 'long'
| `-BuiltinType 0x23fb3a82460 'long'
|-TypedefDecl 0x23fb5576a80 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x23fb3a82480 'long long'
|-TypedefDecl 0x23fb5576b10 <line:580:1, col:20> col:20 referenced time_t '__time64_t':'long long'
| `-TypedefType 0x23fb5576ae0 '__time64_t' sugar
|   |-Typedef 0x23fb5576a80 '__time64_t'
|   `-BuiltinType 0x23fb3a82480 'long long'
|-FunctionDecl 0x23fb5576c88 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x23fb5576ea8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x23fb55b9960 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x23fb5576fe8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x23fb5577060 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x23fb55770d8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x23fb5577158 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x23fb55b9700 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x23fb55b9a40 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x23fb55b9b00 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x23fb55b9c70 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x23fb55b9c20 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x23fb55b9bc0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x23fb55b9ae0 'struct threadlocaleinfostruct'
|       `-Record 0x23fb55c47b0 'threadlocaleinfostruct'
|-TypedefDecl 0x23fb55b9d80 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x23fb55b9d30 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x23fb55b9cd0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x23fb55b9ba0 'struct threadmbcinfostruct'
|       `-Record 0x23fb55b9b00 'threadmbcinfostruct'
|-RecordDecl 0x23fb55b9dd8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x23fb55b9e90 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x23fb55b9f50 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x23fb55b9fe0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x23fb55ba070 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x23fb55ba128 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x23fb55ba0d0 'struct localeinfo_struct' sugar
|   `-RecordType 0x23fb55b9f30 'struct localeinfo_struct'
|     `-Record 0x23fb55b9e90 'localeinfo_struct'
|-TypedefDecl 0x23fb55ba200 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x23fb55ba1b0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x23fb55ba0d0 'struct localeinfo_struct' sugar
|     `-RecordType 0x23fb55b9f30 'struct localeinfo_struct'
|       `-Record 0x23fb55b9e90 'localeinfo_struct'
|-RecordDecl 0x23fb55ba278 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x23fb55ba330 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x23fb55ba3a8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x23fb55ba468 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x23fb55ba500 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x23fb55ba570 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x23fb55ba628 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x23fb55ba5d0 'struct localerefcount' sugar
|   `-RecordType 0x23fb55ba310 'struct localerefcount'
|     `-Record 0x23fb55ba278 'localerefcount'
|-RecordDecl 0x23fb55c47b0 prev 0x23fb55b9a40 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x23fb55c4830 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x23fb55c48a8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x23fb55c4918 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x23fb55c4988 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x23fb55c49f8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x23fb55c4bb8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x23fb55c4c28 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x23fb55c4c98 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x23fb55c4d08 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x23fb55c4d78 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x23fb55c4de8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x23fb55c4e40 parent 0x23fb3a82348 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x23fb55c4fd0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x23fb55c5040 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x23fb55c50b0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x23fb55c5120 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x23fb55c51c0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x23fb55c5230 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x23fb55c5340 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x23fb55c5478 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x23fb55c5528 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x23fb55c54d0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x23fb55b9ae0 'struct threadlocaleinfostruct'
|     `-Record 0x23fb55c47b0 'threadlocaleinfostruct'
|-RecordDecl 0x23fb55c55c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x23fb55c5680 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x23fb55c56f8 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x23fb55bf760 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x23fb55bf7d0 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x23fb55bf840 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x23fb55bf8b0 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x23fb55bf920 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x23fb55bf990 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x23fb55bfa00 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x23fb55bfab0 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x23fb55bfa60 'struct _iobuf' sugar
|   `-RecordType 0x23fb55c5660 'struct _iobuf'
|     `-Record 0x23fb55c55c0 '_iobuf'
|-FunctionDecl 0x23fb55bfce8 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x23fb55bfdb8 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x23fb3a82480 'long long'
|-FunctionDecl 0x23fb55bff98 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x23fb55bfe20 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x23fb55c0290 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x23fb55c0070 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x23fb55c00e8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x23fb55c0640 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x23fb55c0370 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x23fb55c03f0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x23fb55c0470 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x23fb55c2900 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x23fb55c2790 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x23fb55c2b30 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x23fb55c29f0 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x23fb55c2ce0 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x23fb55c2c00 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x23fb55c2ed0 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x23fb55c31c8 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x23fb55c2fa0 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x23fb55c3020 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x23fb55c3380 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x23fb55c32a0 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x23fb55c3530 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x23fb55c3450 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x23fb55c36e0 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x23fb55c3600 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x23fb55c88f8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x23fb55c8818 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x23fb55c8a88 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x23fb55c8df0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x23fb55c8b50 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x23fb55c8c48 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x23fb55c91a8 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x23fb55c8ed0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x23fb55c8f50 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x23fb55c8fc8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x23fb55c9368 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x23fb55c9288 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x23fb55c9630 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x23fb55c9440 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x23fb55c94c0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x23fb55c1780 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x23fb55c1b78 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x23fb55c1c18 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x23fb55c1c80 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x23fb55c1cf8 prev 0x23fb55c1b78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x23fb55c1950 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x23fb55c19d0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x23fb55c1da8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb55c2220 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x23fb55c1f50 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x23fb55c1fd0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x23fb55c2050 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x23fb55c2540 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x23fb55c25e0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x23fb55c2648 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x23fb55c26c0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x23fb55c9800 prev 0x23fb55c2540 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x23fb55c2300 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x23fb55c2380 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x23fb55c98f8 <col:40> Inherited printf 2 3
|-FunctionDecl 0x23fb55c9ac0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x23fb55c9940 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x23fb55c99c0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x23fb55c9d18 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x23fb55c9ba0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x23fb55c9c18 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x23fb55c9f48 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x23fb55c9df8 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x23fb55ca240 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x23fb55ca020 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x23fb55ca098 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x23fb55ca6d8 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x23fb55ca778 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x23fb55cd840 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x23fb55cd8a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x23fb55cd910 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x23fb55cd998 prev 0x23fb55ca6d8 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x23fb55ca320 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x23fb55ca398 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb55ca410 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23fb55ca488 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x23fb55cdea0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x23fb55cda88 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x23fb55cdb00 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb55cdb78 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb55cdbf0 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23fb55cdc68 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x23fb55ce360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x23fb55ce090 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x23fb55ce110 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x23fb55ce188 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x23fb55ce418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb55ca8b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x23fb55ce560 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x23fb55ce5e0 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x23fb55ce660 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x23fb55ce6d8 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x23fb55cac60 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x23fb55cad00 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x23fb55cad68 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x23fb55cade0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x23fb55cae48 prev 0x23fb55cac60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x23fb55caa98 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x23fb55cab18 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x23fb55cb028 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x23fb55caef8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb55cb468 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb55cb168 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x23fb55cb1e8 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x23fb55cb280 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x23fb55cb520 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb55cb820 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x23fb55cb660 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x23fb55cb6e0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x23fb55cbb10 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb55cb8f8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x23fb55cb978 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x23fb55cb9f0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb55cbe70 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x23fb55cbbf0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x23fb55cbcc8 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x23fb55cc228 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x23fb55cbf48 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x23fb55cbfc8 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x23fb55cc048 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x23fb55cc488 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x23fb55cc308 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x23fb55ce898 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x23fb55cc558 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x23fb55cc5d8 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x23fb55cc658 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x23fb55ceaf8 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x23fb55ce978 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x23fb55cefb8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x23fb55cf058 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x23fb55cf0c0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x23fb55cf128 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x23fb55cf190 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x23fb55cf218 prev 0x23fb55cefb8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x23fb55cec00 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x23fb55cec78 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb55cecf0 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23fb55ced68 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x23fb55cf3e0 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x23fb55cf300 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x23fb55cf570 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x23fb55cf6f8 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x23fb55d0a30 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x23fb55cf7c8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x23fb55d0880 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x23fb55d0d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x23fb55d0c10 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x23fb55d0e00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb55d1020 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x23fb55d0f40 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x23fb55d1240 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x23fb55d10f8 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x23fb55d13f0 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x23fb55d1310 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x23fb55d1640 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x23fb55d14c8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x23fb55d1548 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x23fb55cf860 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x23fb55cf900 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x23fb55cf970 <col:40> Implicit printf 1 2
|-FunctionDecl 0x23fb55cf9d8 prev 0x23fb55cf860 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x23fb55d1720 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x23fb55cfac8 <col:40> Inherited printf 1 2
|-FunctionDecl 0x23fb55cfbf8 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x23fb55cfb18 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x23fb55cfe48 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x23fb55cfcd0 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x23fb55cfd48 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x23fb55d0008 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x23fb55cff28 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x23fb55d0228 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x23fb55d00e0 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x23fb55d0478 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x23fb55d0300 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x23fb55d0378 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x23fb55d0638 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x23fb55d0558 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x23fb561c090 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x23fb55d0710 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x23fb55d0790 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x23fb561c250 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x23fb561c170 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x23fb561c4e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x23fb561c400 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x23fb561c588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x23fb561c780 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x23fb561c6a8 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x23fb561c910 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x23fb561cbb8 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x23fb561cc58 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x23fb561ccc8 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x23fb561cd30 prev 0x23fb561cbb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x23fb561caa0 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x23fb561cf08 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x23fb561cdd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5622330 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb56220f8 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x23fb5622170 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x23fb56223e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5622608 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x23fb5622528 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x23fb5622858 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb56226e0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x23fb5622758 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb5622c18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x23fb56229f0 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x23fb5622a70 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x23fb5622cc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5622ef0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x23fb5622e10 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x23fb561e128 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x23fb561dfe0 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x23fb561e310 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x23fb561e760 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x23fb561e3d8 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x23fb561e458 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x23fb561e4d8 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x23fb561e550 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x23fb561ebe0 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x23fb561e850 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x23fb561e8c8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb561e940 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23fb561e9c0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x23fb561eff0 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x23fb561ecd0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x23fb561ed48 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23fb561edc8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x23fb561f1b8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x23fb561f0d8 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x23fb561f590 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x23fb561f630 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x23fb561f698 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x23fb561f710 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x23fb561f778 prev 0x23fb561f590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x23fb561f350 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x23fb561f3d0 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x23fb561f958 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x23fb561f828 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb561fd48 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb561fa68 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x23fb561fae8 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x23fb561fb60 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x23fb561fe00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb561d0d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x23fb561ff48 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x23fb561cfd0 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x23fb561d3c8 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb561d1b0 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x23fb561d230 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x23fb561d2a8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb561d858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x23fb561d570 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x23fb561d5e8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb561d668 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x23fb561d910 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb561dee0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb561db50 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x23fb561dbc8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb561dc48 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x23fb561dcc0 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x23fb5620000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5620360 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x23fb5620148 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x23fb56201c0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23fb5620240 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x23fb56206f8 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb5620448 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x23fb56204c0 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5620540 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x23fb56205b8 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb5620958 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x23fb56209f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5620cb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x23fb5620b40 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x23fb5626060 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x23fb5620d88 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x23fb5620e00 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x23fb56262e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x23fb5626200 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x23fb5626388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5626648 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x23fb56264d0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x23fb5626548 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x23fb5626a60 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x23fb5626b00 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x23fb5626b68 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x23fb5626bd0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x23fb5626c50 <col:40> Implicit printf 2 0
|-FunctionDecl 0x23fb5626cb8 prev 0x23fb5626a60 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x23fb5626720 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x23fb56267a0 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x23fb5626818 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x23fb5626db8 <col:40> Inherited printf 2 0
|-FunctionDecl 0x23fb5621010 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x23fb56210b0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x23fb5621118 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x23fb5621180 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x23fb5621200 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x23fb5621268 prev 0x23fb5621010 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x23fb5626e00 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x23fb5626e80 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x23fb5626ef8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x23fb5621368 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x23fb56215c8 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x23fb56213b0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x23fb5621430 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x23fb56214a8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb56218c0 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x23fb56216a8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x23fb5621728 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x23fb56217a0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5621c08 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x23fb5621ca8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x23fb5621d10 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x23fb5621d88 <col:40> Implicit printf 1 0
|-FunctionDecl 0x23fb5621df0 prev 0x23fb5621c08 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x23fb56219a8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x23fb5621a20 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x23fb5621ee8 <col:40> Inherited printf 1 0
|-FunctionDecl 0x23fb56271a8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x23fb5627248 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x23fb56272b0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x23fb5627328 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x23fb5627390 prev 0x23fb56271a8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x23fb5621f38 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x23fb5627070 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x23fb5627488 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x23fb5627650 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x23fb56274d8 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x23fb5627550 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb56278a8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x23fb5627730 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x23fb56277a8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5627e08 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x23fb5627ea8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x23fb5627f10 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x23fb5627f78 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x23fb5627fe0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x23fb5624040 <col:77> Implicit printf 3 0
|-FunctionDecl 0x23fb56240a8 prev 0x23fb5627e08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x23fb5627a48 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x23fb5627ac0 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5627b40 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x23fb5627bb8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x23fb5624298 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x23fb5624168 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5624708 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x23fb56242e8 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x23fb5624360 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb56243d8 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5624458 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x23fb56244d0 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5624b48 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x23fb5624800 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x23fb5624878 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb56248f0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5624970 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x23fb56249e8 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5624f18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x23fb5624d00 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x23fb5624d78 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5624df8 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x23fb5624fd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb56234a0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x23fb56231f0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x23fb5623268 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb56232e8 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x23fb5623360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x23fb5623560 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5623958 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x23fb56236a8 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x23fb5623720 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb56237a0 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x23fb5623818 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5623d18 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x23fb5623a48 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x23fb5623ac8 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x23fb5623b40 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5629130 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x23fb56291d0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x23fb5629238 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x23fb56292b0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x23fb5629318 prev 0x23fb5629130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x23fb5623ec0 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x23fb5623f40 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x23fb56294f8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x23fb56293c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5629920 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x23fb56299c0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x23fb5629a28 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x23fb5629a90 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x23fb5629b10 <col:94> Implicit printf 2 0
|-FunctionDecl 0x23fb5629b78 prev 0x23fb5629920 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x23fb5629608 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x23fb5629688 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x23fb5629700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x23fb5629d60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x23fb5629c30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5625050 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x23fb56250f0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x23fb5625158 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x23fb56251c0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x23fb5625240 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x23fb56252a8 prev 0x23fb5625050 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x23fb5629db0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x23fb5629e30 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x23fb5629ea8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x23fb56253a8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x23fb5625570 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x23fb56253f8 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x23fb5625470 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5625868 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x23fb5625650 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x23fb56256c8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23fb5625748 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x23fb5625c00 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x23fb5625950 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x23fb56259c8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5625a48 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x23fb5625ac0 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5625e68 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x23fb5625ce8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x23fb5625d68 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x23fb5628080 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x23fb5625f48 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x23fb5628370 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x23fb5628158 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x23fb56281d0 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23fb5628250 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x23fb5628668 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x23fb5628450 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x23fb56284d0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x23fb5628548 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb56288c8 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x23fb5628750 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x23fb56287c8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5628c58 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x23fb56289a8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x23fb5628a20 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5628aa0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x23fb5628b18 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5628e28 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x23fb5628d48 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x23fb562f0f0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x23fb5628f00 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x23fb5628f78 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb562f2b0 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x23fb562f1d0 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x23fb562f440 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x23fb562f688 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb562f510 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x23fb562f588 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb562f8e0 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb562f768 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x23fb562f7e0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb562fb38 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb562f9c0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x23fb562fa38 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb562fee8 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb562fc18 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x23fb562fc90 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23fb562fd08 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb562c1e0 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb562ffd0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x23fb5630048 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23fb562c0c0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb562c4d8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb562c2c8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x23fb562c340 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23fb562c3b8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb562c7d0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb562c5b8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x23fb562c638 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x23fb562c6b0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb562cac8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb562c8b0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x23fb562c930 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x23fb562c9a8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb562cdc0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb562cba8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x23fb562cc28 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x23fb562cca0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb562b210 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb562cea0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x23fb562cf20 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x23fb562cf98 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23fb562d010 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb562b5a8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb562b2f8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x23fb562b378 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x23fb562b3f0 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23fb562b468 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb562b940 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb562b690 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x23fb562b710 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x23fb562b788 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23fb562b800 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb562bdd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb562baf0 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x23fb562bb70 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x23fb562bbe8 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x23fb562be90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5631420 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb562bfd8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x23fb5631110 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5631190 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x23fb5631208 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb56317c0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb5631510 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x23fb5631588 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5631608 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x23fb5631680 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb5631d10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb56319b0 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x23fb5631a30 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x23fb5631aa8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x23fb5631b20 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x23fb5631dd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb562d308 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb5631f18 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x23fb5631f90 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5632010 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x23fb5632088 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23fb562d0d0 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb562d748 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb562d400 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x23fb562d478 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb562d4f8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x23fb562d570 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23fb562d5e8 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb562d9b8 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb562d840 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x23fb562d8b8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb562dc10 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb562da98 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x23fb562db10 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb562df00 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb562dcf0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x23fb562dd68 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23fb562dde0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb562a1d0 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb562dfe8 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x23fb562e060 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23fb562a0b0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb562a628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb562a378 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x23fb562a3f0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb562a470 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x23fb562a4e8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x23fb562a6e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb562aae0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb562a830 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x23fb562a8a8 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb562a928 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x23fb562a9a0 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb5632120 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb562abd0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x23fb562ac48 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb562acc0 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb562ad40 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x23fb562adb8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb5632660 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb5632318 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x23fb5632390 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5632410 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x23fb5632488 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x23fb5632500 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x23fb5632728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5632ba8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb5632878 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x23fb56328f0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5632970 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x23fb56329e8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23fb5632a60 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb56351b0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb5632ca0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x23fb5632d18 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5632d90 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5632e10 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x23fb5632e88 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23fb5632f00 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5635570 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x23fb56352a8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x23fb5635320 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x23fb56353a0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x23fb56357e0 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x23fb5635670 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x23fb56359f8 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x23fb5635cd8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x23fb5635ac0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x23fb5635b38 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x23fb5635f20 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x23fb5635db0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x23fb562e0e0 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x23fb5635ff0 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x23fb562e268 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x23fb562e4a0 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x23fb562e330 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x23fb562e3a8 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x23fb562e650 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x23fb562e578 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x23fb562e8f8 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x23fb562e720 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x23fb562e798 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x23fb562eca0 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x23fb562e9d0 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x23fb562ea50 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x23fb562eac8 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x23fb562efa0 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x23fb562ed80 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x23fb562edf8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x23fb56342f8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x23fb562f078 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x23fb5634150 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x23fb5634600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x23fb5634490 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x23fb56346a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5634968 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x23fb56347e8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x23fb5634c70 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x23fb5634a38 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x23fb5634ab0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x23fb5634ec0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x23fb5634d48 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x23fb5634dc0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x23fb5636160 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x23fb5634f98 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x23fb5636310 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x23fb5636230 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x23fb56364c0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x23fb56363e0 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x23fb5636858 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x23fb5636590 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x23fb5636608 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb5636680 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5636b48 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x23fb5636938 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x23fb56369b0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb5636a28 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5636e38 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x23fb5636c28 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x23fb5636ca0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb5636d18 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5637170 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x23fb5636f18 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x23fb5636f90 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb5637008 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5637470 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x23fb5637250 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb56372c8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb56376c0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x23fb5637548 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb56375c0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5637910 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x23fb5637798 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb5637810 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5637b60 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x23fb56379e8 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb5637a60 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5637f18 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x23fb5637c38 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x23fb5637cb0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23fb5637d28 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x23fb5638390 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x23fb5637ff8 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x23fb5638070 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb56380e8 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb5638180 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5638748 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x23fb5638478 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x23fb56384f0 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb5638568 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5638a38 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x23fb5638828 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x23fb56388a0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb5638918 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5638d28 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x23fb5638b18 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23fb5638b90 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23fb5638c08 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x23fb56390b0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x23fb5638e08 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23fb5638e80 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5638ef8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb5638f70 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5639540 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x23fb56391b8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23fb5639230 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb56392a8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23fb5639320 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x23fb5639a48 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x23fb5639628 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23fb56396a0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5639718 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5639790 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb5639808 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5639e08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x23fb5639bf8 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x23fb5639c70 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5639ce8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x23fb5639ec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb563a3d0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x23fb563a0c0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x23fb563a1a0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb563a218 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23fb563a290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x23fb563a490 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb563a748 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x23fb563a5d0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x23fb563a648 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x23fb563a900 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x23fb563a820 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x23fb563abe0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x23fb563a9d0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x23fb563aa48 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb563aac0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb563ae38 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x23fb563acc0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb563ad38 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb563e000 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x23fb563af10 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23fb563af88 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23fb563b000 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x23fb563e388 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x23fb563e0e0 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23fb563e158 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb563e1d0 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb563e248 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb563e550 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x23fb563e470 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x23fb563e798 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x23fb563e620 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb563e698 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb563eaa0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb563e870 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb563e8e8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb563ecf0 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb563eb78 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb563ebf0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb563ef40 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb563edc8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb563ee40 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb5643348 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb5643078 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23fb56430f0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23fb5643168 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5643638 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb5643428 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23fb56434a0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23fb5643518 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5643928 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb5643718 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23fb5643790 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23fb5643808 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5643ce8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb5643a08 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x23fb5643a80 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb5643af8 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb563f010 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb5643dc8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x23fb5643e40 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb5643eb8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb563f300 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb563f0f0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x23fb563f168 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb563f1e0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb563f750 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb563f3e0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x23fb563f458 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23fb563f4d0 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23fb563f548 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb563fae0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb563f838 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x23fb563f8b0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23fb563f928 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23fb563f9a0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb563fe70 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb563fbc8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x23fb563fc40 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23fb563fcb8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23fb563fd30 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb563d300 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb563ff58 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23fb563cff0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb563d068 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb563d0e0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb563d690 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb563d3e8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23fb563d460 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb563d4d8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb563d550 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb563da20 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb563d778 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23fb563d7f0 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb563d868 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb563d8e0 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb563df28 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb563db08 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23fb563db80 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb563dbf8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23fb563dc70 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23fb563dce8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5640388 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb5640048 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23fb56400c0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5640138 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23fb56401b0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23fb5640228 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb56407b8 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb5640478 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23fb56404f0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5640568 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23fb56405e0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23fb5640658 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5640a20 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb56408a8 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb5640920 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb5640c70 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb5640af8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb5640b70 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb5640f58 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb5640d48 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23fb5640dc0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23fb5640e38 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb56443f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb5644150 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23fb56441c8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5644240 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23fb56442b8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x23fb56444b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5644a28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb5644600 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23fb5644678 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb56446f0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5644768 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb56447e0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb5644f60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb5644c20 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23fb5644c98 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5644d10 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23fb5644d88 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x23fb5644e00 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x23fb5645070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5645680 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb56451b8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x23fb5645230 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb56452a8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5645320 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23fb5645398 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23fb5645410 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb5645b80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x23fb5645948 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x23fb56459c0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x23fb5645c30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x23fb5645d48 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x23fb56462e8 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x23fb5646000 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x23fb5646090 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23fb5646108 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x23fb56463a0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x23fb56464b8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x23fb5646a58 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb5646778 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x23fb56467f0 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23fb5646868 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x23fb5646b10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x23fb5646c30 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x23fb56472a0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb5646ef0 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x23fb5646f68 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23fb5646fe0 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x23fb5647090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x23fb5647360 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x23fb5647480 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x23fb5647788 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x23fb56475a8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x23fb5647620 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5647698 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x23fb56412d0 <line:37:1, line:44:1>
|   |-DeclStmt 0x23fb56478d0 <line:38:5, col:21>
|   | `-VarDecl 0x23fb5647868 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x23fb5647968 <line:39:5, col:13>
|   | `-VarDecl 0x23fb5647900 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x23fb5647cc0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x23fb5647ca8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x23fb5647bc0 <col:34> '<builtin fn type>' Function 0x23fb5647a58 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x23fb5647bf8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x23fb5647868 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x23fb5647c30 <col:29> 'const wchar_t *' lvalue ParmVar 0x23fb5647698 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x23fb5647f80 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x23fb5647cf0 <col:5> 'int' lvalue Var 0x23fb5647900 '_Ret' 'int'
|   | `-CallExpr 0x23fb5647ec0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x23fb5647ea8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x23fb5647d28 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x23fb563df28 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x23fb5647f08 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x23fb5647d48 <col:27> 'wchar_t *' lvalue ParmVar 0x23fb56475a8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x23fb5647f20 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x23fb5647d68 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x23fb5647620 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x23fb5647f38 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x23fb5647d88 <col:44> 'const wchar_t *' lvalue ParmVar 0x23fb5647698 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x23fb5647f50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x23fb5647e10 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x23fb5647de8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x23fb5647da8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x23fb5647f68 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x23fb5647e30 <col:59> 'va_list':'char *' lvalue Var 0x23fb5647868 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x23fb5641260 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x23fb5641248 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x23fb5641198 <col:34> '<builtin fn type>' Function 0x23fb5641030 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x23fb56411d0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x23fb5647868 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x23fb56412c0 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x23fb56412a8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x23fb5641288 <col:12> 'int' lvalue Var 0x23fb5647900 '_Ret' 'int'
|-FunctionDecl 0x23fb5647a58 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x23fb5647af8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x23fb5647b68 <col:34> Implicit
|-FunctionDecl 0x23fb5641030 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x23fb56410d0 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x23fb5641140 <col:34> Implicit
|-FunctionDecl 0x23fb56415c8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x23fb5641320 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x23fb5641398 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5641410 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x23fb5641488 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x23fb56418b0 <line:50:1, line:52:1>
|   `-ReturnStmt 0x23fb56418a0 <line:51:5, col:62>
|     `-CallExpr 0x23fb56417e0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x23fb56417c8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x23fb56416a0 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x23fb563df28 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x23fb5641828 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x23fb56416c0 <col:27> 'wchar_t *' lvalue ParmVar 0x23fb5641320 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x23fb5641840 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x23fb56416e0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x23fb5641398 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x23fb5641858 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x23fb5641700 <col:44> 'const wchar_t *' lvalue ParmVar 0x23fb5641410 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x23fb5641870 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x23fb5641788 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x23fb5641760 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x23fb5641720 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x23fb5641888 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x23fb56417a8 <col:59> 'va_list':'char *' lvalue ParmVar 0x23fb5641488 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x23fb5641b50 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x23fb56418d8 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x23fb5641950 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb56419c8 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x23fb5641a40 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x23fb564d198 <line:61:1, line:68:1>
|   |-DeclStmt 0x23fb5641ca0 <line:62:5, col:21>
|   | `-VarDecl 0x23fb5641c38 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x23fb5641d38 <line:63:5, col:13>
|   | `-VarDecl 0x23fb5641cd0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x23fb5641de0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x23fb5641dc8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x23fb5641d50 <col:34> '<builtin fn type>' Function 0x23fb5647a58 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x23fb5641d70 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x23fb5641c38 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x23fb5641da8 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x23fb5641a40 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x23fb5641fe0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x23fb5641e10 <col:5> 'int' lvalue Var 0x23fb5641cd0 '_Ret' 'int'
|   | `-CallExpr 0x23fb5641f20 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x23fb5641f08 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x23fb5641e48 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x23fb563df28 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x23fb5641f68 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x23fb5641e68 <col:27> 'wchar_t *' lvalue ParmVar 0x23fb56418d8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x23fb5641f80 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x23fb5641e88 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x23fb5641950 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x23fb5641f98 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x23fb5641ea8 <col:44> 'const wchar_t *' lvalue ParmVar 0x23fb56419c8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x23fb5641fb0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x23fb5641ec8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x23fb5641a40 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x23fb5641fc8 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x23fb5641ee8 <col:64> 'va_list':'char *' lvalue Var 0x23fb5641c38 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x23fb564d128 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x23fb564d110 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x23fb5642000 <col:34> '<builtin fn type>' Function 0x23fb5641030 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x23fb564d0f0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x23fb5641c38 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x23fb564d188 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x23fb564d170 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x23fb564d150 <col:12> 'int' lvalue Var 0x23fb5641cd0 '_Ret' 'int'
|-FunctionDecl 0x23fb564d528 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x23fb564d1e8 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x23fb564d260 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb564d2d8 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x23fb564d350 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x23fb564d3c8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x23fb564d7b0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x23fb564d7a0 <line:75:5, col:67>
|     `-CallExpr 0x23fb564d6e0 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x23fb564d6c8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x23fb564d608 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x23fb563df28 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x23fb564d728 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x23fb564d628 <col:27> 'wchar_t *' lvalue ParmVar 0x23fb564d1e8 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x23fb564d740 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x23fb564d648 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x23fb564d260 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x23fb564d758 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x23fb564d668 <col:44> 'const wchar_t *' lvalue ParmVar 0x23fb564d2d8 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x23fb564d770 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x23fb564d688 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x23fb564d350 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x23fb564d788 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x23fb564d6a8 <col:64> 'va_list':'char *' lvalue ParmVar 0x23fb564d3c8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x23fb564d9f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x23fb564d7d8 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x23fb564d850 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x23fb564dc48 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x23fb564dad0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb564db48 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb564df30 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x23fb564dd20 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23fb564dd98 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x23fb564de10 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x23fb564e278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x23fb564e100 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x23fb564e178 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x23fb564e328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb564e738 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb564e528 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x23fb564e5a0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23fb564e618 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x23fb564e7f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb564eaa8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x23fb564e930 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x23fb564e9a8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x23fb564ed90 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb564eb80 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x23fb564ebf8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb564ec70 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb5650190 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x23fb564ef30 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x23fb564efa8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x23fb5650240 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5650718 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb5650440 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x23fb56504b8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23fb5650530 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x23fb56507d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5650a88 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x23fb5650910 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x23fb5650988 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x23fb5650d70 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb5650b60 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x23fb5650bd8 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb5650c50 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb564f1f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x23fb5650f10 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x23fb5650f88 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5651000 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x23fb564f2b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb564f830 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb564f4b0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x23fb564f528 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb564f5a0 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23fb564f618 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x23fb564f8f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb564fc40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x23fb564fa30 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x23fb564faa8 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23fb564fb20 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x23fb564ffc8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb564fd20 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x23fb564fd98 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb564fe10 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb564fe88 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb564c290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x23fb564c1b0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x23fb564c338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb564c6b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb564c538 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23fb564c5b0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x23fb564c760 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb564c980 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x23fb564c8a0 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x23fb564cbc8 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x23fb564ca50 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb564cac8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb564cec8 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x23fb564cca8 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x23fb564cd20 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x23fb5649258 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x23fb564d060 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x23fb56490b0 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x23fb5649308 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5649710 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x23fb5649450 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x23fb56494c8 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x23fb5649540 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x23fb5649b70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x23fb56498b0 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x23fb5649928 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x23fb56499a0 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x23fb5649c28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb564a108 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x23fb5649d70 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x23fb5649de8 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x23fb5649e60 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x23fb5649ed8 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x23fb564a360 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x23fb564a1f0 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x23fb564a5a0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x23fb564a430 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x23fb564a4a8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x23fb564a758 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x23fb564a678 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x23fb564aa48 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x23fb564a828 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x23fb564a8a0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x23fb564acb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x23fb564abe0 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x23fb564ad60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb564af78 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x23fb564aea0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x23fb5652238 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x23fb564b048 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x23fb5652140 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x23fb5652480 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x23fb5652310 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x23fb5652388 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x23fb5652630 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x23fb5652558 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x23fb56527d8 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x23fb5652700 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x23fb5652988 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x23fb56528a8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x23fb5652b38 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x23fb5652a58 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x23fb5652eb0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x23fb5652c10 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x23fb5652c88 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5652d00 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23fb5652d78 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x23fb5656350 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x23fb5652fa0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x23fb5653018 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5653090 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5656180 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23fb56561f8 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x23fb5656660 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x23fb5656440 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x23fb56564c0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x23fb5656540 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x23fb5656820 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x23fb5656740 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x23fb5656b10 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x23fb56568f0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x23fb5656970 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x23fb56569f0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x23fb5656cd0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x23fb5656bf0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x23fb5657048 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x23fb5656da8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x23fb5656e20 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5656e98 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23fb5656f10 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x23fb5657308 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x23fb5657190 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x23fb5657208 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x23fb5657640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x23fb56574c0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x23fb5657540 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x23fb56576f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x23fb56579a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x23fb5657a48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x23fb5657d88 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x23fb5657c10 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x23fb5657c90 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x23fb5657e38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x23fb565a1c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x23fb565a260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x23fb565a500 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x23fb565a420 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x23fb565a5a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x23fb565a828 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x23fb565a8c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x23fb565ab70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x23fb565aa90 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x23fb565ac18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x23fb565aef8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x23fb565ae18 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x23fb565afa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x23fb56552e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x23fb5655170 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x23fb56551e8 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x23fb5655398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x23fb5655658 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x23fb56556f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-TypedefDecl 0x23fb5655848 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:89:1, col:14> col:14 referenced clock_t 'long'
| `-BuiltinType 0x23fb3a82460 'long'
|-RecordDecl 0x23fb56558a0 <line:113:1, line:123:9> line:113:8 struct tm definition
| |-MaxFieldAlignmentAttr 0x23fb5655960 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x23fb56559d8 <line:114:9, col:13> col:13 referenced tm_sec 'int'
| |-FieldDecl 0x23fb5655a48 <line:115:9, col:13> col:13 referenced tm_min 'int'
| |-FieldDecl 0x23fb5655ab8 <line:116:9, col:13> col:13 referenced tm_hour 'int'
| |-FieldDecl 0x23fb5655b28 <line:117:9, col:13> col:13 referenced tm_mday 'int'
| |-FieldDecl 0x23fb5655b98 <line:118:9, col:13> col:13 referenced tm_mon 'int'
| |-FieldDecl 0x23fb5655c08 <line:119:9, col:13> col:13 referenced tm_year 'int'
| |-FieldDecl 0x23fb5655c78 <line:120:9, col:13> col:13 tm_wday 'int'
| |-FieldDecl 0x23fb5655ce8 <line:121:9, col:13> col:13 tm_yday 'int'
| `-FieldDecl 0x23fb5655d58 <line:122:9, col:13> col:13 tm_isdst 'int'
|-FunctionDecl 0x23fb5655fa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:147:99> col:84 __daylight 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x23fb5656040 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_daylight instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb56593d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:151:98> col:84 __dstbias 'long *(void) __attribute__((cdecl))':'long *(void)'
| `-DeprecatedAttr 0x23fb5659470 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_dstbias instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5659730 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:155:100> col:85 __timezone 'long *(void) __attribute__((cdecl))':'long *(void)'
| `-DeprecatedAttr 0x23fb56597d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_timezone instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5659af0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:159:112> col:99 __tzname 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x23fb5659b90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_tzname instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5659e50 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:162:9, col:60> col:25 _get_daylight 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x23fb5659cd8 <col:45, col:51> col:51 _Daylight 'int *'
|-FunctionDecl 0x23fb565a0a0 <line:163:9, col:73> col:25 _get_dstbias 'errno_t (long *) __attribute__((cdecl))':'errno_t (long *)'
| `-ParmVarDecl 0x23fb5659f28 <col:44, col:51> col:51 _Daylight_savings_bias 'long *'
|-FunctionDecl 0x23fb5653228 <line:164:9, col:61> col:25 _get_timezone 'errno_t (long *) __attribute__((cdecl))':'errno_t (long *)'
| `-ParmVarDecl 0x23fb5653150 <col:45, col:52> col:52 _Timezone 'long *'
|-FunctionDecl 0x23fb56536d8 <line:165:9, col:150> col:25 _get_tzname 'errno_t (size_t *, char *, size_t, int) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, int)'
| |-ParmVarDecl 0x23fb5653358 <col:43, col:51> col:51 _ReturnValue 'size_t *'
| |-ParmVarDecl 0x23fb56533d8 <col:94, col:100> col:100 _Buffer 'char *'
| |-ParmVarDecl 0x23fb5653450 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23fb56534d0 <col:140, col:144> col:144 _Index 'int'
|-FunctionDecl 0x23fb5653a98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:174:108> col:74 asctime 'char *(const struct tm *) __attribute__((cdecl))':'char *(const struct tm *)'
| |-ParmVarDecl 0x23fb5653920 <col:87, col:105> col:105 _Tm 'const struct tm *'
| `-DeprecatedAttr 0x23fb5653b40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using asctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5653f60 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:176:28, col:170> col:44 asctime_s 'errno_t (char *, size_t, const struct tm *) __attribute__((cdecl))':'errno_t (char *, size_t, const struct tm *)'
| |-ParmVarDecl 0x23fb5653c88 <col:106, col:112> col:112 _Buf 'char *'
| |-ParmVarDecl 0x23fb5653d00 <col:123, col:130> col:130 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23fb5653d90 <col:149, col:167> col:167 _Tm 'const struct tm *'
|-FunctionDecl 0x23fb565b388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:180:98> col:60 _ctime32 'char *(const __time32_t *) __attribute__((cdecl))':'char *(const __time32_t *)'
| |-ParmVarDecl 0x23fb565b208 <col:74, col:93> col:93 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x23fb565b430 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ctime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb565b840 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:181:9, col:154> col:25 _ctime32_s 'errno_t (char *, size_t, const __time32_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time32_t *)'
| |-ParmVarDecl 0x23fb565b578 <col:88, col:94> col:94 _Buf 'char *'
| |-ParmVarDecl 0x23fb565b5f0 <col:105, col:112> col:112 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23fb565b668 <col:131, col:149> col:149 _Time 'const __time32_t *'
|-FunctionDecl 0x23fb565ba88 <line:184:24, col:50> col:40 clock 'clock_t (void) __attribute__((cdecl))':'clock_t (void)'
|-FunctionDecl 0x23fb565bd70 <line:185:9, col:82> col:24 _difftime32 'double (__time32_t, __time32_t) __attribute__((cdecl))':'double (__time32_t, __time32_t)'
| |-ParmVarDecl 0x23fb565bb50 <col:41, col:52> col:52 _Time1 '__time32_t':'long'
| `-ParmVarDecl 0x23fb565bbc8 <col:65, col:76> col:76 _Time2 '__time32_t':'long'
|-FunctionDecl 0x23fb565c0f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:187:120> col:81 _gmtime32 'struct tm *(const __time32_t *) __attribute__((cdecl))':'struct tm *(const __time32_t *)'
| |-ParmVarDecl 0x23fb565bf08 <col:96, col:115> col:115 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x23fb56646b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gmtime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5664a28 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:188:28, col:106> col:44 _gmtime32_s 'errno_t (struct tm *, const __time32_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time32_t *)'
| |-ParmVarDecl 0x23fb5664808 <col:61, col:72> col:72 _Tm 'struct tm *'
| `-ParmVarDecl 0x23fb5664880 <col:82, col:101> col:101 _Time 'const __time32_t *'
|-FunctionDecl 0x23fb5664cb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:190:111> col:69 _localtime32 'struct tm *(const __time32_t *) __attribute__((cdecl))':'struct tm *(const __time32_t *)'
| |-ParmVarDecl 0x23fb5664bc8 <col:87, col:106> col:106 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x23fb5664d60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _localtime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5665030 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:191:9, col:91> col:25 _localtime32_s 'errno_t (struct tm *, const __time32_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time32_t *)'
| |-ParmVarDecl 0x23fb5664ec0 <col:46, col:57> col:57 _Tm 'struct tm *'
| `-ParmVarDecl 0x23fb5664f38 <col:67, col:86> col:86 _Time 'const __time32_t *'
|-FunctionDecl 0x23fb5665498 <line:193:9, col:179> col:24 strftime 'size_t (char *, size_t, const char *, const struct tm *) __attribute__((cdecl))':'size_t (char *, size_t, const char *, const struct tm *)'
| |-ParmVarDecl 0x23fb5665110 <col:62, col:69> col:69 _Buf 'char *'
| |-ParmVarDecl 0x23fb5665188 <col:80, col:87> col:87 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5665208 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x23fb5665298 <col:158, col:176> col:176 _Tm 'const struct tm *'
|-FunctionDecl 0x23fb56629d0 <line:194:9, col:199> col:24 _strftime_l 'size_t (char *, size_t, const char *, const struct tm *, _locale_t) __attribute__((cdecl))':'size_t (char *, size_t, const char *, const struct tm *, _locale_t)'
| |-ParmVarDecl 0x23fb5665588 <col:59, col:65> col:65 _Buf 'char *'
| |-ParmVarDecl 0x23fb5665600 <col:76, col:83> col:83 _Max_size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5662690 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x23fb5662720 <col:151, col:168> col:168 _Tm 'const struct tm *'
| `-ParmVarDecl 0x23fb5662798 <col:182, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb5662ca8 <line:196:28, col:142> col:44 _strdate_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x23fb5662ac8 <col:106, col:112> col:112 _Buf 'char *'
| `-ParmVarDecl 0x23fb5662b40 <col:123, col:130> col:130 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x23fb5662f28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:198:79 _strdate 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x23fb5662e48 <col:108, col:114> col:114 _Buffer 'char *'
| `-DeprecatedAttr 0x23fb5662fd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strdate_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5663288 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:200:28, col:143> col:44 _strtime_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x23fb5663118 <col:106, col:112> col:112 _Buf 'char *'
| `-ParmVarDecl 0x23fb5663190 <col:124, col:131> col:131 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x23fb5663508 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:202:79 _strtime 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x23fb5663428 <col:108, col:114> col:114 _Buffer 'char *'
| `-DeprecatedAttr 0x23fb56635b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5665960 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:204:9, col:64> col:28 _time32 '__time32_t (__time32_t *) __attribute__((cdecl))':'__time32_t (__time32_t *)'
| `-ParmVarDecl 0x23fb56657e8 <col:46, col:59> col:59 _Time '__time32_t *'
|-FunctionDecl 0x23fb5665bc0 <line:205:9, col:61> col:28 _mktime32 '__time32_t (struct tm *) __attribute__((cdecl))':'__time32_t (struct tm *)'
| `-ParmVarDecl 0x23fb5665a48 <col:46, col:58> col:58 _Tm 'struct tm *'
|-FunctionDecl 0x23fb5665d80 <line:206:9, col:63> col:28 _mkgmtime32 '__time32_t (struct tm *) __attribute__((cdecl))':'__time32_t (struct tm *)'
| `-ParmVarDecl 0x23fb5665ca8 <col:48, col:60> col:60 _Tm 'struct tm *'
|-FunctionDecl 0x23fb5665f08 <line:210:9, col:33> col:22 _tzset 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x23fb56661f0 <line:214:24, col:97> col:39 used _difftime64 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)'
| |-ParmVarDecl 0x23fb5665fd0 <col:56, col:67> col:67 _Time1 '__time64_t':'long long'
| `-ParmVarDecl 0x23fb5666048 <col:80, col:91> col:91 _Time2 '__time64_t':'long long'
|-FunctionDecl 0x23fb5666538 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:215:98> col:60 used _ctime64 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)'
| |-ParmVarDecl 0x23fb56663b8 <col:74, col:93> col:93 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x23fb56665e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ctime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5667aa0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:216:9, col:132> col:25 used _ctime64_s 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)'
| |-ParmVarDecl 0x23fb56677e0 <col:65, col:71> col:71 _Buf 'char *'
| |-ParmVarDecl 0x23fb5667858 <col:82, col:89> col:89 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23fb56678d0 <col:108, col:127> col:127 _Time 'const __time64_t *'
|-FunctionDecl 0x23fb5667dc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:219:105> col:66 used _gmtime64 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |-ParmVarDecl 0x23fb5667c40 <col:81, col:100> col:100 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x23fb5667e70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gmtime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb56681e8 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:220:9, col:87> col:25 used _gmtime64_s 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
| |-ParmVarDecl 0x23fb5667fc8 <col:43, col:54> col:54 _Tm 'struct tm *'
| `-ParmVarDecl 0x23fb5668040 <col:64, col:82> col:82 _Time 'const __time64_t *'
|-FunctionDecl 0x23fb5668478 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:222:111> col:69 used _localtime64 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |-ParmVarDecl 0x23fb5668388 <col:87, col:106> col:106 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x23fb5668520 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _localtime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb56617f0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:223:9, col:90> col:25 used _localtime64_s 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
| |-ParmVarDecl 0x23fb5661680 <col:46, col:57> col:57 _Tm 'struct tm *'
| `-ParmVarDecl 0x23fb56616f8 <col:67, col:85> col:85 _Time 'const __time64_t *'
|-FunctionDecl 0x23fb5661a50 <line:225:9, col:61> col:28 used _mktime64 '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
| `-ParmVarDecl 0x23fb56618e0 <col:46, col:58> col:58 _Tm 'struct tm *'
|-FunctionDecl 0x23fb5661c10 <line:226:9, col:63> col:28 used _mkgmtime64 '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
| `-ParmVarDecl 0x23fb5661b38 <col:48, col:60> col:60 _Tm 'struct tm *'
|-FunctionDecl 0x23fb5661e80 <line:227:9, col:64> col:28 used _time64 '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)'
| `-ParmVarDecl 0x23fb5661d08 <col:46, col:59> col:59 _Time '__time64_t *'
|-FunctionDecl 0x23fb56621e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:231:79> col:46 _getsystime 'unsigned int (struct tm *) __attribute__((cdecl))':'unsigned int (struct tm *)'
| |-ParmVarDecl 0x23fb5662068 <col:64, col:76> col:76 _Tm 'struct tm *'
| `-DeprecatedAttr 0x23fb5662290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using GetLocalTime instead. See online help for details." ""
|-FunctionDecl 0x23fb566a780 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:232:98> col:46 _setsystime 'unsigned int (struct tm *, unsigned int) __attribute__((cdecl))':'unsigned int (struct tm *, unsigned int)'
| |-ParmVarDecl 0x23fb56624b8 <col:63, col:75> col:75 _Tm 'struct tm *'
| |-ParmVarDecl 0x23fb5662538 <col:80, col:89> col:89 _MilliSec 'unsigned int'
| `-DeprecatedAttr 0x23fb566a830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetLocalTime instead. See online help for details." ""
|-FunctionDecl 0x23fb566abc0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:245:100> col:64 _wasctime 'wchar_t *(const struct tm *) __attribute__((cdecl))':'wchar_t *(const struct tm *)'
| |-ParmVarDecl 0x23fb566aa50 <col:79, col:97> col:97 _Tm 'const struct tm *'
| `-DeprecatedAttr 0x23fb566ac68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wasctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb566b080 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:246:9, col:156> col:25 _wasctime_s 'errno_t (wchar_t *, size_t, const struct tm *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const struct tm *)'
| |-ParmVarDecl 0x23fb566ada8 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x23fb566ae20 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23fb566aeb0 <col:135, col:153> col:153 _Tm 'const struct tm *'
|-FunctionDecl 0x23fb566b390 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:249:102> col:64 _wctime32 'wchar_t *(const __time32_t *) __attribute__((cdecl))':'wchar_t *(const __time32_t *)'
| |-ParmVarDecl 0x23fb566b220 <col:79, col:97> col:97 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x23fb566b438 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb56637e0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:250:9, col:159> col:25 _wctime32_s 'errno_t (wchar_t *, size_t, const __time32_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time32_t *)'
| |-ParmVarDecl 0x23fb566b578 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x23fb566b5f0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23fb566b668 <col:135, col:154> col:154 _Time 'const __time32_t *'
|-FunctionDecl 0x23fb5663c48 <line:253:9, col:186> col:24 wcsftime 'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *) __attribute__((cdecl))':'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *)'
| |-ParmVarDecl 0x23fb56638c0 <col:62, col:72> col:72 _Buf 'wchar_t *'
| |-ParmVarDecl 0x23fb5663938 <col:83, col:90> col:90 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb56639b0 <col:134, col:150> col:150 _Format 'const wchar_t *'
| `-ParmVarDecl 0x23fb5663a40 <col:165, col:183> col:183 _Tm 'const struct tm *'
|-FunctionDecl 0x23fb5664160 <line:254:9, col:214> col:24 _wcsftime_l 'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *, _locale_t)'
| |-ParmVarDecl 0x23fb5663d30 <col:65, col:75> col:75 _Buf 'wchar_t *'
| |-ParmVarDecl 0x23fb5663da8 <col:86, col:93> col:93 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5663e20 <col:137, col:152> col:152 _Format 'const wchar_t *'
| |-ParmVarDecl 0x23fb5663eb0 <col:166, col:183> col:183 _Tm 'const struct tm *'
| `-ParmVarDecl 0x23fb5663f28 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23fb56643c0 <line:256:9, col:128> col:25 _wstrdate_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x23fb5664250 <col:88, col:98> col:98 _Buf 'wchar_t *'
| `-ParmVarDecl 0x23fb56642c8 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x23fb566b720 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:258:82 _wstrdate 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x23fb5664558 <col:112, col:121> col:121 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x23fb566b7c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wstrdate_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb566ba78 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:260:9, col:128> col:25 _wstrtime_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x23fb566b908 <col:88, col:98> col:98 _Buf 'wchar_t *'
| `-ParmVarDecl 0x23fb566b980 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x23fb566bce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:262:82 _wstrtime 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x23fb566bc10 <col:112, col:121> col:121 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x23fb566bd90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wstrtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb566c100 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:264:103> col:64 used _wctime64 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)'
| |-ParmVarDecl 0x23fb566bf90 <col:79, col:98> col:98 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x23fb566c1a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb566c5b0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:265:9, col:158> col:25 used _wctime64_s 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)'
| |-ParmVarDecl 0x23fb566c2e8 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x23fb566c360 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23fb566c3d8 <col:135, col:153> col:153 _Time 'const __time64_t *'
|-FunctionDecl 0x23fb5668830 <D:\Microsoft Visual Studio 12.0\VC\include\wtime.inl:44:1, line:50:1> line:44:37 _wctime 'wchar_t *(const time_t *) __attribute__((cdecl))':'wchar_t *(const time_t *)' static inline
| |-ParmVarDecl 0x23fb56686f0 <col:45, col:60> col:60 used _Time 'const time_t *'
| `-CompoundStmt 0x23fb56689f0 <line:45:1, line:50:1>
|   `-ReturnStmt 0x23fb56689e0 <line:48:5, col:27>
|     `-CallExpr 0x23fb56689a0 <col:12, col:27> 'wchar_t *'
|       |-ImplicitCastExpr 0x23fb5668988 <col:12> 'wchar_t *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x23fb56688f0 <col:12> 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)' Function 0x23fb566c100 '_wctime64' 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)'
|       `-ImplicitCastExpr 0x23fb56689c8 <col:22> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x23fb5668910 <col:22> 'const time_t *' lvalue ParmVar 0x23fb56686f0 '_Time' 'const time_t *'
|-FunctionDecl 0x23fb5668ca0 <line:52:1, line:55:1> line:52:35 _wctime_s 'errno_t (wchar_t *, size_t, const time_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const time_t *)' static inline
| |-ParmVarDecl 0x23fb5668a18 <col:97, col:106> col:106 used _Buffer 'wchar_t *'
| |-ParmVarDecl 0x23fb5668a90 <col:115, col:122> col:122 used _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5668b08 <col:136, col:151> col:151 used _Time 'const time_t *'
| `-CompoundStmt 0x23fb5668ef0 <line:53:1, line:55:1>
|   `-ReturnStmt 0x23fb5668ee0 <line:54:5, col:52>
|     `-CallExpr 0x23fb5668e60 <col:12, col:52> 'errno_t':'int'
|       |-ImplicitCastExpr 0x23fb5668e48 <col:12> 'errno_t (*)(wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x23fb5668d70 <col:12> 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)' Function 0x23fb566c5b0 '_wctime64_s' 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)'
|       |-ImplicitCastExpr 0x23fb5668e98 <col:24> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x23fb5668d90 <col:24> 'wchar_t *' lvalue ParmVar 0x23fb5668a18 '_Buffer' 'wchar_t *'
|       |-ImplicitCastExpr 0x23fb5668eb0 <col:33> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x23fb5668db0 <col:33> 'size_t':'unsigned long long' lvalue ParmVar 0x23fb5668a90 '_SizeInWords' 'size_t':'unsigned long long'
|       `-ImplicitCastExpr 0x23fb5668ec8 <col:47> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x23fb5668dd0 <col:47> 'const time_t *' lvalue ParmVar 0x23fb5668b08 '_Time' 'const time_t *'
|-FunctionDecl 0x23fb5669100 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:82:1, line:85:1> line:82:34 difftime 'double (time_t, time_t) __attribute__((cdecl))':'double (time_t, time_t)' static inline
| |-ParmVarDecl 0x23fb5668f18 <col:43, col:50> col:50 used _Time1 'time_t':'long long'
| |-ParmVarDecl 0x23fb5668f90 <col:58, col:65> col:65 used _Time2 'time_t':'long long'
| `-CompoundStmt 0x23fb5669310 <line:83:1, line:85:1>
|   `-ReturnStmt 0x23fb5669300 <line:84:5, col:37>
|     `-CallExpr 0x23fb56692a0 <col:12, col:37> 'double'
|       |-ImplicitCastExpr 0x23fb5669288 <col:12> 'double (*)(__time64_t, __time64_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x23fb56691c8 <col:12> 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)' Function 0x23fb56661f0 '_difftime64' 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)'
|       |-ImplicitCastExpr 0x23fb56692d0 <col:24> 'time_t':'long long' <LValueToRValue>
|       | `-DeclRefExpr 0x23fb56691e8 <col:24> 'time_t':'long long' lvalue ParmVar 0x23fb5668f18 '_Time1' 'time_t':'long long'
|       `-ImplicitCastExpr 0x23fb56692e8 <col:31> 'time_t':'long long' <LValueToRValue>
|         `-DeclRefExpr 0x23fb5669208 <col:31> 'time_t':'long long' lvalue ParmVar 0x23fb5668f90 '_Time2' 'time_t':'long long'
|-FunctionDecl 0x23fb5669548 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:92:1> line:86:67 ctime 'char *(const time_t *) __attribute__((cdecl))':'char *(const time_t *)' static inline
| |-ParmVarDecl 0x23fb56693f8 <col:73, col:88> col:88 used _Time 'const time_t *'
| |-CompoundStmt 0x23fb5666820 <line:87:1, line:92:1>
| | `-ReturnStmt 0x23fb5666810 <line:90:5, col:26>
| |   `-CallExpr 0x23fb56667d0 <col:12, col:26> 'char *'
| |     |-ImplicitCastExpr 0x23fb56667b8 <col:12> 'char *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x23fb5666718 <col:12> 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)' Function 0x23fb5666538 '_ctime64' 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x23fb56667f8 <col:21> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x23fb5666738 <col:21> 'const time_t *' lvalue ParmVar 0x23fb56693f8 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x23fb56695f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using ctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5666ad0 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:94:1, line:97:1> line:94:35 ctime_s 'errno_t (char *, size_t, const time_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const time_t *)' static inline
| |-ParmVarDecl 0x23fb5666850 <col:43, col:49> col:49 used _Buffer 'char *'
| |-ParmVarDecl 0x23fb56668c8 <col:58, col:65> col:65 used _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23fb5666940 <col:79, col:94> col:94 used _Time 'const time_t *'
| `-CompoundStmt 0x23fb5666d20 <line:95:1, line:97:1>
|   `-ReturnStmt 0x23fb5666d10 <line:96:5, col:51>
|     `-CallExpr 0x23fb5666c90 <col:12, col:51> 'errno_t':'int'
|       |-ImplicitCastExpr 0x23fb5666c78 <col:12> 'errno_t (*)(char *, size_t, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x23fb5666ba0 <col:12> 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)' Function 0x23fb5667aa0 '_ctime64_s' 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)'
|       |-ImplicitCastExpr 0x23fb5666cc8 <col:23> 'char *' <LValueToRValue>
|       | `-DeclRefExpr 0x23fb5666bc0 <col:23> 'char *' lvalue ParmVar 0x23fb5666850 '_Buffer' 'char *'
|       |-ImplicitCastExpr 0x23fb5666ce0 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x23fb5666be0 <col:32> 'size_t':'unsigned long long' lvalue ParmVar 0x23fb56668c8 '_SizeInBytes' 'size_t':'unsigned long long'
|       `-ImplicitCastExpr 0x23fb5666cf8 <col:46> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x23fb5666c00 <col:46> 'const time_t *' lvalue ParmVar 0x23fb5666940 '_Time' 'const time_t *'
|-FunctionDecl 0x23fb5666f68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:105:1> line:99:73 gmtime 'struct tm *(const time_t *) __attribute__((cdecl))':'struct tm *(const time_t *)' static inline
| |-ParmVarDecl 0x23fb5666e08 <col:80, col:95> col:95 used _Time 'const time_t *'
| |-CompoundStmt 0x23fb5667240 <line:100:1, line:105:1>
| | `-ReturnStmt 0x23fb5667230 <line:103:5, col:27>
| |   `-CallExpr 0x23fb56671f0 <col:12, col:27> 'struct tm *'
| |     |-ImplicitCastExpr 0x23fb56671d8 <col:12> 'struct tm *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x23fb5667140 <col:12> 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)' Function 0x23fb5667dc8 '_gmtime64' 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x23fb5667218 <col:22> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x23fb5667160 <col:22> 'const time_t *' lvalue ParmVar 0x23fb5666e08 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x23fb5667010 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gmtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb5667458 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:107:1, line:110:1> line:107:35 gmtime_s 'errno_t (struct tm *, const time_t *) __attribute__((cdecl))':'errno_t (struct tm *, const time_t *)' static inline
| |-ParmVarDecl 0x23fb5667280 <col:44, col:56> col:56 used _Tm 'struct tm *'
| |-ParmVarDecl 0x23fb56672f8 <col:61, col:76> col:76 used _Time 'const time_t *'
| `-CompoundStmt 0x23fb5667660 <line:108:1, line:110:1>
|   `-ReturnStmt 0x23fb5667650 <line:109:5, col:34>
|     `-CallExpr 0x23fb56675f0 <col:12, col:34> 'errno_t':'int'
|       |-ImplicitCastExpr 0x23fb56675d8 <col:12> 'errno_t (*)(struct tm *, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x23fb5667520 <col:12> 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)' Function 0x23fb56681e8 '_gmtime64_s' 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
|       |-ImplicitCastExpr 0x23fb5667620 <col:24> 'struct tm *' <LValueToRValue>
|       | `-DeclRefExpr 0x23fb5667540 <col:24> 'struct tm *' lvalue ParmVar 0x23fb5667280 '_Tm' 'struct tm *'
|       `-ImplicitCastExpr 0x23fb5667638 <col:29> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x23fb5667560 <col:29> 'const time_t *' lvalue ParmVar 0x23fb56672f8 '_Time' 'const time_t *'
|-FunctionDecl 0x23fb566e910 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:118:1> line:112:76 localtime 'struct tm *(const time_t *) __attribute__((cdecl))':'struct tm *(const time_t *)' static inline
| |-ParmVarDecl 0x23fb566e820 <col:86, col:101> col:101 used _Time 'const time_t *'
| |-CompoundStmt 0x23fb566eb90 <line:113:1, line:118:1>
| | `-ReturnStmt 0x23fb566eb80 <line:116:5, col:30>
| |   `-CallExpr 0x23fb566eb40 <col:12, col:30> 'struct tm *'
| |     |-ImplicitCastExpr 0x23fb566eb28 <col:12> 'struct tm *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x23fb566eae8 <col:12> 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)' Function 0x23fb5668478 '_localtime64' 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x23fb566eb68 <col:25> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x23fb566eb08 <col:25> 'const time_t *' lvalue ParmVar 0x23fb566e820 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x23fb566e9b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using localtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb566ed40 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:119:1, line:122:1> line:119:35 localtime_s 'errno_t (struct tm *, const time_t *) __attribute__((cdecl))':'errno_t (struct tm *, const time_t *)' static inline
| |-ParmVarDecl 0x23fb566ebd0 <col:47, col:59> col:59 used _Tm 'struct tm *'
| |-ParmVarDecl 0x23fb566ec48 <col:64, col:79> col:79 used _Time 'const time_t *'
| `-CompoundStmt 0x23fb566eef0 <line:120:1, line:122:1>
|   `-ReturnStmt 0x23fb566eee0 <line:121:5, col:37>
|     `-CallExpr 0x23fb566ee80 <col:12, col:37> 'errno_t':'int'
|       |-ImplicitCastExpr 0x23fb566ee68 <col:12> 'errno_t (*)(struct tm *, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x23fb566ee08 <col:12> 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)' Function 0x23fb56617f0 '_localtime64_s' 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
|       |-ImplicitCastExpr 0x23fb566eeb0 <col:27> 'struct tm *' <LValueToRValue>
|       | `-DeclRefExpr 0x23fb566ee28 <col:27> 'struct tm *' lvalue ParmVar 0x23fb566ebd0 '_Tm' 'struct tm *'
|       `-ImplicitCastExpr 0x23fb566eec8 <col:32> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x23fb566ee48 <col:32> 'const time_t *' lvalue ParmVar 0x23fb566ec48 '_Time' 'const time_t *'
|-FunctionDecl 0x23fb566f070 <line:123:1, line:126:1> line:123:34 mktime 'time_t (struct tm *) __attribute__((cdecl))':'time_t (struct tm *)' static inline
| |-ParmVarDecl 0x23fb566ef30 <col:41, col:53> col:53 used _Tm 'struct tm *'
| `-CompoundStmt 0x23fb566f230 <line:124:1, line:126:1>
|   `-ReturnStmt 0x23fb566f220 <line:125:5, col:25>
|     `-CallExpr 0x23fb566f1e0 <col:12, col:25> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x23fb566f1c8 <col:12> '__time64_t (*)(struct tm *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x23fb566f130 <col:12> '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)' Function 0x23fb5661a50 '_mktime64' '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
|       `-ImplicitCastExpr 0x23fb566f208 <col:22> 'struct tm *' <LValueToRValue>
|         `-DeclRefExpr 0x23fb566f150 <col:22> 'struct tm *' lvalue ParmVar 0x23fb566ef30 '_Tm' 'struct tm *'
|-FunctionDecl 0x23fb566f348 <line:127:1, line:130:1> line:127:34 _mkgmtime 'time_t (struct tm *) __attribute__((cdecl))':'time_t (struct tm *)' static inline
| |-ParmVarDecl 0x23fb566f270 <col:44, col:56> col:56 used _Tm 'struct tm *'
| `-CompoundStmt 0x23fb566f4b0 <line:128:1, line:130:1>
|   `-ReturnStmt 0x23fb566f4a0 <line:129:5, col:27>
|     `-CallExpr 0x23fb566f460 <col:12, col:27> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x23fb566f448 <col:12> '__time64_t (*)(struct tm *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x23fb566f408 <col:12> '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)' Function 0x23fb5661c10 '_mkgmtime64' '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
|       `-ImplicitCastExpr 0x23fb566f488 <col:24> 'struct tm *' <LValueToRValue>
|         `-DeclRefExpr 0x23fb566f428 <col:24> 'struct tm *' lvalue ParmVar 0x23fb566f270 '_Tm' 'struct tm *'
|-FunctionDecl 0x23fb566f650 <line:131:1, line:134:1> line:131:34 time 'time_t (time_t *) __attribute__((cdecl))':'time_t (time_t *)' static inline
| |-ParmVarDecl 0x23fb566f508 <col:39, col:48> col:48 used _Time 'time_t *'
| `-CompoundStmt 0x23fb566d800 <line:132:1, line:134:1>
|   `-ReturnStmt 0x23fb566d7f0 <line:133:5, col:25>
|     `-CallExpr 0x23fb566d7b0 <col:12, col:25> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x23fb566d798 <col:12> '__time64_t (*)(__time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x23fb566f710 <col:12> '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)' Function 0x23fb5661e80 '_time64' '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)'
|       `-ImplicitCastExpr 0x23fb566d7d8 <col:20> 'time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x23fb566f730 <col:20> 'time_t *' lvalue ParmVar 0x23fb566f508 '_Time' 'time_t *'
|-VarDecl 0x23fb566d8f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:291:67> col:67 daylight 'int' extern
| `-DeprecatedAttr 0x23fb566d958 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_daylight instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x23fb566db60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:292:68> col:68 timezone 'long' extern
| `-DeprecatedAttr 0x23fb566dbc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_timezone instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x23fb566de60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:293:76> col:68 tzname 'char *[2]' extern
| `-DeprecatedAttr 0x23fb566dec8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_tzname instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23fb566e160 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:297:63> col:53 tzset 'void (void) __attribute__((cdecl))':'void (void)'
| `-DeprecatedAttr 0x23fb566e200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tzset. See online help for details." ""
|-FunctionDecl 0x23fb566e4d0 <.//openssl//file_jk/before\crypto\asn1/asn1_locl.h:12:1, col:60> col:5 invalid asn1_utctime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x23fb566e338 <col:24, col:35> col:35 tm 'struct tm *'
| `-ParmVarDecl 0x23fb566e3b8 <col:39, col:59> col:59 invalid d 'const int *'
|-FunctionDecl 0x23fb56737a0 <line:13:1, col:76> col:5 invalid asn1_generalizedtime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x23fb566e5a8 <col:32, col:43> col:43 tm 'struct tm *'
| `-ParmVarDecl 0x23fb566e628 <col:47, col:75> col:75 invalid d 'const int *'
|-RecordDecl 0x23fb5673850 <line:17:1, line:38:1> line:17:8 invalid struct asn1_sctx_st definition
| |-FieldDecl 0x23fb5673928 <line:19:5, col:22> col:22 invalid it 'const int *'
| |-FieldDecl 0x23fb5673998 <line:21:5, col:26> col:26 invalid tt 'const int *'
| |-FieldDecl 0x23fb5673a08 <line:23:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x23fb5673a78 <line:25:5, col:9> col:9 skidx 'int'
| |-FieldDecl 0x23fb5673ae8 <line:27:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x23fb5673b58 <line:29:5, col:17> col:17 sname 'const char *'
| |-FieldDecl 0x23fb5673bc8 <col:5, col:25> col:25 fname 'const char *'
| |-FieldDecl 0x23fb5673c38 <line:31:5, col:9> col:9 prim_type 'int'
| |-FieldDecl 0x23fb5673cd8 <line:33:5, col:18> col:18 invalid field 'int **'
| |-FieldDecl 0x23fb5673e78 <line:35:5, col:35> col:11 scan_cb 'int (*)(int *)'
| `-FieldDecl 0x23fb5673ee8 <line:37:5, col:11> col:11 app_data 'void *'
|-RecordDecl 0x23fb5673f40 <line:40:9, col:16> col:16 struct mime_param_st
|-TypedefDecl 0x23fb5674058 <col:1, col:30> col:30 referenced MIME_PARAM 'struct mime_param_st':'struct mime_param_st'
| `-ElaboratedType 0x23fb5674000 'struct mime_param_st' sugar
|   `-RecordType 0x23fb5673fe0 'struct mime_param_st'
|     `-Record 0x23fb5673f40 'mime_param_st'
|-FunctionDecl 0x23fb5674200 <line:41:1, col:27> col:1 DEFINE_STACK_OF 'int (MIME_PARAM)'
| `-ParmVarDecl 0x23fb5674100 <col:17> col:27 'MIME_PARAM':'struct mime_param_st'
|-RecordDecl 0x23fb56742c0 <line:42:9, col:16> col:16 struct mime_header_st
|-TypedefDecl 0x23fb56743d8 <col:1, col:31> col:31 referenced MIME_HEADER 'struct mime_header_st':'struct mime_header_st'
| `-ElaboratedType 0x23fb5674380 'struct mime_header_st' sugar
|   `-RecordType 0x23fb5674360 'struct mime_header_st'
|     `-Record 0x23fb56742c0 'mime_header_st'
|-FunctionDecl 0x23fb5674580 <line:43:1, col:28> col:1 invalid DEFINE_STACK_OF 'int (MIME_HEADER)'
| `-ParmVarDecl 0x23fb5674480 <col:17> col:28 'MIME_HEADER':'struct mime_header_st'
|-VarDecl 0x23fb56746d0 <line:46:1, col:32> col:20 used _asn1_mon 'const char *[12]' extern
|-FunctionDecl 0x23fb56728e8 <line:48:1, col:54> col:6 invalid asn1_string_embed_free 'void (int *, int)'
| |-ParmVarDecl 0x23fb5672790 <col:29, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x23fb5672810 <col:45, col:49> col:49 embed 'int'
|-FunctionDecl 0x23fb5672b10 <line:50:1, col:68> col:5 invalid asn1_get_choice_selector 'int (int **, const int *)'
| |-ParmVarDecl 0x23fb56729b8 <col:30, col:43> col:43 invalid pval 'int **'
| `-ParmVarDecl 0x23fb5672a38 <col:49, col:66> col:66 invalid it 'const int *'
|-FunctionDecl 0x23fb5672dd0 <line:51:1, line:52:49> line:51:5 invalid asn1_set_choice_selector 'int (int **, int, const int *)'
| |-ParmVarDecl 0x23fb5672be0 <col:30, col:43> col:43 invalid pval 'int **'
| |-ParmVarDecl 0x23fb5672c60 <col:49, col:53> col:53 value 'int'
| `-ParmVarDecl 0x23fb5672ce0 <line:52:30, col:47> col:47 invalid it 'const int *'
|-FunctionDecl 0x23fb5673008 <line:54:1, col:75> col:14 invalid asn1_get_field_ptr 'int **(int **, const int *)'
| |-ParmVarDecl 0x23fb5672ea8 <col:33, col:46> col:46 invalid pval 'int **'
| `-ParmVarDecl 0x23fb5672f28 <col:52, col:73> col:73 invalid tt 'const int *'
|-FunctionDecl 0x23fb56732c0 <line:56:1, line:57:45> line:56:22 invalid asn1_do_adb 'const int *(int **, const int *, int)'
| |-ParmVarDecl 0x23fb56730d8 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x23fb5673158 <col:53, col:74> col:74 invalid tt 'const int *'
| `-ParmVarDecl 0x23fb56731d8 <line:57:34, col:38> col:38 nullerr 'int'
|-FunctionDecl 0x23fb5673540 <line:59:1, col:64> col:5 invalid asn1_do_lock 'int (int **, int, const int *)'
| |-ParmVarDecl 0x23fb5673398 <col:18, col:31> col:31 invalid pval 'int **'
| |-ParmVarDecl 0x23fb5673418 <col:37, col:41> col:41 op 'int'
| `-ParmVarDecl 0x23fb5673498 <col:45, col:62> col:62 invalid it 'const int *'
|-FunctionDecl 0x23fb566f760 <line:61:1, col:58> col:6 invalid asn1_enc_init 'void (int **, const int *)'
| |-ParmVarDecl 0x23fb5673618 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x23fb5673698 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x23fb566f948 <line:62:1, col:58> col:6 invalid asn1_enc_free 'void (int **, const int *)'
| |-ParmVarDecl 0x23fb566f830 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x23fb566f8b0 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x23fb566fd00 <line:63:1, line:64:41> line:63:5 invalid asn1_enc_restore 'int (int *, unsigned char **, int **, const int *)'
| |-ParmVarDecl 0x23fb566fa10 <col:22, col:27> col:27 len 'int *'
| |-ParmVarDecl 0x23fb566faf8 <col:32, col:48> col:48 out 'unsigned char **'
| |-ParmVarDecl 0x23fb566fb80 <col:53, col:66> col:66 invalid pval 'int **'
| `-ParmVarDecl 0x23fb566fc00 <line:64:22, col:39> col:39 invalid it 'const int *'
|-FunctionDecl 0x23fb5670060 <line:65:1, line:66:38> line:65:5 invalid asn1_enc_save 'int (int **, const unsigned char *, int, const int *)'
| |-ParmVarDecl 0x23fb566fde0 <col:19, col:32> col:32 invalid pval 'int **'
| |-ParmVarDecl 0x23fb566fe60 <col:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x23fb566fee0 <col:63, col:67> col:67 inlen 'int'
| `-ParmVarDecl 0x23fb566ff60 <line:66:19, col:36> col:36 invalid it 'const int *'
|-FunctionDecl 0x23fb5670328 <line:68:1, col:76> col:6 invalid asn1_item_embed_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x23fb5670140 <col:27, col:40> col:40 invalid pval 'int **'
| |-ParmVarDecl 0x23fb56701c0 <col:46, col:63> col:63 invalid it 'const int *'
| `-ParmVarDecl 0x23fb5670240 <col:67, col:71> col:71 embed 'int'
|-FunctionDecl 0x23fb56705a0 <line:69:1, col:75> col:6 invalid asn1_primitive_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x23fb5670400 <col:26, col:39> col:39 invalid pval 'int **'
| |-ParmVarDecl 0x23fb5670480 <col:45, col:62> col:62 invalid it 'const int *'
| `-ParmVarDecl 0x23fb5670500 <col:66, col:70> col:70 embed 'int'
|-FunctionDecl 0x23fb56707a0 <line:70:1, col:67> col:6 invalid asn1_template_free 'void (int **, const int *)'
| |-ParmVarDecl 0x23fb5670678 <col:25, col:38> col:38 invalid pval 'int **'
| `-ParmVarDecl 0x23fb56706f8 <col:44, col:65> col:65 invalid tt 'const int *'
|-FunctionDecl 0x23fb5670a90 <line:72:1, line:73:41> line:72:14 invalid c2i_ASN1_OBJECT 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x23fb5670870 <col:30, col:44> col:44 invalid a 'int **'
| |-ParmVarDecl 0x23fb5670928 <col:47, col:69> col:69 pp 'const unsigned char **'
| `-ParmVarDecl 0x23fb56709a8 <line:73:30, col:35> col:35 length 'long'
|-FunctionDecl 0x23fb5670cc0 <line:74:1, col:63> col:5 invalid i2c_ASN1_BIT_STRING 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x23fb5670b60 <col:25, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x23fb5670be8 <col:45, col:61> col:61 pp 'unsigned char **'
|-FunctionDecl 0x23fb5670f40 <line:75:1, line:76:75> line:75:18 invalid c2i_ASN1_BIT_STRING 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x23fb5670d90 <col:38, col:56> col:56 invalid a 'int **'
| |-ParmVarDecl 0x23fb5670e18 <line:76:38, col:60> col:60 pp 'const unsigned char **'
| `-ParmVarDecl 0x23fb5670e98 <col:64, col:69> col:69 length 'long'
|-FunctionDecl 0x23fb5671138 <line:77:1, col:57> col:5 invalid i2c_ASN1_INTEGER 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x23fb5671010 <col:22, col:36> col:36 invalid a 'int *'
| `-ParmVarDecl 0x23fb5671098 <col:39, col:55> col:55 pp 'unsigned char **'
|-FunctionDecl 0x23fb56713b8 <line:78:1, line:79:43> line:78:15 invalid c2i_ASN1_INTEGER 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x23fb5671208 <col:32, col:47> col:47 invalid a 'int **'
| |-ParmVarDecl 0x23fb5671290 <col:50, col:72> col:72 pp 'const unsigned char **'
| `-ParmVarDecl 0x23fb5671310 <line:79:32, col:37> col:37 length 'long'
|-FunctionDecl 0x23fb566c730 <line:82:1, col:79> col:5 invalid c2i_uint64_int 'int (int *, int *, const unsigned char **, long)'
| |-ParmVarDecl 0x23fb5671488 <col:20, col:30> col:30 invalid ret 'int *'
| |-ParmVarDecl 0x23fb5671508 <col:35, col:40> col:40 neg 'int *'
| |-ParmVarDecl 0x23fb5671590 <col:45, col:67> col:67 pp 'const unsigned char **'
| `-ParmVarDecl 0x23fb5671610 <col:71, col:76> col:76 len 'long'
|-FunctionDecl 0x23fb566c9f0 <line:83:1, col:57> col:5 invalid i2c_uint64_int 'int (unsigned char *, int, int)'
| |-ParmVarDecl 0x23fb566c808 <col:20, col:35> col:35 p 'unsigned char *'
| |-ParmVarDecl 0x23fb566c888 <col:38, col:47> col:47 invalid r 'int'
| `-ParmVarDecl 0x23fb566c908 <col:50, col:54> col:54 neg 'int'
|-FunctionDecl 0x23fb566cbf0 <.//openssl//file_jk/before\crypto\asn1\a_gentm.c:20:1, line:135:1> line:20:5 invalid asn1_generalizedtime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x23fb566cad0 <col:32, col:43> col:43 used tm 'struct tm *'
| |-ParmVarDecl 0x23fb566cb50 <col:47, col:75> col:75 invalid d 'const int *'
| `-CompoundStmt 0x23fb5677de8 <line:21:1, line:135:1>
|   |-DeclStmt 0x23fb566d090 <line:22:5, col:60>
|   | `-VarDecl 0x23fb566cda0 <col:5, col:59> col:22 used min 'const int [9]' static cinit
|   |   `-InitListExpr 0x23fb566d008 <col:31, col:59> 'const int [9]'
|   |     |-IntegerLiteral 0x23fb566ce08 <col:33> 'int' 0
|   |     |-IntegerLiteral 0x23fb566ce30 <col:36> 'int' 0
|   |     |-IntegerLiteral 0x23fb566ce58 <col:39> 'int' 1
|   |     |-IntegerLiteral 0x23fb566ce80 <col:42> 'int' 1
|   |     |-IntegerLiteral 0x23fb566cea8 <col:45> 'int' 0
|   |     |-IntegerLiteral 0x23fb566ced0 <col:48> 'int' 0
|   |     |-IntegerLiteral 0x23fb566cef8 <col:51> 'int' 0
|   |     |-IntegerLiteral 0x23fb566cf20 <col:54> 'int' 0
|   |     `-IntegerLiteral 0x23fb566cf48 <col:57> 'int' 0
|   |-DeclStmt 0x23fb566d400 <line:23:5, col:69>
|   | `-VarDecl 0x23fb566d110 <col:5, col:68> col:22 used max 'const int [9]' static cinit
|   |   `-InitListExpr 0x23fb566d378 <col:31, col:68> 'const int [9]'
|   |     |-IntegerLiteral 0x23fb566d178 <col:33> 'int' 99
|   |     |-IntegerLiteral 0x23fb566d1a0 <col:37> 'int' 99
|   |     |-IntegerLiteral 0x23fb566d1c8 <col:41> 'int' 12
|   |     |-IntegerLiteral 0x23fb566d1f0 <col:45> 'int' 31
|   |     |-IntegerLiteral 0x23fb566d218 <col:49> 'int' 23
|   |     |-IntegerLiteral 0x23fb566d240 <col:53> 'int' 59
|   |     |-IntegerLiteral 0x23fb566d268 <col:57> 'int' 59
|   |     |-IntegerLiteral 0x23fb566d290 <col:61> 'int' 12
|   |     `-IntegerLiteral 0x23fb566d2b8 <col:65> 'int' 59
|   |-DeclStmt 0x23fb566d498 <line:24:5, col:12>
|   | `-VarDecl 0x23fb566d430 <col:5, col:11> col:11 used a 'char *'
|   |-DeclStmt 0x23fb566d6d8 <line:25:5, col:19>
|   | |-VarDecl 0x23fb566d4c8 <col:5, col:9> col:9 used n 'int'
|   | |-VarDecl 0x23fb566d548 <col:5, col:12> col:12 used i 'int'
|   | |-VarDecl 0x23fb566d5c8 <col:5, col:15> col:15 used l 'int'
|   | `-VarDecl 0x23fb566d648 <col:5, col:18> col:18 used o 'int'
|   |-IfStmt 0x23fb5675808 <line:27:5, line:28:18>
|   | |-OpaqueValueExpr 0x23fb56757f0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x23fb56757e0 <col:9, col:18>
|   |   `-ParenExpr 0x23fb56757c0 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x23fb566d6f0 <col:17> 'int' 0
|   |-BinaryOperator 0x23fb56758f0 <line:31:5, col:9> 'int' '='
|   | |-DeclRefExpr 0x23fb5675890 <col:5> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   | `-IntegerLiteral 0x23fb56758c8 <col:9> 'int' 0
|   |-IfStmt 0x23fb56759f8 <line:37:5, line:38:14>
|   | |-BinaryOperator 0x23fb5675970 <line:37:9, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x23fb5675958 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x23fb5675910 <col:9> 'int' lvalue Var 0x23fb566d5c8 'l' 'int'
|   | | `-IntegerLiteral 0x23fb5675930 <col:13> 'int' 13
|   | `-GotoStmt 0x23fb56759e0 <line:38:9, col:14> 'err' 0x23fb5675990
|   |-ForStmt 0x23fb5679908 <line:39:5, line:85:5>
|   | |-BinaryOperator 0x23fb5675a70 <line:39:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x23fb5675a10 <col:10> 'int' lvalue Var 0x23fb566d548 'i' 'int'
|   | | `-IntegerLiteral 0x23fb5675a48 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x23fb5675af0 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x23fb5675ad8 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x23fb5675a90 <col:17> 'int' lvalue Var 0x23fb566d548 'i' 'int'
|   | | `-IntegerLiteral 0x23fb5675ab0 <col:21> 'int' 7
|   | |-UnaryOperator 0x23fb5675b30 <col:24, col:25> 'int' postfix '++'
|   | | `-DeclRefExpr 0x23fb5675b10 <col:24> 'int' lvalue Var 0x23fb566d548 'i' 'int'
|   | `-CompoundStmt 0x23fb56798b0 <col:29, line:85:5>
|   |   |-IfStmt 0x23fb5676130 <line:40:9, line:45:9>
|   |   | |-BinaryOperator 0x23fb5675f90 <line:40:13, col:73> 'int' '&&'
|   |   | | |-ParenExpr 0x23fb5675bc8 <col:13, col:20> 'int'
|   |   | | | `-BinaryOperator 0x23fb5675ba8 <col:14, col:19> 'int' '=='
|   |   | | |   |-ImplicitCastExpr 0x23fb5675b90 <col:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x23fb5675b48 <col:14> 'int' lvalue Var 0x23fb566d548 'i' 'int'
|   |   | | |   `-IntegerLiteral 0x23fb5675b68 <col:19> 'int' 6
|   |   | | `-ParenExpr 0x23fb5675f70 <col:25, col:73> 'int'
|   |   | |   `-BinaryOperator 0x23fb5675f50 <col:26, col:72> 'int' '||'
|   |   | |     |-BinaryOperator 0x23fb5675e18 <col:26, col:55> 'int' '||'
|   |   | |     | |-ParenExpr 0x23fb5675ce0 <col:26, col:38> 'int'
|   |   | |     | | `-BinaryOperator 0x23fb5675cc0 <col:27, col:35> 'int' '=='
|   |   | |     | |   |-ImplicitCastExpr 0x23fb5675ca8 <col:27, col:30> 'int' <IntegralCast>
|   |   | |     | |   | `-ImplicitCastExpr 0x23fb5675c90 <col:27, col:30> 'char' <LValueToRValue>
|   |   | |     | |   |   `-ArraySubscriptExpr 0x23fb5675c58 <col:27, col:30> 'char' lvalue
|   |   | |     | |   |     |-ImplicitCastExpr 0x23fb5675c28 <col:27> 'char *' <LValueToRValue>
|   |   | |     | |   |     | `-DeclRefExpr 0x23fb5675be8 <col:27> 'char *' lvalue Var 0x23fb566d430 'a' 'char *'
|   |   | |     | |   |     `-ImplicitCastExpr 0x23fb5675c40 <col:29> 'int' <LValueToRValue>
|   |   | |     | |   |       `-DeclRefExpr 0x23fb5675c08 <col:29> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   | |     | |   `-CharacterLiteral 0x23fb5675c78 <col:35> 'int' 90
|   |   | |     | `-ParenExpr 0x23fb5675df8 <col:43, col:55> 'int'
|   |   | |     |   `-BinaryOperator 0x23fb5675dd8 <col:44, col:52> 'int' '=='
|   |   | |     |     |-ImplicitCastExpr 0x23fb5675dc0 <col:44, col:47> 'int' <IntegralCast>
|   |   | |     |     | `-ImplicitCastExpr 0x23fb5675da8 <col:44, col:47> 'char' <LValueToRValue>
|   |   | |     |     |   `-ArraySubscriptExpr 0x23fb5675d70 <col:44, col:47> 'char' lvalue
|   |   | |     |     |     |-ImplicitCastExpr 0x23fb5675d40 <col:44> 'char *' <LValueToRValue>
|   |   | |     |     |     | `-DeclRefExpr 0x23fb5675d00 <col:44> 'char *' lvalue Var 0x23fb566d430 'a' 'char *'
|   |   | |     |     |     `-ImplicitCastExpr 0x23fb5675d58 <col:46> 'int' <LValueToRValue>
|   |   | |     |     |       `-DeclRefExpr 0x23fb5675d20 <col:46> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   | |     |     `-CharacterLiteral 0x23fb5675d90 <col:52> 'int' 43
|   |   | |     `-ParenExpr 0x23fb5675f30 <col:60, col:72> 'int'
|   |   | |       `-BinaryOperator 0x23fb5675f10 <col:61, col:69> 'int' '=='
|   |   | |         |-ImplicitCastExpr 0x23fb5675ef8 <col:61, col:64> 'int' <IntegralCast>
|   |   | |         | `-ImplicitCastExpr 0x23fb5675ee0 <col:61, col:64> 'char' <LValueToRValue>
|   |   | |         |   `-ArraySubscriptExpr 0x23fb5675ea8 <col:61, col:64> 'char' lvalue
|   |   | |         |     |-ImplicitCastExpr 0x23fb5675e78 <col:61> 'char *' <LValueToRValue>
|   |   | |         |     | `-DeclRefExpr 0x23fb5675e38 <col:61> 'char *' lvalue Var 0x23fb566d430 'a' 'char *'
|   |   | |         |     `-ImplicitCastExpr 0x23fb5675e90 <col:63> 'int' <LValueToRValue>
|   |   | |         |       `-DeclRefExpr 0x23fb5675e58 <col:63> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   | |         `-CharacterLiteral 0x23fb5675ec8 <col:69> 'int' 45
|   |   | `-CompoundStmt 0x23fb5676108 <col:76, line:45:9>
|   |   |   |-UnaryOperator 0x23fb5675fd0 <line:41:13, col:14> 'int' postfix '++'
|   |   |   | `-DeclRefExpr 0x23fb5675fb0 <col:13> 'int' lvalue Var 0x23fb566d548 'i' 'int'
|   |   |   |-IfStmt 0x23fb56760e8 <line:42:13, line:43:30>
|   |   |   | |-ImplicitCastExpr 0x23fb5676020 <line:42:17> 'struct tm *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x23fb5675fe8 <col:17> 'struct tm *' lvalue ParmVar 0x23fb566cad0 'tm' 'struct tm *'
|   |   |   | `-BinaryOperator 0x23fb56760c8 <line:43:17, col:30> 'int' '='
|   |   |   |   |-MemberExpr 0x23fb5676070 <col:17, col:21> 'int' lvalue ->tm_sec 0x23fb56559d8
|   |   |   |   | `-ImplicitCastExpr 0x23fb5676058 <col:17> 'struct tm *' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x23fb5676038 <col:17> 'struct tm *' lvalue ParmVar 0x23fb566cad0 'tm' 'struct tm *'
|   |   |   |   `-IntegerLiteral 0x23fb56760a0 <col:30> 'int' 0
|   |   |   `-BreakStmt 0x23fb5676100 <line:44:13>
|   |   |-IfStmt 0x23fb56763b0 <line:46:9, line:47:18>
|   |   | |-BinaryOperator 0x23fb5676378 <line:46:13, col:40> 'int' '||'
|   |   | | |-ParenExpr 0x23fb5676240 <col:13, col:24> 'int'
|   |   | | | `-BinaryOperator 0x23fb5676220 <col:14, col:21> 'int' '<'
|   |   | | |   |-ImplicitCastExpr 0x23fb5676208 <col:14, col:17> 'int' <IntegralCast>
|   |   | | |   | `-ImplicitCastExpr 0x23fb56761f0 <col:14, col:17> 'char' <LValueToRValue>
|   |   | | |   |   `-ArraySubscriptExpr 0x23fb56761b8 <col:14, col:17> 'char' lvalue
|   |   | | |   |     |-ImplicitCastExpr 0x23fb5676188 <col:14> 'char *' <LValueToRValue>
|   |   | | |   |     | `-DeclRefExpr 0x23fb5676148 <col:14> 'char *' lvalue Var 0x23fb566d430 'a' 'char *'
|   |   | | |   |     `-ImplicitCastExpr 0x23fb56761a0 <col:16> 'int' <LValueToRValue>
|   |   | | |   |       `-DeclRefExpr 0x23fb5676168 <col:16> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   | | |   `-CharacterLiteral 0x23fb56761d8 <col:21> 'int' 48
|   |   | | `-ParenExpr 0x23fb5676358 <col:29, col:40> 'int'
|   |   | |   `-BinaryOperator 0x23fb5676338 <col:30, col:37> 'int' '>'
|   |   | |     |-ImplicitCastExpr 0x23fb5676320 <col:30, col:33> 'int' <IntegralCast>
|   |   | |     | `-ImplicitCastExpr 0x23fb5676308 <col:30, col:33> 'char' <LValueToRValue>
|   |   | |     |   `-ArraySubscriptExpr 0x23fb56762d0 <col:30, col:33> 'char' lvalue
|   |   | |     |     |-ImplicitCastExpr 0x23fb56762a0 <col:30> 'char *' <LValueToRValue>
|   |   | |     |     | `-DeclRefExpr 0x23fb5676260 <col:30> 'char *' lvalue Var 0x23fb566d430 'a' 'char *'
|   |   | |     |     `-ImplicitCastExpr 0x23fb56762b8 <col:32> 'int' <LValueToRValue>
|   |   | |     |       `-DeclRefExpr 0x23fb5676280 <col:32> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   | |     `-CharacterLiteral 0x23fb56762f0 <col:37> 'int' 57
|   |   | `-GotoStmt 0x23fb5676398 <line:47:13, col:18> 'err' 0x23fb5675990
|   |   |-BinaryOperator 0x23fb56764f8 <line:48:9, col:20> 'int' '='
|   |   | |-DeclRefExpr 0x23fb56763c8 <col:9> 'int' lvalue Var 0x23fb566d4c8 'n' 'int'
|   |   | `-BinaryOperator 0x23fb56764d8 <col:13, col:20> 'int' '-'
|   |   |   |-ImplicitCastExpr 0x23fb56764c0 <col:13, col:16> 'int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x23fb56764a8 <col:13, col:16> 'char' <LValueToRValue>
|   |   |   |   `-ArraySubscriptExpr 0x23fb5676470 <col:13, col:16> 'char' lvalue
|   |   |   |     |-ImplicitCastExpr 0x23fb5676440 <col:13> 'char *' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x23fb5676400 <col:13> 'char *' lvalue Var 0x23fb566d430 'a' 'char *'
|   |   |   |     `-ImplicitCastExpr 0x23fb5676458 <col:15> 'int' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x23fb5676420 <col:15> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   |   `-CharacterLiteral 0x23fb5676490 <col:20> 'int' 48
|   |   |-IfStmt 0x23fb56765c0 <line:49:9, line:50:18>
|   |   | |-BinaryOperator 0x23fb5676588 <line:49:13, col:19> 'int' '>'
|   |   | | |-UnaryOperator 0x23fb5676538 <col:13, col:15> 'int' prefix '++'
|   |   | | | `-DeclRefExpr 0x23fb5676518 <col:15> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   | | `-ImplicitCastExpr 0x23fb5676570 <col:19> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x23fb5676550 <col:19> 'int' lvalue Var 0x23fb566d5c8 'l' 'int'
|   |   | `-GotoStmt 0x23fb56765a8 <line:50:13, col:18> 'err' 0x23fb5675990
|   |   |-IfStmt 0x23fb5678880 <line:52:9, line:53:18>
|   |   | |-BinaryOperator 0x23fb5678848 <line:52:13, col:40> 'int' '||'
|   |   | | |-ParenExpr 0x23fb56766d0 <col:13, col:24> 'int'
|   |   | | | `-BinaryOperator 0x23fb56766b0 <col:14, col:21> 'int' '<'
|   |   | | |   |-ImplicitCastExpr 0x23fb5676698 <col:14, col:17> 'int' <IntegralCast>
|   |   | | |   | `-ImplicitCastExpr 0x23fb5676680 <col:14, col:17> 'char' <LValueToRValue>
|   |   | | |   |   `-ArraySubscriptExpr 0x23fb5676648 <col:14, col:17> 'char' lvalue
|   |   | | |   |     |-ImplicitCastExpr 0x23fb5676618 <col:14> 'char *' <LValueToRValue>
|   |   | | |   |     | `-DeclRefExpr 0x23fb56765d8 <col:14> 'char *' lvalue Var 0x23fb566d430 'a' 'char *'
|   |   | | |   |     `-ImplicitCastExpr 0x23fb5676630 <col:16> 'int' <LValueToRValue>
|   |   | | |   |       `-DeclRefExpr 0x23fb56765f8 <col:16> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   | | |   `-CharacterLiteral 0x23fb5676668 <col:21> 'int' 48
|   |   | | `-ParenExpr 0x23fb5678828 <col:29, col:40> 'int'
|   |   | |   `-BinaryOperator 0x23fb5678808 <col:30, col:37> 'int' '>'
|   |   | |     |-ImplicitCastExpr 0x23fb56787f0 <col:30, col:33> 'int' <IntegralCast>
|   |   | |     | `-ImplicitCastExpr 0x23fb5676798 <col:30, col:33> 'char' <LValueToRValue>
|   |   | |     |   `-ArraySubscriptExpr 0x23fb5676760 <col:30, col:33> 'char' lvalue
|   |   | |     |     |-ImplicitCastExpr 0x23fb5676730 <col:30> 'char *' <LValueToRValue>
|   |   | |     |     | `-DeclRefExpr 0x23fb56766f0 <col:30> 'char *' lvalue Var 0x23fb566d430 'a' 'char *'
|   |   | |     |     `-ImplicitCastExpr 0x23fb5676748 <col:32> 'int' <LValueToRValue>
|   |   | |     |       `-DeclRefExpr 0x23fb5676710 <col:32> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   | |     `-CharacterLiteral 0x23fb5676780 <col:37> 'int' 57
|   |   | `-GotoStmt 0x23fb5678868 <line:53:13, col:18> 'err' 0x23fb5675990
|   |   |-BinaryOperator 0x23fb5678a70 <line:54:9, col:31> 'int' '='
|   |   | |-DeclRefExpr 0x23fb5678898 <col:9> 'int' lvalue Var 0x23fb566d4c8 'n' 'int'
|   |   | `-BinaryOperator 0x23fb5678a50 <col:13, col:31> 'int' '-'
|   |   |   |-BinaryOperator 0x23fb5678a18 <col:13, col:27> 'int' '+'
|   |   |   | |-ParenExpr 0x23fb5678938 <col:13, col:20> 'int'
|   |   |   | | `-BinaryOperator 0x23fb5678918 <col:14, col:18> 'int' '*'
|   |   |   | |   |-ImplicitCastExpr 0x23fb5678900 <col:14> 'int' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x23fb56788b8 <col:14> 'int' lvalue Var 0x23fb566d4c8 'n' 'int'
|   |   |   | |   `-IntegerLiteral 0x23fb56788d8 <col:18> 'int' 10
|   |   |   | `-ImplicitCastExpr 0x23fb5678a00 <col:24, col:27> 'int' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x23fb56789e8 <col:24, col:27> 'char' <LValueToRValue>
|   |   |   |     `-ArraySubscriptExpr 0x23fb56789c8 <col:24, col:27> 'char' lvalue
|   |   |   |       |-ImplicitCastExpr 0x23fb5678998 <col:24> 'char *' <LValueToRValue>
|   |   |   |       | `-DeclRefExpr 0x23fb5678958 <col:24> 'char *' lvalue Var 0x23fb566d430 'a' 'char *'
|   |   |   |       `-ImplicitCastExpr 0x23fb56789b0 <col:26> 'int' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x23fb5678978 <col:26> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   |   `-CharacterLiteral 0x23fb5678a38 <col:31> 'int' 48
|   |   |-IfStmt 0x23fb5678b38 <line:55:9, line:56:18>
|   |   | |-BinaryOperator 0x23fb5678b00 <line:55:13, col:19> 'int' '>'
|   |   | | |-UnaryOperator 0x23fb5678ab0 <col:13, col:15> 'int' prefix '++'
|   |   | | | `-DeclRefExpr 0x23fb5678a90 <col:15> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   | | `-ImplicitCastExpr 0x23fb5678ae8 <col:19> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x23fb5678ac8 <col:19> 'int' lvalue Var 0x23fb566d5c8 'l' 'int'
|   |   | `-GotoStmt 0x23fb5678b20 <line:56:13, col:18> 'err' 0x23fb5675990
|   |   |-IfStmt 0x23fb5678df8 <line:58:9, line:59:18>
|   |   | |-BinaryOperator 0x23fb5678dc0 <line:58:13, col:40> 'int' '||'
|   |   | | |-ParenExpr 0x23fb5678c68 <col:13, col:24> 'int'
|   |   | | | `-BinaryOperator 0x23fb5678c48 <col:14, col:23> 'int' '<'
|   |   | | |   |-ImplicitCastExpr 0x23fb5678c18 <col:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x23fb5678b50 <col:14> 'int' lvalue Var 0x23fb566d4c8 'n' 'int'
|   |   | | |   `-ImplicitCastExpr 0x23fb5678c30 <col:18, col:23> 'int' <LValueToRValue>
|   |   | | |     `-ArraySubscriptExpr 0x23fb5678bf8 <col:18, col:23> 'const int' lvalue
|   |   | | |       |-ImplicitCastExpr 0x23fb5678bc8 <col:18> 'const int *' <ArrayToPointerDecay>
|   |   | | |       | `-DeclRefExpr 0x23fb5678b70 <col:18> 'const int [9]' lvalue Var 0x23fb566cda0 'min' 'const int [9]'
|   |   | | |       `-ImplicitCastExpr 0x23fb5678be0 <col:22> 'int' <LValueToRValue>
|   |   | | |         `-DeclRefExpr 0x23fb5678ba8 <col:22> 'int' lvalue Var 0x23fb566d548 'i' 'int'
|   |   | | `-ParenExpr 0x23fb5678da0 <col:29, col:40> 'int'
|   |   | |   `-BinaryOperator 0x23fb5678d80 <col:30, col:39> 'int' '>'
|   |   | |     |-ImplicitCastExpr 0x23fb5678d50 <col:30> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x23fb5678c88 <col:30> 'int' lvalue Var 0x23fb566d4c8 'n' 'int'
|   |   | |     `-ImplicitCastExpr 0x23fb5678d68 <col:34, col:39> 'int' <LValueToRValue>
|   |   | |       `-ArraySubscriptExpr 0x23fb5678d30 <col:34, col:39> 'const int' lvalue
|   |   | |         |-ImplicitCastExpr 0x23fb5678d00 <col:34> 'const int *' <ArrayToPointerDecay>
|   |   | |         | `-DeclRefExpr 0x23fb5678ca8 <col:34> 'const int [9]' lvalue Var 0x23fb566d110 'max' 'const int [9]'
|   |   | |         `-ImplicitCastExpr 0x23fb5678d18 <col:38> 'int' <LValueToRValue>
|   |   | |           `-DeclRefExpr 0x23fb5678ce0 <col:38> 'int' lvalue Var 0x23fb566d548 'i' 'int'
|   |   | `-GotoStmt 0x23fb5678de0 <line:59:13, col:18> 'err' 0x23fb5675990
|   |   `-IfStmt 0x23fb5679898 <line:60:9, line:84:9>
|   |     |-ImplicitCastExpr 0x23fb5678e30 <line:60:13> 'struct tm *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x23fb5678e10 <col:13> 'struct tm *' lvalue ParmVar 0x23fb566cad0 'tm' 'struct tm *'
|   |     `-CompoundStmt 0x23fb5679880 <col:17, line:84:9>
|   |       `-SwitchStmt 0x23fb5678e80 <line:61:13, line:83:13>
|   |         |-ImplicitCastExpr 0x23fb5678e68 <line:61:21> 'int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x23fb5678e48 <col:21> 'int' lvalue Var 0x23fb566d548 'i' 'int'
|   |         `-CompoundStmt 0x23fb5679800 <col:24, line:83:13>
|   |           |-CaseStmt 0x23fb5678ee0 <line:62:13, line:63:41>
|   |           | |-ConstantExpr 0x23fb5678ec8 <line:62:18> 'int'
|   |           | | `-IntegerLiteral 0x23fb5678ea0 <col:18> 'int' 0
|   |           | `-BinaryOperator 0x23fb5679038 <line:63:17, col:41> 'int' '='
|   |           |   |-MemberExpr 0x23fb5678f40 <col:17, col:21> 'int' lvalue ->tm_year 0x23fb5655c08
|   |           |   | `-ImplicitCastExpr 0x23fb5678f28 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x23fb5678f08 <col:17> 'struct tm *' lvalue ParmVar 0x23fb566cad0 'tm' 'struct tm *'
|   |           |   `-BinaryOperator 0x23fb5679018 <col:31, col:41> 'int' '-'
|   |           |     |-BinaryOperator 0x23fb5678fd0 <col:31, col:35> 'int' '*'
|   |           |     | |-ImplicitCastExpr 0x23fb5678fb8 <col:31> 'int' <LValueToRValue>
|   |           |     | | `-DeclRefExpr 0x23fb5678f70 <col:31> 'int' lvalue Var 0x23fb566d4c8 'n' 'int'
|   |           |     | `-IntegerLiteral 0x23fb5678f90 <col:35> 'int' 100
|   |           |     `-IntegerLiteral 0x23fb5678ff0 <col:41> 'int' 1900
|   |           |-BreakStmt 0x23fb5679058 <line:64:17>
|   |           |-CaseStmt 0x23fb56790a0 <line:65:13, line:66:32>
|   |           | |-ConstantExpr 0x23fb5679088 <line:65:18> 'int'
|   |           | | `-IntegerLiteral 0x23fb5679060 <col:18> 'int' 1
|   |           | `-CompoundAssignOperator 0x23fb5679168 <line:66:17, col:32> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |           |   |-MemberExpr 0x23fb5679100 <col:17, col:21> 'int' lvalue ->tm_year 0x23fb5655c08
|   |           |   | `-ImplicitCastExpr 0x23fb56790e8 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x23fb56790c8 <col:17> 'struct tm *' lvalue ParmVar 0x23fb566cad0 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x23fb5679150 <col:32> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x23fb5679130 <col:32> 'int' lvalue Var 0x23fb566d4c8 'n' 'int'
|   |           |-BreakStmt 0x23fb5679198 <line:67:17>
|   |           |-CaseStmt 0x23fb56791e0 <line:68:13, line:69:34>
|   |           | |-ConstantExpr 0x23fb56791c8 <line:68:18> 'int'
|   |           | | `-IntegerLiteral 0x23fb56791a0 <col:18> 'int' 2
|   |           | `-BinaryOperator 0x23fb56792f0 <line:69:17, col:34> 'int' '='
|   |           |   |-MemberExpr 0x23fb5679240 <col:17, col:21> 'int' lvalue ->tm_mon 0x23fb5655b98
|   |           |   | `-ImplicitCastExpr 0x23fb5679228 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x23fb5679208 <col:17> 'struct tm *' lvalue ParmVar 0x23fb566cad0 'tm' 'struct tm *'
|   |           |   `-BinaryOperator 0x23fb56792d0 <col:30, col:34> 'int' '-'
|   |           |     |-ImplicitCastExpr 0x23fb56792b8 <col:30> 'int' <LValueToRValue>
|   |           |     | `-DeclRefExpr 0x23fb5679270 <col:30> 'int' lvalue Var 0x23fb566d4c8 'n' 'int'
|   |           |     `-IntegerLiteral 0x23fb5679290 <col:34> 'int' 1
|   |           |-BreakStmt 0x23fb5679310 <line:70:17>
|   |           |-CaseStmt 0x23fb5679358 <line:71:13, line:72:31>
|   |           | |-ConstantExpr 0x23fb5679340 <line:71:18> 'int'
|   |           | | `-IntegerLiteral 0x23fb5679318 <col:18> 'int' 3
|   |           | `-BinaryOperator 0x23fb5679420 <line:72:17, col:31> 'int' '='
|   |           |   |-MemberExpr 0x23fb56793b8 <col:17, col:21> 'int' lvalue ->tm_mday 0x23fb5655b28
|   |           |   | `-ImplicitCastExpr 0x23fb56793a0 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x23fb5679380 <col:17> 'struct tm *' lvalue ParmVar 0x23fb566cad0 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x23fb5679408 <col:31> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x23fb56793e8 <col:31> 'int' lvalue Var 0x23fb566d4c8 'n' 'int'
|   |           |-BreakStmt 0x23fb5679440 <line:73:17>
|   |           |-CaseStmt 0x23fb5679488 <line:74:13, line:75:31>
|   |           | |-ConstantExpr 0x23fb5679470 <line:74:18> 'int'
|   |           | | `-IntegerLiteral 0x23fb5679448 <col:18> 'int' 4
|   |           | `-BinaryOperator 0x23fb5679550 <line:75:17, col:31> 'int' '='
|   |           |   |-MemberExpr 0x23fb56794e8 <col:17, col:21> 'int' lvalue ->tm_hour 0x23fb5655ab8
|   |           |   | `-ImplicitCastExpr 0x23fb56794d0 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x23fb56794b0 <col:17> 'struct tm *' lvalue ParmVar 0x23fb566cad0 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x23fb5679538 <col:31> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x23fb5679518 <col:31> 'int' lvalue Var 0x23fb566d4c8 'n' 'int'
|   |           |-BreakStmt 0x23fb5679570 <line:76:17>
|   |           |-CaseStmt 0x23fb56795b8 <line:77:13, line:78:30>
|   |           | |-ConstantExpr 0x23fb56795a0 <line:77:18> 'int'
|   |           | | `-IntegerLiteral 0x23fb5679578 <col:18> 'int' 5
|   |           | `-BinaryOperator 0x23fb5679680 <line:78:17, col:30> 'int' '='
|   |           |   |-MemberExpr 0x23fb5679618 <col:17, col:21> 'int' lvalue ->tm_min 0x23fb5655a48
|   |           |   | `-ImplicitCastExpr 0x23fb5679600 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x23fb56795e0 <col:17> 'struct tm *' lvalue ParmVar 0x23fb566cad0 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x23fb5679668 <col:30> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x23fb5679648 <col:30> 'int' lvalue Var 0x23fb566d4c8 'n' 'int'
|   |           |-BreakStmt 0x23fb56796a0 <line:79:17>
|   |           |-CaseStmt 0x23fb56796e8 <line:80:13, line:81:30>
|   |           | |-ConstantExpr 0x23fb56796d0 <line:80:18> 'int'
|   |           | | `-IntegerLiteral 0x23fb56796a8 <col:18> 'int' 6
|   |           | `-BinaryOperator 0x23fb56797b0 <line:81:17, col:30> 'int' '='
|   |           |   |-MemberExpr 0x23fb5679748 <col:17, col:21> 'int' lvalue ->tm_sec 0x23fb56559d8
|   |           |   | `-ImplicitCastExpr 0x23fb5679730 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x23fb5679710 <col:17> 'struct tm *' lvalue ParmVar 0x23fb566cad0 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x23fb5679798 <col:30> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x23fb5679778 <col:30> 'int' lvalue Var 0x23fb566d4c8 'n' 'int'
|   |           `-BreakStmt 0x23fb56797d0 <line:82:17>
|   |-IfStmt 0x23fb5679fd0 <line:90:5, line:99:5>
|   | |-BinaryOperator 0x23fb5679a18 <line:90:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x23fb5679a00 <col:9, col:12> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x23fb56799e8 <col:9, col:12> 'char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x23fb56799b0 <col:9, col:12> 'char' lvalue
|   | | |     |-ImplicitCastExpr 0x23fb5679980 <col:9> 'char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x23fb5679940 <col:9> 'char *' lvalue Var 0x23fb566d430 'a' 'char *'
|   | | |     `-ImplicitCastExpr 0x23fb5679998 <col:11> 'int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x23fb5679960 <col:11> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   | | `-CharacterLiteral 0x23fb56799d0 <col:17> 'int' 46
|   | `-CompoundStmt 0x23fb5679fa0 <col:22, line:99:5>
|   |   |-IfStmt 0x23fb5679ae0 <line:91:9, line:92:18>
|   |   | |-BinaryOperator 0x23fb5679aa8 <line:91:13, col:19> 'int' '>'
|   |   | | |-UnaryOperator 0x23fb5679a58 <col:13, col:15> 'int' prefix '++'
|   |   | | | `-DeclRefExpr 0x23fb5679a38 <col:15> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   | | `-ImplicitCastExpr 0x23fb5679a90 <col:19> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x23fb5679a70 <col:19> 'int' lvalue Var 0x23fb566d5c8 'l' 'int'
|   |   | `-GotoStmt 0x23fb5679ac8 <line:92:13, col:18> 'err' 0x23fb5675990
|   |   |-BinaryOperator 0x23fb5679b50 <line:93:9, col:13> 'int' '='
|   |   | |-DeclRefExpr 0x23fb5679af8 <col:9> 'int' lvalue Var 0x23fb566d548 'i' 'int'
|   |   | `-ImplicitCastExpr 0x23fb5679b38 <col:13> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x23fb5679b18 <col:13> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   |-WhileStmt 0x23fb5679ec8 <line:94:9, line:95:14>
|   |   | |-BinaryOperator 0x23fb5679e70 <line:94:16, col:57> 'int' '&&'
|   |   | | |-BinaryOperator 0x23fb5679da0 <col:16, col:45> 'int' '&&'
|   |   | | | |-ParenExpr 0x23fb5679c68 <col:16, col:28> 'int'
|   |   | | | | `-BinaryOperator 0x23fb5679c48 <col:17, col:25> 'int' '>='
|   |   | | | |   |-ImplicitCastExpr 0x23fb5679c30 <col:17, col:20> 'int' <IntegralCast>
|   |   | | | |   | `-ImplicitCastExpr 0x23fb5679c18 <col:17, col:20> 'char' <LValueToRValue>
|   |   | | | |   |   `-ArraySubscriptExpr 0x23fb5679be0 <col:17, col:20> 'char' lvalue
|   |   | | | |   |     |-ImplicitCastExpr 0x23fb5679bb0 <col:17> 'char *' <LValueToRValue>
|   |   | | | |   |     | `-DeclRefExpr 0x23fb5679b70 <col:17> 'char *' lvalue Var 0x23fb566d430 'a' 'char *'
|   |   | | | |   |     `-ImplicitCastExpr 0x23fb5679bc8 <col:19> 'int' <LValueToRValue>
|   |   | | | |   |       `-DeclRefExpr 0x23fb5679b90 <col:19> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   | | | |   `-CharacterLiteral 0x23fb5679c00 <col:25> 'int' 48
|   |   | | | `-ParenExpr 0x23fb5679d80 <col:33, col:45> 'int'
|   |   | | |   `-BinaryOperator 0x23fb5679d60 <col:34, col:42> 'int' '<='
|   |   | | |     |-ImplicitCastExpr 0x23fb5679d48 <col:34, col:37> 'int' <IntegralCast>
|   |   | | |     | `-ImplicitCastExpr 0x23fb5679d30 <col:34, col:37> 'char' <LValueToRValue>
|   |   | | |     |   `-ArraySubscriptExpr 0x23fb5679cf8 <col:34, col:37> 'char' lvalue
|   |   | | |     |     |-ImplicitCastExpr 0x23fb5679cc8 <col:34> 'char *' <LValueToRValue>
|   |   | | |     |     | `-DeclRefExpr 0x23fb5679c88 <col:34> 'char *' lvalue Var 0x23fb566d430 'a' 'char *'
|   |   | | |     |     `-ImplicitCastExpr 0x23fb5679ce0 <col:36> 'int' <LValueToRValue>
|   |   | | |     |       `-DeclRefExpr 0x23fb5679ca8 <col:36> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   | | |     `-CharacterLiteral 0x23fb5679d18 <col:42> 'int' 57
|   |   | | `-ParenExpr 0x23fb5679e50 <col:50, col:57> 'int'
|   |   | |   `-BinaryOperator 0x23fb5679e30 <col:51, col:56> 'int' '<='
|   |   | |     |-ImplicitCastExpr 0x23fb5679e00 <col:51> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x23fb5679dc0 <col:51> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   | |     `-ImplicitCastExpr 0x23fb5679e18 <col:56> 'int' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x23fb5679de0 <col:56> 'int' lvalue Var 0x23fb566d5c8 'l' 'int'
|   |   | `-UnaryOperator 0x23fb5679eb0 <line:95:13, col:14> 'int' postfix '++'
|   |   |   `-DeclRefExpr 0x23fb5679e90 <col:13> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   `-IfStmt 0x23fb5679f88 <line:97:9, line:98:18>
|   |     |-BinaryOperator 0x23fb5679f50 <line:97:13, col:18> 'int' '=='
|   |     | |-ImplicitCastExpr 0x23fb5679f20 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x23fb5679ee0 <col:13> 'int' lvalue Var 0x23fb566d548 'i' 'int'
|   |     | `-ImplicitCastExpr 0x23fb5679f38 <col:18> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x23fb5679f00 <col:18> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |     `-GotoStmt 0x23fb5679f70 <line:98:13, col:18> 'err' 0x23fb5675990
|   |-IfStmt 0x23fb5677c90 <line:101:5, line:131:5> has_else
|   | |-BinaryOperator 0x23fb567a0c0 <line:101:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x23fb567a0a8 <col:9, col:12> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x23fb567a090 <col:9, col:12> 'char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x23fb567a058 <col:9, col:12> 'char' lvalue
|   | | |     |-ImplicitCastExpr 0x23fb567a028 <col:9> 'char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x23fb5679fe8 <col:9> 'char *' lvalue Var 0x23fb566d430 'a' 'char *'
|   | | |     `-ImplicitCastExpr 0x23fb567a040 <col:11> 'int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x23fb567a008 <col:11> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   | | `-CharacterLiteral 0x23fb567a078 <col:17> 'int' 90
|   | |-UnaryOperator 0x23fb567a100 <line:102:9, col:10> 'int' postfix '++'
|   | | `-DeclRefExpr 0x23fb567a0e0 <col:9> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   | `-IfStmt 0x23fb5677c68 <line:103:10, line:131:5> has_else
|   |   |-BinaryOperator 0x23fb567a348 <line:103:14, col:43> 'int' '||'
|   |   | |-ParenExpr 0x23fb567a210 <col:14, col:26> 'int'
|   |   | | `-BinaryOperator 0x23fb567a1f0 <col:15, col:23> 'int' '=='
|   |   | |   |-ImplicitCastExpr 0x23fb567a1d8 <col:15, col:18> 'int' <IntegralCast>
|   |   | |   | `-ImplicitCastExpr 0x23fb567a1c0 <col:15, col:18> 'char' <LValueToRValue>
|   |   | |   |   `-ArraySubscriptExpr 0x23fb567a188 <col:15, col:18> 'char' lvalue
|   |   | |   |     |-ImplicitCastExpr 0x23fb567a158 <col:15> 'char *' <LValueToRValue>
|   |   | |   |     | `-DeclRefExpr 0x23fb567a118 <col:15> 'char *' lvalue Var 0x23fb566d430 'a' 'char *'
|   |   | |   |     `-ImplicitCastExpr 0x23fb567a170 <col:17> 'int' <LValueToRValue>
|   |   | |   |       `-DeclRefExpr 0x23fb567a138 <col:17> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   | |   `-CharacterLiteral 0x23fb567a1a8 <col:23> 'int' 43
|   |   | `-ParenExpr 0x23fb567a328 <col:31, col:43> 'int'
|   |   |   `-BinaryOperator 0x23fb567a308 <col:32, col:40> 'int' '=='
|   |   |     |-ImplicitCastExpr 0x23fb567a2f0 <col:32, col:35> 'int' <IntegralCast>
|   |   |     | `-ImplicitCastExpr 0x23fb567a2d8 <col:32, col:35> 'char' <LValueToRValue>
|   |   |     |   `-ArraySubscriptExpr 0x23fb567a2a0 <col:32, col:35> 'char' lvalue
|   |   |     |     |-ImplicitCastExpr 0x23fb567a270 <col:32> 'char *' <LValueToRValue>
|   |   |     |     | `-DeclRefExpr 0x23fb567a230 <col:32> 'char *' lvalue Var 0x23fb566d430 'a' 'char *'
|   |   |     |     `-ImplicitCastExpr 0x23fb567a288 <col:34> 'int' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x23fb567a250 <col:34> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   |     `-CharacterLiteral 0x23fb567a2c0 <col:40> 'int' 45
|   |   |-CompoundStmt 0x23fb5677b40 <col:46, line:128:5>
|   |   | |-DeclStmt 0x23fb567a638 <line:104:9, col:55>
|   |   | | |-VarDecl 0x23fb567a380 <col:9, col:42> col:13 used offsign 'int' cinit
|   |   | | | `-ConditionalOperator 0x23fb567a548 <col:23, col:42> 'int'
|   |   | | |   |-BinaryOperator 0x23fb567a4c0 <col:23, col:31> 'int' '=='
|   |   | | |   | |-ImplicitCastExpr 0x23fb567a4a8 <col:23, col:26> 'int' <IntegralCast>
|   |   | | |   | | `-ImplicitCastExpr 0x23fb567a490 <col:23, col:26> 'char' <LValueToRValue>
|   |   | | |   | |   `-ArraySubscriptExpr 0x23fb567a458 <col:23, col:26> 'char' lvalue
|   |   | | |   | |     |-ImplicitCastExpr 0x23fb567a428 <col:23> 'char *' <LValueToRValue>
|   |   | | |   | |     | `-DeclRefExpr 0x23fb567a3e8 <col:23> 'char *' lvalue Var 0x23fb566d430 'a' 'char *'
|   |   | | |   | |     `-ImplicitCastExpr 0x23fb567a440 <col:25> 'int' <LValueToRValue>
|   |   | | |   | |       `-DeclRefExpr 0x23fb567a408 <col:25> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   | | |   | `-CharacterLiteral 0x23fb567a478 <col:31> 'int' 45
|   |   | | |   |-IntegerLiteral 0x23fb567a4e0 <col:37> 'int' 1
|   |   | | |   `-UnaryOperator 0x23fb567a530 <col:41, col:42> 'int' prefix '-'
|   |   | | |     `-IntegerLiteral 0x23fb567a508 <col:42> 'int' 1
|   |   | | `-VarDecl 0x23fb567a590 <col:9, col:54> col:45 used offset 'int' cinit
|   |   | |   `-IntegerLiteral 0x23fb567a5f8 <col:54> 'int' 0
|   |   | |-UnaryOperator 0x23fb567a670 <line:105:9, col:10> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x23fb567a650 <col:9> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   | |-IfStmt 0x23fb567a778 <line:106:9, line:107:18>
|   |   | | |-BinaryOperator 0x23fb567a740 <line:106:13, col:21> 'int' '>'
|   |   | | | |-BinaryOperator 0x23fb567a6e8 <col:13, col:17> 'int' '+'
|   |   | | | | |-ImplicitCastExpr 0x23fb567a6d0 <col:13> 'int' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x23fb567a688 <col:13> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   | | | | `-IntegerLiteral 0x23fb567a6a8 <col:17> 'int' 4
|   |   | | | `-ImplicitCastExpr 0x23fb567a728 <col:21> 'int' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x23fb567a708 <col:21> 'int' lvalue Var 0x23fb566d5c8 'l' 'int'
|   |   | | `-GotoStmt 0x23fb567a760 <line:107:13, col:18> 'err' 0x23fb5675990
|   |   | |-ForStmt 0x23fb567c7a8 <line:108:9, line:125:9>
|   |   | | |-BinaryOperator 0x23fb567a7d8 <line:108:14, col:18> 'int' '='
|   |   | | | |-DeclRefExpr 0x23fb567a790 <col:14> 'int' lvalue Var 0x23fb566d548 'i' 'int'
|   |   | | | `-IntegerLiteral 0x23fb567a7b0 <col:18> 'int' 7
|   |   | | |-<<<NULL>>>
|   |   | | |-BinaryOperator 0x23fb567b880 <col:21, col:25> 'int' '<'
|   |   | | | |-ImplicitCastExpr 0x23fb567b868 <col:21> 'int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x23fb567b820 <col:21> 'int' lvalue Var 0x23fb566d548 'i' 'int'
|   |   | | | `-IntegerLiteral 0x23fb567b840 <col:25> 'int' 9
|   |   | | |-UnaryOperator 0x23fb567b8c0 <col:28, col:29> 'int' postfix '++'
|   |   | | | `-DeclRefExpr 0x23fb567b8a0 <col:28> 'int' lvalue Var 0x23fb566d548 'i' 'int'
|   |   | | `-CompoundStmt 0x23fb567c758 <col:33, line:125:9>
|   |   | |   |-IfStmt 0x23fb567bb40 <line:109:13, line:110:22>
|   |   | |   | |-BinaryOperator 0x23fb567bb08 <line:109:17, col:44> 'int' '||'
|   |   | |   | | |-ParenExpr 0x23fb567b9d0 <col:17, col:28> 'int'
|   |   | |   | | | `-BinaryOperator 0x23fb567b9b0 <col:18, col:25> 'int' '<'
|   |   | |   | | |   |-ImplicitCastExpr 0x23fb567b998 <col:18, col:21> 'int' <IntegralCast>
|   |   | |   | | |   | `-ImplicitCastExpr 0x23fb567b980 <col:18, col:21> 'char' <LValueToRValue>
|   |   | |   | | |   |   `-ArraySubscriptExpr 0x23fb567b948 <col:18, col:21> 'char' lvalue
|   |   | |   | | |   |     |-ImplicitCastExpr 0x23fb567b918 <col:18> 'char *' <LValueToRValue>
|   |   | |   | | |   |     | `-DeclRefExpr 0x23fb567b8d8 <col:18> 'char *' lvalue Var 0x23fb566d430 'a' 'char *'
|   |   | |   | | |   |     `-ImplicitCastExpr 0x23fb567b930 <col:20> 'int' <LValueToRValue>
|   |   | |   | | |   |       `-DeclRefExpr 0x23fb567b8f8 <col:20> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   | |   | | |   `-CharacterLiteral 0x23fb567b968 <col:25> 'int' 48
|   |   | |   | | `-ParenExpr 0x23fb567bae8 <col:33, col:44> 'int'
|   |   | |   | |   `-BinaryOperator 0x23fb567bac8 <col:34, col:41> 'int' '>'
|   |   | |   | |     |-ImplicitCastExpr 0x23fb567bab0 <col:34, col:37> 'int' <IntegralCast>
|   |   | |   | |     | `-ImplicitCastExpr 0x23fb567ba98 <col:34, col:37> 'char' <LValueToRValue>
|   |   | |   | |     |   `-ArraySubscriptExpr 0x23fb567ba60 <col:34, col:37> 'char' lvalue
|   |   | |   | |     |     |-ImplicitCastExpr 0x23fb567ba30 <col:34> 'char *' <LValueToRValue>
|   |   | |   | |     |     | `-DeclRefExpr 0x23fb567b9f0 <col:34> 'char *' lvalue Var 0x23fb566d430 'a' 'char *'
|   |   | |   | |     |     `-ImplicitCastExpr 0x23fb567ba48 <col:36> 'int' <LValueToRValue>
|   |   | |   | |     |       `-DeclRefExpr 0x23fb567ba10 <col:36> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   | |   | |     `-CharacterLiteral 0x23fb567ba80 <col:41> 'int' 57
|   |   | |   | `-GotoStmt 0x23fb567bb28 <line:110:17, col:22> 'err' 0x23fb5675990
|   |   | |   |-BinaryOperator 0x23fb567bc70 <line:111:13, col:24> 'int' '='
|   |   | |   | |-DeclRefExpr 0x23fb567bb58 <col:13> 'int' lvalue Var 0x23fb566d4c8 'n' 'int'
|   |   | |   | `-BinaryOperator 0x23fb567bc50 <col:17, col:24> 'int' '-'
|   |   | |   |   |-ImplicitCastExpr 0x23fb567bc38 <col:17, col:20> 'int' <IntegralCast>
|   |   | |   |   | `-ImplicitCastExpr 0x23fb567bc20 <col:17, col:20> 'char' <LValueToRValue>
|   |   | |   |   |   `-ArraySubscriptExpr 0x23fb567bbe8 <col:17, col:20> 'char' lvalue
|   |   | |   |   |     |-ImplicitCastExpr 0x23fb567bbb8 <col:17> 'char *' <LValueToRValue>
|   |   | |   |   |     | `-DeclRefExpr 0x23fb567bb78 <col:17> 'char *' lvalue Var 0x23fb566d430 'a' 'char *'
|   |   | |   |   |     `-ImplicitCastExpr 0x23fb567bbd0 <col:19> 'int' <LValueToRValue>
|   |   | |   |   |       `-DeclRefExpr 0x23fb567bb98 <col:19> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   | |   |   `-CharacterLiteral 0x23fb567bc08 <col:24> 'int' 48
|   |   | |   |-UnaryOperator 0x23fb567bcb0 <line:112:13, col:14> 'int' postfix '++'
|   |   | |   | `-DeclRefExpr 0x23fb567bc90 <col:13> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   | |   |-IfStmt 0x23fb567bf30 <line:113:13, line:114:22>
|   |   | |   | |-BinaryOperator 0x23fb567bef8 <line:113:17, col:44> 'int' '||'
|   |   | |   | | |-ParenExpr 0x23fb567bdc0 <col:17, col:28> 'int'
|   |   | |   | | | `-BinaryOperator 0x23fb567bda0 <col:18, col:25> 'int' '<'
|   |   | |   | | |   |-ImplicitCastExpr 0x23fb567bd88 <col:18, col:21> 'int' <IntegralCast>
|   |   | |   | | |   | `-ImplicitCastExpr 0x23fb567bd70 <col:18, col:21> 'char' <LValueToRValue>
|   |   | |   | | |   |   `-ArraySubscriptExpr 0x23fb567bd38 <col:18, col:21> 'char' lvalue
|   |   | |   | | |   |     |-ImplicitCastExpr 0x23fb567bd08 <col:18> 'char *' <LValueToRValue>
|   |   | |   | | |   |     | `-DeclRefExpr 0x23fb567bcc8 <col:18> 'char *' lvalue Var 0x23fb566d430 'a' 'char *'
|   |   | |   | | |   |     `-ImplicitCastExpr 0x23fb567bd20 <col:20> 'int' <LValueToRValue>
|   |   | |   | | |   |       `-DeclRefExpr 0x23fb567bce8 <col:20> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   | |   | | |   `-CharacterLiteral 0x23fb567bd58 <col:25> 'int' 48
|   |   | |   | | `-ParenExpr 0x23fb567bed8 <col:33, col:44> 'int'
|   |   | |   | |   `-BinaryOperator 0x23fb567beb8 <col:34, col:41> 'int' '>'
|   |   | |   | |     |-ImplicitCastExpr 0x23fb567bea0 <col:34, col:37> 'int' <IntegralCast>
|   |   | |   | |     | `-ImplicitCastExpr 0x23fb567be88 <col:34, col:37> 'char' <LValueToRValue>
|   |   | |   | |     |   `-ArraySubscriptExpr 0x23fb567be50 <col:34, col:37> 'char' lvalue
|   |   | |   | |     |     |-ImplicitCastExpr 0x23fb567be20 <col:34> 'char *' <LValueToRValue>
|   |   | |   | |     |     | `-DeclRefExpr 0x23fb567bde0 <col:34> 'char *' lvalue Var 0x23fb566d430 'a' 'char *'
|   |   | |   | |     |     `-ImplicitCastExpr 0x23fb567be38 <col:36> 'int' <LValueToRValue>
|   |   | |   | |     |       `-DeclRefExpr 0x23fb567be00 <col:36> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   | |   | |     `-CharacterLiteral 0x23fb567be70 <col:41> 'int' 57
|   |   | |   | `-GotoStmt 0x23fb567bf18 <line:114:17, col:22> 'err' 0x23fb5675990
|   |   | |   |-BinaryOperator 0x23fb567c120 <line:115:13, col:35> 'int' '='
|   |   | |   | |-DeclRefExpr 0x23fb567bf48 <col:13> 'int' lvalue Var 0x23fb566d4c8 'n' 'int'
|   |   | |   | `-BinaryOperator 0x23fb567c100 <col:17, col:35> 'int' '-'
|   |   | |   |   |-BinaryOperator 0x23fb567c0c8 <col:17, col:31> 'int' '+'
|   |   | |   |   | |-ParenExpr 0x23fb567bfe8 <col:17, col:24> 'int'
|   |   | |   |   | | `-BinaryOperator 0x23fb567bfc8 <col:18, col:22> 'int' '*'
|   |   | |   |   | |   |-ImplicitCastExpr 0x23fb567bfb0 <col:18> 'int' <LValueToRValue>
|   |   | |   |   | |   | `-DeclRefExpr 0x23fb567bf68 <col:18> 'int' lvalue Var 0x23fb566d4c8 'n' 'int'
|   |   | |   |   | |   `-IntegerLiteral 0x23fb567bf88 <col:22> 'int' 10
|   |   | |   |   | `-ImplicitCastExpr 0x23fb567c0b0 <col:28, col:31> 'int' <IntegralCast>
|   |   | |   |   |   `-ImplicitCastExpr 0x23fb567c098 <col:28, col:31> 'char' <LValueToRValue>
|   |   | |   |   |     `-ArraySubscriptExpr 0x23fb567c078 <col:28, col:31> 'char' lvalue
|   |   | |   |   |       |-ImplicitCastExpr 0x23fb567c048 <col:28> 'char *' <LValueToRValue>
|   |   | |   |   |       | `-DeclRefExpr 0x23fb567c008 <col:28> 'char *' lvalue Var 0x23fb566d430 'a' 'char *'
|   |   | |   |   |       `-ImplicitCastExpr 0x23fb567c060 <col:30> 'int' <LValueToRValue>
|   |   | |   |   |         `-DeclRefExpr 0x23fb567c028 <col:30> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   | |   |   `-CharacterLiteral 0x23fb567c0e8 <col:35> 'int' 48
|   |   | |   |-IfStmt 0x23fb567c3b8 <line:116:13, line:117:22>
|   |   | |   | |-BinaryOperator 0x23fb567c380 <line:116:17, col:44> 'int' '||'
|   |   | |   | | |-ParenExpr 0x23fb567c240 <col:17, col:28> 'int'
|   |   | |   | | | `-BinaryOperator 0x23fb567c220 <col:18, col:27> 'int' '<'
|   |   | |   | | |   |-ImplicitCastExpr 0x23fb567c1f0 <col:18> 'int' <LValueToRValue>
|   |   | |   | | |   | `-DeclRefExpr 0x23fb567c140 <col:18> 'int' lvalue Var 0x23fb566d4c8 'n' 'int'
|   |   | |   | | |   `-ImplicitCastExpr 0x23fb567c208 <col:22, col:27> 'int' <LValueToRValue>
|   |   | |   | | |     `-ArraySubscriptExpr 0x23fb567c1d0 <col:22, col:27> 'const int' lvalue
|   |   | |   | | |       |-ImplicitCastExpr 0x23fb567c1a0 <col:22> 'const int *' <ArrayToPointerDecay>
|   |   | |   | | |       | `-DeclRefExpr 0x23fb567c160 <col:22> 'const int [9]' lvalue Var 0x23fb566cda0 'min' 'const int [9]'
|   |   | |   | | |       `-ImplicitCastExpr 0x23fb567c1b8 <col:26> 'int' <LValueToRValue>
|   |   | |   | | |         `-DeclRefExpr 0x23fb567c180 <col:26> 'int' lvalue Var 0x23fb566d548 'i' 'int'
|   |   | |   | | `-ParenExpr 0x23fb567c360 <col:33, col:44> 'int'
|   |   | |   | |   `-BinaryOperator 0x23fb567c340 <col:34, col:43> 'int' '>'
|   |   | |   | |     |-ImplicitCastExpr 0x23fb567c310 <col:34> 'int' <LValueToRValue>
|   |   | |   | |     | `-DeclRefExpr 0x23fb567c260 <col:34> 'int' lvalue Var 0x23fb566d4c8 'n' 'int'
|   |   | |   | |     `-ImplicitCastExpr 0x23fb567c328 <col:38, col:43> 'int' <LValueToRValue>
|   |   | |   | |       `-ArraySubscriptExpr 0x23fb567c2f0 <col:38, col:43> 'const int' lvalue
|   |   | |   | |         |-ImplicitCastExpr 0x23fb567c2c0 <col:38> 'const int *' <ArrayToPointerDecay>
|   |   | |   | |         | `-DeclRefExpr 0x23fb567c280 <col:38> 'const int [9]' lvalue Var 0x23fb566d110 'max' 'const int [9]'
|   |   | |   | |         `-ImplicitCastExpr 0x23fb567c2d8 <col:42> 'int' <LValueToRValue>
|   |   | |   | |           `-DeclRefExpr 0x23fb567c2a0 <col:42> 'int' lvalue Var 0x23fb566d548 'i' 'int'
|   |   | |   | `-GotoStmt 0x23fb567c3a0 <line:117:17, col:22> 'err' 0x23fb5675990
|   |   | |   |-IfStmt 0x23fb567c708 <line:118:13, line:123:13>
|   |   | |   | |-ImplicitCastExpr 0x23fb567c3f0 <line:118:17> 'struct tm *' <LValueToRValue>
|   |   | |   | | `-DeclRefExpr 0x23fb567c3d0 <col:17> 'struct tm *' lvalue ParmVar 0x23fb566cad0 'tm' 'struct tm *'
|   |   | |   | `-CompoundStmt 0x23fb567c6f0 <col:21, line:123:13>
|   |   | |   |   `-IfStmt 0x23fb567c6c8 <line:119:17, line:122:35> has_else
|   |   | |   |     |-BinaryOperator 0x23fb567c468 <line:119:21, col:26> 'int' '=='
|   |   | |   |     | |-ImplicitCastExpr 0x23fb567c450 <col:21> 'int' <LValueToRValue>
|   |   | |   |     | | `-DeclRefExpr 0x23fb567c408 <col:21> 'int' lvalue Var 0x23fb566d548 'i' 'int'
|   |   | |   |     | `-IntegerLiteral 0x23fb567c428 <col:26> 'int' 7
|   |   | |   |     |-BinaryOperator 0x23fb567c540 <line:120:21, col:34> 'int' '='
|   |   | |   |     | |-DeclRefExpr 0x23fb567c488 <col:21> 'int' lvalue Var 0x23fb567a590 'offset' 'int'
|   |   | |   |     | `-BinaryOperator 0x23fb567c520 <col:30, col:34> 'int' '*'
|   |   | |   |     |   |-ImplicitCastExpr 0x23fb567c508 <col:30> 'int' <LValueToRValue>
|   |   | |   |     |   | `-DeclRefExpr 0x23fb567c4c0 <col:30> 'int' lvalue Var 0x23fb566d4c8 'n' 'int'
|   |   | |   |     |   `-IntegerLiteral 0x23fb567c4e0 <col:34> 'int' 3600
|   |   | |   |     `-IfStmt 0x23fb567c6b0 <line:121:22, line:122:35>
|   |   | |   |       |-BinaryOperator 0x23fb567c5c0 <line:121:26, col:31> 'int' '=='
|   |   | |   |       | |-ImplicitCastExpr 0x23fb567c5a8 <col:26> 'int' <LValueToRValue>
|   |   | |   |       | | `-DeclRefExpr 0x23fb567c560 <col:26> 'int' lvalue Var 0x23fb566d548 'i' 'int'
|   |   | |   |       | `-IntegerLiteral 0x23fb567c580 <col:31> 'int' 8
|   |   | |   |       `-CompoundAssignOperator 0x23fb567c680 <line:122:21, col:35> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |   |         |-DeclRefExpr 0x23fb567c5e0 <col:21> 'int' lvalue Var 0x23fb567a590 'offset' 'int'
|   |   | |   |         `-BinaryOperator 0x23fb567c660 <col:31, col:35> 'int' '*'
|   |   | |   |           |-ImplicitCastExpr 0x23fb567c648 <col:31> 'int' <LValueToRValue>
|   |   | |   |           | `-DeclRefExpr 0x23fb567c600 <col:31> 'int' lvalue Var 0x23fb566d4c8 'n' 'int'
|   |   | |   |           `-IntegerLiteral 0x23fb567c620 <col:35> 'int' 60
|   |   | |   `-UnaryOperator 0x23fb567c740 <line:124:13, col:14> 'int' postfix '++'
|   |   | |     `-DeclRefExpr 0x23fb567c720 <col:13> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |   | `-IfStmt 0x23fb5677b28 <line:126:9, line:127:20>
|   |   |   |-BinaryOperator 0x23fb5677ad0 <line:126:13, col:66> 'int' '&&'
|   |   |   | |-ImplicitCastExpr 0x23fb5677ab8 <col:13> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x23fb567c7e0 <col:13> 'int' lvalue Var 0x23fb567a590 'offset' 'int'
|   |   |   | `-UnaryOperator 0x23fb5677aa0 <col:23, col:66> 'int' prefix '!' cannot overflow
|   |   |   |   `-CallExpr 0x23fb5677a50 <col:24, col:66> 'int'
|   |   |   |     |-ImplicitCastExpr 0x23fb5677a38 <col:24> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x23fb56778f8 <col:24> 'int ()' Function 0x23fb5677830 'OPENSSL_gmtime_adj' 'int ()'
|   |   |   |     |-ImplicitCastExpr 0x23fb5677a88 <col:43> 'struct tm *' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x23fb5677918 <col:43> 'struct tm *' lvalue ParmVar 0x23fb566cad0 'tm' 'struct tm *'
|   |   |   |     |-IntegerLiteral 0x23fb5677938 <col:47> 'int' 0
|   |   |   |     `-BinaryOperator 0x23fb56779e8 <col:50, col:59> 'int' '*'
|   |   |   |       |-ImplicitCastExpr 0x23fb56779b8 <col:50> 'int' <LValueToRValue>
|   |   |   |       | `-DeclRefExpr 0x23fb5677960 <col:50> 'int' lvalue Var 0x23fb567a590 'offset' 'int'
|   |   |   |       `-ImplicitCastExpr 0x23fb56779d0 <col:59> 'int' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x23fb5677980 <col:59> 'int' lvalue Var 0x23fb567a380 'offsign' 'int'
|   |   |   `-ReturnStmt 0x23fb5677b18 <line:127:13, col:20>
|   |   |     `-IntegerLiteral 0x23fb5677af0 <col:20> 'int' 0
|   |   `-IfStmt 0x23fb5677c50 <line:128:12, line:131:5>
|   |     |-ImplicitCastExpr 0x23fb5677c08 <line:128:16, col:19> 'char' <LValueToRValue>
|   |     | `-ArraySubscriptExpr 0x23fb5677be8 <col:16, col:19> 'char' lvalue
|   |     |   |-ImplicitCastExpr 0x23fb5677bb8 <col:16> 'char *' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x23fb5677b78 <col:16> 'char *' lvalue Var 0x23fb566d430 'a' 'char *'
|   |     |   `-ImplicitCastExpr 0x23fb5677bd0 <col:18> 'int' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x23fb5677b98 <col:18> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |     `-CompoundStmt 0x23fb5677c38 <col:22, line:131:5>
|   |       `-GotoStmt 0x23fb5677c20 <line:130:9, col:14> 'err' 0x23fb5675990
|   |-ReturnStmt 0x23fb5677d68 <line:132:5, col:19>
|   | `-ParenExpr 0x23fb5677d48 <col:12, col:19> 'int'
|   |   `-BinaryOperator 0x23fb5677d28 <col:13, col:18> 'int' '=='
|   |     |-ImplicitCastExpr 0x23fb5677cf8 <col:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x23fb5677cb8 <col:13> 'int' lvalue Var 0x23fb566d648 'o' 'int'
|   |     `-ImplicitCastExpr 0x23fb5677d10 <col:18> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x23fb5677cd8 <col:18> 'int' lvalue Var 0x23fb566d5c8 'l' 'int'
|   `-LabelStmt 0x23fb5677dd0 <line:133:2, line:134:14> 'err'
|     `-ReturnStmt 0x23fb5677dc0 <col:5, col:14>
|       `-ParenExpr 0x23fb5677da0 <col:12, col:14> 'int'
|         `-IntegerLiteral 0x23fb5677d78 <col:13> 'int' 0
|-FunctionDecl 0x23fb5677f40 <line:137:1, line:140:1> line:137:5 invalid ASN1_GENERALIZEDTIME_check 'int (const int *)'
| |-ParmVarDecl 0x23fb5677e70 <col:32, col:60> col:60 invalid d 'const int *'
| `-CompoundStmt 0x23fb5678088 <line:138:1, line:140:1>
|-FunctionDecl 0x23fb5678210 <line:142:1, line:158:1> line:142:5 invalid ASN1_GENERALIZEDTIME_set_string 'int (int *, const char *)'
| |-ParmVarDecl 0x23fb56780b0 <col:37, col:59> col:59 invalid s 'int *'
| |-ParmVarDecl 0x23fb5678130 <col:62, col:74> col:74 used str 'const char *'
| `-CompoundStmt 0x23fb567a950 <line:143:1, line:158:1>
|   `-IfStmt 0x23fb567a928 <line:149:5, line:157:18> has_else
|     |-OpaqueValueExpr 0x23fb567a910 <<invalid sloc>> '_Bool'
|     |-CompoundStmt 0x23fb567a898 <line:149:41, line:156:5>
|     | |-IfStmt 0x23fb567a828 <line:150:9, line:154:9>
|     | | |-OpaqueValueExpr 0x23fb567a810 <<invalid sloc>> '_Bool'
|     | | `-CompoundStmt 0x23fb56787c8 <line:150:24, line:154:9>
|     | |   `-IfStmt 0x23fb56787b0 <line:151:13, line:152:24>
|     | |     |-OpaqueValueExpr 0x23fb5678798 <<invalid sloc>> '_Bool'
|     | |     `-ReturnStmt 0x23fb5678788 <col:17, col:24>
|     | |       `-IntegerLiteral 0x23fb5678760 <col:24> 'int' 0
|     | `-ReturnStmt 0x23fb567a888 <line:155:9, col:18>
|     |   `-ParenExpr 0x23fb567a868 <col:16, col:18> 'int'
|     |     `-IntegerLiteral 0x23fb567a840 <col:17> 'int' 1
|     `-ReturnStmt 0x23fb567a900 <line:157:9, col:18>
|       `-ParenExpr 0x23fb567a8e0 <col:16, col:18> 'int'
|         `-IntegerLiteral 0x23fb567a8b8 <col:17> 'int' 0
|-FunctionDecl 0x23fb5678310 <line:147:16> col:16 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x23fb56783b0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x23fb567ab10 <line:160:1, line:164:1> line:160:23 invalid ASN1_GENERALIZEDTIME_set 'int *(int *, time_t)'
| |-ParmVarDecl 0x23fb567a980 <col:48, col:70> col:70 invalid s 'int *'
| |-ParmVarDecl 0x23fb567a9f8 <line:161:48, col:55> col:55 used t 'time_t':'long long'
| `-CompoundStmt 0x23fb567ad70 <line:162:1, line:164:1>
|-FunctionDecl 0x23fb567b060 <line:166:1, line:216:1> line:166:23 invalid ASN1_GENERALIZEDTIME_adj 'int *(int *, time_t, int, long)'
| |-ParmVarDecl 0x23fb567ad98 <col:48, col:70> col:70 invalid s 'int *'
| |-ParmVarDecl 0x23fb567ae10 <line:167:48, col:55> col:55 used t 'time_t':'long long'
| |-ParmVarDecl 0x23fb567ae90 <col:58, col:62> col:62 used offset_day 'int'
| |-ParmVarDecl 0x23fb567af10 <line:168:48, col:53> col:53 used offset_sec 'long'
| `-CompoundStmt 0x23fb5674e70 <line:169:1, line:216:1>
|   |-DeclStmt 0x23fb567b1b8 <line:170:5, col:12>
|   | `-VarDecl 0x23fb567b150 <col:5, col:11> col:11 used p 'char *'
|   |-DeclStmt 0x23fb567b260 <line:171:5, col:18>
|   | `-VarDecl 0x23fb567b1f8 <col:5, col:16> col:16 used ts 'struct tm *'
|   |-DeclStmt 0x23fb567b300 <line:172:5, col:19>
|   | `-VarDecl 0x23fb567b298 <col:5, col:15> col:15 used data 'struct tm':'struct tm'
|   |-DeclStmt 0x23fb567b3d0 <line:173:5, col:20>
|   | `-VarDecl 0x23fb567b328 <col:5, col:18> col:12 used len 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x23fb567b3b8 <col:18> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x23fb567b390 <col:18> 'int' 20
|   |-IfStmt 0x23fb567b790 <line:180:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-OpaqueValueExpr 0x23fb567b778 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x23fb567b768 <.//openssl//file_jk/before\crypto\asn1\a_gentm.c:181:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x23fb567b750 <col:17, col:27> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x23fb567b730 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x23fb567b708 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x23fb567b6c8 <col:26> 'int' 0
|   |-BinaryOperator 0x23fb56769b8 <.//openssl//file_jk/before\crypto\asn1\a_gentm.c:183:5, col:34> 'struct tm *' '='
|   | |-DeclRefExpr 0x23fb567b7a8 <col:5> 'struct tm *' lvalue Var 0x23fb567b1f8 'ts' 'struct tm *'
|   | `-ImplicitCastExpr 0x23fb56769a0 <col:10, col:34> 'struct tm *' <IntegralToPointer>
|   |   `-CallExpr 0x23fb5676970 <col:10, col:34> 'int'
|   |     |-ImplicitCastExpr 0x23fb5676958 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x23fb5676898 <col:10> 'int ()' Function 0x23fb56767d0 'OPENSSL_gmtime' 'int ()'
|   |     |-UnaryOperator 0x23fb56768f0 <col:25, col:26> 'time_t *' prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0x23fb56768b8 <col:26> 'time_t':'long long' lvalue ParmVar 0x23fb567ae10 't' 'time_t':'long long'
|   |     `-UnaryOperator 0x23fb5676940 <col:29, col:30> 'struct tm *' prefix '&' cannot overflow
|   |       `-DeclRefExpr 0x23fb5676908 <col:30> 'struct tm':'struct tm' lvalue Var 0x23fb567b298 'data' 'struct tm':'struct tm'
|   |-IfStmt 0x23fb5676b38 <line:184:5, line:185:14>
|   | |-BinaryOperator 0x23fb5676ab0 <line:184:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x23fb5676a80 <.//openssl//file_jk/before\crypto\asn1\a_gentm.c:184:9> 'struct tm *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x23fb56769d8 <col:9> 'struct tm *' lvalue Var 0x23fb567b1f8 'ts' 'struct tm *'
|   | | `-ImplicitCastExpr 0x23fb5676a98 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'struct tm *' <BitCast>
|   | |   `-ParenExpr 0x23fb5676a60 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x23fb5676a38 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x23fb56769f8 <col:26> 'int' 0
|   | `-GotoStmt 0x23fb5676b20 <.//openssl//file_jk/before\crypto\asn1\a_gentm.c:185:9, col:14> 'err' 0x23fb5676ad0
|   |-IfStmt 0x23fb5676d88 <line:187:5, line:190:5>
|   | |-BinaryOperator 0x23fb5676bf0 <line:187:9, col:23> 'int' '||'
|   | | |-ImplicitCastExpr 0x23fb5676bc0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x23fb5676b50 <col:9> 'int' lvalue ParmVar 0x23fb567ae90 'offset_day' 'int'
|   | | `-ImplicitCastExpr 0x23fb5676bd8 <col:23> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x23fb5676b88 <col:23> 'long' lvalue ParmVar 0x23fb567af10 'offset_sec' 'long'
|   | `-CompoundStmt 0x23fb5676d70 <col:35, line:190:5>
|   |   `-IfStmt 0x23fb5676d58 <line:188:9, line:189:18>
|   |     |-UnaryOperator 0x23fb5676d28 <line:188:13, col:59> 'int' prefix '!' cannot overflow
|   |     | `-CallExpr 0x23fb5676ca8 <col:14, col:59> 'int'
|   |     |   |-ImplicitCastExpr 0x23fb5676c90 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |     |   | `-DeclRefExpr 0x23fb5676c10 <col:14> 'int ()' Function 0x23fb5677830 'OPENSSL_gmtime_adj' 'int ()'
|   |     |   |-ImplicitCastExpr 0x23fb5676ce0 <col:33> 'struct tm *' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x23fb5676c30 <col:33> 'struct tm *' lvalue Var 0x23fb567b1f8 'ts' 'struct tm *'
|   |     |   |-ImplicitCastExpr 0x23fb5676cf8 <col:37> 'int' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x23fb5676c50 <col:37> 'int' lvalue ParmVar 0x23fb567ae90 'offset_day' 'int'
|   |     |   `-ImplicitCastExpr 0x23fb5676d10 <col:49> 'long' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x23fb5676c70 <col:49> 'long' lvalue ParmVar 0x23fb567af10 'offset_sec' 'long'
|   |     `-GotoStmt 0x23fb5676d40 <line:189:13, col:18> 'err' 0x23fb5676ad0
|   |-IfStmt 0x23fb5677518 <line:193:5, line:201:5>
|   | |-OpaqueValueExpr 0x23fb5677500 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x23fb56774e0 <line:193:54, line:201:5>
|   |   |-BinaryOperator 0x23fb56770e8 <line:194:9, col:31> 'char *' '='
|   |   | |-DeclRefExpr 0x23fb5676f28 <col:9> 'char *' lvalue Var 0x23fb567b150 'p' 'char *'
|   |   | `-ImplicitCastExpr 0x23fb56770d0 <col:13, col:31> 'char *' <IntegralToPointer>
|   |   |   `-CallExpr 0x23fb5677090 <col:13, col:31> 'int'
|   |   |     |-ImplicitCastExpr 0x23fb5677078 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x23fb5677038 <col:13> 'int ()' Function 0x23fb5676f70 'OPENSSL_malloc' 'int ()'
|   |   |     `-ImplicitCastExpr 0x23fb56770b8 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x23fb5677058 <col:28> 'size_t':'unsigned long long' lvalue Var 0x23fb567b328 'len' 'size_t':'unsigned long long'
|   |   `-IfStmt 0x23fb5677340 <line:195:9, line:198:9>
|   |     |-BinaryOperator 0x23fb56771e0 <line:195:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |     | |-ImplicitCastExpr 0x23fb56771b0 <.//openssl//file_jk/before\crypto\asn1\a_gentm.c:195:13> 'char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x23fb5677108 <col:13> 'char *' lvalue Var 0x23fb567b150 'p' 'char *'
|   |     | `-ImplicitCastExpr 0x23fb56771c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |     |   `-ParenExpr 0x23fb5677190 <col:17, col:27> 'void *'
|   |     |     `-CStyleCastExpr 0x23fb5677168 <col:18, col:26> 'void *' <NullToPointer>
|   |     |       `-IntegerLiteral 0x23fb5677128 <col:26> 'int' 0
|   |     `-CompoundStmt 0x23fb5677328 <.//openssl//file_jk/before\crypto\asn1\a_gentm.c:195:24, line:198:9>
|   |       `-GotoStmt 0x23fb5677310 <line:197:13, col:18> 'err' 0x23fb5676ad0
|   |-CallExpr 0x23fb5674a30 <line:203:5, line:205:28> 'int'
|   | |-ImplicitCastExpr 0x23fb5674a18 <line:203:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x23fb5677620 <col:5> 'int ()' Function 0x23fb5677558 'BIO_snprintf' 'int ()'
|   | |-ImplicitCastExpr 0x23fb5674a98 <col:18> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x23fb5677640 <col:18> 'char *' lvalue Var 0x23fb567b150 'p' 'char *'
|   | |-ImplicitCastExpr 0x23fb5674ab0 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x23fb5677660 <col:21> 'size_t':'unsigned long long' lvalue Var 0x23fb567b328 'len' 'size_t':'unsigned long long'
|   | |-ImplicitCastExpr 0x23fb5674ac8 <col:26> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x23fb56776b8 <col:26> 'char [26]' lvalue "%04d%02d%02d%02d%02d%02dZ"
|   | |-BinaryOperator 0x23fb5677798 <col:55, col:69> 'int' '+'
|   | | |-ImplicitCastExpr 0x23fb5677780 <col:55, col:59> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x23fb5677728 <col:55, col:59> 'int' lvalue ->tm_year 0x23fb5655c08
|   | | |   `-ImplicitCastExpr 0x23fb5677710 <col:55> 'struct tm *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x23fb56776f0 <col:55> 'struct tm *' lvalue Var 0x23fb567b1f8 'ts' 'struct tm *'
|   | | `-IntegerLiteral 0x23fb5677758 <col:69> 'int' 1900
|   | |-BinaryOperator 0x23fb5674858 <line:204:18, col:31> 'int' '+'
|   | | |-ImplicitCastExpr 0x23fb5674840 <col:18, col:22> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x23fb56747e8 <col:18, col:22> 'int' lvalue ->tm_mon 0x23fb5655b98
|   | | |   `-ImplicitCastExpr 0x23fb56747d0 <col:18> 'struct tm *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x23fb56747b0 <col:18> 'struct tm *' lvalue Var 0x23fb567b1f8 'ts' 'struct tm *'
|   | | `-IntegerLiteral 0x23fb5674818 <col:31> 'int' 1
|   | |-ImplicitCastExpr 0x23fb5674ae0 <col:34, col:38> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x23fb56748b0 <col:34, col:38> 'int' lvalue ->tm_mday 0x23fb5655b28
|   | |   `-ImplicitCastExpr 0x23fb5674898 <col:34> 'struct tm *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x23fb5674878 <col:34> 'struct tm *' lvalue Var 0x23fb567b1f8 'ts' 'struct tm *'
|   | |-ImplicitCastExpr 0x23fb5674af8 <col:47, col:51> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x23fb5674918 <col:47, col:51> 'int' lvalue ->tm_hour 0x23fb5655ab8
|   | |   `-ImplicitCastExpr 0x23fb5674900 <col:47> 'struct tm *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x23fb56748e0 <col:47> 'struct tm *' lvalue Var 0x23fb567b1f8 'ts' 'struct tm *'
|   | |-ImplicitCastExpr 0x23fb5674b10 <col:60, col:64> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x23fb5674980 <col:60, col:64> 'int' lvalue ->tm_min 0x23fb5655a48
|   | |   `-ImplicitCastExpr 0x23fb5674968 <col:60> 'struct tm *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x23fb5674948 <col:60> 'struct tm *' lvalue Var 0x23fb567b1f8 'ts' 'struct tm *'
|   | `-ImplicitCastExpr 0x23fb5674b28 <line:205:18, col:22> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x23fb56749e8 <col:18, col:22> 'int' lvalue ->tm_sec 0x23fb56559d8
|   |     `-ImplicitCastExpr 0x23fb56749d0 <col:18> 'struct tm *' <LValueToRValue>
|   |       `-DeclRefExpr 0x23fb56749b0 <col:18> 'struct tm *' lvalue Var 0x23fb567b1f8 'ts' 'struct tm *'
|   |-LabelStmt 0x23fb5674da8 <line:212:2, col:5> 'err'
|   | `-NullStmt 0x23fb5674da0 <col:5>
|   `-ReturnStmt 0x23fb5674e60 <line:215:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|     `-ImplicitCastExpr 0x23fb5674e48 <col:17, col:27> 'int *' <NullToPointer>
|       `-ParenExpr 0x23fb5674e28 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x23fb5674e00 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x23fb5674dc0 <col:26> 'int' 0
|-VarDecl 0x23fb5674f48 prev 0x23fb56746d0 <.//openssl//file_jk/before\crypto\asn1\a_gentm.c:218:1, line:221:1> line:218:13 used _asn1_mon 'const char *[12]' cinit
| `-InitListExpr 0x23fb5675218 <col:29, line:221:1> 'const char *[12]'
|   |-ImplicitCastExpr 0x23fb56752d0 <line:219:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x23fb56752b8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x23fb5674fe8 <col:5> 'char [4]' lvalue "Jan"
|   |-ImplicitCastExpr 0x23fb5675300 <col:12> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x23fb56752e8 <col:12> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x23fb5675008 <col:12> 'char [4]' lvalue "Feb"
|   |-ImplicitCastExpr 0x23fb5675330 <col:19> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x23fb5675318 <col:19> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x23fb5675028 <col:19> 'char [4]' lvalue "Mar"
|   |-ImplicitCastExpr 0x23fb5675360 <col:26> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x23fb5675348 <col:26> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x23fb5675048 <col:26> 'char [4]' lvalue "Apr"
|   |-ImplicitCastExpr 0x23fb5675390 <col:33> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x23fb5675378 <col:33> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x23fb5675068 <col:33> 'char [4]' lvalue "May"
|   |-ImplicitCastExpr 0x23fb56753c0 <col:40> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x23fb56753a8 <col:40> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x23fb5675088 <col:40> 'char [4]' lvalue "Jun"
|   |-ImplicitCastExpr 0x23fb56753f0 <line:220:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x23fb56753d8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x23fb56750a8 <col:5> 'char [4]' lvalue "Jul"
|   |-ImplicitCastExpr 0x23fb5675420 <col:12> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x23fb5675408 <col:12> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x23fb56750c8 <col:12> 'char [4]' lvalue "Aug"
|   |-ImplicitCastExpr 0x23fb5675450 <col:19> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x23fb5675438 <col:19> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x23fb56750e8 <col:19> 'char [4]' lvalue "Sep"
|   |-ImplicitCastExpr 0x23fb5675480 <col:26> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x23fb5675468 <col:26> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x23fb5675108 <col:26> 'char [4]' lvalue "Oct"
|   |-ImplicitCastExpr 0x23fb56754b0 <col:33> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x23fb5675498 <col:33> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x23fb5675128 <col:33> 'char [4]' lvalue "Nov"
|   `-ImplicitCastExpr 0x23fb56754e0 <col:40> 'const char *' <NoOp>
|     `-ImplicitCastExpr 0x23fb56754c8 <col:40> 'char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x23fb5675148 <col:40> 'char [4]' lvalue "Dec"
`-FunctionDecl 0x23fb5675670 <line:223:1, line:273:1> line:223:5 invalid ASN1_GENERALIZEDTIME_print 'int (int *, const int *)'
  |-ParmVarDecl 0x23fb5675510 <col:32, col:37> col:37 invalid bp 'int *'
  |-ParmVarDecl 0x23fb5675590 <col:41, col:69> col:69 invalid tm 'const int *'
  `-CompoundStmt 0x23fb5685170 <line:224:1, line:273:1>
    |-DeclStmt 0x23fb567c898 <line:225:5, col:12>
    | `-VarDecl 0x23fb567c830 <col:5, col:11> col:11 used v 'char *'
    |-DeclStmt 0x23fb567c958 <line:226:5, col:16>
    | `-VarDecl 0x23fb567c8c8 <col:5, col:15> col:9 used gmt 'int' cinit
    |   `-IntegerLiteral 0x23fb567c930 <col:15> 'int' 0
    |-DeclStmt 0x23fb567c9f0 <line:227:5, col:10>
    | `-VarDecl 0x23fb567c988 <col:5, col:9> col:9 used i 'int'
    |-DeclStmt 0x23fb567ce30 <line:228:5, col:49>
    | |-VarDecl 0x23fb567ca20 <col:5, col:13> col:9 used y 'int' cinit
    | | `-IntegerLiteral 0x23fb567ca88 <col:13> 'int' 0
    | |-VarDecl 0x23fb567cac8 <col:5, col:20> col:16 used M 'int' cinit
    | | `-IntegerLiteral 0x23fb567cb30 <col:20> 'int' 0
    | |-VarDecl 0x23fb567cb70 <col:5, col:27> col:23 used d 'int' cinit
    | | `-IntegerLiteral 0x23fb567cbd8 <col:27> 'int' 0
    | |-VarDecl 0x23fb567cc18 <col:5, col:34> col:30 used h 'int' cinit
    | | `-IntegerLiteral 0x23fb567cc80 <col:34> 'int' 0
    | |-VarDecl 0x23fb567ccc0 <col:5, col:41> col:37 used m 'int' cinit
    | | `-IntegerLiteral 0x23fb567cd28 <col:41> 'int' 0
    | `-VarDecl 0x23fb567cd68 <col:5, col:48> col:44 used s 'int' cinit
    |   `-IntegerLiteral 0x23fb567cdd0 <col:48> 'int' 0
    |-DeclStmt 0x23fb567cf68 <line:229:5, col:19>
    | `-VarDecl 0x23fb567ce60 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\asn1\a_gentm.c:229:11 used f 'char *' cinit
    |   `-ImplicitCastExpr 0x23fb567cf50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
    |     `-ParenExpr 0x23fb567cf30 <col:17, col:27> 'void *'
    |       `-CStyleCastExpr 0x23fb567cf08 <col:18, col:26> 'void *' <NullToPointer>
    |         `-IntegerLiteral 0x23fb567cec8 <col:26> 'int' 0
    |-DeclStmt 0x23fb567d028 <.//openssl//file_jk/before\crypto\asn1\a_gentm.c:230:5, col:18>
    | `-VarDecl 0x23fb567cf98 <col:5, col:17> col:9 used f_len 'int' cinit
    |   `-IntegerLiteral 0x23fb567d000 <col:17> 'int' 0
    |-IfStmt 0x23fb567d198 <line:235:5, line:236:14>
    | |-BinaryOperator 0x23fb567d110 <line:235:9, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x23fb567d0f8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x23fb567d0b0 <col:9> 'int' lvalue Var 0x23fb567c988 'i' 'int'
    | | `-IntegerLiteral 0x23fb567d0d0 <col:13> 'int' 12
    | `-GotoStmt 0x23fb567d180 <line:236:9, col:14> 'err' 0x23fb567d130
    |-IfStmt 0x23fb567d370 <line:237:5, line:238:15>
    | |-BinaryOperator 0x23fb567d2d0 <line:237:9, col:21> 'int' '=='
    | | |-ImplicitCastExpr 0x23fb567d2b8 <col:9, col:16> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x23fb567d2a0 <col:9, col:16> 'char' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x23fb567d268 <col:9, col:16> 'char' lvalue
    | | |     |-ImplicitCastExpr 0x23fb567d250 <col:9> 'char *' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x23fb567d1b0 <col:9> 'char *' lvalue Var 0x23fb567c830 'v' 'char *'
    | | |     `-BinaryOperator 0x23fb567d230 <col:11, col:15> 'int' '-'
    | | |       |-ImplicitCastExpr 0x23fb567d218 <col:11> 'int' <LValueToRValue>
    | | |       | `-DeclRefExpr 0x23fb567d1d0 <col:11> 'int' lvalue Var 0x23fb567c988 'i' 'int'
    | | |       `-IntegerLiteral 0x23fb567d1f0 <col:15> 'int' 1
    | | `-CharacterLiteral 0x23fb567d288 <col:21> 'int' 90
    | `-BinaryOperator 0x23fb567d350 <line:238:9, col:15> 'int' '='
    |   |-DeclRefExpr 0x23fb567d2f0 <col:9> 'int' lvalue Var 0x23fb567c8c8 'gmt' 'int'
    |   `-IntegerLiteral 0x23fb567d328 <col:15> 'int' 1
    |-ForStmt 0x23fb567d728 <line:239:5, line:241:18>
    | |-BinaryOperator 0x23fb567d3d0 <line:239:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x23fb567d388 <col:10> 'int' lvalue Var 0x23fb567c988 'i' 'int'
    | | `-IntegerLiteral 0x23fb567d3a8 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x23fb567d450 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x23fb567d438 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x23fb567d3f0 <col:17> 'int' lvalue Var 0x23fb567c988 'i' 'int'
    | | `-IntegerLiteral 0x23fb567d410 <col:21> 'int' 12
    | |-UnaryOperator 0x23fb567d490 <col:25, col:26> 'int' postfix '++'
    | | `-DeclRefExpr 0x23fb567d470 <col:25> 'int' lvalue Var 0x23fb567c988 'i' 'int'
    | `-IfStmt 0x23fb567d710 <line:240:9, line:241:18>
    |   |-BinaryOperator 0x23fb567d6d8 <line:240:13, col:40> 'int' '||'
    |   | |-ParenExpr 0x23fb567d5a0 <col:13, col:24> 'int'
    |   | | `-BinaryOperator 0x23fb567d580 <col:14, col:21> 'int' '>'
    |   | |   |-ImplicitCastExpr 0x23fb567d568 <col:14, col:17> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x23fb567d550 <col:14, col:17> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x23fb567d518 <col:14, col:17> 'char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x23fb567d4e8 <col:14> 'char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x23fb567d4a8 <col:14> 'char *' lvalue Var 0x23fb567c830 'v' 'char *'
    |   | |   |     `-ImplicitCastExpr 0x23fb567d500 <col:16> 'int' <LValueToRValue>
    |   | |   |       `-DeclRefExpr 0x23fb567d4c8 <col:16> 'int' lvalue Var 0x23fb567c988 'i' 'int'
    |   | |   `-CharacterLiteral 0x23fb567d538 <col:21> 'int' 57
    |   | `-ParenExpr 0x23fb567d6b8 <col:29, col:40> 'int'
    |   |   `-BinaryOperator 0x23fb567d698 <col:30, col:37> 'int' '<'
    |   |     |-ImplicitCastExpr 0x23fb567d680 <col:30, col:33> 'int' <IntegralCast>
    |   |     | `-ImplicitCastExpr 0x23fb567d668 <col:30, col:33> 'char' <LValueToRValue>
    |   |     |   `-ArraySubscriptExpr 0x23fb567d630 <col:30, col:33> 'char' lvalue
    |   |     |     |-ImplicitCastExpr 0x23fb567d600 <col:30> 'char *' <LValueToRValue>
    |   |     |     | `-DeclRefExpr 0x23fb567d5c0 <col:30> 'char *' lvalue Var 0x23fb567c830 'v' 'char *'
    |   |     |     `-ImplicitCastExpr 0x23fb567d618 <col:32> 'int' <LValueToRValue>
    |   |     |       `-DeclRefExpr 0x23fb567d5e0 <col:32> 'int' lvalue Var 0x23fb567c988 'i' 'int'
    |   |     `-CharacterLiteral 0x23fb567d650 <col:37> 'int' 48
    |   `-GotoStmt 0x23fb567d6f8 <line:241:13, col:18> 'err' 0x23fb567d130
    |-BinaryOperator 0x23fb567ed10 <line:242:5, line:243:42> 'int' '='
    | |-DeclRefExpr 0x23fb567d760 <line:242:5> 'int' lvalue Var 0x23fb567ca20 'y' 'int'
    | `-BinaryOperator 0x23fb567ecf0 <col:9, line:243:42> 'int' '+'
    |   |-BinaryOperator 0x23fb567ebc8 <line:242:9, line:243:26> 'int' '+'
    |   | |-BinaryOperator 0x23fb567ea58 <line:242:9, col:46> 'int' '+'
    |   | | |-BinaryOperator 0x23fb567e8e8 <col:9, col:24> 'int' '*'
    |   | | | |-ParenExpr 0x23fb567e8a0 <col:9, col:20> 'int'
    |   | | | | `-BinaryOperator 0x23fb567e880 <col:10, col:17> 'int' '-'
    |   | | | |   |-ImplicitCastExpr 0x23fb567e868 <col:10, col:13> 'int' <IntegralCast>
    |   | | | |   | `-ImplicitCastExpr 0x23fb567e850 <col:10, col:13> 'char' <LValueToRValue>
    |   | | | |   |   `-ArraySubscriptExpr 0x23fb567d7f8 <col:10, col:13> 'char' lvalue
    |   | | | |   |     |-ImplicitCastExpr 0x23fb567d7e0 <col:10> 'char *' <LValueToRValue>
    |   | | | |   |     | `-DeclRefExpr 0x23fb567d798 <col:10> 'char *' lvalue Var 0x23fb567c830 'v' 'char *'
    |   | | | |   |     `-IntegerLiteral 0x23fb567d7b8 <col:12> 'int' 0
    |   | | | |   `-CharacterLiteral 0x23fb567d818 <col:17> 'int' 48
    |   | | | `-IntegerLiteral 0x23fb567e8c0 <col:24> 'int' 1000
    |   | | `-BinaryOperator 0x23fb567ea38 <col:31, col:46> 'int' '*'
    |   | |   |-ParenExpr 0x23fb567e9f0 <col:31, col:42> 'int'
    |   | |   | `-BinaryOperator 0x23fb567e9d0 <col:32, col:39> 'int' '-'
    |   | |   |   |-ImplicitCastExpr 0x23fb567e9b8 <col:32, col:35> 'int' <IntegralCast>
    |   | |   |   | `-ImplicitCastExpr 0x23fb567e9a0 <col:32, col:35> 'char' <LValueToRValue>
    |   | |   |   |   `-ArraySubscriptExpr 0x23fb567e968 <col:32, col:35> 'char' lvalue
    |   | |   |   |     |-ImplicitCastExpr 0x23fb567e950 <col:32> 'char *' <LValueToRValue>
    |   | |   |   |     | `-DeclRefExpr 0x23fb567e908 <col:32> 'char *' lvalue Var 0x23fb567c830 'v' 'char *'
    |   | |   |   |     `-IntegerLiteral 0x23fb567e928 <col:34> 'int' 1
    |   | |   |   `-CharacterLiteral 0x23fb567e988 <col:39> 'int' 48
    |   | |   `-IntegerLiteral 0x23fb567ea10 <col:46> 'int' 100
    |   | `-BinaryOperator 0x23fb567eba8 <line:243:11, col:26> 'int' '*'
    |   |   |-ParenExpr 0x23fb567eb60 <col:11, col:22> 'int'
    |   |   | `-BinaryOperator 0x23fb567eb40 <col:12, col:19> 'int' '-'
    |   |   |   |-ImplicitCastExpr 0x23fb567eb28 <col:12, col:15> 'int' <IntegralCast>
    |   |   |   | `-ImplicitCastExpr 0x23fb567eb10 <col:12, col:15> 'char' <LValueToRValue>
    |   |   |   |   `-ArraySubscriptExpr 0x23fb567ead8 <col:12, col:15> 'char' lvalue
    |   |   |   |     |-ImplicitCastExpr 0x23fb567eac0 <col:12> 'char *' <LValueToRValue>
    |   |   |   |     | `-DeclRefExpr 0x23fb567ea78 <col:12> 'char *' lvalue Var 0x23fb567c830 'v' 'char *'
    |   |   |   |     `-IntegerLiteral 0x23fb567ea98 <col:14> 'int' 2
    |   |   |   `-CharacterLiteral 0x23fb567eaf8 <col:19> 'int' 48
    |   |   `-IntegerLiteral 0x23fb567eb80 <col:26> 'int' 10
    |   `-ParenExpr 0x23fb567ecd0 <col:31, col:42> 'int'
    |     `-BinaryOperator 0x23fb567ecb0 <col:32, col:39> 'int' '-'
    |       |-ImplicitCastExpr 0x23fb567ec98 <col:32, col:35> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x23fb567ec80 <col:32, col:35> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x23fb567ec48 <col:32, col:35> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x23fb567ec30 <col:32> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x23fb567ebe8 <col:32> 'char *' lvalue Var 0x23fb567c830 'v' 'char *'
    |       |     `-IntegerLiteral 0x23fb567ec08 <col:34> 'int' 3
    |       `-CharacterLiteral 0x23fb567ec68 <col:39> 'int' 48
    |-BinaryOperator 0x23fb567efe0 <line:244:5, col:40> 'int' '='
    | |-DeclRefExpr 0x23fb567ed30 <col:5> 'int' lvalue Var 0x23fb567cac8 'M' 'int'
    | `-BinaryOperator 0x23fb567efc0 <col:9, col:40> 'int' '+'
    |   |-BinaryOperator 0x23fb567ee98 <col:9, col:24> 'int' '*'
    |   | |-ParenExpr 0x23fb567ee50 <col:9, col:20> 'int'
    |   | | `-BinaryOperator 0x23fb567ee30 <col:10, col:17> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x23fb567ee18 <col:10, col:13> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x23fb567ee00 <col:10, col:13> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x23fb567edc8 <col:10, col:13> 'char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x23fb567edb0 <col:10> 'char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x23fb567ed68 <col:10> 'char *' lvalue Var 0x23fb567c830 'v' 'char *'
    |   | |   |     `-IntegerLiteral 0x23fb567ed88 <col:12> 'int' 4
    |   | |   `-CharacterLiteral 0x23fb567ede8 <col:17> 'int' 48
    |   | `-IntegerLiteral 0x23fb567ee70 <col:24> 'int' 10
    |   `-ParenExpr 0x23fb567efa0 <col:29, col:40> 'int'
    |     `-BinaryOperator 0x23fb567ef80 <col:30, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x23fb567ef68 <col:30, col:33> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x23fb567ef50 <col:30, col:33> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x23fb567ef18 <col:30, col:33> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x23fb567ef00 <col:30> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x23fb567eeb8 <col:30> 'char *' lvalue Var 0x23fb567c830 'v' 'char *'
    |       |     `-IntegerLiteral 0x23fb567eed8 <col:32> 'int' 5
    |       `-CharacterLiteral 0x23fb567ef38 <col:37> 'int' 48
    |-IfStmt 0x23fb567f178 <line:245:5, line:246:14>
    | |-BinaryOperator 0x23fb567f140 <line:245:9, col:27> 'int' '||'
    | | |-ParenExpr 0x23fb567f080 <col:9, col:16> 'int'
    | | | `-BinaryOperator 0x23fb567f060 <col:10, col:14> 'int' '>'
    | | |   |-ImplicitCastExpr 0x23fb567f048 <col:10> 'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x23fb567f000 <col:10> 'int' lvalue Var 0x23fb567cac8 'M' 'int'
    | | |   `-IntegerLiteral 0x23fb567f020 <col:14> 'int' 12
    | | `-ParenExpr 0x23fb567f120 <col:21, col:27> 'int'
    | |   `-BinaryOperator 0x23fb567f100 <col:22, col:26> 'int' '<'
    | |     |-ImplicitCastExpr 0x23fb567f0e8 <col:22> 'int' <LValueToRValue>
    | |     | `-DeclRefExpr 0x23fb567f0a0 <col:22> 'int' lvalue Var 0x23fb567cac8 'M' 'int'
    | |     `-IntegerLiteral 0x23fb567f0c0 <col:26> 'int' 1
    | `-GotoStmt 0x23fb567f160 <line:246:9, col:14> 'err' 0x23fb567d130
    |-BinaryOperator 0x23fb567f440 <line:247:5, col:40> 'int' '='
    | |-DeclRefExpr 0x23fb567f190 <col:5> 'int' lvalue Var 0x23fb567cb70 'd' 'int'
    | `-BinaryOperator 0x23fb567f420 <col:9, col:40> 'int' '+'
    |   |-BinaryOperator 0x23fb567f2f8 <col:9, col:24> 'int' '*'
    |   | |-ParenExpr 0x23fb567f2b0 <col:9, col:20> 'int'
    |   | | `-BinaryOperator 0x23fb567f290 <col:10, col:17> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x23fb567f278 <col:10, col:13> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x23fb567f260 <col:10, col:13> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x23fb567f228 <col:10, col:13> 'char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x23fb567f210 <col:10> 'char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x23fb567f1c8 <col:10> 'char *' lvalue Var 0x23fb567c830 'v' 'char *'
    |   | |   |     `-IntegerLiteral 0x23fb567f1e8 <col:12> 'int' 6
    |   | |   `-CharacterLiteral 0x23fb567f248 <col:17> 'int' 48
    |   | `-IntegerLiteral 0x23fb567f2d0 <col:24> 'int' 10
    |   `-ParenExpr 0x23fb567f400 <col:29, col:40> 'int'
    |     `-BinaryOperator 0x23fb567f3e0 <col:30, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x23fb567f3c8 <col:30, col:33> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x23fb567f3b0 <col:30, col:33> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x23fb567f378 <col:30, col:33> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x23fb567f360 <col:30> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x23fb567f318 <col:30> 'char *' lvalue Var 0x23fb567c830 'v' 'char *'
    |       |     `-IntegerLiteral 0x23fb567f338 <col:32> 'int' 7
    |       `-CharacterLiteral 0x23fb567f398 <col:37> 'int' 48
    |-BinaryOperator 0x23fb567f710 <line:248:5, col:40> 'int' '='
    | |-DeclRefExpr 0x23fb567f460 <col:5> 'int' lvalue Var 0x23fb567cc18 'h' 'int'
    | `-BinaryOperator 0x23fb567f6f0 <col:9, col:40> 'int' '+'
    |   |-BinaryOperator 0x23fb567f5c8 <col:9, col:24> 'int' '*'
    |   | |-ParenExpr 0x23fb567f580 <col:9, col:20> 'int'
    |   | | `-BinaryOperator 0x23fb567f560 <col:10, col:17> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x23fb567f548 <col:10, col:13> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x23fb567f530 <col:10, col:13> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x23fb567f4f8 <col:10, col:13> 'char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x23fb567f4e0 <col:10> 'char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x23fb567f498 <col:10> 'char *' lvalue Var 0x23fb567c830 'v' 'char *'
    |   | |   |     `-IntegerLiteral 0x23fb567f4b8 <col:12> 'int' 8
    |   | |   `-CharacterLiteral 0x23fb567f518 <col:17> 'int' 48
    |   | `-IntegerLiteral 0x23fb567f5a0 <col:24> 'int' 10
    |   `-ParenExpr 0x23fb567f6d0 <col:29, col:40> 'int'
    |     `-BinaryOperator 0x23fb567f6b0 <col:30, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x23fb567f698 <col:30, col:33> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x23fb567f680 <col:30, col:33> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x23fb567f648 <col:30, col:33> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x23fb567f630 <col:30> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x23fb567f5e8 <col:30> 'char *' lvalue Var 0x23fb567c830 'v' 'char *'
    |       |     `-IntegerLiteral 0x23fb567f608 <col:32> 'int' 9
    |       `-CharacterLiteral 0x23fb567f668 <col:37> 'int' 48
    |-BinaryOperator 0x23fb5682a20 <line:249:5, col:42> 'int' '='
    | |-DeclRefExpr 0x23fb567f730 <col:5> 'int' lvalue Var 0x23fb567ccc0 'm' 'int'
    | `-BinaryOperator 0x23fb5682a00 <col:9, col:42> 'int' '+'
    |   |-BinaryOperator 0x23fb56828d8 <col:9, col:25> 'int' '*'
    |   | |-ParenExpr 0x23fb5682890 <col:9, col:21> 'int'
    |   | | `-BinaryOperator 0x23fb567f830 <col:10, col:18> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x23fb567f818 <col:10, col:14> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x23fb567f800 <col:10, col:14> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x23fb567f7c8 <col:10, col:14> 'char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x23fb567f7b0 <col:10> 'char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x23fb567f768 <col:10> 'char *' lvalue Var 0x23fb567c830 'v' 'char *'
    |   | |   |     `-IntegerLiteral 0x23fb567f788 <col:12> 'int' 10
    |   | |   `-CharacterLiteral 0x23fb567f7e8 <col:18> 'int' 48
    |   | `-IntegerLiteral 0x23fb56828b0 <col:25> 'int' 10
    |   `-ParenExpr 0x23fb56829e0 <col:30, col:42> 'int'
    |     `-BinaryOperator 0x23fb56829c0 <col:31, col:39> 'int' '-'
    |       |-ImplicitCastExpr 0x23fb56829a8 <col:31, col:35> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x23fb5682990 <col:31, col:35> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x23fb5682958 <col:31, col:35> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x23fb5682940 <col:31> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x23fb56828f8 <col:31> 'char *' lvalue Var 0x23fb567c830 'v' 'char *'
    |       |     `-IntegerLiteral 0x23fb5682918 <col:33> 'int' 11
    |       `-CharacterLiteral 0x23fb5682978 <col:39> 'int' 48
    |-IfStmt 0x23fb5683878 <line:250:5, line:262:5>
    | |-OpaqueValueExpr 0x23fb5683860 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x23fb5683840 <line:252:43, line:262:5>
    |   |-BinaryOperator 0x23fb5683138 <line:253:9, col:46> 'int' '='
    |   | |-DeclRefExpr 0x23fb5682e88 <col:9> 'int' lvalue Var 0x23fb567cd68 's' 'int'
    |   | `-BinaryOperator 0x23fb5683118 <col:13, col:46> 'int' '+'
    |   |   |-BinaryOperator 0x23fb5682ff0 <col:13, col:29> 'int' '*'
    |   |   | |-ParenExpr 0x23fb5682fa8 <col:13, col:25> 'int'
    |   |   | | `-BinaryOperator 0x23fb5682f88 <col:14, col:22> 'int' '-'
    |   |   | |   |-ImplicitCastExpr 0x23fb5682f70 <col:14, col:18> 'int' <IntegralCast>
    |   |   | |   | `-ImplicitCastExpr 0x23fb5682f58 <col:14, col:18> 'char' <LValueToRValue>
    |   |   | |   |   `-ArraySubscriptExpr 0x23fb5682f20 <col:14, col:18> 'char' lvalue
    |   |   | |   |     |-ImplicitCastExpr 0x23fb5682f08 <col:14> 'char *' <LValueToRValue>
    |   |   | |   |     | `-DeclRefExpr 0x23fb5682ec0 <col:14> 'char *' lvalue Var 0x23fb567c830 'v' 'char *'
    |   |   | |   |     `-IntegerLiteral 0x23fb5682ee0 <col:16> 'int' 12
    |   |   | |   `-CharacterLiteral 0x23fb5682f40 <col:22> 'int' 48
    |   |   | `-IntegerLiteral 0x23fb5682fc8 <col:29> 'int' 10
    |   |   `-ParenExpr 0x23fb56830f8 <col:34, col:46> 'int'
    |   |     `-BinaryOperator 0x23fb56830d8 <col:35, col:43> 'int' '-'
    |   |       |-ImplicitCastExpr 0x23fb56830c0 <col:35, col:39> 'int' <IntegralCast>
    |   |       | `-ImplicitCastExpr 0x23fb56830a8 <col:35, col:39> 'char' <LValueToRValue>
    |   |       |   `-ArraySubscriptExpr 0x23fb5683070 <col:35, col:39> 'char' lvalue
    |   |       |     |-ImplicitCastExpr 0x23fb5683058 <col:35> 'char *' <LValueToRValue>
    |   |       |     | `-DeclRefExpr 0x23fb5683010 <col:35> 'char *' lvalue Var 0x23fb567c830 'v' 'char *'
    |   |       |     `-IntegerLiteral 0x23fb5683030 <col:37> 'int' 13
    |   |       `-CharacterLiteral 0x23fb5683090 <col:43> 'int' 48
    |   `-IfStmt 0x23fb5683828 <line:255:9, line:261:9>
    |     |-OpaqueValueExpr 0x23fb5683810 <<invalid sloc>> '_Bool'
    |     `-CompoundStmt 0x23fb56837e0 <line:255:47, line:261:9>
    |       |-DeclStmt 0x23fb56832e8 <line:256:13, col:31>
    |       | `-VarDecl 0x23fb5683280 <col:13, col:17> col:17 used l 'int'
    |       |-BinaryOperator 0x23fb56833d0 <line:257:13, col:22> 'char *' '='
    |       | |-DeclRefExpr 0x23fb5683300 <col:13> 'char *' lvalue Var 0x23fb567ce60 'f' 'char *'
    |       | `-UnaryOperator 0x23fb56833b8 <col:17, col:22> 'char *' prefix '&' cannot overflow
    |       |   `-ArraySubscriptExpr 0x23fb5683398 <col:18, col:22> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x23fb5683380 <col:18> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x23fb5683338 <col:18> 'char *' lvalue Var 0x23fb567c830 'v' 'char *'
    |       |     `-IntegerLiteral 0x23fb5683358 <col:20> 'int' 14
    |       |-BinaryOperator 0x23fb5683450 <line:258:13, col:21> 'int' '='
    |       | |-DeclRefExpr 0x23fb56833f0 <col:13> 'int' lvalue Var 0x23fb567cf98 'f_len' 'int'
    |       | `-IntegerLiteral 0x23fb5683428 <col:21> 'int' 1
    |       `-WhileStmt 0x23fb56837c8 <line:259:13, line:260:19>
    |         |-BinaryOperator 0x23fb5683770 <line:259:20, col:69> 'int' '&&'
    |         | |-BinaryOperator 0x23fb5683658 <col:20, col:50> 'int' '&&'
    |         | | |-BinaryOperator 0x23fb5683540 <col:20, col:33> 'int' '<'
    |         | | | |-BinaryOperator 0x23fb56834d0 <col:20, col:25> 'int' '+'
    |         | | | | |-IntegerLiteral 0x23fb5683470 <col:20> 'int' 14
    |         | | | | `-ImplicitCastExpr 0x23fb56834b8 <col:25> 'int' <LValueToRValue>
    |         | | | |   `-DeclRefExpr 0x23fb5683498 <col:25> 'int' lvalue Var 0x23fb567cf98 'f_len' 'int'
    |         | | | `-ImplicitCastExpr 0x23fb5683528 <col:33> 'int' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x23fb56834f0 <col:33> 'int' lvalue Var 0x23fb5683280 'l' 'int'
    |         | | `-BinaryOperator 0x23fb5683638 <col:38, col:50> 'int' '>='
    |         | |   |-ImplicitCastExpr 0x23fb5683620 <col:38, col:45> 'int' <IntegralCast>
    |         | |   | `-ImplicitCastExpr 0x23fb5683608 <col:38, col:45> 'char' <LValueToRValue>
    |         | |   |   `-ArraySubscriptExpr 0x23fb56835d0 <col:38, col:45> 'char' lvalue
    |         | |   |     |-ImplicitCastExpr 0x23fb56835a0 <col:38> 'char *' <LValueToRValue>
    |         | |   |     | `-DeclRefExpr 0x23fb5683560 <col:38> 'char *' lvalue Var 0x23fb567ce60 'f' 'char *'
    |         | |   |     `-ImplicitCastExpr 0x23fb56835b8 <col:40> 'int' <LValueToRValue>
    |         | |   |       `-DeclRefExpr 0x23fb5683580 <col:40> 'int' lvalue Var 0x23fb567cf98 'f_len' 'int'
    |         | |   `-CharacterLiteral 0x23fb56835f0 <col:50> 'int' 48
    |         | `-BinaryOperator 0x23fb5683750 <col:57, col:69> 'int' '<='
    |         |   |-ImplicitCastExpr 0x23fb5683738 <col:57, col:64> 'int' <IntegralCast>
    |         |   | `-ImplicitCastExpr 0x23fb5683720 <col:57, col:64> 'char' <LValueToRValue>
    |         |   |   `-ArraySubscriptExpr 0x23fb56836e8 <col:57, col:64> 'char' lvalue
    |         |   |     |-ImplicitCastExpr 0x23fb56836b8 <col:57> 'char *' <LValueToRValue>
    |         |   |     | `-DeclRefExpr 0x23fb5683678 <col:57> 'char *' lvalue Var 0x23fb567ce60 'f' 'char *'
    |         |   |     `-ImplicitCastExpr 0x23fb56836d0 <col:59> 'int' <LValueToRValue>
    |         |   |       `-DeclRefExpr 0x23fb5683698 <col:59> 'int' lvalue Var 0x23fb567cf98 'f_len' 'int'
    |         |   `-CharacterLiteral 0x23fb5683708 <col:69> 'int' 57
    |         `-UnaryOperator 0x23fb56837b0 <line:260:17, col:19> 'int' prefix '++'
    |           `-DeclRefExpr 0x23fb5683790 <col:19> 'int' lvalue Var 0x23fb567cf98 'f_len' 'int'
    |-IfStmt 0x23fb5684f30 <line:264:5, line:269:18> has_else
    | |-OpaqueValueExpr 0x23fb5684f18 <<invalid sloc>> '_Bool'
    | |-ReturnStmt 0x23fb5684eb0 <line:267:9, col:18>
    | | `-ParenExpr 0x23fb5684e90 <col:16, col:18> 'int'
    | |   `-IntegerLiteral 0x23fb5684e68 <col:17> 'int' 0
    | `-ReturnStmt 0x23fb5684f08 <line:269:9, col:18>
    |   `-ParenExpr 0x23fb5684ee8 <col:16, col:18> 'int'
    |     `-IntegerLiteral 0x23fb5684ec0 <col:17> 'int' 1
    |-LabelStmt 0x23fb5685100 <line:270:2, col:5> 'err'
    | `-NullStmt 0x23fb56850f8 <col:5>
    `-ReturnStmt 0x23fb5685160 <line:272:5, col:14>
      `-ParenExpr 0x23fb5685140 <col:12, col:14> 'int'
        `-IntegerLiteral 0x23fb5685118 <col:13> 'int' 0
