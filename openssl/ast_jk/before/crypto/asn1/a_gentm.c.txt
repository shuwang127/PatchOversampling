TranslationUnitDecl 0x1d2d372de68 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1d2d372e700 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1d2d372e400 '__int128'
|-TypedefDecl 0x1d2d372e770 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1d2d372e420 'unsigned __int128'
|-TypedefDecl 0x1d2d372eaa8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1d2d372e860 'struct __NSConstantString_tag'
|   `-Record 0x1d2d372e7c8 '__NSConstantString_tag'
|-TypedefDecl 0x1d2d372eb18 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1d2d372e040 'unsigned long long'
|-TypedefDecl 0x1d2d372ebb0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1d2d372eb70 'char *'
|   `-BuiltinType 0x1d2d372df00 'char'
|-TypedefDecl 0x1d2d372ec20 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1d2d372eb70 'char *'
|   `-BuiltinType 0x1d2d372df00 'char'
|-TypedefDecl 0x1d2d372ece0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1d2d372e040 'unsigned long long'
|-TypedefDecl 0x1d2d372ed50 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1d2d372eb70 'char *'
|   `-BuiltinType 0x1d2d372df00 'char'
|-FunctionDecl 0x1d2d523e450 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1d2d523e4f0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1d2d523e560 <col:21> Implicit
|-FunctionDecl 0x1d2d523e5b8 prev 0x1d2d523e450 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1d2d523e2e0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1d2d523e6a8 <col:21> Inherited Implicit
|-TypedefDecl 0x1d2d523e6e8 prev 0x1d2d372eb18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1d2d372e040 'unsigned long long'
|-TypedefDecl 0x1d2d523e790 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1d2d523e760 'size_t' sugar
|   |-Typedef 0x1d2d523e6e8 'size_t'
|   `-BuiltinType 0x1d2d372e040 'unsigned long long'
|-TypedefDecl 0x1d2d523e800 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1d2d372dfa0 'long long'
|-TypedefDecl 0x1d2d523e870 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1d2d372dfa0 'long long'
|-TypedefDecl 0x1d2d523e8e0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1d2d372dfe0 'unsigned short'
|-TypedefDecl 0x1d2d523e950 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1d2d372dfe0 'unsigned short'
|-TypedefDecl 0x1d2d523e9c0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1d2d372dfe0 'unsigned short'
|-TypedefDecl 0x1d2d523ea30 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1d2d372df60 'int'
|-TypedefDecl 0x1d2d523eaa0 <line:567:1, col:19> col:19 referenced __time32_t 'long'
| `-BuiltinType 0x1d2d372df80 'long'
|-TypedefDecl 0x1d2d523eb10 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1d2d372dfa0 'long long'
|-TypedefDecl 0x1d2d523eba0 <line:580:1, col:20> col:20 referenced time_t '__time64_t':'long long'
| `-TypedefType 0x1d2d523eb70 '__time64_t' sugar
|   |-Typedef 0x1d2d523eb10 '__time64_t'
|   `-BuiltinType 0x1d2d372dfa0 'long long'
|-FunctionDecl 0x1d2d523ed18 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1d2d523ef38 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1d2d526f330 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1d2d523f078 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1d2d523f0f0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1d2d523f168 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1d2d523f1e8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1d2d526f0d0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1d2d526f410 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1d2d526f4d0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1d2d526f640 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1d2d526f5f0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1d2d526f590 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1d2d526f4b0 'struct threadlocaleinfostruct'
|       `-Record 0x1d2d527d1b0 'threadlocaleinfostruct'
|-TypedefDecl 0x1d2d526f750 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1d2d526f700 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1d2d526f6a0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1d2d526f570 'struct threadmbcinfostruct'
|       `-Record 0x1d2d526f4d0 'threadmbcinfostruct'
|-RecordDecl 0x1d2d526f7a8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1d2d526f860 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1d2d526f920 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1d2d526f9b0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1d2d526fa40 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1d2d526faf8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1d2d526faa0 'struct localeinfo_struct' sugar
|   `-RecordType 0x1d2d526f900 'struct localeinfo_struct'
|     `-Record 0x1d2d526f860 'localeinfo_struct'
|-TypedefDecl 0x1d2d526fbd0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1d2d526fb80 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1d2d526faa0 'struct localeinfo_struct' sugar
|     `-RecordType 0x1d2d526f900 'struct localeinfo_struct'
|       `-Record 0x1d2d526f860 'localeinfo_struct'
|-RecordDecl 0x1d2d526fc48 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1d2d526fd00 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1d2d526fd78 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1d2d526fe38 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1d2d526fed0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1d2d526ff40 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1d2d526fff8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1d2d526ffa0 'struct localerefcount' sugar
|   `-RecordType 0x1d2d526fce0 'struct localerefcount'
|     `-Record 0x1d2d526fc48 'localerefcount'
|-RecordDecl 0x1d2d527d1b0 prev 0x1d2d526f410 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1d2d527d230 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1d2d527d2a8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1d2d527d318 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1d2d527d388 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1d2d527d3f8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1d2d527d5b8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1d2d527d628 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1d2d527d698 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1d2d527d708 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1d2d527d778 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1d2d527d7e8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1d2d527d840 parent 0x1d2d372de68 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1d2d527d9d0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1d2d527da40 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1d2d527dab0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1d2d527db20 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1d2d527dbc0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1d2d527dc30 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1d2d527dd40 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1d2d527de78 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1d2d527df28 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1d2d527ded0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1d2d526f4b0 'struct threadlocaleinfostruct'
|     `-Record 0x1d2d527d1b0 'threadlocaleinfostruct'
|-RecordDecl 0x1d2d527dfc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x1d2d527e080 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1d2d527e0f8 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x1d2d5278160 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x1d2d52781d0 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x1d2d5278240 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x1d2d52782b0 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x1d2d5278320 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x1d2d5278390 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x1d2d5278400 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x1d2d52784b0 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x1d2d5278460 'struct _iobuf' sugar
|   `-RecordType 0x1d2d527e060 'struct _iobuf'
|     `-Record 0x1d2d527dfc0 '_iobuf'
|-FunctionDecl 0x1d2d52786e8 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x1d2d52787b8 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1d2d372dfa0 'long long'
|-FunctionDecl 0x1d2d5278998 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d2d5278820 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x1d2d5278c90 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1d2d5278a70 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x1d2d5278ae8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1d2d5279040 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x1d2d5278d70 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x1d2d5278df0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x1d2d5278e70 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x1d2d5284390 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1d2d5284220 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x1d2d52845c0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x1d2d5284480 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1d2d5284770 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d2d5284690 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x1d2d5284960 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1d2d5284c58 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1d2d5284a30 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x1d2d5284ab0 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x1d2d5284e10 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d2d5284d30 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x1d2d5284fc0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d2d5284ee0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x1d2d5285170 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d2d5285090 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1d2d5282308 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d2d5282228 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x1d2d5282498 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1d2d5282800 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x1d2d5282560 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1d2d5282658 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x1d2d5282bb8 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x1d2d52828e0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x1d2d5282960 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x1d2d52829d8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x1d2d5282d78 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d2d5282c98 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1d2d5283040 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1d2d5282e50 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x1d2d5282ed0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x1d2d5287250 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1d2d5287648 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x1d2d52876e8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1d2d5287750 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1d2d52877c8 prev 0x1d2d5287648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1d2d5287420 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x1d2d52874a0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x1d2d5287878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d5287cf0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x1d2d5287a20 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x1d2d5287aa0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x1d2d5287b20 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x1d2d5288010 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x1d2d52880b0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1d2d5288118 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1d2d5288190 <col:40> Implicit printf 2 3
|-FunctionDecl 0x1d2d52801e0 prev 0x1d2d5288010 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1d2d5287dd0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1d2d5287e50 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x1d2d52802d8 <col:40> Inherited printf 2 3
|-FunctionDecl 0x1d2d52804a0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1d2d5280320 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1d2d52803a0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1d2d52806f8 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1d2d5280580 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x1d2d52805f8 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x1d2d5280928 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1d2d52807d8 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x1d2d5280c20 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x1d2d5280a00 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1d2d5280a78 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x1d2d52810b8 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1d2d5281158 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1d2d5288260 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1d2d52882c8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1d2d5288330 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1d2d52883b8 prev 0x1d2d52810b8 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1d2d5280d00 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x1d2d5280d78 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d5280df0 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2d5280e68 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x1d2d52888c0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1d2d52884a8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x1d2d5288520 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d5288598 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d5288610 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2d5288688 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x1d2d5288d80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1d2d5288ab0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x1d2d5288b30 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x1d2d5288ba8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x1d2d5288e38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d5281298 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1d2d5288f80 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1d2d5289000 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x1d2d5289080 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x1d2d52890f8 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x1d2d5281640 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1d2d52816e0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1d2d5281748 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1d2d52817c0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1d2d5281828 prev 0x1d2d5281640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1d2d5281478 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x1d2d52814f8 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x1d2d5281a08 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1d2d52818d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d5281e48 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d5281b48 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x1d2d5281bc8 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x1d2d5281c60 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d2d5281f00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d5289270 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1d2d5282040 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1d2d52820c0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1d2d5289560 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d5289348 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1d2d52893c8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1d2d5289440 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52898c0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x1d2d5289640 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1d2d5289718 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x1d2d5289c78 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1d2d5289998 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x1d2d5289a18 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x1d2d5289a98 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x1d2d5289ed8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1d2d5289d58 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x1d2d528d2f8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1d2d5289fa8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1d2d528a028 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x1d2d528a0a8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x1d2d528d558 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1d2d528d3d8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1d2d528da18 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1d2d528dab8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1d2d528db20 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1d2d528db88 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1d2d528dbf0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1d2d528dc78 prev 0x1d2d528da18 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1d2d528d660 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x1d2d528d6d8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d528d750 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2d528d7c8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x1d2d528de40 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d2d528dd60 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1d2d528dfd0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1d2d528e158 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1d2d528b450 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x1d2d528e228 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x1d2d528b2a0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1d2d528b778 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1d2d528b630 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x1d2d528b820 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d528ba40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d2d528b960 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x1d2d528bc60 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1d2d528bb18 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1d2d528be10 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d2d528bd30 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x1d2d528c060 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1d2d528bee8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x1d2d528bf68 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x1d2d528c2a0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1d2d528c340 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1d2d528c3b0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x1d2d528c418 prev 0x1d2d528c2a0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x1d2d528c140 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x1d2d528c508 <col:40> Inherited printf 1 2
|-FunctionDecl 0x1d2d528c638 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1d2d528c558 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x1d2d528c888 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1d2d528c710 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x1d2d528c788 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1d2d528ca48 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1d2d528c968 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x1d2d528cc68 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1d2d528cb20 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x1d2d528ceb8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1d2d528cd40 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x1d2d528cdb8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1d2d528d078 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1d2d528cf98 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1d2d52da100 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1d2d528d150 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x1d2d528d1d0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1d2d52da2c0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1d2d52da1e0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1d2d52da550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1d2d52da470 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1d2d52da5f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1d2d52da7f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1d2d52da718 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1d2d52da980 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1d2d52dac28 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1d2d52dacc8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1d2d52dad38 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1d2d52dada0 prev 0x1d2d52dac28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1d2d52dab10 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1d2d52daf78 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1d2d52dae48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d52df390 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52df158 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1d2d52df1d0 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d2d52df440 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d52df668 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1d2d52df588 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x1d2d52df8b8 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52df740 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52df7b8 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52dfc78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x1d2d52dfa50 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x1d2d52dfad0 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x1d2d52dfd28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d52dff50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1d2d52dfe70 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x1d2d52db188 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1d2d52db040 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x1d2d52db370 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x1d2d52db7c0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x1d2d52db438 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1d2d52db4b8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x1d2d52db538 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x1d2d52db5b0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1d2d52dbc40 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x1d2d52db8b0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x1d2d52db928 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52db9a0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2d52dba20 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x1d2d52de070 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1d2d52dbd30 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1d2d52dbda8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2d52dbe28 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x1d2d52de238 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1d2d52de158 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x1d2d52de610 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1d2d52de6b0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1d2d52de718 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1d2d52de790 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1d2d52de7f8 prev 0x1d2d52de610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1d2d52de3d0 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x1d2d52de450 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x1d2d52de9d8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1d2d52de8a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d52dedc8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52deae8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x1d2d52deb68 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x1d2d52debe0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d2d52dee80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d52dc150 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x1d2d52defc8 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x1d2d52dc050 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x1d2d52dc448 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52dc230 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x1d2d52dc2b0 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52dc328 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52dc8d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1d2d52dc5f0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x1d2d52dc668 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52dc6e8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x1d2d52dc990 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d52dcf60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52dcbd0 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x1d2d52dcc48 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52dccc8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x1d2d52dcd40 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d2d52e0090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d52e03f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1d2d52e01d8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x1d2d52e0250 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2d52e02d0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x1d2d52e0788 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52e04d8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x1d2d52e0550 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52e05d0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52e0648 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52e09e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x1d2d52e0a88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d52e0d40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x1d2d52e0bd0 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x1d2d52dd060 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x1d2d52e0e18 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x1d2d52e0e90 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1d2d52dd2e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1d2d52dd200 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x1d2d52dd388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d52dd648 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1d2d52dd4d0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x1d2d52dd548 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x1d2d52dda60 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1d2d52ddb00 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1d2d52ddb68 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1d2d52ddbd0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1d2d52ddc50 <col:40> Implicit printf 2 0
|-FunctionDecl 0x1d2d52ddcb8 prev 0x1d2d52dda60 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1d2d52dd720 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1d2d52dd7a0 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x1d2d52dd818 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1d2d52dddb8 <col:40> Inherited printf 2 0
|-FunctionDecl 0x1d2d52d9020 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1d2d52d90c0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1d2d52d9128 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1d2d52d9190 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1d2d52d9210 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1d2d52d9278 prev 0x1d2d52d9020 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1d2d52dde00 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1d2d52dde80 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1d2d52ddef8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1d2d52d9378 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1d2d52d95d8 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1d2d52d93c0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1d2d52d9440 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52d94b8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52d98d0 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1d2d52d96b8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1d2d52d9738 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52d97b0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52d9c18 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1d2d52d9cb8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1d2d52d9d20 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1d2d52d9d98 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1d2d52d9e00 prev 0x1d2d52d9c18 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1d2d52d99b8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1d2d52d9a30 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1d2d52d9ef8 <col:40> Inherited printf 1 0
|-FunctionDecl 0x1d2d52e11d8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1d2d52e1278 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1d2d52e12e0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1d2d52e1358 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x1d2d52e13c0 prev 0x1d2d52e11d8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1d2d52d9f48 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x1d2d52e10a0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1d2d52e14b8 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x1d2d52e1680 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1d2d52e1508 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52e1580 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52e18d8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1d2d52e1760 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52e17d8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52e1e38 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1d2d52e1ed8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1d2d52e1f40 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1d2d52e1fa8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1d2d52e2010 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1d2d52e9120 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1d2d52e9188 prev 0x1d2d52e1e38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1d2d52e1a78 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x1d2d52e1af0 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52e1b70 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1d2d52e1be8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1d2d52e9378 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1d2d52e9248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d52e97e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1d2d52e93c8 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1d2d52e9440 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52e94b8 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52e9538 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52e95b0 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52e9c28 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1d2d52e98e0 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1d2d52e9958 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52e99d0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52e9a50 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52e9ac8 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52e9ff8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1d2d52e9de0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1d2d52e9e58 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52e9ed8 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1d2d52ea0b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d52e8580 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1d2d52e82d0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1d2d52e8348 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52e83c8 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1d2d52e8440 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1d2d52e8640 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d52e8a38 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1d2d52e8788 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1d2d52e8800 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52e8880 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52e88f8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52e8df8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1d2d52e8b28 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1d2d52e8ba8 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52e8c20 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52e71a0 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1d2d52e7240 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1d2d52e72a8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1d2d52e7320 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1d2d52e7388 prev 0x1d2d52e71a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1d2d52e8fa0 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1d2d52e9020 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1d2d52e7568 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1d2d52e7438 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d52e7990 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1d2d52e7a30 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1d2d52e7a98 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1d2d52e7b00 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1d2d52e7b80 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1d2d52e7be8 prev 0x1d2d52e7990 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1d2d52e7678 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1d2d52e76f8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1d2d52e7770 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1d2d52e7dd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1d2d52e7ca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d52e50e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1d2d52e5180 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1d2d52e51e8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1d2d52e5250 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1d2d52e52d0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1d2d52e5338 prev 0x1d2d52e50e0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1d2d52e7e20 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1d2d52e7ea0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1d2d52e7f18 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1d2d52e5438 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1d2d52e5600 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1d2d52e5488 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52e5500 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52e58f8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1d2d52e56e0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1d2d52e5758 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2d52e57d8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1d2d52e5c90 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1d2d52e59e0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1d2d52e5a58 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52e5ad8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52e5b50 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52e5ef8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1d2d52e5d78 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1d2d52e5df8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1d2d52e20b0 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1d2d52e5fd8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1d2d52e23a0 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1d2d52e2188 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1d2d52e2200 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2d52e2280 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1d2d52e2698 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1d2d52e2480 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1d2d52e2500 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52e2578 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52e28f8 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1d2d52e2780 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52e27f8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52e2c88 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1d2d52e29d8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1d2d52e2a50 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52e2ad0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52e2b48 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52e2e58 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1d2d52e2d78 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1d2d52e60f0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1d2d52e2f30 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52e2fa8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52e62b0 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1d2d52e61d0 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1d2d52e6440 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1d2d52e6688 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52e6510 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52e6588 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52e68e0 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52e6768 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52e67e0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52e6b38 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52e69c0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52e6a38 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52e6ee8 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d52e6c18 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1d2d52e6c90 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d2d52e6d08 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52e31e0 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d52e6fd0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1d2d52e7048 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d2d52e30c0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52e34d8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d52e32c8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1d2d52e3340 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d2d52e33b8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52e37d0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52e35b8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1d2d52e3638 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52e36b0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52e3ac8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52e38b0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1d2d52e3930 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52e39a8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52e3dc0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52e3ba8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1d2d52e3c28 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52e3ca0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52eb2a0 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d52e3ea0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1d2d52e3f20 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x1d2d52e3f98 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d2d52e4010 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52eb638 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d52eb388 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1d2d52eb408 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1d2d52eb480 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d2d52eb4f8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52eb9d0 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d52eb720 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1d2d52eb7a0 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1d2d52eb818 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d2d52eb890 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52ebe68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52ebb80 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1d2d52ebc00 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1d2d52ebc78 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d2d52ebf20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d52e43e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52ec068 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1d2d52e40d0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52e4150 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52e41c8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52e4780 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52e44d0 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1d2d52e4548 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52e45c8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52e4640 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52e4cd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d52e4970 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x1d2d52e49f0 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x1d2d52e4a68 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1d2d52e4ae0 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1d2d52e4d90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d52ee3a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d52e4ed8 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1d2d52e4f50 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52e4fd0 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x1d2d52e5048 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d2d52ee170 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52ee7e8 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d52ee4a0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1d2d52ee518 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52ee598 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x1d2d52ee610 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d2d52ee688 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52eea58 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52ee8e0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52ee958 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52eecb0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52eeb38 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52eebb0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52eefa0 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d52eed90 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1d2d52eee08 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d2d52eee80 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52f12d0 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d52ef088 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x1d2d52ef100 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d2d52f11b0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52f1728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52f1478 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1d2d52f14f0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52f1570 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1d2d52f15e8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d2d52f17e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d52f1be0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52f1930 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1d2d52f19a8 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52f1a28 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52f1aa0 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52ef180 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52f1cd0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1d2d52f1d48 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52f1dc0 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52f1e40 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1d2d52f1eb8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52ef6c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d52ef378 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x1d2d52ef3f0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52ef470 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x1d2d52ef4e8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1d2d52ef560 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1d2d52ef788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d52efc08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d52ef8d8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1d2d52ef950 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52ef9d0 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x1d2d52efa48 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d2d52efac0 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52f01f0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d52efd00 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1d2d52efd78 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52efdf0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52efe70 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1d2d52efee8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d2d52eff60 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52f05b0 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1d2d52f02e8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1d2d52f0360 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52f03e0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1d2d52f0820 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1d2d52f06b0 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1d2d52f0a38 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1d2d52f0d18 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1d2d52f0b00 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1d2d52f0b78 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1d2d52f0f60 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1d2d52f0df0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1d2d52f21b0 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1d2d52f1030 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x1d2d52f2338 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1d2d52f2570 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1d2d52f2400 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1d2d52f2478 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x1d2d52f2720 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1d2d52f2648 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1d2d52f29c8 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1d2d52f27f0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1d2d52f2868 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1d2d52f2d70 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x1d2d52f2aa0 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1d2d52f2b20 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x1d2d52f2b98 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x1d2d52f3070 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1d2d52f2e50 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52f2ec8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1d2d52ec308 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1d2d52f3148 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1d2d52ec160 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1d2d52ec610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1d2d52ec4a0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1d2d52ec6b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d52ec978 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1d2d52ec7f8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1d2d52ecc80 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d2d52eca48 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1d2d52ecac0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1d2d52eced0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d2d52ecd58 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1d2d52ecdd0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1d2d52f41d0 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1d2d52ecfa8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1d2d52f4380 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1d2d52f42a0 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1d2d52f4530 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1d2d52f4450 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1d2d52f48c8 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d2d52f4600 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1d2d52f4678 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52f46f0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52f4bb8 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d2d52f49a8 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1d2d52f4a20 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52f4a98 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52f4ea8 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d2d52f4c98 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1d2d52f4d10 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52f4d88 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52ed160 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d2d52f4f88 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1d2d52f5000 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52f5078 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52ed460 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d2d52ed240 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52ed2b8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52ed6b0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d2d52ed538 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52ed5b0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52ed900 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d2d52ed788 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52ed800 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52edb50 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d2d52ed9d8 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52eda50 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52edf08 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d2d52edc28 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1d2d52edca0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2d52edd18 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1d2d52f53f0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d2d52edfe8 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1d2d52ee060 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52ee0d8 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52f51e0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52f57a8 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d2d52f54d8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d2d52f5550 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52f55c8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52f5a98 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d2d52f5888 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1d2d52f5900 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52f5978 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52f5d88 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d2d52f5b78 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d2d52f5bf0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2d52f5c68 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1d2d52f6110 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d2d52f5e68 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d2d52f5ee0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52f5f58 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52f5fd0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52f65a0 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d2d52f6218 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d2d52f6290 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52f6308 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2d52f6380 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1d2d52f6aa8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d2d52f6688 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d2d52f6700 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52f6778 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52f67f0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52f6868 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52f6e68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d2d52f6c58 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1d2d52f6cd0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52f6d48 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1d2d52f6f20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d52f7430 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d2d52f7120 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1d2d52f7200 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52f7278 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d2d52f72f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1d2d52f74f0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d52f77a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d2d52f7630 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1d2d52f76a8 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1d2d52f7960 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1d2d52f7880 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1d2d52f7c40 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d2d52f7a30 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1d2d52f7aa8 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52f7b20 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52f7e98 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d2d52f7d20 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52f7d98 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52fa040 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d2d52f7f70 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d2d52f7fe8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2d52f8060 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x1d2d52fa3c8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d2d52fa120 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d2d52fa198 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52fa210 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52fa288 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52fa590 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1d2d52fa4b0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x1d2d52fa7d8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d2d52fa660 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52fa6d8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52faae0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52fa8b0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52fa928 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52fad30 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52fabb8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52fac30 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52faf80 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52fae08 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52fae80 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52fb348 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d52fb078 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d2d52fb0f0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d2d52fb168 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52fb638 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d52fb428 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d2d52fb4a0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d2d52fb518 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52fb928 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d52fb718 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d2d52fb790 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d2d52fb808 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52fbce8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52fba08 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1d2d52fba80 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52fbaf8 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52f9030 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52fbdc8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1d2d52fbe40 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52fbeb8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52f9320 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52f9110 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1d2d52f9188 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52f9200 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52f9770 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d52f9400 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1d2d52f9478 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d2d52f94f0 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d2d52f9568 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52f9b00 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d52f9858 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1d2d52f98d0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d2d52f9948 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d2d52f99c0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52f9e90 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d52f9be8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1d2d52f9c60 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d2d52f9cd8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d2d52f9d50 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52fe390 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52f9f78 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d2d52fe080 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52fe0f8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52fe170 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52fe720 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52fe478 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d2d52fe4f0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52fe568 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52fe5e0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52feab0 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52fe808 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d2d52fe880 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52fe8f8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52fe970 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52fefb8 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d52feb98 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d2d52fec10 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52fec88 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d2d52fed00 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d2d52fed78 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52ff3f8 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d52ff0b8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d2d52ff130 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52ff1a8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d2d52ff220 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d2d52ff298 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52ff828 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d52ff4e8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d2d52ff560 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52ff5d8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d2d52ff650 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d2d52ff6c8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52ffa90 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52ff918 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52ff990 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52ffce0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52ffb68 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52ffbe0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52fffc8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d52ffdb8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d2d52ffe30 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d2d52ffea8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d52fc3f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52fc150 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d2d52fc1c8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52fc240 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d2d52fc2b8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d2d52fc4b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d52fca28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d52fc600 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d2d52fc678 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52fc6f0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52fc768 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d52fc7e0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d52fcf60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d52fcc20 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d2d52fcc98 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d52fcd10 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d2d52fcd88 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1d2d52fce00 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1d2d5307110 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d5307720 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d5307258 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d2d53072d0 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d5307348 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d53073c0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d2d5307438 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d2d53074b0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d5307c20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d2d53079e8 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1d2d5307a60 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x1d2d5307cd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1d2d5307de8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1d2d5300308 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d2d53080a0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1d2d53000b0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d2d5300128 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1d2d53003c0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1d2d53004d8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1d2d5300a78 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d5300798 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1d2d5300810 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d2d5300888 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x1d2d5300b30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1d2d5300c50 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1d2d5305300 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d5300f10 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1d2d5300f88 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d2d5301000 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1d2d53050f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1d2d53053c0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1d2d53054e0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1d2d53057e8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1d2d5305608 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1d2d5305680 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d53056f8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x1d2d5301350 <line:37:1, line:44:1>
|   |-DeclStmt 0x1d2d5305930 <line:38:5, col:21>
|   | `-VarDecl 0x1d2d53058c8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1d2d53059c8 <line:39:5, col:13>
|   | `-VarDecl 0x1d2d5305960 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1d2d5305d20 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1d2d5305d08 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1d2d5305c20 <col:34> '<builtin fn type>' Function 0x1d2d5305ab8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1d2d5305c58 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1d2d53058c8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1d2d5305c90 <col:29> 'const wchar_t *' lvalue ParmVar 0x1d2d53056f8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1d2d5305fe0 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1d2d5305d50 <col:5> 'int' lvalue Var 0x1d2d5305960 '_Ret' 'int'
|   | `-CallExpr 0x1d2d5305f20 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1d2d5305f08 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1d2d5305d88 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1d2d52fefb8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1d2d5305f68 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1d2d5305da8 <col:27> 'wchar_t *' lvalue ParmVar 0x1d2d5305608 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1d2d5305f80 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1d2d5305dc8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1d2d5305680 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1d2d5305f98 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1d2d5305de8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1d2d53056f8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1d2d5305fb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1d2d5305e70 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1d2d5305e48 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1d2d5305e08 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1d2d5305fc8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1d2d5305e90 <col:59> 'va_list':'char *' lvalue Var 0x1d2d53058c8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1d2d53012e0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1d2d53012c8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1d2d5301218 <col:34> '<builtin fn type>' Function 0x1d2d53010b0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1d2d5301250 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1d2d53058c8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1d2d5301340 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x1d2d5301328 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1d2d5301308 <col:12> 'int' lvalue Var 0x1d2d5305960 '_Ret' 'int'
|-FunctionDecl 0x1d2d5305ab8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1d2d5305b58 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1d2d5305bc8 <col:34> Implicit
|-FunctionDecl 0x1d2d53010b0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1d2d5301150 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1d2d53011c0 <col:34> Implicit
|-FunctionDecl 0x1d2d5301648 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x1d2d53013a0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x1d2d5301418 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d5301490 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d2d5301508 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1d2d5301930 <line:50:1, line:52:1>
|   `-ReturnStmt 0x1d2d5301920 <line:51:5, col:62>
|     `-CallExpr 0x1d2d5301860 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x1d2d5301848 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1d2d5301720 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1d2d52fefb8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1d2d53018a8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1d2d5301740 <col:27> 'wchar_t *' lvalue ParmVar 0x1d2d53013a0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1d2d53018c0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1d2d5301760 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1d2d5301418 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1d2d53018d8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1d2d5301780 <col:44> 'const wchar_t *' lvalue ParmVar 0x1d2d5301490 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1d2d53018f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x1d2d5301808 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x1d2d53017e0 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x1d2d53017a0 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x1d2d5301908 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1d2d5301828 <col:59> 'va_list':'char *' lvalue ParmVar 0x1d2d5301508 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1d2d5301bd0 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x1d2d5301958 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x1d2d53019d0 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d5301a48 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d2d5301ac0 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1d2d5304188 <line:61:1, line:68:1>
|   |-DeclStmt 0x1d2d5301d20 <line:62:5, col:21>
|   | `-VarDecl 0x1d2d5301cb8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1d2d5301db8 <line:63:5, col:13>
|   | `-VarDecl 0x1d2d5301d50 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1d2d5301e60 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1d2d5301e48 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1d2d5301dd0 <col:34> '<builtin fn type>' Function 0x1d2d5305ab8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1d2d5301df0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x1d2d5301cb8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1d2d5301e28 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1d2d5301ac0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x1d2d5302060 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x1d2d5301e90 <col:5> 'int' lvalue Var 0x1d2d5301d50 '_Ret' 'int'
|   | `-CallExpr 0x1d2d5301fa0 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1d2d5301f88 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1d2d5301ec8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1d2d52fefb8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1d2d5301fe8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1d2d5301ee8 <col:27> 'wchar_t *' lvalue ParmVar 0x1d2d5301958 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1d2d5302000 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1d2d5301f08 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1d2d53019d0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1d2d5302018 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1d2d5301f28 <col:44> 'const wchar_t *' lvalue ParmVar 0x1d2d5301a48 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1d2d5302030 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1d2d5301f48 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1d2d5301ac0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x1d2d5302048 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1d2d5301f68 <col:64> 'va_list':'char *' lvalue Var 0x1d2d5301cb8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1d2d5304118 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1d2d5304100 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1d2d5302080 <col:34> '<builtin fn type>' Function 0x1d2d53010b0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1d2d53040e0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x1d2d5301cb8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1d2d5304178 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1d2d5304160 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1d2d5304140 <col:12> 'int' lvalue Var 0x1d2d5301d50 '_Ret' 'int'
|-FunctionDecl 0x1d2d5304518 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1d2d53041d8 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1d2d5304250 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d53042c8 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d2d5304340 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1d2d53043b8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1d2d53047a0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1d2d5304790 <line:75:5, col:67>
|     `-CallExpr 0x1d2d53046d0 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1d2d53046b8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1d2d53045f8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1d2d52fefb8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1d2d5304718 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1d2d5304618 <col:27> 'wchar_t *' lvalue ParmVar 0x1d2d53041d8 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1d2d5304730 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1d2d5304638 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1d2d5304250 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1d2d5304748 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1d2d5304658 <col:44> 'const wchar_t *' lvalue ParmVar 0x1d2d53042c8 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1d2d5304760 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1d2d5304678 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1d2d5304340 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1d2d5304778 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1d2d5304698 <col:64> 'va_list':'char *' lvalue ParmVar 0x1d2d53043b8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1d2d53049e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d2d53047c8 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1d2d5304840 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1d2d5304c38 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d2d5304ac0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d5304b38 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d5304f20 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d2d5304d10 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d2d5304d88 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d2d5304e00 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d2d5308298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d2d5308120 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1d2d5308198 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1d2d5308348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d5308758 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d5308548 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1d2d53085c0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d2d5308638 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d2d5308810 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d5308ac8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d2d5308950 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1d2d53089c8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1d2d5308db0 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d5308ba0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1d2d5308c18 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d5308c90 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d53091a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d2d5308f50 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d2d5308fc8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1d2d5309250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d5309728 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d5309450 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d2d53094c8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d2d5309540 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d2d53097e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d5309a98 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d2d5309920 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1d2d5309998 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1d2d5309d80 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d5309b70 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d2d5309be8 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d5309c60 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d53021a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d2d5309f20 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d2d5309f98 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d530a010 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1d2d5302260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d53027e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d5302460 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d2d53024d8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d5302550 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d2d53025c8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d2d53028a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d5302bf0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d2d53029e0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d2d5302a58 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2d5302ad0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1d2d5302f78 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d5302cd0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d2d5302d48 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d5302dc0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d5302e38 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d530a2f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1d2d530a210 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1d2d530a398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d530a710 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d530a598 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d2d530a610 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d2d530a7c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d530a9e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1d2d530a900 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1d2d530ac28 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d2d530aab0 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d530ab28 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d530af28 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1d2d530ad08 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1d2d530ad80 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x1d2d5303278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d2d530b0c0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1d2d53030d0 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x1d2d5303328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d5303730 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d2d5303470 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1d2d53034e8 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1d2d5303560 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x1d2d5303b90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1d2d53038d0 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1d2d5303948 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x1d2d53039c0 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x1d2d5303c48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d530e1c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1d2d5303d90 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x1d2d5303e08 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1d2d5303e80 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1d2d5303ef8 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x1d2d530e420 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1d2d530e2b0 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1d2d530e660 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d2d530e4f0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x1d2d530e568 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x1d2d530e818 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1d2d530e738 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x1d2d530eb08 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1d2d530e8e8 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x1d2d530e960 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1d2d530ed78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1d2d530eca0 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1d2d530ee20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d530f038 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1d2d530ef60 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1d2d530d268 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1d2d530f108 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1d2d530d170 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1d2d530d4b0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1d2d530d340 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1d2d530d3b8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1d2d530d660 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1d2d530d588 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1d2d530d808 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1d2d530d730 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1d2d530d9b8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d2d530d8d8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1d2d530db68 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d2d530da88 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1d2d530dee0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1d2d530dc40 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1d2d530dcb8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d530dd30 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2d530dda8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1d2d5310370 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1d2d530dfd0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1d2d530e048 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d530e0c0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d53101a0 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2d5310218 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1d2d5310680 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1d2d5310460 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1d2d53104e0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1d2d5310560 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1d2d5310840 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1d2d5310760 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1d2d5310b30 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1d2d5310910 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1d2d5310990 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1d2d5310a10 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1d2d5310cf0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1d2d5310c10 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1d2d5311068 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1d2d5310dc8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1d2d5310e40 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d5310eb8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2d5310f30 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1d2d5311328 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1d2d53111b0 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1d2d5311228 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1d2d5311660 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1d2d53114e0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1d2d5311560 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1d2d5311710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1d2d53119c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1d2d5311a68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1d2d5311da8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1d2d5311c30 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1d2d5311cb0 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1d2d5311e58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1d2d530b150 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1d2d530b1f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1d2d530b490 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1d2d530b3b0 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1d2d530b538 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1d2d530b7b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1d2d530b858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1d2d530bb00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1d2d530ba20 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1d2d530bba8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1d2d530be88 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1d2d530bda8 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1d2d530bf30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1d2d5313348 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1d2d53131d0 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1d2d5313248 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1d2d53133f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1d2d53136b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1d2d5313758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-TypedefDecl 0x1d2d53138a8 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:89:1, col:14> col:14 referenced clock_t 'long'
| `-BuiltinType 0x1d2d372df80 'long'
|-RecordDecl 0x1d2d5313900 <line:113:1, line:123:9> line:113:8 struct tm definition
| |-MaxFieldAlignmentAttr 0x1d2d53139c0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1d2d5313a38 <line:114:9, col:13> col:13 referenced tm_sec 'int'
| |-FieldDecl 0x1d2d5313aa8 <line:115:9, col:13> col:13 referenced tm_min 'int'
| |-FieldDecl 0x1d2d5313b18 <line:116:9, col:13> col:13 referenced tm_hour 'int'
| |-FieldDecl 0x1d2d5313b88 <line:117:9, col:13> col:13 referenced tm_mday 'int'
| |-FieldDecl 0x1d2d5313bf8 <line:118:9, col:13> col:13 referenced tm_mon 'int'
| |-FieldDecl 0x1d2d5313c68 <line:119:9, col:13> col:13 referenced tm_year 'int'
| |-FieldDecl 0x1d2d5313cd8 <line:120:9, col:13> col:13 tm_wday 'int'
| |-FieldDecl 0x1d2d5313d48 <line:121:9, col:13> col:13 tm_yday 'int'
| `-FieldDecl 0x1d2d5313db8 <line:122:9, col:13> col:13 tm_isdst 'int'
|-FunctionDecl 0x1d2d5314000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:147:99> col:84 __daylight 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x1d2d53140a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_daylight instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d5315410 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:151:98> col:84 __dstbias 'long *(void) __attribute__((cdecl))':'long *(void)'
| `-DeprecatedAttr 0x1d2d53154b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_dstbias instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d5315770 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:155:100> col:85 __timezone 'long *(void) __attribute__((cdecl))':'long *(void)'
| `-DeprecatedAttr 0x1d2d5315810 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_timezone instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d5315b30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:159:112> col:99 __tzname 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x1d2d5315bd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_tzname instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d5315e90 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:162:9, col:60> col:25 _get_daylight 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1d2d5315d18 <col:45, col:51> col:51 _Daylight 'int *'
|-FunctionDecl 0x1d2d53160e0 <line:163:9, col:73> col:25 _get_dstbias 'errno_t (long *) __attribute__((cdecl))':'errno_t (long *)'
| `-ParmVarDecl 0x1d2d5315f68 <col:44, col:51> col:51 _Daylight_savings_bias 'long *'
|-FunctionDecl 0x1d2d53142b8 <line:164:9, col:61> col:25 _get_timezone 'errno_t (long *) __attribute__((cdecl))':'errno_t (long *)'
| `-ParmVarDecl 0x1d2d53141e0 <col:45, col:52> col:52 _Timezone 'long *'
|-FunctionDecl 0x1d2d5314768 <line:165:9, col:150> col:25 _get_tzname 'errno_t (size_t *, char *, size_t, int) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, int)'
| |-ParmVarDecl 0x1d2d53143e8 <col:43, col:51> col:51 _ReturnValue 'size_t *'
| |-ParmVarDecl 0x1d2d5314468 <col:94, col:100> col:100 _Buffer 'char *'
| |-ParmVarDecl 0x1d2d53144e0 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2d5314560 <col:140, col:144> col:144 _Index 'int'
|-FunctionDecl 0x1d2d5314b28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:174:108> col:74 asctime 'char *(const struct tm *) __attribute__((cdecl))':'char *(const struct tm *)'
| |-ParmVarDecl 0x1d2d53149b0 <col:87, col:105> col:105 _Tm 'const struct tm *'
| `-DeprecatedAttr 0x1d2d5314bd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using asctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d5314ff0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:176:28, col:170> col:44 asctime_s 'errno_t (char *, size_t, const struct tm *) __attribute__((cdecl))':'errno_t (char *, size_t, const struct tm *)'
| |-ParmVarDecl 0x1d2d5314d18 <col:106, col:112> col:112 _Buf 'char *'
| |-ParmVarDecl 0x1d2d5314d90 <col:123, col:130> col:130 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2d5314e20 <col:149, col:167> col:167 _Tm 'const struct tm *'
|-FunctionDecl 0x1d2d53173c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:180:98> col:60 _ctime32 'char *(const __time32_t *) __attribute__((cdecl))':'char *(const __time32_t *)'
| |-ParmVarDecl 0x1d2d5317248 <col:74, col:93> col:93 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x1d2d5317470 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ctime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d5317880 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:181:9, col:154> col:25 _ctime32_s 'errno_t (char *, size_t, const __time32_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time32_t *)'
| |-ParmVarDecl 0x1d2d53175b8 <col:88, col:94> col:94 _Buf 'char *'
| |-ParmVarDecl 0x1d2d5317630 <col:105, col:112> col:112 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2d53176a8 <col:131, col:149> col:149 _Time 'const __time32_t *'
|-FunctionDecl 0x1d2d5317ac8 <line:184:24, col:50> col:40 clock 'clock_t (void) __attribute__((cdecl))':'clock_t (void)'
|-FunctionDecl 0x1d2d5317db0 <line:185:9, col:82> col:24 _difftime32 'double (__time32_t, __time32_t) __attribute__((cdecl))':'double (__time32_t, __time32_t)'
| |-ParmVarDecl 0x1d2d5317b90 <col:41, col:52> col:52 _Time1 '__time32_t':'long'
| `-ParmVarDecl 0x1d2d5317c08 <col:65, col:76> col:76 _Time2 '__time32_t':'long'
|-FunctionDecl 0x1d2d5318138 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:187:120> col:81 _gmtime32 'struct tm *(const __time32_t *) __attribute__((cdecl))':'struct tm *(const __time32_t *)'
| |-ParmVarDecl 0x1d2d5317f48 <col:96, col:115> col:115 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x1d2d53212a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gmtime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d5321618 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:188:28, col:106> col:44 _gmtime32_s 'errno_t (struct tm *, const __time32_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time32_t *)'
| |-ParmVarDecl 0x1d2d53213f8 <col:61, col:72> col:72 _Tm 'struct tm *'
| `-ParmVarDecl 0x1d2d5321470 <col:82, col:101> col:101 _Time 'const __time32_t *'
|-FunctionDecl 0x1d2d53218a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:190:111> col:69 _localtime32 'struct tm *(const __time32_t *) __attribute__((cdecl))':'struct tm *(const __time32_t *)'
| |-ParmVarDecl 0x1d2d53217b8 <col:87, col:106> col:106 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x1d2d5321950 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _localtime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d5321c20 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:191:9, col:91> col:25 _localtime32_s 'errno_t (struct tm *, const __time32_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time32_t *)'
| |-ParmVarDecl 0x1d2d5321ab0 <col:46, col:57> col:57 _Tm 'struct tm *'
| `-ParmVarDecl 0x1d2d5321b28 <col:67, col:86> col:86 _Time 'const __time32_t *'
|-FunctionDecl 0x1d2d5322088 <line:193:9, col:179> col:24 strftime 'size_t (char *, size_t, const char *, const struct tm *) __attribute__((cdecl))':'size_t (char *, size_t, const char *, const struct tm *)'
| |-ParmVarDecl 0x1d2d5321d00 <col:62, col:69> col:69 _Buf 'char *'
| |-ParmVarDecl 0x1d2d5321d78 <col:80, col:87> col:87 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d5321df8 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1d2d5321e88 <col:158, col:176> col:176 _Tm 'const struct tm *'
|-FunctionDecl 0x1d2d5323600 <line:194:9, col:199> col:24 _strftime_l 'size_t (char *, size_t, const char *, const struct tm *, _locale_t) __attribute__((cdecl))':'size_t (char *, size_t, const char *, const struct tm *, _locale_t)'
| |-ParmVarDecl 0x1d2d5322178 <col:59, col:65> col:65 _Buf 'char *'
| |-ParmVarDecl 0x1d2d53221f0 <col:76, col:83> col:83 _Max_size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d53232c0 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1d2d5323350 <col:151, col:168> col:168 _Tm 'const struct tm *'
| `-ParmVarDecl 0x1d2d53233c8 <col:182, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d53238d8 <line:196:28, col:142> col:44 _strdate_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1d2d53236f8 <col:106, col:112> col:112 _Buf 'char *'
| `-ParmVarDecl 0x1d2d5323770 <col:123, col:130> col:130 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1d2d5323b58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:198:79 _strdate 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1d2d5323a78 <col:108, col:114> col:114 _Buffer 'char *'
| `-DeprecatedAttr 0x1d2d5323c00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strdate_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d5323eb8 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:200:28, col:143> col:44 _strtime_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1d2d5323d48 <col:106, col:112> col:112 _Buf 'char *'
| `-ParmVarDecl 0x1d2d5323dc0 <col:124, col:131> col:131 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1d2d5324138 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:202:79 _strtime 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1d2d5324058 <col:108, col:114> col:114 _Buffer 'char *'
| `-DeprecatedAttr 0x1d2d53241e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d5324570 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:204:9, col:64> col:28 _time32 '__time32_t (__time32_t *) __attribute__((cdecl))':'__time32_t (__time32_t *)'
| `-ParmVarDecl 0x1d2d53243f8 <col:46, col:59> col:59 _Time '__time32_t *'
|-FunctionDecl 0x1d2d53247d0 <line:205:9, col:61> col:28 _mktime32 '__time32_t (struct tm *) __attribute__((cdecl))':'__time32_t (struct tm *)'
| `-ParmVarDecl 0x1d2d5324658 <col:46, col:58> col:58 _Tm 'struct tm *'
|-FunctionDecl 0x1d2d5324990 <line:206:9, col:63> col:28 _mkgmtime32 '__time32_t (struct tm *) __attribute__((cdecl))':'__time32_t (struct tm *)'
| `-ParmVarDecl 0x1d2d53248b8 <col:48, col:60> col:60 _Tm 'struct tm *'
|-FunctionDecl 0x1d2d5324b18 <line:210:9, col:33> col:22 _tzset 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1d2d5324e00 <line:214:24, col:97> col:39 used _difftime64 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)'
| |-ParmVarDecl 0x1d2d5324be0 <col:56, col:67> col:67 _Time1 '__time64_t':'long long'
| `-ParmVarDecl 0x1d2d5324c58 <col:80, col:91> col:91 _Time2 '__time64_t':'long long'
|-FunctionDecl 0x1d2d5325148 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:215:98> col:60 used _ctime64 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)'
| |-ParmVarDecl 0x1d2d5324fc8 <col:74, col:93> col:93 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x1d2d53251f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ctime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d53256a0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:216:9, col:132> col:25 used _ctime64_s 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)'
| |-ParmVarDecl 0x1d2d53253e0 <col:65, col:71> col:71 _Buf 'char *'
| |-ParmVarDecl 0x1d2d5325458 <col:82, col:89> col:89 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2d53254d0 <col:108, col:127> col:127 _Time 'const __time64_t *'
|-FunctionDecl 0x1d2d53259c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:219:105> col:66 used _gmtime64 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |-ParmVarDecl 0x1d2d5325840 <col:81, col:100> col:100 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x1d2d5325a70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gmtime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d5325de8 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:220:9, col:87> col:25 used _gmtime64_s 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
| |-ParmVarDecl 0x1d2d5325bc8 <col:43, col:54> col:54 _Tm 'struct tm *'
| `-ParmVarDecl 0x1d2d5325c40 <col:64, col:82> col:82 _Time 'const __time64_t *'
|-FunctionDecl 0x1d2d5326078 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:222:111> col:69 used _localtime64 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |-ParmVarDecl 0x1d2d5325f88 <col:87, col:106> col:106 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x1d2d5326120 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _localtime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d5328480 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:223:9, col:90> col:25 used _localtime64_s 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
| |-ParmVarDecl 0x1d2d5328310 <col:46, col:57> col:57 _Tm 'struct tm *'
| `-ParmVarDecl 0x1d2d5328388 <col:67, col:85> col:85 _Time 'const __time64_t *'
|-FunctionDecl 0x1d2d53286e0 <line:225:9, col:61> col:28 used _mktime64 '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
| `-ParmVarDecl 0x1d2d5328570 <col:46, col:58> col:58 _Tm 'struct tm *'
|-FunctionDecl 0x1d2d53288a0 <line:226:9, col:63> col:28 used _mkgmtime64 '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
| `-ParmVarDecl 0x1d2d53287c8 <col:48, col:60> col:60 _Tm 'struct tm *'
|-FunctionDecl 0x1d2d5328b10 <line:227:9, col:64> col:28 used _time64 '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)'
| `-ParmVarDecl 0x1d2d5328998 <col:46, col:59> col:59 _Time '__time64_t *'
|-FunctionDecl 0x1d2d5328e78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:231:79> col:46 _getsystime 'unsigned int (struct tm *) __attribute__((cdecl))':'unsigned int (struct tm *)'
| |-ParmVarDecl 0x1d2d5328cf8 <col:64, col:76> col:76 _Tm 'struct tm *'
| `-DeprecatedAttr 0x1d2d5328f20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using GetLocalTime instead. See online help for details." ""
|-FunctionDecl 0x1d2d5326360 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:232:98> col:46 _setsystime 'unsigned int (struct tm *, unsigned int) __attribute__((cdecl))':'unsigned int (struct tm *, unsigned int)'
| |-ParmVarDecl 0x1d2d5329148 <col:63, col:75> col:75 _Tm 'struct tm *'
| |-ParmVarDecl 0x1d2d53291c8 <col:80, col:89> col:89 _MilliSec 'unsigned int'
| `-DeprecatedAttr 0x1d2d5326410 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetLocalTime instead. See online help for details." ""
|-FunctionDecl 0x1d2d53267a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:245:100> col:64 _wasctime 'wchar_t *(const struct tm *) __attribute__((cdecl))':'wchar_t *(const struct tm *)'
| |-ParmVarDecl 0x1d2d5326630 <col:79, col:97> col:97 _Tm 'const struct tm *'
| `-DeprecatedAttr 0x1d2d5326848 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wasctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d5326c60 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:246:9, col:156> col:25 _wasctime_s 'errno_t (wchar_t *, size_t, const struct tm *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const struct tm *)'
| |-ParmVarDecl 0x1d2d5326988 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1d2d5326a00 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2d5326a90 <col:135, col:153> col:153 _Tm 'const struct tm *'
|-FunctionDecl 0x1d2d5326f70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:249:102> col:64 _wctime32 'wchar_t *(const __time32_t *) __attribute__((cdecl))':'wchar_t *(const __time32_t *)'
| |-ParmVarDecl 0x1d2d5326e00 <col:79, col:97> col:97 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x1d2d5327018 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d53223f0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:250:9, col:159> col:25 _wctime32_s 'errno_t (wchar_t *, size_t, const __time32_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time32_t *)'
| |-ParmVarDecl 0x1d2d5327158 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1d2d53271d0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2d5327248 <col:135, col:154> col:154 _Time 'const __time32_t *'
|-FunctionDecl 0x1d2d5322858 <line:253:9, col:186> col:24 wcsftime 'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *) __attribute__((cdecl))':'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *)'
| |-ParmVarDecl 0x1d2d53224d0 <col:62, col:72> col:72 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1d2d5322548 <col:83, col:90> col:90 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d53225c0 <col:134, col:150> col:150 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d2d5322650 <col:165, col:183> col:183 _Tm 'const struct tm *'
|-FunctionDecl 0x1d2d5322d70 <line:254:9, col:214> col:24 _wcsftime_l 'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *, _locale_t)'
| |-ParmVarDecl 0x1d2d5322940 <col:65, col:75> col:75 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1d2d53229b8 <col:86, col:93> col:93 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d5322a30 <col:137, col:152> col:152 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d2d5322ac0 <col:166, col:183> col:183 _Tm 'const struct tm *'
| `-ParmVarDecl 0x1d2d5322b38 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2d5322fd0 <line:256:9, col:128> col:25 _wstrdate_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1d2d5322e60 <col:88, col:98> col:98 _Buf 'wchar_t *'
| `-ParmVarDecl 0x1d2d5322ed8 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1d2d532b340 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:258:82 _wstrdate 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1d2d5323168 <col:112, col:121> col:121 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1d2d532b3e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wstrdate_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d532b698 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:260:9, col:128> col:25 _wstrtime_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1d2d532b528 <col:88, col:98> col:98 _Buf 'wchar_t *'
| `-ParmVarDecl 0x1d2d532b5a0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1d2d532b908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:262:82 _wstrtime 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1d2d532b830 <col:112, col:121> col:121 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1d2d532b9b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wstrtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d532bd20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:264:103> col:64 used _wctime64 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)'
| |-ParmVarDecl 0x1d2d532bbb0 <col:79, col:98> col:98 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x1d2d532bdc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d532c1d0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:265:9, col:158> col:25 used _wctime64_s 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)'
| |-ParmVarDecl 0x1d2d532bf08 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1d2d532bf80 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2d532bff8 <col:135, col:153> col:153 _Time 'const __time64_t *'
|-FunctionDecl 0x1d2d532a470 <D:\Microsoft Visual Studio 12.0\VC\include\wtime.inl:44:1, line:50:1> line:44:37 _wctime 'wchar_t *(const time_t *) __attribute__((cdecl))':'wchar_t *(const time_t *)' static inline
| |-ParmVarDecl 0x1d2d532a330 <col:45, col:60> col:60 used _Time 'const time_t *'
| `-CompoundStmt 0x1d2d532a630 <line:45:1, line:50:1>
|   `-ReturnStmt 0x1d2d532a620 <line:48:5, col:27>
|     `-CallExpr 0x1d2d532a5e0 <col:12, col:27> 'wchar_t *'
|       |-ImplicitCastExpr 0x1d2d532a5c8 <col:12> 'wchar_t *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1d2d532a530 <col:12> 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)' Function 0x1d2d532bd20 '_wctime64' 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)'
|       `-ImplicitCastExpr 0x1d2d532a608 <col:22> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x1d2d532a550 <col:22> 'const time_t *' lvalue ParmVar 0x1d2d532a330 '_Time' 'const time_t *'
|-FunctionDecl 0x1d2d532a8e0 <line:52:1, line:55:1> line:52:35 _wctime_s 'errno_t (wchar_t *, size_t, const time_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const time_t *)' static inline
| |-ParmVarDecl 0x1d2d532a658 <col:97, col:106> col:106 used _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1d2d532a6d0 <col:115, col:122> col:122 used _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d532a748 <col:136, col:151> col:151 used _Time 'const time_t *'
| `-CompoundStmt 0x1d2d532ab30 <line:53:1, line:55:1>
|   `-ReturnStmt 0x1d2d532ab20 <line:54:5, col:52>
|     `-CallExpr 0x1d2d532aaa0 <col:12, col:52> 'errno_t':'int'
|       |-ImplicitCastExpr 0x1d2d532aa88 <col:12> 'errno_t (*)(wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1d2d532a9b0 <col:12> 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)' Function 0x1d2d532c1d0 '_wctime64_s' 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)'
|       |-ImplicitCastExpr 0x1d2d532aad8 <col:24> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1d2d532a9d0 <col:24> 'wchar_t *' lvalue ParmVar 0x1d2d532a658 '_Buffer' 'wchar_t *'
|       |-ImplicitCastExpr 0x1d2d532aaf0 <col:33> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1d2d532a9f0 <col:33> 'size_t':'unsigned long long' lvalue ParmVar 0x1d2d532a6d0 '_SizeInWords' 'size_t':'unsigned long long'
|       `-ImplicitCastExpr 0x1d2d532ab08 <col:47> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x1d2d532aa10 <col:47> 'const time_t *' lvalue ParmVar 0x1d2d532a748 '_Time' 'const time_t *'
|-FunctionDecl 0x1d2d532ad40 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:82:1, line:85:1> line:82:34 difftime 'double (time_t, time_t) __attribute__((cdecl))':'double (time_t, time_t)' static inline
| |-ParmVarDecl 0x1d2d532ab58 <col:43, col:50> col:50 used _Time1 'time_t':'long long'
| |-ParmVarDecl 0x1d2d532abd0 <col:58, col:65> col:65 used _Time2 'time_t':'long long'
| `-CompoundStmt 0x1d2d532af50 <line:83:1, line:85:1>
|   `-ReturnStmt 0x1d2d532af40 <line:84:5, col:37>
|     `-CallExpr 0x1d2d532aee0 <col:12, col:37> 'double'
|       |-ImplicitCastExpr 0x1d2d532aec8 <col:12> 'double (*)(__time64_t, __time64_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1d2d532ae08 <col:12> 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)' Function 0x1d2d5324e00 '_difftime64' 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)'
|       |-ImplicitCastExpr 0x1d2d532af10 <col:24> 'time_t':'long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1d2d532ae28 <col:24> 'time_t':'long long' lvalue ParmVar 0x1d2d532ab58 '_Time1' 'time_t':'long long'
|       `-ImplicitCastExpr 0x1d2d532af28 <col:31> 'time_t':'long long' <LValueToRValue>
|         `-DeclRefExpr 0x1d2d532ae48 <col:31> 'time_t':'long long' lvalue ParmVar 0x1d2d532abd0 '_Time2' 'time_t':'long long'
|-FunctionDecl 0x1d2d532b188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:92:1> line:86:67 ctime 'char *(const time_t *) __attribute__((cdecl))':'char *(const time_t *)' static inline
| |-ParmVarDecl 0x1d2d532b038 <col:73, col:88> col:88 used _Time 'const time_t *'
| |-CompoundStmt 0x1d2d532c4a0 <line:87:1, line:92:1>
| | `-ReturnStmt 0x1d2d532c490 <line:90:5, col:26>
| |   `-CallExpr 0x1d2d532c450 <col:12, col:26> 'char *'
| |     |-ImplicitCastExpr 0x1d2d532c438 <col:12> 'char *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x1d2d532c398 <col:12> 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)' Function 0x1d2d5325148 '_ctime64' 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x1d2d532c478 <col:21> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x1d2d532c3b8 <col:21> 'const time_t *' lvalue ParmVar 0x1d2d532b038 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x1d2d532b230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using ctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d532c750 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:94:1, line:97:1> line:94:35 ctime_s 'errno_t (char *, size_t, const time_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const time_t *)' static inline
| |-ParmVarDecl 0x1d2d532c4d0 <col:43, col:49> col:49 used _Buffer 'char *'
| |-ParmVarDecl 0x1d2d532c548 <col:58, col:65> col:65 used _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2d532c5c0 <col:79, col:94> col:94 used _Time 'const time_t *'
| `-CompoundStmt 0x1d2d532c9a0 <line:95:1, line:97:1>
|   `-ReturnStmt 0x1d2d532c990 <line:96:5, col:51>
|     `-CallExpr 0x1d2d532c910 <col:12, col:51> 'errno_t':'int'
|       |-ImplicitCastExpr 0x1d2d532c8f8 <col:12> 'errno_t (*)(char *, size_t, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1d2d532c820 <col:12> 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)' Function 0x1d2d53256a0 '_ctime64_s' 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)'
|       |-ImplicitCastExpr 0x1d2d532c948 <col:23> 'char *' <LValueToRValue>
|       | `-DeclRefExpr 0x1d2d532c840 <col:23> 'char *' lvalue ParmVar 0x1d2d532c4d0 '_Buffer' 'char *'
|       |-ImplicitCastExpr 0x1d2d532c960 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1d2d532c860 <col:32> 'size_t':'unsigned long long' lvalue ParmVar 0x1d2d532c548 '_SizeInBytes' 'size_t':'unsigned long long'
|       `-ImplicitCastExpr 0x1d2d532c978 <col:46> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x1d2d532c880 <col:46> 'const time_t *' lvalue ParmVar 0x1d2d532c5c0 '_Time' 'const time_t *'
|-FunctionDecl 0x1d2d532cbe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:105:1> line:99:73 gmtime 'struct tm *(const time_t *) __attribute__((cdecl))':'struct tm *(const time_t *)' static inline
| |-ParmVarDecl 0x1d2d532ca88 <col:80, col:95> col:95 used _Time 'const time_t *'
| |-CompoundStmt 0x1d2d532cec0 <line:100:1, line:105:1>
| | `-ReturnStmt 0x1d2d532ceb0 <line:103:5, col:27>
| |   `-CallExpr 0x1d2d532ce70 <col:12, col:27> 'struct tm *'
| |     |-ImplicitCastExpr 0x1d2d532ce58 <col:12> 'struct tm *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x1d2d532cdc0 <col:12> 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)' Function 0x1d2d53259c8 '_gmtime64' 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x1d2d532ce98 <col:22> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x1d2d532cde0 <col:22> 'const time_t *' lvalue ParmVar 0x1d2d532ca88 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x1d2d532cc90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gmtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d532d0d8 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:107:1, line:110:1> line:107:35 gmtime_s 'errno_t (struct tm *, const time_t *) __attribute__((cdecl))':'errno_t (struct tm *, const time_t *)' static inline
| |-ParmVarDecl 0x1d2d532cf00 <col:44, col:56> col:56 used _Tm 'struct tm *'
| |-ParmVarDecl 0x1d2d532cf78 <col:61, col:76> col:76 used _Time 'const time_t *'
| `-CompoundStmt 0x1d2d532d2e0 <line:108:1, line:110:1>
|   `-ReturnStmt 0x1d2d532d2d0 <line:109:5, col:34>
|     `-CallExpr 0x1d2d532d270 <col:12, col:34> 'errno_t':'int'
|       |-ImplicitCastExpr 0x1d2d532d258 <col:12> 'errno_t (*)(struct tm *, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1d2d532d1a0 <col:12> 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)' Function 0x1d2d5325de8 '_gmtime64_s' 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
|       |-ImplicitCastExpr 0x1d2d532d2a0 <col:24> 'struct tm *' <LValueToRValue>
|       | `-DeclRefExpr 0x1d2d532d1c0 <col:24> 'struct tm *' lvalue ParmVar 0x1d2d532cf00 '_Tm' 'struct tm *'
|       `-ImplicitCastExpr 0x1d2d532d2b8 <col:29> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x1d2d532d1e0 <col:29> 'const time_t *' lvalue ParmVar 0x1d2d532cf78 '_Time' 'const time_t *'
|-FunctionDecl 0x1d2d532d520 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:118:1> line:112:76 localtime 'struct tm *(const time_t *) __attribute__((cdecl))':'struct tm *(const time_t *)' static inline
| |-ParmVarDecl 0x1d2d532d430 <col:86, col:101> col:101 used _Time 'const time_t *'
| |-CompoundStmt 0x1d2d532d7a0 <line:113:1, line:118:1>
| | `-ReturnStmt 0x1d2d532d790 <line:116:5, col:30>
| |   `-CallExpr 0x1d2d532d750 <col:12, col:30> 'struct tm *'
| |     |-ImplicitCastExpr 0x1d2d532d738 <col:12> 'struct tm *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x1d2d532d6f8 <col:12> 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)' Function 0x1d2d5326078 '_localtime64' 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x1d2d532d778 <col:25> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x1d2d532d718 <col:25> 'const time_t *' lvalue ParmVar 0x1d2d532d430 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x1d2d532d5c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using localtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d532d950 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:119:1, line:122:1> line:119:35 localtime_s 'errno_t (struct tm *, const time_t *) __attribute__((cdecl))':'errno_t (struct tm *, const time_t *)' static inline
| |-ParmVarDecl 0x1d2d532d7e0 <col:47, col:59> col:59 used _Tm 'struct tm *'
| |-ParmVarDecl 0x1d2d532d858 <col:64, col:79> col:79 used _Time 'const time_t *'
| `-CompoundStmt 0x1d2d532db00 <line:120:1, line:122:1>
|   `-ReturnStmt 0x1d2d532daf0 <line:121:5, col:37>
|     `-CallExpr 0x1d2d532da90 <col:12, col:37> 'errno_t':'int'
|       |-ImplicitCastExpr 0x1d2d532da78 <col:12> 'errno_t (*)(struct tm *, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1d2d532da18 <col:12> 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)' Function 0x1d2d5328480 '_localtime64_s' 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
|       |-ImplicitCastExpr 0x1d2d532dac0 <col:27> 'struct tm *' <LValueToRValue>
|       | `-DeclRefExpr 0x1d2d532da38 <col:27> 'struct tm *' lvalue ParmVar 0x1d2d532d7e0 '_Tm' 'struct tm *'
|       `-ImplicitCastExpr 0x1d2d532dad8 <col:32> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x1d2d532da58 <col:32> 'const time_t *' lvalue ParmVar 0x1d2d532d858 '_Time' 'const time_t *'
|-FunctionDecl 0x1d2d532dc80 <line:123:1, line:126:1> line:123:34 mktime 'time_t (struct tm *) __attribute__((cdecl))':'time_t (struct tm *)' static inline
| |-ParmVarDecl 0x1d2d532db40 <col:41, col:53> col:53 used _Tm 'struct tm *'
| `-CompoundStmt 0x1d2d532de40 <line:124:1, line:126:1>
|   `-ReturnStmt 0x1d2d532de30 <line:125:5, col:25>
|     `-CallExpr 0x1d2d532ddf0 <col:12, col:25> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x1d2d532ddd8 <col:12> '__time64_t (*)(struct tm *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1d2d532dd40 <col:12> '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)' Function 0x1d2d53286e0 '_mktime64' '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
|       `-ImplicitCastExpr 0x1d2d532de18 <col:22> 'struct tm *' <LValueToRValue>
|         `-DeclRefExpr 0x1d2d532dd60 <col:22> 'struct tm *' lvalue ParmVar 0x1d2d532db40 '_Tm' 'struct tm *'
|-FunctionDecl 0x1d2d532df58 <line:127:1, line:130:1> line:127:34 _mkgmtime 'time_t (struct tm *) __attribute__((cdecl))':'time_t (struct tm *)' static inline
| |-ParmVarDecl 0x1d2d532de80 <col:44, col:56> col:56 used _Tm 'struct tm *'
| `-CompoundStmt 0x1d2d532e0c0 <line:128:1, line:130:1>
|   `-ReturnStmt 0x1d2d532e0b0 <line:129:5, col:27>
|     `-CallExpr 0x1d2d532e070 <col:12, col:27> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x1d2d532e058 <col:12> '__time64_t (*)(struct tm *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1d2d532e018 <col:12> '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)' Function 0x1d2d53288a0 '_mkgmtime64' '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
|       `-ImplicitCastExpr 0x1d2d532e098 <col:24> 'struct tm *' <LValueToRValue>
|         `-DeclRefExpr 0x1d2d532e038 <col:24> 'struct tm *' lvalue ParmVar 0x1d2d532de80 '_Tm' 'struct tm *'
|-FunctionDecl 0x1d2d532e260 <line:131:1, line:134:1> line:131:34 time 'time_t (time_t *) __attribute__((cdecl))':'time_t (time_t *)' static inline
| |-ParmVarDecl 0x1d2d532e118 <col:39, col:48> col:48 used _Time 'time_t *'
| `-CompoundStmt 0x1d2d532e430 <line:132:1, line:134:1>
|   `-ReturnStmt 0x1d2d532e420 <line:133:5, col:25>
|     `-CallExpr 0x1d2d532e3e0 <col:12, col:25> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x1d2d532e3c8 <col:12> '__time64_t (*)(__time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1d2d532e320 <col:12> '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)' Function 0x1d2d5328b10 '_time64' '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)'
|       `-ImplicitCastExpr 0x1d2d532e408 <col:20> 'time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x1d2d532e340 <col:20> 'time_t *' lvalue ParmVar 0x1d2d532e118 '_Time' 'time_t *'
|-VarDecl 0x1d2d532e520 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:291:67> col:67 daylight 'int' extern
| `-DeprecatedAttr 0x1d2d532e588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_daylight instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x1d2d532e790 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:292:68> col:68 timezone 'long' extern
| `-DeprecatedAttr 0x1d2d532e7f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_timezone instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x1d2d532ea90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:293:76> col:68 tzname 'char *[2]' extern
| `-DeprecatedAttr 0x1d2d532eaf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_tzname instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2d532ed90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:297:63> col:53 tzset 'void (void) __attribute__((cdecl))':'void (void)'
| `-DeprecatedAttr 0x1d2d532ee30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tzset. See online help for details." ""
|-FunctionDecl 0x1d2d532f100 <.//openssl//file_jk/before\crypto\asn1/asn1_locl.h:12:1, col:60> col:5 invalid asn1_utctime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x1d2d532ef68 <col:24, col:35> col:35 tm 'struct tm *'
| `-ParmVarDecl 0x1d2d532efe8 <col:39, col:59> col:59 invalid d 'const int *'
|-FunctionDecl 0x1d2d53353e0 <line:13:1, col:76> col:5 invalid asn1_generalizedtime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x1d2d532f1d8 <col:32, col:43> col:43 tm 'struct tm *'
| `-ParmVarDecl 0x1d2d532f258 <col:47, col:75> col:75 invalid d 'const int *'
|-RecordDecl 0x1d2d5335490 <line:17:1, line:38:1> line:17:8 invalid struct asn1_sctx_st definition
| |-FieldDecl 0x1d2d5335568 <line:19:5, col:22> col:22 invalid it 'const int *'
| |-FieldDecl 0x1d2d53355d8 <line:21:5, col:26> col:26 invalid tt 'const int *'
| |-FieldDecl 0x1d2d5335648 <line:23:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x1d2d53356b8 <line:25:5, col:9> col:9 skidx 'int'
| |-FieldDecl 0x1d2d5335728 <line:27:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x1d2d5335798 <line:29:5, col:17> col:17 sname 'const char *'
| |-FieldDecl 0x1d2d5335808 <col:5, col:25> col:25 fname 'const char *'
| |-FieldDecl 0x1d2d5335878 <line:31:5, col:9> col:9 prim_type 'int'
| |-FieldDecl 0x1d2d5335918 <line:33:5, col:18> col:18 invalid field 'int **'
| |-FieldDecl 0x1d2d5335ab8 <line:35:5, col:35> col:11 scan_cb 'int (*)(int *)'
| `-FieldDecl 0x1d2d5335b28 <line:37:5, col:11> col:11 app_data 'void *'
|-RecordDecl 0x1d2d5335b80 <line:40:9, col:16> col:16 struct mime_param_st
|-TypedefDecl 0x1d2d5335c98 <col:1, col:30> col:30 referenced MIME_PARAM 'struct mime_param_st':'struct mime_param_st'
| `-ElaboratedType 0x1d2d5335c40 'struct mime_param_st' sugar
|   `-RecordType 0x1d2d5335c20 'struct mime_param_st'
|     `-Record 0x1d2d5335b80 'mime_param_st'
|-FunctionDecl 0x1d2d5335e40 <line:41:1, col:27> col:1 DEFINE_STACK_OF 'int (MIME_PARAM)'
| `-ParmVarDecl 0x1d2d5335d40 <col:17> col:27 'MIME_PARAM':'struct mime_param_st'
|-RecordDecl 0x1d2d5335f00 <line:42:9, col:16> col:16 struct mime_header_st
|-TypedefDecl 0x1d2d5336018 <col:1, col:31> col:31 referenced MIME_HEADER 'struct mime_header_st':'struct mime_header_st'
| `-ElaboratedType 0x1d2d5335fc0 'struct mime_header_st' sugar
|   `-RecordType 0x1d2d5335fa0 'struct mime_header_st'
|     `-Record 0x1d2d5335f00 'mime_header_st'
|-FunctionDecl 0x1d2d53361c0 <line:43:1, col:28> col:1 invalid DEFINE_STACK_OF 'int (MIME_HEADER)'
| `-ParmVarDecl 0x1d2d53360c0 <col:17> col:28 'MIME_HEADER':'struct mime_header_st'
|-VarDecl 0x1d2d5336310 <line:46:1, col:32> col:20 used _asn1_mon 'const char *[12]' extern
|-FunctionDecl 0x1d2d53314f8 <line:48:1, col:54> col:6 invalid asn1_string_embed_free 'void (int *, int)'
| |-ParmVarDecl 0x1d2d53313a0 <col:29, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x1d2d5331420 <col:45, col:49> col:49 embed 'int'
|-FunctionDecl 0x1d2d5331720 <line:50:1, col:68> col:5 invalid asn1_get_choice_selector 'int (int **, const int *)'
| |-ParmVarDecl 0x1d2d53315c8 <col:30, col:43> col:43 invalid pval 'int **'
| `-ParmVarDecl 0x1d2d5331648 <col:49, col:66> col:66 invalid it 'const int *'
|-FunctionDecl 0x1d2d53319e0 <line:51:1, line:52:49> line:51:5 invalid asn1_set_choice_selector 'int (int **, int, const int *)'
| |-ParmVarDecl 0x1d2d53317f0 <col:30, col:43> col:43 invalid pval 'int **'
| |-ParmVarDecl 0x1d2d5331870 <col:49, col:53> col:53 value 'int'
| `-ParmVarDecl 0x1d2d53318f0 <line:52:30, col:47> col:47 invalid it 'const int *'
|-FunctionDecl 0x1d2d5331c18 <line:54:1, col:75> col:14 invalid asn1_get_field_ptr 'int **(int **, const int *)'
| |-ParmVarDecl 0x1d2d5331ab8 <col:33, col:46> col:46 invalid pval 'int **'
| `-ParmVarDecl 0x1d2d5331b38 <col:52, col:73> col:73 invalid tt 'const int *'
|-FunctionDecl 0x1d2d5331ed0 <line:56:1, line:57:45> line:56:22 invalid asn1_do_adb 'const int *(int **, const int *, int)'
| |-ParmVarDecl 0x1d2d5331ce8 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x1d2d5331d68 <col:53, col:74> col:74 invalid tt 'const int *'
| `-ParmVarDecl 0x1d2d5331de8 <line:57:34, col:38> col:38 nullerr 'int'
|-FunctionDecl 0x1d2d5332150 <line:59:1, col:64> col:5 invalid asn1_do_lock 'int (int **, int, const int *)'
| |-ParmVarDecl 0x1d2d5331fa8 <col:18, col:31> col:31 invalid pval 'int **'
| |-ParmVarDecl 0x1d2d5332028 <col:37, col:41> col:41 op 'int'
| `-ParmVarDecl 0x1d2d53320a8 <col:45, col:62> col:62 invalid it 'const int *'
|-FunctionDecl 0x1d2d5330390 <line:61:1, col:58> col:6 invalid asn1_enc_init 'void (int **, const int *)'
| |-ParmVarDecl 0x1d2d5332228 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x1d2d53322a8 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x1d2d5330578 <line:62:1, col:58> col:6 invalid asn1_enc_free 'void (int **, const int *)'
| |-ParmVarDecl 0x1d2d5330460 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x1d2d53304e0 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x1d2d5330930 <line:63:1, line:64:41> line:63:5 invalid asn1_enc_restore 'int (int *, unsigned char **, int **, const int *)'
| |-ParmVarDecl 0x1d2d5330640 <col:22, col:27> col:27 len 'int *'
| |-ParmVarDecl 0x1d2d5330728 <col:32, col:48> col:48 out 'unsigned char **'
| |-ParmVarDecl 0x1d2d53307b0 <col:53, col:66> col:66 invalid pval 'int **'
| `-ParmVarDecl 0x1d2d5330830 <line:64:22, col:39> col:39 invalid it 'const int *'
|-FunctionDecl 0x1d2d5330c90 <line:65:1, line:66:38> line:65:5 invalid asn1_enc_save 'int (int **, const unsigned char *, int, const int *)'
| |-ParmVarDecl 0x1d2d5330a10 <col:19, col:32> col:32 invalid pval 'int **'
| |-ParmVarDecl 0x1d2d5330a90 <col:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x1d2d5330b10 <col:63, col:67> col:67 inlen 'int'
| `-ParmVarDecl 0x1d2d5330b90 <line:66:19, col:36> col:36 invalid it 'const int *'
|-FunctionDecl 0x1d2d5330f58 <line:68:1, col:76> col:6 invalid asn1_item_embed_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x1d2d5330d70 <col:27, col:40> col:40 invalid pval 'int **'
| |-ParmVarDecl 0x1d2d5330df0 <col:46, col:63> col:63 invalid it 'const int *'
| `-ParmVarDecl 0x1d2d5330e70 <col:67, col:71> col:71 embed 'int'
|-FunctionDecl 0x1d2d53311d0 <line:69:1, col:75> col:6 invalid asn1_primitive_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x1d2d5331030 <col:26, col:39> col:39 invalid pval 'int **'
| |-ParmVarDecl 0x1d2d53310b0 <col:45, col:62> col:62 invalid it 'const int *'
| `-ParmVarDecl 0x1d2d5331130 <col:66, col:70> col:70 embed 'int'
|-FunctionDecl 0x1d2d53323e0 <line:70:1, col:67> col:6 invalid asn1_template_free 'void (int **, const int *)'
| |-ParmVarDecl 0x1d2d53312a8 <col:25, col:38> col:38 invalid pval 'int **'
| `-ParmVarDecl 0x1d2d5331328 <col:44, col:65> col:65 invalid tt 'const int *'
|-FunctionDecl 0x1d2d53326d0 <line:72:1, line:73:41> line:72:14 invalid c2i_ASN1_OBJECT 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x1d2d53324b0 <col:30, col:44> col:44 invalid a 'int **'
| |-ParmVarDecl 0x1d2d5332568 <col:47, col:69> col:69 pp 'const unsigned char **'
| `-ParmVarDecl 0x1d2d53325e8 <line:73:30, col:35> col:35 length 'long'
|-FunctionDecl 0x1d2d5332900 <line:74:1, col:63> col:5 invalid i2c_ASN1_BIT_STRING 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x1d2d53327a0 <col:25, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x1d2d5332828 <col:45, col:61> col:61 pp 'unsigned char **'
|-FunctionDecl 0x1d2d5332b80 <line:75:1, line:76:75> line:75:18 invalid c2i_ASN1_BIT_STRING 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x1d2d53329d0 <col:38, col:56> col:56 invalid a 'int **'
| |-ParmVarDecl 0x1d2d5332a58 <line:76:38, col:60> col:60 pp 'const unsigned char **'
| `-ParmVarDecl 0x1d2d5332ad8 <col:64, col:69> col:69 length 'long'
|-FunctionDecl 0x1d2d5332d78 <line:77:1, col:57> col:5 invalid i2c_ASN1_INTEGER 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x1d2d5332c50 <col:22, col:36> col:36 invalid a 'int *'
| `-ParmVarDecl 0x1d2d5332cd8 <col:39, col:55> col:55 pp 'unsigned char **'
|-FunctionDecl 0x1d2d5332ff8 <line:78:1, line:79:43> line:78:15 invalid c2i_ASN1_INTEGER 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x1d2d5332e48 <col:32, col:47> col:47 invalid a 'int **'
| |-ParmVarDecl 0x1d2d5332ed0 <col:50, col:72> col:72 pp 'const unsigned char **'
| `-ParmVarDecl 0x1d2d5332f50 <line:79:32, col:37> col:37 length 'long'
|-FunctionDecl 0x1d2d53343d0 <line:82:1, col:79> col:5 invalid c2i_uint64_int 'int (int *, int *, const unsigned char **, long)'
| |-ParmVarDecl 0x1d2d53330c8 <col:20, col:30> col:30 invalid ret 'int *'
| |-ParmVarDecl 0x1d2d5333148 <col:35, col:40> col:40 neg 'int *'
| |-ParmVarDecl 0x1d2d53331d0 <col:45, col:67> col:67 pp 'const unsigned char **'
| `-ParmVarDecl 0x1d2d5333250 <col:71, col:76> col:76 len 'long'
|-FunctionDecl 0x1d2d5334690 <line:83:1, col:57> col:5 invalid i2c_uint64_int 'int (unsigned char *, int, int)'
| |-ParmVarDecl 0x1d2d53344a8 <col:20, col:35> col:35 p 'unsigned char *'
| |-ParmVarDecl 0x1d2d5334528 <col:38, col:47> col:47 invalid r 'int'
| `-ParmVarDecl 0x1d2d53345a8 <col:50, col:54> col:54 neg 'int'
|-FunctionDecl 0x1d2d5334890 <.//openssl//file_jk/before\crypto\asn1\a_gentm.c:20:1, line:135:1> line:20:5 invalid asn1_generalizedtime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x1d2d5334770 <col:32, col:43> col:43 used tm 'struct tm *'
| |-ParmVarDecl 0x1d2d53347f0 <col:47, col:75> col:75 invalid d 'const int *'
| `-CompoundStmt 0x1d2d533aa38 <line:21:1, line:135:1>
|   |-DeclStmt 0x1d2d5334d30 <line:22:5, col:60>
|   | `-VarDecl 0x1d2d5334a40 <col:5, col:59> col:22 used min 'const int [9]' static cinit
|   |   `-InitListExpr 0x1d2d5334ca8 <col:31, col:59> 'const int [9]'
|   |     |-IntegerLiteral 0x1d2d5334aa8 <col:33> 'int' 0
|   |     |-IntegerLiteral 0x1d2d5334ad0 <col:36> 'int' 0
|   |     |-IntegerLiteral 0x1d2d5334af8 <col:39> 'int' 1
|   |     |-IntegerLiteral 0x1d2d5334b20 <col:42> 'int' 1
|   |     |-IntegerLiteral 0x1d2d5334b48 <col:45> 'int' 0
|   |     |-IntegerLiteral 0x1d2d5334b70 <col:48> 'int' 0
|   |     |-IntegerLiteral 0x1d2d5334b98 <col:51> 'int' 0
|   |     |-IntegerLiteral 0x1d2d5334bc0 <col:54> 'int' 0
|   |     `-IntegerLiteral 0x1d2d5334be8 <col:57> 'int' 0
|   |-DeclStmt 0x1d2d53350a0 <line:23:5, col:69>
|   | `-VarDecl 0x1d2d5334db0 <col:5, col:68> col:22 used max 'const int [9]' static cinit
|   |   `-InitListExpr 0x1d2d5335018 <col:31, col:68> 'const int [9]'
|   |     |-IntegerLiteral 0x1d2d5334e18 <col:33> 'int' 99
|   |     |-IntegerLiteral 0x1d2d5334e40 <col:37> 'int' 99
|   |     |-IntegerLiteral 0x1d2d5334e68 <col:41> 'int' 12
|   |     |-IntegerLiteral 0x1d2d5334e90 <col:45> 'int' 31
|   |     |-IntegerLiteral 0x1d2d5334eb8 <col:49> 'int' 23
|   |     |-IntegerLiteral 0x1d2d5334ee0 <col:53> 'int' 59
|   |     |-IntegerLiteral 0x1d2d5334f08 <col:57> 'int' 59
|   |     |-IntegerLiteral 0x1d2d5334f30 <col:61> 'int' 12
|   |     `-IntegerLiteral 0x1d2d5334f58 <col:65> 'int' 59
|   |-DeclStmt 0x1d2d5335138 <line:24:5, col:12>
|   | `-VarDecl 0x1d2d53350d0 <col:5, col:11> col:11 used a 'char *'
|   |-DeclStmt 0x1d2d5335378 <line:25:5, col:19>
|   | |-VarDecl 0x1d2d5335168 <col:5, col:9> col:9 used n 'int'
|   | |-VarDecl 0x1d2d53351e8 <col:5, col:12> col:12 used i 'int'
|   | |-VarDecl 0x1d2d5335268 <col:5, col:15> col:15 used l 'int'
|   | `-VarDecl 0x1d2d53352e8 <col:5, col:18> col:18 used o 'int'
|   |-IfStmt 0x1d2d532f3c8 <line:27:5, line:28:18>
|   | |-OpaqueValueExpr 0x1d2d532f3b0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1d2d532f3a0 <col:9, col:18>
|   |   `-ParenExpr 0x1d2d532f380 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1d2d5335390 <col:17> 'int' 0
|   |-BinaryOperator 0x1d2d532f4b0 <line:31:5, col:9> 'int' '='
|   | |-DeclRefExpr 0x1d2d532f450 <col:5> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   | `-IntegerLiteral 0x1d2d532f488 <col:9> 'int' 0
|   |-IfStmt 0x1d2d532f5b8 <line:37:5, line:38:14>
|   | |-BinaryOperator 0x1d2d532f530 <line:37:9, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x1d2d532f518 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1d2d532f4d0 <col:9> 'int' lvalue Var 0x1d2d5335268 'l' 'int'
|   | | `-IntegerLiteral 0x1d2d532f4f0 <col:13> 'int' 13
|   | `-GotoStmt 0x1d2d532f5a0 <line:38:9, col:14> 'err' 0x1d2d532f550
|   |-ForStmt 0x1d2d5338518 <line:39:5, line:85:5>
|   | |-BinaryOperator 0x1d2d532f630 <line:39:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x1d2d532f5d0 <col:10> 'int' lvalue Var 0x1d2d53351e8 'i' 'int'
|   | | `-IntegerLiteral 0x1d2d532f608 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1d2d532f6b0 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1d2d532f698 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1d2d532f650 <col:17> 'int' lvalue Var 0x1d2d53351e8 'i' 'int'
|   | | `-IntegerLiteral 0x1d2d532f670 <col:21> 'int' 7
|   | |-UnaryOperator 0x1d2d532f6f0 <col:24, col:25> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1d2d532f6d0 <col:24> 'int' lvalue Var 0x1d2d53351e8 'i' 'int'
|   | `-CompoundStmt 0x1d2d53384c0 <col:29, line:85:5>
|   |   |-IfStmt 0x1d2d532fcf0 <line:40:9, line:45:9>
|   |   | |-BinaryOperator 0x1d2d532fb50 <line:40:13, col:73> 'int' '&&'
|   |   | | |-ParenExpr 0x1d2d532f788 <col:13, col:20> 'int'
|   |   | | | `-BinaryOperator 0x1d2d532f768 <col:14, col:19> 'int' '=='
|   |   | | |   |-ImplicitCastExpr 0x1d2d532f750 <col:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x1d2d532f708 <col:14> 'int' lvalue Var 0x1d2d53351e8 'i' 'int'
|   |   | | |   `-IntegerLiteral 0x1d2d532f728 <col:19> 'int' 6
|   |   | | `-ParenExpr 0x1d2d532fb30 <col:25, col:73> 'int'
|   |   | |   `-BinaryOperator 0x1d2d532fb10 <col:26, col:72> 'int' '||'
|   |   | |     |-BinaryOperator 0x1d2d532f9d8 <col:26, col:55> 'int' '||'
|   |   | |     | |-ParenExpr 0x1d2d532f8a0 <col:26, col:38> 'int'
|   |   | |     | | `-BinaryOperator 0x1d2d532f880 <col:27, col:35> 'int' '=='
|   |   | |     | |   |-ImplicitCastExpr 0x1d2d532f868 <col:27, col:30> 'int' <IntegralCast>
|   |   | |     | |   | `-ImplicitCastExpr 0x1d2d532f850 <col:27, col:30> 'char' <LValueToRValue>
|   |   | |     | |   |   `-ArraySubscriptExpr 0x1d2d532f818 <col:27, col:30> 'char' lvalue
|   |   | |     | |   |     |-ImplicitCastExpr 0x1d2d532f7e8 <col:27> 'char *' <LValueToRValue>
|   |   | |     | |   |     | `-DeclRefExpr 0x1d2d532f7a8 <col:27> 'char *' lvalue Var 0x1d2d53350d0 'a' 'char *'
|   |   | |     | |   |     `-ImplicitCastExpr 0x1d2d532f800 <col:29> 'int' <LValueToRValue>
|   |   | |     | |   |       `-DeclRefExpr 0x1d2d532f7c8 <col:29> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   | |     | |   `-CharacterLiteral 0x1d2d532f838 <col:35> 'int' 90
|   |   | |     | `-ParenExpr 0x1d2d532f9b8 <col:43, col:55> 'int'
|   |   | |     |   `-BinaryOperator 0x1d2d532f998 <col:44, col:52> 'int' '=='
|   |   | |     |     |-ImplicitCastExpr 0x1d2d532f980 <col:44, col:47> 'int' <IntegralCast>
|   |   | |     |     | `-ImplicitCastExpr 0x1d2d532f968 <col:44, col:47> 'char' <LValueToRValue>
|   |   | |     |     |   `-ArraySubscriptExpr 0x1d2d532f930 <col:44, col:47> 'char' lvalue
|   |   | |     |     |     |-ImplicitCastExpr 0x1d2d532f900 <col:44> 'char *' <LValueToRValue>
|   |   | |     |     |     | `-DeclRefExpr 0x1d2d532f8c0 <col:44> 'char *' lvalue Var 0x1d2d53350d0 'a' 'char *'
|   |   | |     |     |     `-ImplicitCastExpr 0x1d2d532f918 <col:46> 'int' <LValueToRValue>
|   |   | |     |     |       `-DeclRefExpr 0x1d2d532f8e0 <col:46> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   | |     |     `-CharacterLiteral 0x1d2d532f950 <col:52> 'int' 43
|   |   | |     `-ParenExpr 0x1d2d532faf0 <col:60, col:72> 'int'
|   |   | |       `-BinaryOperator 0x1d2d532fad0 <col:61, col:69> 'int' '=='
|   |   | |         |-ImplicitCastExpr 0x1d2d532fab8 <col:61, col:64> 'int' <IntegralCast>
|   |   | |         | `-ImplicitCastExpr 0x1d2d532faa0 <col:61, col:64> 'char' <LValueToRValue>
|   |   | |         |   `-ArraySubscriptExpr 0x1d2d532fa68 <col:61, col:64> 'char' lvalue
|   |   | |         |     |-ImplicitCastExpr 0x1d2d532fa38 <col:61> 'char *' <LValueToRValue>
|   |   | |         |     | `-DeclRefExpr 0x1d2d532f9f8 <col:61> 'char *' lvalue Var 0x1d2d53350d0 'a' 'char *'
|   |   | |         |     `-ImplicitCastExpr 0x1d2d532fa50 <col:63> 'int' <LValueToRValue>
|   |   | |         |       `-DeclRefExpr 0x1d2d532fa18 <col:63> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   | |         `-CharacterLiteral 0x1d2d532fa88 <col:69> 'int' 45
|   |   | `-CompoundStmt 0x1d2d532fcc8 <col:76, line:45:9>
|   |   |   |-UnaryOperator 0x1d2d532fb90 <line:41:13, col:14> 'int' postfix '++'
|   |   |   | `-DeclRefExpr 0x1d2d532fb70 <col:13> 'int' lvalue Var 0x1d2d53351e8 'i' 'int'
|   |   |   |-IfStmt 0x1d2d532fca8 <line:42:13, line:43:30>
|   |   |   | |-ImplicitCastExpr 0x1d2d532fbe0 <line:42:17> 'struct tm *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x1d2d532fba8 <col:17> 'struct tm *' lvalue ParmVar 0x1d2d5334770 'tm' 'struct tm *'
|   |   |   | `-BinaryOperator 0x1d2d532fc88 <line:43:17, col:30> 'int' '='
|   |   |   |   |-MemberExpr 0x1d2d532fc30 <col:17, col:21> 'int' lvalue ->tm_sec 0x1d2d5313a38
|   |   |   |   | `-ImplicitCastExpr 0x1d2d532fc18 <col:17> 'struct tm *' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x1d2d532fbf8 <col:17> 'struct tm *' lvalue ParmVar 0x1d2d5334770 'tm' 'struct tm *'
|   |   |   |   `-IntegerLiteral 0x1d2d532fc60 <col:30> 'int' 0
|   |   |   `-BreakStmt 0x1d2d532fcc0 <line:44:13>
|   |   |-IfStmt 0x1d2d532ff70 <line:46:9, line:47:18>
|   |   | |-BinaryOperator 0x1d2d532ff38 <line:46:13, col:40> 'int' '||'
|   |   | | |-ParenExpr 0x1d2d532fe00 <col:13, col:24> 'int'
|   |   | | | `-BinaryOperator 0x1d2d532fde0 <col:14, col:21> 'int' '<'
|   |   | | |   |-ImplicitCastExpr 0x1d2d532fdc8 <col:14, col:17> 'int' <IntegralCast>
|   |   | | |   | `-ImplicitCastExpr 0x1d2d532fdb0 <col:14, col:17> 'char' <LValueToRValue>
|   |   | | |   |   `-ArraySubscriptExpr 0x1d2d532fd78 <col:14, col:17> 'char' lvalue
|   |   | | |   |     |-ImplicitCastExpr 0x1d2d532fd48 <col:14> 'char *' <LValueToRValue>
|   |   | | |   |     | `-DeclRefExpr 0x1d2d532fd08 <col:14> 'char *' lvalue Var 0x1d2d53350d0 'a' 'char *'
|   |   | | |   |     `-ImplicitCastExpr 0x1d2d532fd60 <col:16> 'int' <LValueToRValue>
|   |   | | |   |       `-DeclRefExpr 0x1d2d532fd28 <col:16> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   | | |   `-CharacterLiteral 0x1d2d532fd98 <col:21> 'int' 48
|   |   | | `-ParenExpr 0x1d2d532ff18 <col:29, col:40> 'int'
|   |   | |   `-BinaryOperator 0x1d2d532fef8 <col:30, col:37> 'int' '>'
|   |   | |     |-ImplicitCastExpr 0x1d2d532fee0 <col:30, col:33> 'int' <IntegralCast>
|   |   | |     | `-ImplicitCastExpr 0x1d2d532fec8 <col:30, col:33> 'char' <LValueToRValue>
|   |   | |     |   `-ArraySubscriptExpr 0x1d2d532fe90 <col:30, col:33> 'char' lvalue
|   |   | |     |     |-ImplicitCastExpr 0x1d2d532fe60 <col:30> 'char *' <LValueToRValue>
|   |   | |     |     | `-DeclRefExpr 0x1d2d532fe20 <col:30> 'char *' lvalue Var 0x1d2d53350d0 'a' 'char *'
|   |   | |     |     `-ImplicitCastExpr 0x1d2d532fe78 <col:32> 'int' <LValueToRValue>
|   |   | |     |       `-DeclRefExpr 0x1d2d532fe40 <col:32> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   | |     `-CharacterLiteral 0x1d2d532feb0 <col:37> 'int' 57
|   |   | `-GotoStmt 0x1d2d532ff58 <line:47:13, col:18> 'err' 0x1d2d532f550
|   |   |-BinaryOperator 0x1d2d53300b8 <line:48:9, col:20> 'int' '='
|   |   | |-DeclRefExpr 0x1d2d532ff88 <col:9> 'int' lvalue Var 0x1d2d5335168 'n' 'int'
|   |   | `-BinaryOperator 0x1d2d5330098 <col:13, col:20> 'int' '-'
|   |   |   |-ImplicitCastExpr 0x1d2d5330080 <col:13, col:16> 'int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x1d2d5330068 <col:13, col:16> 'char' <LValueToRValue>
|   |   |   |   `-ArraySubscriptExpr 0x1d2d5330030 <col:13, col:16> 'char' lvalue
|   |   |   |     |-ImplicitCastExpr 0x1d2d5330000 <col:13> 'char *' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x1d2d532ffc0 <col:13> 'char *' lvalue Var 0x1d2d53350d0 'a' 'char *'
|   |   |   |     `-ImplicitCastExpr 0x1d2d5330018 <col:15> 'int' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x1d2d532ffe0 <col:15> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   |   `-CharacterLiteral 0x1d2d5330050 <col:20> 'int' 48
|   |   |-IfStmt 0x1d2d5330180 <line:49:9, line:50:18>
|   |   | |-BinaryOperator 0x1d2d5330148 <line:49:13, col:19> 'int' '>'
|   |   | | |-UnaryOperator 0x1d2d53300f8 <col:13, col:15> 'int' prefix '++'
|   |   | | | `-DeclRefExpr 0x1d2d53300d8 <col:15> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   | | `-ImplicitCastExpr 0x1d2d5330130 <col:19> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1d2d5330110 <col:19> 'int' lvalue Var 0x1d2d5335268 'l' 'int'
|   |   | `-GotoStmt 0x1d2d5330168 <line:50:13, col:18> 'err' 0x1d2d532f550
|   |   |-IfStmt 0x1d2d5337490 <line:52:9, line:53:18>
|   |   | |-BinaryOperator 0x1d2d5337458 <line:52:13, col:40> 'int' '||'
|   |   | | |-ParenExpr 0x1d2d5330290 <col:13, col:24> 'int'
|   |   | | | `-BinaryOperator 0x1d2d5330270 <col:14, col:21> 'int' '<'
|   |   | | |   |-ImplicitCastExpr 0x1d2d5330258 <col:14, col:17> 'int' <IntegralCast>
|   |   | | |   | `-ImplicitCastExpr 0x1d2d5330240 <col:14, col:17> 'char' <LValueToRValue>
|   |   | | |   |   `-ArraySubscriptExpr 0x1d2d5330208 <col:14, col:17> 'char' lvalue
|   |   | | |   |     |-ImplicitCastExpr 0x1d2d53301d8 <col:14> 'char *' <LValueToRValue>
|   |   | | |   |     | `-DeclRefExpr 0x1d2d5330198 <col:14> 'char *' lvalue Var 0x1d2d53350d0 'a' 'char *'
|   |   | | |   |     `-ImplicitCastExpr 0x1d2d53301f0 <col:16> 'int' <LValueToRValue>
|   |   | | |   |       `-DeclRefExpr 0x1d2d53301b8 <col:16> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   | | |   `-CharacterLiteral 0x1d2d5330228 <col:21> 'int' 48
|   |   | | `-ParenExpr 0x1d2d5337438 <col:29, col:40> 'int'
|   |   | |   `-BinaryOperator 0x1d2d5337418 <col:30, col:37> 'int' '>'
|   |   | |     |-ImplicitCastExpr 0x1d2d5337400 <col:30, col:33> 'int' <IntegralCast>
|   |   | |     | `-ImplicitCastExpr 0x1d2d5330358 <col:30, col:33> 'char' <LValueToRValue>
|   |   | |     |   `-ArraySubscriptExpr 0x1d2d5330320 <col:30, col:33> 'char' lvalue
|   |   | |     |     |-ImplicitCastExpr 0x1d2d53302f0 <col:30> 'char *' <LValueToRValue>
|   |   | |     |     | `-DeclRefExpr 0x1d2d53302b0 <col:30> 'char *' lvalue Var 0x1d2d53350d0 'a' 'char *'
|   |   | |     |     `-ImplicitCastExpr 0x1d2d5330308 <col:32> 'int' <LValueToRValue>
|   |   | |     |       `-DeclRefExpr 0x1d2d53302d0 <col:32> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   | |     `-CharacterLiteral 0x1d2d5330340 <col:37> 'int' 57
|   |   | `-GotoStmt 0x1d2d5337478 <line:53:13, col:18> 'err' 0x1d2d532f550
|   |   |-BinaryOperator 0x1d2d5337680 <line:54:9, col:31> 'int' '='
|   |   | |-DeclRefExpr 0x1d2d53374a8 <col:9> 'int' lvalue Var 0x1d2d5335168 'n' 'int'
|   |   | `-BinaryOperator 0x1d2d5337660 <col:13, col:31> 'int' '-'
|   |   |   |-BinaryOperator 0x1d2d5337628 <col:13, col:27> 'int' '+'
|   |   |   | |-ParenExpr 0x1d2d5337548 <col:13, col:20> 'int'
|   |   |   | | `-BinaryOperator 0x1d2d5337528 <col:14, col:18> 'int' '*'
|   |   |   | |   |-ImplicitCastExpr 0x1d2d5337510 <col:14> 'int' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x1d2d53374c8 <col:14> 'int' lvalue Var 0x1d2d5335168 'n' 'int'
|   |   |   | |   `-IntegerLiteral 0x1d2d53374e8 <col:18> 'int' 10
|   |   |   | `-ImplicitCastExpr 0x1d2d5337610 <col:24, col:27> 'int' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x1d2d53375f8 <col:24, col:27> 'char' <LValueToRValue>
|   |   |   |     `-ArraySubscriptExpr 0x1d2d53375d8 <col:24, col:27> 'char' lvalue
|   |   |   |       |-ImplicitCastExpr 0x1d2d53375a8 <col:24> 'char *' <LValueToRValue>
|   |   |   |       | `-DeclRefExpr 0x1d2d5337568 <col:24> 'char *' lvalue Var 0x1d2d53350d0 'a' 'char *'
|   |   |   |       `-ImplicitCastExpr 0x1d2d53375c0 <col:26> 'int' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x1d2d5337588 <col:26> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   |   `-CharacterLiteral 0x1d2d5337648 <col:31> 'int' 48
|   |   |-IfStmt 0x1d2d5337748 <line:55:9, line:56:18>
|   |   | |-BinaryOperator 0x1d2d5337710 <line:55:13, col:19> 'int' '>'
|   |   | | |-UnaryOperator 0x1d2d53376c0 <col:13, col:15> 'int' prefix '++'
|   |   | | | `-DeclRefExpr 0x1d2d53376a0 <col:15> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   | | `-ImplicitCastExpr 0x1d2d53376f8 <col:19> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1d2d53376d8 <col:19> 'int' lvalue Var 0x1d2d5335268 'l' 'int'
|   |   | `-GotoStmt 0x1d2d5337730 <line:56:13, col:18> 'err' 0x1d2d532f550
|   |   |-IfStmt 0x1d2d5337a08 <line:58:9, line:59:18>
|   |   | |-BinaryOperator 0x1d2d53379d0 <line:58:13, col:40> 'int' '||'
|   |   | | |-ParenExpr 0x1d2d5337878 <col:13, col:24> 'int'
|   |   | | | `-BinaryOperator 0x1d2d5337858 <col:14, col:23> 'int' '<'
|   |   | | |   |-ImplicitCastExpr 0x1d2d5337828 <col:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x1d2d5337760 <col:14> 'int' lvalue Var 0x1d2d5335168 'n' 'int'
|   |   | | |   `-ImplicitCastExpr 0x1d2d5337840 <col:18, col:23> 'int' <LValueToRValue>
|   |   | | |     `-ArraySubscriptExpr 0x1d2d5337808 <col:18, col:23> 'const int' lvalue
|   |   | | |       |-ImplicitCastExpr 0x1d2d53377d8 <col:18> 'const int *' <ArrayToPointerDecay>
|   |   | | |       | `-DeclRefExpr 0x1d2d5337780 <col:18> 'const int [9]' lvalue Var 0x1d2d5334a40 'min' 'const int [9]'
|   |   | | |       `-ImplicitCastExpr 0x1d2d53377f0 <col:22> 'int' <LValueToRValue>
|   |   | | |         `-DeclRefExpr 0x1d2d53377b8 <col:22> 'int' lvalue Var 0x1d2d53351e8 'i' 'int'
|   |   | | `-ParenExpr 0x1d2d53379b0 <col:29, col:40> 'int'
|   |   | |   `-BinaryOperator 0x1d2d5337990 <col:30, col:39> 'int' '>'
|   |   | |     |-ImplicitCastExpr 0x1d2d5337960 <col:30> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x1d2d5337898 <col:30> 'int' lvalue Var 0x1d2d5335168 'n' 'int'
|   |   | |     `-ImplicitCastExpr 0x1d2d5337978 <col:34, col:39> 'int' <LValueToRValue>
|   |   | |       `-ArraySubscriptExpr 0x1d2d5337940 <col:34, col:39> 'const int' lvalue
|   |   | |         |-ImplicitCastExpr 0x1d2d5337910 <col:34> 'const int *' <ArrayToPointerDecay>
|   |   | |         | `-DeclRefExpr 0x1d2d53378b8 <col:34> 'const int [9]' lvalue Var 0x1d2d5334db0 'max' 'const int [9]'
|   |   | |         `-ImplicitCastExpr 0x1d2d5337928 <col:38> 'int' <LValueToRValue>
|   |   | |           `-DeclRefExpr 0x1d2d53378f0 <col:38> 'int' lvalue Var 0x1d2d53351e8 'i' 'int'
|   |   | `-GotoStmt 0x1d2d53379f0 <line:59:13, col:18> 'err' 0x1d2d532f550
|   |   `-IfStmt 0x1d2d53384a8 <line:60:9, line:84:9>
|   |     |-ImplicitCastExpr 0x1d2d5337a40 <line:60:13> 'struct tm *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1d2d5337a20 <col:13> 'struct tm *' lvalue ParmVar 0x1d2d5334770 'tm' 'struct tm *'
|   |     `-CompoundStmt 0x1d2d5338490 <col:17, line:84:9>
|   |       `-SwitchStmt 0x1d2d5337a90 <line:61:13, line:83:13>
|   |         |-ImplicitCastExpr 0x1d2d5337a78 <line:61:21> 'int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x1d2d5337a58 <col:21> 'int' lvalue Var 0x1d2d53351e8 'i' 'int'
|   |         `-CompoundStmt 0x1d2d5338410 <col:24, line:83:13>
|   |           |-CaseStmt 0x1d2d5337af0 <line:62:13, line:63:41>
|   |           | |-ConstantExpr 0x1d2d5337ad8 <line:62:18> 'int'
|   |           | | `-IntegerLiteral 0x1d2d5337ab0 <col:18> 'int' 0
|   |           | `-BinaryOperator 0x1d2d5337c48 <line:63:17, col:41> 'int' '='
|   |           |   |-MemberExpr 0x1d2d5337b50 <col:17, col:21> 'int' lvalue ->tm_year 0x1d2d5313c68
|   |           |   | `-ImplicitCastExpr 0x1d2d5337b38 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x1d2d5337b18 <col:17> 'struct tm *' lvalue ParmVar 0x1d2d5334770 'tm' 'struct tm *'
|   |           |   `-BinaryOperator 0x1d2d5337c28 <col:31, col:41> 'int' '-'
|   |           |     |-BinaryOperator 0x1d2d5337be0 <col:31, col:35> 'int' '*'
|   |           |     | |-ImplicitCastExpr 0x1d2d5337bc8 <col:31> 'int' <LValueToRValue>
|   |           |     | | `-DeclRefExpr 0x1d2d5337b80 <col:31> 'int' lvalue Var 0x1d2d5335168 'n' 'int'
|   |           |     | `-IntegerLiteral 0x1d2d5337ba0 <col:35> 'int' 100
|   |           |     `-IntegerLiteral 0x1d2d5337c00 <col:41> 'int' 1900
|   |           |-BreakStmt 0x1d2d5337c68 <line:64:17>
|   |           |-CaseStmt 0x1d2d5337cb0 <line:65:13, line:66:32>
|   |           | |-ConstantExpr 0x1d2d5337c98 <line:65:18> 'int'
|   |           | | `-IntegerLiteral 0x1d2d5337c70 <col:18> 'int' 1
|   |           | `-CompoundAssignOperator 0x1d2d5337d78 <line:66:17, col:32> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |           |   |-MemberExpr 0x1d2d5337d10 <col:17, col:21> 'int' lvalue ->tm_year 0x1d2d5313c68
|   |           |   | `-ImplicitCastExpr 0x1d2d5337cf8 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x1d2d5337cd8 <col:17> 'struct tm *' lvalue ParmVar 0x1d2d5334770 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x1d2d5337d60 <col:32> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x1d2d5337d40 <col:32> 'int' lvalue Var 0x1d2d5335168 'n' 'int'
|   |           |-BreakStmt 0x1d2d5337da8 <line:67:17>
|   |           |-CaseStmt 0x1d2d5337df0 <line:68:13, line:69:34>
|   |           | |-ConstantExpr 0x1d2d5337dd8 <line:68:18> 'int'
|   |           | | `-IntegerLiteral 0x1d2d5337db0 <col:18> 'int' 2
|   |           | `-BinaryOperator 0x1d2d5337f00 <line:69:17, col:34> 'int' '='
|   |           |   |-MemberExpr 0x1d2d5337e50 <col:17, col:21> 'int' lvalue ->tm_mon 0x1d2d5313bf8
|   |           |   | `-ImplicitCastExpr 0x1d2d5337e38 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x1d2d5337e18 <col:17> 'struct tm *' lvalue ParmVar 0x1d2d5334770 'tm' 'struct tm *'
|   |           |   `-BinaryOperator 0x1d2d5337ee0 <col:30, col:34> 'int' '-'
|   |           |     |-ImplicitCastExpr 0x1d2d5337ec8 <col:30> 'int' <LValueToRValue>
|   |           |     | `-DeclRefExpr 0x1d2d5337e80 <col:30> 'int' lvalue Var 0x1d2d5335168 'n' 'int'
|   |           |     `-IntegerLiteral 0x1d2d5337ea0 <col:34> 'int' 1
|   |           |-BreakStmt 0x1d2d5337f20 <line:70:17>
|   |           |-CaseStmt 0x1d2d5337f68 <line:71:13, line:72:31>
|   |           | |-ConstantExpr 0x1d2d5337f50 <line:71:18> 'int'
|   |           | | `-IntegerLiteral 0x1d2d5337f28 <col:18> 'int' 3
|   |           | `-BinaryOperator 0x1d2d5338030 <line:72:17, col:31> 'int' '='
|   |           |   |-MemberExpr 0x1d2d5337fc8 <col:17, col:21> 'int' lvalue ->tm_mday 0x1d2d5313b88
|   |           |   | `-ImplicitCastExpr 0x1d2d5337fb0 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x1d2d5337f90 <col:17> 'struct tm *' lvalue ParmVar 0x1d2d5334770 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x1d2d5338018 <col:31> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x1d2d5337ff8 <col:31> 'int' lvalue Var 0x1d2d5335168 'n' 'int'
|   |           |-BreakStmt 0x1d2d5338050 <line:73:17>
|   |           |-CaseStmt 0x1d2d5338098 <line:74:13, line:75:31>
|   |           | |-ConstantExpr 0x1d2d5338080 <line:74:18> 'int'
|   |           | | `-IntegerLiteral 0x1d2d5338058 <col:18> 'int' 4
|   |           | `-BinaryOperator 0x1d2d5338160 <line:75:17, col:31> 'int' '='
|   |           |   |-MemberExpr 0x1d2d53380f8 <col:17, col:21> 'int' lvalue ->tm_hour 0x1d2d5313b18
|   |           |   | `-ImplicitCastExpr 0x1d2d53380e0 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x1d2d53380c0 <col:17> 'struct tm *' lvalue ParmVar 0x1d2d5334770 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x1d2d5338148 <col:31> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x1d2d5338128 <col:31> 'int' lvalue Var 0x1d2d5335168 'n' 'int'
|   |           |-BreakStmt 0x1d2d5338180 <line:76:17>
|   |           |-CaseStmt 0x1d2d53381c8 <line:77:13, line:78:30>
|   |           | |-ConstantExpr 0x1d2d53381b0 <line:77:18> 'int'
|   |           | | `-IntegerLiteral 0x1d2d5338188 <col:18> 'int' 5
|   |           | `-BinaryOperator 0x1d2d5338290 <line:78:17, col:30> 'int' '='
|   |           |   |-MemberExpr 0x1d2d5338228 <col:17, col:21> 'int' lvalue ->tm_min 0x1d2d5313aa8
|   |           |   | `-ImplicitCastExpr 0x1d2d5338210 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x1d2d53381f0 <col:17> 'struct tm *' lvalue ParmVar 0x1d2d5334770 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x1d2d5338278 <col:30> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x1d2d5338258 <col:30> 'int' lvalue Var 0x1d2d5335168 'n' 'int'
|   |           |-BreakStmt 0x1d2d53382b0 <line:79:17>
|   |           |-CaseStmt 0x1d2d53382f8 <line:80:13, line:81:30>
|   |           | |-ConstantExpr 0x1d2d53382e0 <line:80:18> 'int'
|   |           | | `-IntegerLiteral 0x1d2d53382b8 <col:18> 'int' 6
|   |           | `-BinaryOperator 0x1d2d53383c0 <line:81:17, col:30> 'int' '='
|   |           |   |-MemberExpr 0x1d2d5338358 <col:17, col:21> 'int' lvalue ->tm_sec 0x1d2d5313a38
|   |           |   | `-ImplicitCastExpr 0x1d2d5338340 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x1d2d5338320 <col:17> 'struct tm *' lvalue ParmVar 0x1d2d5334770 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x1d2d53383a8 <col:30> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x1d2d5338388 <col:30> 'int' lvalue Var 0x1d2d5335168 'n' 'int'
|   |           `-BreakStmt 0x1d2d53383e0 <line:82:17>
|   |-IfStmt 0x1d2d5338be0 <line:90:5, line:99:5>
|   | |-BinaryOperator 0x1d2d5338628 <line:90:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x1d2d5338610 <col:9, col:12> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1d2d53385f8 <col:9, col:12> 'char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x1d2d53385c0 <col:9, col:12> 'char' lvalue
|   | | |     |-ImplicitCastExpr 0x1d2d5338590 <col:9> 'char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x1d2d5338550 <col:9> 'char *' lvalue Var 0x1d2d53350d0 'a' 'char *'
|   | | |     `-ImplicitCastExpr 0x1d2d53385a8 <col:11> 'int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1d2d5338570 <col:11> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   | | `-CharacterLiteral 0x1d2d53385e0 <col:17> 'int' 46
|   | `-CompoundStmt 0x1d2d5338bb0 <col:22, line:99:5>
|   |   |-IfStmt 0x1d2d53386f0 <line:91:9, line:92:18>
|   |   | |-BinaryOperator 0x1d2d53386b8 <line:91:13, col:19> 'int' '>'
|   |   | | |-UnaryOperator 0x1d2d5338668 <col:13, col:15> 'int' prefix '++'
|   |   | | | `-DeclRefExpr 0x1d2d5338648 <col:15> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   | | `-ImplicitCastExpr 0x1d2d53386a0 <col:19> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1d2d5338680 <col:19> 'int' lvalue Var 0x1d2d5335268 'l' 'int'
|   |   | `-GotoStmt 0x1d2d53386d8 <line:92:13, col:18> 'err' 0x1d2d532f550
|   |   |-BinaryOperator 0x1d2d5338760 <line:93:9, col:13> 'int' '='
|   |   | |-DeclRefExpr 0x1d2d5338708 <col:9> 'int' lvalue Var 0x1d2d53351e8 'i' 'int'
|   |   | `-ImplicitCastExpr 0x1d2d5338748 <col:13> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1d2d5338728 <col:13> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   |-WhileStmt 0x1d2d5338ad8 <line:94:9, line:95:14>
|   |   | |-BinaryOperator 0x1d2d5338a80 <line:94:16, col:57> 'int' '&&'
|   |   | | |-BinaryOperator 0x1d2d53389b0 <col:16, col:45> 'int' '&&'
|   |   | | | |-ParenExpr 0x1d2d5338878 <col:16, col:28> 'int'
|   |   | | | | `-BinaryOperator 0x1d2d5338858 <col:17, col:25> 'int' '>='
|   |   | | | |   |-ImplicitCastExpr 0x1d2d5338840 <col:17, col:20> 'int' <IntegralCast>
|   |   | | | |   | `-ImplicitCastExpr 0x1d2d5338828 <col:17, col:20> 'char' <LValueToRValue>
|   |   | | | |   |   `-ArraySubscriptExpr 0x1d2d53387f0 <col:17, col:20> 'char' lvalue
|   |   | | | |   |     |-ImplicitCastExpr 0x1d2d53387c0 <col:17> 'char *' <LValueToRValue>
|   |   | | | |   |     | `-DeclRefExpr 0x1d2d5338780 <col:17> 'char *' lvalue Var 0x1d2d53350d0 'a' 'char *'
|   |   | | | |   |     `-ImplicitCastExpr 0x1d2d53387d8 <col:19> 'int' <LValueToRValue>
|   |   | | | |   |       `-DeclRefExpr 0x1d2d53387a0 <col:19> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   | | | |   `-CharacterLiteral 0x1d2d5338810 <col:25> 'int' 48
|   |   | | | `-ParenExpr 0x1d2d5338990 <col:33, col:45> 'int'
|   |   | | |   `-BinaryOperator 0x1d2d5338970 <col:34, col:42> 'int' '<='
|   |   | | |     |-ImplicitCastExpr 0x1d2d5338958 <col:34, col:37> 'int' <IntegralCast>
|   |   | | |     | `-ImplicitCastExpr 0x1d2d5338940 <col:34, col:37> 'char' <LValueToRValue>
|   |   | | |     |   `-ArraySubscriptExpr 0x1d2d5338908 <col:34, col:37> 'char' lvalue
|   |   | | |     |     |-ImplicitCastExpr 0x1d2d53388d8 <col:34> 'char *' <LValueToRValue>
|   |   | | |     |     | `-DeclRefExpr 0x1d2d5338898 <col:34> 'char *' lvalue Var 0x1d2d53350d0 'a' 'char *'
|   |   | | |     |     `-ImplicitCastExpr 0x1d2d53388f0 <col:36> 'int' <LValueToRValue>
|   |   | | |     |       `-DeclRefExpr 0x1d2d53388b8 <col:36> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   | | |     `-CharacterLiteral 0x1d2d5338928 <col:42> 'int' 57
|   |   | | `-ParenExpr 0x1d2d5338a60 <col:50, col:57> 'int'
|   |   | |   `-BinaryOperator 0x1d2d5338a40 <col:51, col:56> 'int' '<='
|   |   | |     |-ImplicitCastExpr 0x1d2d5338a10 <col:51> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x1d2d53389d0 <col:51> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   | |     `-ImplicitCastExpr 0x1d2d5338a28 <col:56> 'int' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x1d2d53389f0 <col:56> 'int' lvalue Var 0x1d2d5335268 'l' 'int'
|   |   | `-UnaryOperator 0x1d2d5338ac0 <line:95:13, col:14> 'int' postfix '++'
|   |   |   `-DeclRefExpr 0x1d2d5338aa0 <col:13> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   `-IfStmt 0x1d2d5338b98 <line:97:9, line:98:18>
|   |     |-BinaryOperator 0x1d2d5338b60 <line:97:13, col:18> 'int' '=='
|   |     | |-ImplicitCastExpr 0x1d2d5338b30 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1d2d5338af0 <col:13> 'int' lvalue Var 0x1d2d53351e8 'i' 'int'
|   |     | `-ImplicitCastExpr 0x1d2d5338b48 <col:18> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1d2d5338b10 <col:18> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |     `-GotoStmt 0x1d2d5338b80 <line:98:13, col:18> 'err' 0x1d2d532f550
|   |-IfStmt 0x1d2d533a8e0 <line:101:5, line:131:5> has_else
|   | |-BinaryOperator 0x1d2d5338cd0 <line:101:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x1d2d5338cb8 <col:9, col:12> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1d2d5338ca0 <col:9, col:12> 'char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x1d2d5338c68 <col:9, col:12> 'char' lvalue
|   | | |     |-ImplicitCastExpr 0x1d2d5338c38 <col:9> 'char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x1d2d5338bf8 <col:9> 'char *' lvalue Var 0x1d2d53350d0 'a' 'char *'
|   | | |     `-ImplicitCastExpr 0x1d2d5338c50 <col:11> 'int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1d2d5338c18 <col:11> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   | | `-CharacterLiteral 0x1d2d5338c88 <col:17> 'int' 90
|   | |-UnaryOperator 0x1d2d5338d10 <line:102:9, col:10> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1d2d5338cf0 <col:9> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   | `-IfStmt 0x1d2d533a8b8 <line:103:10, line:131:5> has_else
|   |   |-BinaryOperator 0x1d2d5338f58 <line:103:14, col:43> 'int' '||'
|   |   | |-ParenExpr 0x1d2d5338e20 <col:14, col:26> 'int'
|   |   | | `-BinaryOperator 0x1d2d5338e00 <col:15, col:23> 'int' '=='
|   |   | |   |-ImplicitCastExpr 0x1d2d5338de8 <col:15, col:18> 'int' <IntegralCast>
|   |   | |   | `-ImplicitCastExpr 0x1d2d5338dd0 <col:15, col:18> 'char' <LValueToRValue>
|   |   | |   |   `-ArraySubscriptExpr 0x1d2d5338d98 <col:15, col:18> 'char' lvalue
|   |   | |   |     |-ImplicitCastExpr 0x1d2d5338d68 <col:15> 'char *' <LValueToRValue>
|   |   | |   |     | `-DeclRefExpr 0x1d2d5338d28 <col:15> 'char *' lvalue Var 0x1d2d53350d0 'a' 'char *'
|   |   | |   |     `-ImplicitCastExpr 0x1d2d5338d80 <col:17> 'int' <LValueToRValue>
|   |   | |   |       `-DeclRefExpr 0x1d2d5338d48 <col:17> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   | |   `-CharacterLiteral 0x1d2d5338db8 <col:23> 'int' 43
|   |   | `-ParenExpr 0x1d2d5338f38 <col:31, col:43> 'int'
|   |   |   `-BinaryOperator 0x1d2d5338f18 <col:32, col:40> 'int' '=='
|   |   |     |-ImplicitCastExpr 0x1d2d5338f00 <col:32, col:35> 'int' <IntegralCast>
|   |   |     | `-ImplicitCastExpr 0x1d2d5338ee8 <col:32, col:35> 'char' <LValueToRValue>
|   |   |     |   `-ArraySubscriptExpr 0x1d2d5338eb0 <col:32, col:35> 'char' lvalue
|   |   |     |     |-ImplicitCastExpr 0x1d2d5338e80 <col:32> 'char *' <LValueToRValue>
|   |   |     |     | `-DeclRefExpr 0x1d2d5338e40 <col:32> 'char *' lvalue Var 0x1d2d53350d0 'a' 'char *'
|   |   |     |     `-ImplicitCastExpr 0x1d2d5338e98 <col:34> 'int' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x1d2d5338e60 <col:34> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   |     `-CharacterLiteral 0x1d2d5338ed0 <col:40> 'int' 45
|   |   |-CompoundStmt 0x1d2d533a790 <col:46, line:128:5>
|   |   | |-DeclStmt 0x1d2d5339248 <line:104:9, col:55>
|   |   | | |-VarDecl 0x1d2d5338f90 <col:9, col:42> col:13 used offsign 'int' cinit
|   |   | | | `-ConditionalOperator 0x1d2d5339158 <col:23, col:42> 'int'
|   |   | | |   |-BinaryOperator 0x1d2d53390d0 <col:23, col:31> 'int' '=='
|   |   | | |   | |-ImplicitCastExpr 0x1d2d53390b8 <col:23, col:26> 'int' <IntegralCast>
|   |   | | |   | | `-ImplicitCastExpr 0x1d2d53390a0 <col:23, col:26> 'char' <LValueToRValue>
|   |   | | |   | |   `-ArraySubscriptExpr 0x1d2d5339068 <col:23, col:26> 'char' lvalue
|   |   | | |   | |     |-ImplicitCastExpr 0x1d2d5339038 <col:23> 'char *' <LValueToRValue>
|   |   | | |   | |     | `-DeclRefExpr 0x1d2d5338ff8 <col:23> 'char *' lvalue Var 0x1d2d53350d0 'a' 'char *'
|   |   | | |   | |     `-ImplicitCastExpr 0x1d2d5339050 <col:25> 'int' <LValueToRValue>
|   |   | | |   | |       `-DeclRefExpr 0x1d2d5339018 <col:25> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   | | |   | `-CharacterLiteral 0x1d2d5339088 <col:31> 'int' 45
|   |   | | |   |-IntegerLiteral 0x1d2d53390f0 <col:37> 'int' 1
|   |   | | |   `-UnaryOperator 0x1d2d5339140 <col:41, col:42> 'int' prefix '-'
|   |   | | |     `-IntegerLiteral 0x1d2d5339118 <col:42> 'int' 1
|   |   | | `-VarDecl 0x1d2d53391a0 <col:9, col:54> col:45 used offset 'int' cinit
|   |   | |   `-IntegerLiteral 0x1d2d5339208 <col:54> 'int' 0
|   |   | |-UnaryOperator 0x1d2d5339280 <line:105:9, col:10> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x1d2d5339260 <col:9> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   | |-IfStmt 0x1d2d5339388 <line:106:9, line:107:18>
|   |   | | |-BinaryOperator 0x1d2d5339350 <line:106:13, col:21> 'int' '>'
|   |   | | | |-BinaryOperator 0x1d2d53392f8 <col:13, col:17> 'int' '+'
|   |   | | | | |-ImplicitCastExpr 0x1d2d53392e0 <col:13> 'int' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x1d2d5339298 <col:13> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   | | | | `-IntegerLiteral 0x1d2d53392b8 <col:17> 'int' 4
|   |   | | | `-ImplicitCastExpr 0x1d2d5339338 <col:21> 'int' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x1d2d5339318 <col:21> 'int' lvalue Var 0x1d2d5335268 'l' 'int'
|   |   | | `-GotoStmt 0x1d2d5339370 <line:107:13, col:18> 'err' 0x1d2d532f550
|   |   | |-ForStmt 0x1d2d533a3a8 <line:108:9, line:125:9>
|   |   | | |-BinaryOperator 0x1d2d53393e8 <line:108:14, col:18> 'int' '='
|   |   | | | |-DeclRefExpr 0x1d2d53393a0 <col:14> 'int' lvalue Var 0x1d2d53351e8 'i' 'int'
|   |   | | | `-IntegerLiteral 0x1d2d53393c0 <col:18> 'int' 7
|   |   | | |-<<<NULL>>>
|   |   | | |-BinaryOperator 0x1d2d5339480 <col:21, col:25> 'int' '<'
|   |   | | | |-ImplicitCastExpr 0x1d2d5339468 <col:21> 'int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x1d2d5339420 <col:21> 'int' lvalue Var 0x1d2d53351e8 'i' 'int'
|   |   | | | `-IntegerLiteral 0x1d2d5339440 <col:25> 'int' 9
|   |   | | |-UnaryOperator 0x1d2d53394c0 <col:28, col:29> 'int' postfix '++'
|   |   | | | `-DeclRefExpr 0x1d2d53394a0 <col:28> 'int' lvalue Var 0x1d2d53351e8 'i' 'int'
|   |   | | `-CompoundStmt 0x1d2d533a358 <col:33, line:125:9>
|   |   | |   |-IfStmt 0x1d2d5339740 <line:109:13, line:110:22>
|   |   | |   | |-BinaryOperator 0x1d2d5339708 <line:109:17, col:44> 'int' '||'
|   |   | |   | | |-ParenExpr 0x1d2d53395d0 <col:17, col:28> 'int'
|   |   | |   | | | `-BinaryOperator 0x1d2d53395b0 <col:18, col:25> 'int' '<'
|   |   | |   | | |   |-ImplicitCastExpr 0x1d2d5339598 <col:18, col:21> 'int' <IntegralCast>
|   |   | |   | | |   | `-ImplicitCastExpr 0x1d2d5339580 <col:18, col:21> 'char' <LValueToRValue>
|   |   | |   | | |   |   `-ArraySubscriptExpr 0x1d2d5339548 <col:18, col:21> 'char' lvalue
|   |   | |   | | |   |     |-ImplicitCastExpr 0x1d2d5339518 <col:18> 'char *' <LValueToRValue>
|   |   | |   | | |   |     | `-DeclRefExpr 0x1d2d53394d8 <col:18> 'char *' lvalue Var 0x1d2d53350d0 'a' 'char *'
|   |   | |   | | |   |     `-ImplicitCastExpr 0x1d2d5339530 <col:20> 'int' <LValueToRValue>
|   |   | |   | | |   |       `-DeclRefExpr 0x1d2d53394f8 <col:20> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   | |   | | |   `-CharacterLiteral 0x1d2d5339568 <col:25> 'int' 48
|   |   | |   | | `-ParenExpr 0x1d2d53396e8 <col:33, col:44> 'int'
|   |   | |   | |   `-BinaryOperator 0x1d2d53396c8 <col:34, col:41> 'int' '>'
|   |   | |   | |     |-ImplicitCastExpr 0x1d2d53396b0 <col:34, col:37> 'int' <IntegralCast>
|   |   | |   | |     | `-ImplicitCastExpr 0x1d2d5339698 <col:34, col:37> 'char' <LValueToRValue>
|   |   | |   | |     |   `-ArraySubscriptExpr 0x1d2d5339660 <col:34, col:37> 'char' lvalue
|   |   | |   | |     |     |-ImplicitCastExpr 0x1d2d5339630 <col:34> 'char *' <LValueToRValue>
|   |   | |   | |     |     | `-DeclRefExpr 0x1d2d53395f0 <col:34> 'char *' lvalue Var 0x1d2d53350d0 'a' 'char *'
|   |   | |   | |     |     `-ImplicitCastExpr 0x1d2d5339648 <col:36> 'int' <LValueToRValue>
|   |   | |   | |     |       `-DeclRefExpr 0x1d2d5339610 <col:36> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   | |   | |     `-CharacterLiteral 0x1d2d5339680 <col:41> 'int' 57
|   |   | |   | `-GotoStmt 0x1d2d5339728 <line:110:17, col:22> 'err' 0x1d2d532f550
|   |   | |   |-BinaryOperator 0x1d2d5339870 <line:111:13, col:24> 'int' '='
|   |   | |   | |-DeclRefExpr 0x1d2d5339758 <col:13> 'int' lvalue Var 0x1d2d5335168 'n' 'int'
|   |   | |   | `-BinaryOperator 0x1d2d5339850 <col:17, col:24> 'int' '-'
|   |   | |   |   |-ImplicitCastExpr 0x1d2d5339838 <col:17, col:20> 'int' <IntegralCast>
|   |   | |   |   | `-ImplicitCastExpr 0x1d2d5339820 <col:17, col:20> 'char' <LValueToRValue>
|   |   | |   |   |   `-ArraySubscriptExpr 0x1d2d53397e8 <col:17, col:20> 'char' lvalue
|   |   | |   |   |     |-ImplicitCastExpr 0x1d2d53397b8 <col:17> 'char *' <LValueToRValue>
|   |   | |   |   |     | `-DeclRefExpr 0x1d2d5339778 <col:17> 'char *' lvalue Var 0x1d2d53350d0 'a' 'char *'
|   |   | |   |   |     `-ImplicitCastExpr 0x1d2d53397d0 <col:19> 'int' <LValueToRValue>
|   |   | |   |   |       `-DeclRefExpr 0x1d2d5339798 <col:19> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   | |   |   `-CharacterLiteral 0x1d2d5339808 <col:24> 'int' 48
|   |   | |   |-UnaryOperator 0x1d2d53398b0 <line:112:13, col:14> 'int' postfix '++'
|   |   | |   | `-DeclRefExpr 0x1d2d5339890 <col:13> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   | |   |-IfStmt 0x1d2d5339b30 <line:113:13, line:114:22>
|   |   | |   | |-BinaryOperator 0x1d2d5339af8 <line:113:17, col:44> 'int' '||'
|   |   | |   | | |-ParenExpr 0x1d2d53399c0 <col:17, col:28> 'int'
|   |   | |   | | | `-BinaryOperator 0x1d2d53399a0 <col:18, col:25> 'int' '<'
|   |   | |   | | |   |-ImplicitCastExpr 0x1d2d5339988 <col:18, col:21> 'int' <IntegralCast>
|   |   | |   | | |   | `-ImplicitCastExpr 0x1d2d5339970 <col:18, col:21> 'char' <LValueToRValue>
|   |   | |   | | |   |   `-ArraySubscriptExpr 0x1d2d5339938 <col:18, col:21> 'char' lvalue
|   |   | |   | | |   |     |-ImplicitCastExpr 0x1d2d5339908 <col:18> 'char *' <LValueToRValue>
|   |   | |   | | |   |     | `-DeclRefExpr 0x1d2d53398c8 <col:18> 'char *' lvalue Var 0x1d2d53350d0 'a' 'char *'
|   |   | |   | | |   |     `-ImplicitCastExpr 0x1d2d5339920 <col:20> 'int' <LValueToRValue>
|   |   | |   | | |   |       `-DeclRefExpr 0x1d2d53398e8 <col:20> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   | |   | | |   `-CharacterLiteral 0x1d2d5339958 <col:25> 'int' 48
|   |   | |   | | `-ParenExpr 0x1d2d5339ad8 <col:33, col:44> 'int'
|   |   | |   | |   `-BinaryOperator 0x1d2d5339ab8 <col:34, col:41> 'int' '>'
|   |   | |   | |     |-ImplicitCastExpr 0x1d2d5339aa0 <col:34, col:37> 'int' <IntegralCast>
|   |   | |   | |     | `-ImplicitCastExpr 0x1d2d5339a88 <col:34, col:37> 'char' <LValueToRValue>
|   |   | |   | |     |   `-ArraySubscriptExpr 0x1d2d5339a50 <col:34, col:37> 'char' lvalue
|   |   | |   | |     |     |-ImplicitCastExpr 0x1d2d5339a20 <col:34> 'char *' <LValueToRValue>
|   |   | |   | |     |     | `-DeclRefExpr 0x1d2d53399e0 <col:34> 'char *' lvalue Var 0x1d2d53350d0 'a' 'char *'
|   |   | |   | |     |     `-ImplicitCastExpr 0x1d2d5339a38 <col:36> 'int' <LValueToRValue>
|   |   | |   | |     |       `-DeclRefExpr 0x1d2d5339a00 <col:36> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   | |   | |     `-CharacterLiteral 0x1d2d5339a70 <col:41> 'int' 57
|   |   | |   | `-GotoStmt 0x1d2d5339b18 <line:114:17, col:22> 'err' 0x1d2d532f550
|   |   | |   |-BinaryOperator 0x1d2d5339d20 <line:115:13, col:35> 'int' '='
|   |   | |   | |-DeclRefExpr 0x1d2d5339b48 <col:13> 'int' lvalue Var 0x1d2d5335168 'n' 'int'
|   |   | |   | `-BinaryOperator 0x1d2d5339d00 <col:17, col:35> 'int' '-'
|   |   | |   |   |-BinaryOperator 0x1d2d5339cc8 <col:17, col:31> 'int' '+'
|   |   | |   |   | |-ParenExpr 0x1d2d5339be8 <col:17, col:24> 'int'
|   |   | |   |   | | `-BinaryOperator 0x1d2d5339bc8 <col:18, col:22> 'int' '*'
|   |   | |   |   | |   |-ImplicitCastExpr 0x1d2d5339bb0 <col:18> 'int' <LValueToRValue>
|   |   | |   |   | |   | `-DeclRefExpr 0x1d2d5339b68 <col:18> 'int' lvalue Var 0x1d2d5335168 'n' 'int'
|   |   | |   |   | |   `-IntegerLiteral 0x1d2d5339b88 <col:22> 'int' 10
|   |   | |   |   | `-ImplicitCastExpr 0x1d2d5339cb0 <col:28, col:31> 'int' <IntegralCast>
|   |   | |   |   |   `-ImplicitCastExpr 0x1d2d5339c98 <col:28, col:31> 'char' <LValueToRValue>
|   |   | |   |   |     `-ArraySubscriptExpr 0x1d2d5339c78 <col:28, col:31> 'char' lvalue
|   |   | |   |   |       |-ImplicitCastExpr 0x1d2d5339c48 <col:28> 'char *' <LValueToRValue>
|   |   | |   |   |       | `-DeclRefExpr 0x1d2d5339c08 <col:28> 'char *' lvalue Var 0x1d2d53350d0 'a' 'char *'
|   |   | |   |   |       `-ImplicitCastExpr 0x1d2d5339c60 <col:30> 'int' <LValueToRValue>
|   |   | |   |   |         `-DeclRefExpr 0x1d2d5339c28 <col:30> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   | |   |   `-CharacterLiteral 0x1d2d5339ce8 <col:35> 'int' 48
|   |   | |   |-IfStmt 0x1d2d5339fb8 <line:116:13, line:117:22>
|   |   | |   | |-BinaryOperator 0x1d2d5339f80 <line:116:17, col:44> 'int' '||'
|   |   | |   | | |-ParenExpr 0x1d2d5339e40 <col:17, col:28> 'int'
|   |   | |   | | | `-BinaryOperator 0x1d2d5339e20 <col:18, col:27> 'int' '<'
|   |   | |   | | |   |-ImplicitCastExpr 0x1d2d5339df0 <col:18> 'int' <LValueToRValue>
|   |   | |   | | |   | `-DeclRefExpr 0x1d2d5339d40 <col:18> 'int' lvalue Var 0x1d2d5335168 'n' 'int'
|   |   | |   | | |   `-ImplicitCastExpr 0x1d2d5339e08 <col:22, col:27> 'int' <LValueToRValue>
|   |   | |   | | |     `-ArraySubscriptExpr 0x1d2d5339dd0 <col:22, col:27> 'const int' lvalue
|   |   | |   | | |       |-ImplicitCastExpr 0x1d2d5339da0 <col:22> 'const int *' <ArrayToPointerDecay>
|   |   | |   | | |       | `-DeclRefExpr 0x1d2d5339d60 <col:22> 'const int [9]' lvalue Var 0x1d2d5334a40 'min' 'const int [9]'
|   |   | |   | | |       `-ImplicitCastExpr 0x1d2d5339db8 <col:26> 'int' <LValueToRValue>
|   |   | |   | | |         `-DeclRefExpr 0x1d2d5339d80 <col:26> 'int' lvalue Var 0x1d2d53351e8 'i' 'int'
|   |   | |   | | `-ParenExpr 0x1d2d5339f60 <col:33, col:44> 'int'
|   |   | |   | |   `-BinaryOperator 0x1d2d5339f40 <col:34, col:43> 'int' '>'
|   |   | |   | |     |-ImplicitCastExpr 0x1d2d5339f10 <col:34> 'int' <LValueToRValue>
|   |   | |   | |     | `-DeclRefExpr 0x1d2d5339e60 <col:34> 'int' lvalue Var 0x1d2d5335168 'n' 'int'
|   |   | |   | |     `-ImplicitCastExpr 0x1d2d5339f28 <col:38, col:43> 'int' <LValueToRValue>
|   |   | |   | |       `-ArraySubscriptExpr 0x1d2d5339ef0 <col:38, col:43> 'const int' lvalue
|   |   | |   | |         |-ImplicitCastExpr 0x1d2d5339ec0 <col:38> 'const int *' <ArrayToPointerDecay>
|   |   | |   | |         | `-DeclRefExpr 0x1d2d5339e80 <col:38> 'const int [9]' lvalue Var 0x1d2d5334db0 'max' 'const int [9]'
|   |   | |   | |         `-ImplicitCastExpr 0x1d2d5339ed8 <col:42> 'int' <LValueToRValue>
|   |   | |   | |           `-DeclRefExpr 0x1d2d5339ea0 <col:42> 'int' lvalue Var 0x1d2d53351e8 'i' 'int'
|   |   | |   | `-GotoStmt 0x1d2d5339fa0 <line:117:17, col:22> 'err' 0x1d2d532f550
|   |   | |   |-IfStmt 0x1d2d533a308 <line:118:13, line:123:13>
|   |   | |   | |-ImplicitCastExpr 0x1d2d5339ff0 <line:118:17> 'struct tm *' <LValueToRValue>
|   |   | |   | | `-DeclRefExpr 0x1d2d5339fd0 <col:17> 'struct tm *' lvalue ParmVar 0x1d2d5334770 'tm' 'struct tm *'
|   |   | |   | `-CompoundStmt 0x1d2d533a2f0 <col:21, line:123:13>
|   |   | |   |   `-IfStmt 0x1d2d533a2c8 <line:119:17, line:122:35> has_else
|   |   | |   |     |-BinaryOperator 0x1d2d533a068 <line:119:21, col:26> 'int' '=='
|   |   | |   |     | |-ImplicitCastExpr 0x1d2d533a050 <col:21> 'int' <LValueToRValue>
|   |   | |   |     | | `-DeclRefExpr 0x1d2d533a008 <col:21> 'int' lvalue Var 0x1d2d53351e8 'i' 'int'
|   |   | |   |     | `-IntegerLiteral 0x1d2d533a028 <col:26> 'int' 7
|   |   | |   |     |-BinaryOperator 0x1d2d533a140 <line:120:21, col:34> 'int' '='
|   |   | |   |     | |-DeclRefExpr 0x1d2d533a088 <col:21> 'int' lvalue Var 0x1d2d53391a0 'offset' 'int'
|   |   | |   |     | `-BinaryOperator 0x1d2d533a120 <col:30, col:34> 'int' '*'
|   |   | |   |     |   |-ImplicitCastExpr 0x1d2d533a108 <col:30> 'int' <LValueToRValue>
|   |   | |   |     |   | `-DeclRefExpr 0x1d2d533a0c0 <col:30> 'int' lvalue Var 0x1d2d5335168 'n' 'int'
|   |   | |   |     |   `-IntegerLiteral 0x1d2d533a0e0 <col:34> 'int' 3600
|   |   | |   |     `-IfStmt 0x1d2d533a2b0 <line:121:22, line:122:35>
|   |   | |   |       |-BinaryOperator 0x1d2d533a1c0 <line:121:26, col:31> 'int' '=='
|   |   | |   |       | |-ImplicitCastExpr 0x1d2d533a1a8 <col:26> 'int' <LValueToRValue>
|   |   | |   |       | | `-DeclRefExpr 0x1d2d533a160 <col:26> 'int' lvalue Var 0x1d2d53351e8 'i' 'int'
|   |   | |   |       | `-IntegerLiteral 0x1d2d533a180 <col:31> 'int' 8
|   |   | |   |       `-CompoundAssignOperator 0x1d2d533a280 <line:122:21, col:35> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |   |         |-DeclRefExpr 0x1d2d533a1e0 <col:21> 'int' lvalue Var 0x1d2d53391a0 'offset' 'int'
|   |   | |   |         `-BinaryOperator 0x1d2d533a260 <col:31, col:35> 'int' '*'
|   |   | |   |           |-ImplicitCastExpr 0x1d2d533a248 <col:31> 'int' <LValueToRValue>
|   |   | |   |           | `-DeclRefExpr 0x1d2d533a200 <col:31> 'int' lvalue Var 0x1d2d5335168 'n' 'int'
|   |   | |   |           `-IntegerLiteral 0x1d2d533a220 <col:35> 'int' 60
|   |   | |   `-UnaryOperator 0x1d2d533a340 <line:124:13, col:14> 'int' postfix '++'
|   |   | |     `-DeclRefExpr 0x1d2d533a320 <col:13> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |   | `-IfStmt 0x1d2d533a778 <line:126:9, line:127:20>
|   |   |   |-BinaryOperator 0x1d2d533a720 <line:126:13, col:66> 'int' '&&'
|   |   |   | |-ImplicitCastExpr 0x1d2d533a708 <col:13> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x1d2d533a3e0 <col:13> 'int' lvalue Var 0x1d2d53391a0 'offset' 'int'
|   |   |   | `-UnaryOperator 0x1d2d533a6f0 <col:23, col:66> 'int' prefix '!' cannot overflow
|   |   |   |   `-CallExpr 0x1d2d533a6a0 <col:24, col:66> 'int'
|   |   |   |     |-ImplicitCastExpr 0x1d2d533a688 <col:24> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x1d2d533a548 <col:24> 'int ()' Function 0x1d2d533a480 'OPENSSL_gmtime_adj' 'int ()'
|   |   |   |     |-ImplicitCastExpr 0x1d2d533a6d8 <col:43> 'struct tm *' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x1d2d533a568 <col:43> 'struct tm *' lvalue ParmVar 0x1d2d5334770 'tm' 'struct tm *'
|   |   |   |     |-IntegerLiteral 0x1d2d533a588 <col:47> 'int' 0
|   |   |   |     `-BinaryOperator 0x1d2d533a638 <col:50, col:59> 'int' '*'
|   |   |   |       |-ImplicitCastExpr 0x1d2d533a608 <col:50> 'int' <LValueToRValue>
|   |   |   |       | `-DeclRefExpr 0x1d2d533a5b0 <col:50> 'int' lvalue Var 0x1d2d53391a0 'offset' 'int'
|   |   |   |       `-ImplicitCastExpr 0x1d2d533a620 <col:59> 'int' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x1d2d533a5d0 <col:59> 'int' lvalue Var 0x1d2d5338f90 'offsign' 'int'
|   |   |   `-ReturnStmt 0x1d2d533a768 <line:127:13, col:20>
|   |   |     `-IntegerLiteral 0x1d2d533a740 <col:20> 'int' 0
|   |   `-IfStmt 0x1d2d533a8a0 <line:128:12, line:131:5>
|   |     |-ImplicitCastExpr 0x1d2d533a858 <line:128:16, col:19> 'char' <LValueToRValue>
|   |     | `-ArraySubscriptExpr 0x1d2d533a838 <col:16, col:19> 'char' lvalue
|   |     |   |-ImplicitCastExpr 0x1d2d533a808 <col:16> 'char *' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x1d2d533a7c8 <col:16> 'char *' lvalue Var 0x1d2d53350d0 'a' 'char *'
|   |     |   `-ImplicitCastExpr 0x1d2d533a820 <col:18> 'int' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1d2d533a7e8 <col:18> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |     `-CompoundStmt 0x1d2d533a888 <col:22, line:131:5>
|   |       `-GotoStmt 0x1d2d533a870 <line:130:9, col:14> 'err' 0x1d2d532f550
|   |-ReturnStmt 0x1d2d533a9b8 <line:132:5, col:19>
|   | `-ParenExpr 0x1d2d533a998 <col:12, col:19> 'int'
|   |   `-BinaryOperator 0x1d2d533a978 <col:13, col:18> 'int' '=='
|   |     |-ImplicitCastExpr 0x1d2d533a948 <col:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1d2d533a908 <col:13> 'int' lvalue Var 0x1d2d53352e8 'o' 'int'
|   |     `-ImplicitCastExpr 0x1d2d533a960 <col:18> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1d2d533a928 <col:18> 'int' lvalue Var 0x1d2d5335268 'l' 'int'
|   `-LabelStmt 0x1d2d533aa20 <line:133:2, line:134:14> 'err'
|     `-ReturnStmt 0x1d2d533aa10 <col:5, col:14>
|       `-ParenExpr 0x1d2d533a9f0 <col:12, col:14> 'int'
|         `-IntegerLiteral 0x1d2d533a9c8 <col:13> 'int' 0
|-FunctionDecl 0x1d2d533ab90 <line:137:1, line:140:1> line:137:5 invalid ASN1_GENERALIZEDTIME_check 'int (const int *)'
| |-ParmVarDecl 0x1d2d533aac0 <col:32, col:60> col:60 invalid d 'const int *'
| `-CompoundStmt 0x1d2d533acd8 <line:138:1, line:140:1>
|-FunctionDecl 0x1d2d533ae60 <line:142:1, line:158:1> line:142:5 invalid ASN1_GENERALIZEDTIME_set_string 'int (int *, const char *)'
| |-ParmVarDecl 0x1d2d533ad00 <col:37, col:59> col:59 invalid s 'int *'
| |-ParmVarDecl 0x1d2d533ad80 <col:62, col:74> col:74 used str 'const char *'
| `-CompoundStmt 0x1d2d5333500 <line:143:1, line:158:1>
|   `-IfStmt 0x1d2d53334d8 <line:149:5, line:157:18> has_else
|     |-OpaqueValueExpr 0x1d2d53334c0 <<invalid sloc>> '_Bool'
|     |-CompoundStmt 0x1d2d5333448 <line:149:41, line:156:5>
|     | |-IfStmt 0x1d2d53333d8 <line:150:9, line:154:9>
|     | | |-OpaqueValueExpr 0x1d2d53333c0 <<invalid sloc>> '_Bool'
|     | | `-CompoundStmt 0x1d2d533b418 <line:150:24, line:154:9>
|     | |   `-IfStmt 0x1d2d533b400 <line:151:13, line:152:24>
|     | |     |-OpaqueValueExpr 0x1d2d533b3e8 <<invalid sloc>> '_Bool'
|     | |     `-ReturnStmt 0x1d2d533b3d8 <col:17, col:24>
|     | |       `-IntegerLiteral 0x1d2d533b3b0 <col:24> 'int' 0
|     | `-ReturnStmt 0x1d2d5333438 <line:155:9, col:18>
|     |   `-ParenExpr 0x1d2d5333418 <col:16, col:18> 'int'
|     |     `-IntegerLiteral 0x1d2d53333f0 <col:17> 'int' 1
|     `-ReturnStmt 0x1d2d53334b0 <line:157:9, col:18>
|       `-ParenExpr 0x1d2d5333490 <col:16, col:18> 'int'
|         `-IntegerLiteral 0x1d2d5333468 <col:17> 'int' 0
|-FunctionDecl 0x1d2d533af60 <line:147:16> col:16 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1d2d533b000 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1d2d53336c0 <line:160:1, line:164:1> line:160:23 invalid ASN1_GENERALIZEDTIME_set 'int *(int *, time_t)'
| |-ParmVarDecl 0x1d2d5333530 <col:48, col:70> col:70 invalid s 'int *'
| |-ParmVarDecl 0x1d2d53335a8 <line:161:48, col:55> col:55 used t 'time_t':'long long'
| `-CompoundStmt 0x1d2d5333920 <line:162:1, line:164:1>
|-FunctionDecl 0x1d2d5333c10 <line:166:1, line:216:1> line:166:23 invalid ASN1_GENERALIZEDTIME_adj 'int *(int *, time_t, int, long)'
| |-ParmVarDecl 0x1d2d5333948 <col:48, col:70> col:70 invalid s 'int *'
| |-ParmVarDecl 0x1d2d53339c0 <line:167:48, col:55> col:55 used t 'time_t':'long long'
| |-ParmVarDecl 0x1d2d5333a40 <col:58, col:62> col:62 used offset_day 'int'
| |-ParmVarDecl 0x1d2d5333ac0 <line:168:48, col:53> col:53 used offset_sec 'long'
| `-CompoundStmt 0x1d2d533db20 <line:169:1, line:216:1>
|   |-DeclStmt 0x1d2d5333d68 <line:170:5, col:12>
|   | `-VarDecl 0x1d2d5333d00 <col:5, col:11> col:11 used p 'char *'
|   |-DeclStmt 0x1d2d5333e10 <line:171:5, col:18>
|   | `-VarDecl 0x1d2d5333da8 <col:5, col:16> col:16 used ts 'struct tm *'
|   |-DeclStmt 0x1d2d5333eb0 <line:172:5, col:19>
|   | `-VarDecl 0x1d2d5333e48 <col:5, col:15> col:15 used data 'struct tm':'struct tm'
|   |-DeclStmt 0x1d2d5333f80 <line:173:5, col:20>
|   | `-VarDecl 0x1d2d5333ed8 <col:5, col:18> col:12 used len 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x1d2d5333f68 <col:18> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1d2d5333f40 <col:18> 'int' 20
|   |-IfStmt 0x1d2d5334340 <line:180:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-OpaqueValueExpr 0x1d2d5334328 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1d2d5334318 <.//openssl//file_jk/before\crypto\asn1\a_gentm.c:181:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x1d2d5334300 <col:17, col:27> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x1d2d53342e0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1d2d53342b8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1d2d5334278 <col:26> 'int' 0
|   |-BinaryOperator 0x1d2d5340678 <.//openssl//file_jk/before\crypto\asn1\a_gentm.c:183:5, col:34> 'struct tm *' '='
|   | |-DeclRefExpr 0x1d2d5334358 <col:5> 'struct tm *' lvalue Var 0x1d2d5333da8 'ts' 'struct tm *'
|   | `-ImplicitCastExpr 0x1d2d5340660 <col:10, col:34> 'struct tm *' <IntegralToPointer>
|   |   `-CallExpr 0x1d2d5340630 <col:10, col:34> 'int'
|   |     |-ImplicitCastExpr 0x1d2d5340618 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1d2d5340558 <col:10> 'int ()' Function 0x1d2d5340490 'OPENSSL_gmtime' 'int ()'
|   |     |-UnaryOperator 0x1d2d53405b0 <col:25, col:26> 'time_t *' prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0x1d2d5340578 <col:26> 'time_t':'long long' lvalue ParmVar 0x1d2d53339c0 't' 'time_t':'long long'
|   |     `-UnaryOperator 0x1d2d5340600 <col:29, col:30> 'struct tm *' prefix '&' cannot overflow
|   |       `-DeclRefExpr 0x1d2d53405c8 <col:30> 'struct tm':'struct tm' lvalue Var 0x1d2d5333e48 'data' 'struct tm':'struct tm'
|   |-IfStmt 0x1d2d53407f8 <line:184:5, line:185:14>
|   | |-BinaryOperator 0x1d2d5340770 <line:184:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1d2d5340740 <.//openssl//file_jk/before\crypto\asn1\a_gentm.c:184:9> 'struct tm *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1d2d5340698 <col:9> 'struct tm *' lvalue Var 0x1d2d5333da8 'ts' 'struct tm *'
|   | | `-ImplicitCastExpr 0x1d2d5340758 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'struct tm *' <BitCast>
|   | |   `-ParenExpr 0x1d2d5340720 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1d2d53406f8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1d2d53406b8 <col:26> 'int' 0
|   | `-GotoStmt 0x1d2d53407e0 <.//openssl//file_jk/before\crypto\asn1\a_gentm.c:185:9, col:14> 'err' 0x1d2d5340790
|   |-IfStmt 0x1d2d5340a48 <line:187:5, line:190:5>
|   | |-BinaryOperator 0x1d2d53408b0 <line:187:9, col:23> 'int' '||'
|   | | |-ImplicitCastExpr 0x1d2d5340880 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1d2d5340810 <col:9> 'int' lvalue ParmVar 0x1d2d5333a40 'offset_day' 'int'
|   | | `-ImplicitCastExpr 0x1d2d5340898 <col:23> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1d2d5340848 <col:23> 'long' lvalue ParmVar 0x1d2d5333ac0 'offset_sec' 'long'
|   | `-CompoundStmt 0x1d2d5340a30 <col:35, line:190:5>
|   |   `-IfStmt 0x1d2d5340a18 <line:188:9, line:189:18>
|   |     |-UnaryOperator 0x1d2d53409e8 <line:188:13, col:59> 'int' prefix '!' cannot overflow
|   |     | `-CallExpr 0x1d2d5340968 <col:14, col:59> 'int'
|   |     |   |-ImplicitCastExpr 0x1d2d5340950 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |     |   | `-DeclRefExpr 0x1d2d53408d0 <col:14> 'int ()' Function 0x1d2d533a480 'OPENSSL_gmtime_adj' 'int ()'
|   |     |   |-ImplicitCastExpr 0x1d2d53409a0 <col:33> 'struct tm *' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x1d2d53408f0 <col:33> 'struct tm *' lvalue Var 0x1d2d5333da8 'ts' 'struct tm *'
|   |     |   |-ImplicitCastExpr 0x1d2d53409b8 <col:37> 'int' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x1d2d5340910 <col:37> 'int' lvalue ParmVar 0x1d2d5333a40 'offset_day' 'int'
|   |     |   `-ImplicitCastExpr 0x1d2d53409d0 <col:49> 'long' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1d2d5340930 <col:49> 'long' lvalue ParmVar 0x1d2d5333ac0 'offset_sec' 'long'
|   |     `-GotoStmt 0x1d2d5340a00 <line:189:13, col:18> 'err' 0x1d2d5340790
|   |-IfStmt 0x1d2d53411d8 <line:193:5, line:201:5>
|   | |-OpaqueValueExpr 0x1d2d53411c0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1d2d53411a0 <line:193:54, line:201:5>
|   |   |-BinaryOperator 0x1d2d5340da8 <line:194:9, col:31> 'char *' '='
|   |   | |-DeclRefExpr 0x1d2d5340be8 <col:9> 'char *' lvalue Var 0x1d2d5333d00 'p' 'char *'
|   |   | `-ImplicitCastExpr 0x1d2d5340d90 <col:13, col:31> 'char *' <IntegralToPointer>
|   |   |   `-CallExpr 0x1d2d5340d50 <col:13, col:31> 'int'
|   |   |     |-ImplicitCastExpr 0x1d2d5340d38 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1d2d5340cf8 <col:13> 'int ()' Function 0x1d2d5340c30 'OPENSSL_malloc' 'int ()'
|   |   |     `-ImplicitCastExpr 0x1d2d5340d78 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1d2d5340d18 <col:28> 'size_t':'unsigned long long' lvalue Var 0x1d2d5333ed8 'len' 'size_t':'unsigned long long'
|   |   `-IfStmt 0x1d2d5341000 <line:195:9, line:198:9>
|   |     |-BinaryOperator 0x1d2d5340ea0 <line:195:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |     | |-ImplicitCastExpr 0x1d2d5340e70 <.//openssl//file_jk/before\crypto\asn1\a_gentm.c:195:13> 'char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1d2d5340dc8 <col:13> 'char *' lvalue Var 0x1d2d5333d00 'p' 'char *'
|   |     | `-ImplicitCastExpr 0x1d2d5340e88 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |     |   `-ParenExpr 0x1d2d5340e50 <col:17, col:27> 'void *'
|   |     |     `-CStyleCastExpr 0x1d2d5340e28 <col:18, col:26> 'void *' <NullToPointer>
|   |     |       `-IntegerLiteral 0x1d2d5340de8 <col:26> 'int' 0
|   |     `-CompoundStmt 0x1d2d5340fe8 <.//openssl//file_jk/before\crypto\asn1\a_gentm.c:195:24, line:198:9>
|   |       `-GotoStmt 0x1d2d5340fd0 <line:197:13, col:18> 'err' 0x1d2d5340790
|   |-CallExpr 0x1d2d533d6e0 <line:203:5, line:205:28> 'int'
|   | |-ImplicitCastExpr 0x1d2d533d6c8 <line:203:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1d2d53412e0 <col:5> 'int ()' Function 0x1d2d5341218 'BIO_snprintf' 'int ()'
|   | |-ImplicitCastExpr 0x1d2d533d748 <col:18> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1d2d5341300 <col:18> 'char *' lvalue Var 0x1d2d5333d00 'p' 'char *'
|   | |-ImplicitCastExpr 0x1d2d533d760 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x1d2d5341320 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1d2d5333ed8 'len' 'size_t':'unsigned long long'
|   | |-ImplicitCastExpr 0x1d2d533d778 <col:26> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x1d2d5341378 <col:26> 'char [26]' lvalue "%04d%02d%02d%02d%02d%02dZ"
|   | |-BinaryOperator 0x1d2d5341458 <col:55, col:69> 'int' '+'
|   | | |-ImplicitCastExpr 0x1d2d5341440 <col:55, col:59> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x1d2d53413e8 <col:55, col:59> 'int' lvalue ->tm_year 0x1d2d5313c68
|   | | |   `-ImplicitCastExpr 0x1d2d53413d0 <col:55> 'struct tm *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1d2d53413b0 <col:55> 'struct tm *' lvalue Var 0x1d2d5333da8 'ts' 'struct tm *'
|   | | `-IntegerLiteral 0x1d2d5341418 <col:69> 'int' 1900
|   | |-BinaryOperator 0x1d2d533d508 <line:204:18, col:31> 'int' '+'
|   | | |-ImplicitCastExpr 0x1d2d533d4f0 <col:18, col:22> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x1d2d533d498 <col:18, col:22> 'int' lvalue ->tm_mon 0x1d2d5313bf8
|   | | |   `-ImplicitCastExpr 0x1d2d533d480 <col:18> 'struct tm *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1d2d533d460 <col:18> 'struct tm *' lvalue Var 0x1d2d5333da8 'ts' 'struct tm *'
|   | | `-IntegerLiteral 0x1d2d533d4c8 <col:31> 'int' 1
|   | |-ImplicitCastExpr 0x1d2d533d790 <col:34, col:38> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x1d2d533d560 <col:34, col:38> 'int' lvalue ->tm_mday 0x1d2d5313b88
|   | |   `-ImplicitCastExpr 0x1d2d533d548 <col:34> 'struct tm *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1d2d533d528 <col:34> 'struct tm *' lvalue Var 0x1d2d5333da8 'ts' 'struct tm *'
|   | |-ImplicitCastExpr 0x1d2d533d7a8 <col:47, col:51> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x1d2d533d5c8 <col:47, col:51> 'int' lvalue ->tm_hour 0x1d2d5313b18
|   | |   `-ImplicitCastExpr 0x1d2d533d5b0 <col:47> 'struct tm *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1d2d533d590 <col:47> 'struct tm *' lvalue Var 0x1d2d5333da8 'ts' 'struct tm *'
|   | |-ImplicitCastExpr 0x1d2d533d7c0 <col:60, col:64> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x1d2d533d630 <col:60, col:64> 'int' lvalue ->tm_min 0x1d2d5313aa8
|   | |   `-ImplicitCastExpr 0x1d2d533d618 <col:60> 'struct tm *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1d2d533d5f8 <col:60> 'struct tm *' lvalue Var 0x1d2d5333da8 'ts' 'struct tm *'
|   | `-ImplicitCastExpr 0x1d2d533d7d8 <line:205:18, col:22> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x1d2d533d698 <col:18, col:22> 'int' lvalue ->tm_sec 0x1d2d5313a38
|   |     `-ImplicitCastExpr 0x1d2d533d680 <col:18> 'struct tm *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1d2d533d660 <col:18> 'struct tm *' lvalue Var 0x1d2d5333da8 'ts' 'struct tm *'
|   |-LabelStmt 0x1d2d533da58 <line:212:2, col:5> 'err'
|   | `-NullStmt 0x1d2d533da50 <col:5>
|   `-ReturnStmt 0x1d2d533db10 <line:215:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|     `-ImplicitCastExpr 0x1d2d533daf8 <col:17, col:27> 'int *' <NullToPointer>
|       `-ParenExpr 0x1d2d533dad8 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x1d2d533dab0 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x1d2d533da70 <col:26> 'int' 0
|-VarDecl 0x1d2d533dbf8 prev 0x1d2d5336310 <.//openssl//file_jk/before\crypto\asn1\a_gentm.c:218:1, line:221:1> line:218:13 used _asn1_mon 'const char *[12]' cinit
| `-InitListExpr 0x1d2d533dec8 <col:29, line:221:1> 'const char *[12]'
|   |-ImplicitCastExpr 0x1d2d533df80 <line:219:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1d2d533df68 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1d2d533dc98 <col:5> 'char [4]' lvalue "Jan"
|   |-ImplicitCastExpr 0x1d2d533dfb0 <col:12> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1d2d533df98 <col:12> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1d2d533dcb8 <col:12> 'char [4]' lvalue "Feb"
|   |-ImplicitCastExpr 0x1d2d533dfe0 <col:19> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1d2d533dfc8 <col:19> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1d2d533dcd8 <col:19> 'char [4]' lvalue "Mar"
|   |-ImplicitCastExpr 0x1d2d533e010 <col:26> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1d2d533dff8 <col:26> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1d2d533dcf8 <col:26> 'char [4]' lvalue "Apr"
|   |-ImplicitCastExpr 0x1d2d533e040 <col:33> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1d2d533e028 <col:33> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1d2d533dd18 <col:33> 'char [4]' lvalue "May"
|   |-ImplicitCastExpr 0x1d2d533e070 <col:40> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1d2d533e058 <col:40> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1d2d533dd38 <col:40> 'char [4]' lvalue "Jun"
|   |-ImplicitCastExpr 0x1d2d533e0a0 <line:220:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1d2d533e088 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1d2d533dd58 <col:5> 'char [4]' lvalue "Jul"
|   |-ImplicitCastExpr 0x1d2d533e0d0 <col:12> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1d2d533e0b8 <col:12> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1d2d533dd78 <col:12> 'char [4]' lvalue "Aug"
|   |-ImplicitCastExpr 0x1d2d533e100 <col:19> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1d2d533e0e8 <col:19> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1d2d533dd98 <col:19> 'char [4]' lvalue "Sep"
|   |-ImplicitCastExpr 0x1d2d533e130 <col:26> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1d2d533e118 <col:26> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1d2d533ddb8 <col:26> 'char [4]' lvalue "Oct"
|   |-ImplicitCastExpr 0x1d2d533e160 <col:33> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x1d2d533e148 <col:33> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x1d2d533ddd8 <col:33> 'char [4]' lvalue "Nov"
|   `-ImplicitCastExpr 0x1d2d533e190 <col:40> 'const char *' <NoOp>
|     `-ImplicitCastExpr 0x1d2d533e178 <col:40> 'char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x1d2d533ddf8 <col:40> 'char [4]' lvalue "Dec"
`-FunctionDecl 0x1d2d533e320 <line:223:1, line:273:1> line:223:5 invalid ASN1_GENERALIZEDTIME_print 'int (int *, const int *)'
  |-ParmVarDecl 0x1d2d533e1c0 <col:32, col:37> col:37 invalid bp 'int *'
  |-ParmVarDecl 0x1d2d533e240 <col:41, col:69> col:69 invalid tm 'const int *'
  `-CompoundStmt 0x1d2d5342d70 <line:224:1, line:273:1>
    |-DeclStmt 0x1d2d533e4d8 <line:225:5, col:12>
    | `-VarDecl 0x1d2d533e470 <col:5, col:11> col:11 used v 'char *'
    |-DeclStmt 0x1d2d533e598 <line:226:5, col:16>
    | `-VarDecl 0x1d2d533e508 <col:5, col:15> col:9 used gmt 'int' cinit
    |   `-IntegerLiteral 0x1d2d533e570 <col:15> 'int' 0
    |-DeclStmt 0x1d2d533e630 <line:227:5, col:10>
    | `-VarDecl 0x1d2d533e5c8 <col:5, col:9> col:9 used i 'int'
    |-DeclStmt 0x1d2d533ea70 <line:228:5, col:49>
    | |-VarDecl 0x1d2d533e660 <col:5, col:13> col:9 used y 'int' cinit
    | | `-IntegerLiteral 0x1d2d533e6c8 <col:13> 'int' 0
    | |-VarDecl 0x1d2d533e708 <col:5, col:20> col:16 used M 'int' cinit
    | | `-IntegerLiteral 0x1d2d533e770 <col:20> 'int' 0
    | |-VarDecl 0x1d2d533e7b0 <col:5, col:27> col:23 used d 'int' cinit
    | | `-IntegerLiteral 0x1d2d533e818 <col:27> 'int' 0
    | |-VarDecl 0x1d2d533e858 <col:5, col:34> col:30 used h 'int' cinit
    | | `-IntegerLiteral 0x1d2d533e8c0 <col:34> 'int' 0
    | |-VarDecl 0x1d2d533e900 <col:5, col:41> col:37 used m 'int' cinit
    | | `-IntegerLiteral 0x1d2d533e968 <col:41> 'int' 0
    | `-VarDecl 0x1d2d533e9a8 <col:5, col:48> col:44 used s 'int' cinit
    |   `-IntegerLiteral 0x1d2d533ea10 <col:48> 'int' 0
    |-DeclStmt 0x1d2d533eba8 <line:229:5, col:19>
    | `-VarDecl 0x1d2d533eaa0 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\asn1\a_gentm.c:229:11 used f 'char *' cinit
    |   `-ImplicitCastExpr 0x1d2d533eb90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
    |     `-ParenExpr 0x1d2d533eb70 <col:17, col:27> 'void *'
    |       `-CStyleCastExpr 0x1d2d533eb48 <col:18, col:26> 'void *' <NullToPointer>
    |         `-IntegerLiteral 0x1d2d533eb08 <col:26> 'int' 0
    |-DeclStmt 0x1d2d533ec68 <.//openssl//file_jk/before\crypto\asn1\a_gentm.c:230:5, col:18>
    | `-VarDecl 0x1d2d533ebd8 <col:5, col:17> col:9 used f_len 'int' cinit
    |   `-IntegerLiteral 0x1d2d533ec40 <col:17> 'int' 0
    |-IfStmt 0x1d2d533edd8 <line:235:5, line:236:14>
    | |-BinaryOperator 0x1d2d533ed50 <line:235:9, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x1d2d533ed38 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1d2d533ecf0 <col:9> 'int' lvalue Var 0x1d2d533e5c8 'i' 'int'
    | | `-IntegerLiteral 0x1d2d533ed10 <col:13> 'int' 12
    | `-GotoStmt 0x1d2d533edc0 <line:236:9, col:14> 'err' 0x1d2d533ed70
    |-IfStmt 0x1d2d533efb0 <line:237:5, line:238:15>
    | |-BinaryOperator 0x1d2d533ef10 <line:237:9, col:21> 'int' '=='
    | | |-ImplicitCastExpr 0x1d2d533eef8 <col:9, col:16> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x1d2d533eee0 <col:9, col:16> 'char' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x1d2d533eea8 <col:9, col:16> 'char' lvalue
    | | |     |-ImplicitCastExpr 0x1d2d533ee90 <col:9> 'char *' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x1d2d533edf0 <col:9> 'char *' lvalue Var 0x1d2d533e470 'v' 'char *'
    | | |     `-BinaryOperator 0x1d2d533ee70 <col:11, col:15> 'int' '-'
    | | |       |-ImplicitCastExpr 0x1d2d533ee58 <col:11> 'int' <LValueToRValue>
    | | |       | `-DeclRefExpr 0x1d2d533ee10 <col:11> 'int' lvalue Var 0x1d2d533e5c8 'i' 'int'
    | | |       `-IntegerLiteral 0x1d2d533ee30 <col:15> 'int' 1
    | | `-CharacterLiteral 0x1d2d533eec8 <col:21> 'int' 90
    | `-BinaryOperator 0x1d2d533ef90 <line:238:9, col:15> 'int' '='
    |   |-DeclRefExpr 0x1d2d533ef30 <col:9> 'int' lvalue Var 0x1d2d533e508 'gmt' 'int'
    |   `-IntegerLiteral 0x1d2d533ef68 <col:15> 'int' 1
    |-ForStmt 0x1d2d533f368 <line:239:5, line:241:18>
    | |-BinaryOperator 0x1d2d533f010 <line:239:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x1d2d533efc8 <col:10> 'int' lvalue Var 0x1d2d533e5c8 'i' 'int'
    | | `-IntegerLiteral 0x1d2d533efe8 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1d2d533f090 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x1d2d533f078 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1d2d533f030 <col:17> 'int' lvalue Var 0x1d2d533e5c8 'i' 'int'
    | | `-IntegerLiteral 0x1d2d533f050 <col:21> 'int' 12
    | |-UnaryOperator 0x1d2d533f0d0 <col:25, col:26> 'int' postfix '++'
    | | `-DeclRefExpr 0x1d2d533f0b0 <col:25> 'int' lvalue Var 0x1d2d533e5c8 'i' 'int'
    | `-IfStmt 0x1d2d533f350 <line:240:9, line:241:18>
    |   |-BinaryOperator 0x1d2d533f318 <line:240:13, col:40> 'int' '||'
    |   | |-ParenExpr 0x1d2d533f1e0 <col:13, col:24> 'int'
    |   | | `-BinaryOperator 0x1d2d533f1c0 <col:14, col:21> 'int' '>'
    |   | |   |-ImplicitCastExpr 0x1d2d533f1a8 <col:14, col:17> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x1d2d533f190 <col:14, col:17> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x1d2d533f158 <col:14, col:17> 'char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x1d2d533f128 <col:14> 'char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x1d2d533f0e8 <col:14> 'char *' lvalue Var 0x1d2d533e470 'v' 'char *'
    |   | |   |     `-ImplicitCastExpr 0x1d2d533f140 <col:16> 'int' <LValueToRValue>
    |   | |   |       `-DeclRefExpr 0x1d2d533f108 <col:16> 'int' lvalue Var 0x1d2d533e5c8 'i' 'int'
    |   | |   `-CharacterLiteral 0x1d2d533f178 <col:21> 'int' 57
    |   | `-ParenExpr 0x1d2d533f2f8 <col:29, col:40> 'int'
    |   |   `-BinaryOperator 0x1d2d533f2d8 <col:30, col:37> 'int' '<'
    |   |     |-ImplicitCastExpr 0x1d2d533f2c0 <col:30, col:33> 'int' <IntegralCast>
    |   |     | `-ImplicitCastExpr 0x1d2d533f2a8 <col:30, col:33> 'char' <LValueToRValue>
    |   |     |   `-ArraySubscriptExpr 0x1d2d533f270 <col:30, col:33> 'char' lvalue
    |   |     |     |-ImplicitCastExpr 0x1d2d533f240 <col:30> 'char *' <LValueToRValue>
    |   |     |     | `-DeclRefExpr 0x1d2d533f200 <col:30> 'char *' lvalue Var 0x1d2d533e470 'v' 'char *'
    |   |     |     `-ImplicitCastExpr 0x1d2d533f258 <col:32> 'int' <LValueToRValue>
    |   |     |       `-DeclRefExpr 0x1d2d533f220 <col:32> 'int' lvalue Var 0x1d2d533e5c8 'i' 'int'
    |   |     `-CharacterLiteral 0x1d2d533f290 <col:37> 'int' 48
    |   `-GotoStmt 0x1d2d533f338 <line:241:13, col:18> 'err' 0x1d2d533ed70
    |-BinaryOperator 0x1d2d5341960 <line:242:5, line:243:42> 'int' '='
    | |-DeclRefExpr 0x1d2d533f3a0 <line:242:5> 'int' lvalue Var 0x1d2d533e660 'y' 'int'
    | `-BinaryOperator 0x1d2d5341940 <col:9, line:243:42> 'int' '+'
    |   |-BinaryOperator 0x1d2d5341818 <line:242:9, line:243:26> 'int' '+'
    |   | |-BinaryOperator 0x1d2d53416a8 <line:242:9, col:46> 'int' '+'
    |   | | |-BinaryOperator 0x1d2d5341538 <col:9, col:24> 'int' '*'
    |   | | | |-ParenExpr 0x1d2d53414f0 <col:9, col:20> 'int'
    |   | | | | `-BinaryOperator 0x1d2d53414d0 <col:10, col:17> 'int' '-'
    |   | | | |   |-ImplicitCastExpr 0x1d2d53414b8 <col:10, col:13> 'int' <IntegralCast>
    |   | | | |   | `-ImplicitCastExpr 0x1d2d53414a0 <col:10, col:13> 'char' <LValueToRValue>
    |   | | | |   |   `-ArraySubscriptExpr 0x1d2d533f438 <col:10, col:13> 'char' lvalue
    |   | | | |   |     |-ImplicitCastExpr 0x1d2d533f420 <col:10> 'char *' <LValueToRValue>
    |   | | | |   |     | `-DeclRefExpr 0x1d2d533f3d8 <col:10> 'char *' lvalue Var 0x1d2d533e470 'v' 'char *'
    |   | | | |   |     `-IntegerLiteral 0x1d2d533f3f8 <col:12> 'int' 0
    |   | | | |   `-CharacterLiteral 0x1d2d533f458 <col:17> 'int' 48
    |   | | | `-IntegerLiteral 0x1d2d5341510 <col:24> 'int' 1000
    |   | | `-BinaryOperator 0x1d2d5341688 <col:31, col:46> 'int' '*'
    |   | |   |-ParenExpr 0x1d2d5341640 <col:31, col:42> 'int'
    |   | |   | `-BinaryOperator 0x1d2d5341620 <col:32, col:39> 'int' '-'
    |   | |   |   |-ImplicitCastExpr 0x1d2d5341608 <col:32, col:35> 'int' <IntegralCast>
    |   | |   |   | `-ImplicitCastExpr 0x1d2d53415f0 <col:32, col:35> 'char' <LValueToRValue>
    |   | |   |   |   `-ArraySubscriptExpr 0x1d2d53415b8 <col:32, col:35> 'char' lvalue
    |   | |   |   |     |-ImplicitCastExpr 0x1d2d53415a0 <col:32> 'char *' <LValueToRValue>
    |   | |   |   |     | `-DeclRefExpr 0x1d2d5341558 <col:32> 'char *' lvalue Var 0x1d2d533e470 'v' 'char *'
    |   | |   |   |     `-IntegerLiteral 0x1d2d5341578 <col:34> 'int' 1
    |   | |   |   `-CharacterLiteral 0x1d2d53415d8 <col:39> 'int' 48
    |   | |   `-IntegerLiteral 0x1d2d5341660 <col:46> 'int' 100
    |   | `-BinaryOperator 0x1d2d53417f8 <line:243:11, col:26> 'int' '*'
    |   |   |-ParenExpr 0x1d2d53417b0 <col:11, col:22> 'int'
    |   |   | `-BinaryOperator 0x1d2d5341790 <col:12, col:19> 'int' '-'
    |   |   |   |-ImplicitCastExpr 0x1d2d5341778 <col:12, col:15> 'int' <IntegralCast>
    |   |   |   | `-ImplicitCastExpr 0x1d2d5341760 <col:12, col:15> 'char' <LValueToRValue>
    |   |   |   |   `-ArraySubscriptExpr 0x1d2d5341728 <col:12, col:15> 'char' lvalue
    |   |   |   |     |-ImplicitCastExpr 0x1d2d5341710 <col:12> 'char *' <LValueToRValue>
    |   |   |   |     | `-DeclRefExpr 0x1d2d53416c8 <col:12> 'char *' lvalue Var 0x1d2d533e470 'v' 'char *'
    |   |   |   |     `-IntegerLiteral 0x1d2d53416e8 <col:14> 'int' 2
    |   |   |   `-CharacterLiteral 0x1d2d5341748 <col:19> 'int' 48
    |   |   `-IntegerLiteral 0x1d2d53417d0 <col:26> 'int' 10
    |   `-ParenExpr 0x1d2d5341920 <col:31, col:42> 'int'
    |     `-BinaryOperator 0x1d2d5341900 <col:32, col:39> 'int' '-'
    |       |-ImplicitCastExpr 0x1d2d53418e8 <col:32, col:35> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x1d2d53418d0 <col:32, col:35> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x1d2d5341898 <col:32, col:35> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x1d2d5341880 <col:32> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x1d2d5341838 <col:32> 'char *' lvalue Var 0x1d2d533e470 'v' 'char *'
    |       |     `-IntegerLiteral 0x1d2d5341858 <col:34> 'int' 3
    |       `-CharacterLiteral 0x1d2d53418b8 <col:39> 'int' 48
    |-BinaryOperator 0x1d2d5341c30 <line:244:5, col:40> 'int' '='
    | |-DeclRefExpr 0x1d2d5341980 <col:5> 'int' lvalue Var 0x1d2d533e708 'M' 'int'
    | `-BinaryOperator 0x1d2d5341c10 <col:9, col:40> 'int' '+'
    |   |-BinaryOperator 0x1d2d5341ae8 <col:9, col:24> 'int' '*'
    |   | |-ParenExpr 0x1d2d5341aa0 <col:9, col:20> 'int'
    |   | | `-BinaryOperator 0x1d2d5341a80 <col:10, col:17> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x1d2d5341a68 <col:10, col:13> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x1d2d5341a50 <col:10, col:13> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x1d2d5341a18 <col:10, col:13> 'char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x1d2d5341a00 <col:10> 'char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x1d2d53419b8 <col:10> 'char *' lvalue Var 0x1d2d533e470 'v' 'char *'
    |   | |   |     `-IntegerLiteral 0x1d2d53419d8 <col:12> 'int' 4
    |   | |   `-CharacterLiteral 0x1d2d5341a38 <col:17> 'int' 48
    |   | `-IntegerLiteral 0x1d2d5341ac0 <col:24> 'int' 10
    |   `-ParenExpr 0x1d2d5341bf0 <col:29, col:40> 'int'
    |     `-BinaryOperator 0x1d2d5341bd0 <col:30, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x1d2d5341bb8 <col:30, col:33> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x1d2d5341ba0 <col:30, col:33> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x1d2d5341b68 <col:30, col:33> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x1d2d5341b50 <col:30> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x1d2d5341b08 <col:30> 'char *' lvalue Var 0x1d2d533e470 'v' 'char *'
    |       |     `-IntegerLiteral 0x1d2d5341b28 <col:32> 'int' 5
    |       `-CharacterLiteral 0x1d2d5341b88 <col:37> 'int' 48
    |-IfStmt 0x1d2d5341dc8 <line:245:5, line:246:14>
    | |-BinaryOperator 0x1d2d5341d90 <line:245:9, col:27> 'int' '||'
    | | |-ParenExpr 0x1d2d5341cd0 <col:9, col:16> 'int'
    | | | `-BinaryOperator 0x1d2d5341cb0 <col:10, col:14> 'int' '>'
    | | |   |-ImplicitCastExpr 0x1d2d5341c98 <col:10> 'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x1d2d5341c50 <col:10> 'int' lvalue Var 0x1d2d533e708 'M' 'int'
    | | |   `-IntegerLiteral 0x1d2d5341c70 <col:14> 'int' 12
    | | `-ParenExpr 0x1d2d5341d70 <col:21, col:27> 'int'
    | |   `-BinaryOperator 0x1d2d5341d50 <col:22, col:26> 'int' '<'
    | |     |-ImplicitCastExpr 0x1d2d5341d38 <col:22> 'int' <LValueToRValue>
    | |     | `-DeclRefExpr 0x1d2d5341cf0 <col:22> 'int' lvalue Var 0x1d2d533e708 'M' 'int'
    | |     `-IntegerLiteral 0x1d2d5341d10 <col:26> 'int' 1
    | `-GotoStmt 0x1d2d5341db0 <line:246:9, col:14> 'err' 0x1d2d533ed70
    |-BinaryOperator 0x1d2d5342090 <line:247:5, col:40> 'int' '='
    | |-DeclRefExpr 0x1d2d5341de0 <col:5> 'int' lvalue Var 0x1d2d533e7b0 'd' 'int'
    | `-BinaryOperator 0x1d2d5342070 <col:9, col:40> 'int' '+'
    |   |-BinaryOperator 0x1d2d5341f48 <col:9, col:24> 'int' '*'
    |   | |-ParenExpr 0x1d2d5341f00 <col:9, col:20> 'int'
    |   | | `-BinaryOperator 0x1d2d5341ee0 <col:10, col:17> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x1d2d5341ec8 <col:10, col:13> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x1d2d5341eb0 <col:10, col:13> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x1d2d5341e78 <col:10, col:13> 'char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x1d2d5341e60 <col:10> 'char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x1d2d5341e18 <col:10> 'char *' lvalue Var 0x1d2d533e470 'v' 'char *'
    |   | |   |     `-IntegerLiteral 0x1d2d5341e38 <col:12> 'int' 6
    |   | |   `-CharacterLiteral 0x1d2d5341e98 <col:17> 'int' 48
    |   | `-IntegerLiteral 0x1d2d5341f20 <col:24> 'int' 10
    |   `-ParenExpr 0x1d2d5342050 <col:29, col:40> 'int'
    |     `-BinaryOperator 0x1d2d5342030 <col:30, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x1d2d5342018 <col:30, col:33> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x1d2d5342000 <col:30, col:33> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x1d2d5341fc8 <col:30, col:33> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x1d2d5341fb0 <col:30> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x1d2d5341f68 <col:30> 'char *' lvalue Var 0x1d2d533e470 'v' 'char *'
    |       |     `-IntegerLiteral 0x1d2d5341f88 <col:32> 'int' 7
    |       `-CharacterLiteral 0x1d2d5341fe8 <col:37> 'int' 48
    |-BinaryOperator 0x1d2d5342360 <line:248:5, col:40> 'int' '='
    | |-DeclRefExpr 0x1d2d53420b0 <col:5> 'int' lvalue Var 0x1d2d533e858 'h' 'int'
    | `-BinaryOperator 0x1d2d5342340 <col:9, col:40> 'int' '+'
    |   |-BinaryOperator 0x1d2d5342218 <col:9, col:24> 'int' '*'
    |   | |-ParenExpr 0x1d2d53421d0 <col:9, col:20> 'int'
    |   | | `-BinaryOperator 0x1d2d53421b0 <col:10, col:17> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x1d2d5342198 <col:10, col:13> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x1d2d5342180 <col:10, col:13> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x1d2d5342148 <col:10, col:13> 'char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x1d2d5342130 <col:10> 'char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x1d2d53420e8 <col:10> 'char *' lvalue Var 0x1d2d533e470 'v' 'char *'
    |   | |   |     `-IntegerLiteral 0x1d2d5342108 <col:12> 'int' 8
    |   | |   `-CharacterLiteral 0x1d2d5342168 <col:17> 'int' 48
    |   | `-IntegerLiteral 0x1d2d53421f0 <col:24> 'int' 10
    |   `-ParenExpr 0x1d2d5342320 <col:29, col:40> 'int'
    |     `-BinaryOperator 0x1d2d5342300 <col:30, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x1d2d53422e8 <col:30, col:33> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x1d2d53422d0 <col:30, col:33> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x1d2d5342298 <col:30, col:33> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x1d2d5342280 <col:30> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x1d2d5342238 <col:30> 'char *' lvalue Var 0x1d2d533e470 'v' 'char *'
    |       |     `-IntegerLiteral 0x1d2d5342258 <col:32> 'int' 9
    |       `-CharacterLiteral 0x1d2d53422b8 <col:37> 'int' 48
    |-BinaryOperator 0x1d2d533c5e0 <line:249:5, col:42> 'int' '='
    | |-DeclRefExpr 0x1d2d5342380 <col:5> 'int' lvalue Var 0x1d2d533e900 'm' 'int'
    | `-BinaryOperator 0x1d2d533c5c0 <col:9, col:42> 'int' '+'
    |   |-BinaryOperator 0x1d2d533c498 <col:9, col:25> 'int' '*'
    |   | |-ParenExpr 0x1d2d533c450 <col:9, col:21> 'int'
    |   | | `-BinaryOperator 0x1d2d5342480 <col:10, col:18> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x1d2d5342468 <col:10, col:14> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x1d2d5342450 <col:10, col:14> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x1d2d5342418 <col:10, col:14> 'char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x1d2d5342400 <col:10> 'char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x1d2d53423b8 <col:10> 'char *' lvalue Var 0x1d2d533e470 'v' 'char *'
    |   | |   |     `-IntegerLiteral 0x1d2d53423d8 <col:12> 'int' 10
    |   | |   `-CharacterLiteral 0x1d2d5342438 <col:18> 'int' 48
    |   | `-IntegerLiteral 0x1d2d533c470 <col:25> 'int' 10
    |   `-ParenExpr 0x1d2d533c5a0 <col:30, col:42> 'int'
    |     `-BinaryOperator 0x1d2d533c580 <col:31, col:39> 'int' '-'
    |       |-ImplicitCastExpr 0x1d2d533c568 <col:31, col:35> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x1d2d533c550 <col:31, col:35> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x1d2d533c518 <col:31, col:35> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x1d2d533c500 <col:31> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x1d2d533c4b8 <col:31> 'char *' lvalue Var 0x1d2d533e470 'v' 'char *'
    |       |     `-IntegerLiteral 0x1d2d533c4d8 <col:33> 'int' 11
    |       `-CharacterLiteral 0x1d2d533c538 <col:39> 'int' 48
    |-IfStmt 0x1d2d533d438 <line:250:5, line:262:5>
    | |-OpaqueValueExpr 0x1d2d533d420 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x1d2d533d400 <line:252:43, line:262:5>
    |   |-BinaryOperator 0x1d2d533ccf8 <line:253:9, col:46> 'int' '='
    |   | |-DeclRefExpr 0x1d2d533ca48 <col:9> 'int' lvalue Var 0x1d2d533e9a8 's' 'int'
    |   | `-BinaryOperator 0x1d2d533ccd8 <col:13, col:46> 'int' '+'
    |   |   |-BinaryOperator 0x1d2d533cbb0 <col:13, col:29> 'int' '*'
    |   |   | |-ParenExpr 0x1d2d533cb68 <col:13, col:25> 'int'
    |   |   | | `-BinaryOperator 0x1d2d533cb48 <col:14, col:22> 'int' '-'
    |   |   | |   |-ImplicitCastExpr 0x1d2d533cb30 <col:14, col:18> 'int' <IntegralCast>
    |   |   | |   | `-ImplicitCastExpr 0x1d2d533cb18 <col:14, col:18> 'char' <LValueToRValue>
    |   |   | |   |   `-ArraySubscriptExpr 0x1d2d533cae0 <col:14, col:18> 'char' lvalue
    |   |   | |   |     |-ImplicitCastExpr 0x1d2d533cac8 <col:14> 'char *' <LValueToRValue>
    |   |   | |   |     | `-DeclRefExpr 0x1d2d533ca80 <col:14> 'char *' lvalue Var 0x1d2d533e470 'v' 'char *'
    |   |   | |   |     `-IntegerLiteral 0x1d2d533caa0 <col:16> 'int' 12
    |   |   | |   `-CharacterLiteral 0x1d2d533cb00 <col:22> 'int' 48
    |   |   | `-IntegerLiteral 0x1d2d533cb88 <col:29> 'int' 10
    |   |   `-ParenExpr 0x1d2d533ccb8 <col:34, col:46> 'int'
    |   |     `-BinaryOperator 0x1d2d533cc98 <col:35, col:43> 'int' '-'
    |   |       |-ImplicitCastExpr 0x1d2d533cc80 <col:35, col:39> 'int' <IntegralCast>
    |   |       | `-ImplicitCastExpr 0x1d2d533cc68 <col:35, col:39> 'char' <LValueToRValue>
    |   |       |   `-ArraySubscriptExpr 0x1d2d533cc30 <col:35, col:39> 'char' lvalue
    |   |       |     |-ImplicitCastExpr 0x1d2d533cc18 <col:35> 'char *' <LValueToRValue>
    |   |       |     | `-DeclRefExpr 0x1d2d533cbd0 <col:35> 'char *' lvalue Var 0x1d2d533e470 'v' 'char *'
    |   |       |     `-IntegerLiteral 0x1d2d533cbf0 <col:37> 'int' 13
    |   |       `-CharacterLiteral 0x1d2d533cc50 <col:43> 'int' 48
    |   `-IfStmt 0x1d2d533d3e8 <line:255:9, line:261:9>
    |     |-OpaqueValueExpr 0x1d2d533d3d0 <<invalid sloc>> '_Bool'
    |     `-CompoundStmt 0x1d2d533d3a0 <line:255:47, line:261:9>
    |       |-DeclStmt 0x1d2d533cea8 <line:256:13, col:31>
    |       | `-VarDecl 0x1d2d533ce40 <col:13, col:17> col:17 used l 'int'
    |       |-BinaryOperator 0x1d2d533cf90 <line:257:13, col:22> 'char *' '='
    |       | |-DeclRefExpr 0x1d2d533cec0 <col:13> 'char *' lvalue Var 0x1d2d533eaa0 'f' 'char *'
    |       | `-UnaryOperator 0x1d2d533cf78 <col:17, col:22> 'char *' prefix '&' cannot overflow
    |       |   `-ArraySubscriptExpr 0x1d2d533cf58 <col:18, col:22> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x1d2d533cf40 <col:18> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x1d2d533cef8 <col:18> 'char *' lvalue Var 0x1d2d533e470 'v' 'char *'
    |       |     `-IntegerLiteral 0x1d2d533cf18 <col:20> 'int' 14
    |       |-BinaryOperator 0x1d2d533d010 <line:258:13, col:21> 'int' '='
    |       | |-DeclRefExpr 0x1d2d533cfb0 <col:13> 'int' lvalue Var 0x1d2d533ebd8 'f_len' 'int'
    |       | `-IntegerLiteral 0x1d2d533cfe8 <col:21> 'int' 1
    |       `-WhileStmt 0x1d2d533d388 <line:259:13, line:260:19>
    |         |-BinaryOperator 0x1d2d533d330 <line:259:20, col:69> 'int' '&&'
    |         | |-BinaryOperator 0x1d2d533d218 <col:20, col:50> 'int' '&&'
    |         | | |-BinaryOperator 0x1d2d533d100 <col:20, col:33> 'int' '<'
    |         | | | |-BinaryOperator 0x1d2d533d090 <col:20, col:25> 'int' '+'
    |         | | | | |-IntegerLiteral 0x1d2d533d030 <col:20> 'int' 14
    |         | | | | `-ImplicitCastExpr 0x1d2d533d078 <col:25> 'int' <LValueToRValue>
    |         | | | |   `-DeclRefExpr 0x1d2d533d058 <col:25> 'int' lvalue Var 0x1d2d533ebd8 'f_len' 'int'
    |         | | | `-ImplicitCastExpr 0x1d2d533d0e8 <col:33> 'int' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x1d2d533d0b0 <col:33> 'int' lvalue Var 0x1d2d533ce40 'l' 'int'
    |         | | `-BinaryOperator 0x1d2d533d1f8 <col:38, col:50> 'int' '>='
    |         | |   |-ImplicitCastExpr 0x1d2d533d1e0 <col:38, col:45> 'int' <IntegralCast>
    |         | |   | `-ImplicitCastExpr 0x1d2d533d1c8 <col:38, col:45> 'char' <LValueToRValue>
    |         | |   |   `-ArraySubscriptExpr 0x1d2d533d190 <col:38, col:45> 'char' lvalue
    |         | |   |     |-ImplicitCastExpr 0x1d2d533d160 <col:38> 'char *' <LValueToRValue>
    |         | |   |     | `-DeclRefExpr 0x1d2d533d120 <col:38> 'char *' lvalue Var 0x1d2d533eaa0 'f' 'char *'
    |         | |   |     `-ImplicitCastExpr 0x1d2d533d178 <col:40> 'int' <LValueToRValue>
    |         | |   |       `-DeclRefExpr 0x1d2d533d140 <col:40> 'int' lvalue Var 0x1d2d533ebd8 'f_len' 'int'
    |         | |   `-CharacterLiteral 0x1d2d533d1b0 <col:50> 'int' 48
    |         | `-BinaryOperator 0x1d2d533d310 <col:57, col:69> 'int' '<='
    |         |   |-ImplicitCastExpr 0x1d2d533d2f8 <col:57, col:64> 'int' <IntegralCast>
    |         |   | `-ImplicitCastExpr 0x1d2d533d2e0 <col:57, col:64> 'char' <LValueToRValue>
    |         |   |   `-ArraySubscriptExpr 0x1d2d533d2a8 <col:57, col:64> 'char' lvalue
    |         |   |     |-ImplicitCastExpr 0x1d2d533d278 <col:57> 'char *' <LValueToRValue>
    |         |   |     | `-DeclRefExpr 0x1d2d533d238 <col:57> 'char *' lvalue Var 0x1d2d533eaa0 'f' 'char *'
    |         |   |     `-ImplicitCastExpr 0x1d2d533d290 <col:59> 'int' <LValueToRValue>
    |         |   |       `-DeclRefExpr 0x1d2d533d258 <col:59> 'int' lvalue Var 0x1d2d533ebd8 'f_len' 'int'
    |         |   `-CharacterLiteral 0x1d2d533d2c8 <col:69> 'int' 57
    |         `-UnaryOperator 0x1d2d533d370 <line:260:17, col:19> 'int' prefix '++'
    |           `-DeclRefExpr 0x1d2d533d350 <col:19> 'int' lvalue Var 0x1d2d533ebd8 'f_len' 'int'
    |-IfStmt 0x1d2d5342b30 <line:264:5, line:269:18> has_else
    | |-OpaqueValueExpr 0x1d2d5342b18 <<invalid sloc>> '_Bool'
    | |-ReturnStmt 0x1d2d5342ab0 <line:267:9, col:18>
    | | `-ParenExpr 0x1d2d5342a90 <col:16, col:18> 'int'
    | |   `-IntegerLiteral 0x1d2d5342a68 <col:17> 'int' 0
    | `-ReturnStmt 0x1d2d5342b08 <line:269:9, col:18>
    |   `-ParenExpr 0x1d2d5342ae8 <col:16, col:18> 'int'
    |     `-IntegerLiteral 0x1d2d5342ac0 <col:17> 'int' 1
    |-LabelStmt 0x1d2d5342d00 <line:270:2, col:5> 'err'
    | `-NullStmt 0x1d2d5342cf8 <col:5>
    `-ReturnStmt 0x1d2d5342d60 <line:272:5, col:14>
      `-ParenExpr 0x1d2d5342d40 <col:12, col:14> 'int'
        `-IntegerLiteral 0x1d2d5342d18 <col:13> 'int' 0
