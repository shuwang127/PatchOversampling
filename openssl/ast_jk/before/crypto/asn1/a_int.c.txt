TranslationUnitDecl 0x2000ed747b8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2000ed75050 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2000ed74d50 '__int128'
|-TypedefDecl 0x2000ed750c0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2000ed74d70 'unsigned __int128'
|-TypedefDecl 0x2000ed753f8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x2000ed751b0 'struct __NSConstantString_tag'
|   `-Record 0x2000ed75118 '__NSConstantString_tag'
|-TypedefDecl 0x2000ed75468 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x2000ed74990 'unsigned long long'
|-TypedefDecl 0x2000ed75500 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2000ed754c0 'char *'
|   `-BuiltinType 0x2000ed74850 'char'
|-TypedefDecl 0x2000ed75570 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x2000ed754c0 'char *'
|   `-BuiltinType 0x2000ed74850 'char'
|-TypedefDecl 0x2000ed75630 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x2000ed74990 'unsigned long long'
|-TypedefDecl 0x2000ed756a0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x2000ed754c0 'char *'
|   `-BuiltinType 0x2000ed74850 'char'
|-FunctionDecl 0x200107e1440 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x200107e14e0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x200107e1550 <col:21> Implicit
|-FunctionDecl 0x200107e15a8 prev 0x200107e1440 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x200107e12d0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x200107e1698 <col:21> Inherited Implicit
|-TypedefDecl 0x200107e16d8 prev 0x2000ed75468 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x2000ed74990 'unsigned long long'
|-TypedefDecl 0x200107e1780 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x200107e1750 'size_t' sugar
|   |-Typedef 0x200107e16d8 'size_t'
|   `-BuiltinType 0x2000ed74990 'unsigned long long'
|-TypedefDecl 0x200107e17f0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x2000ed748f0 'long long'
|-TypedefDecl 0x200107e1860 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x2000ed748f0 'long long'
|-TypedefDecl 0x200107e18d0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x2000ed74930 'unsigned short'
|-TypedefDecl 0x200107e1940 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x2000ed74930 'unsigned short'
|-TypedefDecl 0x200107e19b0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x2000ed74930 'unsigned short'
|-TypedefDecl 0x200107e1a20 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x2000ed748b0 'int'
|-TypedefDecl 0x200107e1a90 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x2000ed748d0 'long'
|-TypedefDecl 0x200107e1b00 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x2000ed748f0 'long long'
|-TypedefDecl 0x200107e1b90 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x200107e1b60 '__time64_t' sugar
|   |-Typedef 0x200107e1b00 '__time64_t'
|   `-BuiltinType 0x2000ed748f0 'long long'
|-FunctionDecl 0x200107e1d08 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x200107e1f28 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x2001081a7f0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x200107e2068 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x200107e20e0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x200107e2158 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x200107e21d8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x2001081a590 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x2001081a8d0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x2001081a990 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x2001081ab00 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x2001081aab0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x2001081aa50 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x2001081a970 'struct threadlocaleinfostruct'
|       `-Record 0x200108205f0 'threadlocaleinfostruct'
|-TypedefDecl 0x2001081ac10 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x2001081abc0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x2001081ab60 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x2001081aa30 'struct threadmbcinfostruct'
|       `-Record 0x2001081a990 'threadmbcinfostruct'
|-RecordDecl 0x2001081ac68 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x2001081ad20 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x2001081ade0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2001081ae70 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x2001081af00 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x2001081afb8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x2001081af60 'struct localeinfo_struct' sugar
|   `-RecordType 0x2001081adc0 'struct localeinfo_struct'
|     `-Record 0x2001081ad20 'localeinfo_struct'
|-TypedefDecl 0x2001081b090 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x2001081b040 'struct localeinfo_struct *'
|   `-ElaboratedType 0x2001081af60 'struct localeinfo_struct' sugar
|     `-RecordType 0x2001081adc0 'struct localeinfo_struct'
|       `-Record 0x2001081ad20 'localeinfo_struct'
|-RecordDecl 0x2001081b108 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x2001081b1c0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2001081b238 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x2001081b2f8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x2001081b390 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x2001081b400 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x2001081b4b8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x2001081b460 'struct localerefcount' sugar
|   `-RecordType 0x2001081b1a0 'struct localerefcount'
|     `-Record 0x2001081b108 'localerefcount'
|-RecordDecl 0x200108205f0 prev 0x2001081a8d0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x20010820670 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x200108206e8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x20010820758 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x200108207c8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x20010820838 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x200108209f8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x20010820a68 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x20010820ad8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x20010820b48 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x20010820bb8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x20010820c28 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x20010820c80 parent 0x2000ed747b8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x20010820e10 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x20010820e80 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x20010820ef0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x20010820f60 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x20010821000 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x20010821070 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x20010821180 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x200108212b8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x20010821368 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x20010821310 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x2001081a970 'struct threadlocaleinfostruct'
|     `-Record 0x200108205f0 'threadlocaleinfostruct'
|-RecordDecl 0x20010821400 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x200108214c0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x20010821538 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x20010821600 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x20010821670 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x200108216e0 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x20010821750 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x200108217c0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x20010821830 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x200108218a0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x20010821950 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x20010821900 'struct _iobuf' sugar
|   `-RecordType 0x200108214a0 'struct _iobuf'
|     `-Record 0x20010821400 '_iobuf'
|-FunctionDecl 0x20010821b88 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x20010821c58 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x2000ed748f0 'long long'
|-FunctionDecl 0x20010821e38 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20010821cc0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x20010822130 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20010821f10 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x20010821f88 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x200108224e0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x20010822210 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x20010822290 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x20010822310 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x2001082d830 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2001082d6c0 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x2001082da60 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x2001082d920 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x2001082dc10 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2001082db30 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x2001082de00 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2001082e0f8 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x2001082ded0 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x2001082df50 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x2001082e2b0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2001082e1d0 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x2001082e460 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2001082e380 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x2001082e610 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2001082e530 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x2001082c7b8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2001082c6d8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x2001082c948 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2001082ccb0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x2001082ca10 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x2001082cb08 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x2001082d068 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x2001082cd90 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x2001082ce10 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x2001082ce88 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x2001082d228 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2001082d148 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x2001082d4f0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x2001082d300 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x2001082d380 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x2001082e6d0 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2001082eac8 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x2001082eb68 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2001082ebd0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2001082ec48 prev 0x2001082eac8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x2001082e8a0 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x2001082e920 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x2001082ecf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2001082f170 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x2001082eea0 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x2001082ef20 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x2001082efa0 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x2001082f490 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x2001082f530 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x2001082f598 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2001082f610 <col:40> Implicit printf 2 3
|-FunctionDecl 0x20010827660 prev 0x2001082f490 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2001082f250 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2001082f2d0 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x20010827758 <col:40> Inherited printf 2 3
|-FunctionDecl 0x20010827920 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x200108277a0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x20010827820 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x20010827b78 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20010827a00 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x20010827a78 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x20010827da8 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20010827c58 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x200108280a0 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x20010827e80 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x20010827ef8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x20010828538 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x200108285d8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2001082f6e0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2001082f748 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x2001082f7b0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x2001082f838 prev 0x20010828538 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x20010828180 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x200108281f8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010828270 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x200108282e8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x2001082fd40 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2001082f928 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x2001082f9a0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2001082fa18 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2001082fa90 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2001082fb08 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x20010830200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x2001082ff30 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x2001082ffb0 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x20010830028 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x200108302b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2001082a738 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x20010830400 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x20010830480 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x20010830500 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x20010830578 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x2001082aae0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x2001082ab80 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x2001082abe8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2001082ac60 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x2001082acc8 prev 0x2001082aae0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x2001082a918 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x2001082a998 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x2001082aea8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x2001082ad78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2001082b2e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2001082afe8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x2001082b068 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x2001082b100 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2001082b3a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20010828670 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2001082b4e0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x2001082b560 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x20010828960 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20010828748 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x200108287c8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x20010828840 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20010828cc0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x20010828a40 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x20010828b18 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x20010829078 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x20010828d98 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x20010828e18 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x20010828e98 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x200108292d8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x20010829158 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x200108296c8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x200108293a8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x20010829428 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x200108294a8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x20010829928 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x200108297a8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x20010829de8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x20010829e88 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x20010829ef0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x20010829f58 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x20010829fc0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x2001082a048 prev 0x20010829de8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x20010829a30 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x20010829aa8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010829b20 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20010829b98 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x2001082a210 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2001082a130 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x2001082a3a0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2001082a528 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x200108318c0 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x2001082a5f8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x20010831710 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x20010831be8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x20010831aa0 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x20010831c90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20010831eb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20010831dd0 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x200108320d0 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x20010831f88 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x20010832280 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x200108321a0 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x200108324d0 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x20010832358 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x200108323d8 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x2001082b6a0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x2001082b740 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2001082b7b0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x2001082b818 prev 0x2001082b6a0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x200108325b0 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x2001082b908 <col:40> Inherited printf 1 2
|-FunctionDecl 0x2001082ba38 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2001082b958 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x2001082bc88 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2001082bb10 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x2001082bb88 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x2001082be48 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2001082bd68 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x2001082c068 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2001082bf20 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x2001082c2b8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2001082c140 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x2001082c1b8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x2001082c478 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2001082c398 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x2001087efc0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2001082c550 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x2001082c5d0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x2001087f180 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2001087f0a0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x2001087f410 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x2001087f330 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x2001087f4b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x2001087f6b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2001087f5d8 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x2001087f840 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2001087fae8 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x2001087fb88 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2001087fbf8 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x2001087fc60 prev 0x2001087fae8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x2001087f9d0 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x2001087fe38 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x2001087fd08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2001087e1f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2001087dfb8 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x2001087e030 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2001087e2a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2001087e4c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2001087e3e8 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x2001087e718 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2001087e5a0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x2001087e618 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2001087ead8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x2001087e8b0 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x2001087e930 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x2001087eb88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2001087edb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2001087ecd0 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x20010884088 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x20010883f40 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x20010884270 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x200108846c0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x20010884338 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x200108843b8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x20010884438 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x200108844b0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x20010884b40 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x200108847b0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x20010884828 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x200108848a0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20010884920 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x20010882f30 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20010884c30 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x20010884ca8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20010884d28 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x200108830f8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20010883018 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x200108834d0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x20010883570 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x200108835d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x20010883650 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x200108836b8 prev 0x200108834d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x20010883290 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x20010883310 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x20010883898 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x20010883768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20010883c88 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x200108839a8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x20010883a28 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x20010883aa0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20010883d40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2001087cfd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x20010883e88 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x2001087ced0 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x2001087d2c8 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2001087d0b0 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x2001087d130 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x2001087d1a8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2001087d758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2001087d470 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x2001087d4e8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2001087d568 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x2001087d810 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2001087dde0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2001087da50 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x2001087dac8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2001087db48 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x2001087dbc0 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20010880f10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20010881270 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20010881058 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x200108810d0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20010881150 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x20010881608 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20010881358 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x200108813d0 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010881450 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x200108814c8 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20010881868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x20010881908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20010881bc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x20010881a50 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x20010886f70 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x20010881c98 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x20010881d10 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x200108871f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x20010887110 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x20010887298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20010887558 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x200108873e0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x20010887458 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x20010887970 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x20010887a10 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x20010887a78 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x20010887ae0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20010887b60 <col:40> Implicit printf 2 0
|-FunctionDecl 0x20010887bc8 prev 0x20010887970 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x20010887630 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x200108876b0 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x20010887728 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20010887cc8 <col:40> Inherited printf 2 0
|-FunctionDecl 0x20010885f60 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x20010886000 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x20010886068 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x200108860d0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20010886150 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x200108861b8 prev 0x20010885f60 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x20010887d10 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x20010887d90 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x20010887e08 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x200108862b8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x20010886518 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x20010886300 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x20010886380 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x200108863f8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010886810 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x200108865f8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x20010886678 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x200108866f0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010886b58 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x20010886bf8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x20010886c60 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20010886cd8 <col:40> Implicit printf 1 0
|-FunctionDecl 0x20010886d40 prev 0x20010886b58 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x200108868f8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x20010886970 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20010886e38 <col:40> Inherited printf 1 0
|-FunctionDecl 0x20010880038 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x200108800d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20010880140 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x200108801b8 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x20010880220 prev 0x20010880038 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x20010886e88 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x2001087ff00 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20010880318 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x200108804e0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x20010880368 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x200108803e0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010880738 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x200108805c0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x20010880638 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010880c98 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x20010880d38 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x20010880da0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x20010880e08 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x20010880e70 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20010887f80 <col:77> Implicit printf 3 0
|-FunctionDecl 0x20010887fe8 prev 0x20010880c98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x200108808d8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x20010880950 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x200108809d0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x20010880a48 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x200108881d8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x200108880a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20010888648 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20010888228 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x200108882a0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010888318 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010888398 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x20010888410 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010888a88 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20010888740 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x200108887b8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010888830 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x200108888b0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x20010888928 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010888e58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20010888c40 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x20010888cb8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010888d38 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x20010888f10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x200108853c0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20010885110 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x20010885188 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010885208 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x20010885280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x20010885480 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20010885878 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x200108855c8 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x20010885640 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x200108856c0 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x20010885738 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010885c38 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x20010885968 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x200108859e8 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x20010885a60 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010889030 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x200108890d0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x20010889138 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x200108891b0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x20010889218 prev 0x20010889030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x20010885de0 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x20010885e60 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x200108893f8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x200108892c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20010889820 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x200108898c0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x20010889928 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x20010889990 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20010889a10 <col:94> Implicit printf 2 0
|-FunctionDecl 0x20010889a78 prev 0x20010889820 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x20010889508 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x20010889588 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x20010889600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x20010889c60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x20010889b30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20010881f20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x20010881fc0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20010882028 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20010882090 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20010882110 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x20010882178 prev 0x20010881f20 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x20010889cb0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x20010889d30 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x20010889da8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20010882278 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x20010882440 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x200108822c8 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x20010882340 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010882738 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20010882520 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x20010882598 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20010882618 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x20010882ad0 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20010882820 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x20010882898 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010882918 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x20010882990 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010882d38 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x20010882bb8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x20010882c38 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x20010891010 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20010882e18 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x20010891300 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x200108910e8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x20010891160 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x200108911e0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x200108915f8 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x200108913e0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x20010891460 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x200108914d8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010891858 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x200108916e0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x20010891758 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010891be8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20010891938 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x200108919b0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010891a30 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x20010891aa8 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010891db8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20010891cd8 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x20010889fa0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x20010891e90 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x20010891f08 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2001088a160 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2001088a080 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x2001088a2f0 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2001088a538 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2001088a3c0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x2001088a438 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2001088a790 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2001088a618 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2001088a690 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2001088a9e8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2001088a870 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2001088a8e8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2001088ad98 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2001088aac8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x2001088ab40 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2001088abb8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2001088b0d0 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2001088ae80 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2001088aef8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2001088afb0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2001088b3c8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2001088b1b8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2001088b230 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2001088b2a8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2001088b6c0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2001088b4a8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2001088b528 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x2001088b5a0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2001088b9b8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2001088b7a0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2001088b820 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2001088b898 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2001088bcb0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2001088ba98 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2001088bb18 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2001088bb90 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20010892180 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2001088bd90 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2001088be10 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x2001088be88 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2001088bf00 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010892518 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20010892268 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x200108922e8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x20010892360 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x200108923d8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x200108928b0 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20010892600 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x20010892680 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x200108926f8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20010892770 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010892d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20010892a60 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x20010892ae0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x20010892b58 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20010892e00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2001088f300 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20010892f48 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x2001088eff0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2001088f070 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x2001088f0e8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2001088f6a0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2001088f3f0 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x2001088f468 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2001088f4e8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x2001088f560 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2001088fbf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2001088f890 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x2001088f910 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x2001088f988 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2001088fa00 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2001088fcb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20010893268 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2001088fdf8 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x2001088fe70 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2001088fef0 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x2001088ff68 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20010893030 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x200108936a8 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20010893360 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x200108933d8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010893458 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x200108934d0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20010893548 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010893918 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x200108937a0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x20010893818 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20010893b70 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x200108939f8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x20010893a70 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20010893e60 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20010893c50 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x20010893cc8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20010893d40 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2001088c0f0 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20010893f48 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x20010893fc0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2001088bfd0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2001088c548 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2001088c298 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x2001088c310 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2001088c390 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x2001088c408 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2001088c608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2001088ca00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2001088c750 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x2001088c7c8 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2001088c848 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x2001088c8c0 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20010894040 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2001088caf0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2001088cb68 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2001088cbe0 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2001088cc60 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x2001088ccd8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20010894580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20010894238 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x200108942b0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010894330 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x200108943a8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20010894420 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x20010894648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20010894ac8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20010894798 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x20010894810 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010894890 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x20010894908 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20010894980 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2001088d030 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20010894bc0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x20010894c38 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010894cb0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010894d30 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x20010894da8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20010894e20 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2001088d3f0 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x2001088d128 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2001088d1a0 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x2001088d220 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x2001088d660 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2001088d4f0 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x2001088d878 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x2001088db58 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2001088d940 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2001088d9b8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x2001088dda0 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x2001088dc30 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x20010895050 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2001088de70 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x200108951d8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x20010895410 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x200108952a0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x20010895318 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x200108955c0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x200108954e8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x20010895868 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x20010895690 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20010895708 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x20010895c10 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x20010895940 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x200108959c0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x20010895a38 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x20010895f10 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x20010895cf0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x20010895d68 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2001089a258 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x20010895fe8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x2001089a0b0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2001089a560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2001089a3f0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x2001089a608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2001089a8c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x2001089a748 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x2001089abd0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2001089a998 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x2001089aa10 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x2001089ae20 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2001089aca8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x2001089ad20 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x20010896060 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2001089aef8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x20010896210 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20010896130 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x200108963c0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x200108962e0 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x20010896758 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20010896490 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x20010896508 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20010896580 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010896a48 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20010896838 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x200108968b0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20010896928 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010896d38 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20010896b28 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x20010896ba0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20010896c18 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2001089b0b0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20010896e18 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x20010896e90 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20010896f08 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2001089b3b0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2001089b190 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2001089b208 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2001089b600 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2001089b488 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2001089b500 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2001089b850 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2001089b6d8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2001089b750 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2001089baa0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2001089b928 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2001089b9a0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2001089be58 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2001089bb78 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2001089bbf0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2001089bc68 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x20010897280 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2001089bf38 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2001089bfb0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2001089c028 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20010897070 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010897638 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20010897368 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x200108973e0 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20010897458 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010897928 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20010897718 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x20010897790 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20010897808 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010897c18 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20010897a08 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20010897a80 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20010897af8 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x20010897fa0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20010897cf8 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20010897d70 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010897de8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20010897e60 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010899440 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x200108990b8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20010899130 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x200108991a8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20010899220 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x20010899948 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20010899528 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x200108995a0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010899618 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010899690 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20010899708 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010899d08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20010899af8 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20010899b70 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010899be8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x20010899dc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x200108982b0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20010899fc0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20010898080 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x200108980f8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20010898170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x20010898370 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20010898628 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x200108984b0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x20010898528 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x200108987e0 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20010898700 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x20010898ac0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x200108988b0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x20010898928 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x200108989a0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010898d18 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20010898ba0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20010898c18 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010863630 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20010898df0 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20010898e68 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20010898ee0 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x200108639b8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20010863710 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20010863788 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010863800 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20010863878 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010863b80 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20010863aa0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x20010863dc8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20010863c50 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20010863cc8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x200108640d0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20010863ea0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20010863f18 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20010864320 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x200108641a8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20010864220 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20010864570 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x200108643f8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20010864470 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2001085e8d8 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2001085e608 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2001085e680 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2001085e6f8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2001085ebc8 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2001085e9b8 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2001085ea30 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2001085eaa8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2001085eeb8 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2001085eca8 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2001085ed20 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2001085ed98 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2001085f278 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2001085ef98 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2001085f010 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2001085f088 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2001085c5c0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2001085f358 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2001085f3d0 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2001085f448 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2001085c8b0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2001085c6a0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2001085c718 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2001085c790 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2001085cd00 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2001085c990 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2001085ca08 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2001085ca80 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2001085caf8 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2001085d090 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2001085cde8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x2001085ce60 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2001085ced8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2001085cf50 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2001085d420 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2001085d178 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x2001085d1f0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2001085d268 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2001085d2e0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010864950 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2001085d508 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20010864640 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x200108646b8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20010864730 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20010864ce0 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20010864a38 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20010864ab0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010864b28 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20010864ba0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20010865070 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20010864dc8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20010864e40 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010864eb8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20010864f30 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20010865578 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20010865158 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x200108651d0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010865248 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x200108652c0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20010865338 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2001085d938 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2001085d5f8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2001085d670 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2001085d6e8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2001085d760 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2001085d7d8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2001085dd68 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2001085da28 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2001085daa0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2001085db18 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2001085db90 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2001085dc08 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2001085dfd0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2001085de58 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2001085ded0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2001085e220 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2001085e0a8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2001085e120 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2001085e508 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2001085e2f8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2001085e370 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2001085e3e8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2001085f988 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2001085f6e0 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2001085f758 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2001085f7d0 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2001085f848 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2001085fa48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2001085ffb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2001085fb90 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2001085fc08 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2001085fc80 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2001085fcf8 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2001085fd70 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x200108604f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x200108601b0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20010860228 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x200108602a0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20010860318 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20010860390 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x20010865650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20010865c60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20010865798 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20010865810 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010865888 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010865900 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20010865978 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x200108659f0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010866160 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20010865f28 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20010865fa0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x20010866210 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x20010866328 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x20010860868 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x200108665e0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20010860610 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20010860688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x20010860920 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x20010860a38 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x20010860fd8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20010860cf8 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20010860d70 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20010860de8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x20010861090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x200108611b0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x20010868890 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20010861470 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x200108614e8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20010861560 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20010868680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x20010868950 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x20010868a70 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x20010868d78 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x20010868b98 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x20010868c10 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010868c88 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x20010867910 <line:37:1, line:44:1>
|   |-DeclStmt 0x20010868ec0 <line:38:5, col:21>
|   | `-VarDecl 0x20010868e58 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x20010868f58 <line:39:5, col:13>
|   | `-VarDecl 0x20010868ef0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x200108692b0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x20010869298 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x200108691b0 <col:34> '<builtin fn type>' Function 0x20010869048 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x200108691e8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x20010868e58 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x20010869220 <col:29> 'const wchar_t *' lvalue ParmVar 0x20010868c88 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x20010869570 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x200108692e0 <col:5> 'int' lvalue Var 0x20010868ef0 '_Ret' 'int'
|   | `-CallExpr 0x200108694b0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x20010869498 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x20010869318 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x20010865578 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x200108694f8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20010869338 <col:27> 'wchar_t *' lvalue ParmVar 0x20010868b98 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x20010869510 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20010869358 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x20010868c10 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x20010869528 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20010869378 <col:44> 'const wchar_t *' lvalue ParmVar 0x20010868c88 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x20010869540 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x20010869400 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x200108693d8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x20010869398 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x20010869558 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x20010869420 <col:59> 'va_list':'char *' lvalue Var 0x20010868e58 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x200108678a0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x20010867888 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x200108677d8 <col:34> '<builtin fn type>' Function 0x20010867670 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x20010867810 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x20010868e58 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x20010867900 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x200108678e8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x200108678c8 <col:12> 'int' lvalue Var 0x20010868ef0 '_Ret' 'int'
|-FunctionDecl 0x20010869048 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x200108690e8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x20010869158 <col:34> Implicit
|-FunctionDecl 0x20010867670 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x20010867710 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x20010867780 <col:34> Implicit
|-FunctionDecl 0x20010867c08 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x20010867960 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x200108679d8 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010867a50 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x20010867ac8 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x20010867ef0 <line:50:1, line:52:1>
|   `-ReturnStmt 0x20010867ee0 <line:51:5, col:62>
|     `-CallExpr 0x20010867e20 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x20010867e08 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x20010867ce0 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x20010865578 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x20010867e68 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x20010867d00 <col:27> 'wchar_t *' lvalue ParmVar 0x20010867960 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x20010867e80 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x20010867d20 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x200108679d8 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x20010867e98 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x20010867d40 <col:44> 'const wchar_t *' lvalue ParmVar 0x20010867a50 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x20010867eb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x20010867dc8 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x20010867da0 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x20010867d60 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x20010867ec8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x20010867de8 <col:59> 'va_list':'char *' lvalue ParmVar 0x20010867ac8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x20010868190 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x20010867f18 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x20010867f90 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010868008 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x20010868080 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x200108616b8 <line:61:1, line:68:1>
|   |-DeclStmt 0x200108682e0 <line:62:5, col:21>
|   | `-VarDecl 0x20010868278 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x20010868378 <line:63:5, col:13>
|   | `-VarDecl 0x20010868310 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x20010868420 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x20010868408 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x20010868390 <col:34> '<builtin fn type>' Function 0x20010869048 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x200108683b0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x20010868278 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x200108683e8 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x20010868080 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x20010868620 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x20010868450 <col:5> 'int' lvalue Var 0x20010868310 '_Ret' 'int'
|   | `-CallExpr 0x20010868560 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x20010868548 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x20010868488 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x20010865578 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x200108685a8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x200108684a8 <col:27> 'wchar_t *' lvalue ParmVar 0x20010867f18 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x200108685c0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x200108684c8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x20010867f90 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x200108685d8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x200108684e8 <col:44> 'const wchar_t *' lvalue ParmVar 0x20010868008 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x200108685f0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20010868508 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x20010868080 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x20010868608 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x20010868528 <col:64> 'va_list':'char *' lvalue Var 0x20010868278 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x20010861648 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x20010861630 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x20010868640 <col:34> '<builtin fn type>' Function 0x20010867670 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x20010861610 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x20010868278 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x200108616a8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x20010861690 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x20010861670 <col:12> 'int' lvalue Var 0x20010868310 '_Ret' 'int'
|-FunctionDecl 0x20010861a48 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x20010861708 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x20010861780 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x200108617f8 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x20010861870 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x200108618e8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x20010861cd0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x20010861cc0 <line:75:5, col:67>
|     `-CallExpr 0x20010861c00 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x20010861be8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x20010861b28 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x20010865578 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x20010861c48 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x20010861b48 <col:27> 'wchar_t *' lvalue ParmVar 0x20010861708 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x20010861c60 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x20010861b68 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x20010861780 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x20010861c78 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x20010861b88 <col:44> 'const wchar_t *' lvalue ParmVar 0x200108617f8 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x20010861c90 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x20010861ba8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x20010861870 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x20010861ca8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x20010861bc8 <col:64> 'va_list':'char *' lvalue ParmVar 0x200108618e8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x20010861f18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20010861cf8 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x20010861d70 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x20010862168 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20010861ff0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20010862068 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010862450 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20010862240 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x200108622b8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20010862330 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20010870878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20010870700 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x20010870778 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x20010870928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20010870d38 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20010870b28 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x20010870ba0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20010870c18 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20010870df0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x200108710a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20010870f30 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x20010870fa8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x20010871390 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20010871180 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x200108711f8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20010871270 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2001086d740 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20010871530 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x200108715a8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2001086d7f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2001086dcc8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2001086d9f0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2001086da68 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2001086dae0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2001086dd80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2001086e038 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2001086dec0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2001086df38 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x2001086e320 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2001086e110 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2001086e188 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2001086e200 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2001086e7c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2001086e4c0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2001086e538 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2001086e5b0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2001086e880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2001086ee00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2001086ea80 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2001086eaf8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2001086eb70 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2001086ebe8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2001086eec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2001086f210 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2001086f000 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2001086f078 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2001086f0f0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x2001086f598 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2001086f2f0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2001086f368 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2001086f3e0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2001086f458 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2001086b860 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x2001086b780 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2001086b908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2001086bc80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2001086bb08 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2001086bb80 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2001086bd30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2001086bf50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2001086be70 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x2001086c198 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2001086c020 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2001086c098 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2001086c498 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x2001086c278 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x2001086c2f0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x2001086f898 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2001086c630 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2001086f6f0 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x2001086f948 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2001086fd50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2001086fa90 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x2001086fb08 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x2001086fb80 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x200108701b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2001086fef0 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2001086ff68 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x2001086ffe0 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x20010870268 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20010871758 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x200108703b0 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x20010870428 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x200108704a0 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x20010870518 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x200108719b0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x20010871840 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x20010871bf0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20010871a80 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x20010871af8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x20010871da8 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x20010871cc8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x20010872098 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x20010871e78 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x20010871ef0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x20010872308 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x20010872230 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x200108723b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x200108725c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x200108724f0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x2001086a798 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x20010872698 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2001086a6a0 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2001086a9e0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x2001086a870 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2001086a8e8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2001086ab90 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2001086aab8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x2001086ad38 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2001086ac60 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x2001086aee8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2001086ae08 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x2001086b098 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2001086afb8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x2001086b410 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2001086b170 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x2001086b1e8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2001086b260 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2001086b2d8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x20010873900 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2001086b500 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x2001086b578 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2001086b5f0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010873730 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x200108737a8 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x20010873c10 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x200108739f0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x20010873a70 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x20010873af0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x20010873dd0 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x20010873cf0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x200108740c0 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x20010873ea0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x20010873f20 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x20010873fa0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x20010874280 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x200108741a0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x200108745f8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x20010874358 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x200108743d0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20010874448 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x200108744c0 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x2001086c838 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2001086c6c0 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x2001086c738 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x2001086cb70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x2001086c9f0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x2001086ca70 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x2001086cc20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x2001086ced8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2001086cf78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x2001086d2b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x2001086d140 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x2001086d1c0 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x2001086d368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x20010876760 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x20010876800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x20010876aa0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x200108769c0 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x20010876b48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x20010876dc8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x20010876e68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x20010877110 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x20010877030 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x200108771b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x20010877498 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x200108773b8 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x20010877540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x2001087a918 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2001087a7a0 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x2001087a818 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x2001087a9c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x2001087ac88 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2001087ad28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x2001087b150 <.//openssl//file_jk/before\crypto\asn1/asn1_locl.h:12:1, col:60> col:5 invalid asn1_utctime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x2001087afb0 <col:24, col:35> col:35 tm 'struct tm *'
| `-ParmVarDecl 0x2001087b030 <col:39, col:59> col:59 invalid d 'const int *'
|-FunctionDecl 0x2001087b520 <line:13:1, col:76> col:5 invalid asn1_generalizedtime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x2001087b380 <col:32, col:43> col:43 tm 'struct tm *'
| `-ParmVarDecl 0x2001087b400 <col:47, col:75> col:75 invalid d 'const int *'
|-RecordDecl 0x2001087b5d0 <line:17:1, line:38:1> line:17:8 invalid struct asn1_sctx_st definition
| |-FieldDecl 0x2001087b6a8 <line:19:5, col:22> col:22 invalid it 'const int *'
| |-FieldDecl 0x2001087b718 <line:21:5, col:26> col:26 invalid tt 'const int *'
| |-FieldDecl 0x200108a8420 <line:23:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x200108a8490 <line:25:5, col:9> col:9 skidx 'int'
| |-FieldDecl 0x200108a8500 <line:27:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x200108a8570 <line:29:5, col:17> col:17 sname 'const char *'
| |-FieldDecl 0x200108a85e0 <col:5, col:25> col:25 fname 'const char *'
| |-FieldDecl 0x200108a8650 <line:31:5, col:9> col:9 prim_type 'int'
| |-FieldDecl 0x200108a86f8 <line:33:5, col:18> col:18 invalid field 'int **'
| |-FieldDecl 0x200108a88c8 <line:35:5, col:35> col:11 scan_cb 'int (*)(int *)'
| `-FieldDecl 0x200108a8938 <line:37:5, col:11> col:11 app_data 'void *'
|-RecordDecl 0x200108a8990 <line:40:9, col:16> col:16 struct mime_param_st
|-TypedefDecl 0x200108a8aa8 <col:1, col:30> col:30 referenced MIME_PARAM 'struct mime_param_st':'struct mime_param_st'
| `-ElaboratedType 0x200108a8a50 'struct mime_param_st' sugar
|   `-RecordType 0x200108a8a30 'struct mime_param_st'
|     `-Record 0x200108a8990 'mime_param_st'
|-FunctionDecl 0x200108a8c50 <line:41:1, col:27> col:1 DEFINE_STACK_OF 'int (MIME_PARAM)'
| `-ParmVarDecl 0x200108a8b50 <col:17> col:27 'MIME_PARAM':'struct mime_param_st'
|-RecordDecl 0x200108a8d10 <line:42:9, col:16> col:16 struct mime_header_st
|-TypedefDecl 0x200108a8e28 <col:1, col:31> col:31 referenced MIME_HEADER 'struct mime_header_st':'struct mime_header_st'
| `-ElaboratedType 0x200108a8dd0 'struct mime_header_st' sugar
|   `-RecordType 0x200108a8db0 'struct mime_header_st'
|     `-Record 0x200108a8d10 'mime_header_st'
|-FunctionDecl 0x200108a8fd0 <line:43:1, col:28> col:1 invalid DEFINE_STACK_OF 'int (MIME_HEADER)'
| `-ParmVarDecl 0x200108a8ed0 <col:17> col:28 'MIME_HEADER':'struct mime_header_st'
|-VarDecl 0x200108a9120 <line:46:1, col:32> col:20 _asn1_mon 'const char *[12]' extern
|-FunctionDecl 0x200108a9308 <line:48:1, col:54> col:6 invalid asn1_string_embed_free 'void (int *, int)'
| |-ParmVarDecl 0x200108a91b8 <col:29, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x200108a9238 <col:45, col:49> col:49 embed 'int'
|-FunctionDecl 0x200108aa5a0 <line:50:1, col:68> col:5 invalid asn1_get_choice_selector 'int (int **, const int *)'
| |-ParmVarDecl 0x200108aa440 <col:30, col:43> col:43 invalid pval 'int **'
| `-ParmVarDecl 0x200108aa4c0 <col:49, col:66> col:66 invalid it 'const int *'
|-FunctionDecl 0x200108aa860 <line:51:1, line:52:49> line:51:5 invalid asn1_set_choice_selector 'int (int **, int, const int *)'
| |-ParmVarDecl 0x200108aa670 <col:30, col:43> col:43 invalid pval 'int **'
| |-ParmVarDecl 0x200108aa6f0 <col:49, col:53> col:53 value 'int'
| `-ParmVarDecl 0x200108aa770 <line:52:30, col:47> col:47 invalid it 'const int *'
|-FunctionDecl 0x200108aaa98 <line:54:1, col:75> col:14 invalid asn1_get_field_ptr 'int **(int **, const int *)'
| |-ParmVarDecl 0x200108aa938 <col:33, col:46> col:46 invalid pval 'int **'
| `-ParmVarDecl 0x200108aa9b8 <col:52, col:73> col:73 invalid tt 'const int *'
|-FunctionDecl 0x200108aad50 <line:56:1, line:57:45> line:56:22 invalid asn1_do_adb 'const int *(int **, const int *, int)'
| |-ParmVarDecl 0x200108aab68 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x200108aabe8 <col:53, col:74> col:74 invalid tt 'const int *'
| `-ParmVarDecl 0x200108aac68 <line:57:34, col:38> col:38 nullerr 'int'
|-FunctionDecl 0x200108aafd0 <line:59:1, col:64> col:5 invalid asn1_do_lock 'int (int **, int, const int *)'
| |-ParmVarDecl 0x200108aae28 <col:18, col:31> col:31 invalid pval 'int **'
| |-ParmVarDecl 0x200108aaea8 <col:37, col:41> col:41 op 'int'
| `-ParmVarDecl 0x200108aaf28 <col:45, col:62> col:62 invalid it 'const int *'
|-FunctionDecl 0x200108ab1f8 <line:61:1, col:58> col:6 invalid asn1_enc_init 'void (int **, const int *)'
| |-ParmVarDecl 0x200108ab0a8 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x200108ab128 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x200108ab450 <line:62:1, col:58> col:6 invalid asn1_enc_free 'void (int **, const int *)'
| |-ParmVarDecl 0x200108ab2c8 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x200108ab348 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x200108ab800 <line:63:1, line:64:41> line:63:5 invalid asn1_enc_restore 'int (int *, unsigned char **, int **, const int *)'
| |-ParmVarDecl 0x200108ab518 <col:22, col:27> col:27 len 'int *'
| |-ParmVarDecl 0x200108ab5f8 <col:32, col:48> col:48 out 'unsigned char **'
| |-ParmVarDecl 0x200108ab680 <col:53, col:66> col:66 invalid pval 'int **'
| `-ParmVarDecl 0x200108ab700 <line:64:22, col:39> col:39 invalid it 'const int *'
|-FunctionDecl 0x200108abb60 <line:65:1, line:66:38> line:65:5 invalid asn1_enc_save 'int (int **, const unsigned char *, int, const int *)'
| |-ParmVarDecl 0x200108ab8e0 <col:19, col:32> col:32 invalid pval 'int **'
| |-ParmVarDecl 0x200108ab960 <col:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x200108ab9e0 <col:63, col:67> col:67 inlen 'int'
| `-ParmVarDecl 0x200108aba60 <line:66:19, col:36> col:36 invalid it 'const int *'
|-FunctionDecl 0x200108abe28 <line:68:1, col:76> col:6 invalid asn1_item_embed_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x200108abc40 <col:27, col:40> col:40 invalid pval 'int **'
| |-ParmVarDecl 0x200108abcc0 <col:46, col:63> col:63 invalid it 'const int *'
| `-ParmVarDecl 0x200108abd40 <col:67, col:71> col:71 embed 'int'
|-FunctionDecl 0x200108ac0a0 <line:69:1, col:75> col:6 invalid asn1_primitive_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x200108abf00 <col:26, col:39> col:39 invalid pval 'int **'
| |-ParmVarDecl 0x200108abf80 <col:45, col:62> col:62 invalid it 'const int *'
| `-ParmVarDecl 0x200108ac000 <col:66, col:70> col:70 embed 'int'
|-FunctionDecl 0x200108ac290 <line:70:1, col:67> col:6 invalid asn1_template_free 'void (int **, const int *)'
| |-ParmVarDecl 0x200108ac178 <col:25, col:38> col:38 invalid pval 'int **'
| `-ParmVarDecl 0x200108ac1f8 <col:44, col:65> col:65 invalid tt 'const int *'
|-FunctionDecl 0x200108a7580 <line:72:1, line:73:41> line:72:14 invalid c2i_ASN1_OBJECT 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x200108ac360 <col:30, col:44> col:44 invalid a 'int **'
| |-ParmVarDecl 0x200108a7410 <col:47, col:69> col:69 pp 'const unsigned char **'
| `-ParmVarDecl 0x200108a7490 <line:73:30, col:35> col:35 length 'long'
|-FunctionDecl 0x200108a77b0 <line:74:1, col:63> col:5 invalid i2c_ASN1_BIT_STRING 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x200108a7650 <col:25, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x200108a76d8 <col:45, col:61> col:61 pp 'unsigned char **'
|-FunctionDecl 0x200108a7a30 <line:75:1, line:76:75> line:75:18 invalid c2i_ASN1_BIT_STRING 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x200108a7880 <col:38, col:56> col:56 invalid a 'int **'
| |-ParmVarDecl 0x200108a7908 <line:76:38, col:60> col:60 pp 'const unsigned char **'
| `-ParmVarDecl 0x200108a7988 <col:64, col:69> col:69 length 'long'
|-FunctionDecl 0x200108a7c28 <line:77:1, col:57> col:5 invalid i2c_ASN1_INTEGER 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x200108a7b00 <col:22, col:36> col:36 invalid a 'int *'
| `-ParmVarDecl 0x200108a7b88 <col:39, col:55> col:55 pp 'unsigned char **'
|-FunctionDecl 0x200108a7ea8 <line:78:1, line:79:43> line:78:15 invalid c2i_ASN1_INTEGER 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x200108a7cf8 <col:32, col:47> col:47 invalid a 'int **'
| |-ParmVarDecl 0x200108a7d80 <col:50, col:72> col:72 pp 'const unsigned char **'
| `-ParmVarDecl 0x200108a7e00 <line:79:32, col:37> col:37 length 'long'
|-FunctionDecl 0x200108a8200 <line:82:1, col:79> col:5 invalid c2i_uint64_int 'int (int *, int *, const unsigned char **, long)'
| |-ParmVarDecl 0x200108a7f78 <col:20, col:30> col:30 invalid ret 'int *'
| |-ParmVarDecl 0x200108a7ff8 <col:35, col:40> col:40 neg 'int *'
| |-ParmVarDecl 0x200108a8080 <col:45, col:67> col:67 pp 'const unsigned char **'
| `-ParmVarDecl 0x200108a8100 <col:71, col:76> col:76 len 'long'
|-FunctionDecl 0x200108a44d0 <line:83:1, col:57> col:5 invalid i2c_uint64_int 'int (unsigned char *, int, int)'
| |-ParmVarDecl 0x200108a82d8 <col:20, col:35> col:35 p 'unsigned char *'
| |-ParmVarDecl 0x200108a8358 <col:38, col:47> col:47 invalid r 'int'
| `-ParmVarDecl 0x200108a43e0 <col:50, col:54> col:54 neg 'int'
|-FunctionDecl 0x200108a4670 <.//openssl//file_jk/before\crypto\asn1\a_int.c:18:1, line:21:1> line:18:15 invalid ASN1_INTEGER_dup 'int *(const int *)'
| |-ParmVarDecl 0x200108a45a0 <col:32, col:52> col:52 invalid x 'const int *'
| `-CompoundStmt 0x200108a4868 <line:19:1, line:21:1>
|-FunctionDecl 0x200108a49f0 <line:23:1, line:41:1> line:23:5 invalid ASN1_INTEGER_cmp 'int (const int *, const int *)'
| |-ParmVarDecl 0x200108a4890 <col:22, col:42> col:42 invalid x 'const int *'
| |-ParmVarDecl 0x200108a4910 <col:45, col:65> col:65 invalid y 'const int *'
| `-CompoundStmt 0x200108a4fc0 <line:24:1, line:41:1>
|   |-DeclStmt 0x200108a4bd0 <line:25:5, col:17>
|   | |-VarDecl 0x200108a4ad0 <col:5, col:9> col:9 used neg 'int'
|   | `-VarDecl 0x200108a4b50 <col:5, col:14> col:14 used ret 'int'
|   |-IfStmt 0x200108a4d58 <line:28:5, line:33:5>
|   | |-OpaqueValueExpr 0x200108a4d40 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x200108a4d28 <line:28:40, line:33:5>
|   |   `-IfStmt 0x200108a4d00 <line:29:9, line:32:20> has_else
|   |     |-ImplicitCastExpr 0x200108a4c60 <line:29:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x200108a4c40 <col:13> 'int' lvalue Var 0x200108a4ad0 'neg' 'int'
|   |     |-ReturnStmt 0x200108a4cb8 <line:30:13, col:21>
|   |     | `-UnaryOperator 0x200108a4ca0 <col:20, col:21> 'int' prefix '-'
|   |     |   `-IntegerLiteral 0x200108a4c78 <col:21> 'int' 1
|   |     `-ReturnStmt 0x200108a4cf0 <line:32:13, col:20>
|   |       `-IntegerLiteral 0x200108a4cc8 <col:20> 'int' 1
|   `-IfStmt 0x200108a4f98 <line:37:5, line:40:16> has_else
|     |-ImplicitCastExpr 0x200108a4ed8 <line:37:9> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x200108a4eb8 <col:9> 'int' lvalue Var 0x200108a4ad0 'neg' 'int'
|     |-ReturnStmt 0x200108a4f40 <line:38:9, col:17>
|     | `-UnaryOperator 0x200108a4f28 <col:16, col:17> 'int' prefix '-'
|     |   `-ImplicitCastExpr 0x200108a4f10 <col:17> 'int' <LValueToRValue>
|     |     `-DeclRefExpr 0x200108a4ef0 <col:17> 'int' lvalue Var 0x200108a4b50 'ret' 'int'
|     `-ReturnStmt 0x200108a4f88 <line:40:9, col:16>
|       `-ImplicitCastExpr 0x200108a4f70 <col:16> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x200108a4f50 <col:16> 'int' lvalue Var 0x200108a4b50 'ret' 'int'
|-FunctionDecl 0x200108a5318 <line:76:1, line:89:1> line:76:13 used twos_complement 'void (unsigned char *, const unsigned char *, size_t, unsigned char)' static
| |-ParmVarDecl 0x200108a5000 <col:29, col:44> col:44 used dst 'unsigned char *'
| |-ParmVarDecl 0x200108a5080 <col:49, col:70> col:70 used src 'const unsigned char *'
| |-ParmVarDecl 0x200108a50f8 <line:77:29, col:36> col:36 used len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x200108a5178 <col:41, col:55> col:55 used pad 'unsigned char'
| `-CompoundStmt 0x200108acaf8 <line:78:1, line:89:1>
|   |-DeclStmt 0x200108ac5a8 <line:79:5, col:33>
|   | `-VarDecl 0x200108ac490 <col:5, col:32> col:18 used carry 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x200108ac590 <col:26, col:32> 'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x200108ac570 <col:26, col:32> 'int' '&'
|   |       |-ImplicitCastExpr 0x200108ac558 <col:26> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x200108ac540 <col:26> 'unsigned char' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x200108ac4f8 <col:26> 'unsigned char' lvalue ParmVar 0x200108a5178 'pad' 'unsigned char'
|   |       `-IntegerLiteral 0x200108ac518 <col:32> 'int' 1
|   |-CompoundAssignOperator 0x200108ac618 <line:82:5, col:12> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |-DeclRefExpr 0x200108ac5c0 <col:5> 'unsigned char *' lvalue ParmVar 0x200108a5000 'dst' 'unsigned char *'
|   | `-ImplicitCastExpr 0x200108ac600 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x200108ac5e0 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x200108a50f8 'len' 'size_t':'unsigned long long'
|   |-CompoundAssignOperator 0x200108ac6a0 <line:83:5, col:12> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | |-DeclRefExpr 0x200108ac648 <col:5> 'const unsigned char *' lvalue ParmVar 0x200108a5080 'src' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x200108ac688 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x200108ac668 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x200108a50f8 'len' 'size_t':'unsigned long long'
|   `-WhileStmt 0x200108acae0 <line:85:5, line:88:5>
|     |-BinaryOperator 0x200108ac748 <line:85:12, col:21> 'int' '!='
|     | |-UnaryOperator 0x200108ac6f0 <col:12, col:15> 'size_t':'unsigned long long' postfix '--'
|     | | `-DeclRefExpr 0x200108ac6d0 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x200108a50f8 'len' 'size_t':'unsigned long long'
|     | `-ImplicitCastExpr 0x200108ac730 <col:21> 'unsigned long long' <IntegralCast>
|     |   `-IntegerLiteral 0x200108ac708 <col:21> 'int' 0
|     `-CompoundStmt 0x200108acac0 <col:24, line:88:5>
|       |-BinaryOperator 0x200108aca10 <line:86:9, col:59> 'unsigned char' '='
|       | |-UnaryOperator 0x200108ac7c0 <col:9, col:16> 'unsigned char' lvalue prefix '*' cannot overflow
|       | | `-ParenExpr 0x200108ac7a0 <col:10, col:16> 'unsigned char *'
|       | |   `-UnaryOperator 0x200108ac788 <col:11, col:13> 'unsigned char *' prefix '--'
|       | |     `-DeclRefExpr 0x200108ac768 <col:13> 'unsigned char *' lvalue ParmVar 0x200108a5000 'dst' 'unsigned char *'
|       | `-CStyleCastExpr 0x200108ac9e8 <col:20, col:59> 'unsigned char' <IntegralCast>
|       |   `-ParenExpr 0x200108ac9c8 <col:35, col:59> 'unsigned int'
|       |     `-CompoundAssignOperator 0x200108ac960 <col:36, col:56> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|       |       |-DeclRefExpr 0x200108ac7d8 <col:36> 'unsigned int' lvalue Var 0x200108ac490 'carry' 'unsigned int'
|       |       `-ImplicitCastExpr 0x200108ac948 <col:45, col:56> 'unsigned int' <IntegralCast>
|       |         `-BinaryOperator 0x200108ac928 <col:45, col:56> 'int' '^'
|       |           |-ImplicitCastExpr 0x200108ac8e0 <col:45, col:52> 'int' <IntegralCast>
|       |           | `-ImplicitCastExpr 0x200108ac8c8 <col:45, col:52> 'unsigned char' <LValueToRValue>
|       |           |   `-UnaryOperator 0x200108ac890 <col:45, col:52> 'const unsigned char' lvalue prefix '*' cannot overflow
|       |           |     `-ParenExpr 0x200108ac870 <col:46, col:52> 'const unsigned char *'
|       |           |       `-UnaryOperator 0x200108ac858 <col:47, col:49> 'const unsigned char *' prefix '--'
|       |           |         `-DeclRefExpr 0x200108ac838 <col:49> 'const unsigned char *' lvalue ParmVar 0x200108a5080 'src' 'const unsigned char *'
|       |           `-ImplicitCastExpr 0x200108ac910 <col:56> 'int' <IntegralCast>
|       |             `-ImplicitCastExpr 0x200108ac8f8 <col:56> 'unsigned char' <LValueToRValue>
|       |               `-DeclRefExpr 0x200108ac8a8 <col:56> 'unsigned char' lvalue ParmVar 0x200108a5178 'pad' 'unsigned char'
|       `-CompoundAssignOperator 0x200108aca90 <line:87:9, col:19> 'unsigned int' '>>=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|         |-DeclRefExpr 0x200108aca30 <col:9> 'unsigned int' lvalue Var 0x200108ac490 'carry' 'unsigned int'
|         `-IntegerLiteral 0x200108aca50 <col:19> 'int' 8
|-FunctionDecl 0x200108ace68 <line:91:1, line:140:1> line:91:15 used i2c_ibuf 'size_t (const unsigned char *, size_t, int, unsigned char **)' static
| |-ParmVarDecl 0x200108acb40 <col:24, col:45> col:45 used b 'const unsigned char *'
| |-ParmVarDecl 0x200108acbb8 <col:48, col:55> col:55 used blen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x200108acc38 <col:61, col:65> col:65 used neg 'int'
| |-ParmVarDecl 0x200108accc0 <line:92:24, col:40> col:40 used pp 'unsigned char **'
| `-CompoundStmt 0x200108b3aa0 <line:93:1, line:140:1>
|   |-DeclStmt 0x200108ad000 <line:94:5, col:25>
|   | `-VarDecl 0x200108acf58 <col:5, col:24> col:18 used pad 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x200108acfe8 <col:24> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x200108acfc0 <col:24> 'int' 0
|   |-DeclStmt 0x200108ad120 <line:95:5, col:18>
|   | |-VarDecl 0x200108ad028 <col:5, col:12> col:12 used ret 'size_t':'unsigned long long'
|   | `-VarDecl 0x200108ad0a0 <col:5, col:17> col:17 used i 'size_t':'unsigned long long'
|   |-DeclStmt 0x200108ad290 <line:96:5, col:29>
|   | |-VarDecl 0x200108ad150 <col:5, col:20> col:20 used p 'unsigned char *'
|   | `-VarDecl 0x200108ad1d0 <col:5, col:28> col:23 used pb 'unsigned char' cinit
|   |   `-ImplicitCastExpr 0x200108ad260 <col:28> 'unsigned char' <IntegralCast>
|   |     `-IntegerLiteral 0x200108ad238 <col:28> 'int' 0
|   |-IfStmt 0x200108b0328 <line:98:5, line:123:5> has_else
|   | |-BinaryOperator 0x200108ad3d8 <line:98:9, col:22> 'int' '&&'
|   | | |-BinaryOperator 0x200108ad380 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | | |-ImplicitCastExpr 0x200108ad350 <.//openssl//file_jk/before\crypto\asn1\a_int.c:98:9> 'const unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x200108ad2a8 <col:9> 'const unsigned char *' lvalue ParmVar 0x200108acb40 'b' 'const unsigned char *'
|   | | | `-ImplicitCastExpr 0x200108ad368 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const unsigned char *' <BitCast>
|   | | |   `-ParenExpr 0x200108ad330 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x200108ad308 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x200108ad2c8 <col:26> 'int' 0
|   | | `-ImplicitCastExpr 0x200108ad3c0 <.//openssl//file_jk/before\crypto\asn1\a_int.c:98:22> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x200108ad3a0 <col:22> 'size_t':'unsigned long long' lvalue ParmVar 0x200108acbb8 'blen' 'size_t':'unsigned long long'
|   | |-CompoundStmt 0x200108b01d8 <col:28, line:120:5>
|   | | |-BinaryOperator 0x200108af4a8 <line:99:9, col:15> 'size_t':'unsigned long long' '='
|   | | | |-DeclRefExpr 0x200108ad3f8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x200108ad028 'ret' 'size_t':'unsigned long long'
|   | | | `-ImplicitCastExpr 0x200108af490 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x200108ad430 <col:15> 'size_t':'unsigned long long' lvalue ParmVar 0x200108acbb8 'blen' 'size_t':'unsigned long long'
|   | | |-BinaryOperator 0x200108af5b0 <line:100:9, col:16> 'size_t':'unsigned long long' '='
|   | | | |-DeclRefExpr 0x200108af4c8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x200108ad0a0 'i' 'size_t':'unsigned long long'
|   | | | `-ImplicitCastExpr 0x200108af598 <col:13, col:16> 'size_t':'unsigned long long' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x200108af580 <col:13, col:16> 'unsigned char' <LValueToRValue>
|   | | |     `-ArraySubscriptExpr 0x200108af560 <col:13, col:16> 'const unsigned char' lvalue
|   | | |       |-ImplicitCastExpr 0x200108af548 <col:13> 'const unsigned char *' <LValueToRValue>
|   | | |       | `-DeclRefExpr 0x200108af500 <col:13> 'const unsigned char *' lvalue ParmVar 0x200108acb40 'b' 'const unsigned char *'
|   | | |       `-IntegerLiteral 0x200108af520 <col:15> 'int' 0
|   | | |-IfStmt 0x200108b0110 <line:101:9, line:118:9> has_else
|   | | | |-BinaryOperator 0x200108af6d8 <line:101:13, col:29> 'int' '&&'
|   | | | | |-UnaryOperator 0x200108af608 <col:13, col:14> 'int' prefix '!' cannot overflow
|   | | | | | `-ImplicitCastExpr 0x200108af5f0 <col:14> 'int' <LValueToRValue>
|   | | | | |   `-DeclRefExpr 0x200108af5d0 <col:14> 'int' lvalue ParmVar 0x200108acc38 'neg' 'int'
|   | | | | `-ParenExpr 0x200108af6b8 <col:21, col:29> 'int'
|   | | | |   `-BinaryOperator 0x200108af698 <col:22, col:26> 'int' '>'
|   | | | |     |-ImplicitCastExpr 0x200108af668 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | |     | `-DeclRefExpr 0x200108af620 <col:22> 'size_t':'unsigned long long' lvalue Var 0x200108ad0a0 'i' 'size_t':'unsigned long long'
|   | | | |     `-ImplicitCastExpr 0x200108af680 <col:26> 'unsigned long long' <IntegralCast>
|   | | | |       `-IntegerLiteral 0x200108af640 <col:26> 'int' 127
|   | | | |-CompoundStmt 0x200108af828 <col:32, line:104:9>
|   | | | | |-BinaryOperator 0x200108af770 <line:102:13, col:19> 'unsigned int' '='
|   | | | | | |-DeclRefExpr 0x200108af6f8 <col:13> 'unsigned int' lvalue Var 0x200108acf58 'pad' 'unsigned int'
|   | | | | | `-ImplicitCastExpr 0x200108af758 <col:19> 'unsigned int' <IntegralCast>
|   | | | | |   `-IntegerLiteral 0x200108af730 <col:19> 'int' 1
|   | | | | `-BinaryOperator 0x200108af808 <line:103:13, col:18> 'unsigned char' '='
|   | | | |   |-DeclRefExpr 0x200108af790 <col:13> 'unsigned char' lvalue Var 0x200108ad1d0 'pb' 'unsigned char'
|   | | | |   `-ImplicitCastExpr 0x200108af7f0 <col:18> 'unsigned char' <IntegralCast>
|   | | | |     `-IntegerLiteral 0x200108af7c8 <col:18> 'int' 0
|   | | | `-IfStmt 0x200108b00f8 <line:104:16, line:118:9>
|   | | |   |-ImplicitCastExpr 0x200108af868 <line:104:20> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x200108af848 <col:20> 'int' lvalue ParmVar 0x200108acc38 'neg' 'int'
|   | | |   `-CompoundStmt 0x200108b00d8 <col:25, line:118:9>
|   | | |     |-BinaryOperator 0x200108af8e0 <line:105:13, col:18> 'unsigned char' '='
|   | | |     | |-DeclRefExpr 0x200108af880 <col:13> 'unsigned char' lvalue Var 0x200108ad1d0 'pb' 'unsigned char'
|   | | |     | `-ImplicitCastExpr 0x200108af8c8 <col:18> 'unsigned char' <IntegralCast>
|   | | |     |   `-IntegerLiteral 0x200108af8a0 <col:18> 'int' 255
|   | | |     `-IfStmt 0x200108b00b0 <line:106:13, line:117:13> has_else
|   | | |       |-BinaryOperator 0x200108af978 <line:106:17, col:21> 'int' '>'
|   | | |       | |-ImplicitCastExpr 0x200108af948 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |       | | `-DeclRefExpr 0x200108af900 <col:17> 'size_t':'unsigned long long' lvalue Var 0x200108ad0a0 'i' 'size_t':'unsigned long long'
|   | | |       | `-ImplicitCastExpr 0x200108af960 <col:21> 'unsigned long long' <IntegralCast>
|   | | |       |   `-IntegerLiteral 0x200108af920 <col:21> 'int' 128
|   | | |       |-CompoundStmt 0x200108afa18 <col:26, line:108:13>
|   | | |       | `-BinaryOperator 0x200108af9f8 <line:107:17, col:23> 'unsigned int' '='
|   | | |       |   |-DeclRefExpr 0x200108af998 <col:17> 'unsigned int' lvalue Var 0x200108acf58 'pad' 'unsigned int'
|   | | |       |   `-ImplicitCastExpr 0x200108af9e0 <col:23> 'unsigned int' <IntegralCast>
|   | | |       |     `-IntegerLiteral 0x200108af9b8 <col:23> 'int' 1
|   | | |       `-IfStmt 0x200108b0098 <line:108:20, line:117:13>
|   | | |         |-BinaryOperator 0x200108afaa8 <line:108:24, col:29> 'int' '=='
|   | | |         | |-ImplicitCastExpr 0x200108afa78 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |         | | `-DeclRefExpr 0x200108afa30 <col:24> 'size_t':'unsigned long long' lvalue Var 0x200108ad0a0 'i' 'size_t':'unsigned long long'
|   | | |         | `-ImplicitCastExpr 0x200108afa90 <col:29> 'unsigned long long' <IntegralCast>
|   | | |         |   `-IntegerLiteral 0x200108afa50 <col:29> 'int' 128
|   | | |         `-CompoundStmt 0x200108b0070 <col:34, line:117:13>
|   | | |           |-ForStmt 0x200108afdc0 <line:113:17, line:114:31>
|   | | |           | |-BinaryOperator 0x200108afbc8 <line:113:22, col:35> 'size_t':'unsigned long long' ','
|   | | |           | | |-BinaryOperator 0x200108afb28 <col:22, col:28> 'unsigned int' '='
|   | | |           | | | |-DeclRefExpr 0x200108afac8 <col:22> 'unsigned int' lvalue Var 0x200108acf58 'pad' 'unsigned int'
|   | | |           | | | `-ImplicitCastExpr 0x200108afb10 <col:28> 'unsigned int' <IntegralCast>
|   | | |           | | |   `-IntegerLiteral 0x200108afae8 <col:28> 'int' 0
|   | | |           | | `-BinaryOperator 0x200108afba8 <col:31, col:35> 'size_t':'unsigned long long' '='
|   | | |           | |   |-DeclRefExpr 0x200108afb48 <col:31> 'size_t':'unsigned long long' lvalue Var 0x200108ad0a0 'i' 'size_t':'unsigned long long'
|   | | |           | |   `-ImplicitCastExpr 0x200108afb90 <col:35> 'size_t':'unsigned long long' <IntegralCast>
|   | | |           | |     `-IntegerLiteral 0x200108afb68 <col:35> 'int' 1
|   | | |           | |-<<<NULL>>>
|   | | |           | |-BinaryOperator 0x200108afc58 <col:38, col:42> 'int' '<'
|   | | |           | | |-ImplicitCastExpr 0x200108afc28 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |           | | | `-DeclRefExpr 0x200108afbe8 <col:38> 'size_t':'unsigned long long' lvalue Var 0x200108ad0a0 'i' 'size_t':'unsigned long long'
|   | | |           | | `-ImplicitCastExpr 0x200108afc40 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |           | |   `-DeclRefExpr 0x200108afc08 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x200108acbb8 'blen' 'size_t':'unsigned long long'
|   | | |           | |-UnaryOperator 0x200108afc98 <col:48, col:49> 'size_t':'unsigned long long' postfix '++'
|   | | |           | | `-DeclRefExpr 0x200108afc78 <col:48> 'size_t':'unsigned long long' lvalue Var 0x200108ad0a0 'i' 'size_t':'unsigned long long'
|   | | |           | `-CompoundAssignOperator 0x200108afd90 <line:114:21, col:31> 'unsigned int' '|=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | | |           |   |-DeclRefExpr 0x200108afcb0 <col:21> 'unsigned int' lvalue Var 0x200108acf58 'pad' 'unsigned int'
|   | | |           |   `-ImplicitCastExpr 0x200108afd78 <col:28, col:31> 'unsigned int' <IntegralCast>
|   | | |           |     `-ImplicitCastExpr 0x200108afd60 <col:28, col:31> 'unsigned char' <LValueToRValue>
|   | | |           |       `-ArraySubscriptExpr 0x200108afd40 <col:28, col:31> 'const unsigned char' lvalue
|   | | |           |         |-ImplicitCastExpr 0x200108afd10 <col:28> 'const unsigned char *' <LValueToRValue>
|   | | |           |         | `-DeclRefExpr 0x200108afcd0 <col:28> 'const unsigned char *' lvalue ParmVar 0x200108acb40 'b' 'const unsigned char *'
|   | | |           |         `-ImplicitCastExpr 0x200108afd28 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |           |           `-DeclRefExpr 0x200108afcf0 <col:30> 'size_t':'unsigned long long' lvalue Var 0x200108ad0a0 'i' 'size_t':'unsigned long long'
|   | | |           |-BinaryOperator 0x200108aff60 <line:115:17, col:41> 'unsigned char' '='
|   | | |           | |-DeclRefExpr 0x200108afdf8 <col:17> 'unsigned char' lvalue Var 0x200108ad1d0 'pb' 'unsigned char'
|   | | |           | `-ImplicitCastExpr 0x200108aff48 <col:22, col:41> 'unsigned char' <IntegralCast>
|   | | |           |   `-ConditionalOperator 0x200108aff18 <col:22, col:41> 'unsigned int'
|   | | |           |     |-BinaryOperator 0x200108afe90 <col:22, col:29> 'int' '!='
|   | | |           |     | |-ImplicitCastExpr 0x200108afe60 <col:22> 'unsigned int' <LValueToRValue>
|   | | |           |     | | `-DeclRefExpr 0x200108afe18 <col:22> 'unsigned int' lvalue Var 0x200108acf58 'pad' 'unsigned int'
|   | | |           |     | `-ImplicitCastExpr 0x200108afe78 <col:29> 'unsigned int' <IntegralCast>
|   | | |           |     |   `-IntegerLiteral 0x200108afe38 <col:29> 'int' 0
|   | | |           |     |-IntegerLiteral 0x200108afeb0 <col:33> 'unsigned int' 255
|   | | |           |     `-ImplicitCastExpr 0x200108aff00 <col:41> 'unsigned int' <IntegralCast>
|   | | |           |       `-IntegerLiteral 0x200108afed8 <col:41> 'int' 0
|   | | |           `-BinaryOperator 0x200108b0050 <line:116:17, col:28> 'unsigned int' '='
|   | | |             |-DeclRefExpr 0x200108aff80 <col:17> 'unsigned int' lvalue Var 0x200108acf58 'pad' 'unsigned int'
|   | | |             `-ImplicitCastExpr 0x200108b0038 <col:23, col:28> 'unsigned int' <IntegralCast>
|   | | |               `-BinaryOperator 0x200108b0018 <col:23, col:28> 'int' '&'
|   | | |                 |-ImplicitCastExpr 0x200108b0000 <col:23> 'int' <IntegralCast>
|   | | |                 | `-ImplicitCastExpr 0x200108affe8 <col:23> 'unsigned char' <LValueToRValue>
|   | | |                 |   `-DeclRefExpr 0x200108affa0 <col:23> 'unsigned char' lvalue Var 0x200108ad1d0 'pb' 'unsigned char'
|   | | |                 `-IntegerLiteral 0x200108affc0 <col:28> 'int' 1
|   | | `-CompoundAssignOperator 0x200108b01a8 <line:119:9, col:16> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |   |-DeclRefExpr 0x200108b0138 <col:9> 'size_t':'unsigned long long' lvalue Var 0x200108ad028 'ret' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x200108b0190 <col:16> 'unsigned long long' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x200108b0178 <col:16> 'unsigned int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x200108b0158 <col:16> 'unsigned int' lvalue Var 0x200108acf58 'pad' 'unsigned int'
|   | `-CompoundStmt 0x200108b0308 <line:120:12, line:123:5>
|   |   |-BinaryOperator 0x200108b0268 <line:121:9, col:15> 'size_t':'unsigned long long' '='
|   |   | |-DeclRefExpr 0x200108b0208 <col:9> 'size_t':'unsigned long long' lvalue Var 0x200108ad028 'ret' 'size_t':'unsigned long long'
|   |   | `-ImplicitCastExpr 0x200108b0250 <col:15> 'size_t':'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x200108b0228 <col:15> 'int' 1
|   |   `-BinaryOperator 0x200108b02e8 <line:122:9, col:16> 'size_t':'unsigned long long' '='
|   |     |-DeclRefExpr 0x200108b0288 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x200108acbb8 'blen' 'size_t':'unsigned long long'
|   |     `-ImplicitCastExpr 0x200108b02d0 <col:16> 'size_t':'unsigned long long' <IntegralCast>
|   |       `-IntegerLiteral 0x200108b02a8 <col:16> 'int' 0
|   |-IfStmt 0x200108b36a0 <line:125:5, line:126:16>
|   | |-BinaryOperator 0x200108b3638 <line:125:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '||'
|   | | |-BinaryOperator 0x200108b0428 <.//openssl//file_jk/before\crypto\asn1\a_int.c:125:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | | |-ImplicitCastExpr 0x200108b03f8 <.//openssl//file_jk/before\crypto\asn1\a_int.c:125:9> 'unsigned char **' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x200108b0350 <col:9> 'unsigned char **' lvalue ParmVar 0x200108accc0 'pp' 'unsigned char **'
|   | | | `-ImplicitCastExpr 0x200108b0410 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char **' <BitCast>
|   | | |   `-ParenExpr 0x200108b03d8 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x200108b03b0 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x200108b0370 <col:26> 'int' 0
|   | | `-BinaryOperator 0x200108b3618 <.//openssl//file_jk/before\crypto\asn1\a_int.c:125:23, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | |   |-ParenExpr 0x200108b3558 <.//openssl//file_jk/before\crypto\asn1\a_int.c:125:23, col:31> 'unsigned char *'
|   | |   | `-BinaryOperator 0x200108b3538 <col:24, col:29> 'unsigned char *' '='
|   | |   |   |-DeclRefExpr 0x200108b0448 <col:24> 'unsigned char *' lvalue Var 0x200108ad150 'p' 'unsigned char *'
|   | |   |   `-ImplicitCastExpr 0x200108b3520 <col:28, col:29> 'unsigned char *' <LValueToRValue>
|   | |   |     `-UnaryOperator 0x200108b3508 <col:28, col:29> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | |   |       `-ImplicitCastExpr 0x200108b34f0 <col:29> 'unsigned char **' <LValueToRValue>
|   | |   |         `-DeclRefExpr 0x200108b34d0 <col:29> 'unsigned char **' lvalue ParmVar 0x200108accc0 'pp' 'unsigned char **'
|   | |   `-ImplicitCastExpr 0x200108b3600 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |     `-ParenExpr 0x200108b35e0 <col:17, col:27> 'void *'
|   | |       `-CStyleCastExpr 0x200108b35b8 <col:18, col:26> 'void *' <NullToPointer>
|   | |         `-IntegerLiteral 0x200108b3578 <col:26> 'int' 0
|   | `-ReturnStmt 0x200108b3690 <.//openssl//file_jk/before\crypto\asn1\a_int.c:126:9, col:16>
|   |   `-ImplicitCastExpr 0x200108b3678 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x200108b3658 <col:16> 'size_t':'unsigned long long' lvalue Var 0x200108ad028 'ret' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x200108b3740 <line:133:5, col:10> 'unsigned char' '='
|   | |-UnaryOperator 0x200108b36f0 <col:5, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x200108b36d8 <col:6> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x200108b36b8 <col:6> 'unsigned char *' lvalue Var 0x200108ad150 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x200108b3728 <col:10> 'unsigned char' <LValueToRValue>
|   |   `-DeclRefExpr 0x200108b3708 <col:10> 'unsigned char' lvalue Var 0x200108ad1d0 'pb' 'unsigned char'
|   |-CompoundAssignOperator 0x200108b37b8 <line:134:5, col:10> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |-DeclRefExpr 0x200108b3760 <col:5> 'unsigned char *' lvalue Var 0x200108ad150 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x200108b37a0 <col:10> 'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x200108b3780 <col:10> 'unsigned int' lvalue Var 0x200108acf58 'pad' 'unsigned int'
|   |-CallExpr 0x200108b3900 <line:136:5, col:35> 'void'
|   | |-ImplicitCastExpr 0x200108b38e8 <col:5> 'void (*)(unsigned char *, const unsigned char *, size_t, unsigned char)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x200108b37e8 <col:5> 'void (unsigned char *, const unsigned char *, size_t, unsigned char)' Function 0x200108a5318 'twos_complement' 'void (unsigned char *, const unsigned char *, size_t, unsigned char)'
|   | |-ImplicitCastExpr 0x200108b3940 <col:21> 'unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x200108b3808 <col:21> 'unsigned char *' lvalue Var 0x200108ad150 'p' 'unsigned char *'
|   | |-ImplicitCastExpr 0x200108b3958 <col:24> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x200108b3828 <col:24> 'const unsigned char *' lvalue ParmVar 0x200108acb40 'b' 'const unsigned char *'
|   | |-ImplicitCastExpr 0x200108b3970 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x200108b3848 <col:27> 'size_t':'unsigned long long' lvalue ParmVar 0x200108acbb8 'blen' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x200108b3988 <col:33> 'unsigned char' <LValueToRValue>
|   |   `-DeclRefExpr 0x200108b3868 <col:33> 'unsigned char' lvalue Var 0x200108ad1d0 'pb' 'unsigned char'
|   |-CompoundAssignOperator 0x200108b3a28 <line:138:5, col:12> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |-UnaryOperator 0x200108b39d8 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x200108b39c0 <col:6> 'unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x200108b39a0 <col:6> 'unsigned char **' lvalue ParmVar 0x200108accc0 'pp' 'unsigned char **'
|   | `-ImplicitCastExpr 0x200108b3a10 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x200108b39f0 <col:12> 'size_t':'unsigned long long' lvalue Var 0x200108ad028 'ret' 'size_t':'unsigned long long'
|   `-ReturnStmt 0x200108b3a90 <line:139:5, col:12>
|     `-ImplicitCastExpr 0x200108b3a78 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x200108b3a58 <col:12> 'size_t':'unsigned long long' lvalue Var 0x200108ad028 'ret' 'size_t':'unsigned long long'
|-FunctionDecl 0x200108b3e38 <line:148:1, line:199:1> line:148:15 used c2i_ibuf 'size_t (unsigned char *, int *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x200108b3b18 <col:24, col:39> col:39 used b 'unsigned char *'
| |-ParmVarDecl 0x200108b3b98 <col:42, col:47> col:47 used pneg 'int *'
| |-ParmVarDecl 0x200108b3c18 <line:149:24, col:45> col:45 used p 'const unsigned char *'
| |-ParmVarDecl 0x200108b3c90 <col:48, col:55> col:55 used plen 'size_t':'unsigned long long'
| `-CompoundStmt 0x200108ae9c8 <line:150:1, line:199:1>
|   |-DeclStmt 0x200108b4028 <line:151:5, col:17>
|   | |-VarDecl 0x200108b3f28 <col:5, col:9> col:9 used neg 'int'
|   | `-VarDecl 0x200108b3fa8 <col:5, col:14> col:14 used pad 'int'
|   |-IfStmt 0x200108b4250 <line:153:5, line:156:5>
|   | |-BinaryOperator 0x200108b40b8 <line:153:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x200108b4088 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x200108b4040 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x200108b3c90 'plen' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x200108b40a0 <col:17> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x200108b4060 <col:17> 'int' 0
|   | `-CompoundStmt 0x200108b4238 <col:20, line:156:5>
|   |   `-ReturnStmt 0x200108b4228 <line:155:9, col:16>
|   |     `-ImplicitCastExpr 0x200108b4210 <col:16> 'size_t':'unsigned long long' <IntegralCast>
|   |       `-IntegerLiteral 0x200108b41e8 <col:16> 'int' 0
|   |-BinaryOperator 0x200108b4398 <line:157:5, col:18> 'int' '='
|   | |-DeclRefExpr 0x200108b4268 <col:5> 'int' lvalue Var 0x200108b3f28 'neg' 'int'
|   | `-BinaryOperator 0x200108b4378 <col:11, col:18> 'int' '&'
|   |   |-ImplicitCastExpr 0x200108b4360 <col:11, col:14> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x200108b4348 <col:11, col:14> 'unsigned char' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x200108b4300 <col:11, col:14> 'const unsigned char' lvalue
|   |   |     |-ImplicitCastExpr 0x200108b42e8 <col:11> 'const unsigned char *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x200108b42a0 <col:11> 'const unsigned char *' lvalue ParmVar 0x200108b3c18 'p' 'const unsigned char *'
|   |   |     `-IntegerLiteral 0x200108b42c0 <col:13> 'int' 0
|   |   `-IntegerLiteral 0x200108b4320 <col:18> 'int' 128
|   |-IfStmt 0x200108b4498 <line:158:5, line:159:17>
|   | |-ImplicitCastExpr 0x200108b43d8 <line:158:9> 'int *' <LValueToRValue>
|   | | `-DeclRefExpr 0x200108b43b8 <col:9> 'int *' lvalue ParmVar 0x200108b3b98 'pneg' 'int *'
|   | `-BinaryOperator 0x200108b4478 <line:159:9, col:17> 'int' '='
|   |   |-UnaryOperator 0x200108b4428 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x200108b4410 <col:10> 'int *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x200108b43f0 <col:10> 'int *' lvalue ParmVar 0x200108b3b98 'pneg' 'int *'
|   |   `-ImplicitCastExpr 0x200108b4460 <col:17> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x200108b4440 <col:17> 'int' lvalue Var 0x200108b3f28 'neg' 'int'
|   |-IfStmt 0x200108b4aa0 <line:161:5, line:169:5>
|   | |-BinaryOperator 0x200108b4538 <line:161:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x200108b4508 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x200108b44b0 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x200108b3c90 'plen' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x200108b4520 <col:17> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x200108b44e0 <col:17> 'int' 1
|   | `-CompoundStmt 0x200108b4a80 <col:20, line:169:5>
|   |   |-IfStmt 0x200108b4a18 <line:162:9, line:167:9>
|   |   | |-BinaryOperator 0x200108b4630 <line:162:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x200108b4600 <.//openssl//file_jk/before\crypto\asn1\a_int.c:162:13> 'unsigned char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x200108b4558 <col:13> 'unsigned char *' lvalue ParmVar 0x200108b3b18 'b' 'unsigned char *'
|   |   | | `-ImplicitCastExpr 0x200108b4618 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   |   | |   `-ParenExpr 0x200108b45e0 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x200108b45b8 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x200108b4578 <col:26> 'int' 0
|   |   | `-CompoundStmt 0x200108b4a00 <.//openssl//file_jk/before\crypto\asn1\a_int.c:162:24, line:167:9>
|   |   |   `-IfStmt 0x200108b49d8 <line:163:13, line:166:27> has_else
|   |   |     |-ImplicitCastExpr 0x200108b4670 <line:163:17> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x200108b4650 <col:17> 'int' lvalue Var 0x200108b3f28 'neg' 'int'
|   |   |     |-BinaryOperator 0x200108b4880 <line:164:17, col:40> 'unsigned char' '='
|   |   |     | |-ArraySubscriptExpr 0x200108b46e8 <col:17, col:20> 'unsigned char' lvalue
|   |   |     | | |-ImplicitCastExpr 0x200108b46d0 <col:17> 'unsigned char *' <LValueToRValue>
|   |   |     | | | `-DeclRefExpr 0x200108b4688 <col:17> 'unsigned char *' lvalue ParmVar 0x200108b3b18 'b' 'unsigned char *'
|   |   |     | | `-IntegerLiteral 0x200108b46a8 <col:19> 'int' 0
|   |   |     | `-ImplicitCastExpr 0x200108b4868 <col:24, col:40> 'unsigned char' <IntegralCast>
|   |   |     |   `-BinaryOperator 0x200108b4848 <col:24, col:40> 'int' '+'
|   |   |     |     |-ParenExpr 0x200108b4800 <col:24, col:36> 'int'
|   |   |     |     | `-BinaryOperator 0x200108b47e0 <col:25, col:32> 'int' '^'
|   |   |     |     |   |-ImplicitCastExpr 0x200108b47c8 <col:25, col:28> 'int' <IntegralCast>
|   |   |     |     |   | `-ImplicitCastExpr 0x200108b47b0 <col:25, col:28> 'unsigned char' <LValueToRValue>
|   |   |     |     |   |   `-ArraySubscriptExpr 0x200108b4768 <col:25, col:28> 'const unsigned char' lvalue
|   |   |     |     |   |     |-ImplicitCastExpr 0x200108b4750 <col:25> 'const unsigned char *' <LValueToRValue>
|   |   |     |     |   |     | `-DeclRefExpr 0x200108b4708 <col:25> 'const unsigned char *' lvalue ParmVar 0x200108b3c18 'p' 'const unsigned char *'
|   |   |     |     |   |     `-IntegerLiteral 0x200108b4728 <col:27> 'int' 0
|   |   |     |     |   `-IntegerLiteral 0x200108b4788 <col:32> 'int' 255
|   |   |     |     `-IntegerLiteral 0x200108b4820 <col:40> 'int' 1
|   |   |     `-BinaryOperator 0x200108b49b8 <line:166:17, col:27> 'unsigned char' '='
|   |   |       |-ArraySubscriptExpr 0x200108b4900 <col:17, col:20> 'unsigned char' lvalue
|   |   |       | |-ImplicitCastExpr 0x200108b48e8 <col:17> 'unsigned char *' <LValueToRValue>
|   |   |       | | `-DeclRefExpr 0x200108b48a0 <col:17> 'unsigned char *' lvalue ParmVar 0x200108b3b18 'b' 'unsigned char *'
|   |   |       | `-IntegerLiteral 0x200108b48c0 <col:19> 'int' 0
|   |   |       `-ImplicitCastExpr 0x200108b49a0 <col:24, col:27> 'unsigned char' <LValueToRValue>
|   |   |         `-ArraySubscriptExpr 0x200108b4980 <col:24, col:27> 'const unsigned char' lvalue
|   |   |           |-ImplicitCastExpr 0x200108b4968 <col:24> 'const unsigned char *' <LValueToRValue>
|   |   |           | `-DeclRefExpr 0x200108b4920 <col:24> 'const unsigned char *' lvalue ParmVar 0x200108b3c18 'p' 'const unsigned char *'
|   |   |           `-IntegerLiteral 0x200108b4940 <col:26> 'int' 0
|   |   `-ReturnStmt 0x200108b4a70 <line:168:9, col:16>
|   |     `-ImplicitCastExpr 0x200108b4a58 <col:16> 'size_t':'unsigned long long' <IntegralCast>
|   |       `-IntegerLiteral 0x200108b4a30 <col:16> 'int' 1
|   |-BinaryOperator 0x200108b4b18 <line:171:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x200108b4ab8 <col:5> 'int' lvalue Var 0x200108b3fa8 'pad' 'int'
|   | `-IntegerLiteral 0x200108b4af0 <col:11> 'int' 0
|   |-IfStmt 0x200108b52e8 <line:172:5, line:184:5> has_else
|   | |-BinaryOperator 0x200108b4c10 <line:172:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x200108b4bf8 <col:9, col:12> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x200108b4be0 <col:9, col:12> 'unsigned char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x200108b4b98 <col:9, col:12> 'const unsigned char' lvalue
|   | | |     |-ImplicitCastExpr 0x200108b4b80 <col:9> 'const unsigned char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x200108b4b38 <col:9> 'const unsigned char *' lvalue ParmVar 0x200108b3c18 'p' 'const unsigned char *'
|   | | |     `-IntegerLiteral 0x200108b4b58 <col:11> 'int' 0
|   | | `-IntegerLiteral 0x200108b4bb8 <col:17> 'int' 0
|   | |-CompoundStmt 0x200108b4c98 <col:20, line:174:5>
|   | | `-BinaryOperator 0x200108b4c78 <line:173:9, col:15> 'int' '='
|   | |   |-DeclRefExpr 0x200108b4c30 <col:9> 'int' lvalue Var 0x200108b3fa8 'pad' 'int'
|   | |   `-IntegerLiteral 0x200108b4c50 <col:15> 'int' 1
|   | `-IfStmt 0x200108b52d0 <line:174:12, line:184:5>
|   |   |-BinaryOperator 0x200108b4d88 <line:174:16, col:24> 'int' '=='
|   |   | |-ImplicitCastExpr 0x200108b4d70 <col:16, col:19> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x200108b4d58 <col:16, col:19> 'unsigned char' <LValueToRValue>
|   |   | |   `-ArraySubscriptExpr 0x200108b4d10 <col:16, col:19> 'const unsigned char' lvalue
|   |   | |     |-ImplicitCastExpr 0x200108b4cf8 <col:16> 'const unsigned char *' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x200108b4cb0 <col:16> 'const unsigned char *' lvalue ParmVar 0x200108b3c18 'p' 'const unsigned char *'
|   |   | |     `-IntegerLiteral 0x200108b4cd0 <col:18> 'int' 0
|   |   | `-IntegerLiteral 0x200108b4d30 <col:24> 'int' 255
|   |   `-CompoundStmt 0x200108b52a8 <col:30, line:184:5>
|   |     |-DeclStmt 0x200108b4e20 <line:175:9, col:17>
|   |     | `-VarDecl 0x200108b4db8 <col:9, col:16> col:16 used i 'size_t':'unsigned long long'
|   |     |-ForStmt 0x200108b5130 <line:181:9, line:182:23>
|   |     | |-BinaryOperator 0x200108b4f38 <line:181:14, col:27> 'size_t':'unsigned long long' ','
|   |     | | |-BinaryOperator 0x200108b4e80 <col:14, col:20> 'int' '='
|   |     | | | |-DeclRefExpr 0x200108b4e38 <col:14> 'int' lvalue Var 0x200108b3fa8 'pad' 'int'
|   |     | | | `-IntegerLiteral 0x200108b4e58 <col:20> 'int' 0
|   |     | | `-BinaryOperator 0x200108b4f18 <col:23, col:27> 'size_t':'unsigned long long' '='
|   |     | |   |-DeclRefExpr 0x200108b4ea0 <col:23> 'size_t':'unsigned long long' lvalue Var 0x200108b4db8 'i' 'size_t':'unsigned long long'
|   |     | |   `-ImplicitCastExpr 0x200108b4f00 <col:27> 'size_t':'unsigned long long' <IntegralCast>
|   |     | |     `-IntegerLiteral 0x200108b4ed8 <col:27> 'int' 1
|   |     | |-<<<NULL>>>
|   |     | |-BinaryOperator 0x200108b4fc8 <col:30, col:34> 'int' '<'
|   |     | | |-ImplicitCastExpr 0x200108b4f98 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x200108b4f58 <col:30> 'size_t':'unsigned long long' lvalue Var 0x200108b4db8 'i' 'size_t':'unsigned long long'
|   |     | | `-ImplicitCastExpr 0x200108b4fb0 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x200108b4f78 <col:34> 'size_t':'unsigned long long' lvalue ParmVar 0x200108b3c90 'plen' 'size_t':'unsigned long long'
|   |     | |-UnaryOperator 0x200108b5008 <col:40, col:41> 'size_t':'unsigned long long' postfix '++'
|   |     | | `-DeclRefExpr 0x200108b4fe8 <col:40> 'size_t':'unsigned long long' lvalue Var 0x200108b4db8 'i' 'size_t':'unsigned long long'
|   |     | `-CompoundAssignOperator 0x200108b5100 <line:182:13, col:23> 'int' '|=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |   |-DeclRefExpr 0x200108b5020 <col:13> 'int' lvalue Var 0x200108b3fa8 'pad' 'int'
|   |     |   `-ImplicitCastExpr 0x200108b50e8 <col:20, col:23> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x200108b50d0 <col:20, col:23> 'unsigned char' <LValueToRValue>
|   |     |       `-ArraySubscriptExpr 0x200108b50b0 <col:20, col:23> 'const unsigned char' lvalue
|   |     |         |-ImplicitCastExpr 0x200108b5080 <col:20> 'const unsigned char *' <LValueToRValue>
|   |     |         | `-DeclRefExpr 0x200108b5040 <col:20> 'const unsigned char *' lvalue ParmVar 0x200108b3c18 'p' 'const unsigned char *'
|   |     |         `-ImplicitCastExpr 0x200108b5098 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |           `-DeclRefExpr 0x200108b5060 <col:22> 'size_t':'unsigned long long' lvalue Var 0x200108b4db8 'i' 'size_t':'unsigned long long'
|   |     `-BinaryOperator 0x200108b5288 <line:183:9, col:30> 'int' '='
|   |       |-DeclRefExpr 0x200108b5168 <col:9> 'int' lvalue Var 0x200108b3fa8 'pad' 'int'
|   |       `-ConditionalOperator 0x200108b5258 <col:15, col:30> 'int'
|   |         |-BinaryOperator 0x200108b51e8 <col:15, col:22> 'int' '!='
|   |         | |-ImplicitCastExpr 0x200108b51d0 <col:15> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x200108b5188 <col:15> 'int' lvalue Var 0x200108b3fa8 'pad' 'int'
|   |         | `-IntegerLiteral 0x200108b51a8 <col:22> 'int' 0
|   |         |-IntegerLiteral 0x200108b5208 <col:26> 'int' 1
|   |         `-IntegerLiteral 0x200108b5230 <col:30> 'int' 0
|   |-IfStmt 0x200108ae528 <line:186:5, line:189:5>
|   | |-BinaryOperator 0x200108ae480 <line:186:9, col:37> 'int' '&&'
|   | | |-ImplicitCastExpr 0x200108b54c0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x200108b5310 <col:9> 'int' lvalue Var 0x200108b3fa8 'pad' 'int'
|   | | `-ParenExpr 0x200108b54a0 <col:16, col:37> 'int'
|   | |   `-BinaryOperator 0x200108b5480 <col:17, col:36> 'int' '=='
|   | |     |-ImplicitCastExpr 0x200108b5468 <col:17> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x200108b5330 <col:17> 'int' lvalue Var 0x200108b3f28 'neg' 'int'
|   | |     `-ParenExpr 0x200108b5448 <col:24, col:36> 'int'
|   | |       `-BinaryOperator 0x200108b5428 <col:25, col:32> 'int' '&'
|   | |         |-ImplicitCastExpr 0x200108b5410 <col:25, col:28> 'int' <IntegralCast>
|   | |         | `-ImplicitCastExpr 0x200108b53f8 <col:25, col:28> 'unsigned char' <LValueToRValue>
|   | |         |   `-ArraySubscriptExpr 0x200108b53b0 <col:25, col:28> 'const unsigned char' lvalue
|   | |         |     |-ImplicitCastExpr 0x200108b5398 <col:25> 'const unsigned char *' <LValueToRValue>
|   | |         |     | `-DeclRefExpr 0x200108b5350 <col:25> 'const unsigned char *' lvalue ParmVar 0x200108b3c18 'p' 'const unsigned char *'
|   | |         |     `-IntegerLiteral 0x200108b5370 <col:27> 'int' 1
|   | |         `-IntegerLiteral 0x200108b53d0 <col:32> 'int' 128
|   | `-CompoundStmt 0x200108ae510 <col:40, line:189:5>
|   |   `-ReturnStmt 0x200108ae500 <line:188:9, col:16>
|   |     `-ImplicitCastExpr 0x200108ae4e8 <col:16> 'size_t':'unsigned long long' <IntegralCast>
|   |       `-IntegerLiteral 0x200108ae4c0 <col:16> 'int' 0
|   |-CompoundAssignOperator 0x200108ae598 <line:192:5, col:10> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | |-DeclRefExpr 0x200108ae540 <col:5> 'const unsigned char *' lvalue ParmVar 0x200108b3c18 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x200108ae580 <col:10> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x200108ae560 <col:10> 'int' lvalue Var 0x200108b3fa8 'pad' 'int'
|   |-CompoundAssignOperator 0x200108ae638 <line:193:5, col:13> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-DeclRefExpr 0x200108ae5c8 <col:5> 'size_t':'unsigned long long' lvalue ParmVar 0x200108b3c90 'plen' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x200108ae620 <col:13> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x200108ae608 <col:13> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x200108ae5e8 <col:13> 'int' lvalue Var 0x200108b3fa8 'pad' 'int'
|   |-IfStmt 0x200108ae968 <line:195:5, line:196:52>
|   | |-BinaryOperator 0x200108ae740 <line:195:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x200108ae710 <.//openssl//file_jk/before\crypto\asn1\a_int.c:195:9> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x200108ae668 <col:9> 'unsigned char *' lvalue ParmVar 0x200108b3b18 'b' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x200108ae728 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x200108ae6f0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x200108ae6c8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x200108ae688 <col:26> 'int' 0
|   | `-CallExpr 0x200108ae8c8 <.//openssl//file_jk/before\crypto\asn1\a_int.c:196:9, col:52> 'void'
|   |   |-ImplicitCastExpr 0x200108ae8b0 <col:9> 'void (*)(unsigned char *, const unsigned char *, size_t, unsigned char)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x200108ae760 <col:9> 'void (unsigned char *, const unsigned char *, size_t, unsigned char)' Function 0x200108a5318 'twos_complement' 'void (unsigned char *, const unsigned char *, size_t, unsigned char)'
|   |   |-ImplicitCastExpr 0x200108ae908 <col:25> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x200108ae780 <col:25> 'unsigned char *' lvalue ParmVar 0x200108b3b18 'b' 'unsigned char *'
|   |   |-ImplicitCastExpr 0x200108ae920 <col:28> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x200108ae7a0 <col:28> 'const unsigned char *' lvalue ParmVar 0x200108b3c18 'p' 'const unsigned char *'
|   |   |-ImplicitCastExpr 0x200108ae938 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x200108ae7c0 <col:31> 'size_t':'unsigned long long' lvalue ParmVar 0x200108b3c90 'plen' 'size_t':'unsigned long long'
|   |   `-ImplicitCastExpr 0x200108ae950 <col:37, col:51> 'unsigned char' <IntegralCast>
|   |     `-ConditionalOperator 0x200108ae880 <col:37, col:51> 'unsigned int'
|   |       |-ImplicitCastExpr 0x200108ae850 <col:37> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x200108ae7e0 <col:37> 'int' lvalue Var 0x200108b3f28 'neg' 'int'
|   |       |-IntegerLiteral 0x200108ae800 <col:43> 'unsigned int' 255
|   |       `-ImplicitCastExpr 0x200108ae868 <col:51> 'unsigned int' <IntegralCast>
|   |         `-IntegerLiteral 0x200108ae828 <col:51> 'int' 0
|   `-ReturnStmt 0x200108ae9b8 <line:198:5, col:12>
|     `-ImplicitCastExpr 0x200108ae9a0 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x200108ae980 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x200108b3c90 'plen' 'size_t':'unsigned long long'
|-FunctionDecl 0x200108aeb78 <line:201:1, line:204:1> line:201:5 invalid i2c_ASN1_INTEGER 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x200108aea50 <col:22, col:36> col:36 invalid a 'int *'
| |-ParmVarDecl 0x200108aead8 <col:39, col:55> col:55 used pp 'unsigned char **'
| `-CompoundStmt 0x200108aec98 <line:202:1, line:204:1>
|-FunctionDecl 0x200108aeee0 <line:207:1, line:224:1> line:207:12 invalid asn1_get_uint64 'int (int *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x200108aecc0 <col:28, col:38> col:38 invalid pr 'int *'
| |-ParmVarDecl 0x200108aed40 <col:42, col:63> col:63 used b 'const unsigned char *'
| |-ParmVarDecl 0x200108aedb8 <col:66, col:73> col:73 used blen 'size_t':'unsigned long long'
| `-CompoundStmt 0x200108ad528 <line:208:1, line:224:1>
|   |-DeclStmt 0x200108af028 <line:209:5, col:13>
|   | `-VarDecl 0x200108aefc0 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   |-IfStmt 0x200108af100 <line:212:5, line:215:5>
|   | |-OpaqueValueExpr 0x200108af0e8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x200108af0d0 <line:212:29, line:215:5>
|   |   `-ReturnStmt 0x200108af0c0 <line:214:9, col:16>
|   |     `-IntegerLiteral 0x200108af098 <col:16> 'int' 0
|   |-IfStmt 0x200108af260 <line:216:5, line:217:16>
|   | |-BinaryOperator 0x200108af208 <line:216:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x200108af1d8 <.//openssl//file_jk/before\crypto\asn1\a_int.c:216:9> 'const unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x200108af118 <col:9> 'const unsigned char *' lvalue ParmVar 0x200108aed40 'b' 'const unsigned char *'
|   | | `-ImplicitCastExpr 0x200108af1f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x200108af1b8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x200108af190 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x200108af150 <col:26> 'int' 0
|   | `-ReturnStmt 0x200108af250 <.//openssl//file_jk/before\crypto\asn1\a_int.c:217:9, col:16>
|   |   `-IntegerLiteral 0x200108af228 <col:16> 'int' 0
|   |-ForStmt 0x200108ad4b8 <line:218:5, line:221:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x200108af3a8 <line:218:24, col:28> 'int' '<'
|   | | |-ImplicitCastExpr 0x200108af378 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x200108af338 <col:24> 'size_t':'unsigned long long' lvalue Var 0x200108aefc0 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x200108af390 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x200108af358 <col:28> 'size_t':'unsigned long long' lvalue ParmVar 0x200108aedb8 'blen' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x200108af3e8 <col:34, col:35> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x200108af3c8 <col:34> 'size_t':'unsigned long long' lvalue Var 0x200108aefc0 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x200108ad4a8 <col:39, line:221:5>
|   `-ReturnStmt 0x200108ad518 <line:223:5, col:12>
|     `-IntegerLiteral 0x200108ad4f0 <col:12> 'int' 1
|-FunctionDecl 0x200108ad708 <line:231:1, line:240:1> line:231:15 invalid asn1_put_uint64 'size_t (unsigned char, int)' static
| |-ParmVarDecl 0x200108ad578 <col:31, col:45> col:45 invalid b 'unsigned char'
| |-ParmVarDecl 0x200108ad5f8 <col:66, col:75> col:75 invalid r 'int'
| `-CompoundStmt 0x200108ad930 <line:232:1, line:240:1>
|   |-DeclStmt 0x200108ad848 <line:233:5, col:34>
|   | `-VarDecl 0x200108ad7e0 <col:5, col:12> col:12 used off 'size_t':'unsigned long long'
|   `-ReturnStmt 0x200108ad920 <line:239:5, col:12>
|     `-ImplicitCastExpr 0x200108ad908 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x200108ad8e8 <col:12> 'size_t':'unsigned long long' lvalue Var 0x200108ad7e0 'off' 'size_t':'unsigned long long'
|-FunctionDecl 0x200108adc30 <line:249:1, line:277:1> line:249:12 invalid asn1_get_int64 'int (int *, const unsigned char *, size_t, int)' static
| |-ParmVarDecl 0x200108ad968 <col:27, col:36> col:36 invalid pr 'int *'
| |-ParmVarDecl 0x200108ad9e8 <col:40, col:61> col:61 used b 'const unsigned char *'
| |-ParmVarDecl 0x200108ada60 <col:64, col:71> col:71 used blen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x200108adae0 <line:250:27, col:31> col:31 used neg 'int'
| `-CompoundStmt 0x200108ae0e0 <line:251:1, line:277:1>
|   |-IfStmt 0x200108addf0 <line:253:5, line:254:16>
|   | |-OpaqueValueExpr 0x200108addd8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x200108addc8 <col:9, col:16>
|   |   `-IntegerLiteral 0x200108adda0 <col:16> 'int' 0
|   |-IfStmt 0x200108ae080 <line:255:5, line:275:5> has_else
|   | |-ImplicitCastExpr 0x200108ade40 <line:255:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x200108ade08 <col:9> 'int' lvalue ParmVar 0x200108adae0 'neg' 'int'
|   | |-CompoundStmt 0x200108adf90 <col:14, line:268:5>
|   | | `-IfStmt 0x200108adf68 <line:256:9, line:267:9> has_else
|   | |   |-OpaqueValueExpr 0x200108adf50 <<invalid sloc>> '_Bool'
|   | |   |-CompoundStmt 0x200108ade58 <line:256:29, line:260:9>
|   | |   `-IfStmt 0x200108adf28 <col:16, line:267:9> has_else
|   | |     |-OpaqueValueExpr 0x200108adf10 <<invalid sloc>> '_Bool'
|   | |     |-CompoundStmt 0x200108ade90 <line:260:40, line:264:9>
|   | |     `-CompoundStmt 0x200108adef8 <col:16, line:267:9>
|   | |       `-ReturnStmt 0x200108adee8 <line:266:13, col:20>
|   | |         `-IntegerLiteral 0x200108adec0 <col:20> 'int' 0
|   | `-CompoundStmt 0x200108ae068 <line:268:12, line:275:5>
|   |   `-IfStmt 0x200108ae040 <line:269:9, line:274:9> has_else
|   |     |-OpaqueValueExpr 0x200108ae028 <<invalid sloc>> '_Bool'
|   |     |-CompoundStmt 0x200108adfa8 <line:269:29, line:271:9>
|   |     `-CompoundStmt 0x200108ae010 <col:16, line:274:9>
|   |       `-ReturnStmt 0x200108ae000 <line:273:13, col:20>
|   |         `-IntegerLiteral 0x200108adfd8 <col:20> 'int' 0
|   `-ReturnStmt 0x200108ae0d0 <line:276:5, col:12>
|     `-IntegerLiteral 0x200108ae0a8 <col:12> 'int' 1
|-FunctionDecl 0x200108ae2d8 <line:280:1, line:317:1> line:280:15 invalid c2i_ASN1_INTEGER 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x200108ae128 <col:32, col:47> col:47 invalid a 'int **'
| |-ParmVarDecl 0x200108ae1b0 <col:50, col:72> col:72 used pp 'const unsigned char **'
| |-ParmVarDecl 0x200108ae230 <line:281:32, col:37> col:37 used len 'long'
| `-CompoundStmt 0x200108b6698 <line:282:1, line:317:1>
|   |-DeclStmt 0x200108b1518 <line:284:5, col:13>
|   | `-VarDecl 0x200108b14b0 <col:5, col:12> col:12 used r 'size_t':'unsigned long long'
|   |-DeclStmt 0x200108b15b0 <line:285:5, col:12>
|   | `-VarDecl 0x200108b1548 <col:5, col:9> col:9 used neg 'int'
|   |-BinaryOperator 0x200108b18f8 <line:287:5, col:38> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x200108b15c8 <col:5> 'size_t':'unsigned long long' lvalue Var 0x200108b14b0 'r' 'size_t':'unsigned long long'
|   | `-CallExpr 0x200108b1840 <col:9, col:38> 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x200108b1828 <col:9> 'size_t (*)(unsigned char *, int *, const unsigned char *, size_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x200108b1600 <col:9> 'size_t (unsigned char *, int *, const unsigned char *, size_t)' Function 0x200108b3e38 'c2i_ibuf' 'size_t (unsigned char *, int *, const unsigned char *, size_t)'
|   |   |-ImplicitCastExpr 0x200108b1880 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <NullToPointer>
|   |   | `-ParenExpr 0x200108b1688 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x200108b1660 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x200108b1620 <col:26> 'int' 0
|   |   |-ImplicitCastExpr 0x200108b1898 <col:17, col:27> 'int *' <NullToPointer>
|   |   | `-ParenExpr 0x200108b1710 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x200108b16e8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x200108b16a8 <col:26> 'int' 0
|   |   |-ImplicitCastExpr 0x200108b18b0 <.//openssl//file_jk/before\crypto\asn1\a_int.c:287:30, col:31> 'const unsigned char *' <LValueToRValue>
|   |   | `-UnaryOperator 0x200108b1780 <col:30, col:31> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |   |   `-ImplicitCastExpr 0x200108b1768 <col:31> 'const unsigned char **' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x200108b1730 <col:31> 'const unsigned char **' lvalue ParmVar 0x200108ae1b0 'pp' 'const unsigned char **'
|   |   `-ImplicitCastExpr 0x200108b18e0 <col:35> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-ImplicitCastExpr 0x200108b18c8 <col:35> 'long' <LValueToRValue>
|   |       `-DeclRefExpr 0x200108b1798 <col:35> 'long' lvalue ParmVar 0x200108ae230 'len' 'long'
|   |-IfStmt 0x200108b1a60 <line:289:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x200108b1990 <.//openssl//file_jk/before\crypto\asn1\a_int.c:289:9, col:14> 'int' '=='
|   | | |-ImplicitCastExpr 0x200108b1960 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x200108b1918 <col:9> 'size_t':'unsigned long long' lvalue Var 0x200108b14b0 'r' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x200108b1978 <col:14> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x200108b1938 <col:14> 'int' 0
|   | `-ReturnStmt 0x200108b1a50 <line:290:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x200108b1a38 <col:17, col:27> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x200108b1a18 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x200108b19f0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x200108b19b0 <col:26> 'int' 0
|   |-IfStmt 0x200108b1ea0 <.//openssl//file_jk/before\crypto\asn1\a_int.c:292:5, line:298:9> has_else
|   | |-OpaqueValueExpr 0x200108b1e88 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x200108b1e68 <line:292:40, line:297:5>
|   | | `-IfStmt 0x200108b1e50 <line:294:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |   |-OpaqueValueExpr 0x200108b1e38 <<invalid sloc>> '_Bool'
|   | |   `-ReturnStmt 0x200108b1e28 <.//openssl//file_jk/before\crypto\asn1\a_int.c:295:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |     `-ImplicitCastExpr 0x200108b1e10 <col:17, col:27> 'int *' <NullToPointer>
|   | |       `-ParenExpr 0x200108b1df0 <col:17, col:27> 'void *'
|   | |         `-CStyleCastExpr 0x200108b1dc8 <col:18, col:26> 'void *' <NullToPointer>
|   | |           `-IntegerLiteral 0x200108b1d88 <col:26> 'int' 0
|   | `-NullStmt 0x200108b1e80 <.//openssl//file_jk/before\crypto\asn1\a_int.c:298:9>
|   |-IfStmt 0x200108b2128 <line:300:5, line:301:14>
|   | |-OpaqueValueExpr 0x200108b2110 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x200108b20f8 <col:9, col:14> 'err' 0x200108b20a8
|   |-CompoundAssignOperator 0x200108b22e0 <line:308:5, col:12> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | |-UnaryOperator 0x200108b2290 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x200108b2278 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x200108b2258 <col:6> 'const unsigned char **' lvalue ParmVar 0x200108ae1b0 'pp' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x200108b22c8 <col:12> 'long' <LValueToRValue>
|   |   `-DeclRefExpr 0x200108b22a8 <col:12> 'long' lvalue ParmVar 0x200108ae230 'len' 'long'
|   |-LabelStmt 0x200108b23c0 <line:312:2, col:5> 'err'
|   | `-NullStmt 0x200108b23b8 <col:5>
|   `-ReturnStmt 0x200108b6688 <line:316:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|     `-ImplicitCastExpr 0x200108b6670 <col:17, col:27> 'int *' <NullToPointer>
|       `-ParenExpr 0x200108b6650 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x200108b6628 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x200108b65e8 <col:26> 'int' 0
|-FunctionDecl 0x200108b68f0 <.//openssl//file_jk/before\crypto\asn1\a_int.c:319:1, line:330:1> line:319:12 invalid asn1_string_get_int64 'int (int *, const int *, int)' static
| |-ParmVarDecl 0x200108b6708 <col:34, col:43> col:43 invalid pr 'int *'
| |-ParmVarDecl 0x200108b6788 <col:47, col:66> col:66 invalid a 'const int *'
| |-ParmVarDecl 0x200108b6808 <col:69, col:73> col:73 used itype 'int'
| `-CompoundStmt 0x200108b6bc0 <line:320:1, line:330:1>
|   |-IfStmt 0x200108b6ad0 <line:321:5, line:324:5>
|   | |-OpaqueValueExpr 0x200108b6ab8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x200108b6aa0 <line:321:20, line:324:5>
|   |   `-ReturnStmt 0x200108b6a90 <line:323:9, col:16>
|   |     `-IntegerLiteral 0x200108b6a68 <col:16> 'int' 0
|   `-IfStmt 0x200108b6ba8 <line:325:5, line:328:5>
|     |-OpaqueValueExpr 0x200108b6b90 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x200108b6b78 <line:325:43, line:328:5>
|       `-ReturnStmt 0x200108b6b68 <line:327:9, col:16>
|         `-IntegerLiteral 0x200108b6b40 <col:16> 'int' 0
|-FunctionDecl 0x200108b6de0 <line:332:1, line:351:1> line:332:12 invalid asn1_string_set_int64 'int (int *, int, int)' static
| |-ParmVarDecl 0x200108b6bf8 <col:34, col:47> col:47 invalid a 'int *'
| |-ParmVarDecl 0x200108b6c78 <col:50, col:58> col:58 invalid r 'int'
| |-ParmVarDecl 0x200108b6cf8 <col:61, col:65> col:65 used itype 'int'
| `-CompoundStmt 0x200108b7178 <line:333:1, line:351:1>
|   |-DeclStmt 0x200108b6f30 <line:334:5, col:34>
|   | `-VarDecl 0x200108b6ec8 <col:5, col:19> col:19 invalid tbuf 'unsigned char'
|   |-DeclStmt 0x200108b6fc0 <line:335:5, col:15>
|   | `-VarDecl 0x200108b6f58 <col:5, col:12> col:12 used off 'size_t':'unsigned long long'
|   `-IfStmt 0x200108b70f0 <line:338:5, line:349:5> has_else
|     |-OpaqueValueExpr 0x200108b70d8 <<invalid sloc>> '_Bool'
|     |-CompoundStmt 0x200108b7098 <line:338:16, line:346:5>
|     `-CompoundStmt 0x200108b70c8 <col:12, line:349:5>
|-FunctionDecl 0x200108b7360 <line:353:1, line:369:1> line:353:12 invalid asn1_string_get_uint64 'int (int *, const int *, int)' static
| |-ParmVarDecl 0x200108b71b8 <col:35, col:45> col:45 invalid pr 'int *'
| |-ParmVarDecl 0x200108b7238 <col:49, col:68> col:68 invalid a 'const int *'
| |-ParmVarDecl 0x200108b72b8 <line:354:35, col:39> col:39 used itype 'int'
| `-CompoundStmt 0x200108b56c0 <line:355:1, line:369:1>
|   |-IfStmt 0x200108b5530 <line:356:5, line:359:5>
|   | |-OpaqueValueExpr 0x200108b5518 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x200108b5500 <line:356:20, line:359:5>
|   |   `-ReturnStmt 0x200108b54f0 <line:358:9, col:16>
|   |     `-IntegerLiteral 0x200108b74d8 <col:16> 'int' 0
|   |-IfStmt 0x200108b5608 <line:360:5, line:363:5>
|   | |-OpaqueValueExpr 0x200108b55f0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x200108b55d8 <line:360:43, line:363:5>
|   |   `-ReturnStmt 0x200108b55c8 <line:362:9, col:16>
|   |     `-IntegerLiteral 0x200108b55a0 <col:16> 'int' 0
|   `-IfStmt 0x200108b56a8 <line:364:5, line:367:5>
|     |-OpaqueValueExpr 0x200108b5690 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x200108b5678 <line:364:31, line:367:5>
|       `-ReturnStmt 0x200108b5668 <line:366:9, col:16>
|         `-IntegerLiteral 0x200108b5640 <col:16> 'int' 0
|-FunctionDecl 0x200108b58a8 <line:371:1, line:379:1> line:371:12 invalid asn1_string_set_uint64 'int (int *, int, int)' static
| |-ParmVarDecl 0x200108b5700 <col:35, col:48> col:48 invalid a 'int *'
| |-ParmVarDecl 0x200108b5780 <col:51, col:60> col:60 invalid r 'int'
| |-ParmVarDecl 0x200108b5800 <col:63, col:67> col:67 used itype 'int'
| `-CompoundStmt 0x200108b5b70 <line:372:1, line:379:1>
|   |-DeclStmt 0x200108b59f8 <line:373:5, col:34>
|   | `-VarDecl 0x200108b5990 <col:5, col:19> col:19 invalid tbuf 'unsigned char'
|   `-DeclStmt 0x200108b5a88 <line:374:5, col:15>
|     `-VarDecl 0x200108b5a20 <col:5, col:12> col:12 used off 'size_t':'unsigned long long'
|-FunctionDecl 0x200108b5d60 <line:387:1, line:447:1> line:387:15 invalid d2i_ASN1_UINTEGER 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x200108b5bb0 <col:33, col:48> col:48 invalid a 'int **'
| |-ParmVarDecl 0x200108b5c38 <col:51, col:73> col:73 used pp 'const unsigned char **'
| |-ParmVarDecl 0x200108b5cb8 <line:388:33, col:38> col:38 used length 'long'
| `-CompoundStmt 0x200108bed88 <line:389:1, line:447:1>
|   |-DeclStmt 0x200108b5f38 <line:391:5, col:27>
|   | `-VarDecl 0x200108b5ed0 <col:5, col:26> col:26 used p 'const unsigned char *'
|   |-DeclStmt 0x200108b5fd0 <line:392:5, col:21>
|   | `-VarDecl 0x200108b5f68 <col:5, col:20> col:20 used s 'unsigned char *'
|   |-DeclStmt 0x200108b6068 <line:393:5, col:13>
|   | `-VarDecl 0x200108b6000 <col:5, col:10> col:10 used len 'long'
|   |-DeclStmt 0x200108b6220 <line:394:5, col:25>
|   | |-VarDecl 0x200108b6098 <col:5, col:9> col:9 used inf 'int'
|   | |-VarDecl 0x200108b6118 <col:5, col:14> col:14 used tag 'int'
|   | `-VarDecl 0x200108b6198 <col:5, col:19> col:19 used xclass 'int'
|   |-DeclStmt 0x200108b62b8 <line:395:5, col:10>
|   | `-VarDecl 0x200108b6250 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x200108b05b0 <line:397:5, line:402:9> has_else
|   | |-OpaqueValueExpr 0x200108b0598 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x200108b0578 <line:397:40, line:401:5>
|   | | `-IfStmt 0x200108b0560 <line:398:9, line:399:25>
|   | |   |-OpaqueValueExpr 0x200108b0548 <<invalid sloc>> '_Bool'
|   | |   `-ReturnStmt 0x200108b0538 <col:13, col:25>
|   | |     `-ImplicitCastExpr 0x200108b0520 <col:20, col:25> 'int *' <NullToPointer>
|   | |       `-ParenExpr 0x200108b0500 <col:20, col:25> 'void *'
|   | |         `-ParenExpr 0x200108b04e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   | |           `-CStyleCastExpr 0x200108b04b8 <col:18, col:26> 'void *' <NullToPointer>
|   | |             `-IntegerLiteral 0x200108b64c0 <col:26> 'int' 0
|   | `-NullStmt 0x200108b0590 <.//openssl//file_jk/before\crypto\asn1\a_int.c:402:9>
|   |-BinaryOperator 0x200108b0690 <line:404:5, col:10> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x200108b05d8 <col:5> 'const unsigned char *' lvalue Var 0x200108b5ed0 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x200108b0678 <col:9, col:10> 'const unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x200108b0660 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x200108b0648 <col:10> 'const unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x200108b0610 <col:10> 'const unsigned char **' lvalue ParmVar 0x200108b5c38 'pp' 'const unsigned char **'
|   |-BinaryOperator 0x200108b0a00 <line:405:5, col:58> 'int' '='
|   | |-DeclRefExpr 0x200108b06b0 <col:5> 'int' lvalue Var 0x200108b6098 'inf' 'int'
|   | `-CallExpr 0x200108b09a0 <col:11, col:58> 'int'
|   |   |-ImplicitCastExpr 0x200108b0988 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x200108b07d8 <col:11> 'int ()' Function 0x200108b0710 'ASN1_get_object' 'int ()'
|   |   |-UnaryOperator 0x200108b0818 <col:27, col:28> 'const unsigned char **' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x200108b07f8 <col:28> 'const unsigned char *' lvalue Var 0x200108b5ed0 'p' 'const unsigned char *'
|   |   |-UnaryOperator 0x200108b0898 <col:31, col:32> 'long *' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x200108b0830 <col:32> 'long' lvalue Var 0x200108b6000 'len' 'long'
|   |   |-UnaryOperator 0x200108b08e8 <col:37, col:38> 'int *' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x200108b08b0 <col:38> 'int' lvalue Var 0x200108b6118 'tag' 'int'
|   |   |-UnaryOperator 0x200108b0938 <col:43, col:44> 'int *' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x200108b0900 <col:44> 'int' lvalue Var 0x200108b6198 'xclass' 'int'
|   |   `-ImplicitCastExpr 0x200108b09e8 <col:52> 'long' <LValueToRValue>
|   |     `-DeclRefExpr 0x200108b0950 <col:52> 'long' lvalue ParmVar 0x200108b5cb8 'length' 'long'
|   |-IfStmt 0x200108b0b58 <line:406:5, line:409:5>
|   | |-BinaryOperator 0x200108b0a80 <line:406:9, col:15> 'int' '&'
|   | | |-ImplicitCastExpr 0x200108b0a68 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x200108b0a20 <col:9> 'int' lvalue Var 0x200108b6098 'inf' 'int'
|   | | `-IntegerLiteral 0x200108b0a40 <col:15> 'int' 128
|   | `-CompoundStmt 0x200108b0b40 <col:21, line:409:5>
|   |   `-GotoStmt 0x200108b0b28 <line:408:9, col:14> 'err' 0x200108b0ad8
|   |-IfStmt 0x200108b0bf8 <line:411:5, line:414:5>
|   | |-OpaqueValueExpr 0x200108b0be0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x200108b0bc8 <line:411:32, line:414:5>
|   |   `-GotoStmt 0x200108b0bb0 <line:413:9, col:14> 'err' 0x200108b0ad8
|   |-BinaryOperator 0x200108b0e70 <line:420:5, col:36> 'unsigned char *' '='
|   | |-DeclRefExpr 0x200108b0c10 <col:5> 'unsigned char *' lvalue Var 0x200108b5f68 's' 'unsigned char *'
|   | `-ImplicitCastExpr 0x200108b0e58 <col:9, col:36> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x200108b0e30 <col:9, col:36> 'int'
|   |     |-ImplicitCastExpr 0x200108b0e18 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x200108b0d38 <col:9> 'int ()' Function 0x200108b0c70 'OPENSSL_malloc' 'int ()'
|   |     `-BinaryOperator 0x200108b0df8 <col:24, col:35> 'int' '+'
|   |       |-CStyleCastExpr 0x200108b0da8 <col:24, col:29> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x200108b0d90 <col:29> 'long' <LValueToRValue> part_of_explicit_cast
|   |       |   `-DeclRefExpr 0x200108b0d58 <col:29> 'long' lvalue Var 0x200108b6000 'len' 'long'
|   |       `-IntegerLiteral 0x200108b0dd0 <col:35> 'int' 1
|   |-IfStmt 0x200108b0fd8 <line:421:5, line:424:5>
|   | |-BinaryOperator 0x200108b0f68 <line:421:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x200108b0f38 <.//openssl//file_jk/before\crypto\asn1\a_int.c:421:9> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x200108b0e90 <col:9> 'unsigned char *' lvalue Var 0x200108b5f68 's' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x200108b0f50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x200108b0f18 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x200108b0ef0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x200108b0eb0 <col:26> 'int' 0
|   | `-CompoundStmt 0x200108b0fc0 <.//openssl//file_jk/before\crypto\asn1\a_int.c:421:20, line:424:5>
|   |   `-GotoStmt 0x200108b0fa8 <line:423:9, col:14> 'err' 0x200108b0ad8
|   |-IfStmt 0x200108be8c0 <line:426:5, line:433:5>
|   | |-ImplicitCastExpr 0x200108b1010 <line:426:9> 'long' <LValueToRValue>
|   | | `-DeclRefExpr 0x200108b0ff0 <col:9> 'long' lvalue Var 0x200108b6000 'len' 'long'
|   | `-CompoundStmt 0x200108be898 <col:14, line:433:5>
|   |   |-IfStmt 0x200108b1278 <line:427:9, line:430:9>
|   |   | |-BinaryOperator 0x200108b11c8 <line:427:13, col:35> 'int' '&&'
|   |   | | |-ParenExpr 0x200108b10f0 <col:13, col:21> 'int'
|   |   | | | `-BinaryOperator 0x200108b10d0 <col:14, col:20> 'int' '=='
|   |   | | |   |-ImplicitCastExpr 0x200108b10b8 <col:14, col:15> 'int' <IntegralCast>
|   |   | | |   | `-ImplicitCastExpr 0x200108b10a0 <col:14, col:15> 'unsigned char' <LValueToRValue>
|   |   | | |   |   `-UnaryOperator 0x200108b1060 <col:14, col:15> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   | | |   |     `-ImplicitCastExpr 0x200108b1048 <col:15> 'const unsigned char *' <LValueToRValue>
|   |   | | |   |       `-DeclRefExpr 0x200108b1028 <col:15> 'const unsigned char *' lvalue Var 0x200108b5ed0 'p' 'const unsigned char *'
|   |   | | |   `-IntegerLiteral 0x200108b1078 <col:20> 'int' 0
|   |   | | `-ParenExpr 0x200108b11a8 <col:26, col:35> 'int'
|   |   | |   `-BinaryOperator 0x200108b1188 <col:27, col:34> 'int' '!='
|   |   | |     |-ImplicitCastExpr 0x200108b1158 <col:27> 'long' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x200108b1110 <col:27> 'long' lvalue Var 0x200108b6000 'len' 'long'
|   |   | |     `-ImplicitCastExpr 0x200108b1170 <col:34> 'long' <IntegralCast>
|   |   | |       `-IntegerLiteral 0x200108b1130 <col:34> 'int' 1
|   |   | `-CompoundStmt 0x200108b1258 <col:38, line:430:9>
|   |   |   |-UnaryOperator 0x200108b1208 <line:428:13, col:14> 'const unsigned char *' postfix '++'
|   |   |   | `-DeclRefExpr 0x200108b11e8 <col:13> 'const unsigned char *' lvalue Var 0x200108b5ed0 'p' 'const unsigned char *'
|   |   |   `-UnaryOperator 0x200108b1240 <line:429:13, col:16> 'long' postfix '--'
|   |   |     `-DeclRefExpr 0x200108b1220 <col:13> 'long' lvalue Var 0x200108b6000 'len' 'long'
|   |   |-CallExpr 0x200108be760 <line:431:9, col:30> 'void *'
|   |   | |-ImplicitCastExpr 0x200108be748 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x200108be600 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x200108b12d0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x200108be7b0 <col:16> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x200108be798 <col:16> 'unsigned char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x200108be638 <col:16> 'unsigned char *' lvalue Var 0x200108b5f68 's' 'unsigned char *'
|   |   | |-ImplicitCastExpr 0x200108be7e0 <col:19> 'const void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x200108be7c8 <col:19> 'const unsigned char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x200108be658 <col:19> 'const unsigned char *' lvalue Var 0x200108b5ed0 'p' 'const unsigned char *'
|   |   | `-ImplicitCastExpr 0x200108be7f8 <col:22, col:27> 'unsigned long long' <IntegralCast>
|   |   |   `-CStyleCastExpr 0x200108be6c8 <col:22, col:27> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x200108be6b0 <col:27> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |       `-DeclRefExpr 0x200108be678 <col:27> 'long' lvalue Var 0x200108b6000 'len' 'long'
|   |   `-CompoundAssignOperator 0x200108be868 <line:432:9, col:14> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |     |-DeclRefExpr 0x200108be810 <col:9> 'const unsigned char *' lvalue Var 0x200108b5ed0 'p' 'const unsigned char *'
|   |     `-ImplicitCastExpr 0x200108be850 <col:14> 'long' <LValueToRValue>
|   |       `-DeclRefExpr 0x200108be830 <col:14> 'long' lvalue Var 0x200108b6000 'len' 'long'
|   |-BinaryOperator 0x200108beb90 <line:440:5, col:11> 'const unsigned char *' '='
|   | |-UnaryOperator 0x200108beb40 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x200108beb28 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x200108beb08 <col:6> 'const unsigned char **' lvalue ParmVar 0x200108b5c38 'pp' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x200108beb78 <col:11> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x200108beb58 <col:11> 'const unsigned char *' lvalue Var 0x200108b5ed0 'p' 'const unsigned char *'
|   |-LabelStmt 0x200108bebf8 <line:442:2, col:5> 'err'
|   | `-NullStmt 0x200108bebf0 <col:5>
|   `-ReturnStmt 0x200108bed78 <line:446:5, col:17>
|     `-ImplicitCastExpr 0x200108bed60 <col:12, col:17> 'int *' <NullToPointer>
|       `-ParenExpr 0x200108bed40 <col:12, col:17> 'void *'
|         `-ParenExpr 0x200108bed20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|           `-CStyleCastExpr 0x200108becf8 <col:18, col:26> 'void *' <NullToPointer>
|             `-IntegerLiteral 0x200108becb8 <col:26> 'int' 0
|-FunctionDecl 0x200108b12d0 <.//openssl//file_jk/before\crypto\asn1\a_int.c:431:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x200108b1370 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x200108b13d8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x200108be580 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x200108bf020 <line:449:1, line:491:1> line:449:21 invalid bn_to_asn1_string 'int *(const int *, int *, int)' static
| |-ParmVarDecl 0x200108bee30 <col:39, col:53> col:53 invalid bn 'const int *'
| |-ParmVarDecl 0x200108beeb0 <col:57, col:70> col:70 invalid ai 'int *'
| |-ParmVarDecl 0x200108bef30 <line:450:39, col:43> col:43 used atype 'int'
| `-CompoundStmt 0x200108bbe10 <line:451:1, line:491:1>
|   |-DeclStmt 0x200108bf170 <line:453:5, col:12>
|   | `-VarDecl 0x200108bf108 <col:5, col:9> col:9 used len 'int'
|   |-IfStmt 0x200108bf408 <line:455:5, line:460:5> has_else
|   | |-OpaqueValueExpr 0x200108bf3f0 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x200108bf3b0 <line:455:21, line:457:5>
|   | `-CompoundStmt 0x200108bf3e0 <col:12, line:460:5>
|   |-IfStmt 0x200108bb550 <line:462:5, line:465:5>
|   | |-OpaqueValueExpr 0x200108bf558 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x200108bf540 <line:462:22, line:465:5>
|   |   `-GotoStmt 0x200108bf528 <line:464:9, col:14> 'err' 0x200108bf4d8
|   |-IfStmt 0x200108bb9b8 <line:472:5, line:473:15>
|   | |-BinaryOperator 0x200108bb930 <line:472:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x200108bb918 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x200108bb8d0 <col:9> 'int' lvalue Var 0x200108bf108 'len' 'int'
|   | | `-IntegerLiteral 0x200108bb8f0 <col:16> 'int' 0
|   | `-BinaryOperator 0x200108bb998 <line:473:9, col:15> 'int' '='
|   |   |-DeclRefExpr 0x200108bb950 <col:9> 'int' lvalue Var 0x200108bf108 'len' 'int'
|   |   `-IntegerLiteral 0x200108bb970 <col:15> 'int' 1
|   |-IfStmt 0x200108bbb28 <line:475:5, line:478:5>
|   | |-OpaqueValueExpr 0x200108bbb10 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x200108bbaf8 <line:475:47, line:478:5>
|   |   `-GotoStmt 0x200108bbae0 <line:477:9, col:14> 'err' 0x200108bf4d8
|   |-LabelStmt 0x200108bbd28 <line:487:2, col:5> 'err'
|   | `-NullStmt 0x200108bbd20 <col:5>
|   `-ReturnStmt 0x200108bbe00 <line:490:5, col:17>
|     `-ImplicitCastExpr 0x200108bbde8 <col:12, col:17> 'int *' <NullToPointer>
|       `-ParenExpr 0x200108bbdc8 <col:12, col:17> 'void *'
|         `-ParenExpr 0x200108bbda8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|           `-CStyleCastExpr 0x200108bbd80 <col:18, col:26> 'void *' <NullToPointer>
|             `-IntegerLiteral 0x200108bbd40 <col:26> 'int' 0
|-FunctionDecl 0x200108bc018 <.//openssl//file_jk/before\crypto\asn1\a_int.c:493:1, line:511:1> line:493:16 invalid asn1_string_to_bn 'int *(const int *, int *, int)' static
| |-ParmVarDecl 0x200108bbe70 <col:34, col:54> col:54 invalid ai 'const int *'
| |-ParmVarDecl 0x200108bbef0 <col:58, col:66> col:66 invalid bn 'int *'
| |-ParmVarDecl 0x200108bbf70 <line:494:34, col:38> col:38 used itype 'int'
| `-CompoundStmt 0x200108ba650 <line:495:1, line:511:1>
|   |-IfStmt 0x200108bc220 <line:498:5, line:501:5>
|   | |-OpaqueValueExpr 0x200108bc208 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x200108bc1f0 <line:498:44, line:501:5>
|   |   `-ReturnStmt 0x200108bc1e0 <line:500:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     `-ImplicitCastExpr 0x200108bc1c8 <col:17, col:27> 'int *' <NullToPointer>
|   |       `-ParenExpr 0x200108bc1a8 <col:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x200108bc180 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x200108bc140 <col:26> 'int' 0
|   `-IfStmt 0x200108bc4d0 <.//openssl//file_jk/before\crypto\asn1\a_int.c:504:5, line:507:5>
|     |-OpaqueValueExpr 0x200108bc4b8 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x200108bc4a0 <line:504:22, line:507:5>
|       `-ReturnStmt 0x200108bc490 <line:506:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|         `-ImplicitCastExpr 0x200108bc478 <col:17, col:27> 'int *' <NullToPointer>
|           `-ParenExpr 0x200108bc458 <col:17, col:27> 'void *'
|             `-CStyleCastExpr 0x200108bc430 <col:18, col:26> 'void *' <NullToPointer>
|               `-IntegerLiteral 0x200108bc3f0 <col:26> 'int' 0
|-FunctionDecl 0x200108ba7e0 <.//openssl//file_jk/before\crypto\asn1\a_int.c:513:1, line:516:1> line:513:5 invalid ASN1_INTEGER_get_int64 'int (int *, const int *)'
| |-ParmVarDecl 0x200108ba688 <col:28, col:37> col:37 invalid pr 'int *'
| |-ParmVarDecl 0x200108ba708 <col:41, col:61> col:61 invalid a 'const int *'
| `-CompoundStmt 0x200108ba8a8 <line:514:1, line:516:1>
|-FunctionDecl 0x200108baa30 <line:518:1, line:521:1> line:518:5 invalid ASN1_INTEGER_set_int64 'int (int *, int)'
| |-ParmVarDecl 0x200108ba8d0 <col:28, col:42> col:42 invalid a 'int *'
| |-ParmVarDecl 0x200108ba950 <col:45, col:53> col:53 invalid r 'int'
| `-CompoundStmt 0x200108baaf8 <line:519:1, line:521:1>
|-FunctionDecl 0x200108bac40 <line:523:1, line:526:1> line:523:5 invalid ASN1_INTEGER_get_uint64 'int (int *, const int *)'
| |-ParmVarDecl 0x200108bab20 <col:29, col:39> col:39 invalid pr 'int *'
| |-ParmVarDecl 0x200108baba0 <col:43, col:63> col:63 invalid a 'const int *'
| `-CompoundStmt 0x200108bad08 <line:524:1, line:526:1>
|-FunctionDecl 0x200108bae50 <line:528:1, line:531:1> line:528:5 invalid ASN1_INTEGER_set_uint64 'int (int *, int)'
| |-ParmVarDecl 0x200108bad30 <col:29, col:43> col:43 invalid a 'int *'
| |-ParmVarDecl 0x200108badb0 <col:46, col:55> col:55 invalid r 'int'
| `-CompoundStmt 0x200108baf18 <line:529:1, line:531:1>
|-FunctionDecl 0x200108bb0a0 <line:533:1, line:536:1> line:533:5 invalid ASN1_INTEGER_set 'int (int *, long)'
| |-ParmVarDecl 0x200108baf40 <col:22, col:36> col:36 invalid a 'int *'
| |-ParmVarDecl 0x200108bafc0 <col:39, col:44> col:44 used v 'long'
| `-CompoundStmt 0x200108bb1a0 <line:534:1, line:536:1>
|-FunctionDecl 0x200108bb290 <line:538:1, line:550:1> line:538:6 invalid ASN1_INTEGER_get 'long (const int *)'
| |-ParmVarDecl 0x200108bb1c8 <col:23, col:43> col:43 invalid a 'const int *'
| `-CompoundStmt 0x200108bc7c8 <line:539:1, line:550:1>
|   |-DeclStmt 0x200108bb3d0 <line:540:5, col:10>
|   | `-VarDecl 0x200108bb368 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x200108bb4d8 <line:542:5, line:543:16>
|   | |-OpaqueValueExpr 0x200108bb4c0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x200108bb4b0 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x200108bb498 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x200108bb470 <col:16> 'int' 0
|   |-IfStmt 0x200108bc648 <line:545:5, line:546:17>
|   | |-BinaryOperator 0x200108bc5c0 <line:545:9, col:14> 'int' '=='
|   | | |-ImplicitCastExpr 0x200108bc5a8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x200108bc560 <col:9> 'int' lvalue Var 0x200108bb368 'i' 'int'
|   | | `-IntegerLiteral 0x200108bc580 <col:14> 'int' 0
|   | `-ReturnStmt 0x200108bc638 <line:546:9, col:17>
|   |   `-ImplicitCastExpr 0x200108bc620 <col:16, col:17> 'long' <IntegralCast>
|   |     `-UnaryOperator 0x200108bc608 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x200108bc5e0 <col:17> 'int' 1
|   `-IfStmt 0x200108bc7b0 <line:547:5, line:548:17>
|     |-OpaqueValueExpr 0x200108bc798 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x200108bc788 <col:9, col:17>
|       `-ImplicitCastExpr 0x200108bc770 <col:16, col:17> 'long' <IntegralCast>
|         `-UnaryOperator 0x200108bc758 <col:16, col:17> 'int' prefix '-'
|           `-IntegerLiteral 0x200108bc730 <col:17> 'int' 1
|-FunctionDecl 0x200108bc970 <line:552:1, line:555:1> line:552:15 invalid BN_to_ASN1_INTEGER 'int *(const int *, int *)'
| |-ParmVarDecl 0x200108bc810 <col:34, col:48> col:48 invalid bn 'const int *'
| |-ParmVarDecl 0x200108bc890 <col:52, col:66> col:66 invalid ai 'int *'
| `-CompoundStmt 0x200108bca38 <line:553:1, line:555:1>
|-FunctionDecl 0x200108bcb80 <line:557:1, line:560:1> line:557:9 invalid ASN1_INTEGER_to_BN 'int *(const int *, int *)'
| |-ParmVarDecl 0x200108bca60 <col:28, col:48> col:48 invalid ai 'const int *'
| |-ParmVarDecl 0x200108bcae0 <col:52, col:60> col:60 invalid bn 'int *'
| `-CompoundStmt 0x200108bcc48 <line:558:1, line:560:1>
|-FunctionDecl 0x200108bcd90 <line:562:1, line:565:1> line:562:5 invalid ASN1_ENUMERATED_get_int64 'int (int *, const int *)'
| |-ParmVarDecl 0x200108bcc70 <col:31, col:40> col:40 invalid pr 'int *'
| |-ParmVarDecl 0x200108bccf0 <col:44, col:67> col:67 invalid a 'const int *'
| `-CompoundStmt 0x200108bce58 <line:563:1, line:565:1>
|-FunctionDecl 0x200108bcfa0 <line:567:1, line:570:1> line:567:5 invalid ASN1_ENUMERATED_set_int64 'int (int *, int)'
| |-ParmVarDecl 0x200108bce80 <col:31, col:48> col:48 invalid a 'int *'
| |-ParmVarDecl 0x200108bcf00 <col:51, col:59> col:59 invalid r 'int'
| `-CompoundStmt 0x200108bd068 <line:568:1, line:570:1>
|-FunctionDecl 0x200108bd1b0 <line:572:1, line:575:1> line:572:5 invalid ASN1_ENUMERATED_set 'int (int *, long)'
| |-ParmVarDecl 0x200108bd090 <col:25, col:42> col:42 invalid a 'int *'
| |-ParmVarDecl 0x200108bd110 <col:45, col:50> col:50 used v 'long'
| `-CompoundStmt 0x200108bd2b0 <line:573:1, line:575:1>
|-FunctionDecl 0x200108bd370 <line:577:1, line:593:1> line:577:6 invalid ASN1_ENUMERATED_get 'long (const int *)'
| |-ParmVarDecl 0x200108bd2d8 <col:26, col:49> col:49 invalid a 'const int *'
| `-CompoundStmt 0x200108b99e0 <line:578:1, line:593:1>
|   |-DeclStmt 0x200108bd4b0 <line:579:5, col:10>
|   | `-VarDecl 0x200108bd448 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x200108b9598 <line:581:5, line:582:16>
|   | |-OpaqueValueExpr 0x200108b9580 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x200108b9570 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x200108b9558 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x200108b9530 <col:16> 'int' 0
|   |-IfStmt 0x200108b9630 <line:583:5, line:584:17>
|   | |-OpaqueValueExpr 0x200108b9618 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x200108b9608 <col:9, col:17>
|   |   `-ImplicitCastExpr 0x200108b95f0 <col:16, col:17> 'long' <IntegralCast>
|   |     `-UnaryOperator 0x200108b95d8 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x200108b95b0 <col:17> 'int' 1
|   |-IfStmt 0x200108b9728 <line:585:5, line:586:16>
|   | |-OpaqueValueExpr 0x200108b9710 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x200108b9700 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x200108b96e8 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x200108b96c0 <col:16> 'unsigned long' 4294967295
|   |-IfStmt 0x200108b9860 <line:588:5, line:589:17>
|   | |-BinaryOperator 0x200108b97d8 <line:588:9, col:14> 'int' '=='
|   | | |-ImplicitCastExpr 0x200108b97c0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x200108b9778 <col:9> 'int' lvalue Var 0x200108bd448 'i' 'int'
|   | | `-IntegerLiteral 0x200108b9798 <col:14> 'int' 0
|   | `-ReturnStmt 0x200108b9850 <line:589:9, col:17>
|   |   `-ImplicitCastExpr 0x200108b9838 <col:16, col:17> 'long' <IntegralCast>
|   |     `-UnaryOperator 0x200108b9820 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x200108b97f8 <col:17> 'int' 1
|   `-IfStmt 0x200108b99c8 <line:590:5, line:591:17>
|     |-OpaqueValueExpr 0x200108b99b0 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x200108b99a0 <col:9, col:17>
|       `-ImplicitCastExpr 0x200108b9988 <col:16, col:17> 'long' <IntegralCast>
|         `-UnaryOperator 0x200108b9970 <col:16, col:17> 'int' prefix '-'
|           `-IntegerLiteral 0x200108b9948 <col:17> 'int' 1
|-FunctionDecl 0x200108b9b58 <line:595:1, line:598:1> line:595:18 invalid BN_to_ASN1_ENUMERATED 'int *(const int *, int *)'
| |-ParmVarDecl 0x200108b9a38 <col:40, col:54> col:54 invalid bn 'const int *'
| |-ParmVarDecl 0x200108b9ab8 <col:58, col:75> col:75 invalid ai 'int *'
| `-CompoundStmt 0x200108b9c20 <line:596:1, line:598:1>
|-FunctionDecl 0x200108b9d68 <line:600:1, line:603:1> line:600:9 invalid ASN1_ENUMERATED_to_BN 'int *(const int *, int *)'
| |-ParmVarDecl 0x200108b9c48 <col:31, col:54> col:54 invalid ai 'const int *'
| |-ParmVarDecl 0x200108b9cc8 <col:58, col:66> col:66 invalid bn 'int *'
| `-CompoundStmt 0x200108b9e30 <line:601:1, line:603:1>
|-FunctionDecl 0x200108ba090 <line:606:1, line:620:1> line:606:5 invalid c2i_uint64_int 'int (int *, int *, const unsigned char **, long)'
| |-ParmVarDecl 0x200108b9e58 <col:20, col:30> col:30 invalid ret 'int *'
| |-ParmVarDecl 0x200108b9ed8 <col:35, col:40> col:40 used neg 'int *'
| |-ParmVarDecl 0x200108b9f60 <col:45, col:67> col:67 used pp 'const unsigned char **'
| |-ParmVarDecl 0x200108b9fe0 <col:71, col:76> col:76 used len 'long'
| `-CompoundStmt 0x200108bd868 <line:607:1, line:620:1>
|   |-DeclStmt 0x200108ba1e8 <line:608:5, col:40>
|   | `-VarDecl 0x200108ba180 <col:5, col:19> col:19 invalid buf 'unsigned char'
|   |-DeclStmt 0x200108ba278 <line:609:5, col:18>
|   | `-VarDecl 0x200108ba210 <col:5, col:12> col:12 used buflen 'size_t':'unsigned long long'
|   |-BinaryOperator 0x200108bd5b8 <line:611:5, col:43> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x200108ba290 <col:5> 'size_t':'unsigned long long' lvalue Var 0x200108ba210 'buflen' 'size_t':'unsigned long long'
|   | `-CallExpr 0x200108ba4b0 <col:14, col:43> 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x200108ba498 <col:14> 'size_t (*)(unsigned char *, int *, const unsigned char *, size_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x200108ba2c8 <col:14> 'size_t (unsigned char *, int *, const unsigned char *, size_t)' Function 0x200108b3e38 'c2i_ibuf' 'size_t (unsigned char *, int *, const unsigned char *, size_t)'
|   |   |-ImplicitCastExpr 0x200108ba4f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <NullToPointer>
|   |   | `-ParenExpr 0x200108ba350 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x200108ba328 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x200108ba2e8 <col:26> 'int' 0
|   |   |-ImplicitCastExpr 0x200108ba508 <col:17, col:27> 'int *' <NullToPointer>
|   |   | `-ParenExpr 0x200108ba3d8 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x200108ba3b0 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x200108ba370 <col:26> 'int' 0
|   |   |-ImplicitCastExpr 0x200108bd570 <.//openssl//file_jk/before\crypto\asn1\a_int.c:611:35, col:36> 'const unsigned char *' <LValueToRValue>
|   |   | `-UnaryOperator 0x200108ba448 <col:35, col:36> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |   |   `-ImplicitCastExpr 0x200108ba430 <col:36> 'const unsigned char **' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x200108ba3f8 <col:36> 'const unsigned char **' lvalue ParmVar 0x200108b9f60 'pp' 'const unsigned char **'
|   |   `-ImplicitCastExpr 0x200108bd5a0 <col:40> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-ImplicitCastExpr 0x200108bd588 <col:40> 'long' <LValueToRValue>
|   |       `-DeclRefExpr 0x200108ba460 <col:40> 'long' lvalue ParmVar 0x200108b9fe0 'len' 'long'
|   |-IfStmt 0x200108bd6a8 <line:612:5, line:613:16>
|   | |-BinaryOperator 0x200108bd650 <line:612:9, col:19> 'int' '=='
|   | | |-ImplicitCastExpr 0x200108bd620 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x200108bd5d8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x200108ba210 'buflen' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x200108bd638 <col:19> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x200108bd5f8 <col:19> 'int' 0
|   | `-ReturnStmt 0x200108bd698 <line:613:9, col:16>
|   |   `-IntegerLiteral 0x200108bd670 <col:16> 'int' 0
|   `-IfStmt 0x200108bd768 <line:614:5, line:617:5>
|     |-OpaqueValueExpr 0x200108bd750 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x200108bd738 <line:614:36, line:617:5>
|       `-ReturnStmt 0x200108bd728 <line:616:9, col:16>
|         `-IntegerLiteral 0x200108bd700 <col:16> 'int' 0
`-FunctionDecl 0x200108bda60 <line:622:1, line:629:1> line:622:5 invalid i2c_uint64_int 'int (unsigned char *, int, int)'
  |-ParmVarDecl 0x200108bd8b8 <col:20, col:35> col:35 used p 'unsigned char *'
  |-ParmVarDecl 0x200108bd938 <col:38, col:47> col:47 invalid r 'int'
  |-ParmVarDecl 0x200108bd9b8 <col:50, col:54> col:54 used neg 'int'
  `-CompoundStmt 0x200108bdd78 <line:623:1, line:629:1>
    |-DeclStmt 0x200108bdbb0 <line:624:5, col:40>
    | `-VarDecl 0x200108bdb48 <col:5, col:19> col:19 invalid buf 'unsigned char'
    `-DeclStmt 0x200108bdc40 <line:625:5, col:15>
      `-VarDecl 0x200108bdbd8 <col:5, col:12> col:12 used off 'size_t':'unsigned long long'
