TranslationUnitDecl 0x201fdc63188 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x201fdc63a20 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x201fdc63720 '__int128'
|-TypedefDecl 0x201fdc63a90 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x201fdc63740 'unsigned __int128'
|-TypedefDecl 0x201fdc63dc8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x201fdc63b80 'struct __NSConstantString_tag'
|   `-Record 0x201fdc63ae8 '__NSConstantString_tag'
|-TypedefDecl 0x201fdc63e38 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x201fdc63360 'unsigned long long'
|-TypedefDecl 0x201fdc63ed0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x201fdc63e90 'char *'
|   `-BuiltinType 0x201fdc63220 'char'
|-TypedefDecl 0x201fdc63f40 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x201fdc63e90 'char *'
|   `-BuiltinType 0x201fdc63220 'char'
|-TypedefDecl 0x201fdc64000 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x201fdc63360 'unsigned long long'
|-TypedefDecl 0x201fdc64070 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x201fdc63e90 'char *'
|   `-BuiltinType 0x201fdc63220 'char'
|-FunctionDecl 0x201ff67e410 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x201ff67e4b0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x201ff67e520 <col:21> Implicit
|-FunctionDecl 0x201ff67e578 prev 0x201ff67e410 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x201ff67e2a0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x201ff67e668 <col:21> Inherited Implicit
|-TypedefDecl 0x201ff67e6a8 prev 0x201fdc63e38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x201fdc63360 'unsigned long long'
|-TypedefDecl 0x201ff67e750 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x201ff67e720 'size_t' sugar
|   |-Typedef 0x201ff67e6a8 'size_t'
|   `-BuiltinType 0x201fdc63360 'unsigned long long'
|-TypedefDecl 0x201ff67e7c0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x201fdc632c0 'long long'
|-TypedefDecl 0x201ff67e830 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x201fdc632c0 'long long'
|-TypedefDecl 0x201ff67e8a0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x201fdc63300 'unsigned short'
|-TypedefDecl 0x201ff67e910 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x201fdc63300 'unsigned short'
|-TypedefDecl 0x201ff67e980 <line:542:1, col:24> col:24 referenced wctype_t 'unsigned short'
| `-BuiltinType 0x201fdc63300 'unsigned short'
|-TypedefDecl 0x201ff67e9f0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x201fdc63280 'int'
|-TypedefDecl 0x201ff67ea60 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x201fdc632a0 'long'
|-TypedefDecl 0x201ff67ead0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x201fdc632c0 'long long'
|-TypedefDecl 0x201ff67eb60 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x201ff67eb30 '__time64_t' sugar
|   |-Typedef 0x201ff67ead0 '__time64_t'
|   `-BuiltinType 0x201fdc632c0 'long long'
|-FunctionDecl 0x201ff67ecd8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x201ff67eef8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x201ff6b7070 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x201ff67f038 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x201ff67f0b0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x201ff67f128 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x201ff67f1a8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x201ff6b6e10 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x201ff6b7150 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x201ff6b7210 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x201ff6b7380 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x201ff6b7330 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x201ff6b72d0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x201ff6b71f0 'struct threadlocaleinfostruct'
|       `-Record 0x201ff6c3ee0 'threadlocaleinfostruct'
|-TypedefDecl 0x201ff6b7490 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x201ff6b7440 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x201ff6b73e0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x201ff6b72b0 'struct threadmbcinfostruct'
|       `-Record 0x201ff6b7210 'threadmbcinfostruct'
|-RecordDecl 0x201ff6b74e8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x201ff6b75a0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x201ff6b7660 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x201ff6b76f0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x201ff6b7780 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x201ff6b7838 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x201ff6b77e0 'struct localeinfo_struct' sugar
|   `-RecordType 0x201ff6b7640 'struct localeinfo_struct'
|     `-Record 0x201ff6b75a0 'localeinfo_struct'
|-TypedefDecl 0x201ff6b7910 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x201ff6b78c0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x201ff6b77e0 'struct localeinfo_struct' sugar
|     `-RecordType 0x201ff6b7640 'struct localeinfo_struct'
|       `-Record 0x201ff6b75a0 'localeinfo_struct'
|-RecordDecl 0x201ff6b7988 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x201ff6b7a40 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x201ff6b7ab8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x201ff6b7b78 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x201ff6b7c10 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x201ff6b7c80 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x201ff6b7d38 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x201ff6b7ce0 'struct localerefcount' sugar
|   `-RecordType 0x201ff6b7a20 'struct localerefcount'
|     `-Record 0x201ff6b7988 'localerefcount'
|-RecordDecl 0x201ff6c3ee0 prev 0x201ff6b7150 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x201ff6c3f60 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x201ff6c3fd8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x201ff6c4048 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x201ff6c40b8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x201ff6c4128 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x201ff6c42e8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x201ff6c4358 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x201ff6c43c8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x201ff6c4438 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x201ff6c44a8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x201ff6c4518 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x201ff6c4570 parent 0x201fdc63188 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x201ff6c4700 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x201ff6c4770 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x201ff6c47e0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x201ff6c4850 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x201ff6c48f0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x201ff6c4960 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x201ff6c4a70 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x201ff6c4ba8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x201ff6c4c58 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x201ff6c4c00 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x201ff6b71f0 'struct threadlocaleinfostruct'
|     `-Record 0x201ff6c3ee0 'threadlocaleinfostruct'
|-RecordDecl 0x201ff6c4cf0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x201ff6c4db0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x201ff6c4e28 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x201ff6c6f10 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x201ff6c6f80 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x201ff6c6ff0 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x201ff6c7060 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x201ff6c70d0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x201ff6c7140 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x201ff6c71b0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x201ff6c7260 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x201ff6c7210 'struct _iobuf' sugar
|   `-RecordType 0x201ff6c4d90 'struct _iobuf'
|     `-Record 0x201ff6c4cf0 '_iobuf'
|-FunctionDecl 0x201ff6c7498 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x201ff6c7568 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x201fdc632c0 'long long'
|-FunctionDecl 0x201ff6c7748 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x201ff6c75d0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x201ff6c7a40 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x201ff6c7820 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x201ff6c7898 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x201ff6c7df0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x201ff6c7b20 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x201ff6c7ba0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x201ff6c7c20 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x201ff6ca0b0 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x201ff6c9f40 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x201ff6ca2e0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x201ff6ca1a0 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x201ff6ca490 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x201ff6ca3b0 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x201ff6ca680 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x201ff6ca978 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x201ff6ca750 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x201ff6ca7d0 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x201ff6cab30 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x201ff6caa50 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x201ff6cace0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x201ff6cac00 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x201ff6cae90 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x201ff6cadb0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x201ff6c2fd8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x201ff6c2ef8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x201ff6c3168 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x201ff6c34d0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x201ff6c3230 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x201ff6c3328 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x201ff6c3888 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x201ff6c35b0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x201ff6c3630 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x201ff6c36a8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x201ff6c3a48 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x201ff6c3968 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x201ff6c3d10 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x201ff6c3b20 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x201ff6c3ba0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x201ff6cffa0 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x201ff6d0398 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x201ff6d0438 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x201ff6d04a0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x201ff6d0518 prev 0x201ff6d0398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x201ff6d0170 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x201ff6d01f0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x201ff6d05c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff6d0a40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x201ff6d0770 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x201ff6d07f0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x201ff6d0870 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x201ff6d0d60 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x201ff6d0e00 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x201ff6d0e68 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x201ff6d0ee0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x201ff6d1fc0 prev 0x201ff6d0d60 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x201ff6d0b20 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x201ff6d0ba0 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x201ff6d20b8 <col:40> Inherited printf 2 3
|-FunctionDecl 0x201ff6d2280 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x201ff6d2100 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x201ff6d2180 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x201ff6d24d8 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x201ff6d2360 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x201ff6d23d8 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x201ff6d2708 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x201ff6d25b8 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x201ff6d2a00 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x201ff6d27e0 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x201ff6d2858 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x201ff6d2e98 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x201ff6d2f38 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x201ff6cdf80 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x201ff6cdfe8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x201ff6ce050 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x201ff6ce0d8 prev 0x201ff6d2e98 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x201ff6d2ae0 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x201ff6d2b58 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff6d2bd0 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x201ff6d2c48 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x201ff6ce5e0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x201ff6ce1c8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x201ff6ce240 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff6ce2b8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff6ce330 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x201ff6ce3a8 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x201ff6ceaa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x201ff6ce7d0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x201ff6ce850 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x201ff6ce8c8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x201ff6ceb58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff6cf038 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x201ff6ceca0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x201ff6ced20 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x201ff6ceda0 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x201ff6cee18 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x201ff6cf3e0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x201ff6cf480 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x201ff6cf4e8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x201ff6cf560 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x201ff6cf5c8 prev 0x201ff6cf3e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x201ff6cf218 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x201ff6cf298 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x201ff6cf7a8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x201ff6cf678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff6cfbe8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff6cf8e8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x201ff6cf968 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x201ff6cfa00 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x201ff6cfca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff6ccf70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x201ff6cfde0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x201ff6cfe60 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x201ff6cd260 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff6cd048 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x201ff6cd0c8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x201ff6cd140 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff6cd5c0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x201ff6cd340 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x201ff6cd418 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x201ff6cd978 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x201ff6cd698 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x201ff6cd718 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x201ff6cd798 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x201ff6cdbd8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x201ff6cda58 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x201ff6d0ff8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x201ff6cdca8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x201ff6cdd28 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x201ff6cdda8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x201ff6d1258 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x201ff6d10d8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x201ff6d1718 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x201ff6d17b8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x201ff6d1820 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x201ff6d1888 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x201ff6d18f0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x201ff6d1978 prev 0x201ff6d1718 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x201ff6d1360 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x201ff6d13d8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff6d1450 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x201ff6d14c8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x201ff6d1b40 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x201ff6d1a60 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x201ff6d1cd0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x201ff6d1e58 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x201ff6cb110 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x201ff6d1f28 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x201ff6caf60 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x201ff6cb438 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x201ff6cb2f0 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x201ff6cb4e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff6cb700 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x201ff6cb620 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x201ff6cb920 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x201ff6cb7d8 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x201ff6cbad0 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x201ff6cb9f0 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x201ff6cbd20 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x201ff6cbba8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x201ff6cbc28 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x201ff6d2fd0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x201ff6d3070 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x201ff6d30e0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x201ff6d3148 prev 0x201ff6d2fd0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x201ff6cbe00 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x201ff6d3238 <col:40> Inherited printf 1 2
|-FunctionDecl 0x201ff6d3368 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x201ff6d3288 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x201ff6d35b8 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x201ff6d3440 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x201ff6d34b8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x201ff6d3778 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x201ff6d3698 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x201ff6d3998 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x201ff6d3850 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x201ff6d3be8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x201ff6d3a70 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x201ff6d3ae8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x201ff6d3da8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x201ff6d3cc8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x201ff71dc10 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x201ff6d3e80 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x201ff6d3f00 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x201ff71ddd0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x201ff71dcf0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x201ff71e060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x201ff71df80 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x201ff71e108 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x201ff71e300 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x201ff71e228 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x201ff71e490 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x201ff71e738 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x201ff71e7d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x201ff71e848 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x201ff71e8b0 prev 0x201ff71e738 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x201ff71e620 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x201ff71ea88 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x201ff71e958 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff71fe70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff71fc38 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x201ff71fcb0 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x201ff71ff20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff720148 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x201ff720068 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x201ff720398 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff720220 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x201ff720298 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff720758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x201ff720530 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x201ff7205b0 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x201ff720808 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff720a30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x201ff720950 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x201ff722cd8 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x201ff722b90 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x201ff722ec0 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x201ff723310 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x201ff722f88 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x201ff723008 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x201ff723088 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x201ff723100 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x201ff723790 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x201ff723400 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x201ff723478 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff7234f0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x201ff723570 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x201ff71eb50 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x201ff723880 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x201ff7238f8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x201ff723978 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x201ff71ed18 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x201ff71ec38 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x201ff71f0f0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x201ff71f190 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x201ff71f1f8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x201ff71f270 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x201ff71f2d8 prev 0x201ff71f0f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x201ff71eeb0 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x201ff71ef30 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x201ff71f4b8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x201ff71f388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff71f8a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff71f5c8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x201ff71f648 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x201ff71f6c0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x201ff71f960 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff721c80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x201ff71faa8 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x201ff721b80 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x201ff721f78 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff721d60 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x201ff721de0 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x201ff721e58 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff722408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x201ff722120 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x201ff722198 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff722218 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x201ff7224c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff722a90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff722700 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x201ff722778 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff7227f8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x201ff722870 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x201ff720b70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff720ed0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x201ff720cb8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x201ff720d30 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x201ff720db0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x201ff721268 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff720fb8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x201ff721030 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff7210b0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x201ff721128 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff7214c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x201ff721568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff721820 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x201ff7216b0 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x201ff72ac10 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x201ff7218f8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x201ff721970 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x201ff72ae90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x201ff72adb0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x201ff72af38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff72b1f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x201ff72b080 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x201ff72b0f8 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x201ff72b610 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x201ff72b6b0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x201ff72b718 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x201ff72b780 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x201ff72b800 <col:40> Implicit printf 2 0
|-FunctionDecl 0x201ff72b868 prev 0x201ff72b610 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x201ff72b2d0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x201ff72b350 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x201ff72b3c8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x201ff72b968 <col:40> Inherited printf 2 0
|-FunctionDecl 0x201ff725bc0 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x201ff725c60 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x201ff725cc8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x201ff725d30 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x201ff725db0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x201ff725e18 prev 0x201ff725bc0 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x201ff72b9b0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x201ff72ba30 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x201ff72baa8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x201ff725f18 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x201ff726178 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x201ff725f60 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x201ff725fe0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x201ff726058 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff726470 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x201ff726258 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x201ff7262d8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x201ff726350 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff7267b8 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x201ff726858 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x201ff7268c0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x201ff726938 <col:40> Implicit printf 1 0
|-FunctionDecl 0x201ff7269a0 prev 0x201ff7267b8 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x201ff726558 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x201ff7265d0 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x201ff726a98 <col:40> Inherited printf 1 0
|-FunctionDecl 0x201ff723cd8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x201ff723d78 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x201ff723de0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x201ff723e58 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x201ff723ec0 prev 0x201ff723cd8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x201ff726ae8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x201ff723ba0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x201ff723fb8 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x201ff724180 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x201ff724008 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x201ff724080 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff7243d8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x201ff724260 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x201ff7242d8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff724938 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x201ff7249d8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x201ff724a40 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x201ff724aa8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x201ff724b10 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x201ff726bd0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x201ff726c38 prev 0x201ff724938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x201ff724578 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x201ff7245f0 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff724670 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x201ff7246e8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x201ff726e28 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x201ff726cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff727298 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x201ff726e78 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x201ff726ef0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff726f68 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff726fe8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x201ff727060 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff7276d8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x201ff727390 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x201ff727408 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff727480 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff727500 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x201ff727578 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff727aa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x201ff727890 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x201ff727908 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff727988 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x201ff727b60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff728050 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x201ff727da0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x201ff727e18 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff727e98 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x201ff727f10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x201ff728110 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff728508 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x201ff728258 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x201ff7282d0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff728350 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x201ff7283c8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff7288c8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x201ff7285f8 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x201ff728678 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x201ff7286f0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff728c90 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x201ff728d30 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x201ff728d98 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x201ff728e10 <col:85> Implicit printf 2 3
|-FunctionDecl 0x201ff728e78 prev 0x201ff728c90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x201ff728a70 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x201ff728af0 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x201ff729058 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x201ff728f28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff729480 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x201ff729520 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x201ff729588 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x201ff7295f0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x201ff729670 <col:94> Implicit printf 2 0
|-FunctionDecl 0x201ff7296d8 prev 0x201ff729480 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x201ff729168 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x201ff7291e8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x201ff729260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x201ff7298c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x201ff729790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff729c00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x201ff729ca0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x201ff729d08 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x201ff729d70 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x201ff729df0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x201ff729e58 prev 0x201ff729c00 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x201ff729910 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x201ff729990 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x201ff729a08 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x201ff729f58 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x201ff72a120 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x201ff729fa8 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x201ff72a020 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff72a418 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x201ff72a200 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x201ff72a278 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x201ff72a2f8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x201ff72a7b0 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x201ff72a500 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x201ff72a578 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff72a5f8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x201ff72a670 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff72aa18 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x201ff72a898 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x201ff72a918 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x201ff72bc20 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x201ff72aaf8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x201ff72bf10 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x201ff72bcf8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x201ff72bd70 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x201ff72bdf0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x201ff72c208 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x201ff72bff0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x201ff72c070 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x201ff72c0e8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff72c468 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x201ff72c2f0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x201ff72c368 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff72c7f8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x201ff72c548 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x201ff72c5c0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff72c640 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x201ff72c6b8 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff72c9c8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x201ff72c8e8 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x201ff72dc40 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x201ff72caa0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x201ff72cb18 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff72de00 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x201ff72dd20 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x201ff72df90 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x201ff72e1d8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff72e060 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x201ff72e0d8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff72e430 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff72e2b8 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x201ff72e330 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff72e688 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff72e510 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x201ff72e588 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff72ea38 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff72e768 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x201ff72e7e0 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x201ff72e858 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff733dc0 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff72eb20 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x201ff72eb98 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x201ff733ca0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff7340b8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff733ea8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x201ff733f20 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x201ff733f98 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff7343b0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff734198 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x201ff734218 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x201ff734290 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff7346a8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff734490 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x201ff734510 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x201ff734588 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff7349a0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff734788 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x201ff734808 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x201ff734880 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff72edb0 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff734a80 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x201ff734b00 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x201ff734b78 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x201ff734bf0 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff72f148 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff72ee98 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x201ff72ef18 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x201ff72ef90 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x201ff72f008 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff72f4e0 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff72f230 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x201ff72f2b0 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x201ff72f328 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x201ff72f3a0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff72f978 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff72f690 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x201ff72f710 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x201ff72f788 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x201ff72fa30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff72ff70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff72fb78 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x201ff72fc60 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff72fce0 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x201ff72fd58 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff730310 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff730060 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x201ff7300d8 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff730158 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x201ff7301d0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff730860 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff730500 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x201ff730580 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x201ff7305f8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x201ff730670 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x201ff730920 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff732ec8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff730a68 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x201ff730ae0 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff730b60 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x201ff730bd8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x201ff732c90 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff733308 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff732fc0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x201ff733038 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff7330b8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x201ff733130 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x201ff7331a8 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff733578 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff733400 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x201ff733478 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff7337d0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff733658 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x201ff7336d0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff733ac0 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff7338b0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x201ff733928 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x201ff7339a0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff730da0 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff733ba8 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x201ff733c20 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x201ff730c80 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff7311f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff730f48 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x201ff730fc0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff731040 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x201ff7310b8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x201ff7312b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff7316b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff731400 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x201ff731478 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff7314f8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x201ff731570 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff72cc30 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff7317a0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x201ff731818 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff731890 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff731910 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x201ff731988 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff72d170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff72ce28 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x201ff72cea0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff72cf20 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x201ff72cf98 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x201ff72d010 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x201ff72d238 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff72d6b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff72d388 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x201ff72d400 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff72d480 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x201ff72d4f8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x201ff72d570 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff738d50 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff72d7b0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x201ff72d828 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff72d8a0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff72d920 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x201ff72d998 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x201ff72da10 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff739110 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x201ff738e48 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x201ff738ec0 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x201ff738f40 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x201ff739380 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x201ff739210 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x201ff739598 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x201ff739878 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x201ff739660 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x201ff7396d8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x201ff739ac0 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x201ff739950 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x201ff734cb0 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x201ff739b90 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x201ff734e38 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x201ff735070 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x201ff734f00 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x201ff734f78 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x201ff735220 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x201ff735148 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x201ff7354c8 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x201ff7352f0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x201ff735368 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x201ff735870 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x201ff7355a0 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x201ff735620 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x201ff735698 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x201ff735b70 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x201ff735950 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x201ff7359c8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x201ff735e78 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x201ff735c48 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x201ff735cd0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x201ff736180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x201ff736010 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x201ff736228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff7364e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x201ff736368 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x201ff7367f0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x201ff7365b8 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x201ff736630 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x201ff736a40 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x201ff7368c8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x201ff736940 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x201ff731c80 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x201ff736b18 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x201ff731e30 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x201ff731d50 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x201ff731fe0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x201ff731f00 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x201ff732378 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x201ff7320b0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x201ff732128 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff7321a0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff732668 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x201ff732458 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x201ff7324d0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff732548 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff732958 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x201ff732748 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x201ff7327c0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff732838 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff737ce0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x201ff732a38 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x201ff732ab0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff732b28 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff737fe0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x201ff737dc0 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff737e38 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff738230 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x201ff7380b8 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff738130 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff738480 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x201ff738308 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff738380 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff7386d0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x201ff738558 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff7385d0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff738a88 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x201ff7387a8 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x201ff738820 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x201ff738898 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x201ff739f10 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x201ff738b68 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x201ff738be0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff738c58 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff739d00 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff73a2c8 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x201ff739ff8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x201ff73a070 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff73a0e8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff73a5b8 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x201ff73a3a8 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x201ff73a420 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff73a498 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff73a8a8 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x201ff73a698 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x201ff73a710 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x201ff73a788 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x201ff73ac30 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x201ff73a988 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x201ff73aa00 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff73aa78 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff73aaf0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff73b0c0 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x201ff73ad38 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x201ff73adb0 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff73ae28 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x201ff73aea0 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x201ff73b5c8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x201ff73b1a8 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x201ff73b220 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff73b298 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff73b310 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff73b388 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff73b988 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x201ff73b778 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x201ff73b7f0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff73b868 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x201ff73ba40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff73bf50 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x201ff73bc40 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x201ff73bd20 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff73bd98 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x201ff73be10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x201ff73c010 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff73c2c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x201ff73c150 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x201ff73c1c8 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x201ff73c480 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x201ff73c3a0 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x201ff73c760 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x201ff73c550 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x201ff73c5c8 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff73c640 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff73c9b8 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x201ff73c840 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff73c8b8 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff73fb80 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x201ff73ca90 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x201ff73cb08 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x201ff73cb80 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x201ff73ff08 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x201ff73fc60 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x201ff73fcd8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff73fd50 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff73fdc8 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff7400d0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x201ff73fff0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x201ff740318 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x201ff7401a0 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff740218 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff740620 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff7403f0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff740468 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff740870 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff7406f8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff740770 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff740ac0 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff740948 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff7409c0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff741e98 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff741bc8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x201ff741c40 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x201ff741cb8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff742188 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff741f78 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x201ff741ff0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x201ff742068 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff742478 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff742268 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x201ff7422e0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x201ff742358 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff742838 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff742558 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x201ff7425d0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff742648 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff745be0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff742918 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x201ff742990 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff742a08 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff745ed0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff745cc0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x201ff745d38 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff745db0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff746320 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff745fb0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x201ff746028 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x201ff7460a0 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x201ff746118 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff7466b0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff746408 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x201ff746480 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x201ff7464f8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x201ff746570 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff746a40 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff746798 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x201ff746810 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x201ff746888 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x201ff746900 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff740ea0 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff746b28 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x201ff740b90 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff740c08 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff740c80 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff741230 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff740f88 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x201ff741000 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff741078 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff7410f0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff7415c0 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff741318 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x201ff741390 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff741408 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff741480 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff741ac8 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff7416a8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x201ff741720 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff741798 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x201ff741810 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x201ff741888 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff742f18 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff742bd8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x201ff742c50 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff742cc8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x201ff742d40 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x201ff742db8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff743348 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff743008 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x201ff743080 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff7430f8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x201ff743170 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x201ff7431e8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff7435b0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff743438 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff7434b0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff743800 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff743688 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff743700 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff743ae8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff7438d8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x201ff743950 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x201ff7439c8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff73ef08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff73ec60 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x201ff73ecd8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff73ed50 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x201ff73edc8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x201ff73efc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff73f538 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff73f110 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x201ff73f188 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff73f200 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff73f278 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff73f2f0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff73fa70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff73f730 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x201ff73f7a8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff73f820 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x201ff73f898 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x201ff73f910 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x201ff74ac30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff74b240 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff74ad78 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x201ff74adf0 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff74ae68 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff74aee0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x201ff74af58 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x201ff74afd0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff74b740 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x201ff74b508 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x201ff74b580 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x201ff74b7f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x201ff74b908 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x201ff747e68 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x201ff74bbc0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x201ff747c10 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x201ff747c88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x201ff747f20 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x201ff748038 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x201ff7485d8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff7482f8 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x201ff748370 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x201ff7483e8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x201ff748690 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x201ff7487b0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x201ff746e00 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff748a70 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x201ff748ae8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x201ff748b60 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x201ff746bf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x201ff746ec0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x201ff746fe0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x201ff7472e8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x201ff747108 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x201ff747180 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff7471f8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x201ff749ec0 <line:37:1, line:44:1>
|   |-DeclStmt 0x201ff747430 <line:38:5, col:21>
|   | `-VarDecl 0x201ff7473c8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x201ff7474c8 <line:39:5, col:13>
|   | `-VarDecl 0x201ff747460 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x201ff747820 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x201ff747808 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x201ff747720 <col:34> '<builtin fn type>' Function 0x201ff7475b8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x201ff747758 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x201ff7473c8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x201ff747790 <col:29> 'const wchar_t *' lvalue ParmVar 0x201ff7471f8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x201ff747ae0 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x201ff747850 <col:5> 'int' lvalue Var 0x201ff747460 '_Ret' 'int'
|   | `-CallExpr 0x201ff747a20 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x201ff747a08 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x201ff747888 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x201ff741ac8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x201ff747a68 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x201ff7478a8 <col:27> 'wchar_t *' lvalue ParmVar 0x201ff747108 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x201ff747a80 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x201ff7478c8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x201ff747180 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x201ff747a98 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x201ff7478e8 <col:44> 'const wchar_t *' lvalue ParmVar 0x201ff7471f8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x201ff747ab0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x201ff747970 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x201ff747948 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x201ff747908 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x201ff747ac8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x201ff747990 <col:59> 'va_list':'char *' lvalue Var 0x201ff7473c8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x201ff749e50 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x201ff749e38 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x201ff749d88 <col:34> '<builtin fn type>' Function 0x201ff749c20 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x201ff749dc0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x201ff7473c8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x201ff749eb0 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x201ff749e98 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x201ff749e78 <col:12> 'int' lvalue Var 0x201ff747460 '_Ret' 'int'
|-FunctionDecl 0x201ff7475b8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x201ff747658 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x201ff7476c8 <col:34> Implicit
|-FunctionDecl 0x201ff749c20 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x201ff749cc0 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x201ff749d30 <col:34> Implicit
|-FunctionDecl 0x201ff74a1b8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x201ff749f10 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x201ff749f88 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff74a000 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x201ff74a078 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x201ff74a4a0 <line:50:1, line:52:1>
|   `-ReturnStmt 0x201ff74a490 <line:51:5, col:62>
|     `-CallExpr 0x201ff74a3d0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x201ff74a3b8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x201ff74a290 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x201ff741ac8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x201ff74a418 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x201ff74a2b0 <col:27> 'wchar_t *' lvalue ParmVar 0x201ff749f10 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x201ff74a430 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x201ff74a2d0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x201ff749f88 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x201ff74a448 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x201ff74a2f0 <col:44> 'const wchar_t *' lvalue ParmVar 0x201ff74a000 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x201ff74a460 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x201ff74a378 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x201ff74a350 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x201ff74a310 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x201ff74a478 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x201ff74a398 <col:59> 'va_list':'char *' lvalue ParmVar 0x201ff74a078 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x201ff74a740 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x201ff74a4c8 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x201ff74a540 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff74a5b8 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x201ff74a630 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x201ff743c68 <line:61:1, line:68:1>
|   |-DeclStmt 0x201ff74a890 <line:62:5, col:21>
|   | `-VarDecl 0x201ff74a828 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x201ff74a928 <line:63:5, col:13>
|   | `-VarDecl 0x201ff74a8c0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x201ff74a9d0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x201ff74a9b8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x201ff74a940 <col:34> '<builtin fn type>' Function 0x201ff7475b8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x201ff74a960 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x201ff74a828 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x201ff74a998 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x201ff74a630 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x201ff74abd0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x201ff74aa00 <col:5> 'int' lvalue Var 0x201ff74a8c0 '_Ret' 'int'
|   | `-CallExpr 0x201ff74ab10 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x201ff74aaf8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x201ff74aa38 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x201ff741ac8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x201ff74ab58 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x201ff74aa58 <col:27> 'wchar_t *' lvalue ParmVar 0x201ff74a4c8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x201ff74ab70 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x201ff74aa78 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x201ff74a540 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x201ff74ab88 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x201ff74aa98 <col:44> 'const wchar_t *' lvalue ParmVar 0x201ff74a5b8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x201ff74aba0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x201ff74aab8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x201ff74a630 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x201ff74abb8 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x201ff74aad8 <col:64> 'va_list':'char *' lvalue Var 0x201ff74a828 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x201ff743bf8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x201ff743be0 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x201ff74abf0 <col:34> '<builtin fn type>' Function 0x201ff749c20 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x201ff743bc0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x201ff74a828 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x201ff743c58 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x201ff743c40 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x201ff743c20 <col:12> 'int' lvalue Var 0x201ff74a8c0 '_Ret' 'int'
|-FunctionDecl 0x201ff743ff8 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x201ff743cb8 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x201ff743d30 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff743da8 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x201ff743e20 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x201ff743e98 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x201ff744280 <line:74:1, line:76:1>
|   `-ReturnStmt 0x201ff744270 <line:75:5, col:67>
|     `-CallExpr 0x201ff7441b0 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x201ff744198 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x201ff7440d8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x201ff741ac8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x201ff7441f8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x201ff7440f8 <col:27> 'wchar_t *' lvalue ParmVar 0x201ff743cb8 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x201ff744210 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x201ff744118 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x201ff743d30 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x201ff744228 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x201ff744138 <col:44> 'const wchar_t *' lvalue ParmVar 0x201ff743da8 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x201ff744240 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x201ff744158 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x201ff743e20 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x201ff744258 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x201ff744178 <col:64> 'va_list':'char *' lvalue ParmVar 0x201ff743e98 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x201ff7444c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x201ff7442a8 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x201ff744320 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x201ff744718 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x201ff7445a0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff744618 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff744a00 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x201ff7447f0 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x201ff744868 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x201ff7448e0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x201ff74ddd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x201ff74dc60 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x201ff74dcd8 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x201ff74de88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff74e298 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff74e088 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x201ff74e100 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x201ff74e178 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x201ff74e350 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff74e608 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x201ff74e490 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x201ff74e508 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x201ff74e8f0 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff74e6e0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x201ff74e758 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff74e7d0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff752d20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x201ff74ea90 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x201ff74eb08 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x201ff752dd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff7532a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff752fd0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x201ff753048 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x201ff7530c0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x201ff753360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff753618 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x201ff7534a0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x201ff753518 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x201ff753900 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff7536f0 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x201ff753768 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff7537e0 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff751d88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x201ff753aa0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x201ff753b18 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff753b90 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x201ff751e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff7523c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff752040 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x201ff7520b8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff752130 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x201ff7521a8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x201ff752480 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff7527d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x201ff7525c0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x201ff752638 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x201ff7526b0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x201ff752b58 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff7528b0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x201ff752928 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff7529a0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff752a18 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff74bdf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x201ff74bd10 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x201ff74be98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff74c210 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff74c098 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x201ff74c110 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x201ff74c2c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff74c4e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x201ff74c400 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x201ff74c728 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x201ff74c5b0 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x201ff74c628 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff74ca28 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x201ff74c808 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x201ff74c880 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x201ff74ee18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x201ff74cbc0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x201ff74ec70 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x201ff74eec8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff74f2d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x201ff74f010 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x201ff74f088 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x201ff74f100 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x201ff74f730 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x201ff74f470 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x201ff74f4e8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x201ff74f560 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x201ff74f7e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff74cc98 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x201ff74f930 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x201ff74f9a8 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x201ff74fa20 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x201ff74fa98 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x201ff74cef0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x201ff74cd80 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x201ff74d130 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x201ff74cfc0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x201ff74d038 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x201ff74d2e8 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x201ff74d208 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x201ff74d5d8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x201ff74d3b8 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x201ff74d430 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x201ff74d848 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x201ff74d770 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x201ff74d8f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x201ff74db08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x201ff74da30 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x201ff755dd8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x201ff74dbd8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x201ff755ce0 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x201ff756020 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x201ff755eb0 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x201ff755f28 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x201ff7561d0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x201ff7560f8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x201ff756378 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x201ff7562a0 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x201ff756528 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x201ff756448 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x201ff7566d8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x201ff7565f8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x201ff756a50 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x201ff7567b0 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x201ff756828 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff7568a0 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x201ff756918 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x201ff754ea0 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x201ff756b40 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x201ff756bb8 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff756c30 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff754cd0 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x201ff754d48 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x201ff7551b0 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x201ff754f90 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x201ff755010 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x201ff755090 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x201ff755370 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x201ff755290 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x201ff755660 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x201ff755440 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x201ff7554c0 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x201ff755540 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x201ff755820 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x201ff755740 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x201ff755b98 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x201ff7558f8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x201ff755970 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x201ff7559e8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x201ff755a60 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x201ff756e68 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x201ff756cf0 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x201ff756d68 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x201ff7571a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x201ff757020 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x201ff7570a0 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x201ff757250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x201ff757508 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x201ff7575a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x201ff7578e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x201ff757770 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x201ff7577f0 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x201ff757998 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x201ff757d00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x201ff757da0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x201ff758040 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x201ff757f60 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x201ff7580e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x201ff758368 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x201ff758408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x201ff7586b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x201ff7585d0 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x201ff758758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x201ff758a38 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x201ff758958 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x201ff758ae0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x201ff750e08 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x201ff750c90 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x201ff750d08 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x201ff750eb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x201ff751178 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x201ff751218 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x201ff751450 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:49:9, col:58> col:40 __pctype_func 'const unsigned short *(void) __attribute__((cdecl))':'const unsigned short *(void)'
|-VarDecl 0x201ff751520 <line:51:9, col:38> col:38 _pctype 'const unsigned short *' extern
|-VarDecl 0x201ff751620 <line:62:9, col:45> col:37 _wctype 'const unsigned short []' extern
|-FunctionDecl 0x201ff751818 <line:73:9, col:53> col:34 __pwctype_func 'const wctype_t *(void) __attribute__((cdecl))':'const wctype_t *(void)'
|-VarDecl 0x201ff7518e0 <line:75:9, col:32> col:32 _pwctype 'const wctype_t *' extern
|-FunctionDecl 0x201ff751b60 <line:119:24, col:72> col:36 _isctype 'int (int, int) __attribute__((cdecl))':'int (int, int)'
| |-ParmVarDecl 0x201ff751978 <col:50, col:54> col:54 _C 'int'
| `-ParmVarDecl 0x201ff7519f8 <col:63, col:67> col:67 _Type 'int'
|-FunctionDecl 0x201ff759ff8 <line:120:24, col:102> col:36 _isctype_l 'int (int, int, _locale_t) __attribute__((cdecl))':'int (int, int, _locale_t)'
| |-ParmVarDecl 0x201ff759d20 <col:52, col:56> col:56 _C 'int'
| |-ParmVarDecl 0x201ff759da0 <col:65, col:69> col:69 _Type 'int'
| `-ParmVarDecl 0x201ff759e18 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff75a1c0 <line:121:55> col:55 implicit isalpha 'int (int)' extern
| |-ParmVarDecl 0x201ff75a260 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x201ff75a2d0 <col:55> Implicit
| `-PureAttr 0x201ff75a328 <col:55> Implicit
|-FunctionDecl 0x201ff75a350 prev 0x201ff75a1c0 <col:43, col:74> col:55 isalpha 'int (int)'
| |-ParmVarDecl 0x201ff75a0e0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x201ff75a440 <col:55> Inherited Implicit
| `-PureAttr 0x201ff75a468 <col:55> Inherited Implicit
|-FunctionDecl 0x201ff75a6d0 <line:122:24, col:86> col:36 _isalpha_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x201ff75a4a8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x201ff75a520 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff75a890 <line:123:55> col:55 implicit isupper 'int (int)' extern
| |-ParmVarDecl 0x201ff75a930 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x201ff75a9a0 <col:55> Implicit
| `-PureAttr 0x201ff75a9f8 <col:55> Implicit
|-FunctionDecl 0x201ff75aa20 prev 0x201ff75a890 <col:43, col:74> col:55 isupper 'int (int)'
| |-ParmVarDecl 0x201ff75a7b0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x201ff75ab10 <col:55> Inherited Implicit
| `-PureAttr 0x201ff75ab38 <col:55> Inherited Implicit
|-FunctionDecl 0x201ff75bd40 <line:124:24, col:86> col:36 _isupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x201ff75ab78 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x201ff75abf0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff75bf00 <line:125:55> col:55 implicit islower 'int (int)' extern
| |-ParmVarDecl 0x201ff75bfa0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x201ff75c010 <col:55> Implicit
| `-PureAttr 0x201ff75c068 <col:55> Implicit
|-FunctionDecl 0x201ff75c090 prev 0x201ff75bf00 <col:43, col:74> col:55 islower 'int (int)'
| |-ParmVarDecl 0x201ff75be20 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x201ff75c180 <col:55> Inherited Implicit
| `-PureAttr 0x201ff75c1a8 <col:55> Inherited Implicit
|-FunctionDecl 0x201ff75c360 <line:126:24, col:86> col:36 _islower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x201ff75c1e8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x201ff75c260 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff75c520 <line:127:55> col:55 implicit used isdigit 'int (int)' extern
| |-ParmVarDecl 0x201ff75c5c0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x201ff75c630 <col:55> Implicit
| `-PureAttr 0x201ff75c688 <col:55> Implicit
|-FunctionDecl 0x201ff75c6b0 prev 0x201ff75c520 <col:43, col:74> col:55 used isdigit 'int (int)'
| |-ParmVarDecl 0x201ff75c440 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x201ff75c7a0 <col:55> Inherited Implicit
| `-PureAttr 0x201ff75c7c8 <col:55> Inherited Implicit
|-FunctionDecl 0x201ff75c980 <line:128:24, col:86> col:36 _isdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x201ff75c808 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x201ff75c880 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff75cb40 <line:129:36> col:36 implicit isxdigit 'int (int)' extern
| |-ParmVarDecl 0x201ff75cbe0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x201ff75cc50 <col:36> Implicit
| `-PureAttr 0x201ff75cca8 <col:36> Implicit
|-FunctionDecl 0x201ff75cd50 prev 0x201ff75cb40 <col:24, col:56> col:36 isxdigit 'int (int)'
| |-ParmVarDecl 0x201ff75ca60 <col:50, col:54> col:54 _C 'int'
| |-NoThrowAttr 0x201ff75ce40 <col:36> Inherited Implicit
| `-PureAttr 0x201ff75ce68 <col:36> Inherited Implicit
|-FunctionDecl 0x201ff75d020 <line:130:24, col:87> col:36 _isxdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x201ff75cea8 <col:53, col:57> col:57 _C 'int'
| `-ParmVarDecl 0x201ff75cf20 <col:70, col:80> col:80 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff75d1e0 <line:131:55> col:55 implicit isspace 'int (int)' extern
| |-ParmVarDecl 0x201ff75d280 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x201ff75d2f0 <col:55> Implicit
| `-PureAttr 0x201ff75d348 <col:55> Implicit
|-FunctionDecl 0x201ff75d370 prev 0x201ff75d1e0 <col:43, col:74> col:55 isspace 'int (int)'
| |-ParmVarDecl 0x201ff75d100 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x201ff75d460 <col:55> Inherited Implicit
| `-PureAttr 0x201ff75d488 <col:55> Inherited Implicit
|-FunctionDecl 0x201ff75d640 <line:132:24, col:86> col:36 _isspace_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x201ff75d4c8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x201ff75d540 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff75d800 <line:133:36> col:36 implicit ispunct 'int (int)' extern
| |-ParmVarDecl 0x201ff75d8a0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x201ff75d910 <col:36> Implicit
| `-PureAttr 0x201ff75d968 <col:36> Implicit
|-FunctionDecl 0x201ff75d990 prev 0x201ff75d800 <col:24, col:55> col:36 ispunct 'int (int)'
| |-ParmVarDecl 0x201ff75d720 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x201ff75da80 <col:36> Inherited Implicit
| `-PureAttr 0x201ff75daa8 <col:36> Inherited Implicit
|-FunctionDecl 0x201ff75dc60 <line:134:24, col:86> col:36 _ispunct_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x201ff75dae8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x201ff75db60 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff76e170 <line:135:36> col:36 implicit isblank 'int (int)' extern
| |-ParmVarDecl 0x201ff76e210 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x201ff76e280 <col:36> Implicit
| `-PureAttr 0x201ff76e2d8 <col:36> Implicit
|-FunctionDecl 0x201ff76e300 prev 0x201ff76e170 <col:24, col:55> col:36 isblank 'int (int)'
| |-ParmVarDecl 0x201ff76e090 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x201ff76e3f0 <col:36> Inherited Implicit
| `-PureAttr 0x201ff76e418 <col:36> Inherited Implicit
|-FunctionDecl 0x201ff76e5d0 <line:136:24, col:86> col:36 _isblank_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x201ff76e458 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x201ff76e4d0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff76e790 <line:137:55> col:55 implicit isalnum 'int (int)' extern
| |-ParmVarDecl 0x201ff76e830 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x201ff76e8a0 <col:55> Implicit
| `-PureAttr 0x201ff76e8f8 <col:55> Implicit
|-FunctionDecl 0x201ff76e920 prev 0x201ff76e790 <col:43, col:74> col:55 isalnum 'int (int)'
| |-ParmVarDecl 0x201ff76e6b0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x201ff76ea10 <col:55> Inherited Implicit
| `-PureAttr 0x201ff76ea38 <col:55> Inherited Implicit
|-FunctionDecl 0x201ff76ebf0 <line:138:24, col:86> col:36 _isalnum_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x201ff76ea78 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x201ff76eaf0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff76edb0 <line:139:36> col:36 implicit isprint 'int (int)' extern
| |-ParmVarDecl 0x201ff76ee50 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x201ff76eec0 <col:36> Implicit
| `-PureAttr 0x201ff76ef18 <col:36> Implicit
|-FunctionDecl 0x201ff76ef40 prev 0x201ff76edb0 <col:24, col:55> col:36 isprint 'int (int)'
| |-ParmVarDecl 0x201ff76ecd0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x201ff76f030 <col:36> Inherited Implicit
| `-PureAttr 0x201ff76f058 <col:36> Inherited Implicit
|-FunctionDecl 0x201ff7671b0 <line:140:24, col:86> col:36 _isprint_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x201ff767038 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x201ff7670b0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff767370 <line:141:36> col:36 implicit isgraph 'int (int)' extern
| |-ParmVarDecl 0x201ff767410 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x201ff767480 <col:36> Implicit
| `-PureAttr 0x201ff7674d8 <col:36> Implicit
|-FunctionDecl 0x201ff767500 prev 0x201ff767370 <col:24, col:55> col:36 isgraph 'int (int)'
| |-ParmVarDecl 0x201ff767290 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x201ff7675f0 <col:36> Inherited Implicit
| `-PureAttr 0x201ff767618 <col:36> Inherited Implicit
|-FunctionDecl 0x201ff7677d0 <line:142:24, col:86> col:36 _isgraph_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x201ff767658 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x201ff7676d0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff767990 <line:143:36> col:36 implicit iscntrl 'int (int)' extern
| |-ParmVarDecl 0x201ff767a30 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x201ff767aa0 <col:36> Implicit
| `-PureAttr 0x201ff767af8 <col:36> Implicit
|-FunctionDecl 0x201ff767b20 prev 0x201ff767990 <col:24, col:55> col:36 iscntrl 'int (int)'
| |-ParmVarDecl 0x201ff7678b0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x201ff767c10 <col:36> Inherited Implicit
| `-PureAttr 0x201ff767c38 <col:36> Inherited Implicit
|-FunctionDecl 0x201ff767df0 <line:144:24, col:86> col:36 _iscntrl_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x201ff767c78 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x201ff767cf0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff76c070 <line:145:55> col:55 implicit toupper 'int (int)' extern
| |-ParmVarDecl 0x201ff76c110 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x201ff76c180 <col:55> Implicit
| `-PureAttr 0x201ff76c1d8 <col:55> Implicit
|-FunctionDecl 0x201ff76c200 prev 0x201ff76c070 <col:43, col:74> col:55 toupper 'int (int)'
| |-ParmVarDecl 0x201ff767ed0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x201ff76c2f0 <col:55> Inherited Implicit
| `-PureAttr 0x201ff76c318 <col:55> Inherited Implicit
|-FunctionDecl 0x201ff76c438 <line:146:55> col:55 implicit tolower 'int (int)' extern
| |-ParmVarDecl 0x201ff76c4d8 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x201ff76c548 <col:55> Implicit
| `-PureAttr 0x201ff76c5a0 <col:55> Implicit
|-FunctionDecl 0x201ff76c5c8 prev 0x201ff76c438 <col:43, col:74> col:55 tolower 'int (int)'
| |-ParmVarDecl 0x201ff76c358 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x201ff76c6b8 <col:55> Inherited Implicit
| `-PureAttr 0x201ff76c6e0 <col:55> Inherited Implicit
|-FunctionDecl 0x201ff76c800 <line:147:43, col:75> col:55 _tolower 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x201ff76c720 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x201ff76ca50 <line:148:24, col:86> col:36 _tolower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x201ff76c8d8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x201ff76c950 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff76cc10 <line:149:43, col:75> col:55 _toupper 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x201ff76cb30 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x201ff76ce60 <line:150:24, col:86> col:36 _toupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x201ff76cce8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x201ff76cd60 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff76f0a0 <line:151:24, col:57> col:36 __isascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x201ff76cf40 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x201ff76f258 <line:152:24, col:57> col:36 __toascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x201ff76f178 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x201ff76f410 <line:153:24, col:57> col:36 __iscsymf 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x201ff76f330 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x201ff76f5c8 <line:154:24, col:56> col:36 __iscsym 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x201ff76f4e8 <col:50, col:54> col:54 _C 'int'
|-FunctionDecl 0x201ff76f818 <line:164:24, col:59> col:36 iswalpha 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x201ff76f698 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x201ff76fb10 <line:165:24, col:90> col:36 _iswalpha_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x201ff76f8e8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x201ff76f960 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff76fcc8 <line:166:24, col:59> col:36 iswupper 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x201ff76fbe8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x201ff76ff10 <line:167:24, col:90> col:36 _iswupper_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x201ff76fd98 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x201ff76fe10 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff76a088 <line:168:24, col:59> col:36 iswlower 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x201ff76ffe8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x201ff76a2d0 <line:169:24, col:90> col:36 _iswlower_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x201ff76a158 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x201ff76a1d0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff76a488 <line:170:24, col:59> col:36 iswdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x201ff76a3a8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x201ff76a6d0 <line:171:24, col:90> col:36 _iswdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x201ff76a558 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x201ff76a5d0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff76a888 <line:172:24, col:60> col:36 iswxdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x201ff76a7a8 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x201ff76aad0 <line:173:24, col:91> col:36 _iswxdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x201ff76a958 <col:54, col:61> col:61 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x201ff76a9d0 <col:74, col:84> col:84 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff76ac88 <line:174:24, col:59> col:36 iswspace 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x201ff76aba8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x201ff76aed0 <line:175:24, col:90> col:36 _iswspace_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x201ff76ad58 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x201ff76add0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff768068 <line:176:24, col:59> col:36 iswpunct 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x201ff76afa8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x201ff7682b0 <line:177:24, col:90> col:36 _iswpunct_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x201ff768138 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x201ff7681b0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff768468 <line:178:24, col:59> col:36 iswblank 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x201ff768388 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x201ff7686b0 <line:179:24, col:90> col:36 _iswblank_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x201ff768538 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x201ff7685b0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff768868 <line:180:24, col:59> col:36 iswalnum 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x201ff768788 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x201ff768ab0 <line:181:24, col:90> col:36 _iswalnum_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x201ff768938 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x201ff7689b0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff768c68 <line:182:24, col:59> col:36 iswprint 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x201ff768b88 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x201ff768eb0 <line:183:24, col:90> col:36 _iswprint_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x201ff768d38 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x201ff768db0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff7700e8 <line:184:24, col:59> col:36 iswgraph 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x201ff768f88 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x201ff770330 <line:185:24, col:90> col:36 _iswgraph_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x201ff7701b8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x201ff770230 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff7704e8 <line:186:24, col:59> col:36 iswcntrl 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x201ff770408 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x201ff770730 <line:187:24, col:90> col:36 _iswcntrl_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x201ff7705b8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x201ff770630 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff7708e8 <line:188:24, col:59> col:36 iswascii 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x201ff770808 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x201ff770b00 <line:190:24, col:62> col:39 towupper 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x201ff7709b8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x201ff770de8 <line:191:24, col:93> col:39 _towupper_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x201ff770bd0 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x201ff770c48 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff770f98 <line:192:24, col:62> col:39 towlower 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x201ff770ec0 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x201ff7691b0 <line:193:24, col:93> col:39 _towlower_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x201ff769040 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x201ff7690b8 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff7694b0 <line:194:24, col:80> col:36 iswctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x201ff769288 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x201ff769300 <col:66, col:75> col:75 _Type 'wctype_t':'unsigned short'
|-FunctionDecl 0x201ff769858 <line:195:24, col:111> col:36 _iswctype_l 'int (wint_t, wctype_t, _locale_t) __attribute__((cdecl))':'int (wint_t, wctype_t, _locale_t)'
| |-ParmVarDecl 0x201ff769588 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x201ff769600 <col:69, col:78> col:78 _Type 'wctype_t':'unsigned short'
| `-ParmVarDecl 0x201ff769678 <col:94, col:104> col:104 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff769a18 <line:197:24, col:61> col:36 __iswcsymf 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x201ff769938 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x201ff769c60 <line:198:24, col:90> col:36 _iswcsymf_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x201ff769ae8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x201ff769b60 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff769e18 <line:199:24, col:60> col:36 __iswcsym 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x201ff769d38 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x201ff76b0a0 <line:200:24, col:89> col:36 _iswcsym_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x201ff769ee8 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x201ff769f60 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff76b260 <line:203:24, col:58> col:36 isleadbyte 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x201ff76b180 <col:52, col:56> col:56 _C 'int'
|-FunctionDecl 0x201ff76b4b0 <line:204:24, col:89> col:36 _isleadbyte_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x201ff76b338 <col:55, col:59> col:59 _C 'int'
| `-ParmVarDecl 0x201ff76b3b0 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff76b7c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:205:90> col:45 is_wctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x201ff76b648 <col:60, col:67> col:67 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x201ff76b6c0 <col:76, col:85> col:85 _Type 'wctype_t':'unsigned short'
| `-DeprecatedAttr 0x201ff76b870 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using iswctype instead. See online help for details." ""
|-VarDecl 0x201ff76b9b8 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:235:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x201ff76bb08 <line:239:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x201ff76bd38 <line:240:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x201ff76bbd0 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x201ff7724d0 <.//openssl//file_jk/before\crypto\asn1\a_mbstr.c:15:1, line:17:37> line:15:12 used traverse_string 'int (const unsigned char *, int, int, int (*)(unsigned long, void *), void *)' static
| |-ParmVarDecl 0x201ff76be10 <col:28, col:49> col:49 p 'const unsigned char *'
| |-ParmVarDecl 0x201ff76be90 <col:52, col:56> col:56 len 'int'
| |-ParmVarDecl 0x201ff76bf10 <col:61, col:65> col:65 inform 'int'
| |-ParmVarDecl 0x201ff772280 <line:16:28, col:71> col:34 rfunc 'int (*)(unsigned long, void *)'
| `-ParmVarDecl 0x201ff772300 <line:17:28, col:34> col:34 arg 'void *'
|-FunctionDecl 0x201ff772718 <line:18:1, col:50> col:12 used in_utf8 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x201ff7725c8 <col:20, col:34> col:34 value 'unsigned long'
| `-ParmVarDecl 0x201ff772648 <col:41, col:47> col:47 arg 'void *'
|-FunctionDecl 0x201ff772948 <line:19:1, col:51> col:12 used out_utf8 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x201ff7727f8 <col:21, col:35> col:35 value 'unsigned long'
| `-ParmVarDecl 0x201ff772878 <col:42, col:48> col:48 arg 'void *'
|-FunctionDecl 0x201ff772b78 <line:20:1, col:51> col:12 used type_str 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x201ff772a28 <col:21, col:35> col:35 value 'unsigned long'
| `-ParmVarDecl 0x201ff772aa8 <col:42, col:48> col:48 arg 'void *'
|-FunctionDecl 0x201ff772da8 <line:21:1, col:50> col:12 used cpy_asc 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x201ff772c58 <col:20, col:34> col:34 value 'unsigned long'
| `-ParmVarDecl 0x201ff772cd8 <col:41, col:47> col:47 arg 'void *'
|-FunctionDecl 0x201ff772fd8 <line:22:1, col:50> col:12 used cpy_bmp 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x201ff772e88 <col:20, col:34> col:34 value 'unsigned long'
| `-ParmVarDecl 0x201ff772f08 <col:41, col:47> col:47 arg 'void *'
|-FunctionDecl 0x201ff77a2a0 <line:23:1, col:51> col:12 used cpy_univ 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x201ff77a150 <col:21, col:35> col:35 value 'unsigned long'
| `-ParmVarDecl 0x201ff77a1d0 <col:42, col:48> col:48 arg 'void *'
|-FunctionDecl 0x201ff77a4d0 <line:24:1, col:51> col:12 used cpy_utf8 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x201ff77a380 <col:21, col:35> col:35 value 'unsigned long'
| `-ParmVarDecl 0x201ff77a400 <col:42, col:48> col:48 arg 'void *'
|-FunctionDecl 0x201ff77a690 <line:25:1, col:42> col:12 used is_numeric 'int (unsigned long)' static
| `-ParmVarDecl 0x201ff77a5b0 <col:23, col:37> col:37 value 'unsigned long'
|-FunctionDecl 0x201ff77a818 <line:26:1, col:44> col:12 used is_printable 'int (unsigned long)' static
| `-ParmVarDecl 0x201ff77a768 <col:25, col:39> col:39 value 'unsigned long'
|-FunctionDecl 0x201ff77ac30 <line:37:1, line:41:1> line:37:5 invalid ASN1_mbstring_copy 'int (int **, const unsigned char *, int, int, unsigned long)'
| |-ParmVarDecl 0x201ff77a928 <col:24, col:38> col:38 invalid out 'int **'
| |-ParmVarDecl 0x201ff77a9a8 <col:43, col:64> col:64 used in 'const unsigned char *'
| |-ParmVarDecl 0x201ff77aa28 <col:68, col:72> col:72 used len 'int'
| |-ParmVarDecl 0x201ff77aaa8 <line:38:24, col:28> col:28 used inform 'int'
| |-ParmVarDecl 0x201ff77ab28 <col:36, col:50> col:50 used mask 'unsigned long'
| `-CompoundStmt 0x201ff77af78 <line:39:1, line:41:1>
|-FunctionDecl 0x201ff7783e0 <line:43:1, line:202:1> line:43:5 invalid ASN1_mbstring_ncopy 'int (int **, const unsigned char *, int, int, unsigned long, long, long)'
| |-ParmVarDecl 0x201ff77afa8 <col:25, col:39> col:39 invalid out 'int **'
| |-ParmVarDecl 0x201ff77b028 <col:44, col:65> col:65 used in 'const unsigned char *'
| |-ParmVarDecl 0x201ff77b0a8 <col:69, col:73> col:73 used len 'int'
| |-ParmVarDecl 0x201ff778130 <line:44:25, col:29> col:29 used inform 'int'
| |-ParmVarDecl 0x201ff7781b0 <col:37, col:51> col:51 used mask 'unsigned long'
| |-ParmVarDecl 0x201ff778230 <line:45:25, col:30> col:30 used minsize 'long'
| |-ParmVarDecl 0x201ff7782b0 <col:39, col:44> col:44 used maxsize 'long'
| `-CompoundStmt 0x201ff775720 <line:46:1, line:202:1>
|   |-DeclStmt 0x201ff778550 <line:47:5, col:17>
|   | `-VarDecl 0x201ff7784e8 <col:5, col:9> col:9 used str_type 'int'
|   |-DeclStmt 0x201ff7785e8 <line:48:5, col:12>
|   | `-VarDecl 0x201ff778580 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x201ff778678 <line:49:5, col:18>
|   | `-VarDecl 0x201ff778610 <col:5, col:10> col:10 used free_out 'char'
|   |-DeclStmt 0x201ff7787d0 <line:50:5, col:28>
|   | |-VarDecl 0x201ff7786a8 <col:5, col:9> col:9 used outform 'int'
|   | `-VarDecl 0x201ff778728 <col:5, col:27> col:18 used outlen 'int' cinit
|   |   `-IntegerLiteral 0x201ff778790 <col:27> 'int' 0
|   |-DeclStmt 0x201ff778898 <line:52:5, col:21>
|   | `-VarDecl 0x201ff778830 <col:5, col:20> col:20 used p 'unsigned char *'
|   |-DeclStmt 0x201ff778930 <line:53:5, col:14>
|   | `-VarDecl 0x201ff7788c8 <col:5, col:9> col:9 used nchar 'int'
|   |-DeclStmt 0x201ff778a50 <line:54:5, col:20>
|   | `-VarDecl 0x201ff7789e8 <col:5, col:19> col:10 used strbuf 'char [32]'
|   |-DeclStmt 0x201ff778cb8 <line:55:5, col:50>
|   | `-VarDecl 0x201ff778bb0 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\asn1\a_mbstr.c:55:11 used cpyfunc 'int (*)(unsigned long, void *)' cinit
|   |   `-ImplicitCastExpr 0x201ff778ca0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'int (*)(unsigned long, void *)' <NullToPointer>
|   |     `-ParenExpr 0x201ff778c80 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x201ff778c58 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x201ff778c18 <col:26> 'int' 0
|   |-IfStmt 0x201ff779050 <.//openssl//file_jk/before\crypto\asn1\a_mbstr.c:56:5, line:57:38>
|   | |-BinaryOperator 0x201ff778d60 <line:56:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x201ff778d48 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x201ff778cd0 <col:9> 'int' lvalue ParmVar 0x201ff77b0a8 'len' 'int'
|   | | `-UnaryOperator 0x201ff778d30 <col:16, col:17> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x201ff778d08 <col:17> 'int' 1
|   | `-BinaryOperator 0x201ff779030 <line:57:9, col:38> 'int' '='
|   |   |-DeclRefExpr 0x201ff778d80 <col:9> 'int' lvalue ParmVar 0x201ff77b0a8 'len' 'int'
|   |   `-ImplicitCastExpr 0x201ff779018 <col:15, col:38> 'int' <IntegralCast>
|   |     `-CallExpr 0x201ff778ff0 <col:15, col:38> 'unsigned long long'
|   |       |-ImplicitCastExpr 0x201ff778fd8 <col:15> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x201ff778ee0 <col:15> 'unsigned long long (const char *)' Function 0x201ff778dd0 'strlen' 'unsigned long long (const char *)'
|   |       `-CStyleCastExpr 0x201ff778f80 <col:22, col:36> 'const char *' <BitCast>
|   |         `-ImplicitCastExpr 0x201ff778f68 <col:36> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |           `-DeclRefExpr 0x201ff778f18 <col:36> 'const unsigned char *' lvalue ParmVar 0x201ff77b028 'in' 'const unsigned char *'
|   |-SwitchStmt 0x201ff7730f8 <line:62:5, line:99:5>
|   | |-ImplicitCastExpr 0x201ff7730e0 <line:62:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x201ff7790f0 <col:13> 'int' lvalue ParmVar 0x201ff778130 'inform' 'int'
|   | `-CompoundStmt 0x201ff773988 <col:21, line:99:5>
|   |   |-IfStmt 0x201ff773310 <line:65:9, line:69:9>
|   |   | |-BinaryOperator 0x201ff773178 <line:65:13, col:19> 'int' '&'
|   |   | | |-ImplicitCastExpr 0x201ff773160 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x201ff773118 <col:13> 'int' lvalue ParmVar 0x201ff77b0a8 'len' 'int'
|   |   | | `-IntegerLiteral 0x201ff773138 <col:19> 'int' 1
|   |   | `-CompoundStmt 0x201ff7732f8 <col:22, line:69:9>
|   |   |   `-ReturnStmt 0x201ff7732e8 <line:68:13, col:21>
|   |   |     `-UnaryOperator 0x201ff7732d0 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x201ff7732a8 <col:21> 'int' 1
|   |   |-BinaryOperator 0x201ff7733e0 <line:70:9, col:24> 'int' '='
|   |   | |-DeclRefExpr 0x201ff773328 <col:9> 'int' lvalue Var 0x201ff7788c8 'nchar' 'int'
|   |   | `-BinaryOperator 0x201ff7733c0 <col:17, col:24> 'int' '>>'
|   |   |   |-ImplicitCastExpr 0x201ff7733a8 <col:17> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x201ff773360 <col:17> 'int' lvalue ParmVar 0x201ff77b0a8 'len' 'int'
|   |   |   `-IntegerLiteral 0x201ff773380 <col:24> 'int' 1
|   |   |-BreakStmt 0x201ff773400 <line:71:9>
|   |   |-IfStmt 0x201ff773510 <line:74:9, line:78:9>
|   |   | |-BinaryOperator 0x201ff773468 <line:74:13, col:19> 'int' '&'
|   |   | | |-ImplicitCastExpr 0x201ff773450 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x201ff773408 <col:13> 'int' lvalue ParmVar 0x201ff77b0a8 'len' 'int'
|   |   | | `-IntegerLiteral 0x201ff773428 <col:19> 'int' 3
|   |   | `-CompoundStmt 0x201ff7734f8 <col:22, line:78:9>
|   |   |   `-ReturnStmt 0x201ff7734e8 <line:77:13, col:21>
|   |   |     `-UnaryOperator 0x201ff7734d0 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x201ff7734a8 <col:21> 'int' 1
|   |   |-BinaryOperator 0x201ff7735c8 <line:79:9, col:24> 'int' '='
|   |   | |-DeclRefExpr 0x201ff773528 <col:9> 'int' lvalue Var 0x201ff7788c8 'nchar' 'int'
|   |   | `-BinaryOperator 0x201ff7735a8 <col:17, col:24> 'int' '>>'
|   |   |   |-ImplicitCastExpr 0x201ff773590 <col:17> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x201ff773548 <col:17> 'int' lvalue ParmVar 0x201ff77b0a8 'len' 'int'
|   |   |   `-IntegerLiteral 0x201ff773568 <col:24> 'int' 2
|   |   |-BreakStmt 0x201ff7735e8 <line:80:9>
|   |   |-BinaryOperator 0x201ff773638 <line:83:9, col:17> 'int' '='
|   |   | |-DeclRefExpr 0x201ff7735f0 <col:9> 'int' lvalue Var 0x201ff7788c8 'nchar' 'int'
|   |   | `-IntegerLiteral 0x201ff773610 <col:17> 'int' 0
|   |   |-IfStmt 0x201ff773850 <line:86:9, line:89:9>
|   |   | |-BinaryOperator 0x201ff7737a8 <line:86:13, col:19> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x201ff773790 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x201ff773748 <col:13> 'int' lvalue Var 0x201ff778580 'ret' 'int'
|   |   | | `-IntegerLiteral 0x201ff773768 <col:19> 'int' 0
|   |   | `-CompoundStmt 0x201ff773838 <col:22, line:89:9>
|   |   |   `-ReturnStmt 0x201ff773828 <line:88:13, col:21>
|   |   |     `-UnaryOperator 0x201ff773810 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x201ff7737e8 <col:21> 'int' 1
|   |   |-BreakStmt 0x201ff773868 <line:90:9>
|   |   |-BinaryOperator 0x201ff7738c8 <line:93:9, col:17> 'int' '='
|   |   | |-DeclRefExpr 0x201ff773870 <col:9> 'int' lvalue Var 0x201ff7788c8 'nchar' 'int'
|   |   | `-ImplicitCastExpr 0x201ff7738b0 <col:17> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x201ff773890 <col:17> 'int' lvalue ParmVar 0x201ff77b0a8 'len' 'int'
|   |   |-BreakStmt 0x201ff7738e8 <line:94:9>
|   |   |-DefaultStmt 0x201ff773918 <line:96:5, col:12>
|   |   | `-NullStmt 0x201ff773910 <col:12>
|   |   `-ReturnStmt 0x201ff773978 <line:98:9, col:17>
|   |     `-UnaryOperator 0x201ff773960 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x201ff773938 <col:17> 'int' 1
|   |-IfStmt 0x201ff77b1f0 <line:101:5, line:106:5>
|   | |-BinaryOperator 0x201ff773b98 <line:101:9, col:42> 'int' '&&'
|   | | |-ParenExpr 0x201ff773ab0 <col:9, col:21> 'int'
|   | | | `-BinaryOperator 0x201ff773a90 <col:10, col:20> 'int' '>'
|   | | |   |-ImplicitCastExpr 0x201ff773a60 <col:10> 'long' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x201ff773a00 <col:10> 'long' lvalue ParmVar 0x201ff778230 'minsize' 'long'
|   | | |   `-ImplicitCastExpr 0x201ff773a78 <col:20> 'long' <IntegralCast>
|   | | |     `-IntegerLiteral 0x201ff773a38 <col:20> 'int' 0
|   | | `-ParenExpr 0x201ff773b78 <col:26, col:42> 'int'
|   | |   `-BinaryOperator 0x201ff773b58 <col:27, col:35> 'int' '<'
|   | |     |-ImplicitCastExpr 0x201ff773b40 <col:27> 'long' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x201ff773b10 <col:27> 'int' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x201ff773ad0 <col:27> 'int' lvalue Var 0x201ff7788c8 'nchar' 'int'
|   | |     `-ImplicitCastExpr 0x201ff773b28 <col:35> 'long' <LValueToRValue>
|   | |       `-DeclRefExpr 0x201ff773af0 <col:35> 'long' lvalue ParmVar 0x201ff778230 'minsize' 'long'
|   | `-CompoundStmt 0x201ff77b1c8 <col:45, line:106:5>
|   |   |-CallExpr 0x201ff773e40 <line:103:9, col:60> 'int'
|   |   | |-ImplicitCastExpr 0x201ff773e28 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x201ff773cc8 <col:9> 'int ()' Function 0x201ff773c00 'BIO_snprintf' 'int ()'
|   |   | |-ImplicitCastExpr 0x201ff773e80 <col:22> 'char *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x201ff773ce8 <col:22> 'char [32]' lvalue Var 0x201ff7789e8 'strbuf' 'char [32]'
|   |   | |-UnaryExprOrTypeTraitExpr 0x201ff773d60 <col:30, col:43> 'unsigned long long' sizeof
|   |   | | `-ParenExpr 0x201ff773d40 <col:36, col:43> 'char [32]' lvalue
|   |   | |   `-DeclRefExpr 0x201ff773d20 <col:37> 'char [32]' lvalue Var 0x201ff7789e8 'strbuf' 'char [32]' non_odr_use_unevaluated
|   |   | |-ImplicitCastExpr 0x201ff773e98 <col:46> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x201ff773db8 <col:46> 'char [4]' lvalue "%ld"
|   |   | `-ImplicitCastExpr 0x201ff773eb0 <col:53> 'long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x201ff773dd8 <col:53> 'long' lvalue ParmVar 0x201ff778230 'minsize' 'long'
|   |   |-CallExpr 0x201ff774090 <line:104:9, col:49> 'int'
|   |   | |-ImplicitCastExpr 0x201ff774078 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x201ff773fb8 <col:9> 'int ()' Function 0x201ff773ef0 'ERR_add_error_data' 'int ()'
|   |   | |-IntegerLiteral 0x201ff773fd8 <col:28> 'int' 2
|   |   | |-ImplicitCastExpr 0x201ff7740c8 <col:31> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x201ff774038 <col:31> 'char [9]' lvalue "minsize="
|   |   | `-ImplicitCastExpr 0x201ff77b160 <col:43> 'char *' <ArrayToPointerDecay>
|   |   |   `-DeclRefExpr 0x201ff774058 <col:43> 'char [32]' lvalue Var 0x201ff7789e8 'strbuf' 'char [32]'
|   |   `-ReturnStmt 0x201ff77b1b8 <line:105:9, col:17>
|   |     `-UnaryOperator 0x201ff77b1a0 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x201ff77b178 <col:17> 'int' 1
|   |-IfStmt 0x201ff77b6e0 <line:108:5, line:113:5>
|   | |-BinaryOperator 0x201ff77b3a0 <line:108:9, col:42> 'int' '&&'
|   | | |-ParenExpr 0x201ff77b2b8 <col:9, col:21> 'int'
|   | | | `-BinaryOperator 0x201ff77b298 <col:10, col:20> 'int' '>'
|   | | |   |-ImplicitCastExpr 0x201ff77b268 <col:10> 'long' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x201ff77b208 <col:10> 'long' lvalue ParmVar 0x201ff7782b0 'maxsize' 'long'
|   | | |   `-ImplicitCastExpr 0x201ff77b280 <col:20> 'long' <IntegralCast>
|   | | |     `-IntegerLiteral 0x201ff77b240 <col:20> 'int' 0
|   | | `-ParenExpr 0x201ff77b380 <col:26, col:42> 'int'
|   | |   `-BinaryOperator 0x201ff77b360 <col:27, col:35> 'int' '>'
|   | |     |-ImplicitCastExpr 0x201ff77b348 <col:27> 'long' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x201ff77b318 <col:27> 'int' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x201ff77b2d8 <col:27> 'int' lvalue Var 0x201ff7788c8 'nchar' 'int'
|   | |     `-ImplicitCastExpr 0x201ff77b330 <col:35> 'long' <LValueToRValue>
|   | |       `-DeclRefExpr 0x201ff77b2f8 <col:35> 'long' lvalue ParmVar 0x201ff7782b0 'maxsize' 'long'
|   | `-CompoundStmt 0x201ff77b6b8 <col:45, line:113:5>
|   |   |-CallExpr 0x201ff77b4d8 <line:110:9, col:60> 'int'
|   |   | |-ImplicitCastExpr 0x201ff77b4c0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x201ff77b3e0 <col:9> 'int ()' Function 0x201ff773c00 'BIO_snprintf' 'int ()'
|   |   | |-ImplicitCastExpr 0x201ff77b518 <col:22> 'char *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x201ff77b400 <col:22> 'char [32]' lvalue Var 0x201ff7789e8 'strbuf' 'char [32]'
|   |   | |-UnaryExprOrTypeTraitExpr 0x201ff77b460 <col:30, col:43> 'unsigned long long' sizeof
|   |   | | `-ParenExpr 0x201ff77b440 <col:36, col:43> 'char [32]' lvalue
|   |   | |   `-DeclRefExpr 0x201ff77b420 <col:37> 'char [32]' lvalue Var 0x201ff7789e8 'strbuf' 'char [32]' non_odr_use_unevaluated
|   |   | |-ImplicitCastExpr 0x201ff77b530 <col:46> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x201ff77b480 <col:46> 'char [4]' lvalue "%ld"
|   |   | `-ImplicitCastExpr 0x201ff77b548 <col:53> 'long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x201ff77b4a0 <col:53> 'long' lvalue ParmVar 0x201ff7782b0 'maxsize' 'long'
|   |   |-CallExpr 0x201ff77b600 <line:111:9, col:49> 'int'
|   |   | |-ImplicitCastExpr 0x201ff77b5e8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x201ff77b560 <col:9> 'int ()' Function 0x201ff773ef0 'ERR_add_error_data' 'int ()'
|   |   | |-IntegerLiteral 0x201ff77b580 <col:28> 'int' 2
|   |   | |-ImplicitCastExpr 0x201ff77b638 <col:31> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x201ff77b5a8 <col:31> 'char [9]' lvalue "maxsize="
|   |   | `-ImplicitCastExpr 0x201ff77b650 <col:43> 'char *' <ArrayToPointerDecay>
|   |   |   `-DeclRefExpr 0x201ff77b5c8 <col:43> 'char [32]' lvalue Var 0x201ff7789e8 'strbuf' 'char [32]'
|   |   `-ReturnStmt 0x201ff77b6a8 <line:112:9, col:17>
|   |     `-UnaryOperator 0x201ff77b690 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x201ff77b668 <col:17> 'int' 1
|   |-IfStmt 0x201ff77ba00 <line:116:5, line:119:5>
|   | |-BinaryOperator 0x201ff77b958 <line:116:9, col:61> 'int' '<'
|   | | |-CallExpr 0x201ff77b870 <col:9, col:57> 'int'
|   | | | |-ImplicitCastExpr 0x201ff77b858 <col:9> 'int (*)(const unsigned char *, int, int, int (*)(unsigned long, void *), void *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x201ff77b6f8 <col:9> 'int (const unsigned char *, int, int, int (*)(unsigned long, void *), void *)' Function 0x201ff7724d0 'traverse_string' 'int (const unsigned char *, int, int, int (*)(unsigned long, void *), void *)'
|   | | | |-ImplicitCastExpr 0x201ff77b8b8 <col:25> 'const unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x201ff77b718 <col:25> 'const unsigned char *' lvalue ParmVar 0x201ff77b028 'in' 'const unsigned char *'
|   | | | |-ImplicitCastExpr 0x201ff77b8d0 <col:29> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x201ff77b738 <col:29> 'int' lvalue ParmVar 0x201ff77b0a8 'len' 'int'
|   | | | |-ImplicitCastExpr 0x201ff77b8e8 <col:34> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x201ff77b758 <col:34> 'int' lvalue ParmVar 0x201ff778130 'inform' 'int'
|   | | | |-ImplicitCastExpr 0x201ff77b900 <col:42> 'int (*)(unsigned long, void *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x201ff77b778 <col:42> 'int (unsigned long, void *)' Function 0x201ff772b78 'type_str' 'int (unsigned long, void *)'
|   | | | `-ImplicitCastExpr 0x201ff77b918 <col:52, col:53> 'void *' <BitCast>
|   | | |   `-UnaryOperator 0x201ff77b7e8 <col:52, col:53> 'unsigned long *' prefix '&' cannot overflow
|   | | |     `-DeclRefExpr 0x201ff77b798 <col:53> 'unsigned long' lvalue ParmVar 0x201ff7781b0 'mask' 'unsigned long'
|   | | `-IntegerLiteral 0x201ff77b930 <col:61> 'int' 0
|   | `-CompoundStmt 0x201ff77b9e8 <col:64, line:119:5>
|   |   `-ReturnStmt 0x201ff77b9d8 <line:118:9, col:17>
|   |     `-UnaryOperator 0x201ff77b9c0 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x201ff77b998 <col:17> 'int' 1
|   |-IfStmt 0x201ff77be10 <line:123:5, line:140:5> has_else
|   | |-OpaqueValueExpr 0x201ff77bdf8 <<invalid sloc>> '_Bool'
|   | |-NullStmt 0x201ff77bdf0 <line:124:9>
|   | `-IfStmt 0x201ff77bdc8 <line:125:10, line:140:5> has_else
|   |   |-OpaqueValueExpr 0x201ff77bdb0 <<invalid sloc>> '_Bool'
|   |   |-NullStmt 0x201ff77bda8 <line:126:9>
|   |   `-IfStmt 0x201ff77bd80 <line:127:10, line:140:5> has_else
|   |     |-OpaqueValueExpr 0x201ff77bd68 <<invalid sloc>> '_Bool'
|   |     |-NullStmt 0x201ff77bd60 <line:128:9>
|   |     `-IfStmt 0x201ff77bd38 <line:129:10, line:140:5> has_else
|   |       |-OpaqueValueExpr 0x201ff77bd20 <<invalid sloc>> '_Bool'
|   |       |-NullStmt 0x201ff77bd18 <line:130:9>
|   |       `-IfStmt 0x201ff77bcf0 <line:131:10, line:140:5> has_else
|   |         |-OpaqueValueExpr 0x201ff77bcd8 <<invalid sloc>> '_Bool'
|   |         |-CompoundStmt 0x201ff77bbc8 <line:131:39, line:134:5>
|   |         `-IfStmt 0x201ff77bcb0 <col:12, line:140:5> has_else
|   |           |-OpaqueValueExpr 0x201ff77bc98 <<invalid sloc>> '_Bool'
|   |           |-CompoundStmt 0x201ff77bc38 <line:134:47, line:137:5>
|   |           `-CompoundStmt 0x201ff77bc88 <col:12, line:140:5>
|   |-IfStmt 0x201ff77be98 <line:141:5, line:142:16>
|   | |-OpaqueValueExpr 0x201ff77be80 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x201ff77be70 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x201ff77be58 <col:16> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x201ff77be38 <col:16> 'int' lvalue Var 0x201ff7784e8 'str_type' 'int'
|   |-IfStmt 0x201ff77c4d0 <line:143:5, line:158:5> has_else
|   | |-OpaqueValueExpr 0x201ff77c4b8 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x201ff77c128 <line:143:15, line:150:5>
|   | | `-BinaryOperator 0x201ff77bf28 <line:144:9, col:20> 'char' '='
|   | |   |-DeclRefExpr 0x201ff77beb0 <col:9> 'char' lvalue Var 0x201ff778610 'free_out' 'char'
|   | |   `-ImplicitCastExpr 0x201ff77bf10 <col:20> 'char' <IntegralCast>
|   | |     `-IntegerLiteral 0x201ff77bee8 <col:20> 'int' 0
|   | `-CompoundStmt 0x201ff77c498 <line:150:12, line:158:5>
|   |   |-BinaryOperator 0x201ff77c1b0 <line:151:9, col:20> 'char' '='
|   |   | |-DeclRefExpr 0x201ff77c140 <col:9> 'char' lvalue Var 0x201ff778610 'free_out' 'char'
|   |   | `-ImplicitCastExpr 0x201ff77c198 <col:20> 'char' <IntegralCast>
|   |   |   `-IntegerLiteral 0x201ff77c170 <col:20> 'int' 1
|   |   `-IfStmt 0x201ff77c480 <line:153:9, line:156:9>
|   |     |-OpaqueValueExpr 0x201ff77c468 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x201ff77c450 <line:153:27, line:156:9>
|   |       `-ReturnStmt 0x201ff77c440 <line:155:13, col:21>
|   |         `-UnaryOperator 0x201ff77c428 <col:20, col:21> 'int' prefix '-'
|   |           `-IntegerLiteral 0x201ff77c400 <col:21> 'int' 1
|   |-IfStmt 0x201ff77c7f8 <line:160:5, line:166:5>
|   | |-BinaryOperator 0x201ff77c568 <line:160:9, col:19> 'int' '=='
|   | | |-ImplicitCastExpr 0x201ff77c538 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x201ff77c4f8 <col:9> 'int' lvalue ParmVar 0x201ff778130 'inform' 'int'
|   | | `-ImplicitCastExpr 0x201ff77c550 <col:19> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x201ff77c518 <col:19> 'int' lvalue Var 0x201ff7786a8 'outform' 'int'
|   | `-CompoundStmt 0x201ff77c7d8 <col:28, line:166:5>
|   |   |-IfStmt 0x201ff77c778 <line:161:9, line:164:9>
|   |   | |-OpaqueValueExpr 0x201ff77c760 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x201ff77c748 <line:161:46, line:164:9>
|   |   |   `-ReturnStmt 0x201ff77c738 <line:163:13, col:21>
|   |   |     `-UnaryOperator 0x201ff77c720 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x201ff77c6f8 <col:21> 'int' 1
|   |   `-ReturnStmt 0x201ff77c7c8 <line:165:9, col:16>
|   |     `-ImplicitCastExpr 0x201ff77c7b0 <col:16> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x201ff77c790 <col:16> 'int' lvalue Var 0x201ff7784e8 'str_type' 'int'
|   |-SwitchStmt 0x201ff77c848 <line:169:5, line:190:5>
|   | |-ImplicitCastExpr 0x201ff77c830 <line:169:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x201ff77c810 <col:13> 'int' lvalue Var 0x201ff7786a8 'outform' 'int'
|   | `-CompoundStmt 0x201ff77cea8 <col:22, line:190:5>
|   |   |-BinaryOperator 0x201ff77c8d8 <line:171:9, col:18> 'int' '='
|   |   | |-DeclRefExpr 0x201ff77c868 <col:9> 'int' lvalue Var 0x201ff778728 'outlen' 'int'
|   |   | `-ImplicitCastExpr 0x201ff77c8c0 <col:18> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x201ff77c8a0 <col:18> 'int' lvalue Var 0x201ff7788c8 'nchar' 'int'
|   |   |-BinaryOperator 0x201ff77c968 <line:172:9, col:19> 'int (*)(unsigned long, void *)' '='
|   |   | |-DeclRefExpr 0x201ff77c8f8 <col:9> 'int (*)(unsigned long, void *)' lvalue Var 0x201ff778bb0 'cpyfunc' 'int (*)(unsigned long, void *)'
|   |   | `-ImplicitCastExpr 0x201ff77c950 <col:19> 'int (*)(unsigned long, void *)' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x201ff77c930 <col:19> 'int (unsigned long, void *)' Function 0x201ff772da8 'cpy_asc' 'int (unsigned long, void *)'
|   |   |-BreakStmt 0x201ff77c988 <line:173:9>
|   |   |-BinaryOperator 0x201ff77ca30 <line:176:9, col:27> 'int' '='
|   |   | |-DeclRefExpr 0x201ff77c990 <col:9> 'int' lvalue Var 0x201ff778728 'outlen' 'int'
|   |   | `-BinaryOperator 0x201ff77ca10 <col:18, col:27> 'int' '<<'
|   |   |   |-ImplicitCastExpr 0x201ff77c9f8 <col:18> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x201ff77c9b0 <col:18> 'int' lvalue Var 0x201ff7788c8 'nchar' 'int'
|   |   |   `-IntegerLiteral 0x201ff77c9d0 <col:27> 'int' 1
|   |   |-BinaryOperator 0x201ff77caa8 <line:177:9, col:19> 'int (*)(unsigned long, void *)' '='
|   |   | |-DeclRefExpr 0x201ff77ca50 <col:9> 'int (*)(unsigned long, void *)' lvalue Var 0x201ff778bb0 'cpyfunc' 'int (*)(unsigned long, void *)'
|   |   | `-ImplicitCastExpr 0x201ff77ca90 <col:19> 'int (*)(unsigned long, void *)' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x201ff77ca70 <col:19> 'int (unsigned long, void *)' Function 0x201ff772fd8 'cpy_bmp' 'int (unsigned long, void *)'
|   |   |-BreakStmt 0x201ff77cac8 <line:178:9>
|   |   |-BinaryOperator 0x201ff77cb70 <line:181:9, col:27> 'int' '='
|   |   | |-DeclRefExpr 0x201ff77cad0 <col:9> 'int' lvalue Var 0x201ff778728 'outlen' 'int'
|   |   | `-BinaryOperator 0x201ff77cb50 <col:18, col:27> 'int' '<<'
|   |   |   |-ImplicitCastExpr 0x201ff77cb38 <col:18> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x201ff77caf0 <col:18> 'int' lvalue Var 0x201ff7788c8 'nchar' 'int'
|   |   |   `-IntegerLiteral 0x201ff77cb10 <col:27> 'int' 2
|   |   |-BinaryOperator 0x201ff77cbe8 <line:182:9, col:19> 'int (*)(unsigned long, void *)' '='
|   |   | |-DeclRefExpr 0x201ff77cb90 <col:9> 'int (*)(unsigned long, void *)' lvalue Var 0x201ff778bb0 'cpyfunc' 'int (*)(unsigned long, void *)'
|   |   | `-ImplicitCastExpr 0x201ff77cbd0 <col:19> 'int (*)(unsigned long, void *)' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x201ff77cbb0 <col:19> 'int (unsigned long, void *)' Function 0x201ff77a2a0 'cpy_univ' 'int (unsigned long, void *)'
|   |   |-BreakStmt 0x201ff77cc08 <line:183:9>
|   |   |-BinaryOperator 0x201ff77cc58 <line:186:9, col:18> 'int' '='
|   |   | |-DeclRefExpr 0x201ff77cc10 <col:9> 'int' lvalue Var 0x201ff778728 'outlen' 'int'
|   |   | `-IntegerLiteral 0x201ff77cc30 <col:18> 'int' 0
|   |   |-CallExpr 0x201ff77cd68 <line:187:9, col:59> 'int'
|   |   | |-ImplicitCastExpr 0x201ff77cd50 <col:9> 'int (*)(const unsigned char *, int, int, int (*)(unsigned long, void *), void *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x201ff77cc78 <col:9> 'int (const unsigned char *, int, int, int (*)(unsigned long, void *), void *)' Function 0x201ff7724d0 'traverse_string' 'int (const unsigned char *, int, int, int (*)(unsigned long, void *), void *)'
|   |   | |-ImplicitCastExpr 0x201ff77cdb0 <col:25> 'const unsigned char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x201ff77cc98 <col:25> 'const unsigned char *' lvalue ParmVar 0x201ff77b028 'in' 'const unsigned char *'
|   |   | |-ImplicitCastExpr 0x201ff77cdc8 <col:29> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x201ff77ccb8 <col:29> 'int' lvalue ParmVar 0x201ff77b0a8 'len' 'int'
|   |   | |-ImplicitCastExpr 0x201ff77cde0 <col:34> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x201ff77ccd8 <col:34> 'int' lvalue ParmVar 0x201ff778130 'inform' 'int'
|   |   | |-ImplicitCastExpr 0x201ff77cdf8 <col:42> 'int (*)(unsigned long, void *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x201ff77ccf8 <col:42> 'int (unsigned long, void *)' Function 0x201ff772948 'out_utf8' 'int (unsigned long, void *)'
|   |   | `-ImplicitCastExpr 0x201ff77ce10 <col:52, col:53> 'void *' <BitCast>
|   |   |   `-UnaryOperator 0x201ff77cd38 <col:52, col:53> 'int *' prefix '&' cannot overflow
|   |   |     `-DeclRefExpr 0x201ff77cd18 <col:53> 'int' lvalue Var 0x201ff778728 'outlen' 'int'
|   |   |-BinaryOperator 0x201ff77ce80 <line:188:9, col:19> 'int (*)(unsigned long, void *)' '='
|   |   | |-DeclRefExpr 0x201ff77ce28 <col:9> 'int (*)(unsigned long, void *)' lvalue Var 0x201ff778bb0 'cpyfunc' 'int (*)(unsigned long, void *)'
|   |   | `-ImplicitCastExpr 0x201ff77ce68 <col:19> 'int (*)(unsigned long, void *)' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x201ff77ce48 <col:19> 'int (unsigned long, void *)' Function 0x201ff77a4d0 'cpy_utf8' 'int (unsigned long, void *)'
|   |   `-BreakStmt 0x201ff77cea0 <line:189:9>
|   |-IfStmt 0x201ff7753b0 <line:191:5, line:196:5>
|   | |-BinaryOperator 0x201ff7751c0 <line:191:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ParenExpr 0x201ff775100 <.//openssl//file_jk/before\crypto\asn1\a_mbstr.c:191:9, col:40> 'unsigned char *'
|   | | | `-BinaryOperator 0x201ff77d140 <col:10, col:39> 'unsigned char *' '='
|   | | |   |-DeclRefExpr 0x201ff77cf20 <col:10> 'unsigned char *' lvalue Var 0x201ff778830 'p' 'unsigned char *'
|   | | |   `-ImplicitCastExpr 0x201ff77d128 <col:14, col:39> 'unsigned char *' <IntegralToPointer>
|   | | |     `-CallExpr 0x201ff77d100 <col:14, col:39> 'int'
|   | | |       |-ImplicitCastExpr 0x201ff77d0e8 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x201ff77d048 <col:14> 'int ()' Function 0x201ff77cf80 'OPENSSL_malloc' 'int ()'
|   | | |       `-BinaryOperator 0x201ff77d0c8 <col:29, col:38> 'int' '+'
|   | | |         |-ImplicitCastExpr 0x201ff77d0b0 <col:29> 'int' <LValueToRValue>
|   | | |         | `-DeclRefExpr 0x201ff77d068 <col:29> 'int' lvalue Var 0x201ff778728 'outlen' 'int'
|   | | |         `-IntegerLiteral 0x201ff77d088 <col:38> 'int' 1
|   | | `-ImplicitCastExpr 0x201ff7751a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x201ff775188 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x201ff775160 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x201ff775120 <col:26> 'int' 0
|   | `-CompoundStmt 0x201ff775398 <.//openssl//file_jk/before\crypto\asn1\a_mbstr.c:191:51, line:196:5>
|   |   `-ReturnStmt 0x201ff775388 <line:195:9, col:17>
|   |     `-UnaryOperator 0x201ff775370 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x201ff775348 <col:17> 'int' 1
|   |-BinaryOperator 0x201ff7754d8 <line:199:5, col:17> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x201ff775478 <col:5, col:13> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x201ff775448 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x201ff775408 <col:5> 'unsigned char *' lvalue Var 0x201ff778830 'p' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x201ff775460 <col:7> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x201ff775428 <col:7> 'int' lvalue Var 0x201ff778728 'outlen' 'int'
|   | `-ImplicitCastExpr 0x201ff7754c0 <col:17> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x201ff775498 <col:17> 'int' 0
|   |-CallExpr 0x201ff775618 <line:200:5, col:49> 'int'
|   | |-ImplicitCastExpr 0x201ff775600 <col:5> 'int (*)(const unsigned char *, int, int, int (*)(unsigned long, void *), void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x201ff7754f8 <col:5> 'int (const unsigned char *, int, int, int (*)(unsigned long, void *), void *)' Function 0x201ff7724d0 'traverse_string' 'int (const unsigned char *, int, int, int (*)(unsigned long, void *), void *)'
|   | |-ImplicitCastExpr 0x201ff775660 <col:21> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x201ff775518 <col:21> 'const unsigned char *' lvalue ParmVar 0x201ff77b028 'in' 'const unsigned char *'
|   | |-ImplicitCastExpr 0x201ff775678 <col:25> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x201ff775538 <col:25> 'int' lvalue ParmVar 0x201ff77b0a8 'len' 'int'
|   | |-ImplicitCastExpr 0x201ff775690 <col:30> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x201ff775558 <col:30> 'int' lvalue ParmVar 0x201ff778130 'inform' 'int'
|   | |-ImplicitCastExpr 0x201ff7756a8 <col:38> 'int (*)(unsigned long, void *)' <LValueToRValue>
|   | | `-DeclRefExpr 0x201ff775578 <col:38> 'int (*)(unsigned long, void *)' lvalue Var 0x201ff778bb0 'cpyfunc' 'int (*)(unsigned long, void *)'
|   | `-ImplicitCastExpr 0x201ff7756c0 <col:47, col:48> 'void *' <BitCast>
|   |   `-UnaryOperator 0x201ff7755e8 <col:47, col:48> 'unsigned char **' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x201ff775598 <col:48> 'unsigned char *' lvalue Var 0x201ff778830 'p' 'unsigned char *'
|   `-ReturnStmt 0x201ff775710 <line:201:5, col:12>
|     `-ImplicitCastExpr 0x201ff7756f8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x201ff7756d8 <col:12> 'int' lvalue Var 0x201ff7784e8 'str_type' 'int'
|-FunctionDecl 0x201ff778dd0 <line:57:15> col:15 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x201ff778e70 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x201ff775c88 prev 0x201ff7724d0 <line:209:1, line:243:1> line:209:12 used traverse_string 'int (const unsigned char *, int, int, int (*)(unsigned long, void *), void *)' static
| |-ParmVarDecl 0x201ff7757f8 <col:28, col:49> col:49 used p 'const unsigned char *'
| |-ParmVarDecl 0x201ff775878 <col:52, col:56> col:56 used len 'int'
| |-ParmVarDecl 0x201ff7758f8 <col:61, col:65> col:65 used inform 'int'
| |-ParmVarDecl 0x201ff775ad8 <line:210:28, col:71> col:34 used rfunc 'int (*)(unsigned long, void *)'
| |-ParmVarDecl 0x201ff775b58 <line:211:28, col:34> col:34 used arg 'void *'
| `-CompoundStmt 0x201ff77e0e8 <line:212:1, line:243:1>
|   |-DeclStmt 0x201ff775dd0 <line:213:5, col:24>
|   | `-VarDecl 0x201ff775d68 <col:5, col:19> col:19 used value 'unsigned long'
|   |-DeclStmt 0x201ff775e68 <line:214:5, col:12>
|   | `-VarDecl 0x201ff775e00 <col:5, col:9> col:9 used ret 'int'
|   |-WhileStmt 0x201ff77e098 <line:215:5, line:241:5>
|   | |-ImplicitCastExpr 0x201ff775ea0 <line:215:12> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x201ff775e80 <col:12> 'int' lvalue ParmVar 0x201ff775878 'len' 'int'
|   | `-CompoundStmt 0x201ff77e078 <col:17, line:241:5>
|   |   |-IfStmt 0x201ff77dde8 <line:216:9, line:235:9> has_else
|   |   | |-OpaqueValueExpr 0x201ff77ddd0 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x201ff775fe8 <line:216:37, line:219:9>
|   |   | | |-BinaryOperator 0x201ff775f90 <line:217:13, col:23> 'unsigned long' '='
|   |   | | | |-DeclRefExpr 0x201ff775ed8 <col:13> 'unsigned long' lvalue Var 0x201ff775d68 'value' 'unsigned long'
|   |   | | | `-ImplicitCastExpr 0x201ff775f78 <col:21, col:23> 'unsigned long' <IntegralCast>
|   |   | | |   `-ImplicitCastExpr 0x201ff775f60 <col:21, col:23> 'unsigned char' <LValueToRValue>
|   |   | | |     `-UnaryOperator 0x201ff775f48 <col:21, col:23> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   | | |       `-UnaryOperator 0x201ff775f30 <col:22, col:23> 'const unsigned char *' postfix '++'
|   |   | | |         `-DeclRefExpr 0x201ff775f10 <col:22> 'const unsigned char *' lvalue ParmVar 0x201ff7757f8 'p' 'const unsigned char *'
|   |   | | `-UnaryOperator 0x201ff775fd0 <line:218:13, col:16> 'int' postfix '--'
|   |   | |   `-DeclRefExpr 0x201ff775fb0 <col:13> 'int' lvalue ParmVar 0x201ff775878 'len' 'int'
|   |   | `-IfStmt 0x201ff77dda8 <line:219:16, line:235:9> has_else
|   |   |   |-OpaqueValueExpr 0x201ff77dd90 <<invalid sloc>> '_Bool'
|   |   |   |-CompoundStmt 0x201ff77d320 <line:219:44, line:223:9>
|   |   |   | |-BinaryOperator 0x201ff77d1b8 <line:220:13, col:29> 'unsigned long' '='
|   |   |   | | |-DeclRefExpr 0x201ff776028 <col:13> 'unsigned long' lvalue Var 0x201ff775d68 'value' 'unsigned long'
|   |   |   | | `-ImplicitCastExpr 0x201ff77d1a0 <col:21, col:29> 'unsigned long' <IntegralCast>
|   |   |   | |   `-BinaryOperator 0x201ff77d180 <col:21, col:29> 'int' '<<'
|   |   |   | |     |-ImplicitCastExpr 0x201ff7760d8 <col:21, col:23> 'int' <IntegralCast>
|   |   |   | |     | `-ImplicitCastExpr 0x201ff7760c0 <col:21, col:23> 'unsigned char' <LValueToRValue>
|   |   |   | |     |   `-UnaryOperator 0x201ff776080 <col:21, col:23> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |   | |     |     `-UnaryOperator 0x201ff776068 <col:22, col:23> 'const unsigned char *' postfix '++'
|   |   |   | |     |       `-DeclRefExpr 0x201ff776048 <col:22> 'const unsigned char *' lvalue ParmVar 0x201ff7757f8 'p' 'const unsigned char *'
|   |   |   | |     `-IntegerLiteral 0x201ff776098 <col:29> 'int' 8
|   |   |   | |-CompoundAssignOperator 0x201ff77d278 <line:221:13, col:24> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   |   | | |-DeclRefExpr 0x201ff77d1d8 <col:13> 'unsigned long' lvalue Var 0x201ff775d68 'value' 'unsigned long'
|   |   |   | | `-ImplicitCastExpr 0x201ff77d260 <col:22, col:24> 'unsigned long' <IntegralCast>
|   |   |   | |   `-ImplicitCastExpr 0x201ff77d248 <col:22, col:24> 'unsigned char' <LValueToRValue>
|   |   |   | |     `-UnaryOperator 0x201ff77d230 <col:22, col:24> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |   | |       `-UnaryOperator 0x201ff77d218 <col:23, col:24> 'const unsigned char *' postfix '++'
|   |   |   | |         `-DeclRefExpr 0x201ff77d1f8 <col:23> 'const unsigned char *' lvalue ParmVar 0x201ff7757f8 'p' 'const unsigned char *'
|   |   |   | `-CompoundAssignOperator 0x201ff77d2f0 <line:222:13, col:20> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |   |-DeclRefExpr 0x201ff77d2a8 <col:13> 'int' lvalue ParmVar 0x201ff775878 'len' 'int'
|   |   |   |   `-IntegerLiteral 0x201ff77d2c8 <col:20> 'int' 2
|   |   |   `-IfStmt 0x201ff77dd68 <line:223:16, line:235:9> has_else
|   |   |     |-OpaqueValueExpr 0x201ff77dd50 <<invalid sloc>> '_Bool'
|   |   |     |-CompoundStmt 0x201ff77d890 <line:223:45, line:229:9>
|   |   |     | |-BinaryOperator 0x201ff77d498 <line:224:13, col:46> 'unsigned long' '='
|   |   |     | | |-DeclRefExpr 0x201ff77d368 <col:13> 'unsigned long' lvalue Var 0x201ff775d68 'value' 'unsigned long'
|   |   |     | | `-BinaryOperator 0x201ff77d478 <col:21, col:46> 'unsigned long' '<<'
|   |   |     | |   |-ParenExpr 0x201ff77d430 <col:21, col:41> 'unsigned long'
|   |   |     | |   | `-CStyleCastExpr 0x201ff77d408 <col:22, col:39> 'unsigned long' <IntegralCast>
|   |   |     | |   |   `-ImplicitCastExpr 0x201ff77d3f0 <col:37, col:39> 'unsigned char' <LValueToRValue> part_of_explicit_cast
|   |   |     | |   |     `-UnaryOperator 0x201ff77d3c0 <col:37, col:39> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | |   |       `-UnaryOperator 0x201ff77d3a8 <col:38, col:39> 'const unsigned char *' postfix '++'
|   |   |     | |   |         `-DeclRefExpr 0x201ff77d388 <col:38> 'const unsigned char *' lvalue ParmVar 0x201ff7757f8 'p' 'const unsigned char *'
|   |   |     | |   `-IntegerLiteral 0x201ff77d450 <col:46> 'int' 24
|   |   |     | |-CompoundAssignOperator 0x201ff77d5e8 <line:225:13, col:47> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   |     | | |-DeclRefExpr 0x201ff77d4b8 <col:13> 'unsigned long' lvalue Var 0x201ff775d68 'value' 'unsigned long'
|   |   |     | | `-BinaryOperator 0x201ff77d5c8 <col:22, col:47> 'unsigned long' '<<'
|   |   |     | |   |-ParenExpr 0x201ff77d580 <col:22, col:42> 'unsigned long'
|   |   |     | |   | `-CStyleCastExpr 0x201ff77d558 <col:23, col:40> 'unsigned long' <IntegralCast>
|   |   |     | |   |   `-ImplicitCastExpr 0x201ff77d540 <col:38, col:40> 'unsigned char' <LValueToRValue> part_of_explicit_cast
|   |   |     | |   |     `-UnaryOperator 0x201ff77d510 <col:38, col:40> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | |   |       `-UnaryOperator 0x201ff77d4f8 <col:39, col:40> 'const unsigned char *' postfix '++'
|   |   |     | |   |         `-DeclRefExpr 0x201ff77d4d8 <col:39> 'const unsigned char *' lvalue ParmVar 0x201ff7757f8 'p' 'const unsigned char *'
|   |   |     | |   `-IntegerLiteral 0x201ff77d5a0 <col:47> 'int' 16
|   |   |     | |-CompoundAssignOperator 0x201ff77d718 <line:226:13, col:30> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   |     | | |-DeclRefExpr 0x201ff77d618 <col:13> 'unsigned long' lvalue Var 0x201ff775d68 'value' 'unsigned long'
|   |   |     | | `-ImplicitCastExpr 0x201ff77d700 <col:22, col:30> 'unsigned long' <IntegralCast>
|   |   |     | |   `-BinaryOperator 0x201ff77d6e0 <col:22, col:30> 'int' '<<'
|   |   |     | |     |-ImplicitCastExpr 0x201ff77d6c8 <col:22, col:24> 'int' <IntegralCast>
|   |   |     | |     | `-ImplicitCastExpr 0x201ff77d6b0 <col:22, col:24> 'unsigned char' <LValueToRValue>
|   |   |     | |     |   `-UnaryOperator 0x201ff77d670 <col:22, col:24> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | |     |     `-UnaryOperator 0x201ff77d658 <col:23, col:24> 'const unsigned char *' postfix '++'
|   |   |     | |     |       `-DeclRefExpr 0x201ff77d638 <col:23> 'const unsigned char *' lvalue ParmVar 0x201ff7757f8 'p' 'const unsigned char *'
|   |   |     | |     `-IntegerLiteral 0x201ff77d688 <col:30> 'int' 8
|   |   |     | |-CompoundAssignOperator 0x201ff77d7e8 <line:227:13, col:24> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   |     | | |-DeclRefExpr 0x201ff77d748 <col:13> 'unsigned long' lvalue Var 0x201ff775d68 'value' 'unsigned long'
|   |   |     | | `-ImplicitCastExpr 0x201ff77d7d0 <col:22, col:24> 'unsigned long' <IntegralCast>
|   |   |     | |   `-ImplicitCastExpr 0x201ff77d7b8 <col:22, col:24> 'unsigned char' <LValueToRValue>
|   |   |     | |     `-UnaryOperator 0x201ff77d7a0 <col:22, col:24> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | |       `-UnaryOperator 0x201ff77d788 <col:23, col:24> 'const unsigned char *' postfix '++'
|   |   |     | |         `-DeclRefExpr 0x201ff77d768 <col:23> 'const unsigned char *' lvalue ParmVar 0x201ff7757f8 'p' 'const unsigned char *'
|   |   |     | `-CompoundAssignOperator 0x201ff77d860 <line:228:13, col:20> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |   |-DeclRefExpr 0x201ff77d818 <col:13> 'int' lvalue ParmVar 0x201ff775878 'len' 'int'
|   |   |     |   `-IntegerLiteral 0x201ff77d838 <col:20> 'int' 4
|   |   |     `-CompoundStmt 0x201ff77dd20 <line:229:16, line:235:9>
|   |   |       |-BinaryOperator 0x201ff77db08 <line:230:13, col:43> 'int' '='
|   |   |       | |-DeclRefExpr 0x201ff77d8c8 <col:13> 'int' lvalue Var 0x201ff775e00 'ret' 'int'
|   |   |       | `-CallExpr 0x201ff77daa0 <col:19, col:43> 'int'
|   |   |       |   |-ImplicitCastExpr 0x201ff77da88 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |   |       |   | `-DeclRefExpr 0x201ff77d9f0 <col:19> 'int ()' Function 0x201ff77d928 'UTF8_getc' 'int ()'
|   |   |       |   |-ImplicitCastExpr 0x201ff77dad8 <col:29> 'const unsigned char *' <LValueToRValue>
|   |   |       |   | `-DeclRefExpr 0x201ff77da10 <col:29> 'const unsigned char *' lvalue ParmVar 0x201ff7757f8 'p' 'const unsigned char *'
|   |   |       |   |-ImplicitCastExpr 0x201ff77daf0 <col:32> 'int' <LValueToRValue>
|   |   |       |   | `-DeclRefExpr 0x201ff77da30 <col:32> 'int' lvalue ParmVar 0x201ff775878 'len' 'int'
|   |   |       |   `-UnaryOperator 0x201ff77da70 <col:37, col:38> 'unsigned long *' prefix '&' cannot overflow
|   |   |       |     `-DeclRefExpr 0x201ff77da50 <col:38> 'unsigned long' lvalue Var 0x201ff775d68 'value' 'unsigned long'
|   |   |       |-IfStmt 0x201ff77dbf8 <line:231:13, line:232:25>
|   |   |       | |-BinaryOperator 0x201ff77db88 <line:231:17, col:23> 'int' '<'
|   |   |       | | |-ImplicitCastExpr 0x201ff77db70 <col:17> 'int' <LValueToRValue>
|   |   |       | | | `-DeclRefExpr 0x201ff77db28 <col:17> 'int' lvalue Var 0x201ff775e00 'ret' 'int'
|   |   |       | | `-IntegerLiteral 0x201ff77db48 <col:23> 'int' 0
|   |   |       | `-ReturnStmt 0x201ff77dbe8 <line:232:17, col:25>
|   |   |       |   `-UnaryOperator 0x201ff77dbd0 <col:24, col:25> 'int' prefix '-'
|   |   |       |     `-IntegerLiteral 0x201ff77dba8 <col:25> 'int' 1
|   |   |       |-CompoundAssignOperator 0x201ff77dc68 <line:233:13, col:20> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |       | |-DeclRefExpr 0x201ff77dc10 <col:13> 'int' lvalue ParmVar 0x201ff775878 'len' 'int'
|   |   |       | `-ImplicitCastExpr 0x201ff77dc50 <col:20> 'int' <LValueToRValue>
|   |   |       |   `-DeclRefExpr 0x201ff77dc30 <col:20> 'int' lvalue Var 0x201ff775e00 'ret' 'int'
|   |   |       `-CompoundAssignOperator 0x201ff77dcf0 <line:234:13, col:18> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   |         |-DeclRefExpr 0x201ff77dc98 <col:13> 'const unsigned char *' lvalue ParmVar 0x201ff7757f8 'p' 'const unsigned char *'
|   |   |         `-ImplicitCastExpr 0x201ff77dcd8 <col:18> 'int' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x201ff77dcb8 <col:18> 'int' lvalue Var 0x201ff775e00 'ret' 'int'
|   |   `-IfStmt 0x201ff77e060 <line:236:9, line:240:9>
|   |     |-ImplicitCastExpr 0x201ff77de30 <line:236:13> 'int (*)(unsigned long, void *)' <LValueToRValue>
|   |     | `-DeclRefExpr 0x201ff77de10 <col:13> 'int (*)(unsigned long, void *)' lvalue ParmVar 0x201ff775ad8 'rfunc' 'int (*)(unsigned long, void *)'
|   |     `-CompoundStmt 0x201ff77e040 <col:20, line:240:9>
|   |       |-BinaryOperator 0x201ff77df40 <line:237:13, col:35> 'int' '='
|   |       | |-DeclRefExpr 0x201ff77de48 <col:13> 'int' lvalue Var 0x201ff775e00 'ret' 'int'
|   |       | `-CallExpr 0x201ff77dee0 <col:19, col:35> 'int'
|   |       |   |-ImplicitCastExpr 0x201ff77dec8 <col:19> 'int (*)(unsigned long, void *)' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x201ff77de68 <col:19> 'int (*)(unsigned long, void *)' lvalue ParmVar 0x201ff775ad8 'rfunc' 'int (*)(unsigned long, void *)'
|   |       |   |-ImplicitCastExpr 0x201ff77df10 <col:25> 'unsigned long' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x201ff77de88 <col:25> 'unsigned long' lvalue Var 0x201ff775d68 'value' 'unsigned long'
|   |       |   `-ImplicitCastExpr 0x201ff77df28 <col:32> 'void *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x201ff77dea8 <col:32> 'void *' lvalue ParmVar 0x201ff775b58 'arg' 'void *'
|   |       `-IfStmt 0x201ff77e028 <line:238:13, line:239:24>
|   |         |-BinaryOperator 0x201ff77dfc0 <line:238:17, col:24> 'int' '<='
|   |         | |-ImplicitCastExpr 0x201ff77dfa8 <col:17> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x201ff77df60 <col:17> 'int' lvalue Var 0x201ff775e00 'ret' 'int'
|   |         | `-IntegerLiteral 0x201ff77df80 <col:24> 'int' 0
|   |         `-ReturnStmt 0x201ff77e018 <line:239:17, col:24>
|   |           `-ImplicitCastExpr 0x201ff77e000 <col:24> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x201ff77dfe0 <col:24> 'int' lvalue Var 0x201ff775e00 'ret' 'int'
|   `-ReturnStmt 0x201ff77e0d8 <line:242:5, col:12>
|     `-IntegerLiteral 0x201ff77e0b0 <col:12> 'int' 1
|-FunctionDecl 0x201ff785350 prev 0x201ff772718 <line:249:1, line:255:1> line:249:12 used in_utf8 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x201ff785200 <col:20, col:34> col:34 value 'unsigned long'
| |-ParmVarDecl 0x201ff785280 <col:41, col:47> col:47 used arg 'void *'
| `-CompoundStmt 0x201ff785600 <line:250:1, line:255:1>
|   |-DeclStmt 0x201ff785480 <line:251:5, col:15>
|   | `-VarDecl 0x201ff785418 <col:5, col:10> col:10 used nchar 'int *'
|   |-BinaryOperator 0x201ff785520 <line:252:5, col:13> 'int *' '='
|   | |-DeclRefExpr 0x201ff785498 <col:5> 'int *' lvalue Var 0x201ff785418 'nchar' 'int *'
|   | `-ImplicitCastExpr 0x201ff785508 <col:13> 'int *' <BitCast>
|   |   `-ImplicitCastExpr 0x201ff7854f0 <col:13> 'void *' <LValueToRValue>
|   |     `-DeclRefExpr 0x201ff7854d0 <col:13> 'void *' lvalue ParmVar 0x201ff785280 'arg' 'void *'
|   |-UnaryOperator 0x201ff7855b0 <line:253:5, col:13> 'int' postfix '++'
|   | `-ParenExpr 0x201ff785590 <col:5, col:12> 'int' lvalue
|   |   `-UnaryOperator 0x201ff785578 <col:6, col:7> 'int' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x201ff785560 <col:7> 'int *' <LValueToRValue>
|   |       `-DeclRefExpr 0x201ff785540 <col:7> 'int *' lvalue Var 0x201ff785418 'nchar' 'int *'
|   `-ReturnStmt 0x201ff7855f0 <line:254:5, col:12>
|     `-IntegerLiteral 0x201ff7855c8 <col:12> 'int' 1
|-FunctionDecl 0x201ff785798 prev 0x201ff772948 <line:259:1, line:265:1> line:259:12 used out_utf8 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x201ff785648 <col:21, col:35> col:35 used value 'unsigned long'
| |-ParmVarDecl 0x201ff7856c8 <col:42, col:48> col:48 used arg 'void *'
| `-CompoundStmt 0x201ff785ca0 <line:260:1, line:265:1>
|   |-DeclStmt 0x201ff7858c8 <line:261:5, col:16>
|   | `-VarDecl 0x201ff785860 <col:5, col:10> col:10 used outlen 'int *'
|   |-BinaryOperator 0x201ff785968 <line:262:5, col:14> 'int *' '='
|   | |-DeclRefExpr 0x201ff7858e0 <col:5> 'int *' lvalue Var 0x201ff785860 'outlen' 'int *'
|   | `-ImplicitCastExpr 0x201ff785950 <col:14> 'int *' <BitCast>
|   |   `-ImplicitCastExpr 0x201ff785938 <col:14> 'void *' <LValueToRValue>
|   |     `-DeclRefExpr 0x201ff785918 <col:14> 'void *' lvalue ParmVar 0x201ff7856c8 'arg' 'void *'
|   |-CompoundAssignOperator 0x201ff785c38 <line:263:5, col:41> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-UnaryOperator 0x201ff7859c0 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x201ff7859a8 <col:6> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x201ff785988 <col:6> 'int *' lvalue Var 0x201ff785860 'outlen' 'int *'
|   | `-CallExpr 0x201ff785be8 <col:16, col:41> 'int'
|   |   |-ImplicitCastExpr 0x201ff785bd0 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x201ff785ac8 <col:16> 'int ()' Function 0x201ff785a00 'UTF8_putc' 'int ()'
|   |   |-ParenExpr 0x201ff785b50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |   | `-CStyleCastExpr 0x201ff785b28 <col:18, col:26> 'void *' <NullToPointer>
|   |   |   `-IntegerLiteral 0x201ff785ae8 <col:26> 'int' 0
|   |   |-UnaryOperator 0x201ff785b98 <.//openssl//file_jk/before\crypto\asn1\a_mbstr.c:263:32, col:33> 'int' prefix '-'
|   |   | `-IntegerLiteral 0x201ff785b70 <col:33> 'int' 1
|   |   `-ImplicitCastExpr 0x201ff785c20 <col:36> 'unsigned long' <LValueToRValue>
|   |     `-DeclRefExpr 0x201ff785bb0 <col:36> 'unsigned long' lvalue ParmVar 0x201ff785648 'value' 'unsigned long'
|   `-ReturnStmt 0x201ff785c90 <line:264:5, col:12>
|     `-IntegerLiteral 0x201ff785c68 <col:12> 'int' 1
|-FunctionDecl 0x201ff785e38 prev 0x201ff772b78 <line:272:1, line:290:1> line:272:12 used type_str 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x201ff785ce8 <col:21, col:35> col:35 used value 'unsigned long'
| |-ParmVarDecl 0x201ff785d68 <col:42, col:48> col:48 used arg 'void *'
| `-CompoundStmt 0x201ff783770 <line:273:1, line:290:1>
|   |-DeclStmt 0x201ff785f68 <line:274:5, col:24>
|   | `-VarDecl 0x201ff785f00 <col:5, col:19> col:19 used types 'unsigned long'
|   |-BinaryOperator 0x201ff786080 <line:275:5, col:35> 'unsigned long' '='
|   | |-DeclRefExpr 0x201ff785f80 <col:5> 'unsigned long' lvalue Var 0x201ff785f00 'types' 'unsigned long'
|   | `-ImplicitCastExpr 0x201ff786068 <col:13, col:35> 'unsigned long' <LValueToRValue>
|   |   `-UnaryOperator 0x201ff786050 <col:13, col:35> 'unsigned long' lvalue prefix '*' cannot overflow
|   |     `-ParenExpr 0x201ff786030 <col:14, col:35> 'unsigned long *'
|   |       `-CStyleCastExpr 0x201ff786008 <col:15, col:32> 'unsigned long *' <BitCast>
|   |         `-ImplicitCastExpr 0x201ff785ff0 <col:32> 'void *' <LValueToRValue> part_of_explicit_cast
|   |           `-DeclRefExpr 0x201ff785fb8 <col:32> 'void *' lvalue ParmVar 0x201ff785d68 'arg' 'void *'
|   |-IfStmt 0x201ff783618 <line:286:5, line:287:17>
|   | |-UnaryOperator 0x201ff7835b0 <line:286:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x201ff783598 <col:10> 'unsigned long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x201ff783578 <col:10> 'unsigned long' lvalue Var 0x201ff785f00 'types' 'unsigned long'
|   | `-ReturnStmt 0x201ff783608 <line:287:9, col:17>
|   |   `-UnaryOperator 0x201ff7835f0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x201ff7835c8 <col:17> 'int' 1
|   |-BinaryOperator 0x201ff783718 <line:288:5, col:31> 'unsigned long' '='
|   | |-UnaryOperator 0x201ff7836c8 <col:5, col:27> 'unsigned long' lvalue prefix '*' cannot overflow
|   | | `-ParenExpr 0x201ff7836a8 <col:6, col:27> 'unsigned long *'
|   | |   `-CStyleCastExpr 0x201ff783680 <col:7, col:24> 'unsigned long *' <BitCast>
|   | |     `-ImplicitCastExpr 0x201ff783668 <col:24> 'void *' <LValueToRValue> part_of_explicit_cast
|   | |       `-DeclRefExpr 0x201ff783630 <col:24> 'void *' lvalue ParmVar 0x201ff785d68 'arg' 'void *'
|   | `-ImplicitCastExpr 0x201ff783700 <col:31> 'unsigned long' <LValueToRValue>
|   |   `-DeclRefExpr 0x201ff7836e0 <col:31> 'unsigned long' lvalue Var 0x201ff785f00 'types' 'unsigned long'
|   `-ReturnStmt 0x201ff783760 <line:289:5, col:12>
|     `-IntegerLiteral 0x201ff783738 <col:12> 'int' 1
|-FunctionDecl 0x201ff783910 prev 0x201ff772da8 <line:294:1, line:302:1> line:294:12 used cpy_asc 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x201ff7837c0 <col:20, col:34> col:34 used value 'unsigned long'
| |-ParmVarDecl 0x201ff783840 <col:41, col:47> col:47 used arg 'void *'
| `-CompoundStmt 0x201ff783e08 <line:295:1, line:302:1>
|   |-DeclStmt 0x201ff783ae0 <line:296:5, col:26>
|   | |-VarDecl 0x201ff7839e0 <col:5, col:21> col:21 used p 'unsigned char **'
|   | `-VarDecl 0x201ff783a60 <col:5, col:25> col:25 used q 'unsigned char *'
|   |-BinaryOperator 0x201ff783b80 <line:297:5, col:9> 'unsigned char **' '='
|   | |-DeclRefExpr 0x201ff783af8 <col:5> 'unsigned char **' lvalue Var 0x201ff7839e0 'p' 'unsigned char **'
|   | `-ImplicitCastExpr 0x201ff783b68 <col:9> 'unsigned char **' <BitCast>
|   |   `-ImplicitCastExpr 0x201ff783b50 <col:9> 'void *' <LValueToRValue>
|   |     `-DeclRefExpr 0x201ff783b30 <col:9> 'void *' lvalue ParmVar 0x201ff783840 'arg' 'void *'
|   |-BinaryOperator 0x201ff783c40 <line:298:5, col:10> 'unsigned char *' '='
|   | |-DeclRefExpr 0x201ff783ba0 <col:5> 'unsigned char *' lvalue Var 0x201ff783a60 'q' 'unsigned char *'
|   | `-ImplicitCastExpr 0x201ff783c28 <col:9, col:10> 'unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x201ff783c10 <col:9, col:10> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x201ff783bf8 <col:10> 'unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x201ff783bd8 <col:10> 'unsigned char **' lvalue Var 0x201ff7839e0 'p' 'unsigned char **'
|   |-BinaryOperator 0x201ff783d28 <line:299:5, col:25> 'unsigned char' '='
|   | |-UnaryOperator 0x201ff783c98 <col:5, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x201ff783c80 <col:6> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x201ff783c60 <col:6> 'unsigned char *' lvalue Var 0x201ff783a60 'q' 'unsigned char *'
|   | `-CStyleCastExpr 0x201ff783d00 <col:10, col:25> 'unsigned char' <IntegralCast>
|   |   `-ImplicitCastExpr 0x201ff783ce8 <col:25> 'unsigned long' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x201ff783cb0 <col:25> 'unsigned long' lvalue ParmVar 0x201ff7837c0 'value' 'unsigned long'
|   |-UnaryOperator 0x201ff783db8 <line:300:5, col:9> 'unsigned char *' postfix '++'
|   | `-ParenExpr 0x201ff783d98 <col:5, col:8> 'unsigned char *' lvalue
|   |   `-UnaryOperator 0x201ff783d80 <col:6, col:7> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x201ff783d68 <col:7> 'unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x201ff783d48 <col:7> 'unsigned char **' lvalue Var 0x201ff7839e0 'p' 'unsigned char **'
|   `-ReturnStmt 0x201ff783df8 <line:301:5, col:12>
|     `-IntegerLiteral 0x201ff783dd0 <col:12> 'int' 1
|-FunctionDecl 0x201ff783fb0 prev 0x201ff772fd8 <line:306:1, line:315:1> line:306:12 used cpy_bmp 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x201ff783e60 <col:20, col:34> col:34 used value 'unsigned long'
| |-ParmVarDecl 0x201ff783ee0 <col:41, col:47> col:47 used arg 'void *'
| `-CompoundStmt 0x201ff77e718 <line:307:1, line:315:1>
|   |-DeclStmt 0x201ff784180 <line:308:5, col:26>
|   | |-VarDecl 0x201ff784080 <col:5, col:21> col:21 used p 'unsigned char **'
|   | `-VarDecl 0x201ff784100 <col:5, col:25> col:25 used q 'unsigned char *'
|   |-BinaryOperator 0x201ff77e1e0 <line:309:5, col:9> 'unsigned char **' '='
|   | |-DeclRefExpr 0x201ff784198 <col:5> 'unsigned char **' lvalue Var 0x201ff784080 'p' 'unsigned char **'
|   | `-ImplicitCastExpr 0x201ff77e1c8 <col:9> 'unsigned char **' <BitCast>
|   |   `-ImplicitCastExpr 0x201ff77e1b0 <col:9> 'void *' <LValueToRValue>
|   |     `-DeclRefExpr 0x201ff77e190 <col:9> 'void *' lvalue ParmVar 0x201ff783ee0 'arg' 'void *'
|   |-BinaryOperator 0x201ff77e2a0 <line:310:5, col:10> 'unsigned char *' '='
|   | |-DeclRefExpr 0x201ff77e200 <col:5> 'unsigned char *' lvalue Var 0x201ff784100 'q' 'unsigned char *'
|   | `-ImplicitCastExpr 0x201ff77e288 <col:9, col:10> 'unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x201ff77e270 <col:9, col:10> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x201ff77e258 <col:10> 'unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x201ff77e238 <col:10> 'unsigned char **' lvalue Var 0x201ff784080 'p' 'unsigned char **'
|   |-BinaryOperator 0x201ff77e490 <line:311:5, col:47> 'unsigned char' '='
|   | |-UnaryOperator 0x201ff77e2f8 <col:5, col:7> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x201ff77e2e0 <col:6, col:7> 'unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x201ff77e2c0 <col:6> 'unsigned char *' lvalue Var 0x201ff784100 'q' 'unsigned char *'
|   | `-CStyleCastExpr 0x201ff77e468 <col:12, col:47> 'unsigned char' <IntegralCast>
|   |   `-ParenExpr 0x201ff77e448 <col:27, col:47> 'unsigned long'
|   |     `-BinaryOperator 0x201ff77e3f0 <col:28, col:43> 'unsigned long' '&'
|   |       |-ParenExpr 0x201ff77e390 <col:28, col:39> 'unsigned long'
|   |       | `-BinaryOperator 0x201ff77e370 <col:29, col:38> 'unsigned long' '>>'
|   |       |   |-ImplicitCastExpr 0x201ff77e358 <col:29> 'unsigned long' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x201ff77e310 <col:29> 'unsigned long' lvalue ParmVar 0x201ff783e60 'value' 'unsigned long'
|   |       |   `-IntegerLiteral 0x201ff77e330 <col:38> 'int' 8
|   |       `-ImplicitCastExpr 0x201ff77e3d8 <col:43> 'unsigned long' <IntegralCast>
|   |         `-IntegerLiteral 0x201ff77e3b0 <col:43> 'int' 255
|   |-BinaryOperator 0x201ff77e618 <line:312:5, col:38> 'unsigned char' '='
|   | |-UnaryOperator 0x201ff77e4e8 <col:5, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x201ff77e4d0 <col:6> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x201ff77e4b0 <col:6> 'unsigned char *' lvalue Var 0x201ff784100 'q' 'unsigned char *'
|   | `-CStyleCastExpr 0x201ff77e5f0 <col:10, col:38> 'unsigned char' <IntegralCast>
|   |   `-ParenExpr 0x201ff77e5d0 <col:25, col:38> 'unsigned long'
|   |     `-BinaryOperator 0x201ff77e578 <col:26, col:34> 'unsigned long' '&'
|   |       |-ImplicitCastExpr 0x201ff77e548 <col:26> 'unsigned long' <LValueToRValue>
|   |       | `-DeclRefExpr 0x201ff77e500 <col:26> 'unsigned long' lvalue ParmVar 0x201ff783e60 'value' 'unsigned long'
|   |       `-ImplicitCastExpr 0x201ff77e560 <col:34> 'unsigned long' <IntegralCast>
|   |         `-IntegerLiteral 0x201ff77e520 <col:34> 'int' 255
|   |-CompoundAssignOperator 0x201ff77e6b0 <line:313:5, col:11> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |-UnaryOperator 0x201ff77e670 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x201ff77e658 <col:6> 'unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x201ff77e638 <col:6> 'unsigned char **' lvalue Var 0x201ff784080 'p' 'unsigned char **'
|   | `-IntegerLiteral 0x201ff77e688 <col:11> 'int' 2
|   `-ReturnStmt 0x201ff77e708 <line:314:5, col:12>
|     `-IntegerLiteral 0x201ff77e6e0 <col:12> 'int' 1
|-FunctionDecl 0x201ff77e8c8 prev 0x201ff77a2a0 <line:319:1, line:330:1> line:319:12 used cpy_univ 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x201ff77e778 <col:21, col:35> col:35 used value 'unsigned long'
| |-ParmVarDecl 0x201ff77e7f8 <col:42, col:48> col:48 used arg 'void *'
| `-CompoundStmt 0x201ff780480 <line:320:1, line:330:1>
|   |-DeclStmt 0x201ff77ea98 <line:321:5, col:26>
|   | |-VarDecl 0x201ff77e998 <col:5, col:21> col:21 used p 'unsigned char **'
|   | `-VarDecl 0x201ff77ea18 <col:5, col:25> col:25 used q 'unsigned char *'
|   |-BinaryOperator 0x201ff77eb38 <line:322:5, col:9> 'unsigned char **' '='
|   | |-DeclRefExpr 0x201ff77eab0 <col:5> 'unsigned char **' lvalue Var 0x201ff77e998 'p' 'unsigned char **'
|   | `-ImplicitCastExpr 0x201ff77eb20 <col:9> 'unsigned char **' <BitCast>
|   |   `-ImplicitCastExpr 0x201ff77eb08 <col:9> 'void *' <LValueToRValue>
|   |     `-DeclRefExpr 0x201ff77eae8 <col:9> 'void *' lvalue ParmVar 0x201ff77e7f8 'arg' 'void *'
|   |-BinaryOperator 0x201ff77ebf8 <line:323:5, col:10> 'unsigned char *' '='
|   | |-DeclRefExpr 0x201ff77eb58 <col:5> 'unsigned char *' lvalue Var 0x201ff77ea18 'q' 'unsigned char *'
|   | `-ImplicitCastExpr 0x201ff77ebe0 <col:9, col:10> 'unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x201ff77ebc8 <col:9, col:10> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x201ff77ebb0 <col:10> 'unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x201ff77eb90 <col:10> 'unsigned char **' lvalue Var 0x201ff77e998 'p' 'unsigned char **'
|   |-BinaryOperator 0x201ff77ede8 <line:324:5, col:48> 'unsigned char' '='
|   | |-UnaryOperator 0x201ff77ec50 <col:5, col:7> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x201ff77ec38 <col:6, col:7> 'unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x201ff77ec18 <col:6> 'unsigned char *' lvalue Var 0x201ff77ea18 'q' 'unsigned char *'
|   | `-CStyleCastExpr 0x201ff77edc0 <col:12, col:48> 'unsigned char' <IntegralCast>
|   |   `-ParenExpr 0x201ff77eda0 <col:27, col:48> 'unsigned long'
|   |     `-BinaryOperator 0x201ff77ed48 <col:28, col:44> 'unsigned long' '&'
|   |       |-ParenExpr 0x201ff77ece8 <col:28, col:40> 'unsigned long'
|   |       | `-BinaryOperator 0x201ff77ecc8 <col:29, col:38> 'unsigned long' '>>'
|   |       |   |-ImplicitCastExpr 0x201ff77ecb0 <col:29> 'unsigned long' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x201ff77ec68 <col:29> 'unsigned long' lvalue ParmVar 0x201ff77e778 'value' 'unsigned long'
|   |       |   `-IntegerLiteral 0x201ff77ec88 <col:38> 'int' 24
|   |       `-ImplicitCastExpr 0x201ff77ed30 <col:44> 'unsigned long' <IntegralCast>
|   |         `-IntegerLiteral 0x201ff77ed08 <col:44> 'int' 255
|   |-BinaryOperator 0x201ff77efd8 <line:325:5, col:48> 'unsigned char' '='
|   | |-UnaryOperator 0x201ff77ee40 <col:5, col:7> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x201ff77ee28 <col:6, col:7> 'unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x201ff77ee08 <col:6> 'unsigned char *' lvalue Var 0x201ff77ea18 'q' 'unsigned char *'
|   | `-CStyleCastExpr 0x201ff77efb0 <col:12, col:48> 'unsigned char' <IntegralCast>
|   |   `-ParenExpr 0x201ff77ef90 <col:27, col:48> 'unsigned long'
|   |     `-BinaryOperator 0x201ff77ef38 <col:28, col:44> 'unsigned long' '&'
|   |       |-ParenExpr 0x201ff77eed8 <col:28, col:40> 'unsigned long'
|   |       | `-BinaryOperator 0x201ff77eeb8 <col:29, col:38> 'unsigned long' '>>'
|   |       |   |-ImplicitCastExpr 0x201ff77eea0 <col:29> 'unsigned long' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x201ff77ee58 <col:29> 'unsigned long' lvalue ParmVar 0x201ff77e778 'value' 'unsigned long'
|   |       |   `-IntegerLiteral 0x201ff77ee78 <col:38> 'int' 16
|   |       `-ImplicitCastExpr 0x201ff77ef20 <col:44> 'unsigned long' <IntegralCast>
|   |         `-IntegerLiteral 0x201ff77eef8 <col:44> 'int' 255
|   |-BinaryOperator 0x201ff7801f8 <line:326:5, col:47> 'unsigned char' '='
|   | |-UnaryOperator 0x201ff77f030 <col:5, col:7> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x201ff77f018 <col:6, col:7> 'unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x201ff77eff8 <col:6> 'unsigned char *' lvalue Var 0x201ff77ea18 'q' 'unsigned char *'
|   | `-CStyleCastExpr 0x201ff7801d0 <col:12, col:47> 'unsigned char' <IntegralCast>
|   |   `-ParenExpr 0x201ff7801b0 <col:27, col:47> 'unsigned long'
|   |     `-BinaryOperator 0x201ff77f128 <col:28, col:43> 'unsigned long' '&'
|   |       |-ParenExpr 0x201ff77f0c8 <col:28, col:39> 'unsigned long'
|   |       | `-BinaryOperator 0x201ff77f0a8 <col:29, col:38> 'unsigned long' '>>'
|   |       |   |-ImplicitCastExpr 0x201ff77f090 <col:29> 'unsigned long' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x201ff77f048 <col:29> 'unsigned long' lvalue ParmVar 0x201ff77e778 'value' 'unsigned long'
|   |       |   `-IntegerLiteral 0x201ff77f068 <col:38> 'int' 8
|   |       `-ImplicitCastExpr 0x201ff77f110 <col:43> 'unsigned long' <IntegralCast>
|   |         `-IntegerLiteral 0x201ff77f0e8 <col:43> 'int' 255
|   |-BinaryOperator 0x201ff780380 <line:327:5, col:38> 'unsigned char' '='
|   | |-UnaryOperator 0x201ff780250 <col:5, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x201ff780238 <col:6> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x201ff780218 <col:6> 'unsigned char *' lvalue Var 0x201ff77ea18 'q' 'unsigned char *'
|   | `-CStyleCastExpr 0x201ff780358 <col:10, col:38> 'unsigned char' <IntegralCast>
|   |   `-ParenExpr 0x201ff780338 <col:25, col:38> 'unsigned long'
|   |     `-BinaryOperator 0x201ff7802e0 <col:26, col:34> 'unsigned long' '&'
|   |       |-ImplicitCastExpr 0x201ff7802b0 <col:26> 'unsigned long' <LValueToRValue>
|   |       | `-DeclRefExpr 0x201ff780268 <col:26> 'unsigned long' lvalue ParmVar 0x201ff77e778 'value' 'unsigned long'
|   |       `-ImplicitCastExpr 0x201ff7802c8 <col:34> 'unsigned long' <IntegralCast>
|   |         `-IntegerLiteral 0x201ff780288 <col:34> 'int' 255
|   |-CompoundAssignOperator 0x201ff780418 <line:328:5, col:11> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |-UnaryOperator 0x201ff7803d8 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x201ff7803c0 <col:6> 'unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x201ff7803a0 <col:6> 'unsigned char **' lvalue Var 0x201ff77e998 'p' 'unsigned char **'
|   | `-IntegerLiteral 0x201ff7803f0 <col:11> 'int' 4
|   `-ReturnStmt 0x201ff780470 <line:329:5, col:12>
|     `-IntegerLiteral 0x201ff780448 <col:12> 'int' 1
|-FunctionDecl 0x201ff780640 prev 0x201ff77a4d0 <line:334:1, line:343:1> line:334:12 used cpy_utf8 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x201ff7804f0 <col:21, col:35> col:35 used value 'unsigned long'
| |-ParmVarDecl 0x201ff780570 <col:42, col:48> col:48 used arg 'void *'
| `-CompoundStmt 0x201ff780b50 <line:335:1, line:343:1>
|   |-DeclStmt 0x201ff780778 <line:336:5, col:22>
|   | `-VarDecl 0x201ff780710 <col:5, col:21> col:21 used p 'unsigned char **'
|   |-DeclStmt 0x201ff780810 <line:337:5, col:12>
|   | `-VarDecl 0x201ff7807a8 <col:5, col:9> col:9 used ret 'int'
|   |-BinaryOperator 0x201ff7808b0 <line:338:5, col:9> 'unsigned char **' '='
|   | |-DeclRefExpr 0x201ff780828 <col:5> 'unsigned char **' lvalue Var 0x201ff780710 'p' 'unsigned char **'
|   | `-ImplicitCastExpr 0x201ff780898 <col:9> 'unsigned char **' <BitCast>
|   |   `-ImplicitCastExpr 0x201ff780880 <col:9> 'void *' <LValueToRValue>
|   |     `-DeclRefExpr 0x201ff780860 <col:9> 'void *' lvalue ParmVar 0x201ff780570 'arg' 'void *'
|   |-BinaryOperator 0x201ff780a40 <line:340:5, col:36> 'int' '='
|   | |-DeclRefExpr 0x201ff7808d0 <col:5> 'int' lvalue Var 0x201ff7807a8 'ret' 'int'
|   | `-CallExpr 0x201ff7809d8 <col:11, col:36> 'int'
|   |   |-ImplicitCastExpr 0x201ff7809c0 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x201ff780908 <col:11> 'int ()' Function 0x201ff785a00 'UTF8_putc' 'int ()'
|   |   |-ImplicitCastExpr 0x201ff780a10 <col:21, col:22> 'unsigned char *' <LValueToRValue>
|   |   | `-UnaryOperator 0x201ff780960 <col:21, col:22> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |   |   `-ImplicitCastExpr 0x201ff780948 <col:22> 'unsigned char **' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x201ff780928 <col:22> 'unsigned char **' lvalue Var 0x201ff780710 'p' 'unsigned char **'
|   |   |-IntegerLiteral 0x201ff780978 <col:25> 'int' 255
|   |   `-ImplicitCastExpr 0x201ff780a28 <col:31> 'unsigned long' <LValueToRValue>
|   |     `-DeclRefExpr 0x201ff7809a0 <col:31> 'unsigned long' lvalue ParmVar 0x201ff7804f0 'value' 'unsigned long'
|   |-CompoundAssignOperator 0x201ff780ae8 <line:341:5, col:11> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |-UnaryOperator 0x201ff780a98 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x201ff780a80 <col:6> 'unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x201ff780a60 <col:6> 'unsigned char **' lvalue Var 0x201ff780710 'p' 'unsigned char **'
|   | `-ImplicitCastExpr 0x201ff780ad0 <col:11> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x201ff780ab0 <col:11> 'int' lvalue Var 0x201ff7807a8 'ret' 'int'
|   `-ReturnStmt 0x201ff780b40 <line:342:5, col:12>
|     `-IntegerLiteral 0x201ff780b18 <col:12> 'int' 1
|-FunctionDecl 0x201ff780c58 prev 0x201ff77a818 <line:346:1, line:376:1> line:346:12 used is_printable 'int (unsigned long)' static
| |-ParmVarDecl 0x201ff780ba8 <col:25, col:39> col:39 used value 'unsigned long'
| `-CompoundStmt 0x201ff7818b0 <line:347:1, line:376:1>
|   |-DeclStmt 0x201ff780d80 <line:348:5, col:11>
|   | `-VarDecl 0x201ff780d18 <col:5, col:9> col:9 used ch 'int'
|   |-IfStmt 0x201ff780e68 <line:349:5, line:350:16>
|   | |-BinaryOperator 0x201ff780e10 <line:349:9, col:17> 'int' '>'
|   | | |-ImplicitCastExpr 0x201ff780de0 <col:9> 'unsigned long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x201ff780d98 <col:9> 'unsigned long' lvalue ParmVar 0x201ff780ba8 'value' 'unsigned long'
|   | | `-ImplicitCastExpr 0x201ff780df8 <col:17> 'unsigned long' <IntegralCast>
|   | |   `-IntegerLiteral 0x201ff780db8 <col:17> 'int' 127
|   | `-ReturnStmt 0x201ff780e58 <line:350:9, col:16>
|   |   `-IntegerLiteral 0x201ff780e30 <col:16> 'int' 0
|   |-BinaryOperator 0x201ff780f30 <line:351:5, col:15> 'int' '='
|   | |-DeclRefExpr 0x201ff780e80 <col:5> 'int' lvalue Var 0x201ff780d18 'ch' 'int'
|   | `-CStyleCastExpr 0x201ff780f08 <col:10, col:15> 'int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x201ff780ef0 <col:15> 'unsigned long' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x201ff780eb8 <col:15> 'unsigned long' lvalue ParmVar 0x201ff780ba8 'value' 'unsigned long'
|   |-IfStmt 0x201ff7810c8 <line:357:5, line:358:16>
|   | |-BinaryOperator 0x201ff781070 <line:357:9, col:34> 'int' '&&'
|   | | |-ParenExpr 0x201ff780fc0 <col:9, col:19> 'int'
|   | | | `-BinaryOperator 0x201ff780fa0 <col:10, col:16> 'int' '>='
|   | | |   |-ImplicitCastExpr 0x201ff780f88 <col:10> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x201ff780f50 <col:10> 'int' lvalue Var 0x201ff780d18 'ch' 'int'
|   | | |   `-CharacterLiteral 0x201ff780f70 <col:16> 'int' 97
|   | | `-ParenExpr 0x201ff781050 <col:24, col:34> 'int'
|   | |   `-BinaryOperator 0x201ff781030 <col:25, col:31> 'int' '<='
|   | |     |-ImplicitCastExpr 0x201ff781018 <col:25> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x201ff780fe0 <col:25> 'int' lvalue Var 0x201ff780d18 'ch' 'int'
|   | |     `-CharacterLiteral 0x201ff781000 <col:31> 'int' 122
|   | `-ReturnStmt 0x201ff7810b8 <line:358:9, col:16>
|   |   `-IntegerLiteral 0x201ff781090 <col:16> 'int' 1
|   |-IfStmt 0x201ff781270 <line:359:5, line:360:16>
|   | |-BinaryOperator 0x201ff781218 <line:359:9, col:34> 'int' '&&'
|   | | |-ParenExpr 0x201ff781150 <col:9, col:19> 'int'
|   | | | `-BinaryOperator 0x201ff781130 <col:10, col:16> 'int' '>='
|   | | |   |-ImplicitCastExpr 0x201ff781118 <col:10> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x201ff7810e0 <col:10> 'int' lvalue Var 0x201ff780d18 'ch' 'int'
|   | | |   `-CharacterLiteral 0x201ff781100 <col:16> 'int' 65
|   | | `-ParenExpr 0x201ff7811f8 <col:24, col:34> 'int'
|   | |   `-BinaryOperator 0x201ff7811d8 <col:25, col:31> 'int' '<='
|   | |     |-ImplicitCastExpr 0x201ff7811c0 <col:25> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x201ff781170 <col:25> 'int' lvalue Var 0x201ff780d18 'ch' 'int'
|   | |     `-CharacterLiteral 0x201ff781190 <col:31> 'int' 90
|   | `-ReturnStmt 0x201ff781260 <line:360:9, col:16>
|   |   `-IntegerLiteral 0x201ff781238 <col:16> 'int' 1
|   |-IfStmt 0x201ff781400 <line:361:5, line:362:16>
|   | |-BinaryOperator 0x201ff7813a8 <line:361:9, col:34> 'int' '&&'
|   | | |-ParenExpr 0x201ff7812f8 <col:9, col:19> 'int'
|   | | | `-BinaryOperator 0x201ff7812d8 <col:10, col:16> 'int' '>='
|   | | |   |-ImplicitCastExpr 0x201ff7812c0 <col:10> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x201ff781288 <col:10> 'int' lvalue Var 0x201ff780d18 'ch' 'int'
|   | | |   `-CharacterLiteral 0x201ff7812a8 <col:16> 'int' 48
|   | | `-ParenExpr 0x201ff781388 <col:24, col:34> 'int'
|   | |   `-BinaryOperator 0x201ff781368 <col:25, col:31> 'int' '<='
|   | |     |-ImplicitCastExpr 0x201ff781350 <col:25> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x201ff781318 <col:25> 'int' lvalue Var 0x201ff780d18 'ch' 'int'
|   | |     `-CharacterLiteral 0x201ff781338 <col:31> 'int' 57
|   | `-ReturnStmt 0x201ff7813f0 <line:362:9, col:16>
|   |   `-IntegerLiteral 0x201ff7813c8 <col:16> 'int' 1
|   |-IfStmt 0x201ff781860 <line:363:5, line:364:16>
|   | |-BinaryOperator 0x201ff781808 <line:363:9, col:48> 'int' '||'
|   | | |-ParenExpr 0x201ff781488 <col:9, col:19> 'int'
|   | | | `-BinaryOperator 0x201ff781468 <col:10, col:16> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x201ff781450 <col:10> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x201ff781418 <col:10> 'int' lvalue Var 0x201ff780d18 'ch' 'int'
|   | | |   `-CharacterLiteral 0x201ff781438 <col:16> 'int' 32
|   | | `-CallExpr 0x201ff781790 <col:24, col:48> 'char *'
|   | |   |-ImplicitCastExpr 0x201ff781778 <col:24> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x201ff781668 <col:24> 'char *(const char *, int)' Function 0x201ff7814e8 'strchr' 'char *(const char *, int)'
|   | |   |-ImplicitCastExpr 0x201ff7817d8 <col:31> 'const char *' <NoOp>
|   | |   | `-ImplicitCastExpr 0x201ff7817c0 <col:31> 'char *' <ArrayToPointerDecay>
|   | |   |   `-StringLiteral 0x201ff7816d8 <col:31> 'char [12]' lvalue "'()+,-./:=?"
|   | |   `-ImplicitCastExpr 0x201ff7817f0 <col:46> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x201ff781700 <col:46> 'int' lvalue Var 0x201ff780d18 'ch' 'int'
|   | `-ReturnStmt 0x201ff781850 <line:364:9, col:16>
|   |   `-IntegerLiteral 0x201ff781828 <col:16> 'int' 1
|   `-ReturnStmt 0x201ff7818a0 <line:375:5, col:12>
|     `-IntegerLiteral 0x201ff781878 <col:12> 'int' 0
|-FunctionDecl 0x201ff7814e8 <line:363:24> col:24 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x201ff781588 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x201ff7815f0 <<invalid sloc>> <invalid sloc> 'int'
`-FunctionDecl 0x201ff7819c8 prev 0x201ff77a690 <line:379:1, line:395:1> line:379:12 used is_numeric 'int (unsigned long)' static
  |-ParmVarDecl 0x201ff781918 <col:23, col:37> col:37 used value 'unsigned long'
  `-CompoundStmt 0x201ff781eb0 <line:380:1, line:395:1>
    |-DeclStmt 0x201ff781af0 <line:381:5, col:11>
    | `-VarDecl 0x201ff781a88 <col:5, col:9> col:9 used ch 'int'
    |-IfStmt 0x201ff781bd8 <line:382:5, line:383:16>
    | |-BinaryOperator 0x201ff781b80 <line:382:9, col:17> 'int' '>'
    | | |-ImplicitCastExpr 0x201ff781b50 <col:9> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x201ff781b08 <col:9> 'unsigned long' lvalue ParmVar 0x201ff781918 'value' 'unsigned long'
    | | `-ImplicitCastExpr 0x201ff781b68 <col:17> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x201ff781b28 <col:17> 'int' 127
    | `-ReturnStmt 0x201ff781bc8 <line:383:9, col:16>
    |   `-IntegerLiteral 0x201ff781ba0 <col:16> 'int' 0
    |-BinaryOperator 0x201ff781ca0 <line:384:5, col:15> 'int' '='
    | |-DeclRefExpr 0x201ff781bf0 <col:5> 'int' lvalue Var 0x201ff781a88 'ch' 'int'
    | `-CStyleCastExpr 0x201ff781c78 <col:10, col:15> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x201ff781c60 <col:15> 'unsigned long' <LValueToRValue> part_of_explicit_cast
    |     `-DeclRefExpr 0x201ff781c28 <col:15> 'unsigned long' lvalue ParmVar 0x201ff781918 'value' 'unsigned long'
    |-IfStmt 0x201ff781e60 <line:386:5, line:387:16>
    | |-BinaryOperator 0x201ff781e08 <line:386:9, col:31> 'int' '&&'
    | | |-UnaryOperator 0x201ff781d80 <col:9, col:20> 'int' prefix '!' cannot overflow
    | | | `-CallExpr 0x201ff781d40 <col:10, col:20> 'int'
    | | |   |-ImplicitCastExpr 0x201ff781d28 <col:10> 'int (*)(int)' <FunctionToPointerDecay>
    | | |   | `-DeclRefExpr 0x201ff781cc0 <col:10> 'int (int)' Function 0x201ff75c6b0 'isdigit' 'int (int)'
    | | |   `-ImplicitCastExpr 0x201ff781d68 <col:18> 'int' <LValueToRValue>
    | | |     `-DeclRefExpr 0x201ff781ce0 <col:18> 'int' lvalue Var 0x201ff781a88 'ch' 'int'
    | | `-BinaryOperator 0x201ff781de8 <col:25, col:31> 'int' '!='
    | |   |-ImplicitCastExpr 0x201ff781dd0 <col:25> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x201ff781d98 <col:25> 'int' lvalue Var 0x201ff781a88 'ch' 'int'
    | |   `-CharacterLiteral 0x201ff781db8 <col:31> 'int' 32
    | `-ReturnStmt 0x201ff781e50 <line:387:9, col:16>
    |   `-IntegerLiteral 0x201ff781e28 <col:16> 'int' 0
    `-ReturnStmt 0x201ff781ea0 <line:394:5, col:12>
      `-IntegerLiteral 0x201ff781e78 <col:12> 'int' 1
