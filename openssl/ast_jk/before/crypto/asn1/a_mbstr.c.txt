TranslationUnitDecl 0x20e4fae6ff8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x20e4fae7890 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x20e4fae7590 '__int128'
|-TypedefDecl 0x20e4fae7900 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x20e4fae75b0 'unsigned __int128'
|-TypedefDecl 0x20e4fae7c38 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x20e4fae79f0 'struct __NSConstantString_tag'
|   `-Record 0x20e4fae7958 '__NSConstantString_tag'
|-TypedefDecl 0x20e4fae7ca8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x20e4fae71d0 'unsigned long long'
|-TypedefDecl 0x20e4fae7d40 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x20e4fae7d00 'char *'
|   `-BuiltinType 0x20e4fae7090 'char'
|-TypedefDecl 0x20e4fae7db0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x20e4fae7d00 'char *'
|   `-BuiltinType 0x20e4fae7090 'char'
|-TypedefDecl 0x20e4fae7e70 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x20e4fae71d0 'unsigned long long'
|-TypedefDecl 0x20e4fae7ee0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x20e4fae7d00 'char *'
|   `-BuiltinType 0x20e4fae7090 'char'
|-FunctionDecl 0x20e515de3e0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x20e515de480 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x20e515de4f0 <col:21> Implicit
|-FunctionDecl 0x20e515de548 prev 0x20e515de3e0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x20e515de270 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x20e515de638 <col:21> Inherited Implicit
|-TypedefDecl 0x20e515de678 prev 0x20e4fae7ca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x20e4fae71d0 'unsigned long long'
|-TypedefDecl 0x20e515de720 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x20e515de6f0 'size_t' sugar
|   |-Typedef 0x20e515de678 'size_t'
|   `-BuiltinType 0x20e4fae71d0 'unsigned long long'
|-TypedefDecl 0x20e515de790 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x20e4fae7130 'long long'
|-TypedefDecl 0x20e515de800 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x20e4fae7130 'long long'
|-TypedefDecl 0x20e515de870 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x20e4fae7170 'unsigned short'
|-TypedefDecl 0x20e515de8e0 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x20e4fae7170 'unsigned short'
|-TypedefDecl 0x20e515de950 <line:542:1, col:24> col:24 referenced wctype_t 'unsigned short'
| `-BuiltinType 0x20e4fae7170 'unsigned short'
|-TypedefDecl 0x20e515de9c0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x20e4fae70f0 'int'
|-TypedefDecl 0x20e515dea30 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x20e4fae7110 'long'
|-TypedefDecl 0x20e515deaa0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x20e4fae7130 'long long'
|-TypedefDecl 0x20e515deb30 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x20e515deb00 '__time64_t' sugar
|   |-Typedef 0x20e515deaa0 '__time64_t'
|   `-BuiltinType 0x20e4fae7130 'long long'
|-FunctionDecl 0x20e515deca8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x20e515deec8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x20e5161dc00 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x20e515df008 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x20e515df080 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x20e515df0f8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x20e515df178 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x20e5161d9a0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x20e5161dce0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x20e5161dda0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x20e5161df10 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x20e5161dec0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x20e5161de60 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x20e5161dd80 'struct threadlocaleinfostruct'
|       `-Record 0x20e51626a30 'threadlocaleinfostruct'
|-TypedefDecl 0x20e5161e020 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x20e5161dfd0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x20e5161df70 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x20e5161de40 'struct threadmbcinfostruct'
|       `-Record 0x20e5161dda0 'threadmbcinfostruct'
|-RecordDecl 0x20e5161e078 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x20e5161e130 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x20e5161e1f0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x20e5161e280 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x20e5161e310 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x20e5161e3c8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x20e5161e370 'struct localeinfo_struct' sugar
|   `-RecordType 0x20e5161e1d0 'struct localeinfo_struct'
|     `-Record 0x20e5161e130 'localeinfo_struct'
|-TypedefDecl 0x20e5161e4a0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x20e5161e450 'struct localeinfo_struct *'
|   `-ElaboratedType 0x20e5161e370 'struct localeinfo_struct' sugar
|     `-RecordType 0x20e5161e1d0 'struct localeinfo_struct'
|       `-Record 0x20e5161e130 'localeinfo_struct'
|-RecordDecl 0x20e5161e518 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x20e5161e5d0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x20e5161e648 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x20e5161e708 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x20e5161e7a0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x20e5161e810 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x20e5161e8c8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x20e5161e870 'struct localerefcount' sugar
|   `-RecordType 0x20e5161e5b0 'struct localerefcount'
|     `-Record 0x20e5161e518 'localerefcount'
|-RecordDecl 0x20e51626a30 prev 0x20e5161dce0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x20e51626ab0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x20e51626b28 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x20e51626b98 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x20e51626c08 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x20e51626c78 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x20e51626e38 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x20e51626ea8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x20e51626f18 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x20e51626f88 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x20e51626ff8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x20e51627068 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x20e516270c0 parent 0x20e4fae6ff8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x20e51627250 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x20e516272c0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x20e51627330 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x20e516273a0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x20e51627440 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x20e516274b0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x20e516275c0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x20e516276f8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x20e516277a8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x20e51627750 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x20e5161dd80 'struct threadlocaleinfostruct'
|     `-Record 0x20e51626a30 'threadlocaleinfostruct'
|-RecordDecl 0x20e51627840 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x20e51627900 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x20e51627978 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x20e51628a50 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x20e51628ac0 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x20e51628b30 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x20e51628ba0 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x20e51628c10 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x20e51628c80 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x20e51628cf0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x20e51628da0 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x20e51628d50 'struct _iobuf' sugar
|   `-RecordType 0x20e516278e0 'struct _iobuf'
|     `-Record 0x20e51627840 '_iobuf'
|-FunctionDecl 0x20e51628fd8 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x20e516290a8 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x20e4fae7130 'long long'
|-FunctionDecl 0x20e51629288 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e51629110 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x20e51629580 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20e51629360 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x20e516293d8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x20e51629930 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x20e51629660 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x20e516296e0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x20e51629760 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x20e5162cc00 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x20e5162ca90 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x20e5162ce30 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x20e5162ccf0 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x20e5162cfe0 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e5162cf00 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x20e5162d1d0 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20e5162d4c8 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x20e5162d2a0 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x20e5162d320 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x20e5162d680 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e5162d5a0 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x20e5162d830 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e5162d750 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x20e5162d9e0 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e5162d900 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x20e51630bd8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e51630af8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x20e51630d68 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20e516310d0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x20e51630e30 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x20e51630f28 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x20e51631488 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x20e516311b0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x20e51631230 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x20e516312a8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x20e51631648 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e51631568 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x20e51631910 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x20e51631720 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x20e516317a0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x20e5162daa0 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20e5162de98 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x20e5162df38 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x20e5162dfa0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x20e5162e018 prev 0x20e5162de98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x20e5162dc70 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x20e5162dcf0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x20e5162e0c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e5162e540 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x20e5162e270 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x20e5162e2f0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x20e5162e370 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x20e5162e860 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x20e5162e900 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x20e5162e968 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x20e5162e9e0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x20e51632af0 prev 0x20e5162e860 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x20e5162e620 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x20e5162e6a0 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x20e51632be8 <col:40> Inherited printf 2 3
|-FunctionDecl 0x20e51632db0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x20e51632c30 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x20e51632cb0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x20e51633008 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20e51632e90 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x20e51632f08 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x20e51633238 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20e516330e8 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x20e51633530 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x20e51633310 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x20e51633388 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x20e516339c8 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x20e51633a68 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x20e5162eab0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x20e5162eb18 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x20e5162eb80 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x20e5162ec08 prev 0x20e516339c8 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x20e51633610 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x20e51633688 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e51633700 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e51633778 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x20e5162f110 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x20e5162ecf8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x20e5162ed70 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e5162ede8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e5162ee60 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e5162eed8 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x20e5162f5d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x20e5162f300 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x20e5162f380 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x20e5162f3f8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x20e5162f688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e51631b88 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x20e5162f7d0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x20e5162f850 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x20e5162f8d0 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x20e5162f948 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x20e51631f30 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x20e51631fd0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x20e51632038 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x20e516320b0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x20e51632118 prev 0x20e51631f30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x20e51631d68 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x20e51631de8 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x20e516322f8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x20e516321c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e51632738 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e51632438 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x20e516324b8 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x20e51632550 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e516327f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e5162fac0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x20e51632930 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x20e516329b0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x20e5162fdb0 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e5162fb98 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x20e5162fc18 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x20e5162fc90 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e51630110 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x20e5162fe90 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x20e5162ff68 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x20e516304c8 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x20e516301e8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x20e51630268 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x20e516302e8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x20e51630728 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x20e516305a8 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x20e5162bac8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x20e516307f8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x20e51630878 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x20e516308f8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x20e5162bd28 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x20e5162bba8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x20e5162c1e8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x20e5162c288 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x20e5162c2f0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x20e5162c358 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x20e5162c3c0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x20e5162c448 prev 0x20e5162c1e8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x20e5162be30 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x20e5162bea8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e5162bf20 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e5162bf98 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x20e5162c610 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e5162c530 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x20e5162c7a0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20e5162c928 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20e51635ce0 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x20e5162c9f8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x20e51635b30 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x20e51636008 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x20e51635ec0 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x20e516360b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e516362d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e516361f0 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x20e516364f0 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x20e516363a8 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x20e516366a0 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e516365c0 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x20e516368f0 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x20e51636778 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x20e516367f8 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x20e51634b10 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x20e51634bb0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x20e51634c20 <col:40> Implicit printf 1 2
|-FunctionDecl 0x20e51634c88 prev 0x20e51634b10 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x20e516369d0 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x20e51634d78 <col:40> Inherited printf 1 2
|-FunctionDecl 0x20e51634ea8 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20e51634dc8 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x20e516350f8 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20e51634f80 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x20e51634ff8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x20e516352b8 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20e516351d8 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x20e516354d8 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x20e51635390 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x20e51635728 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20e516355b0 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x20e51635628 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x20e516358e8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x20e51635808 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x20e51683090 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x20e516359c0 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x20e51635a40 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x20e51683250 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x20e51683170 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x20e516834e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x20e51683400 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x20e51683588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x20e51683780 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x20e516836a8 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x20e51683910 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20e51683bb8 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x20e51683c58 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x20e51683cc8 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x20e51683d30 prev 0x20e51683bb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x20e51683aa0 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x20e51683f08 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x20e51683dd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e51688320 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516880e8 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x20e51688160 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e516883d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e516885f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20e51688518 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x20e51688848 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516886d0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x20e51688748 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e51688c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x20e516889e0 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x20e51688a60 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x20e51688cb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e51688ee0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20e51688e00 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x20e51685128 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x20e51684fe0 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x20e51685310 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x20e51685760 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x20e516853d8 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x20e51685458 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x20e516854d8 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x20e51685550 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x20e51685be0 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x20e51685850 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x20e516858c8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e51685940 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e516859c0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x20e51681fb0 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20e51685cd0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x20e51685d48 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e51685dc8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x20e51682178 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20e51682098 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x20e51682550 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x20e516825f0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20e51682658 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x20e516826d0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x20e51682738 prev 0x20e51682550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x20e51682310 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x20e51682390 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x20e51682918 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x20e516827e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e51682d08 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e51682a28 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x20e51682aa8 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x20e51682b20 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e51682dc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e51687100 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x20e51682f08 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x20e51687000 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x20e516873f8 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516871e0 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x20e51687260 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x20e516872d8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e51687888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20e516875a0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x20e51687618 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e51687698 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x20e51687940 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e51687f10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e51687b80 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x20e51687bf8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e51687c78 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x20e51687cf0 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e51680fa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e51681300 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20e516810e8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x20e51681160 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e516811e0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x20e51681698 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516813e8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x20e51681460 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516814e0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x20e51681558 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516818f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x20e51681998 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e51681c50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x20e51681ae0 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x20e5168a030 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x20e51681d28 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x20e51681da0 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x20e5168a2b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x20e5168a1d0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x20e5168a358 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e5168a618 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20e5168a4a0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x20e5168a518 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x20e5168aa30 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x20e5168aad0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x20e5168ab38 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x20e5168aba0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20e5168ac20 <col:40> Implicit printf 2 0
|-FunctionDecl 0x20e5168ac88 prev 0x20e5168aa30 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x20e5168a6f0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x20e5168a770 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x20e5168a7e8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20e5168ad88 <col:40> Inherited printf 2 0
|-FunctionDecl 0x20e51689020 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x20e516890c0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x20e51689128 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20e51689190 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20e51689210 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x20e51689278 prev 0x20e51689020 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x20e5168add0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x20e5168ae50 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x20e5168aec8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20e51689378 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x20e516895d8 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x20e516893c0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x20e51689440 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x20e516894b8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e516898d0 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x20e516896b8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x20e51689738 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x20e516897b0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e51689c18 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x20e51689cb8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x20e51689d20 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20e51689d98 <col:40> Implicit printf 1 0
|-FunctionDecl 0x20e51689e00 prev 0x20e51689c18 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x20e516899b8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x20e51689a30 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20e51689ef8 <col:40> Inherited printf 1 0
|-FunctionDecl 0x20e51686128 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x20e516861c8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20e51686230 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20e516862a8 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x20e51686310 prev 0x20e51686128 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x20e51689f48 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x20e51685ff0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20e51686408 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x20e516865d0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x20e51686458 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x20e516864d0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e51686828 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x20e516866b0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x20e51686728 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e51686d88 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x20e51686e28 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x20e51686e90 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x20e51686ef8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x20e51686f60 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20e5168b040 <col:77> Implicit printf 3 0
|-FunctionDecl 0x20e5168b0a8 prev 0x20e51686d88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x20e516869c8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x20e51686a40 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e51686ac0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x20e51686b38 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x20e5168b298 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x20e5168b168 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e5168b708 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20e5168b2e8 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x20e5168b360 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e5168b3d8 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e5168b458 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x20e5168b4d0 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e5168bb48 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20e5168b800 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x20e5168b878 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e5168b8f0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e5168b970 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x20e5168b9e8 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e5168bf18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20e5168bd00 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x20e5168bd78 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e5168bdf8 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x20e5168bfd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e51684440 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20e51684190 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x20e51684208 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e51684288 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x20e51684300 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x20e51684500 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e516848f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20e51684648 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x20e516846c0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e51684740 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x20e516847b8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e51684cb8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x20e516849e8 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x20e51684a68 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x20e51684ae0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e51690130 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x20e516901d0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x20e51690238 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x20e516902b0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x20e51690318 prev 0x20e51690130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x20e51684e60 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x20e51684ee0 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x20e516904f8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x20e516903c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e51690920 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x20e516909c0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x20e51690a28 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x20e51690a90 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20e51690b10 <col:94> Implicit printf 2 0
|-FunctionDecl 0x20e51690b78 prev 0x20e51690920 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x20e51690608 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x20e51690688 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x20e51690700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x20e51690d60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x20e51690c30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e5168f080 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x20e5168f120 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20e5168f188 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20e5168f1f0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20e5168f270 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x20e5168f2d8 prev 0x20e5168f080 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x20e51690db0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x20e51690e30 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x20e51690ea8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20e5168f3d8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x20e5168f5a0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x20e5168f428 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x20e5168f4a0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e5168f898 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20e5168f680 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x20e5168f6f8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e5168f778 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x20e5168fc30 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20e5168f980 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x20e5168f9f8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e5168fa78 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x20e5168faf0 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e5168fe98 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x20e5168fd18 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x20e5168fd98 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x20e516910a0 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20e5168ff78 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x20e51691390 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20e51691178 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x20e516911f0 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e51691270 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x20e51691688 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x20e51691470 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x20e516914f0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x20e51691568 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e516918e8 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x20e51691770 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x20e516917e8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e51691c78 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20e516919c8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x20e51691a40 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e51691ac0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x20e51691b38 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e51691e48 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20e51691d68 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x20e516920b0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x20e51691f20 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x20e51691f98 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e51692270 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20e51692190 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x20e51692400 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20e51692648 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516924d0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x20e51692548 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516928a0 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e51692728 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x20e516927a0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e51692af8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e51692980 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x20e516929f8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e51692ea8 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e51692bd8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x20e51692c50 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e51692cc8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e516931e0 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e51692f90 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x20e51693008 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e516930c0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e516934d8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e516932c8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x20e51693340 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e516933b8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e516937d0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516935b8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x20e51693638 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x20e516936b0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e51693ac8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516938b0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x20e51693930 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x20e516939a8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e51693dc0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e51693ba8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x20e51693c28 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x20e51693ca0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e51694230 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e51693ea0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x20e51693f20 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x20e51693f98 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e51694010 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e516945c8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e51694318 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x20e51694398 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x20e51694410 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e51694488 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e51694960 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e516946b0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x20e51694730 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x20e516947a8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e51694820 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e51694df8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e51694b10 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x20e51694b90 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x20e51694c08 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e51694eb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e5168d370 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e51694ff8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x20e5168d060 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e5168d0e0 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x20e5168d158 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e5168d710 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e5168d460 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x20e5168d4d8 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e5168d558 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x20e5168d5d0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e5168dc60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e5168d900 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x20e5168d980 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x20e5168d9f8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20e5168da70 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x20e5168dd20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e51695318 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e5168de68 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x20e5168dee0 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e5168df60 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x20e5168dfd8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e516950e0 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e51695758 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e51695410 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x20e51695488 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e51695508 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x20e51695580 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e516955f8 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e516959c8 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e51695850 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x20e516958c8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e51695c20 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e51695aa8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x20e51695b20 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e51695f10 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e51695d00 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x20e51695d78 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e51695df0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e5168e1a0 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e51695ff8 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x20e51696070 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e5168e080 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e5168e5f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e5168e348 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x20e5168e3c0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e5168e440 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x20e5168e4b8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e5168e6b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e5168eab0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e5168e800 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x20e5168e878 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e5168e8f8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x20e5168e970 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516960f0 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e5168eba0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x20e5168ec18 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e5168ec90 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e5168ed10 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x20e5168ed88 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e51696630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e516962e8 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x20e51696360 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516963e0 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x20e51696458 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20e516964d0 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x20e516966f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e51696b78 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e51696848 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x20e516968c0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e51696940 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x20e516969b8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e51696a30 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e5169d1c0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e51696c70 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x20e51696ce8 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e51696d60 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e51696de0 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x20e51696e58 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e51696ed0 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e5169d580 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x20e5169d2b8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x20e5169d330 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x20e5169d3b0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x20e5169d7f0 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x20e5169d680 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x20e5169da08 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x20e5169dce8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x20e5169dad0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x20e5169db48 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x20e5169df30 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x20e5169ddc0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x20e5169e170 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x20e5169e000 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x20e5169e2f8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x20e5169e530 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x20e5169e3c0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x20e5169e438 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x20e5169e6e0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x20e5169e608 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x20e5169e988 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x20e5169e7b0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20e5169e828 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x20e5169ed30 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x20e5169ea60 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x20e5169eae0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x20e5169eb58 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x20e5169f030 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x20e5169ee10 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x20e5169ee88 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x20e5169b2f8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x20e5169f108 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x20e5169b150 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x20e5169b600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x20e5169b490 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x20e5169b6a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e5169b968 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x20e5169b7e8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x20e5169bc70 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e5169ba38 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x20e5169bab0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x20e5169bec0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e5169bd48 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x20e5169bdc0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x20e5169c150 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20e5169bf98 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x20e5169c300 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20e5169c220 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x20e5169c4b0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20e5169c3d0 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x20e5169c848 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e5169c580 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x20e5169c5f8 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e5169c670 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e5169cb38 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e5169c928 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x20e5169c9a0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e5169ca18 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e5169ce28 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e5169cc18 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x20e5169cc90 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e5169cd08 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e5169f180 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e5169cf08 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x20e5169cf80 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e5169cff8 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e5169f480 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e5169f260 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e5169f2d8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e5169f6d0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e5169f558 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e5169f5d0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e5169f920 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e5169f7a8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e5169f820 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e5169fb70 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e5169f9f8 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e5169fa70 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e5169ff28 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e5169fc48 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x20e5169fcc0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e5169fd38 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x20e51698320 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e516a0008 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x20e516a0080 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516a00f8 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e51698110 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e516986d8 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e51698408 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20e51698480 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e516984f8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e516989c8 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e516987b8 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x20e51698830 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e516988a8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e51698cb8 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e51698aa8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e51698b20 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e51698b98 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x20e51699040 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e51698d98 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e51698e10 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e51698e88 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e51698f00 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e516994d0 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e51699148 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e516991c0 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e51699238 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e516992b0 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x20e516999d8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e516995b8 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e51699630 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516996a8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e51699720 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e51699798 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e51699d98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e51699b88 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20e51699c00 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e51699c78 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x20e51699e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e5169a360 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e5169a050 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20e5169a130 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e5169a1a8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e5169a220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x20e5169a420 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e5169a6d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e5169a560 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x20e5169a5d8 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x20e5169a890 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20e5169a7b0 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x20e5169ab70 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e5169a960 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x20e5169a9d8 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e5169aa50 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e5169adc8 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e5169ac50 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e5169acc8 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e516a7020 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e5169aea0 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e5169af18 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e5169af90 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x20e516a73a8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e516a7100 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e516a7178 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516a71f0 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e516a7268 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e516a7570 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20e516a7490 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x20e516a77b8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e516a7640 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e516a76b8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e516a7ac0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516a7890 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e516a7908 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516a7d10 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516a7b98 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e516a7c10 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516a7f60 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516a7de8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e516a7e60 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516a22c8 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e516a1ff8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e516a2070 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e516a20e8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e516a25b8 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e516a23a8 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e516a2420 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e516a2498 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e516a28a8 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e516a2698 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e516a2710 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e516a2788 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e516a2c68 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516a2988 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x20e516a2a00 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e516a2a78 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516a2fe0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516a2d48 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x20e516a2dc0 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e516a2e38 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516a32d0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516a30c0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x20e516a3138 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e516a31b0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516a3720 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e516a33b0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x20e516a3428 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e516a34a0 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e516a3518 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e516a3ab0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e516a3808 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x20e516a3880 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e516a38f8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e516a3970 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e516a3e40 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e516a3b98 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x20e516a3c10 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e516a3c88 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e516a3d00 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e516a8340 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516a3f28 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e516a8030 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516a80a8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e516a8120 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516a86d0 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516a8428 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e516a84a0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516a8518 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e516a8590 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516a8a60 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516a87b8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e516a8830 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516a88a8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e516a8920 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516a8f68 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e516a8b48 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e516a8bc0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516a8c38 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e516a8cb0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e516a8d28 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e516a93a8 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e516a9068 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e516a90e0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516a9158 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e516a91d0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e516a9248 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e516a97d8 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e516a9498 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e516a9510 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516a9588 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e516a9600 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e516a9678 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e516a9a40 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516a98c8 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e516a9940 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516a9c90 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516a9b18 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e516a9b90 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516a9f78 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e516a9d68 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e516a9de0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e516a9e58 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e516aa3e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516aa140 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e516aa1b8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516aa230 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e516aa2a8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e516aa4a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e516aaa18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516aa5f0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e516aa668 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516aa6e0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516aa758 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e516aa7d0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516aaf50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e516aac10 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e516aac88 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516aad00 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e516aad78 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20e516aadf0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x20e516ab060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e516ab670 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e516ab1a8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e516ab220 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516ab298 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516ab310 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e516ab388 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e516ab400 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e516abb70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e516ab938 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20e516ab9b0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x20e516abc20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x20e516abd38 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x20e516a4258 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e516abff0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20e516a4000 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e516a4078 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x20e516a4310 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x20e516a4428 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x20e516a49c8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516a46e8 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20e516a4760 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e516a47d8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x20e516a4a80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x20e516a4ba0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x20e516ac280 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e516a4e60 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20e516a4ed8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e516a4f50 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20e516ac070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x20e516ac340 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x20e516ac460 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x20e516ac768 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x20e516ac588 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x20e516ac600 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516ac678 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x20e516a62b0 <line:37:1, line:44:1>
|   |-DeclStmt 0x20e516ac8b0 <line:38:5, col:21>
|   | `-VarDecl 0x20e516ac848 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x20e516ac948 <line:39:5, col:13>
|   | `-VarDecl 0x20e516ac8e0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x20e516acca0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x20e516acc88 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x20e516acba0 <col:34> '<builtin fn type>' Function 0x20e516aca38 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x20e516acbd8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x20e516ac848 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x20e516acc10 <col:29> 'const wchar_t *' lvalue ParmVar 0x20e516ac678 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x20e516acf60 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x20e516accd0 <col:5> 'int' lvalue Var 0x20e516ac8e0 '_Ret' 'int'
|   | `-CallExpr 0x20e516acea0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x20e516ace88 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x20e516acd08 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x20e516a8f68 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x20e516acee8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20e516acd28 <col:27> 'wchar_t *' lvalue ParmVar 0x20e516ac588 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x20e516acf00 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20e516acd48 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x20e516ac600 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x20e516acf18 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20e516acd68 <col:44> 'const wchar_t *' lvalue ParmVar 0x20e516ac678 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x20e516acf30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x20e516acdf0 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x20e516acdc8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x20e516acd88 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x20e516acf48 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x20e516ace10 <col:59> 'va_list':'char *' lvalue Var 0x20e516ac848 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x20e516a6240 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x20e516a6228 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x20e516a6178 <col:34> '<builtin fn type>' Function 0x20e516a6010 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x20e516a61b0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x20e516ac848 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x20e516a62a0 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x20e516a6288 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x20e516a6268 <col:12> 'int' lvalue Var 0x20e516ac8e0 '_Ret' 'int'
|-FunctionDecl 0x20e516aca38 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x20e516acad8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x20e516acb48 <col:34> Implicit
|-FunctionDecl 0x20e516a6010 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x20e516a60b0 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x20e516a6120 <col:34> Implicit
|-FunctionDecl 0x20e516a65a8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x20e516a6300 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x20e516a6378 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516a63f0 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e516a6468 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x20e516a6890 <line:50:1, line:52:1>
|   `-ReturnStmt 0x20e516a6880 <line:51:5, col:62>
|     `-CallExpr 0x20e516a67c0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x20e516a67a8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x20e516a6680 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x20e516a8f68 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x20e516a6808 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x20e516a66a0 <col:27> 'wchar_t *' lvalue ParmVar 0x20e516a6300 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x20e516a6820 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x20e516a66c0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x20e516a6378 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x20e516a6838 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x20e516a66e0 <col:44> 'const wchar_t *' lvalue ParmVar 0x20e516a63f0 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x20e516a6850 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x20e516a6768 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x20e516a6740 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x20e516a6700 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x20e516a6868 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x20e516a6788 <col:59> 'va_list':'char *' lvalue ParmVar 0x20e516a6468 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x20e516a6b30 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x20e516a68b8 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x20e516a6930 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516a69a8 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e516a6a20 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x20e516b1168 <line:61:1, line:68:1>
|   |-DeclStmt 0x20e516a6c80 <line:62:5, col:21>
|   | `-VarDecl 0x20e516a6c18 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x20e516a6d18 <line:63:5, col:13>
|   | `-VarDecl 0x20e516a6cb0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x20e516a6dc0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x20e516a6da8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x20e516a6d30 <col:34> '<builtin fn type>' Function 0x20e516aca38 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x20e516a6d50 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x20e516a6c18 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x20e516a6d88 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x20e516a6a20 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x20e516a6fc0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x20e516a6df0 <col:5> 'int' lvalue Var 0x20e516a6cb0 '_Ret' 'int'
|   | `-CallExpr 0x20e516a6f00 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x20e516a6ee8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x20e516a6e28 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x20e516a8f68 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x20e516a6f48 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20e516a6e48 <col:27> 'wchar_t *' lvalue ParmVar 0x20e516a68b8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x20e516a6f60 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20e516a6e68 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x20e516a6930 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x20e516a6f78 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20e516a6e88 <col:44> 'const wchar_t *' lvalue ParmVar 0x20e516a69a8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x20e516a6f90 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20e516a6ea8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x20e516a6a20 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x20e516a6fa8 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x20e516a6ec8 <col:64> 'va_list':'char *' lvalue Var 0x20e516a6c18 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x20e516b10f8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x20e516b10e0 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x20e516a6fe0 <col:34> '<builtin fn type>' Function 0x20e516a6010 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x20e516b10c0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x20e516a6c18 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x20e516b1158 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x20e516b1140 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x20e516b1120 <col:12> 'int' lvalue Var 0x20e516a6cb0 '_Ret' 'int'
|-FunctionDecl 0x20e516b14f8 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x20e516b11b8 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x20e516b1230 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516b12a8 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e516b1320 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20e516b1398 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x20e516b1780 <line:74:1, line:76:1>
|   `-ReturnStmt 0x20e516b1770 <line:75:5, col:67>
|     `-CallExpr 0x20e516b16b0 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x20e516b1698 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x20e516b15d8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x20e516a8f68 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x20e516b16f8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x20e516b15f8 <col:27> 'wchar_t *' lvalue ParmVar 0x20e516b11b8 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x20e516b1710 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x20e516b1618 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x20e516b1230 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x20e516b1728 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x20e516b1638 <col:44> 'const wchar_t *' lvalue ParmVar 0x20e516b12a8 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x20e516b1740 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x20e516b1658 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x20e516b1320 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x20e516b1758 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x20e516b1678 <col:64> 'va_list':'char *' lvalue ParmVar 0x20e516b1398 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x20e516b19c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20e516b17a8 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x20e516b1820 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x20e516b1c18 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e516b1aa0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e516b1b18 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e516b1f00 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e516b1cf0 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e516b1d68 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e516b1de0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e516b0228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e516b00b0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x20e516b0128 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x20e516b02d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e516b06e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516b04d8 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x20e516b0550 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e516b05c8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e516b07a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e516b0a58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e516b08e0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x20e516b0958 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x20e516b0d40 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516b0b30 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x20e516b0ba8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e516b0c20 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516b5170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e516b0ee0 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20e516b0f58 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x20e516b5220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e516b56f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516b5420 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20e516b5498 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e516b5510 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e516b57b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e516b5a68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e516b58f0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x20e516b5968 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x20e516b5d50 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516b5b40 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20e516b5bb8 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e516b5c30 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516ae178 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e516b5ef0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20e516b5f68 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516b5fe0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x20e516ae230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e516ae7b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516ae430 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20e516ae4a8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516ae520 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e516ae598 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e516ae870 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e516aebc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e516ae9b0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20e516aea28 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e516aeaa0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x20e516aef48 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516aeca0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20e516aed18 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516aed90 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e516aee08 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516af250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x20e516af170 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x20e516af2f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e516af670 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516af4f8 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e516af570 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e516af720 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e516af940 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20e516af860 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x20e516afb88 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e516afa10 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e516afa88 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516afe88 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x20e516afc68 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x20e516afce0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x20e516b3288 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20e516b0020 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x20e516b30e0 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x20e516b3338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e516b3740 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20e516b3480 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x20e516b34f8 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x20e516b3570 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x20e516b3ba0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x20e516b38e0 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x20e516b3958 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x20e516b39d0 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x20e516b3c58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e516b6158 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x20e516b3da0 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x20e516b3e18 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x20e516b3e90 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x20e516b3f08 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x20e516b63b0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x20e516b6240 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x20e516b65f0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20e516b6480 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x20e516b64f8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x20e516b67a8 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x20e516b66c8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x20e516b6a98 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x20e516b6878 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x20e516b68f0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x20e516b6d08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x20e516b6c30 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x20e516b6db0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e516b6fc8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x20e516b6ef0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x20e516b9238 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x20e516b7098 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x20e516b9140 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x20e516b9480 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x20e516b9310 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20e516b9388 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x20e516b9630 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x20e516b9558 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x20e516b97d8 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x20e516b9700 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x20e516b9988 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e516b98a8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x20e516b9b38 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e516b9a58 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x20e516b9eb0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x20e516b9c10 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x20e516b9c88 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516b9d00 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e516b9d78 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x20e516ba320 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x20e516b9fa0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x20e516ba018 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516ba090 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516ba150 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e516ba1c8 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x20e516ba630 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x20e516ba410 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x20e516ba490 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x20e516ba510 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x20e516ba7f0 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x20e516ba710 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x20e516baae0 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x20e516ba8c0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x20e516ba940 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x20e516ba9c0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x20e516baca0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x20e516babc0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x20e516bb018 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x20e516bad78 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x20e516badf0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e516bae68 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e516baee0 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x20e516bb2d8 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20e516bb160 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x20e516bb1d8 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x20e516bb610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x20e516bb490 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x20e516bb510 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x20e516bb6c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x20e516bb978 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x20e516bba18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x20e516bbd58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x20e516bbbe0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x20e516bbc60 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x20e516bbe08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x20e516b7120 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x20e516b71c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x20e516b7460 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x20e516b7380 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x20e516b7508 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x20e516b7788 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x20e516b7828 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x20e516b7ad0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x20e516b79f0 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x20e516b7b78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x20e516b7e58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x20e516b7d78 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x20e516b7f00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x20e516b4268 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20e516b40f0 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x20e516b4168 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x20e516b4318 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x20e516b45d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x20e516b4678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x20e516b48b0 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:49:9, col:58> col:40 __pctype_func 'const unsigned short *(void) __attribute__((cdecl))':'const unsigned short *(void)'
|-VarDecl 0x20e516b4980 <line:51:9, col:38> col:38 _pctype 'const unsigned short *' extern
|-VarDecl 0x20e516b4a80 <line:62:9, col:45> col:37 _wctype 'const unsigned short []' extern
|-FunctionDecl 0x20e516b4c78 <line:73:9, col:53> col:34 __pwctype_func 'const wctype_t *(void) __attribute__((cdecl))':'const wctype_t *(void)'
|-VarDecl 0x20e516b4d40 <line:75:9, col:32> col:32 _pwctype 'const wctype_t *' extern
|-FunctionDecl 0x20e516b4fc0 <line:119:24, col:72> col:36 _isctype 'int (int, int) __attribute__((cdecl))':'int (int, int)'
| |-ParmVarDecl 0x20e516b4dd8 <col:50, col:54> col:54 _C 'int'
| `-ParmVarDecl 0x20e516b4e58 <col:63, col:67> col:67 _Type 'int'
|-FunctionDecl 0x20e516be468 <line:120:24, col:102> col:36 _isctype_l 'int (int, int, _locale_t) __attribute__((cdecl))':'int (int, int, _locale_t)'
| |-ParmVarDecl 0x20e516be190 <col:52, col:56> col:56 _C 'int'
| |-ParmVarDecl 0x20e516be210 <col:65, col:69> col:69 _Type 'int'
| `-ParmVarDecl 0x20e516be288 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516be630 <line:121:55> col:55 implicit isalpha 'int (int)' extern
| |-ParmVarDecl 0x20e516be6d0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20e516be740 <col:55> Implicit
| `-PureAttr 0x20e516be798 <col:55> Implicit
|-FunctionDecl 0x20e516be7c0 prev 0x20e516be630 <col:43, col:74> col:55 isalpha 'int (int)'
| |-ParmVarDecl 0x20e516be550 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x20e516be8b0 <col:55> Inherited Implicit
| `-PureAttr 0x20e516be8d8 <col:55> Inherited Implicit
|-FunctionDecl 0x20e516beb40 <line:122:24, col:86> col:36 _isalpha_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20e516be918 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20e516be990 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516bed00 <line:123:55> col:55 implicit isupper 'int (int)' extern
| |-ParmVarDecl 0x20e516beda0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20e516bee10 <col:55> Implicit
| `-PureAttr 0x20e516bee68 <col:55> Implicit
|-FunctionDecl 0x20e516bee90 prev 0x20e516bed00 <col:43, col:74> col:55 isupper 'int (int)'
| |-ParmVarDecl 0x20e516bec20 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x20e516bef80 <col:55> Inherited Implicit
| `-PureAttr 0x20e516befa8 <col:55> Inherited Implicit
|-FunctionDecl 0x20e516bf1a0 <line:124:24, col:86> col:36 _isupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20e516befe8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20e516bf060 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516bf360 <line:125:55> col:55 implicit islower 'int (int)' extern
| |-ParmVarDecl 0x20e516bf400 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20e516bf470 <col:55> Implicit
| `-PureAttr 0x20e516bf4c8 <col:55> Implicit
|-FunctionDecl 0x20e516bf4f0 prev 0x20e516bf360 <col:43, col:74> col:55 islower 'int (int)'
| |-ParmVarDecl 0x20e516bf280 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x20e516bf5e0 <col:55> Inherited Implicit
| `-PureAttr 0x20e516bf608 <col:55> Inherited Implicit
|-FunctionDecl 0x20e516bf7c0 <line:126:24, col:86> col:36 _islower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20e516bf648 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20e516bf6c0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516bf980 <line:127:55> col:55 implicit used isdigit 'int (int)' extern
| |-ParmVarDecl 0x20e516bfa20 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20e516bfa90 <col:55> Implicit
| `-PureAttr 0x20e516bfae8 <col:55> Implicit
|-FunctionDecl 0x20e516bfb10 prev 0x20e516bf980 <col:43, col:74> col:55 used isdigit 'int (int)'
| |-ParmVarDecl 0x20e516bf8a0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x20e516bfc00 <col:55> Inherited Implicit
| `-PureAttr 0x20e516bfc28 <col:55> Inherited Implicit
|-FunctionDecl 0x20e516bfde0 <line:128:24, col:86> col:36 _isdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20e516bfc68 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20e516bfce0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516bffa0 <line:129:36> col:36 implicit isxdigit 'int (int)' extern
| |-ParmVarDecl 0x20e516c0040 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20e516c00b0 <col:36> Implicit
| `-PureAttr 0x20e516c0108 <col:36> Implicit
|-FunctionDecl 0x20e516c01b0 prev 0x20e516bffa0 <col:24, col:56> col:36 isxdigit 'int (int)'
| |-ParmVarDecl 0x20e516bfec0 <col:50, col:54> col:54 _C 'int'
| |-NoThrowAttr 0x20e516c02a0 <col:36> Inherited Implicit
| `-PureAttr 0x20e516c02c8 <col:36> Inherited Implicit
|-FunctionDecl 0x20e516c0480 <line:130:24, col:87> col:36 _isxdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20e516c0308 <col:53, col:57> col:57 _C 'int'
| `-ParmVarDecl 0x20e516c0380 <col:70, col:80> col:80 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516c0640 <line:131:55> col:55 implicit isspace 'int (int)' extern
| |-ParmVarDecl 0x20e516c06e0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20e516c0750 <col:55> Implicit
| `-PureAttr 0x20e516c07a8 <col:55> Implicit
|-FunctionDecl 0x20e516c07d0 prev 0x20e516c0640 <col:43, col:74> col:55 isspace 'int (int)'
| |-ParmVarDecl 0x20e516c0560 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x20e516c08c0 <col:55> Inherited Implicit
| `-PureAttr 0x20e516c08e8 <col:55> Inherited Implicit
|-FunctionDecl 0x20e516c0aa0 <line:132:24, col:86> col:36 _isspace_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20e516c0928 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20e516c09a0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516c0c60 <line:133:36> col:36 implicit ispunct 'int (int)' extern
| |-ParmVarDecl 0x20e516c0d00 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20e516c0d70 <col:36> Implicit
| `-PureAttr 0x20e516c0dc8 <col:36> Implicit
|-FunctionDecl 0x20e516c0df0 prev 0x20e516c0c60 <col:24, col:55> col:36 ispunct 'int (int)'
| |-ParmVarDecl 0x20e516c0b80 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x20e516c0ee0 <col:36> Inherited Implicit
| `-PureAttr 0x20e516c0f08 <col:36> Inherited Implicit
|-FunctionDecl 0x20e516c10c0 <line:134:24, col:86> col:36 _ispunct_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20e516c0f48 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20e516c0fc0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516c5a00 <line:135:36> col:36 implicit isblank 'int (int)' extern
| |-ParmVarDecl 0x20e516c5aa0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20e516c5b10 <col:36> Implicit
| `-PureAttr 0x20e516c5b68 <col:36> Implicit
|-FunctionDecl 0x20e516c5b90 prev 0x20e516c5a00 <col:24, col:55> col:36 isblank 'int (int)'
| |-ParmVarDecl 0x20e516c5920 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x20e516c5c80 <col:36> Inherited Implicit
| `-PureAttr 0x20e516c5ca8 <col:36> Inherited Implicit
|-FunctionDecl 0x20e516c5e60 <line:136:24, col:86> col:36 _isblank_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20e516c5ce8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20e516c5d60 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516c6020 <line:137:55> col:55 implicit isalnum 'int (int)' extern
| |-ParmVarDecl 0x20e516c60c0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20e516c6130 <col:55> Implicit
| `-PureAttr 0x20e516c6188 <col:55> Implicit
|-FunctionDecl 0x20e516c61b0 prev 0x20e516c6020 <col:43, col:74> col:55 isalnum 'int (int)'
| |-ParmVarDecl 0x20e516c5f40 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x20e516c62a0 <col:55> Inherited Implicit
| `-PureAttr 0x20e516c62c8 <col:55> Inherited Implicit
|-FunctionDecl 0x20e516c6480 <line:138:24, col:86> col:36 _isalnum_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20e516c6308 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20e516c6380 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516c6640 <line:139:36> col:36 implicit isprint 'int (int)' extern
| |-ParmVarDecl 0x20e516c66e0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20e516c6750 <col:36> Implicit
| `-PureAttr 0x20e516c67a8 <col:36> Implicit
|-FunctionDecl 0x20e516c67d0 prev 0x20e516c6640 <col:24, col:55> col:36 isprint 'int (int)'
| |-ParmVarDecl 0x20e516c6560 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x20e516c68c0 <col:36> Inherited Implicit
| `-PureAttr 0x20e516c68e8 <col:36> Inherited Implicit
|-FunctionDecl 0x20e516c7ad0 <line:140:24, col:86> col:36 _isprint_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20e516c7958 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20e516c79d0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516c7c90 <line:141:36> col:36 implicit isgraph 'int (int)' extern
| |-ParmVarDecl 0x20e516c7d30 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20e516c7da0 <col:36> Implicit
| `-PureAttr 0x20e516c7df8 <col:36> Implicit
|-FunctionDecl 0x20e516c7e20 prev 0x20e516c7c90 <col:24, col:55> col:36 isgraph 'int (int)'
| |-ParmVarDecl 0x20e516c7bb0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x20e516c7f10 <col:36> Inherited Implicit
| `-PureAttr 0x20e516c7f38 <col:36> Inherited Implicit
|-FunctionDecl 0x20e516c80f0 <line:142:24, col:86> col:36 _isgraph_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20e516c7f78 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20e516c7ff0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516c82b0 <line:143:36> col:36 implicit iscntrl 'int (int)' extern
| |-ParmVarDecl 0x20e516c8350 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20e516c83c0 <col:36> Implicit
| `-PureAttr 0x20e516c8418 <col:36> Implicit
|-FunctionDecl 0x20e516c8440 prev 0x20e516c82b0 <col:24, col:55> col:36 iscntrl 'int (int)'
| |-ParmVarDecl 0x20e516c81d0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x20e516c8530 <col:36> Inherited Implicit
| `-PureAttr 0x20e516c8558 <col:36> Inherited Implicit
|-FunctionDecl 0x20e516c8710 <line:144:24, col:86> col:36 _iscntrl_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20e516c8598 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20e516c8610 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516c8950 <line:145:55> col:55 implicit toupper 'int (int)' extern
| |-ParmVarDecl 0x20e516c89f0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20e516c8a60 <col:55> Implicit
| `-PureAttr 0x20e516c8ab8 <col:55> Implicit
|-FunctionDecl 0x20e516c8ae0 prev 0x20e516c8950 <col:43, col:74> col:55 toupper 'int (int)'
| |-ParmVarDecl 0x20e516c87f0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x20e516c8bd0 <col:55> Inherited Implicit
| `-PureAttr 0x20e516c8bf8 <col:55> Inherited Implicit
|-FunctionDecl 0x20e516c8d18 <line:146:55> col:55 implicit tolower 'int (int)' extern
| |-ParmVarDecl 0x20e516c8db8 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20e516c8e28 <col:55> Implicit
| `-PureAttr 0x20e516c8e80 <col:55> Implicit
|-FunctionDecl 0x20e516c8ea8 prev 0x20e516c8d18 <col:43, col:74> col:55 tolower 'int (int)'
| |-ParmVarDecl 0x20e516c8c38 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x20e516c8f98 <col:55> Inherited Implicit
| `-PureAttr 0x20e516c8fc0 <col:55> Inherited Implicit
|-FunctionDecl 0x20e516c90e0 <line:147:43, col:75> col:55 _tolower 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20e516c9000 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x20e516c9330 <line:148:24, col:86> col:36 _tolower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20e516c91b8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20e516c9230 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516c94f0 <line:149:43, col:75> col:55 _toupper 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20e516c9410 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x20e516c9740 <line:150:24, col:86> col:36 _toupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20e516c95c8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20e516c9640 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516c6930 <line:151:24, col:57> col:36 __isascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20e516c9820 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x20e516c6ae8 <line:152:24, col:57> col:36 __toascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20e516c6a08 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x20e516c6ca0 <line:153:24, col:57> col:36 __iscsymf 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20e516c6bc0 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x20e516c6e58 <line:154:24, col:56> col:36 __iscsym 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20e516c6d78 <col:50, col:54> col:54 _C 'int'
|-FunctionDecl 0x20e516c70a8 <line:164:24, col:59> col:36 iswalpha 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20e516c6f28 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20e516c73a0 <line:165:24, col:90> col:36 _iswalpha_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20e516c7178 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20e516c71f0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516c7558 <line:166:24, col:59> col:36 iswupper 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20e516c7478 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20e516c77a0 <line:167:24, col:90> col:36 _iswupper_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20e516c7628 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20e516c76a0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516cc9c8 <line:168:24, col:59> col:36 iswlower 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20e516c7878 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20e516ccc10 <line:169:24, col:90> col:36 _iswlower_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20e516cca98 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20e516ccb10 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516ccdc8 <line:170:24, col:59> col:36 iswdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20e516ccce8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20e516cd010 <line:171:24, col:90> col:36 _iswdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20e516cce98 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20e516ccf10 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516cd1c8 <line:172:24, col:60> col:36 iswxdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20e516cd0e8 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20e516cd410 <line:173:24, col:91> col:36 _iswxdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20e516cd298 <col:54, col:61> col:61 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20e516cd310 <col:74, col:84> col:84 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516cd5c8 <line:174:24, col:59> col:36 iswspace 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20e516cd4e8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20e516cd810 <line:175:24, col:90> col:36 _iswspace_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20e516cd698 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20e516cd710 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516ce9e8 <line:176:24, col:59> col:36 iswpunct 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20e516cd8e8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20e516cec30 <line:177:24, col:90> col:36 _iswpunct_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20e516ceab8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20e516ceb30 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516cede8 <line:178:24, col:59> col:36 iswblank 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20e516ced08 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20e516cf030 <line:179:24, col:90> col:36 _iswblank_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20e516ceeb8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20e516cef30 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516cf1e8 <line:180:24, col:59> col:36 iswalnum 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20e516cf108 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20e516cf430 <line:181:24, col:90> col:36 _iswalnum_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20e516cf2b8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20e516cf330 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516cf5e8 <line:182:24, col:59> col:36 iswprint 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20e516cf508 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20e516cf830 <line:183:24, col:90> col:36 _iswprint_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20e516cf6b8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20e516cf730 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516ca9a8 <line:184:24, col:59> col:36 iswgraph 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20e516cf908 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20e516cabf0 <line:185:24, col:90> col:36 _iswgraph_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20e516caa78 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20e516caaf0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516cada8 <line:186:24, col:59> col:36 iswcntrl 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20e516cacc8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20e516caff0 <line:187:24, col:90> col:36 _iswcntrl_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20e516cae78 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20e516caef0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516cb1a8 <line:188:24, col:59> col:36 iswascii 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20e516cb0c8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20e516cb3c0 <line:190:24, col:62> col:39 towupper 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x20e516cb278 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20e516cb6a8 <line:191:24, col:93> col:39 _towupper_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x20e516cb490 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20e516cb508 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516cb858 <line:192:24, col:62> col:39 towlower 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x20e516cb780 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20e516cdb10 <line:193:24, col:93> col:39 _towlower_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x20e516cd9a0 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20e516cda18 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516cde10 <line:194:24, col:80> col:36 iswctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x20e516cdbe8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20e516cdc60 <col:66, col:75> col:75 _Type 'wctype_t':'unsigned short'
|-FunctionDecl 0x20e516ce1b8 <line:195:24, col:111> col:36 _iswctype_l 'int (wint_t, wctype_t, _locale_t) __attribute__((cdecl))':'int (wint_t, wctype_t, _locale_t)'
| |-ParmVarDecl 0x20e516cdee8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x20e516cdf60 <col:69, col:78> col:78 _Type 'wctype_t':'unsigned short'
| `-ParmVarDecl 0x20e516cdfd8 <col:94, col:104> col:104 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516ce378 <line:197:24, col:61> col:36 __iswcsymf 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20e516ce298 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20e516ce5c0 <line:198:24, col:90> col:36 _iswcsymf_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20e516ce448 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20e516ce4c0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516ce778 <line:199:24, col:60> col:36 __iswcsym 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20e516ce698 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20e516cfa00 <line:200:24, col:89> col:36 _iswcsym_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20e516ce848 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20e516ce8c0 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516cfbc0 <line:203:24, col:58> col:36 isleadbyte 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20e516cfae0 <col:52, col:56> col:56 _C 'int'
|-FunctionDecl 0x20e516cfe10 <line:204:24, col:89> col:36 _isleadbyte_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20e516cfc98 <col:55, col:59> col:59 _C 'int'
| `-ParmVarDecl 0x20e516cfd10 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516d0120 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:205:90> col:45 is_wctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x20e516cffa8 <col:60, col:67> col:67 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x20e516d0020 <col:76, col:85> col:85 _Type 'wctype_t':'unsigned short'
| `-DeprecatedAttr 0x20e516d01d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using iswctype instead. See online help for details." ""
|-VarDecl 0x20e516d0318 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:235:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x20e516d0468 <line:239:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20e516d0698 <line:240:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x20e516d0530 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e516d9e60 <.//openssl//file_jk/before\crypto\asn1\a_mbstr.c:15:1, line:17:37> line:15:12 used traverse_string 'int (const unsigned char *, int, int, int (*)(unsigned long, void *), void *)' static
| |-ParmVarDecl 0x20e516d0770 <col:28, col:49> col:49 p 'const unsigned char *'
| |-ParmVarDecl 0x20e516d07f0 <col:52, col:56> col:56 len 'int'
| |-ParmVarDecl 0x20e516d0870 <col:61, col:65> col:65 inform 'int'
| |-ParmVarDecl 0x20e516d9c10 <line:16:28, col:71> col:34 rfunc 'int (*)(unsigned long, void *)'
| `-ParmVarDecl 0x20e516d9c90 <line:17:28, col:34> col:34 arg 'void *'
|-FunctionDecl 0x20e516da0a8 <line:18:1, col:50> col:12 used in_utf8 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x20e516d9f58 <col:20, col:34> col:34 value 'unsigned long'
| `-ParmVarDecl 0x20e516d9fd8 <col:41, col:47> col:47 arg 'void *'
|-FunctionDecl 0x20e516da2d8 <line:19:1, col:51> col:12 used out_utf8 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x20e516da188 <col:21, col:35> col:35 value 'unsigned long'
| `-ParmVarDecl 0x20e516da208 <col:42, col:48> col:48 arg 'void *'
|-FunctionDecl 0x20e516da508 <line:20:1, col:51> col:12 used type_str 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x20e516da3b8 <col:21, col:35> col:35 value 'unsigned long'
| `-ParmVarDecl 0x20e516da438 <col:42, col:48> col:48 arg 'void *'
|-FunctionDecl 0x20e516da738 <line:21:1, col:50> col:12 used cpy_asc 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x20e516da5e8 <col:20, col:34> col:34 value 'unsigned long'
| `-ParmVarDecl 0x20e516da668 <col:41, col:47> col:47 arg 'void *'
|-FunctionDecl 0x20e516da968 <line:22:1, col:50> col:12 used cpy_bmp 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x20e516da818 <col:20, col:34> col:34 value 'unsigned long'
| `-ParmVarDecl 0x20e516da898 <col:41, col:47> col:47 arg 'void *'
|-FunctionDecl 0x20e516d5b70 <line:23:1, col:51> col:12 used cpy_univ 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x20e516d5a20 <col:21, col:35> col:35 value 'unsigned long'
| `-ParmVarDecl 0x20e516d5aa0 <col:42, col:48> col:48 arg 'void *'
|-FunctionDecl 0x20e516d5da0 <line:24:1, col:51> col:12 used cpy_utf8 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x20e516d5c50 <col:21, col:35> col:35 value 'unsigned long'
| `-ParmVarDecl 0x20e516d5cd0 <col:42, col:48> col:48 arg 'void *'
|-FunctionDecl 0x20e516d5f60 <line:25:1, col:42> col:12 used is_numeric 'int (unsigned long)' static
| `-ParmVarDecl 0x20e516d5e80 <col:23, col:37> col:37 value 'unsigned long'
|-FunctionDecl 0x20e516d60e8 <line:26:1, col:44> col:12 used is_printable 'int (unsigned long)' static
| `-ParmVarDecl 0x20e516d6038 <col:25, col:39> col:39 value 'unsigned long'
|-FunctionDecl 0x20e516d6500 <line:37:1, line:41:1> line:37:5 invalid ASN1_mbstring_copy 'int (int **, const unsigned char *, int, int, unsigned long)'
| |-ParmVarDecl 0x20e516d61f8 <col:24, col:38> col:38 invalid out 'int **'
| |-ParmVarDecl 0x20e516d6278 <col:43, col:64> col:64 used in 'const unsigned char *'
| |-ParmVarDecl 0x20e516d62f8 <col:68, col:72> col:72 used len 'int'
| |-ParmVarDecl 0x20e516d6378 <line:38:24, col:28> col:28 used inform 'int'
| |-ParmVarDecl 0x20e516d63f8 <col:36, col:50> col:50 used mask 'unsigned long'
| `-CompoundStmt 0x20e516d6848 <line:39:1, line:41:1>
|-FunctionDecl 0x20e516d2ca0 <line:43:1, line:202:1> line:43:5 invalid ASN1_mbstring_ncopy 'int (int **, const unsigned char *, int, int, unsigned long, long, long)'
| |-ParmVarDecl 0x20e516d6878 <col:25, col:39> col:39 invalid out 'int **'
| |-ParmVarDecl 0x20e516d68f8 <col:44, col:65> col:65 used in 'const unsigned char *'
| |-ParmVarDecl 0x20e516d6978 <col:69, col:73> col:73 used len 'int'
| |-ParmVarDecl 0x20e516d29f0 <line:44:25, col:29> col:29 used inform 'int'
| |-ParmVarDecl 0x20e516d2a70 <col:37, col:51> col:51 used mask 'unsigned long'
| |-ParmVarDecl 0x20e516d2af0 <line:45:25, col:30> col:30 used minsize 'long'
| |-ParmVarDecl 0x20e516d2b70 <col:39, col:44> col:44 used maxsize 'long'
| `-CompoundStmt 0x20e516dc0a0 <line:46:1, line:202:1>
|   |-DeclStmt 0x20e516d2e10 <line:47:5, col:17>
|   | `-VarDecl 0x20e516d2da8 <col:5, col:9> col:9 used str_type 'int'
|   |-DeclStmt 0x20e516d2ea8 <line:48:5, col:12>
|   | `-VarDecl 0x20e516d2e40 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x20e516d2f38 <line:49:5, col:18>
|   | `-VarDecl 0x20e516d2ed0 <col:5, col:10> col:10 used free_out 'char'
|   |-DeclStmt 0x20e516d3090 <line:50:5, col:28>
|   | |-VarDecl 0x20e516d2f68 <col:5, col:9> col:9 used outform 'int'
|   | `-VarDecl 0x20e516d2fe8 <col:5, col:27> col:18 used outlen 'int' cinit
|   |   `-IntegerLiteral 0x20e516d3050 <col:27> 'int' 0
|   |-DeclStmt 0x20e516d3158 <line:52:5, col:21>
|   | `-VarDecl 0x20e516d30f0 <col:5, col:20> col:20 used p 'unsigned char *'
|   |-DeclStmt 0x20e516d31f0 <line:53:5, col:14>
|   | `-VarDecl 0x20e516d3188 <col:5, col:9> col:9 used nchar 'int'
|   |-DeclStmt 0x20e516d3310 <line:54:5, col:20>
|   | `-VarDecl 0x20e516d32a8 <col:5, col:19> col:10 used strbuf 'char [32]'
|   |-DeclStmt 0x20e516d3578 <line:55:5, col:50>
|   | `-VarDecl 0x20e516d3470 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\asn1\a_mbstr.c:55:11 used cpyfunc 'int (*)(unsigned long, void *)' cinit
|   |   `-ImplicitCastExpr 0x20e516d3560 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'int (*)(unsigned long, void *)' <NullToPointer>
|   |     `-ParenExpr 0x20e516d3540 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x20e516d3518 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x20e516d34d8 <col:26> 'int' 0
|   |-IfStmt 0x20e516d3910 <.//openssl//file_jk/before\crypto\asn1\a_mbstr.c:56:5, line:57:38>
|   | |-BinaryOperator 0x20e516d3620 <line:56:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x20e516d3608 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20e516d3590 <col:9> 'int' lvalue ParmVar 0x20e516d6978 'len' 'int'
|   | | `-UnaryOperator 0x20e516d35f0 <col:16, col:17> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x20e516d35c8 <col:17> 'int' 1
|   | `-BinaryOperator 0x20e516d38f0 <line:57:9, col:38> 'int' '='
|   |   |-DeclRefExpr 0x20e516d3640 <col:9> 'int' lvalue ParmVar 0x20e516d6978 'len' 'int'
|   |   `-ImplicitCastExpr 0x20e516d38d8 <col:15, col:38> 'int' <IntegralCast>
|   |     `-CallExpr 0x20e516d38b0 <col:15, col:38> 'unsigned long long'
|   |       |-ImplicitCastExpr 0x20e516d3898 <col:15> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x20e516d37a0 <col:15> 'unsigned long long (const char *)' Function 0x20e516d3690 'strlen' 'unsigned long long (const char *)'
|   |       `-CStyleCastExpr 0x20e516d3840 <col:22, col:36> 'const char *' <BitCast>
|   |         `-ImplicitCastExpr 0x20e516d3828 <col:36> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |           `-DeclRefExpr 0x20e516d37d8 <col:36> 'const unsigned char *' lvalue ParmVar 0x20e516d68f8 'in' 'const unsigned char *'
|   |-SwitchStmt 0x20e516d6a48 <line:62:5, line:99:5>
|   | |-ImplicitCastExpr 0x20e516d6a30 <line:62:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x20e516d39b0 <col:13> 'int' lvalue ParmVar 0x20e516d29f0 'inform' 'int'
|   | `-CompoundStmt 0x20e516d72d8 <col:21, line:99:5>
|   |   |-IfStmt 0x20e516d6c60 <line:65:9, line:69:9>
|   |   | |-BinaryOperator 0x20e516d6ac8 <line:65:13, col:19> 'int' '&'
|   |   | | |-ImplicitCastExpr 0x20e516d6ab0 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x20e516d6a68 <col:13> 'int' lvalue ParmVar 0x20e516d6978 'len' 'int'
|   |   | | `-IntegerLiteral 0x20e516d6a88 <col:19> 'int' 1
|   |   | `-CompoundStmt 0x20e516d6c48 <col:22, line:69:9>
|   |   |   `-ReturnStmt 0x20e516d6c38 <line:68:13, col:21>
|   |   |     `-UnaryOperator 0x20e516d6c20 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x20e516d6bf8 <col:21> 'int' 1
|   |   |-BinaryOperator 0x20e516d6d30 <line:70:9, col:24> 'int' '='
|   |   | |-DeclRefExpr 0x20e516d6c78 <col:9> 'int' lvalue Var 0x20e516d3188 'nchar' 'int'
|   |   | `-BinaryOperator 0x20e516d6d10 <col:17, col:24> 'int' '>>'
|   |   |   |-ImplicitCastExpr 0x20e516d6cf8 <col:17> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x20e516d6cb0 <col:17> 'int' lvalue ParmVar 0x20e516d6978 'len' 'int'
|   |   |   `-IntegerLiteral 0x20e516d6cd0 <col:24> 'int' 1
|   |   |-BreakStmt 0x20e516d6d50 <line:71:9>
|   |   |-IfStmt 0x20e516d6e60 <line:74:9, line:78:9>
|   |   | |-BinaryOperator 0x20e516d6db8 <line:74:13, col:19> 'int' '&'
|   |   | | |-ImplicitCastExpr 0x20e516d6da0 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x20e516d6d58 <col:13> 'int' lvalue ParmVar 0x20e516d6978 'len' 'int'
|   |   | | `-IntegerLiteral 0x20e516d6d78 <col:19> 'int' 3
|   |   | `-CompoundStmt 0x20e516d6e48 <col:22, line:78:9>
|   |   |   `-ReturnStmt 0x20e516d6e38 <line:77:13, col:21>
|   |   |     `-UnaryOperator 0x20e516d6e20 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x20e516d6df8 <col:21> 'int' 1
|   |   |-BinaryOperator 0x20e516d6f18 <line:79:9, col:24> 'int' '='
|   |   | |-DeclRefExpr 0x20e516d6e78 <col:9> 'int' lvalue Var 0x20e516d3188 'nchar' 'int'
|   |   | `-BinaryOperator 0x20e516d6ef8 <col:17, col:24> 'int' '>>'
|   |   |   |-ImplicitCastExpr 0x20e516d6ee0 <col:17> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x20e516d6e98 <col:17> 'int' lvalue ParmVar 0x20e516d6978 'len' 'int'
|   |   |   `-IntegerLiteral 0x20e516d6eb8 <col:24> 'int' 2
|   |   |-BreakStmt 0x20e516d6f38 <line:80:9>
|   |   |-BinaryOperator 0x20e516d6f88 <line:83:9, col:17> 'int' '='
|   |   | |-DeclRefExpr 0x20e516d6f40 <col:9> 'int' lvalue Var 0x20e516d3188 'nchar' 'int'
|   |   | `-IntegerLiteral 0x20e516d6f60 <col:17> 'int' 0
|   |   |-IfStmt 0x20e516d71a0 <line:86:9, line:89:9>
|   |   | |-BinaryOperator 0x20e516d70f8 <line:86:13, col:19> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x20e516d70e0 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x20e516d7098 <col:13> 'int' lvalue Var 0x20e516d2e40 'ret' 'int'
|   |   | | `-IntegerLiteral 0x20e516d70b8 <col:19> 'int' 0
|   |   | `-CompoundStmt 0x20e516d7188 <col:22, line:89:9>
|   |   |   `-ReturnStmt 0x20e516d7178 <line:88:13, col:21>
|   |   |     `-UnaryOperator 0x20e516d7160 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x20e516d7138 <col:21> 'int' 1
|   |   |-BreakStmt 0x20e516d71b8 <line:90:9>
|   |   |-BinaryOperator 0x20e516d7218 <line:93:9, col:17> 'int' '='
|   |   | |-DeclRefExpr 0x20e516d71c0 <col:9> 'int' lvalue Var 0x20e516d3188 'nchar' 'int'
|   |   | `-ImplicitCastExpr 0x20e516d7200 <col:17> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x20e516d71e0 <col:17> 'int' lvalue ParmVar 0x20e516d6978 'len' 'int'
|   |   |-BreakStmt 0x20e516d7238 <line:94:9>
|   |   |-DefaultStmt 0x20e516d7268 <line:96:5, col:12>
|   |   | `-NullStmt 0x20e516d7260 <col:12>
|   |   `-ReturnStmt 0x20e516d72c8 <line:98:9, col:17>
|   |     `-UnaryOperator 0x20e516d72b0 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x20e516d7288 <col:17> 'int' 1
|   |-IfStmt 0x20e516d7ad0 <line:101:5, line:106:5>
|   | |-BinaryOperator 0x20e516d74e8 <line:101:9, col:42> 'int' '&&'
|   | | |-ParenExpr 0x20e516d7400 <col:9, col:21> 'int'
|   | | | `-BinaryOperator 0x20e516d73e0 <col:10, col:20> 'int' '>'
|   | | |   |-ImplicitCastExpr 0x20e516d73b0 <col:10> 'long' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x20e516d7350 <col:10> 'long' lvalue ParmVar 0x20e516d2af0 'minsize' 'long'
|   | | |   `-ImplicitCastExpr 0x20e516d73c8 <col:20> 'long' <IntegralCast>
|   | | |     `-IntegerLiteral 0x20e516d7388 <col:20> 'int' 0
|   | | `-ParenExpr 0x20e516d74c8 <col:26, col:42> 'int'
|   | |   `-BinaryOperator 0x20e516d74a8 <col:27, col:35> 'int' '<'
|   | |     |-ImplicitCastExpr 0x20e516d7490 <col:27> 'long' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x20e516d7460 <col:27> 'int' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x20e516d7420 <col:27> 'int' lvalue Var 0x20e516d3188 'nchar' 'int'
|   | |     `-ImplicitCastExpr 0x20e516d7478 <col:35> 'long' <LValueToRValue>
|   | |       `-DeclRefExpr 0x20e516d7440 <col:35> 'long' lvalue ParmVar 0x20e516d2af0 'minsize' 'long'
|   | `-CompoundStmt 0x20e516d7aa8 <col:45, line:106:5>
|   |   |-CallExpr 0x20e516d7790 <line:103:9, col:60> 'int'
|   |   | |-ImplicitCastExpr 0x20e516d7778 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x20e516d7618 <col:9> 'int ()' Function 0x20e516d7550 'BIO_snprintf' 'int ()'
|   |   | |-ImplicitCastExpr 0x20e516d77d0 <col:22> 'char *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x20e516d7638 <col:22> 'char [32]' lvalue Var 0x20e516d32a8 'strbuf' 'char [32]'
|   |   | |-UnaryExprOrTypeTraitExpr 0x20e516d76b0 <col:30, col:43> 'unsigned long long' sizeof
|   |   | | `-ParenExpr 0x20e516d7690 <col:36, col:43> 'char [32]' lvalue
|   |   | |   `-DeclRefExpr 0x20e516d7670 <col:37> 'char [32]' lvalue Var 0x20e516d32a8 'strbuf' 'char [32]' non_odr_use_unevaluated
|   |   | |-ImplicitCastExpr 0x20e516d77e8 <col:46> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x20e516d7708 <col:46> 'char [4]' lvalue "%ld"
|   |   | `-ImplicitCastExpr 0x20e516d7800 <col:53> 'long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x20e516d7728 <col:53> 'long' lvalue ParmVar 0x20e516d2af0 'minsize' 'long'
|   |   |-CallExpr 0x20e516d79e0 <line:104:9, col:49> 'int'
|   |   | |-ImplicitCastExpr 0x20e516d79c8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x20e516d7908 <col:9> 'int ()' Function 0x20e516d7840 'ERR_add_error_data' 'int ()'
|   |   | |-IntegerLiteral 0x20e516d7928 <col:28> 'int' 2
|   |   | |-ImplicitCastExpr 0x20e516d7a18 <col:31> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x20e516d7988 <col:31> 'char [9]' lvalue "minsize="
|   |   | `-ImplicitCastExpr 0x20e516d7a40 <col:43> 'char *' <ArrayToPointerDecay>
|   |   |   `-DeclRefExpr 0x20e516d79a8 <col:43> 'char [32]' lvalue Var 0x20e516d32a8 'strbuf' 'char [32]'
|   |   `-ReturnStmt 0x20e516d7a98 <line:105:9, col:17>
|   |     `-UnaryOperator 0x20e516d7a80 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x20e516d7a58 <col:17> 'int' 1
|   |-IfStmt 0x20e516d7fc0 <line:108:5, line:113:5>
|   | |-BinaryOperator 0x20e516d7c80 <line:108:9, col:42> 'int' '&&'
|   | | |-ParenExpr 0x20e516d7b98 <col:9, col:21> 'int'
|   | | | `-BinaryOperator 0x20e516d7b78 <col:10, col:20> 'int' '>'
|   | | |   |-ImplicitCastExpr 0x20e516d7b48 <col:10> 'long' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x20e516d7ae8 <col:10> 'long' lvalue ParmVar 0x20e516d2b70 'maxsize' 'long'
|   | | |   `-ImplicitCastExpr 0x20e516d7b60 <col:20> 'long' <IntegralCast>
|   | | |     `-IntegerLiteral 0x20e516d7b20 <col:20> 'int' 0
|   | | `-ParenExpr 0x20e516d7c60 <col:26, col:42> 'int'
|   | |   `-BinaryOperator 0x20e516d7c40 <col:27, col:35> 'int' '>'
|   | |     |-ImplicitCastExpr 0x20e516d7c28 <col:27> 'long' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x20e516d7bf8 <col:27> 'int' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x20e516d7bb8 <col:27> 'int' lvalue Var 0x20e516d3188 'nchar' 'int'
|   | |     `-ImplicitCastExpr 0x20e516d7c10 <col:35> 'long' <LValueToRValue>
|   | |       `-DeclRefExpr 0x20e516d7bd8 <col:35> 'long' lvalue ParmVar 0x20e516d2b70 'maxsize' 'long'
|   | `-CompoundStmt 0x20e516d7f98 <col:45, line:113:5>
|   |   |-CallExpr 0x20e516d7db8 <line:110:9, col:60> 'int'
|   |   | |-ImplicitCastExpr 0x20e516d7da0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x20e516d7cc0 <col:9> 'int ()' Function 0x20e516d7550 'BIO_snprintf' 'int ()'
|   |   | |-ImplicitCastExpr 0x20e516d7df8 <col:22> 'char *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x20e516d7ce0 <col:22> 'char [32]' lvalue Var 0x20e516d32a8 'strbuf' 'char [32]'
|   |   | |-UnaryExprOrTypeTraitExpr 0x20e516d7d40 <col:30, col:43> 'unsigned long long' sizeof
|   |   | | `-ParenExpr 0x20e516d7d20 <col:36, col:43> 'char [32]' lvalue
|   |   | |   `-DeclRefExpr 0x20e516d7d00 <col:37> 'char [32]' lvalue Var 0x20e516d32a8 'strbuf' 'char [32]' non_odr_use_unevaluated
|   |   | |-ImplicitCastExpr 0x20e516d7e10 <col:46> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x20e516d7d60 <col:46> 'char [4]' lvalue "%ld"
|   |   | `-ImplicitCastExpr 0x20e516d7e28 <col:53> 'long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x20e516d7d80 <col:53> 'long' lvalue ParmVar 0x20e516d2b70 'maxsize' 'long'
|   |   |-CallExpr 0x20e516d7ee0 <line:111:9, col:49> 'int'
|   |   | |-ImplicitCastExpr 0x20e516d7ec8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x20e516d7e40 <col:9> 'int ()' Function 0x20e516d7840 'ERR_add_error_data' 'int ()'
|   |   | |-IntegerLiteral 0x20e516d7e60 <col:28> 'int' 2
|   |   | |-ImplicitCastExpr 0x20e516d7f18 <col:31> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x20e516d7e88 <col:31> 'char [9]' lvalue "maxsize="
|   |   | `-ImplicitCastExpr 0x20e516d7f30 <col:43> 'char *' <ArrayToPointerDecay>
|   |   |   `-DeclRefExpr 0x20e516d7ea8 <col:43> 'char [32]' lvalue Var 0x20e516d32a8 'strbuf' 'char [32]'
|   |   `-ReturnStmt 0x20e516d7f88 <line:112:9, col:17>
|   |     `-UnaryOperator 0x20e516d7f70 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x20e516d7f48 <col:17> 'int' 1
|   |-IfStmt 0x20e516d82e0 <line:116:5, line:119:5>
|   | |-BinaryOperator 0x20e516d8238 <line:116:9, col:61> 'int' '<'
|   | | |-CallExpr 0x20e516d8150 <col:9, col:57> 'int'
|   | | | |-ImplicitCastExpr 0x20e516d8138 <col:9> 'int (*)(const unsigned char *, int, int, int (*)(unsigned long, void *), void *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x20e516d7fd8 <col:9> 'int (const unsigned char *, int, int, int (*)(unsigned long, void *), void *)' Function 0x20e516d9e60 'traverse_string' 'int (const unsigned char *, int, int, int (*)(unsigned long, void *), void *)'
|   | | | |-ImplicitCastExpr 0x20e516d8198 <col:25> 'const unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x20e516d7ff8 <col:25> 'const unsigned char *' lvalue ParmVar 0x20e516d68f8 'in' 'const unsigned char *'
|   | | | |-ImplicitCastExpr 0x20e516d81b0 <col:29> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x20e516d8018 <col:29> 'int' lvalue ParmVar 0x20e516d6978 'len' 'int'
|   | | | |-ImplicitCastExpr 0x20e516d81c8 <col:34> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x20e516d8038 <col:34> 'int' lvalue ParmVar 0x20e516d29f0 'inform' 'int'
|   | | | |-ImplicitCastExpr 0x20e516d81e0 <col:42> 'int (*)(unsigned long, void *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x20e516d8058 <col:42> 'int (unsigned long, void *)' Function 0x20e516da508 'type_str' 'int (unsigned long, void *)'
|   | | | `-ImplicitCastExpr 0x20e516d81f8 <col:52, col:53> 'void *' <BitCast>
|   | | |   `-UnaryOperator 0x20e516d80c8 <col:52, col:53> 'unsigned long *' prefix '&' cannot overflow
|   | | |     `-DeclRefExpr 0x20e516d8078 <col:53> 'unsigned long' lvalue ParmVar 0x20e516d2a70 'mask' 'unsigned long'
|   | | `-IntegerLiteral 0x20e516d8210 <col:61> 'int' 0
|   | `-CompoundStmt 0x20e516d82c8 <col:64, line:119:5>
|   |   `-ReturnStmt 0x20e516d82b8 <line:118:9, col:17>
|   |     `-UnaryOperator 0x20e516d82a0 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x20e516d8278 <col:17> 'int' 1
|   |-IfStmt 0x20e516d86f0 <line:123:5, line:140:5> has_else
|   | |-OpaqueValueExpr 0x20e516d86d8 <<invalid sloc>> '_Bool'
|   | |-NullStmt 0x20e516d86d0 <line:124:9>
|   | `-IfStmt 0x20e516d86a8 <line:125:10, line:140:5> has_else
|   |   |-OpaqueValueExpr 0x20e516d8690 <<invalid sloc>> '_Bool'
|   |   |-NullStmt 0x20e516d8688 <line:126:9>
|   |   `-IfStmt 0x20e516d8660 <line:127:10, line:140:5> has_else
|   |     |-OpaqueValueExpr 0x20e516d8648 <<invalid sloc>> '_Bool'
|   |     |-NullStmt 0x20e516d8640 <line:128:9>
|   |     `-IfStmt 0x20e516d8618 <line:129:10, line:140:5> has_else
|   |       |-OpaqueValueExpr 0x20e516d8600 <<invalid sloc>> '_Bool'
|   |       |-NullStmt 0x20e516d85f8 <line:130:9>
|   |       `-IfStmt 0x20e516d85d0 <line:131:10, line:140:5> has_else
|   |         |-OpaqueValueExpr 0x20e516d85b8 <<invalid sloc>> '_Bool'
|   |         |-CompoundStmt 0x20e516d84a8 <line:131:39, line:134:5>
|   |         `-IfStmt 0x20e516d8590 <col:12, line:140:5> has_else
|   |           |-OpaqueValueExpr 0x20e516d8578 <<invalid sloc>> '_Bool'
|   |           |-CompoundStmt 0x20e516d8518 <line:134:47, line:137:5>
|   |           `-CompoundStmt 0x20e516d8568 <col:12, line:140:5>
|   |-IfStmt 0x20e516d8778 <line:141:5, line:142:16>
|   | |-OpaqueValueExpr 0x20e516d8760 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x20e516d8750 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x20e516d8738 <col:16> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x20e516d8718 <col:16> 'int' lvalue Var 0x20e516d2da8 'str_type' 'int'
|   |-IfStmt 0x20e516dadd0 <line:143:5, line:158:5> has_else
|   | |-OpaqueValueExpr 0x20e516dadb8 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x20e516d8a08 <line:143:15, line:150:5>
|   | | `-BinaryOperator 0x20e516d8808 <line:144:9, col:20> 'char' '='
|   | |   |-DeclRefExpr 0x20e516d8790 <col:9> 'char' lvalue Var 0x20e516d2ed0 'free_out' 'char'
|   | |   `-ImplicitCastExpr 0x20e516d87f0 <col:20> 'char' <IntegralCast>
|   | |     `-IntegerLiteral 0x20e516d87c8 <col:20> 'int' 0
|   | `-CompoundStmt 0x20e516dad98 <line:150:12, line:158:5>
|   |   |-BinaryOperator 0x20e516daab0 <line:151:9, col:20> 'char' '='
|   |   | |-DeclRefExpr 0x20e516d8a20 <col:9> 'char' lvalue Var 0x20e516d2ed0 'free_out' 'char'
|   |   | `-ImplicitCastExpr 0x20e516daa98 <col:20> 'char' <IntegralCast>
|   |   |   `-IntegerLiteral 0x20e516daa70 <col:20> 'int' 1
|   |   `-IfStmt 0x20e516dad80 <line:153:9, line:156:9>
|   |     |-OpaqueValueExpr 0x20e516dad68 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x20e516dad50 <line:153:27, line:156:9>
|   |       `-ReturnStmt 0x20e516dad40 <line:155:13, col:21>
|   |         `-UnaryOperator 0x20e516dad28 <col:20, col:21> 'int' prefix '-'
|   |           `-IntegerLiteral 0x20e516dad00 <col:21> 'int' 1
|   |-IfStmt 0x20e516db0f8 <line:160:5, line:166:5>
|   | |-BinaryOperator 0x20e516dae68 <line:160:9, col:19> 'int' '=='
|   | | |-ImplicitCastExpr 0x20e516dae38 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20e516dadf8 <col:9> 'int' lvalue ParmVar 0x20e516d29f0 'inform' 'int'
|   | | `-ImplicitCastExpr 0x20e516dae50 <col:19> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20e516dae18 <col:19> 'int' lvalue Var 0x20e516d2f68 'outform' 'int'
|   | `-CompoundStmt 0x20e516db0d8 <col:28, line:166:5>
|   |   |-IfStmt 0x20e516db078 <line:161:9, line:164:9>
|   |   | |-OpaqueValueExpr 0x20e516db060 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x20e516db048 <line:161:46, line:164:9>
|   |   |   `-ReturnStmt 0x20e516db038 <line:163:13, col:21>
|   |   |     `-UnaryOperator 0x20e516db020 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x20e516daff8 <col:21> 'int' 1
|   |   `-ReturnStmt 0x20e516db0c8 <line:165:9, col:16>
|   |     `-ImplicitCastExpr 0x20e516db0b0 <col:16> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x20e516db090 <col:16> 'int' lvalue Var 0x20e516d2da8 'str_type' 'int'
|   |-SwitchStmt 0x20e516db148 <line:169:5, line:190:5>
|   | |-ImplicitCastExpr 0x20e516db130 <line:169:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x20e516db110 <col:13> 'int' lvalue Var 0x20e516d2f68 'outform' 'int'
|   | `-CompoundStmt 0x20e516db7a8 <col:22, line:190:5>
|   |   |-BinaryOperator 0x20e516db1d8 <line:171:9, col:18> 'int' '='
|   |   | |-DeclRefExpr 0x20e516db168 <col:9> 'int' lvalue Var 0x20e516d2fe8 'outlen' 'int'
|   |   | `-ImplicitCastExpr 0x20e516db1c0 <col:18> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x20e516db1a0 <col:18> 'int' lvalue Var 0x20e516d3188 'nchar' 'int'
|   |   |-BinaryOperator 0x20e516db268 <line:172:9, col:19> 'int (*)(unsigned long, void *)' '='
|   |   | |-DeclRefExpr 0x20e516db1f8 <col:9> 'int (*)(unsigned long, void *)' lvalue Var 0x20e516d3470 'cpyfunc' 'int (*)(unsigned long, void *)'
|   |   | `-ImplicitCastExpr 0x20e516db250 <col:19> 'int (*)(unsigned long, void *)' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x20e516db230 <col:19> 'int (unsigned long, void *)' Function 0x20e516da738 'cpy_asc' 'int (unsigned long, void *)'
|   |   |-BreakStmt 0x20e516db288 <line:173:9>
|   |   |-BinaryOperator 0x20e516db330 <line:176:9, col:27> 'int' '='
|   |   | |-DeclRefExpr 0x20e516db290 <col:9> 'int' lvalue Var 0x20e516d2fe8 'outlen' 'int'
|   |   | `-BinaryOperator 0x20e516db310 <col:18, col:27> 'int' '<<'
|   |   |   |-ImplicitCastExpr 0x20e516db2f8 <col:18> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x20e516db2b0 <col:18> 'int' lvalue Var 0x20e516d3188 'nchar' 'int'
|   |   |   `-IntegerLiteral 0x20e516db2d0 <col:27> 'int' 1
|   |   |-BinaryOperator 0x20e516db3a8 <line:177:9, col:19> 'int (*)(unsigned long, void *)' '='
|   |   | |-DeclRefExpr 0x20e516db350 <col:9> 'int (*)(unsigned long, void *)' lvalue Var 0x20e516d3470 'cpyfunc' 'int (*)(unsigned long, void *)'
|   |   | `-ImplicitCastExpr 0x20e516db390 <col:19> 'int (*)(unsigned long, void *)' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x20e516db370 <col:19> 'int (unsigned long, void *)' Function 0x20e516da968 'cpy_bmp' 'int (unsigned long, void *)'
|   |   |-BreakStmt 0x20e516db3c8 <line:178:9>
|   |   |-BinaryOperator 0x20e516db470 <line:181:9, col:27> 'int' '='
|   |   | |-DeclRefExpr 0x20e516db3d0 <col:9> 'int' lvalue Var 0x20e516d2fe8 'outlen' 'int'
|   |   | `-BinaryOperator 0x20e516db450 <col:18, col:27> 'int' '<<'
|   |   |   |-ImplicitCastExpr 0x20e516db438 <col:18> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x20e516db3f0 <col:18> 'int' lvalue Var 0x20e516d3188 'nchar' 'int'
|   |   |   `-IntegerLiteral 0x20e516db410 <col:27> 'int' 2
|   |   |-BinaryOperator 0x20e516db4e8 <line:182:9, col:19> 'int (*)(unsigned long, void *)' '='
|   |   | |-DeclRefExpr 0x20e516db490 <col:9> 'int (*)(unsigned long, void *)' lvalue Var 0x20e516d3470 'cpyfunc' 'int (*)(unsigned long, void *)'
|   |   | `-ImplicitCastExpr 0x20e516db4d0 <col:19> 'int (*)(unsigned long, void *)' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x20e516db4b0 <col:19> 'int (unsigned long, void *)' Function 0x20e516d5b70 'cpy_univ' 'int (unsigned long, void *)'
|   |   |-BreakStmt 0x20e516db508 <line:183:9>
|   |   |-BinaryOperator 0x20e516db558 <line:186:9, col:18> 'int' '='
|   |   | |-DeclRefExpr 0x20e516db510 <col:9> 'int' lvalue Var 0x20e516d2fe8 'outlen' 'int'
|   |   | `-IntegerLiteral 0x20e516db530 <col:18> 'int' 0
|   |   |-CallExpr 0x20e516db668 <line:187:9, col:59> 'int'
|   |   | |-ImplicitCastExpr 0x20e516db650 <col:9> 'int (*)(const unsigned char *, int, int, int (*)(unsigned long, void *), void *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x20e516db578 <col:9> 'int (const unsigned char *, int, int, int (*)(unsigned long, void *), void *)' Function 0x20e516d9e60 'traverse_string' 'int (const unsigned char *, int, int, int (*)(unsigned long, void *), void *)'
|   |   | |-ImplicitCastExpr 0x20e516db6b0 <col:25> 'const unsigned char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x20e516db598 <col:25> 'const unsigned char *' lvalue ParmVar 0x20e516d68f8 'in' 'const unsigned char *'
|   |   | |-ImplicitCastExpr 0x20e516db6c8 <col:29> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x20e516db5b8 <col:29> 'int' lvalue ParmVar 0x20e516d6978 'len' 'int'
|   |   | |-ImplicitCastExpr 0x20e516db6e0 <col:34> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x20e516db5d8 <col:34> 'int' lvalue ParmVar 0x20e516d29f0 'inform' 'int'
|   |   | |-ImplicitCastExpr 0x20e516db6f8 <col:42> 'int (*)(unsigned long, void *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x20e516db5f8 <col:42> 'int (unsigned long, void *)' Function 0x20e516da2d8 'out_utf8' 'int (unsigned long, void *)'
|   |   | `-ImplicitCastExpr 0x20e516db710 <col:52, col:53> 'void *' <BitCast>
|   |   |   `-UnaryOperator 0x20e516db638 <col:52, col:53> 'int *' prefix '&' cannot overflow
|   |   |     `-DeclRefExpr 0x20e516db618 <col:53> 'int' lvalue Var 0x20e516d2fe8 'outlen' 'int'
|   |   |-BinaryOperator 0x20e516db780 <line:188:9, col:19> 'int (*)(unsigned long, void *)' '='
|   |   | |-DeclRefExpr 0x20e516db728 <col:9> 'int (*)(unsigned long, void *)' lvalue Var 0x20e516d3470 'cpyfunc' 'int (*)(unsigned long, void *)'
|   |   | `-ImplicitCastExpr 0x20e516db768 <col:19> 'int (*)(unsigned long, void *)' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x20e516db748 <col:19> 'int (unsigned long, void *)' Function 0x20e516d5da0 'cpy_utf8' 'int (unsigned long, void *)'
|   |   `-BreakStmt 0x20e516db7a0 <line:189:9>
|   |-IfStmt 0x20e516dbd30 <line:191:5, line:196:5>
|   | |-BinaryOperator 0x20e516dbb40 <line:191:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ParenExpr 0x20e516dba80 <.//openssl//file_jk/before\crypto\asn1\a_mbstr.c:191:9, col:40> 'unsigned char *'
|   | | | `-BinaryOperator 0x20e516dba40 <col:10, col:39> 'unsigned char *' '='
|   | | |   |-DeclRefExpr 0x20e516db820 <col:10> 'unsigned char *' lvalue Var 0x20e516d30f0 'p' 'unsigned char *'
|   | | |   `-ImplicitCastExpr 0x20e516dba28 <col:14, col:39> 'unsigned char *' <IntegralToPointer>
|   | | |     `-CallExpr 0x20e516dba00 <col:14, col:39> 'int'
|   | | |       |-ImplicitCastExpr 0x20e516db9e8 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x20e516db948 <col:14> 'int ()' Function 0x20e516db880 'OPENSSL_malloc' 'int ()'
|   | | |       `-BinaryOperator 0x20e516db9c8 <col:29, col:38> 'int' '+'
|   | | |         |-ImplicitCastExpr 0x20e516db9b0 <col:29> 'int' <LValueToRValue>
|   | | |         | `-DeclRefExpr 0x20e516db968 <col:29> 'int' lvalue Var 0x20e516d2fe8 'outlen' 'int'
|   | | |         `-IntegerLiteral 0x20e516db988 <col:38> 'int' 1
|   | | `-ImplicitCastExpr 0x20e516dbb28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x20e516dbb08 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x20e516dbae0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x20e516dbaa0 <col:26> 'int' 0
|   | `-CompoundStmt 0x20e516dbd18 <.//openssl//file_jk/before\crypto\asn1\a_mbstr.c:191:51, line:196:5>
|   |   `-ReturnStmt 0x20e516dbd08 <line:195:9, col:17>
|   |     `-UnaryOperator 0x20e516dbcf0 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x20e516dbcc8 <col:17> 'int' 1
|   |-BinaryOperator 0x20e516dbe58 <line:199:5, col:17> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x20e516dbdf8 <col:5, col:13> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x20e516dbdc8 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20e516dbd88 <col:5> 'unsigned char *' lvalue Var 0x20e516d30f0 'p' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x20e516dbde0 <col:7> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20e516dbda8 <col:7> 'int' lvalue Var 0x20e516d2fe8 'outlen' 'int'
|   | `-ImplicitCastExpr 0x20e516dbe40 <col:17> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x20e516dbe18 <col:17> 'int' 0
|   |-CallExpr 0x20e516dbf98 <line:200:5, col:49> 'int'
|   | |-ImplicitCastExpr 0x20e516dbf80 <col:5> 'int (*)(const unsigned char *, int, int, int (*)(unsigned long, void *), void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x20e516dbe78 <col:5> 'int (const unsigned char *, int, int, int (*)(unsigned long, void *), void *)' Function 0x20e516d9e60 'traverse_string' 'int (const unsigned char *, int, int, int (*)(unsigned long, void *), void *)'
|   | |-ImplicitCastExpr 0x20e516dbfe0 <col:21> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x20e516dbe98 <col:21> 'const unsigned char *' lvalue ParmVar 0x20e516d68f8 'in' 'const unsigned char *'
|   | |-ImplicitCastExpr 0x20e516dbff8 <col:25> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x20e516dbeb8 <col:25> 'int' lvalue ParmVar 0x20e516d6978 'len' 'int'
|   | |-ImplicitCastExpr 0x20e516dc010 <col:30> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x20e516dbed8 <col:30> 'int' lvalue ParmVar 0x20e516d29f0 'inform' 'int'
|   | |-ImplicitCastExpr 0x20e516dc028 <col:38> 'int (*)(unsigned long, void *)' <LValueToRValue>
|   | | `-DeclRefExpr 0x20e516dbef8 <col:38> 'int (*)(unsigned long, void *)' lvalue Var 0x20e516d3470 'cpyfunc' 'int (*)(unsigned long, void *)'
|   | `-ImplicitCastExpr 0x20e516dc040 <col:47, col:48> 'void *' <BitCast>
|   |   `-UnaryOperator 0x20e516dbf68 <col:47, col:48> 'unsigned char **' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x20e516dbf18 <col:48> 'unsigned char *' lvalue Var 0x20e516d30f0 'p' 'unsigned char *'
|   `-ReturnStmt 0x20e516dc090 <line:201:5, col:12>
|     `-ImplicitCastExpr 0x20e516dc078 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x20e516dc058 <col:12> 'int' lvalue Var 0x20e516d2da8 'str_type' 'int'
|-FunctionDecl 0x20e516d3690 <line:57:15> col:15 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x20e516d3730 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x20e516dc608 prev 0x20e516d9e60 <line:209:1, line:243:1> line:209:12 used traverse_string 'int (const unsigned char *, int, int, int (*)(unsigned long, void *), void *)' static
| |-ParmVarDecl 0x20e516dc178 <col:28, col:49> col:49 used p 'const unsigned char *'
| |-ParmVarDecl 0x20e516dc1f8 <col:52, col:56> col:56 used len 'int'
| |-ParmVarDecl 0x20e516dc278 <col:61, col:65> col:65 used inform 'int'
| |-ParmVarDecl 0x20e516dc458 <line:210:28, col:71> col:34 used rfunc 'int (*)(unsigned long, void *)'
| |-ParmVarDecl 0x20e516dc4d8 <line:211:28, col:34> col:34 used arg 'void *'
| `-CompoundStmt 0x20e516e2a48 <line:212:1, line:243:1>
|   |-DeclStmt 0x20e516dc750 <line:213:5, col:24>
|   | `-VarDecl 0x20e516dc6e8 <col:5, col:19> col:19 used value 'unsigned long'
|   |-DeclStmt 0x20e516dc7e8 <line:214:5, col:12>
|   | `-VarDecl 0x20e516dc780 <col:5, col:9> col:9 used ret 'int'
|   |-WhileStmt 0x20e516e29f8 <line:215:5, line:241:5>
|   | |-ImplicitCastExpr 0x20e516dc820 <line:215:12> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x20e516dc800 <col:12> 'int' lvalue ParmVar 0x20e516dc1f8 'len' 'int'
|   | `-CompoundStmt 0x20e516e29d8 <col:17, line:241:5>
|   |   |-IfStmt 0x20e516e2748 <line:216:9, line:235:9> has_else
|   |   | |-OpaqueValueExpr 0x20e516e2730 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x20e516dc968 <line:216:37, line:219:9>
|   |   | | |-BinaryOperator 0x20e516dc910 <line:217:13, col:23> 'unsigned long' '='
|   |   | | | |-DeclRefExpr 0x20e516dc858 <col:13> 'unsigned long' lvalue Var 0x20e516dc6e8 'value' 'unsigned long'
|   |   | | | `-ImplicitCastExpr 0x20e516dc8f8 <col:21, col:23> 'unsigned long' <IntegralCast>
|   |   | | |   `-ImplicitCastExpr 0x20e516dc8e0 <col:21, col:23> 'unsigned char' <LValueToRValue>
|   |   | | |     `-UnaryOperator 0x20e516dc8c8 <col:21, col:23> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   | | |       `-UnaryOperator 0x20e516dc8b0 <col:22, col:23> 'const unsigned char *' postfix '++'
|   |   | | |         `-DeclRefExpr 0x20e516dc890 <col:22> 'const unsigned char *' lvalue ParmVar 0x20e516dc178 'p' 'const unsigned char *'
|   |   | | `-UnaryOperator 0x20e516dc950 <line:218:13, col:16> 'int' postfix '--'
|   |   | |   `-DeclRefExpr 0x20e516dc930 <col:13> 'int' lvalue ParmVar 0x20e516dc1f8 'len' 'int'
|   |   | `-IfStmt 0x20e516e2708 <line:219:16, line:235:9> has_else
|   |   |   |-OpaqueValueExpr 0x20e516e26f0 <<invalid sloc>> '_Bool'
|   |   |   |-CompoundStmt 0x20e516e1c80 <line:219:44, line:223:9>
|   |   |   | |-BinaryOperator 0x20e516e1b18 <line:220:13, col:29> 'unsigned long' '='
|   |   |   | | |-DeclRefExpr 0x20e516dc9a8 <col:13> 'unsigned long' lvalue Var 0x20e516dc6e8 'value' 'unsigned long'
|   |   |   | | `-ImplicitCastExpr 0x20e516e1b00 <col:21, col:29> 'unsigned long' <IntegralCast>
|   |   |   | |   `-BinaryOperator 0x20e516e1ae0 <col:21, col:29> 'int' '<<'
|   |   |   | |     |-ImplicitCastExpr 0x20e516dca58 <col:21, col:23> 'int' <IntegralCast>
|   |   |   | |     | `-ImplicitCastExpr 0x20e516dca40 <col:21, col:23> 'unsigned char' <LValueToRValue>
|   |   |   | |     |   `-UnaryOperator 0x20e516dca00 <col:21, col:23> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |   | |     |     `-UnaryOperator 0x20e516dc9e8 <col:22, col:23> 'const unsigned char *' postfix '++'
|   |   |   | |     |       `-DeclRefExpr 0x20e516dc9c8 <col:22> 'const unsigned char *' lvalue ParmVar 0x20e516dc178 'p' 'const unsigned char *'
|   |   |   | |     `-IntegerLiteral 0x20e516dca18 <col:29> 'int' 8
|   |   |   | |-CompoundAssignOperator 0x20e516e1bd8 <line:221:13, col:24> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   |   | | |-DeclRefExpr 0x20e516e1b38 <col:13> 'unsigned long' lvalue Var 0x20e516dc6e8 'value' 'unsigned long'
|   |   |   | | `-ImplicitCastExpr 0x20e516e1bc0 <col:22, col:24> 'unsigned long' <IntegralCast>
|   |   |   | |   `-ImplicitCastExpr 0x20e516e1ba8 <col:22, col:24> 'unsigned char' <LValueToRValue>
|   |   |   | |     `-UnaryOperator 0x20e516e1b90 <col:22, col:24> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |   | |       `-UnaryOperator 0x20e516e1b78 <col:23, col:24> 'const unsigned char *' postfix '++'
|   |   |   | |         `-DeclRefExpr 0x20e516e1b58 <col:23> 'const unsigned char *' lvalue ParmVar 0x20e516dc178 'p' 'const unsigned char *'
|   |   |   | `-CompoundAssignOperator 0x20e516e1c50 <line:222:13, col:20> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |   |-DeclRefExpr 0x20e516e1c08 <col:13> 'int' lvalue ParmVar 0x20e516dc1f8 'len' 'int'
|   |   |   |   `-IntegerLiteral 0x20e516e1c28 <col:20> 'int' 2
|   |   |   `-IfStmt 0x20e516e26c8 <line:223:16, line:235:9> has_else
|   |   |     |-OpaqueValueExpr 0x20e516e26b0 <<invalid sloc>> '_Bool'
|   |   |     |-CompoundStmt 0x20e516e21f0 <line:223:45, line:229:9>
|   |   |     | |-BinaryOperator 0x20e516e1df8 <line:224:13, col:46> 'unsigned long' '='
|   |   |     | | |-DeclRefExpr 0x20e516e1cc8 <col:13> 'unsigned long' lvalue Var 0x20e516dc6e8 'value' 'unsigned long'
|   |   |     | | `-BinaryOperator 0x20e516e1dd8 <col:21, col:46> 'unsigned long' '<<'
|   |   |     | |   |-ParenExpr 0x20e516e1d90 <col:21, col:41> 'unsigned long'
|   |   |     | |   | `-CStyleCastExpr 0x20e516e1d68 <col:22, col:39> 'unsigned long' <IntegralCast>
|   |   |     | |   |   `-ImplicitCastExpr 0x20e516e1d50 <col:37, col:39> 'unsigned char' <LValueToRValue> part_of_explicit_cast
|   |   |     | |   |     `-UnaryOperator 0x20e516e1d20 <col:37, col:39> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | |   |       `-UnaryOperator 0x20e516e1d08 <col:38, col:39> 'const unsigned char *' postfix '++'
|   |   |     | |   |         `-DeclRefExpr 0x20e516e1ce8 <col:38> 'const unsigned char *' lvalue ParmVar 0x20e516dc178 'p' 'const unsigned char *'
|   |   |     | |   `-IntegerLiteral 0x20e516e1db0 <col:46> 'int' 24
|   |   |     | |-CompoundAssignOperator 0x20e516e1f48 <line:225:13, col:47> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   |     | | |-DeclRefExpr 0x20e516e1e18 <col:13> 'unsigned long' lvalue Var 0x20e516dc6e8 'value' 'unsigned long'
|   |   |     | | `-BinaryOperator 0x20e516e1f28 <col:22, col:47> 'unsigned long' '<<'
|   |   |     | |   |-ParenExpr 0x20e516e1ee0 <col:22, col:42> 'unsigned long'
|   |   |     | |   | `-CStyleCastExpr 0x20e516e1eb8 <col:23, col:40> 'unsigned long' <IntegralCast>
|   |   |     | |   |   `-ImplicitCastExpr 0x20e516e1ea0 <col:38, col:40> 'unsigned char' <LValueToRValue> part_of_explicit_cast
|   |   |     | |   |     `-UnaryOperator 0x20e516e1e70 <col:38, col:40> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | |   |       `-UnaryOperator 0x20e516e1e58 <col:39, col:40> 'const unsigned char *' postfix '++'
|   |   |     | |   |         `-DeclRefExpr 0x20e516e1e38 <col:39> 'const unsigned char *' lvalue ParmVar 0x20e516dc178 'p' 'const unsigned char *'
|   |   |     | |   `-IntegerLiteral 0x20e516e1f00 <col:47> 'int' 16
|   |   |     | |-CompoundAssignOperator 0x20e516e2078 <line:226:13, col:30> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   |     | | |-DeclRefExpr 0x20e516e1f78 <col:13> 'unsigned long' lvalue Var 0x20e516dc6e8 'value' 'unsigned long'
|   |   |     | | `-ImplicitCastExpr 0x20e516e2060 <col:22, col:30> 'unsigned long' <IntegralCast>
|   |   |     | |   `-BinaryOperator 0x20e516e2040 <col:22, col:30> 'int' '<<'
|   |   |     | |     |-ImplicitCastExpr 0x20e516e2028 <col:22, col:24> 'int' <IntegralCast>
|   |   |     | |     | `-ImplicitCastExpr 0x20e516e2010 <col:22, col:24> 'unsigned char' <LValueToRValue>
|   |   |     | |     |   `-UnaryOperator 0x20e516e1fd0 <col:22, col:24> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | |     |     `-UnaryOperator 0x20e516e1fb8 <col:23, col:24> 'const unsigned char *' postfix '++'
|   |   |     | |     |       `-DeclRefExpr 0x20e516e1f98 <col:23> 'const unsigned char *' lvalue ParmVar 0x20e516dc178 'p' 'const unsigned char *'
|   |   |     | |     `-IntegerLiteral 0x20e516e1fe8 <col:30> 'int' 8
|   |   |     | |-CompoundAssignOperator 0x20e516e2148 <line:227:13, col:24> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   |     | | |-DeclRefExpr 0x20e516e20a8 <col:13> 'unsigned long' lvalue Var 0x20e516dc6e8 'value' 'unsigned long'
|   |   |     | | `-ImplicitCastExpr 0x20e516e2130 <col:22, col:24> 'unsigned long' <IntegralCast>
|   |   |     | |   `-ImplicitCastExpr 0x20e516e2118 <col:22, col:24> 'unsigned char' <LValueToRValue>
|   |   |     | |     `-UnaryOperator 0x20e516e2100 <col:22, col:24> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | |       `-UnaryOperator 0x20e516e20e8 <col:23, col:24> 'const unsigned char *' postfix '++'
|   |   |     | |         `-DeclRefExpr 0x20e516e20c8 <col:23> 'const unsigned char *' lvalue ParmVar 0x20e516dc178 'p' 'const unsigned char *'
|   |   |     | `-CompoundAssignOperator 0x20e516e21c0 <line:228:13, col:20> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |   |-DeclRefExpr 0x20e516e2178 <col:13> 'int' lvalue ParmVar 0x20e516dc1f8 'len' 'int'
|   |   |     |   `-IntegerLiteral 0x20e516e2198 <col:20> 'int' 4
|   |   |     `-CompoundStmt 0x20e516e2680 <line:229:16, line:235:9>
|   |   |       |-BinaryOperator 0x20e516e2468 <line:230:13, col:43> 'int' '='
|   |   |       | |-DeclRefExpr 0x20e516e2228 <col:13> 'int' lvalue Var 0x20e516dc780 'ret' 'int'
|   |   |       | `-CallExpr 0x20e516e2400 <col:19, col:43> 'int'
|   |   |       |   |-ImplicitCastExpr 0x20e516e23e8 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |   |       |   | `-DeclRefExpr 0x20e516e2350 <col:19> 'int ()' Function 0x20e516e2288 'UTF8_getc' 'int ()'
|   |   |       |   |-ImplicitCastExpr 0x20e516e2438 <col:29> 'const unsigned char *' <LValueToRValue>
|   |   |       |   | `-DeclRefExpr 0x20e516e2370 <col:29> 'const unsigned char *' lvalue ParmVar 0x20e516dc178 'p' 'const unsigned char *'
|   |   |       |   |-ImplicitCastExpr 0x20e516e2450 <col:32> 'int' <LValueToRValue>
|   |   |       |   | `-DeclRefExpr 0x20e516e2390 <col:32> 'int' lvalue ParmVar 0x20e516dc1f8 'len' 'int'
|   |   |       |   `-UnaryOperator 0x20e516e23d0 <col:37, col:38> 'unsigned long *' prefix '&' cannot overflow
|   |   |       |     `-DeclRefExpr 0x20e516e23b0 <col:38> 'unsigned long' lvalue Var 0x20e516dc6e8 'value' 'unsigned long'
|   |   |       |-IfStmt 0x20e516e2558 <line:231:13, line:232:25>
|   |   |       | |-BinaryOperator 0x20e516e24e8 <line:231:17, col:23> 'int' '<'
|   |   |       | | |-ImplicitCastExpr 0x20e516e24d0 <col:17> 'int' <LValueToRValue>
|   |   |       | | | `-DeclRefExpr 0x20e516e2488 <col:17> 'int' lvalue Var 0x20e516dc780 'ret' 'int'
|   |   |       | | `-IntegerLiteral 0x20e516e24a8 <col:23> 'int' 0
|   |   |       | `-ReturnStmt 0x20e516e2548 <line:232:17, col:25>
|   |   |       |   `-UnaryOperator 0x20e516e2530 <col:24, col:25> 'int' prefix '-'
|   |   |       |     `-IntegerLiteral 0x20e516e2508 <col:25> 'int' 1
|   |   |       |-CompoundAssignOperator 0x20e516e25c8 <line:233:13, col:20> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |       | |-DeclRefExpr 0x20e516e2570 <col:13> 'int' lvalue ParmVar 0x20e516dc1f8 'len' 'int'
|   |   |       | `-ImplicitCastExpr 0x20e516e25b0 <col:20> 'int' <LValueToRValue>
|   |   |       |   `-DeclRefExpr 0x20e516e2590 <col:20> 'int' lvalue Var 0x20e516dc780 'ret' 'int'
|   |   |       `-CompoundAssignOperator 0x20e516e2650 <line:234:13, col:18> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   |         |-DeclRefExpr 0x20e516e25f8 <col:13> 'const unsigned char *' lvalue ParmVar 0x20e516dc178 'p' 'const unsigned char *'
|   |   |         `-ImplicitCastExpr 0x20e516e2638 <col:18> 'int' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x20e516e2618 <col:18> 'int' lvalue Var 0x20e516dc780 'ret' 'int'
|   |   `-IfStmt 0x20e516e29c0 <line:236:9, line:240:9>
|   |     |-ImplicitCastExpr 0x20e516e2790 <line:236:13> 'int (*)(unsigned long, void *)' <LValueToRValue>
|   |     | `-DeclRefExpr 0x20e516e2770 <col:13> 'int (*)(unsigned long, void *)' lvalue ParmVar 0x20e516dc458 'rfunc' 'int (*)(unsigned long, void *)'
|   |     `-CompoundStmt 0x20e516e29a0 <col:20, line:240:9>
|   |       |-BinaryOperator 0x20e516e28a0 <line:237:13, col:35> 'int' '='
|   |       | |-DeclRefExpr 0x20e516e27a8 <col:13> 'int' lvalue Var 0x20e516dc780 'ret' 'int'
|   |       | `-CallExpr 0x20e516e2840 <col:19, col:35> 'int'
|   |       |   |-ImplicitCastExpr 0x20e516e2828 <col:19> 'int (*)(unsigned long, void *)' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x20e516e27c8 <col:19> 'int (*)(unsigned long, void *)' lvalue ParmVar 0x20e516dc458 'rfunc' 'int (*)(unsigned long, void *)'
|   |       |   |-ImplicitCastExpr 0x20e516e2870 <col:25> 'unsigned long' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x20e516e27e8 <col:25> 'unsigned long' lvalue Var 0x20e516dc6e8 'value' 'unsigned long'
|   |       |   `-ImplicitCastExpr 0x20e516e2888 <col:32> 'void *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x20e516e2808 <col:32> 'void *' lvalue ParmVar 0x20e516dc4d8 'arg' 'void *'
|   |       `-IfStmt 0x20e516e2988 <line:238:13, line:239:24>
|   |         |-BinaryOperator 0x20e516e2920 <line:238:17, col:24> 'int' '<='
|   |         | |-ImplicitCastExpr 0x20e516e2908 <col:17> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x20e516e28c0 <col:17> 'int' lvalue Var 0x20e516dc780 'ret' 'int'
|   |         | `-IntegerLiteral 0x20e516e28e0 <col:24> 'int' 0
|   |         `-ReturnStmt 0x20e516e2978 <line:239:17, col:24>
|   |           `-ImplicitCastExpr 0x20e516e2960 <col:24> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x20e516e2940 <col:24> 'int' lvalue Var 0x20e516dc780 'ret' 'int'
|   `-ReturnStmt 0x20e516e2a38 <line:242:5, col:12>
|     `-IntegerLiteral 0x20e516e2a10 <col:12> 'int' 1
|-FunctionDecl 0x20e516dec00 prev 0x20e516da0a8 <line:249:1, line:255:1> line:249:12 used in_utf8 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x20e516deab0 <col:20, col:34> col:34 value 'unsigned long'
| |-ParmVarDecl 0x20e516deb30 <col:41, col:47> col:47 used arg 'void *'
| `-CompoundStmt 0x20e516deeb0 <line:250:1, line:255:1>
|   |-DeclStmt 0x20e516ded30 <line:251:5, col:15>
|   | `-VarDecl 0x20e516decc8 <col:5, col:10> col:10 used nchar 'int *'
|   |-BinaryOperator 0x20e516dedd0 <line:252:5, col:13> 'int *' '='
|   | |-DeclRefExpr 0x20e516ded48 <col:5> 'int *' lvalue Var 0x20e516decc8 'nchar' 'int *'
|   | `-ImplicitCastExpr 0x20e516dedb8 <col:13> 'int *' <BitCast>
|   |   `-ImplicitCastExpr 0x20e516deda0 <col:13> 'void *' <LValueToRValue>
|   |     `-DeclRefExpr 0x20e516ded80 <col:13> 'void *' lvalue ParmVar 0x20e516deb30 'arg' 'void *'
|   |-UnaryOperator 0x20e516dee60 <line:253:5, col:13> 'int' postfix '++'
|   | `-ParenExpr 0x20e516dee40 <col:5, col:12> 'int' lvalue
|   |   `-UnaryOperator 0x20e516dee28 <col:6, col:7> 'int' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x20e516dee10 <col:7> 'int *' <LValueToRValue>
|   |       `-DeclRefExpr 0x20e516dedf0 <col:7> 'int *' lvalue Var 0x20e516decc8 'nchar' 'int *'
|   `-ReturnStmt 0x20e516deea0 <line:254:5, col:12>
|     `-IntegerLiteral 0x20e516dee78 <col:12> 'int' 1
|-FunctionDecl 0x20e516df048 prev 0x20e516da2d8 <line:259:1, line:265:1> line:259:12 used out_utf8 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x20e516deef8 <col:21, col:35> col:35 used value 'unsigned long'
| |-ParmVarDecl 0x20e516def78 <col:42, col:48> col:48 used arg 'void *'
| `-CompoundStmt 0x20e516df550 <line:260:1, line:265:1>
|   |-DeclStmt 0x20e516df178 <line:261:5, col:16>
|   | `-VarDecl 0x20e516df110 <col:5, col:10> col:10 used outlen 'int *'
|   |-BinaryOperator 0x20e516df218 <line:262:5, col:14> 'int *' '='
|   | |-DeclRefExpr 0x20e516df190 <col:5> 'int *' lvalue Var 0x20e516df110 'outlen' 'int *'
|   | `-ImplicitCastExpr 0x20e516df200 <col:14> 'int *' <BitCast>
|   |   `-ImplicitCastExpr 0x20e516df1e8 <col:14> 'void *' <LValueToRValue>
|   |     `-DeclRefExpr 0x20e516df1c8 <col:14> 'void *' lvalue ParmVar 0x20e516def78 'arg' 'void *'
|   |-CompoundAssignOperator 0x20e516df4e8 <line:263:5, col:41> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-UnaryOperator 0x20e516df270 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x20e516df258 <col:6> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20e516df238 <col:6> 'int *' lvalue Var 0x20e516df110 'outlen' 'int *'
|   | `-CallExpr 0x20e516df498 <col:16, col:41> 'int'
|   |   |-ImplicitCastExpr 0x20e516df480 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x20e516df378 <col:16> 'int ()' Function 0x20e516df2b0 'UTF8_putc' 'int ()'
|   |   |-ParenExpr 0x20e516df400 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |   | `-CStyleCastExpr 0x20e516df3d8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |   `-IntegerLiteral 0x20e516df398 <col:26> 'int' 0
|   |   |-UnaryOperator 0x20e516df448 <.//openssl//file_jk/before\crypto\asn1\a_mbstr.c:263:32, col:33> 'int' prefix '-'
|   |   | `-IntegerLiteral 0x20e516df420 <col:33> 'int' 1
|   |   `-ImplicitCastExpr 0x20e516df4d0 <col:36> 'unsigned long' <LValueToRValue>
|   |     `-DeclRefExpr 0x20e516df460 <col:36> 'unsigned long' lvalue ParmVar 0x20e516deef8 'value' 'unsigned long'
|   `-ReturnStmt 0x20e516df540 <line:264:5, col:12>
|     `-IntegerLiteral 0x20e516df518 <col:12> 'int' 1
|-FunctionDecl 0x20e516df6e8 prev 0x20e516da508 <line:272:1, line:290:1> line:272:12 used type_str 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x20e516df598 <col:21, col:35> col:35 used value 'unsigned long'
| |-ParmVarDecl 0x20e516df618 <col:42, col:48> col:48 used arg 'void *'
| `-CompoundStmt 0x20e516e0050 <line:273:1, line:290:1>
|   |-DeclStmt 0x20e516df818 <line:274:5, col:24>
|   | `-VarDecl 0x20e516df7b0 <col:5, col:19> col:19 used types 'unsigned long'
|   |-BinaryOperator 0x20e516df930 <line:275:5, col:35> 'unsigned long' '='
|   | |-DeclRefExpr 0x20e516df830 <col:5> 'unsigned long' lvalue Var 0x20e516df7b0 'types' 'unsigned long'
|   | `-ImplicitCastExpr 0x20e516df918 <col:13, col:35> 'unsigned long' <LValueToRValue>
|   |   `-UnaryOperator 0x20e516df900 <col:13, col:35> 'unsigned long' lvalue prefix '*' cannot overflow
|   |     `-ParenExpr 0x20e516df8e0 <col:14, col:35> 'unsigned long *'
|   |       `-CStyleCastExpr 0x20e516df8b8 <col:15, col:32> 'unsigned long *' <BitCast>
|   |         `-ImplicitCastExpr 0x20e516df8a0 <col:32> 'void *' <LValueToRValue> part_of_explicit_cast
|   |           `-DeclRefExpr 0x20e516df868 <col:32> 'void *' lvalue ParmVar 0x20e516df618 'arg' 'void *'
|   |-IfStmt 0x20e516dfef8 <line:286:5, line:287:17>
|   | |-UnaryOperator 0x20e516dfe90 <line:286:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x20e516dfe78 <col:10> 'unsigned long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20e516dfe58 <col:10> 'unsigned long' lvalue Var 0x20e516df7b0 'types' 'unsigned long'
|   | `-ReturnStmt 0x20e516dfee8 <line:287:9, col:17>
|   |   `-UnaryOperator 0x20e516dfed0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x20e516dfea8 <col:17> 'int' 1
|   |-BinaryOperator 0x20e516dfff8 <line:288:5, col:31> 'unsigned long' '='
|   | |-UnaryOperator 0x20e516dffa8 <col:5, col:27> 'unsigned long' lvalue prefix '*' cannot overflow
|   | | `-ParenExpr 0x20e516dff88 <col:6, col:27> 'unsigned long *'
|   | |   `-CStyleCastExpr 0x20e516dff60 <col:7, col:24> 'unsigned long *' <BitCast>
|   | |     `-ImplicitCastExpr 0x20e516dff48 <col:24> 'void *' <LValueToRValue> part_of_explicit_cast
|   | |       `-DeclRefExpr 0x20e516dff10 <col:24> 'void *' lvalue ParmVar 0x20e516df618 'arg' 'void *'
|   | `-ImplicitCastExpr 0x20e516dffe0 <col:31> 'unsigned long' <LValueToRValue>
|   |   `-DeclRefExpr 0x20e516dffc0 <col:31> 'unsigned long' lvalue Var 0x20e516df7b0 'types' 'unsigned long'
|   `-ReturnStmt 0x20e516e0040 <line:289:5, col:12>
|     `-IntegerLiteral 0x20e516e0018 <col:12> 'int' 1
|-FunctionDecl 0x20e516e01f0 prev 0x20e516da738 <line:294:1, line:302:1> line:294:12 used cpy_asc 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x20e516e00a0 <col:20, col:34> col:34 used value 'unsigned long'
| |-ParmVarDecl 0x20e516e0120 <col:41, col:47> col:47 used arg 'void *'
| `-CompoundStmt 0x20e516e06e8 <line:295:1, line:302:1>
|   |-DeclStmt 0x20e516e03c0 <line:296:5, col:26>
|   | |-VarDecl 0x20e516e02c0 <col:5, col:21> col:21 used p 'unsigned char **'
|   | `-VarDecl 0x20e516e0340 <col:5, col:25> col:25 used q 'unsigned char *'
|   |-BinaryOperator 0x20e516e0460 <line:297:5, col:9> 'unsigned char **' '='
|   | |-DeclRefExpr 0x20e516e03d8 <col:5> 'unsigned char **' lvalue Var 0x20e516e02c0 'p' 'unsigned char **'
|   | `-ImplicitCastExpr 0x20e516e0448 <col:9> 'unsigned char **' <BitCast>
|   |   `-ImplicitCastExpr 0x20e516e0430 <col:9> 'void *' <LValueToRValue>
|   |     `-DeclRefExpr 0x20e516e0410 <col:9> 'void *' lvalue ParmVar 0x20e516e0120 'arg' 'void *'
|   |-BinaryOperator 0x20e516e0520 <line:298:5, col:10> 'unsigned char *' '='
|   | |-DeclRefExpr 0x20e516e0480 <col:5> 'unsigned char *' lvalue Var 0x20e516e0340 'q' 'unsigned char *'
|   | `-ImplicitCastExpr 0x20e516e0508 <col:9, col:10> 'unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x20e516e04f0 <col:9, col:10> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x20e516e04d8 <col:10> 'unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x20e516e04b8 <col:10> 'unsigned char **' lvalue Var 0x20e516e02c0 'p' 'unsigned char **'
|   |-BinaryOperator 0x20e516e0608 <line:299:5, col:25> 'unsigned char' '='
|   | |-UnaryOperator 0x20e516e0578 <col:5, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x20e516e0560 <col:6> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20e516e0540 <col:6> 'unsigned char *' lvalue Var 0x20e516e0340 'q' 'unsigned char *'
|   | `-CStyleCastExpr 0x20e516e05e0 <col:10, col:25> 'unsigned char' <IntegralCast>
|   |   `-ImplicitCastExpr 0x20e516e05c8 <col:25> 'unsigned long' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x20e516e0590 <col:25> 'unsigned long' lvalue ParmVar 0x20e516e00a0 'value' 'unsigned long'
|   |-UnaryOperator 0x20e516e0698 <line:300:5, col:9> 'unsigned char *' postfix '++'
|   | `-ParenExpr 0x20e516e0678 <col:5, col:8> 'unsigned char *' lvalue
|   |   `-UnaryOperator 0x20e516e0660 <col:6, col:7> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x20e516e0648 <col:7> 'unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x20e516e0628 <col:7> 'unsigned char **' lvalue Var 0x20e516e02c0 'p' 'unsigned char **'
|   `-ReturnStmt 0x20e516e06d8 <line:301:5, col:12>
|     `-IntegerLiteral 0x20e516e06b0 <col:12> 'int' 1
|-FunctionDecl 0x20e516e0890 prev 0x20e516da968 <line:306:1, line:315:1> line:306:12 used cpy_bmp 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x20e516e0740 <col:20, col:34> col:34 used value 'unsigned long'
| |-ParmVarDecl 0x20e516e07c0 <col:41, col:47> col:47 used arg 'void *'
| `-CompoundStmt 0x20e516e1058 <line:307:1, line:315:1>
|   |-DeclStmt 0x20e516e0a60 <line:308:5, col:26>
|   | |-VarDecl 0x20e516e0960 <col:5, col:21> col:21 used p 'unsigned char **'
|   | `-VarDecl 0x20e516e09e0 <col:5, col:25> col:25 used q 'unsigned char *'
|   |-BinaryOperator 0x20e516e0b20 <line:309:5, col:9> 'unsigned char **' '='
|   | |-DeclRefExpr 0x20e516e0a78 <col:5> 'unsigned char **' lvalue Var 0x20e516e0960 'p' 'unsigned char **'
|   | `-ImplicitCastExpr 0x20e516e0b08 <col:9> 'unsigned char **' <BitCast>
|   |   `-ImplicitCastExpr 0x20e516e0af0 <col:9> 'void *' <LValueToRValue>
|   |     `-DeclRefExpr 0x20e516e0ad0 <col:9> 'void *' lvalue ParmVar 0x20e516e07c0 'arg' 'void *'
|   |-BinaryOperator 0x20e516e0be0 <line:310:5, col:10> 'unsigned char *' '='
|   | |-DeclRefExpr 0x20e516e0b40 <col:5> 'unsigned char *' lvalue Var 0x20e516e09e0 'q' 'unsigned char *'
|   | `-ImplicitCastExpr 0x20e516e0bc8 <col:9, col:10> 'unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x20e516e0bb0 <col:9, col:10> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x20e516e0b98 <col:10> 'unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x20e516e0b78 <col:10> 'unsigned char **' lvalue Var 0x20e516e0960 'p' 'unsigned char **'
|   |-BinaryOperator 0x20e516e0dd0 <line:311:5, col:47> 'unsigned char' '='
|   | |-UnaryOperator 0x20e516e0c38 <col:5, col:7> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x20e516e0c20 <col:6, col:7> 'unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x20e516e0c00 <col:6> 'unsigned char *' lvalue Var 0x20e516e09e0 'q' 'unsigned char *'
|   | `-CStyleCastExpr 0x20e516e0da8 <col:12, col:47> 'unsigned char' <IntegralCast>
|   |   `-ParenExpr 0x20e516e0d88 <col:27, col:47> 'unsigned long'
|   |     `-BinaryOperator 0x20e516e0d30 <col:28, col:43> 'unsigned long' '&'
|   |       |-ParenExpr 0x20e516e0cd0 <col:28, col:39> 'unsigned long'
|   |       | `-BinaryOperator 0x20e516e0cb0 <col:29, col:38> 'unsigned long' '>>'
|   |       |   |-ImplicitCastExpr 0x20e516e0c98 <col:29> 'unsigned long' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x20e516e0c50 <col:29> 'unsigned long' lvalue ParmVar 0x20e516e0740 'value' 'unsigned long'
|   |       |   `-IntegerLiteral 0x20e516e0c70 <col:38> 'int' 8
|   |       `-ImplicitCastExpr 0x20e516e0d18 <col:43> 'unsigned long' <IntegralCast>
|   |         `-IntegerLiteral 0x20e516e0cf0 <col:43> 'int' 255
|   |-BinaryOperator 0x20e516e0f58 <line:312:5, col:38> 'unsigned char' '='
|   | |-UnaryOperator 0x20e516e0e28 <col:5, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x20e516e0e10 <col:6> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20e516e0df0 <col:6> 'unsigned char *' lvalue Var 0x20e516e09e0 'q' 'unsigned char *'
|   | `-CStyleCastExpr 0x20e516e0f30 <col:10, col:38> 'unsigned char' <IntegralCast>
|   |   `-ParenExpr 0x20e516e0f10 <col:25, col:38> 'unsigned long'
|   |     `-BinaryOperator 0x20e516e0eb8 <col:26, col:34> 'unsigned long' '&'
|   |       |-ImplicitCastExpr 0x20e516e0e88 <col:26> 'unsigned long' <LValueToRValue>
|   |       | `-DeclRefExpr 0x20e516e0e40 <col:26> 'unsigned long' lvalue ParmVar 0x20e516e0740 'value' 'unsigned long'
|   |       `-ImplicitCastExpr 0x20e516e0ea0 <col:34> 'unsigned long' <IntegralCast>
|   |         `-IntegerLiteral 0x20e516e0e60 <col:34> 'int' 255
|   |-CompoundAssignOperator 0x20e516e0ff0 <line:313:5, col:11> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |-UnaryOperator 0x20e516e0fb0 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x20e516e0f98 <col:6> 'unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20e516e0f78 <col:6> 'unsigned char **' lvalue Var 0x20e516e0960 'p' 'unsigned char **'
|   | `-IntegerLiteral 0x20e516e0fc8 <col:11> 'int' 2
|   `-ReturnStmt 0x20e516e1048 <line:314:5, col:12>
|     `-IntegerLiteral 0x20e516e1020 <col:12> 'int' 1
|-FunctionDecl 0x20e516e1208 prev 0x20e516d5b70 <line:319:1, line:330:1> line:319:12 used cpy_univ 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x20e516e10b8 <col:21, col:35> col:35 used value 'unsigned long'
| |-ParmVarDecl 0x20e516e1138 <col:42, col:48> col:48 used arg 'void *'
| `-CompoundStmt 0x20e516e2dc0 <line:320:1, line:330:1>
|   |-DeclStmt 0x20e516e13d8 <line:321:5, col:26>
|   | |-VarDecl 0x20e516e12d8 <col:5, col:21> col:21 used p 'unsigned char **'
|   | `-VarDecl 0x20e516e1358 <col:5, col:25> col:25 used q 'unsigned char *'
|   |-BinaryOperator 0x20e516e1478 <line:322:5, col:9> 'unsigned char **' '='
|   | |-DeclRefExpr 0x20e516e13f0 <col:5> 'unsigned char **' lvalue Var 0x20e516e12d8 'p' 'unsigned char **'
|   | `-ImplicitCastExpr 0x20e516e1460 <col:9> 'unsigned char **' <BitCast>
|   |   `-ImplicitCastExpr 0x20e516e1448 <col:9> 'void *' <LValueToRValue>
|   |     `-DeclRefExpr 0x20e516e1428 <col:9> 'void *' lvalue ParmVar 0x20e516e1138 'arg' 'void *'
|   |-BinaryOperator 0x20e516e1538 <line:323:5, col:10> 'unsigned char *' '='
|   | |-DeclRefExpr 0x20e516e1498 <col:5> 'unsigned char *' lvalue Var 0x20e516e1358 'q' 'unsigned char *'
|   | `-ImplicitCastExpr 0x20e516e1520 <col:9, col:10> 'unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x20e516e1508 <col:9, col:10> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x20e516e14f0 <col:10> 'unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x20e516e14d0 <col:10> 'unsigned char **' lvalue Var 0x20e516e12d8 'p' 'unsigned char **'
|   |-BinaryOperator 0x20e516e1728 <line:324:5, col:48> 'unsigned char' '='
|   | |-UnaryOperator 0x20e516e1590 <col:5, col:7> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x20e516e1578 <col:6, col:7> 'unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x20e516e1558 <col:6> 'unsigned char *' lvalue Var 0x20e516e1358 'q' 'unsigned char *'
|   | `-CStyleCastExpr 0x20e516e1700 <col:12, col:48> 'unsigned char' <IntegralCast>
|   |   `-ParenExpr 0x20e516e16e0 <col:27, col:48> 'unsigned long'
|   |     `-BinaryOperator 0x20e516e1688 <col:28, col:44> 'unsigned long' '&'
|   |       |-ParenExpr 0x20e516e1628 <col:28, col:40> 'unsigned long'
|   |       | `-BinaryOperator 0x20e516e1608 <col:29, col:38> 'unsigned long' '>>'
|   |       |   |-ImplicitCastExpr 0x20e516e15f0 <col:29> 'unsigned long' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x20e516e15a8 <col:29> 'unsigned long' lvalue ParmVar 0x20e516e10b8 'value' 'unsigned long'
|   |       |   `-IntegerLiteral 0x20e516e15c8 <col:38> 'int' 24
|   |       `-ImplicitCastExpr 0x20e516e1670 <col:44> 'unsigned long' <IntegralCast>
|   |         `-IntegerLiteral 0x20e516e1648 <col:44> 'int' 255
|   |-BinaryOperator 0x20e516e1918 <line:325:5, col:48> 'unsigned char' '='
|   | |-UnaryOperator 0x20e516e1780 <col:5, col:7> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x20e516e1768 <col:6, col:7> 'unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x20e516e1748 <col:6> 'unsigned char *' lvalue Var 0x20e516e1358 'q' 'unsigned char *'
|   | `-CStyleCastExpr 0x20e516e18f0 <col:12, col:48> 'unsigned char' <IntegralCast>
|   |   `-ParenExpr 0x20e516e18d0 <col:27, col:48> 'unsigned long'
|   |     `-BinaryOperator 0x20e516e1878 <col:28, col:44> 'unsigned long' '&'
|   |       |-ParenExpr 0x20e516e1818 <col:28, col:40> 'unsigned long'
|   |       | `-BinaryOperator 0x20e516e17f8 <col:29, col:38> 'unsigned long' '>>'
|   |       |   |-ImplicitCastExpr 0x20e516e17e0 <col:29> 'unsigned long' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x20e516e1798 <col:29> 'unsigned long' lvalue ParmVar 0x20e516e10b8 'value' 'unsigned long'
|   |       |   `-IntegerLiteral 0x20e516e17b8 <col:38> 'int' 16
|   |       `-ImplicitCastExpr 0x20e516e1860 <col:44> 'unsigned long' <IntegralCast>
|   |         `-IntegerLiteral 0x20e516e1838 <col:44> 'int' 255
|   |-BinaryOperator 0x20e516e2b38 <line:326:5, col:47> 'unsigned char' '='
|   | |-UnaryOperator 0x20e516e1970 <col:5, col:7> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x20e516e1958 <col:6, col:7> 'unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x20e516e1938 <col:6> 'unsigned char *' lvalue Var 0x20e516e1358 'q' 'unsigned char *'
|   | `-CStyleCastExpr 0x20e516e2b10 <col:12, col:47> 'unsigned char' <IntegralCast>
|   |   `-ParenExpr 0x20e516e2af0 <col:27, col:47> 'unsigned long'
|   |     `-BinaryOperator 0x20e516e1a68 <col:28, col:43> 'unsigned long' '&'
|   |       |-ParenExpr 0x20e516e1a08 <col:28, col:39> 'unsigned long'
|   |       | `-BinaryOperator 0x20e516e19e8 <col:29, col:38> 'unsigned long' '>>'
|   |       |   |-ImplicitCastExpr 0x20e516e19d0 <col:29> 'unsigned long' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x20e516e1988 <col:29> 'unsigned long' lvalue ParmVar 0x20e516e10b8 'value' 'unsigned long'
|   |       |   `-IntegerLiteral 0x20e516e19a8 <col:38> 'int' 8
|   |       `-ImplicitCastExpr 0x20e516e1a50 <col:43> 'unsigned long' <IntegralCast>
|   |         `-IntegerLiteral 0x20e516e1a28 <col:43> 'int' 255
|   |-BinaryOperator 0x20e516e2cc0 <line:327:5, col:38> 'unsigned char' '='
|   | |-UnaryOperator 0x20e516e2b90 <col:5, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x20e516e2b78 <col:6> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20e516e2b58 <col:6> 'unsigned char *' lvalue Var 0x20e516e1358 'q' 'unsigned char *'
|   | `-CStyleCastExpr 0x20e516e2c98 <col:10, col:38> 'unsigned char' <IntegralCast>
|   |   `-ParenExpr 0x20e516e2c78 <col:25, col:38> 'unsigned long'
|   |     `-BinaryOperator 0x20e516e2c20 <col:26, col:34> 'unsigned long' '&'
|   |       |-ImplicitCastExpr 0x20e516e2bf0 <col:26> 'unsigned long' <LValueToRValue>
|   |       | `-DeclRefExpr 0x20e516e2ba8 <col:26> 'unsigned long' lvalue ParmVar 0x20e516e10b8 'value' 'unsigned long'
|   |       `-ImplicitCastExpr 0x20e516e2c08 <col:34> 'unsigned long' <IntegralCast>
|   |         `-IntegerLiteral 0x20e516e2bc8 <col:34> 'int' 255
|   |-CompoundAssignOperator 0x20e516e2d58 <line:328:5, col:11> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |-UnaryOperator 0x20e516e2d18 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x20e516e2d00 <col:6> 'unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20e516e2ce0 <col:6> 'unsigned char **' lvalue Var 0x20e516e12d8 'p' 'unsigned char **'
|   | `-IntegerLiteral 0x20e516e2d30 <col:11> 'int' 4
|   `-ReturnStmt 0x20e516e2db0 <line:329:5, col:12>
|     `-IntegerLiteral 0x20e516e2d88 <col:12> 'int' 1
|-FunctionDecl 0x20e516e2f80 prev 0x20e516d5da0 <line:334:1, line:343:1> line:334:12 used cpy_utf8 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x20e516e2e30 <col:21, col:35> col:35 used value 'unsigned long'
| |-ParmVarDecl 0x20e516e2eb0 <col:42, col:48> col:48 used arg 'void *'
| `-CompoundStmt 0x20e516e3490 <line:335:1, line:343:1>
|   |-DeclStmt 0x20e516e30b8 <line:336:5, col:22>
|   | `-VarDecl 0x20e516e3050 <col:5, col:21> col:21 used p 'unsigned char **'
|   |-DeclStmt 0x20e516e3150 <line:337:5, col:12>
|   | `-VarDecl 0x20e516e30e8 <col:5, col:9> col:9 used ret 'int'
|   |-BinaryOperator 0x20e516e31f0 <line:338:5, col:9> 'unsigned char **' '='
|   | |-DeclRefExpr 0x20e516e3168 <col:5> 'unsigned char **' lvalue Var 0x20e516e3050 'p' 'unsigned char **'
|   | `-ImplicitCastExpr 0x20e516e31d8 <col:9> 'unsigned char **' <BitCast>
|   |   `-ImplicitCastExpr 0x20e516e31c0 <col:9> 'void *' <LValueToRValue>
|   |     `-DeclRefExpr 0x20e516e31a0 <col:9> 'void *' lvalue ParmVar 0x20e516e2eb0 'arg' 'void *'
|   |-BinaryOperator 0x20e516e3380 <line:340:5, col:36> 'int' '='
|   | |-DeclRefExpr 0x20e516e3210 <col:5> 'int' lvalue Var 0x20e516e30e8 'ret' 'int'
|   | `-CallExpr 0x20e516e3318 <col:11, col:36> 'int'
|   |   |-ImplicitCastExpr 0x20e516e3300 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x20e516e3248 <col:11> 'int ()' Function 0x20e516df2b0 'UTF8_putc' 'int ()'
|   |   |-ImplicitCastExpr 0x20e516e3350 <col:21, col:22> 'unsigned char *' <LValueToRValue>
|   |   | `-UnaryOperator 0x20e516e32a0 <col:21, col:22> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |   |   `-ImplicitCastExpr 0x20e516e3288 <col:22> 'unsigned char **' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x20e516e3268 <col:22> 'unsigned char **' lvalue Var 0x20e516e3050 'p' 'unsigned char **'
|   |   |-IntegerLiteral 0x20e516e32b8 <col:25> 'int' 255
|   |   `-ImplicitCastExpr 0x20e516e3368 <col:31> 'unsigned long' <LValueToRValue>
|   |     `-DeclRefExpr 0x20e516e32e0 <col:31> 'unsigned long' lvalue ParmVar 0x20e516e2e30 'value' 'unsigned long'
|   |-CompoundAssignOperator 0x20e516e3428 <line:341:5, col:11> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |-UnaryOperator 0x20e516e33d8 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x20e516e33c0 <col:6> 'unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20e516e33a0 <col:6> 'unsigned char **' lvalue Var 0x20e516e3050 'p' 'unsigned char **'
|   | `-ImplicitCastExpr 0x20e516e3410 <col:11> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x20e516e33f0 <col:11> 'int' lvalue Var 0x20e516e30e8 'ret' 'int'
|   `-ReturnStmt 0x20e516e3480 <line:342:5, col:12>
|     `-IntegerLiteral 0x20e516e3458 <col:12> 'int' 1
|-FunctionDecl 0x20e516e3598 prev 0x20e516d60e8 <line:346:1, line:376:1> line:346:12 used is_printable 'int (unsigned long)' static
| |-ParmVarDecl 0x20e516e34e8 <col:25, col:39> col:39 used value 'unsigned long'
| `-CompoundStmt 0x20e516e41f0 <line:347:1, line:376:1>
|   |-DeclStmt 0x20e516e36c0 <line:348:5, col:11>
|   | `-VarDecl 0x20e516e3658 <col:5, col:9> col:9 used ch 'int'
|   |-IfStmt 0x20e516e37a8 <line:349:5, line:350:16>
|   | |-BinaryOperator 0x20e516e3750 <line:349:9, col:17> 'int' '>'
|   | | |-ImplicitCastExpr 0x20e516e3720 <col:9> 'unsigned long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20e516e36d8 <col:9> 'unsigned long' lvalue ParmVar 0x20e516e34e8 'value' 'unsigned long'
|   | | `-ImplicitCastExpr 0x20e516e3738 <col:17> 'unsigned long' <IntegralCast>
|   | |   `-IntegerLiteral 0x20e516e36f8 <col:17> 'int' 127
|   | `-ReturnStmt 0x20e516e3798 <line:350:9, col:16>
|   |   `-IntegerLiteral 0x20e516e3770 <col:16> 'int' 0
|   |-BinaryOperator 0x20e516e3870 <line:351:5, col:15> 'int' '='
|   | |-DeclRefExpr 0x20e516e37c0 <col:5> 'int' lvalue Var 0x20e516e3658 'ch' 'int'
|   | `-CStyleCastExpr 0x20e516e3848 <col:10, col:15> 'int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x20e516e3830 <col:15> 'unsigned long' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x20e516e37f8 <col:15> 'unsigned long' lvalue ParmVar 0x20e516e34e8 'value' 'unsigned long'
|   |-IfStmt 0x20e516e3a08 <line:357:5, line:358:16>
|   | |-BinaryOperator 0x20e516e39b0 <line:357:9, col:34> 'int' '&&'
|   | | |-ParenExpr 0x20e516e3900 <col:9, col:19> 'int'
|   | | | `-BinaryOperator 0x20e516e38e0 <col:10, col:16> 'int' '>='
|   | | |   |-ImplicitCastExpr 0x20e516e38c8 <col:10> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x20e516e3890 <col:10> 'int' lvalue Var 0x20e516e3658 'ch' 'int'
|   | | |   `-CharacterLiteral 0x20e516e38b0 <col:16> 'int' 97
|   | | `-ParenExpr 0x20e516e3990 <col:24, col:34> 'int'
|   | |   `-BinaryOperator 0x20e516e3970 <col:25, col:31> 'int' '<='
|   | |     |-ImplicitCastExpr 0x20e516e3958 <col:25> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x20e516e3920 <col:25> 'int' lvalue Var 0x20e516e3658 'ch' 'int'
|   | |     `-CharacterLiteral 0x20e516e3940 <col:31> 'int' 122
|   | `-ReturnStmt 0x20e516e39f8 <line:358:9, col:16>
|   |   `-IntegerLiteral 0x20e516e39d0 <col:16> 'int' 1
|   |-IfStmt 0x20e516e3bb0 <line:359:5, line:360:16>
|   | |-BinaryOperator 0x20e516e3b58 <line:359:9, col:34> 'int' '&&'
|   | | |-ParenExpr 0x20e516e3a90 <col:9, col:19> 'int'
|   | | | `-BinaryOperator 0x20e516e3a70 <col:10, col:16> 'int' '>='
|   | | |   |-ImplicitCastExpr 0x20e516e3a58 <col:10> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x20e516e3a20 <col:10> 'int' lvalue Var 0x20e516e3658 'ch' 'int'
|   | | |   `-CharacterLiteral 0x20e516e3a40 <col:16> 'int' 65
|   | | `-ParenExpr 0x20e516e3b38 <col:24, col:34> 'int'
|   | |   `-BinaryOperator 0x20e516e3b18 <col:25, col:31> 'int' '<='
|   | |     |-ImplicitCastExpr 0x20e516e3b00 <col:25> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x20e516e3ab0 <col:25> 'int' lvalue Var 0x20e516e3658 'ch' 'int'
|   | |     `-CharacterLiteral 0x20e516e3ad0 <col:31> 'int' 90
|   | `-ReturnStmt 0x20e516e3ba0 <line:360:9, col:16>
|   |   `-IntegerLiteral 0x20e516e3b78 <col:16> 'int' 1
|   |-IfStmt 0x20e516e3d40 <line:361:5, line:362:16>
|   | |-BinaryOperator 0x20e516e3ce8 <line:361:9, col:34> 'int' '&&'
|   | | |-ParenExpr 0x20e516e3c38 <col:9, col:19> 'int'
|   | | | `-BinaryOperator 0x20e516e3c18 <col:10, col:16> 'int' '>='
|   | | |   |-ImplicitCastExpr 0x20e516e3c00 <col:10> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x20e516e3bc8 <col:10> 'int' lvalue Var 0x20e516e3658 'ch' 'int'
|   | | |   `-CharacterLiteral 0x20e516e3be8 <col:16> 'int' 48
|   | | `-ParenExpr 0x20e516e3cc8 <col:24, col:34> 'int'
|   | |   `-BinaryOperator 0x20e516e3ca8 <col:25, col:31> 'int' '<='
|   | |     |-ImplicitCastExpr 0x20e516e3c90 <col:25> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x20e516e3c58 <col:25> 'int' lvalue Var 0x20e516e3658 'ch' 'int'
|   | |     `-CharacterLiteral 0x20e516e3c78 <col:31> 'int' 57
|   | `-ReturnStmt 0x20e516e3d30 <line:362:9, col:16>
|   |   `-IntegerLiteral 0x20e516e3d08 <col:16> 'int' 1
|   |-IfStmt 0x20e516e41a0 <line:363:5, line:364:16>
|   | |-BinaryOperator 0x20e516e4148 <line:363:9, col:48> 'int' '||'
|   | | |-ParenExpr 0x20e516e3dc8 <col:9, col:19> 'int'
|   | | | `-BinaryOperator 0x20e516e3da8 <col:10, col:16> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x20e516e3d90 <col:10> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x20e516e3d58 <col:10> 'int' lvalue Var 0x20e516e3658 'ch' 'int'
|   | | |   `-CharacterLiteral 0x20e516e3d78 <col:16> 'int' 32
|   | | `-CallExpr 0x20e516e40d0 <col:24, col:48> 'char *'
|   | |   |-ImplicitCastExpr 0x20e516e40b8 <col:24> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x20e516e3fa8 <col:24> 'char *(const char *, int)' Function 0x20e516e3e28 'strchr' 'char *(const char *, int)'
|   | |   |-ImplicitCastExpr 0x20e516e4118 <col:31> 'const char *' <NoOp>
|   | |   | `-ImplicitCastExpr 0x20e516e4100 <col:31> 'char *' <ArrayToPointerDecay>
|   | |   |   `-StringLiteral 0x20e516e4018 <col:31> 'char [12]' lvalue "'()+,-./:=?"
|   | |   `-ImplicitCastExpr 0x20e516e4130 <col:46> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x20e516e4040 <col:46> 'int' lvalue Var 0x20e516e3658 'ch' 'int'
|   | `-ReturnStmt 0x20e516e4190 <line:364:9, col:16>
|   |   `-IntegerLiteral 0x20e516e4168 <col:16> 'int' 1
|   `-ReturnStmt 0x20e516e41e0 <line:375:5, col:12>
|     `-IntegerLiteral 0x20e516e41b8 <col:12> 'int' 0
|-FunctionDecl 0x20e516e3e28 <line:363:24> col:24 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x20e516e3ec8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x20e516e3f30 <<invalid sloc>> <invalid sloc> 'int'
`-FunctionDecl 0x20e516e4308 prev 0x20e516d5f60 <line:379:1, line:395:1> line:379:12 used is_numeric 'int (unsigned long)' static
  |-ParmVarDecl 0x20e516e4258 <col:23, col:37> col:37 used value 'unsigned long'
  `-CompoundStmt 0x20e516e47f0 <line:380:1, line:395:1>
    |-DeclStmt 0x20e516e4430 <line:381:5, col:11>
    | `-VarDecl 0x20e516e43c8 <col:5, col:9> col:9 used ch 'int'
    |-IfStmt 0x20e516e4518 <line:382:5, line:383:16>
    | |-BinaryOperator 0x20e516e44c0 <line:382:9, col:17> 'int' '>'
    | | |-ImplicitCastExpr 0x20e516e4490 <col:9> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x20e516e4448 <col:9> 'unsigned long' lvalue ParmVar 0x20e516e4258 'value' 'unsigned long'
    | | `-ImplicitCastExpr 0x20e516e44a8 <col:17> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x20e516e4468 <col:17> 'int' 127
    | `-ReturnStmt 0x20e516e4508 <line:383:9, col:16>
    |   `-IntegerLiteral 0x20e516e44e0 <col:16> 'int' 0
    |-BinaryOperator 0x20e516e45e0 <line:384:5, col:15> 'int' '='
    | |-DeclRefExpr 0x20e516e4530 <col:5> 'int' lvalue Var 0x20e516e43c8 'ch' 'int'
    | `-CStyleCastExpr 0x20e516e45b8 <col:10, col:15> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x20e516e45a0 <col:15> 'unsigned long' <LValueToRValue> part_of_explicit_cast
    |     `-DeclRefExpr 0x20e516e4568 <col:15> 'unsigned long' lvalue ParmVar 0x20e516e4258 'value' 'unsigned long'
    |-IfStmt 0x20e516e47a0 <line:386:5, line:387:16>
    | |-BinaryOperator 0x20e516e4748 <line:386:9, col:31> 'int' '&&'
    | | |-UnaryOperator 0x20e516e46c0 <col:9, col:20> 'int' prefix '!' cannot overflow
    | | | `-CallExpr 0x20e516e4680 <col:10, col:20> 'int'
    | | |   |-ImplicitCastExpr 0x20e516e4668 <col:10> 'int (*)(int)' <FunctionToPointerDecay>
    | | |   | `-DeclRefExpr 0x20e516e4600 <col:10> 'int (int)' Function 0x20e516bfb10 'isdigit' 'int (int)'
    | | |   `-ImplicitCastExpr 0x20e516e46a8 <col:18> 'int' <LValueToRValue>
    | | |     `-DeclRefExpr 0x20e516e4620 <col:18> 'int' lvalue Var 0x20e516e43c8 'ch' 'int'
    | | `-BinaryOperator 0x20e516e4728 <col:25, col:31> 'int' '!='
    | |   |-ImplicitCastExpr 0x20e516e4710 <col:25> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x20e516e46d8 <col:25> 'int' lvalue Var 0x20e516e43c8 'ch' 'int'
    | |   `-CharacterLiteral 0x20e516e46f8 <col:31> 'int' 32
    | `-ReturnStmt 0x20e516e4790 <line:387:9, col:16>
    |   `-IntegerLiteral 0x20e516e4768 <col:16> 'int' 0
    `-ReturnStmt 0x20e516e47e0 <line:394:5, col:12>
      `-IntegerLiteral 0x20e516e47b8 <col:12> 'int' 1
