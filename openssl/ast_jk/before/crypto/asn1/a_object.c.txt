TranslationUnitDecl 0x2034a447958 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2034a4481f0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2034a447ef0 '__int128'
|-TypedefDecl 0x2034a448260 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2034a447f10 'unsigned __int128'
|-TypedefDecl 0x2034a448598 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x2034a448350 'struct __NSConstantString_tag'
|   `-Record 0x2034a4482b8 '__NSConstantString_tag'
|-TypedefDecl 0x2034a448608 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x2034a447b30 'unsigned long long'
|-TypedefDecl 0x2034a4486a0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2034a448660 'char *'
|   `-BuiltinType 0x2034a4479f0 'char'
|-TypedefDecl 0x2034a448710 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x2034a448660 'char *'
|   `-BuiltinType 0x2034a4479f0 'char'
|-TypedefDecl 0x2034a4487d0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x2034a447b30 'unsigned long long'
|-TypedefDecl 0x2034a448840 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x2034a448660 'char *'
|   `-BuiltinType 0x2034a4479f0 'char'
|-FunctionDecl 0x2034be94440 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2034be944e0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x2034be94550 <col:21> Implicit
|-FunctionDecl 0x2034be945a8 prev 0x2034be94440 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2034be942d0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x2034be94698 <col:21> Inherited Implicit
|-TypedefDecl 0x2034be946d8 prev 0x2034a448608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x2034a447b30 'unsigned long long'
|-TypedefDecl 0x2034be94780 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x2034be94750 'size_t' sugar
|   |-Typedef 0x2034be946d8 'size_t'
|   `-BuiltinType 0x2034a447b30 'unsigned long long'
|-TypedefDecl 0x2034be947f0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x2034a447a90 'long long'
|-TypedefDecl 0x2034be94860 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x2034a447a90 'long long'
|-TypedefDecl 0x2034be948d0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x2034a447ad0 'unsigned short'
|-TypedefDecl 0x2034be94940 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x2034a447ad0 'unsigned short'
|-TypedefDecl 0x2034be949b0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x2034a447ad0 'unsigned short'
|-TypedefDecl 0x2034be94a20 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x2034a447a50 'int'
|-TypedefDecl 0x2034be94a90 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x2034a447a70 'long'
|-TypedefDecl 0x2034be94b00 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x2034a447a90 'long long'
|-TypedefDecl 0x2034be94b90 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x2034be94b60 '__time64_t' sugar
|   |-Typedef 0x2034be94b00 '__time64_t'
|   `-BuiltinType 0x2034a447a90 'long long'
|-FunctionDecl 0x2034be94d08 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x2034be94f28 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x2034becd540 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x2034be95068 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x2034be950e0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x2034be95158 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x2034be951d8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x2034becd2e0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x2034becd620 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x2034becd6e0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x2034becd850 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x2034becd800 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x2034becd7a0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x2034becd6c0 'struct threadlocaleinfostruct'
|       `-Record 0x2034bed4350 'threadlocaleinfostruct'
|-TypedefDecl 0x2034becd960 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x2034becd910 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x2034becd8b0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x2034becd780 'struct threadmbcinfostruct'
|       `-Record 0x2034becd6e0 'threadmbcinfostruct'
|-RecordDecl 0x2034becd9b8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x2034becda70 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x2034becdb30 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2034becdbc0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x2034becdc50 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x2034becdd08 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x2034becdcb0 'struct localeinfo_struct' sugar
|   `-RecordType 0x2034becdb10 'struct localeinfo_struct'
|     `-Record 0x2034becda70 'localeinfo_struct'
|-TypedefDecl 0x2034becdde0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x2034becdd90 'struct localeinfo_struct *'
|   `-ElaboratedType 0x2034becdcb0 'struct localeinfo_struct' sugar
|     `-RecordType 0x2034becdb10 'struct localeinfo_struct'
|       `-Record 0x2034becda70 'localeinfo_struct'
|-RecordDecl 0x2034becde58 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x2034becdf10 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2034becdf88 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x2034bece048 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x2034bece0e0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x2034bece150 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x2034bece208 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x2034bece1b0 'struct localerefcount' sugar
|   `-RecordType 0x2034becdef0 'struct localerefcount'
|     `-Record 0x2034becde58 'localerefcount'
|-RecordDecl 0x2034bed4350 prev 0x2034becd620 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x2034bed43d0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2034bed4448 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x2034bed44b8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x2034bed4528 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x2034bed4598 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x2034bed4758 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x2034bed47c8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x2034bed4838 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x2034bed48a8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x2034bed4918 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x2034bed4988 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x2034bed49e0 parent 0x2034a447958 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x2034bed4b70 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x2034bed4be0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x2034bed4c50 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x2034bed4cc0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x2034bed4d60 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x2034bed4dd0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x2034bed4ee0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x2034bed5018 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x2034bed50c8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x2034bed5070 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x2034becd6c0 'struct threadlocaleinfostruct'
|     `-Record 0x2034bed4350 'threadlocaleinfostruct'
|-RecordDecl 0x2034bed5160 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x2034bed5220 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2034bed5298 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x2034bed1320 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x2034bed1390 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x2034bed1400 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x2034bed1470 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x2034bed14e0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x2034bed1550 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x2034bed15c0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x2034bed1670 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x2034bed1620 'struct _iobuf' sugar
|   `-RecordType 0x2034bed5200 'struct _iobuf'
|     `-Record 0x2034bed5160 '_iobuf'
|-FunctionDecl 0x2034bed18a8 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x2034bed1978 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x2034a447a90 'long long'
|-FunctionDecl 0x2034bed1b58 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2034bed19e0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x2034bed1e50 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2034bed1c30 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x2034bed1ca8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x2034bed2200 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x2034bed1f30 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x2034bed1fb0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x2034bed2030 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x2034bedf570 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2034bedf400 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x2034bedf7a0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x2034bedf660 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x2034bedf950 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2034bedf870 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x2034bedfb40 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2034bedfe38 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x2034bedfc10 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x2034bedfc90 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x2034bedfff0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2034bedff10 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x2034bee01a0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2034bee00c0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x2034bee0350 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2034bee0270 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x2034bed94a8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2034bed93c8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x2034bed9638 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2034bed99a0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x2034bed9700 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x2034bed97f8 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x2034bed9d58 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x2034bed9a80 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x2034bed9b00 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x2034bed9b78 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x2034bed9f18 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2034bed9e38 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x2034beda1e0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x2034bed9ff0 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x2034beda070 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x2034bee0410 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2034bee0808 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x2034bee08a8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2034bee0910 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2034bee0988 prev 0x2034bee0808 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x2034bee05e0 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x2034bee0660 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x2034bee0a38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bee0eb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x2034bee0be0 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x2034bee0c60 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x2034bee0ce0 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x2034bee11d0 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x2034bee1270 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x2034bee12d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2034bee1350 <col:40> Implicit printf 2 3
|-FunctionDecl 0x2034bee2430 prev 0x2034bee11d0 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2034bee0f90 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2034bee1010 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x2034bee2528 <col:40> Inherited printf 2 3
|-FunctionDecl 0x2034bee26f0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2034bee2570 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x2034bee25f0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x2034bee2948 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2034bee27d0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x2034bee2848 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x2034bee2b78 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2034bee2a28 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x2034bee2e70 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x2034bee2c50 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x2034bee2cc8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x2034bee3308 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x2034bee33a8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2034bede3f0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2034bede458 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x2034bede4c0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x2034bede548 prev 0x2034bee3308 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x2034bee2f50 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x2034bee2fc8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bee3040 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2034bee30b8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x2034bedea50 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2034bede638 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x2034bede6b0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bede728 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bede7a0 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2034bede818 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x2034bedef10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x2034bedec40 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x2034bedecc0 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x2034beded38 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x2034bedefc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bee14c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x2034bedf110 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x2034bedf190 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x2034bedf210 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x2034bedf288 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x2034bee1870 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x2034bee1910 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x2034bee1978 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2034bee19f0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x2034bee1a58 prev 0x2034bee1870 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x2034bee16a8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x2034bee1728 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x2034bee1c38 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x2034bee1b08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bee2078 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bee1d78 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x2034bee1df8 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x2034bee1e90 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2034bee2130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bee3440 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2034bee2270 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x2034bee22f0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x2034bee3730 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bee3518 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2034bee3598 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2034bee3610 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bee3a90 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x2034bee3810 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x2034bee38e8 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x2034bee3e48 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x2034bee3b68 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x2034bee3be8 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x2034bee3c68 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x2034bee40a8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x2034bee3f28 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x2034bedc418 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x2034bee4178 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2034bee41f8 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x2034bee4278 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x2034bedc678 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x2034bedc4f8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x2034bedcb38 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x2034bedcbd8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2034bedcc40 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2034bedcca8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x2034bedcd10 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x2034bedcd98 prev 0x2034bedcb38 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x2034bedc780 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x2034bedc7f8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bedc870 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2034bedc8e8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x2034bedcf60 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2034bedce80 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x2034bedd0f0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2034bedd278 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2034bee5620 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x2034bedd348 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x2034bee5470 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2034bee5948 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2034bee5800 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x2034bee59f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bee5c10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2034bee5b30 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x2034bee5e30 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x2034bee5ce8 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x2034bee5fe0 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2034bee5f00 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x2034bee6230 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x2034bee60b8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x2034bee6138 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x2034bee6470 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x2034bee6510 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2034bee6580 <col:40> Implicit printf 1 2
|-FunctionDecl 0x2034bee65e8 prev 0x2034bee6470 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x2034bee6310 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x2034bee66d8 <col:40> Inherited printf 1 2
|-FunctionDecl 0x2034bee6808 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2034bee6728 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x2034bee6a58 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2034bee68e0 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x2034bee6958 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x2034bee6c18 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2034bee6b38 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x2034bee6e38 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2034bee6cf0 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x2034bee7088 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2034bee6f10 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x2034bee6f88 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x2034bee7248 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2034bee7168 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x2034bf35090 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2034bee7320 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x2034bee73a0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x2034bf35250 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2034bf35170 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x2034bf354e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x2034bf35400 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x2034bf35588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x2034bf35780 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2034bf356a8 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x2034bf35910 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2034bf35bb8 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x2034bf35c58 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2034bf35cc8 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x2034bf35d30 prev 0x2034bf35bb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x2034bf35aa0 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x2034bf35f08 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x2034bf35dd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf342c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf34088 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x2034bf34100 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2034bf34370 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf34598 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2034bf344b8 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x2034bf347e8 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf34670 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x2034bf346e8 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf34ba8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x2034bf34980 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x2034bf34a00 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x2034bf34c58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf34e80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2034bf34da0 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x2034bf36118 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x2034bf35fd0 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x2034bf36300 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x2034bf36750 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x2034bf363c8 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2034bf36448 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x2034bf364c8 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x2034bf36540 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2034bf36bd0 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x2034bf36840 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x2034bf368b8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf36930 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2034bf369b0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x2034bf32fa0 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2034bf36cc0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2034bf36d38 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2034bf36db8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x2034bf33168 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2034bf33088 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x2034bf33540 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x2034bf335e0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2034bf33648 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2034bf336c0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x2034bf33728 prev 0x2034bf33540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x2034bf33300 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x2034bf33380 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x2034bf33908 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x2034bf337d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf33cf8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf33a18 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x2034bf33a98 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x2034bf33b10 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2034bf33db0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf370e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x2034bf33ef8 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x2034bf36fe0 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x2034bf373d8 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf371c0 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x2034bf37240 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x2034bf372b8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf37868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2034bf37580 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x2034bf375f8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf37678 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x2034bf37920 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf37ef0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf37b60 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x2034bf37bd8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf37c58 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x2034bf37cd0 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2034bf31f90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf322f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2034bf320d8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x2034bf32150 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2034bf321d0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x2034bf32688 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf323d8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x2034bf32450 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf324d0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x2034bf32548 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf328e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x2034bf32988 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf32c40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x2034bf32ad0 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x2034bf3c030 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x2034bf32d18 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x2034bf32d90 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2034bf3c2b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2034bf3c1d0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x2034bf3c358 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf3c618 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2034bf3c4a0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x2034bf3c518 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x2034bf3ca30 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2034bf3cad0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x2034bf3cb38 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2034bf3cba0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2034bf3cc20 <col:40> Implicit printf 2 0
|-FunctionDecl 0x2034bf3cc88 prev 0x2034bf3ca30 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2034bf3c6f0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x2034bf3c770 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x2034bf3c7e8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2034bf3cd88 <col:40> Inherited printf 2 0
|-FunctionDecl 0x2034bf3b020 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2034bf3b0c0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x2034bf3b128 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2034bf3b190 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2034bf3b210 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x2034bf3b278 prev 0x2034bf3b020 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2034bf3cdd0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2034bf3ce50 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x2034bf3cec8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2034bf3b378 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x2034bf3b5d8 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2034bf3b3c0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2034bf3b440 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x2034bf3b4b8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf3b8d0 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2034bf3b6b8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2034bf3b738 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x2034bf3b7b0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf3bc18 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2034bf3bcb8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2034bf3bd20 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2034bf3bd98 <col:40> Implicit printf 1 0
|-FunctionDecl 0x2034bf3be00 prev 0x2034bf3bc18 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2034bf3b9b8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x2034bf3ba30 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2034bf3bef8 <col:40> Inherited printf 1 0
|-FunctionDecl 0x2034bf3d178 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2034bf3d218 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2034bf3d280 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2034bf3d2f8 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x2034bf3d360 prev 0x2034bf3d178 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2034bf3bf48 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x2034bf3d040 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2034bf3d458 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x2034bf3d620 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2034bf3d4a8 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x2034bf3d520 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf3d878 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2034bf3d700 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x2034bf3d778 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf3ddd8 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2034bf3de78 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2034bf3dee0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2034bf3df48 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2034bf3dfb0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2034bf3e050 <col:77> Implicit printf 3 0
|-FunctionDecl 0x2034bf3e0b8 prev 0x2034bf3ddd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2034bf3da18 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x2034bf3da90 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf3db10 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x2034bf3db88 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x2034bf3e2a8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x2034bf3e178 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf3e718 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2034bf3e2f8 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x2034bf3e370 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf3e3e8 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf3e468 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x2034bf3e4e0 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf3eb58 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2034bf3e810 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x2034bf3e888 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf3e900 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf3e980 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x2034bf3e9f8 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf3ef28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2034bf3ed10 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x2034bf3ed88 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf3ee08 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x2034bf3efe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf39470 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2034bf391c0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x2034bf39238 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf392b8 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x2034bf39330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x2034bf39530 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf39928 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2034bf39678 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x2034bf396f0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf39770 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x2034bf397e8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf39ce8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x2034bf39a18 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x2034bf39a98 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x2034bf39b10 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf3f100 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x2034bf3f1a0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2034bf3f208 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2034bf3f280 <col:85> Implicit printf 2 3
|-FunctionDecl 0x2034bf3f2e8 prev 0x2034bf3f100 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x2034bf39e90 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x2034bf39f10 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x2034bf3f4c8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x2034bf3f398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf3f8f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2034bf3f990 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2034bf3f9f8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2034bf3fa60 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2034bf3fae0 <col:94> Implicit printf 2 0
|-FunctionDecl 0x2034bf3fb48 prev 0x2034bf3f8f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2034bf3f5d8 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x2034bf3f658 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x2034bf3f6d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x2034bf3fd30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x2034bf3fc00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf37ff0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2034bf38090 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2034bf380f8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2034bf38160 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2034bf381e0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x2034bf38248 prev 0x2034bf37ff0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2034bf3fd80 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x2034bf3fe00 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x2034bf3fe78 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2034bf38348 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x2034bf38510 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2034bf38398 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x2034bf38410 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf38808 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2034bf385f0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x2034bf38668 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2034bf386e8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x2034bf38ba0 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2034bf388f0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x2034bf38968 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf389e8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x2034bf38a60 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf38e08 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2034bf38c88 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x2034bf38d08 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x2034bf40070 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2034bf38ee8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x2034bf40360 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2034bf40148 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x2034bf401c0 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2034bf40240 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x2034bf40658 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2034bf40440 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2034bf404c0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x2034bf40538 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf408b8 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2034bf40740 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x2034bf407b8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf40c48 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2034bf40998 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x2034bf40a10 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf40a90 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x2034bf40b08 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf40e18 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2034bf40d38 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x2034bf3a010 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2034bf40ef0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x2034bf40f68 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf3a1d0 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2034bf3a0f0 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x2034bf3a360 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2034bf3a5a8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf3a430 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x2034bf3a4a8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf3a800 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf3a688 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2034bf3a700 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf3aa58 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf3a8e0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2034bf3a958 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf3ae08 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf3ab38 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x2034bf3abb0 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2034bf3ac28 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf461f0 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf3aef0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2034bf3af68 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2034bf460d0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf464e8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf462d8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2034bf46350 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2034bf463c8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf467e0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf465c8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2034bf46648 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x2034bf466c0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf46ad8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf468c0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2034bf46940 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2034bf469b8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf46dd0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf46bb8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2034bf46c38 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2034bf46cb0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf49260 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf46eb0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2034bf46f30 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x2034bf46fa8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2034bf47020 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf495f8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf49348 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2034bf493c8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x2034bf49440 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2034bf494b8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf49990 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf496e0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2034bf49760 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x2034bf497d8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2034bf49850 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf49e28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf49b40 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x2034bf49bc0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x2034bf49c38 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2034bf49ee0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf433b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf4a028 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x2034bf430a0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf43120 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x2034bf43198 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf43750 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf434a0 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x2034bf43518 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf43598 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x2034bf43610 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf43ca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf43940 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x2034bf439c0 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x2034bf43a38 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2034bf43ab0 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2034bf43d60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf442e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf43ea8 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x2034bf43f20 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf43fa0 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x2034bf44018 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2034bf440b0 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf44728 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf443e0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2034bf44458 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf444d8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x2034bf44550 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2034bf445c8 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf44998 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf44820 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2034bf44898 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf44bf0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf44a78 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x2034bf44af0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf44ee0 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf44cd0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2034bf44d48 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2034bf44dc0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf451f0 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf44fc8 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x2034bf45040 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2034bf450d0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf45648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf45398 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x2034bf45410 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf45490 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x2034bf45508 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2034bf45708 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf45b00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf45850 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x2034bf458c8 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf45948 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x2034bf459c0 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf42090 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf45bf0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2034bf45c68 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf45ce0 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf45d60 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x2034bf45dd8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf425d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf42288 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x2034bf42300 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf42380 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x2034bf423f8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2034bf42470 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2034bf42698 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf42b18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf427e8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x2034bf42860 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf428e0 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x2034bf42958 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2034bf429d0 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf4b180 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf42c10 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x2034bf42c88 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf42d00 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf42d80 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x2034bf42df8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2034bf42e70 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf4b540 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x2034bf4b278 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2034bf4b2f0 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x2034bf4b370 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x2034bf4b7b0 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2034bf4b640 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x2034bf4b9c8 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x2034bf4bca8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2034bf4ba90 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2034bf4bb08 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x2034bf4bef0 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x2034bf4bd80 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2034bf4a110 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2034bf4bfc0 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x2034bf4a298 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x2034bf4a4d0 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2034bf4a360 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2034bf4a3d8 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x2034bf4a680 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x2034bf4a5a8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2034bf4a928 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x2034bf4a750 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2034bf4a7c8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x2034bf4acd0 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x2034bf4aa00 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2034bf4aa80 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x2034bf4aaf8 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x2034bf4afd0 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2034bf4adb0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2034bf4ae28 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2034bf4d2f8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x2034bf4b0a8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x2034bf4d150 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2034bf4d600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2034bf4d490 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x2034bf4d6a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf4d968 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x2034bf4d7e8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x2034bf4dc70 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2034bf4da38 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x2034bf4dab0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x2034bf4dec0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2034bf4dd48 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x2034bf4ddc0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x2034bf470e0 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2034bf4df98 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x2034bf47290 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2034bf471b0 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x2034bf47440 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2034bf47360 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x2034bf477d8 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2034bf47510 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2034bf47588 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf47600 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf47ac8 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2034bf478b8 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x2034bf47930 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf479a8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf47db8 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2034bf47ba8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2034bf47c20 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf47c98 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf4f160 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2034bf47e98 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2034bf47f10 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf47f88 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf4f460 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2034bf4f240 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf4f2b8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf4f6b0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2034bf4f538 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf4f5b0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf4f900 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2034bf4f788 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf4f800 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf4fb50 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2034bf4f9d8 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf4fa50 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf4ff08 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2034bf4fc28 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2034bf4fca0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2034bf4fd18 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x2034bf4c340 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2034bf4ffe8 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2034bf50060 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf500d8 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf4c130 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf4c6f8 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2034bf4c428 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2034bf4c4a0 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf4c518 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf4c9e8 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2034bf4c7d8 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x2034bf4c850 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf4c8c8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf4ccd8 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2034bf4cac8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2034bf4cb40 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2034bf4cbb8 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x2034bf4d060 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2034bf4cdb8 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2034bf4ce30 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf4cea8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf4cf20 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf484a0 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2034bf48118 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2034bf48190 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf48208 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2034bf48280 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x2034bf489a8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2034bf48588 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2034bf48600 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf48678 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf486f0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf48768 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf48d68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2034bf48b58 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2034bf48bd0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf48c48 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2034bf48e20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf503a0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2034bf49020 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2034bf50170 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf501e8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2034bf50260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x2034bf50460 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf50718 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2034bf505a0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x2034bf50618 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x2034bf508d0 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2034bf507f0 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x2034bf50bb0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2034bf509a0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2034bf50a18 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf50a90 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf50e08 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2034bf50c90 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf50d08 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf57000 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2034bf50ee0 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2034bf50f58 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2034bf50fd0 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x2034bf57388 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2034bf570e0 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2034bf57158 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf571d0 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf57248 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf57550 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2034bf57470 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x2034bf57798 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2034bf57620 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf57698 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf57aa0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf57870 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf578e8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf57cf0 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf57b78 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf57bf0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf57f40 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf57dc8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf57e40 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf59318 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf59048 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2034bf590c0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2034bf59138 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf59608 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf593f8 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2034bf59470 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2034bf594e8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf598f8 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf596e8 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2034bf59760 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2034bf597d8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf59cb8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf599d8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2034bf59a50 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf59ac8 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf5a030 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf59d98 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2034bf59e10 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf59e88 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf5a320 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf5a110 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2034bf5a188 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf5a200 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf5a770 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf5a400 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2034bf5a478 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2034bf5a4f0 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2034bf5a568 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf5ab00 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf5a858 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x2034bf5a8d0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2034bf5a948 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2034bf5a9c0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf5ae90 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf5abe8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x2034bf5ac60 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2034bf5acd8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2034bf5ad50 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf542e0 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf5af78 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2034bf53fd0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf54048 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf540c0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf54670 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf543c8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2034bf54440 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf544b8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf54530 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf54a00 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf54758 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2034bf547d0 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf54848 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf548c0 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf54f08 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf54ae8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2034bf54b60 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf54bd8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2034bf54c50 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2034bf54cc8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf55348 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf55008 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2034bf55080 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf550f8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2034bf55170 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2034bf551e8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf55778 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf55438 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2034bf554b0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf55528 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2034bf555a0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2034bf55618 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf559e0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf55868 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf558e0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf55c30 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf55ab8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf55b30 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf55f18 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf55d08 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2034bf55d80 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2034bf55df8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf56388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf560e0 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2034bf56158 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf561d0 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2034bf56248 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2034bf56448 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf569b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf56590 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2034bf56608 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf56680 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf566f8 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf56770 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf56ef0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf56bb0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2034bf56c28 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf56ca0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2034bf56d18 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2034bf56d90 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2034bf52fc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf535d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf53108 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2034bf53180 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf531f8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf53270 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2034bf532e8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2034bf53360 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf53ad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2034bf53898 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2034bf53910 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x2034bf53b80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2034bf53c98 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2034bf5d2c8 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2034bf53f50 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2034bf5d070 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2034bf5d0e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x2034bf5d380 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2034bf5d498 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2034bf5da38 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf5d758 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2034bf5d7d0 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2034bf5d848 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x2034bf5daf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2034bf5dc10 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2034bf5f290 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf5ded0 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2034bf5df48 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2034bf5dfc0 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2034bf5f080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x2034bf5f350 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2034bf5f470 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2034bf5f778 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x2034bf5f598 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x2034bf5f610 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf5f688 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x2034bf61340 <line:37:1, line:44:1>
|   |-DeclStmt 0x2034bf5f8c0 <line:38:5, col:21>
|   | `-VarDecl 0x2034bf5f858 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x2034bf5f958 <line:39:5, col:13>
|   | `-VarDecl 0x2034bf5f8f0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x2034bf5fcb0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x2034bf5fc98 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2034bf5fbb0 <col:34> '<builtin fn type>' Function 0x2034bf5fa48 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x2034bf5fbe8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x2034bf5f858 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x2034bf5fc20 <col:29> 'const wchar_t *' lvalue ParmVar 0x2034bf5f688 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x2034bf5ff70 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x2034bf5fce0 <col:5> 'int' lvalue Var 0x2034bf5f8f0 '_Ret' 'int'
|   | `-CallExpr 0x2034bf5feb0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x2034bf5fe98 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2034bf5fd18 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2034bf54f08 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x2034bf5fef8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2034bf5fd38 <col:27> 'wchar_t *' lvalue ParmVar 0x2034bf5f598 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x2034bf5ff10 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2034bf5fd58 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2034bf5f610 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x2034bf5ff28 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2034bf5fd78 <col:44> 'const wchar_t *' lvalue ParmVar 0x2034bf5f688 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x2034bf5ff40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x2034bf5fe00 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x2034bf5fdd8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x2034bf5fd98 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x2034bf5ff58 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2034bf5fe20 <col:59> 'va_list':'char *' lvalue Var 0x2034bf5f858 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x2034bf612d0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x2034bf612b8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2034bf61208 <col:34> '<builtin fn type>' Function 0x2034bf610a0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x2034bf61240 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x2034bf5f858 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x2034bf61330 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x2034bf61318 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2034bf612f8 <col:12> 'int' lvalue Var 0x2034bf5f8f0 '_Ret' 'int'
|-FunctionDecl 0x2034bf5fa48 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x2034bf5fae8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x2034bf5fb58 <col:34> Implicit
|-FunctionDecl 0x2034bf610a0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x2034bf61140 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x2034bf611b0 <col:34> Implicit
|-FunctionDecl 0x2034bf61638 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x2034bf61390 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x2034bf61408 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf61480 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2034bf614f8 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x2034bf61920 <line:50:1, line:52:1>
|   `-ReturnStmt 0x2034bf61910 <line:51:5, col:62>
|     `-CallExpr 0x2034bf61850 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x2034bf61838 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2034bf61710 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2034bf54f08 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x2034bf61898 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2034bf61730 <col:27> 'wchar_t *' lvalue ParmVar 0x2034bf61390 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x2034bf618b0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x2034bf61750 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2034bf61408 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x2034bf618c8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2034bf61770 <col:44> 'const wchar_t *' lvalue ParmVar 0x2034bf61480 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x2034bf618e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x2034bf617f8 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x2034bf617d0 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x2034bf61790 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x2034bf618f8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x2034bf61818 <col:59> 'va_list':'char *' lvalue ParmVar 0x2034bf614f8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x2034bf61bc0 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x2034bf61948 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x2034bf619c0 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf61a38 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2034bf61ab0 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x2034bf5b0e8 <line:61:1, line:68:1>
|   |-DeclStmt 0x2034bf61d10 <line:62:5, col:21>
|   | `-VarDecl 0x2034bf61ca8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x2034bf61da8 <line:63:5, col:13>
|   | `-VarDecl 0x2034bf61d40 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x2034bf61e50 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x2034bf61e38 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2034bf61dc0 <col:34> '<builtin fn type>' Function 0x2034bf5fa48 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x2034bf61de0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x2034bf61ca8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x2034bf61e18 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2034bf61ab0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x2034bf62050 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x2034bf61e80 <col:5> 'int' lvalue Var 0x2034bf61d40 '_Ret' 'int'
|   | `-CallExpr 0x2034bf61f90 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x2034bf61f78 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2034bf61eb8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2034bf54f08 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x2034bf61fd8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2034bf61ed8 <col:27> 'wchar_t *' lvalue ParmVar 0x2034bf61948 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x2034bf61ff0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2034bf61ef8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2034bf619c0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x2034bf62008 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2034bf61f18 <col:44> 'const wchar_t *' lvalue ParmVar 0x2034bf61a38 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x2034bf62020 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2034bf61f38 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2034bf61ab0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x2034bf62038 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2034bf61f58 <col:64> 'va_list':'char *' lvalue Var 0x2034bf61ca8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x2034bf5b078 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x2034bf5b060 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2034bf62070 <col:34> '<builtin fn type>' Function 0x2034bf610a0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x2034bf5b040 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x2034bf61ca8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x2034bf5b0d8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x2034bf5b0c0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2034bf5b0a0 <col:12> 'int' lvalue Var 0x2034bf61d40 '_Ret' 'int'
|-FunctionDecl 0x2034bf5b478 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x2034bf5b138 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x2034bf5b1b0 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf5b228 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2034bf5b2a0 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2034bf5b318 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x2034bf5b700 <line:74:1, line:76:1>
|   `-ReturnStmt 0x2034bf5b6f0 <line:75:5, col:67>
|     `-CallExpr 0x2034bf5b630 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x2034bf5b618 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2034bf5b558 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2034bf54f08 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x2034bf5b678 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2034bf5b578 <col:27> 'wchar_t *' lvalue ParmVar 0x2034bf5b138 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x2034bf5b690 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x2034bf5b598 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2034bf5b1b0 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x2034bf5b6a8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2034bf5b5b8 <col:44> 'const wchar_t *' lvalue ParmVar 0x2034bf5b228 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x2034bf5b6c0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x2034bf5b5d8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2034bf5b2a0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x2034bf5b6d8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x2034bf5b5f8 <col:64> 'va_list':'char *' lvalue ParmVar 0x2034bf5b318 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x2034bf5b948 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2034bf5b728 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x2034bf5b7a0 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x2034bf5bb98 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2034bf5ba20 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf5ba98 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf5be80 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2034bf5bc70 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2034bf5bce8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2034bf5bd60 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2034bf5e1e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2034bf5e070 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x2034bf5e0e8 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2034bf5e298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf5e6a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf5e498 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x2034bf5e510 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2034bf5e588 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2034bf5e760 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf5ea18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2034bf5e8a0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x2034bf5e918 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x2034bf5ed00 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf5eaf0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2034bf5eb68 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf5ebe0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf60100 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2034bf5eea0 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2034bf5ef18 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2034bf601b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf60688 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf603b0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2034bf60428 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2034bf604a0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2034bf60740 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf609f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2034bf60880 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2034bf608f8 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x2034bf60ce0 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf60ad0 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2034bf60b48 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf60bc0 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf631a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2034bf60e80 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2034bf60ef8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf60f70 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2034bf63260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf637e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf63460 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2034bf634d8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf63550 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2034bf635c8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2034bf638a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf63bf0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2034bf639e0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2034bf63a58 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2034bf63ad0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x2034bf63f78 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf63cd0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2034bf63d48 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf63dc0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf63e38 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf5c200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x2034bf5c120 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2034bf5c2a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf5c620 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf5c4a8 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2034bf5c520 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2034bf5c6d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf5c8f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2034bf5c810 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x2034bf5cb38 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2034bf5c9c0 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2034bf5ca38 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2034bf5ce38 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x2034bf5cc18 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x2034bf5cc90 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x2034bf682b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2034bf5cfd0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2034bf68110 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x2034bf68368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf68770 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2034bf684b0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x2034bf68528 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x2034bf685a0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x2034bf68bd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2034bf68910 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2034bf68988 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x2034bf68a00 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x2034bf68c88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf69168 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2034bf68dd0 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x2034bf68e48 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2034bf68ec0 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x2034bf68f38 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x2034bf693c0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x2034bf69250 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x2034bf69600 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2034bf69490 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x2034bf69508 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x2034bf697b8 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x2034bf696d8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x2034bf69aa8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2034bf69888 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x2034bf69900 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2034bf69d18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2034bf69c40 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x2034bf69dc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2034bf69fd8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2034bf69f00 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x2034bf6a228 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2034bf6a0a8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2034bf6a130 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2034bf6a470 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x2034bf6a300 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2034bf6a378 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2034bf6a620 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2034bf6a548 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x2034bf6a7c8 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2034bf6a6f0 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x2034bf6a978 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2034bf6a898 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x2034bf6ab28 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2034bf6aa48 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x2034bf6aea0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2034bf6ac00 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x2034bf6ac78 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf6acf0 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2034bf6ad68 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x2034bf642a0 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2034bf6af90 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x2034bf6b008 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf6b080 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf640d0 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2034bf64148 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x2034bf645b0 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x2034bf64390 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2034bf64410 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x2034bf64490 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x2034bf64770 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x2034bf64690 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x2034bf64a60 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x2034bf64840 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x2034bf648c0 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x2034bf64940 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x2034bf64c20 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x2034bf64b40 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x2034bf64f98 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2034bf64cf8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x2034bf64d70 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2034bf64de8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2034bf64e60 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x2034bf6c2c8 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2034bf6c150 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x2034bf6c1c8 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x2034bf6c600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x2034bf6c480 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x2034bf6c500 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x2034bf6c6b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x2034bf6c968 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2034bf6ca08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x2034bf6cd48 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x2034bf6cbd0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x2034bf6cc50 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x2034bf6cdf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x2034bf660f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2034bf66190 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x2034bf66430 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x2034bf66350 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x2034bf664d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x2034bf66758 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2034bf667f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x2034bf66aa0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x2034bf669c0 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x2034bf66b48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x2034bf66e28 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x2034bf66d48 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x2034bf66ed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x2034bf65258 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2034bf650e0 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x2034bf65158 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x2034bf65308 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x2034bf655c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2034bf65668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x2034bf65a90 <.//openssl//file_jk/before\crypto\asn1/asn1_locl.h:12:1, col:60> col:5 invalid asn1_utctime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x2034bf658f0 <col:24, col:35> col:35 tm 'struct tm *'
| `-ParmVarDecl 0x2034bf65970 <col:39, col:59> col:59 invalid d 'const int *'
|-FunctionDecl 0x2034bf65e60 <line:13:1, col:76> col:5 invalid asn1_generalizedtime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x2034bf65cc0 <col:32, col:43> col:43 tm 'struct tm *'
| `-ParmVarDecl 0x2034bf65d40 <col:47, col:75> col:75 invalid d 'const int *'
|-RecordDecl 0x2034bf65f10 <line:17:1, line:38:1> line:17:8 invalid struct asn1_sctx_st definition
| |-FieldDecl 0x2034bf65fe8 <line:19:5, col:22> col:22 invalid it 'const int *'
| |-FieldDecl 0x2034bf66058 <line:21:5, col:26> col:26 invalid tt 'const int *'
| |-FieldDecl 0x2034bf79030 <line:23:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x2034bf790a0 <line:25:5, col:9> col:9 skidx 'int'
| |-FieldDecl 0x2034bf79110 <line:27:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x2034bf79180 <line:29:5, col:17> col:17 sname 'const char *'
| |-FieldDecl 0x2034bf791f0 <col:5, col:25> col:25 fname 'const char *'
| |-FieldDecl 0x2034bf79260 <line:31:5, col:9> col:9 prim_type 'int'
| |-FieldDecl 0x2034bf79308 <line:33:5, col:18> col:18 invalid field 'int **'
| |-FieldDecl 0x2034bf794d8 <line:35:5, col:35> col:11 scan_cb 'int (*)(int *)'
| `-FieldDecl 0x2034bf79548 <line:37:5, col:11> col:11 app_data 'void *'
|-RecordDecl 0x2034bf795a0 <line:40:9, col:16> col:16 struct mime_param_st
|-TypedefDecl 0x2034bf796b8 <col:1, col:30> col:30 referenced MIME_PARAM 'struct mime_param_st':'struct mime_param_st'
| `-ElaboratedType 0x2034bf79660 'struct mime_param_st' sugar
|   `-RecordType 0x2034bf79640 'struct mime_param_st'
|     `-Record 0x2034bf795a0 'mime_param_st'
|-FunctionDecl 0x2034bf79860 <line:41:1, col:27> col:1 DEFINE_STACK_OF 'int (MIME_PARAM)'
| `-ParmVarDecl 0x2034bf79760 <col:17> col:27 'MIME_PARAM':'struct mime_param_st'
|-RecordDecl 0x2034bf79920 <line:42:9, col:16> col:16 struct mime_header_st
|-TypedefDecl 0x2034bf79a38 <col:1, col:31> col:31 referenced MIME_HEADER 'struct mime_header_st':'struct mime_header_st'
| `-ElaboratedType 0x2034bf799e0 'struct mime_header_st' sugar
|   `-RecordType 0x2034bf799c0 'struct mime_header_st'
|     `-Record 0x2034bf79920 'mime_header_st'
|-FunctionDecl 0x2034bf79be0 <line:43:1, col:28> col:1 invalid DEFINE_STACK_OF 'int (MIME_HEADER)'
| `-ParmVarDecl 0x2034bf79ae0 <col:17> col:28 'MIME_HEADER':'struct mime_header_st'
|-VarDecl 0x2034bf79d30 <line:46:1, col:32> col:20 _asn1_mon 'const char *[12]' extern
|-FunctionDecl 0x2034bf79f18 <line:48:1, col:54> col:6 invalid asn1_string_embed_free 'void (int *, int)'
| |-ParmVarDecl 0x2034bf79dc8 <col:29, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x2034bf79e48 <col:45, col:49> col:49 embed 'int'
|-FunctionDecl 0x2034bf7a1a0 <line:50:1, col:68> col:5 invalid asn1_get_choice_selector 'int (int **, const int *)'
| |-ParmVarDecl 0x2034bf7a040 <col:30, col:43> col:43 invalid pval 'int **'
| `-ParmVarDecl 0x2034bf7a0c0 <col:49, col:66> col:66 invalid it 'const int *'
|-FunctionDecl 0x2034bf7a460 <line:51:1, line:52:49> line:51:5 invalid asn1_set_choice_selector 'int (int **, int, const int *)'
| |-ParmVarDecl 0x2034bf7a270 <col:30, col:43> col:43 invalid pval 'int **'
| |-ParmVarDecl 0x2034bf7a2f0 <col:49, col:53> col:53 value 'int'
| `-ParmVarDecl 0x2034bf7a370 <line:52:30, col:47> col:47 invalid it 'const int *'
|-FunctionDecl 0x2034bf7a698 <line:54:1, col:75> col:14 invalid asn1_get_field_ptr 'int **(int **, const int *)'
| |-ParmVarDecl 0x2034bf7a538 <col:33, col:46> col:46 invalid pval 'int **'
| `-ParmVarDecl 0x2034bf7a5b8 <col:52, col:73> col:73 invalid tt 'const int *'
|-FunctionDecl 0x2034bf7a950 <line:56:1, line:57:45> line:56:22 invalid asn1_do_adb 'const int *(int **, const int *, int)'
| |-ParmVarDecl 0x2034bf7a768 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x2034bf7a7e8 <col:53, col:74> col:74 invalid tt 'const int *'
| `-ParmVarDecl 0x2034bf7a868 <line:57:34, col:38> col:38 nullerr 'int'
|-FunctionDecl 0x2034bf7abd0 <line:59:1, col:64> col:5 invalid asn1_do_lock 'int (int **, int, const int *)'
| |-ParmVarDecl 0x2034bf7aa28 <col:18, col:31> col:31 invalid pval 'int **'
| |-ParmVarDecl 0x2034bf7aaa8 <col:37, col:41> col:41 op 'int'
| `-ParmVarDecl 0x2034bf7ab28 <col:45, col:62> col:62 invalid it 'const int *'
|-FunctionDecl 0x2034bf7adf8 <line:61:1, col:58> col:6 invalid asn1_enc_init 'void (int **, const int *)'
| |-ParmVarDecl 0x2034bf7aca8 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x2034bf7ad28 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x2034bf72fd0 <line:62:1, col:58> col:6 invalid asn1_enc_free 'void (int **, const int *)'
| |-ParmVarDecl 0x2034bf7aec8 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x2034bf7af48 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x2034bf73380 <line:63:1, line:64:41> line:63:5 invalid asn1_enc_restore 'int (int *, unsigned char **, int **, const int *)'
| |-ParmVarDecl 0x2034bf73098 <col:22, col:27> col:27 len 'int *'
| |-ParmVarDecl 0x2034bf73178 <col:32, col:48> col:48 out 'unsigned char **'
| |-ParmVarDecl 0x2034bf73200 <col:53, col:66> col:66 invalid pval 'int **'
| `-ParmVarDecl 0x2034bf73280 <line:64:22, col:39> col:39 invalid it 'const int *'
|-FunctionDecl 0x2034bf736e0 <line:65:1, line:66:38> line:65:5 invalid asn1_enc_save 'int (int **, const unsigned char *, int, const int *)'
| |-ParmVarDecl 0x2034bf73460 <col:19, col:32> col:32 invalid pval 'int **'
| |-ParmVarDecl 0x2034bf734e0 <col:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x2034bf73560 <col:63, col:67> col:67 inlen 'int'
| `-ParmVarDecl 0x2034bf735e0 <line:66:19, col:36> col:36 invalid it 'const int *'
|-FunctionDecl 0x2034bf739a8 <line:68:1, col:76> col:6 invalid asn1_item_embed_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x2034bf737c0 <col:27, col:40> col:40 invalid pval 'int **'
| |-ParmVarDecl 0x2034bf73840 <col:46, col:63> col:63 invalid it 'const int *'
| `-ParmVarDecl 0x2034bf738c0 <col:67, col:71> col:71 embed 'int'
|-FunctionDecl 0x2034bf73c20 <line:69:1, col:75> col:6 invalid asn1_primitive_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x2034bf73a80 <col:26, col:39> col:39 invalid pval 'int **'
| |-ParmVarDecl 0x2034bf73b00 <col:45, col:62> col:62 invalid it 'const int *'
| `-ParmVarDecl 0x2034bf73b80 <col:66, col:70> col:70 embed 'int'
|-FunctionDecl 0x2034bf73e10 <line:70:1, col:67> col:6 invalid asn1_template_free 'void (int **, const int *)'
| |-ParmVarDecl 0x2034bf73cf8 <col:25, col:38> col:38 invalid pval 'int **'
| `-ParmVarDecl 0x2034bf73d78 <col:44, col:65> col:65 invalid tt 'const int *'
|-FunctionDecl 0x2034bf75160 <line:72:1, line:73:41> line:72:14 invalid c2i_ASN1_OBJECT 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x2034bf73ee0 <col:30, col:44> col:44 invalid a 'int **'
| |-ParmVarDecl 0x2034bf74ff0 <col:47, col:69> col:69 pp 'const unsigned char **'
| `-ParmVarDecl 0x2034bf75070 <line:73:30, col:35> col:35 length 'long'
|-FunctionDecl 0x2034bf75390 <line:74:1, col:63> col:5 invalid i2c_ASN1_BIT_STRING 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x2034bf75230 <col:25, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x2034bf752b8 <col:45, col:61> col:61 pp 'unsigned char **'
|-FunctionDecl 0x2034bf75610 <line:75:1, line:76:75> line:75:18 invalid c2i_ASN1_BIT_STRING 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x2034bf75460 <col:38, col:56> col:56 invalid a 'int **'
| |-ParmVarDecl 0x2034bf754e8 <line:76:38, col:60> col:60 pp 'const unsigned char **'
| `-ParmVarDecl 0x2034bf75568 <col:64, col:69> col:69 length 'long'
|-FunctionDecl 0x2034bf75808 <line:77:1, col:57> col:5 invalid i2c_ASN1_INTEGER 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x2034bf756e0 <col:22, col:36> col:36 invalid a 'int *'
| `-ParmVarDecl 0x2034bf75768 <col:39, col:55> col:55 pp 'unsigned char **'
|-FunctionDecl 0x2034bf75a88 <line:78:1, line:79:43> line:78:15 invalid c2i_ASN1_INTEGER 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x2034bf758d8 <col:32, col:47> col:47 invalid a 'int **'
| |-ParmVarDecl 0x2034bf75960 <col:50, col:72> col:72 pp 'const unsigned char **'
| `-ParmVarDecl 0x2034bf759e0 <line:79:32, col:37> col:37 length 'long'
|-FunctionDecl 0x2034bf75de0 <line:82:1, col:79> col:5 invalid c2i_uint64_int 'int (int *, int *, const unsigned char **, long)'
| |-ParmVarDecl 0x2034bf75b58 <col:20, col:30> col:30 invalid ret 'int *'
| |-ParmVarDecl 0x2034bf75bd8 <col:35, col:40> col:40 neg 'int *'
| |-ParmVarDecl 0x2034bf75c60 <col:45, col:67> col:67 pp 'const unsigned char **'
| `-ParmVarDecl 0x2034bf75ce0 <col:71, col:76> col:76 len 'long'
|-FunctionDecl 0x2034bf7b140 <line:83:1, col:57> col:5 invalid i2c_uint64_int 'int (unsigned char *, int, int)'
| |-ParmVarDecl 0x2034bf75eb8 <col:20, col:35> col:35 p 'unsigned char *'
| |-ParmVarDecl 0x2034bf75f38 <col:38, col:47> col:47 invalid r 'int'
| `-ParmVarDecl 0x2034bf7b050 <col:50, col:54> col:54 neg 'int'
|-FunctionDecl 0x2034bf7b370 <.//openssl//file_jk/before\crypto\asn1\a_object.c:20:1, line:50:1> line:20:5 invalid i2d_ASN1_OBJECT 'int (const int *, unsigned char **)'
| |-ParmVarDecl 0x2034bf7b210 <col:21, col:40> col:40 invalid a 'const int *'
| |-ParmVarDecl 0x2034bf7b298 <col:43, col:59> col:59 used pp 'unsigned char **'
| `-CompoundStmt 0x2034bf78898 <line:21:1, line:50:1>
|   |-DeclStmt 0x2034bf7b5f0 <line:22:5, col:40>
|   | |-VarDecl 0x2034bf7b450 <col:5, col:20> col:20 used p 'unsigned char *'
|   | `-VarDecl 0x2034bf7b4d0 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\asn1\a_object.c:22:24 used allocated 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x2034bf7b5c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x2034bf7b5a0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x2034bf7b578 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x2034bf7b538 <col:26> 'int' 0
|   |-DeclStmt 0x2034bf7b688 <.//openssl//file_jk/before\crypto\asn1\a_object.c:23:5, col:16>
|   | `-VarDecl 0x2034bf7b620 <col:5, col:9> col:9 used objsize 'int'
|   |-IfStmt 0x2034bf7b820 <line:25:5, line:26:18>
|   | |-OpaqueValueExpr 0x2034bf7b808 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2034bf7b7f8 <col:9, col:18>
|   |   `-ParenExpr 0x2034bf7b7d8 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x2034bf7b7b0 <col:17> 'int' 0
|   |-IfStmt 0x2034bf7bbe0 <line:29:5, line:30:16>
|   | |-BinaryOperator 0x2034bf7bb78 <line:29:9, col:35> 'int' '||'
|   | | |-BinaryOperator 0x2034bf7bac0 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | | |-ImplicitCastExpr 0x2034bf7ba90 <.//openssl//file_jk/before\crypto\asn1\a_object.c:29:9> 'unsigned char **' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2034bf7b9d0 <col:9> 'unsigned char **' lvalue ParmVar 0x2034bf7b298 'pp' 'unsigned char **'
|   | | | `-ImplicitCastExpr 0x2034bf7baa8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char **' <BitCast>
|   | | |   `-ParenExpr 0x2034bf7ba70 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x2034bf7ba48 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x2034bf7ba08 <col:26> 'int' 0
|   | | `-BinaryOperator 0x2034bf7bb58 <.//openssl//file_jk/before\crypto\asn1\a_object.c:29:23, col:35> 'int' '=='
|   | |   |-ImplicitCastExpr 0x2034bf7bb40 <col:23> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x2034bf7bae0 <col:23> 'int' lvalue Var 0x2034bf7b620 'objsize' 'int'
|   | |   `-UnaryOperator 0x2034bf7bb28 <col:34, col:35> 'int' prefix '-'
|   | |     `-IntegerLiteral 0x2034bf7bb00 <col:35> 'int' 1
|   | `-ReturnStmt 0x2034bf7bbd0 <line:30:9, col:16>
|   |   `-ImplicitCastExpr 0x2034bf7bbb8 <col:16> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x2034bf7bb98 <col:16> 'int' lvalue Var 0x2034bf7b620 'objsize' 'int'
|   |-IfStmt 0x2034bf782a8 <line:32:5, line:39:5> has_else
|   | |-BinaryOperator 0x2034bf7bd00 <line:32:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x2034bf7bcd0 <.//openssl//file_jk/before\crypto\asn1\a_object.c:32:9, col:10> 'unsigned char *' <LValueToRValue>
|   | | | `-UnaryOperator 0x2034bf7bc30 <col:9, col:10> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | | |   `-ImplicitCastExpr 0x2034bf7bc18 <col:10> 'unsigned char **' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x2034bf7bbf8 <col:10> 'unsigned char **' lvalue ParmVar 0x2034bf7b298 'pp' 'unsigned char **'
|   | | `-ImplicitCastExpr 0x2034bf7bce8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x2034bf7bcb0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2034bf7bc88 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2034bf7bc48 <col:26> 'int' 0
|   | |-CompoundStmt 0x2034bf781d0 <.//openssl//file_jk/before\crypto\asn1\a_object.c:32:22, line:37:5>
|   | | `-IfStmt 0x2034bf781b8 <line:33:9, line:36:9>
|   | |   |-BinaryOperator 0x2034bf78038 <line:33:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | |   | |-ParenExpr 0x2034bf7bf98 <.//openssl//file_jk/before\crypto\asn1\a_object.c:33:13, col:53> 'unsigned char *'
|   | |   | | `-BinaryOperator 0x2034bf7bf78 <col:14, col:52> 'unsigned char *' '='
|   | |   | |   |-DeclRefExpr 0x2034bf7bd20 <col:14> 'unsigned char *' lvalue Var 0x2034bf7b450 'p' 'unsigned char *'
|   | |   | |   `-BinaryOperator 0x2034bf7bf58 <col:18, col:52> 'unsigned char *' '='
|   | |   | |     |-DeclRefExpr 0x2034bf7bd58 <col:18> 'unsigned char *' lvalue Var 0x2034bf7b4d0 'allocated' 'unsigned char *'
|   | |   | |     `-ImplicitCastExpr 0x2034bf7bf40 <col:30, col:52> 'unsigned char *' <IntegralToPointer>
|   | |   | |       `-CallExpr 0x2034bf7bf00 <col:30, col:52> 'int'
|   | |   | |         |-ImplicitCastExpr 0x2034bf7bee8 <col:30> 'int (*)()' <FunctionToPointerDecay>
|   | |   | |         | `-DeclRefExpr 0x2034bf7be80 <col:30> 'int ()' Function 0x2034bf7bdb8 'OPENSSL_malloc' 'int ()'
|   | |   | |         `-ImplicitCastExpr 0x2034bf7bf28 <col:45> 'int' <LValueToRValue>
|   | |   | |           `-DeclRefExpr 0x2034bf7bea0 <col:45> 'int' lvalue Var 0x2034bf7b620 'objsize' 'int'
|   | |   | `-ImplicitCastExpr 0x2034bf78020 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   |   `-ParenExpr 0x2034bf7c020 <col:17, col:27> 'void *'
|   | |   |     `-CStyleCastExpr 0x2034bf7bff8 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |       `-IntegerLiteral 0x2034bf7bfb8 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x2034bf781a0 <.//openssl//file_jk/before\crypto\asn1\a_object.c:33:64, line:36:9>
|   | |     `-ReturnStmt 0x2034bf78190 <line:35:13, col:20>
|   | |       `-IntegerLiteral 0x2034bf78168 <col:20> 'int' 0
|   | `-CompoundStmt 0x2034bf78290 <line:37:12, line:39:5>
|   |   `-BinaryOperator 0x2034bf78270 <line:38:9, col:14> 'unsigned char *' '='
|   |     |-DeclRefExpr 0x2034bf781e8 <col:9> 'unsigned char *' lvalue Var 0x2034bf7b450 'p' 'unsigned char *'
|   |     `-ImplicitCastExpr 0x2034bf78258 <col:13, col:14> 'unsigned char *' <LValueToRValue>
|   |       `-UnaryOperator 0x2034bf78240 <col:13, col:14> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |         `-ImplicitCastExpr 0x2034bf78228 <col:14> 'unsigned char **' <LValueToRValue>
|   |           `-DeclRefExpr 0x2034bf78208 <col:14> 'unsigned char **' lvalue ParmVar 0x2034bf7b298 'pp' 'unsigned char **'
|   `-ReturnStmt 0x2034bf78888 <line:49:5, col:12>
|     `-ImplicitCastExpr 0x2034bf78870 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2034bf78850 <col:12> 'int' lvalue Var 0x2034bf7b620 'objsize' 'int'
|-FunctionDecl 0x2034bf78480 <line:42:5> col:5 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2034bf78520 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2034bf78588 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2034bf785f0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2034bf78bd0 <line:52:1, line:177:1> line:52:5 a2d_ASN1_OBJECT 'int (unsigned char *, int, const char *, int)'
| |-ParmVarDecl 0x2034bf788f0 <col:21, col:36> col:36 used out 'unsigned char *'
| |-ParmVarDecl 0x2034bf78970 <col:41, col:45> col:45 used olen 'int'
| |-ParmVarDecl 0x2034bf789f0 <col:51, col:63> col:63 used buf 'const char *'
| |-ParmVarDecl 0x2034bf78a70 <col:68, col:72> col:72 used num 'int'
| `-CompoundStmt 0x2034bf815c8 <line:53:1, line:177:1>
|   |-DeclStmt 0x2034bf78f80 <line:54:5, col:37>
|   | |-VarDecl 0x2034bf78cc0 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x2034bf78d40 <col:5, col:12> col:12 used first 'int'
|   | |-VarDecl 0x2034bf78dc0 <col:5, col:25> col:19 used len 'int' cinit
|   | | `-IntegerLiteral 0x2034bf78e28 <col:25> 'int' 0
|   | |-VarDecl 0x2034bf78e68 <col:5, col:28> col:28 used c 'int'
|   | `-VarDecl 0x2034bf78ee8 <col:5, col:31> col:31 used use_bn 'int'
|   |-DeclStmt 0x2034bf74150 <line:55:5, col:31>
|   | |-VarDecl 0x2034bf74000 <col:5, col:17> col:10 used ftmp 'char [24]'
|   | `-VarDecl 0x2034bf74080 <col:5, col:27> col:21 used tmp 'char *' cinit
|   |   `-ImplicitCastExpr 0x2034bf74120 <col:27> 'char *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x2034bf740e8 <col:27> 'char [24]' lvalue Var 0x2034bf74000 'ftmp' 'char [24]'
|   |-DeclStmt 0x2034bf74260 <line:56:5, col:31>
|   | `-VarDecl 0x2034bf74180 <col:5, col:30> col:9 used tmpsize 'int' cinit
|   |   `-ImplicitCastExpr 0x2034bf74248 <col:19, col:30> 'int' <IntegralCast>
|   |     `-UnaryExprOrTypeTraitExpr 0x2034bf74228 <col:19, col:30> 'unsigned long long' sizeof
|   |       `-ParenExpr 0x2034bf74208 <col:25, col:30> 'char [24]' lvalue
|   |         `-DeclRefExpr 0x2034bf741e8 <col:26> 'char [24]' lvalue Var 0x2034bf74000 'ftmp' 'char [24]' non_odr_use_unevaluated
|   |-DeclStmt 0x2034bf742f8 <line:57:5, col:18>
|   | `-VarDecl 0x2034bf74290 <col:5, col:17> col:17 used p 'const char *'
|   |-DeclStmt 0x2034bf74390 <line:58:5, col:20>
|   | `-VarDecl 0x2034bf74328 <col:5, col:19> col:19 used l 'unsigned long'
|   |-IfStmt 0x2034bf74840 <line:61:5, line:64:25> has_else
|   | |-BinaryOperator 0x2034bf74490 <line:61:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x2034bf74478 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2034bf74430 <col:9> 'int' lvalue ParmVar 0x2034bf78a70 'num' 'int'
|   | | `-IntegerLiteral 0x2034bf74450 <col:16> 'int' 0
|   | |-ReturnStmt 0x2034bf744f8 <line:62:9, col:18>
|   | | `-ParenExpr 0x2034bf744d8 <col:16, col:18> 'int'
|   | |   `-IntegerLiteral 0x2034bf744b0 <col:17> 'int' 0
|   | `-IfStmt 0x2034bf74828 <line:63:10, line:64:25>
|   |   |-BinaryOperator 0x2034bf74580 <line:63:14, col:22> 'int' '=='
|   |   | |-ImplicitCastExpr 0x2034bf74568 <col:14> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2034bf74508 <col:14> 'int' lvalue ParmVar 0x2034bf78a70 'num' 'int'
|   |   | `-UnaryOperator 0x2034bf74550 <col:21, col:22> 'int' prefix '-'
|   |   |   `-IntegerLiteral 0x2034bf74528 <col:22> 'int' 1
|   |   `-BinaryOperator 0x2034bf74808 <line:64:9, col:25> 'int' '='
|   |     |-DeclRefExpr 0x2034bf745a0 <col:9> 'int' lvalue ParmVar 0x2034bf78a70 'num' 'int'
|   |     `-ImplicitCastExpr 0x2034bf747f0 <col:15, col:25> 'int' <IntegralCast>
|   |       `-CallExpr 0x2034bf747b0 <col:15, col:25> 'unsigned long long'
|   |         |-ImplicitCastExpr 0x2034bf74798 <col:15> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x2034bf74700 <col:15> 'unsigned long long (const char *)' Function 0x2034bf745f0 'strlen' 'unsigned long long (const char *)'
|   |         `-ImplicitCastExpr 0x2034bf747d8 <col:22> 'const char *' <LValueToRValue>
|   |           `-DeclRefExpr 0x2034bf74738 <col:22> 'const char *' lvalue ParmVar 0x2034bf789f0 'buf' 'const char *'
|   |-BinaryOperator 0x2034bf748d8 <line:66:5, col:9> 'const char *' '='
|   | |-DeclRefExpr 0x2034bf74868 <col:5> 'const char *' lvalue Var 0x2034bf74290 'p' 'const char *'
|   | `-ImplicitCastExpr 0x2034bf748c0 <col:9> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2034bf748a0 <col:9> 'const char *' lvalue ParmVar 0x2034bf789f0 'buf' 'const char *'
|   |-BinaryOperator 0x2034bf749d0 <line:67:5, col:14> 'int' '='
|   | |-DeclRefExpr 0x2034bf748f8 <col:5> 'int' lvalue Var 0x2034bf78e68 'c' 'int'
|   | `-ImplicitCastExpr 0x2034bf749b8 <col:9, col:14> 'int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x2034bf749a0 <col:9, col:14> 'char' <LValueToRValue>
|   |     `-UnaryOperator 0x2034bf74988 <col:9, col:14> 'const char' lvalue prefix '*' cannot overflow
|   |       `-ParenExpr 0x2034bf74968 <col:10, col:14> 'const char *'
|   |         `-UnaryOperator 0x2034bf74950 <col:11, col:12> 'const char *' postfix '++'
|   |           `-DeclRefExpr 0x2034bf74930 <col:11> 'const char *' lvalue Var 0x2034bf74290 'p' 'const char *'
|   |-UnaryOperator 0x2034bf74a10 <line:68:5, col:8> 'int' postfix '--'
|   | `-DeclRefExpr 0x2034bf749f0 <col:5> 'int' lvalue ParmVar 0x2034bf78a70 'num' 'int'
|   |-IfStmt 0x2034bf74ce8 <line:69:5, line:74:5> has_else
|   | |-BinaryOperator 0x2034bf74b48 <line:69:9, col:32> 'int' '&&'
|   | | |-ParenExpr 0x2034bf74a98 <col:9, col:18> 'int'
|   | | | `-BinaryOperator 0x2034bf74a78 <col:10, col:15> 'int' '>='
|   | | |   |-ImplicitCastExpr 0x2034bf74a60 <col:10> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x2034bf74a28 <col:10> 'int' lvalue Var 0x2034bf78e68 'c' 'int'
|   | | |   `-CharacterLiteral 0x2034bf74a48 <col:15> 'int' 48
|   | | `-ParenExpr 0x2034bf74b28 <col:23, col:32> 'int'
|   | |   `-BinaryOperator 0x2034bf74b08 <col:24, col:29> 'int' '<='
|   | |     |-ImplicitCastExpr 0x2034bf74af0 <col:24> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x2034bf74ab8 <col:24> 'int' lvalue Var 0x2034bf78e68 'c' 'int'
|   | |     `-CharacterLiteral 0x2034bf74ad8 <col:29> 'int' 50
|   | |-CompoundStmt 0x2034bf74c30 <col:35, line:71:5>
|   | | `-BinaryOperator 0x2034bf74c10 <line:70:9, col:21> 'int' '='
|   | |   |-DeclRefExpr 0x2034bf74b68 <col:9> 'int' lvalue Var 0x2034bf78d40 'first' 'int'
|   | |   `-BinaryOperator 0x2034bf74bf0 <col:17, col:21> 'int' '-'
|   | |     |-ImplicitCastExpr 0x2034bf74bd8 <col:17> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x2034bf74ba0 <col:17> 'int' lvalue Var 0x2034bf78e68 'c' 'int'
|   | |     `-CharacterLiteral 0x2034bf74bc0 <col:21> 'int' 48
|   | `-CompoundStmt 0x2034bf74cd0 <line:71:12, line:74:5>
|   |   `-GotoStmt 0x2034bf74cb8 <line:73:9, col:14> 'err' 0x2034bf74c68
|   |-IfStmt 0x2034bf74de0 <line:76:5, line:79:5>
|   | |-BinaryOperator 0x2034bf74d70 <line:76:9, col:16> 'int' '<='
|   | | |-ImplicitCastExpr 0x2034bf74d58 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2034bf74d10 <col:9> 'int' lvalue ParmVar 0x2034bf78a70 'num' 'int'
|   | | `-IntegerLiteral 0x2034bf74d30 <col:16> 'int' 0
|   | `-CompoundStmt 0x2034bf74dc8 <col:19, line:79:5>
|   |   `-GotoStmt 0x2034bf74db0 <line:78:9, col:14> 'err' 0x2034bf74c68
|   |-BinaryOperator 0x2034bf74eb8 <line:80:5, col:14> 'int' '='
|   | |-DeclRefExpr 0x2034bf74df8 <col:5> 'int' lvalue Var 0x2034bf78e68 'c' 'int'
|   | `-ImplicitCastExpr 0x2034bf74ea0 <col:9, col:14> 'int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x2034bf74e88 <col:9, col:14> 'char' <LValueToRValue>
|   |     `-UnaryOperator 0x2034bf74e70 <col:9, col:14> 'const char' lvalue prefix '*' cannot overflow
|   |       `-ParenExpr 0x2034bf74e50 <col:10, col:14> 'const char *'
|   |         `-UnaryOperator 0x2034bf74e38 <col:11, col:12> 'const char *' postfix '++'
|   |           `-DeclRefExpr 0x2034bf74e18 <col:11> 'const char *' lvalue Var 0x2034bf74290 'p' 'const char *'
|   |-UnaryOperator 0x2034bf74ef8 <line:81:5, col:8> 'int' postfix '--'
|   | `-DeclRefExpr 0x2034bf74ed8 <col:5> 'int' lvalue ParmVar 0x2034bf78a70 'num' 'int'
|   |-ForStmt 0x2034bf81108 <line:82:5, line:167:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x2034bf810b0 <line:82:14, line:167:5>
|   |   |-IfStmt 0x2034bf74f98 <line:83:9, line:84:13>
|   |   | |-BinaryOperator 0x2034bf74f70 <line:83:13, col:20> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x2034bf74f58 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2034bf74f10 <col:13> 'int' lvalue ParmVar 0x2034bf78a70 'num' 'int'
|   |   | | `-IntegerLiteral 0x2034bf74f30 <col:20> 'int' 0
|   |   | `-BreakStmt 0x2034bf74f90 <line:84:13>
|   |   |-IfStmt 0x2034bf7f200 <line:85:9, line:88:9>
|   |   | |-BinaryOperator 0x2034bf7f190 <line:85:13, col:36> 'int' '&&'
|   |   | | |-ParenExpr 0x2034bf7f0e0 <col:13, col:22> 'int'
|   |   | | | `-BinaryOperator 0x2034bf7f0c0 <col:14, col:19> 'int' '!='
|   |   | | |   |-ImplicitCastExpr 0x2034bf7f0a8 <col:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x2034bf74fb0 <col:14> 'int' lvalue Var 0x2034bf78e68 'c' 'int'
|   |   | | |   `-CharacterLiteral 0x2034bf7f090 <col:19> 'int' 46
|   |   | | `-ParenExpr 0x2034bf7f170 <col:27, col:36> 'int'
|   |   | |   `-BinaryOperator 0x2034bf7f150 <col:28, col:33> 'int' '!='
|   |   | |     |-ImplicitCastExpr 0x2034bf7f138 <col:28> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x2034bf7f100 <col:28> 'int' lvalue Var 0x2034bf78e68 'c' 'int'
|   |   | |     `-CharacterLiteral 0x2034bf7f120 <col:33> 'int' 32
|   |   | `-CompoundStmt 0x2034bf7f1e8 <col:39, line:88:9>
|   |   |   `-GotoStmt 0x2034bf7f1d0 <line:87:13, col:18> 'err' 0x2034bf74c68
|   |   |-BinaryOperator 0x2034bf7f290 <line:89:9, col:13> 'unsigned long' '='
|   |   | |-DeclRefExpr 0x2034bf7f218 <col:9> 'unsigned long' lvalue Var 0x2034bf74328 'l' 'unsigned long'
|   |   | `-ImplicitCastExpr 0x2034bf7f278 <col:13> 'unsigned long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x2034bf7f250 <col:13> 'int' 0
|   |   |-BinaryOperator 0x2034bf7f310 <line:90:9, col:18> 'int' '='
|   |   | |-DeclRefExpr 0x2034bf7f2b0 <col:9> 'int' lvalue Var 0x2034bf78ee8 'use_bn' 'int'
|   |   | `-IntegerLiteral 0x2034bf7f2e8 <col:18> 'int' 0
|   |   |-ForStmt 0x2034bf804f0 <line:91:9, line:115:9>
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | `-CompoundStmt 0x2034bf804a8 <line:91:18, line:115:9>
|   |   |   |-IfStmt 0x2034bf7f3b8 <line:92:13, line:93:17>
|   |   |   | |-BinaryOperator 0x2034bf7f390 <line:92:17, col:24> 'int' '<='
|   |   |   | | |-ImplicitCastExpr 0x2034bf7f378 <col:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x2034bf7f330 <col:17> 'int' lvalue ParmVar 0x2034bf78a70 'num' 'int'
|   |   |   | | `-IntegerLiteral 0x2034bf7f350 <col:24> 'int' 0
|   |   |   | `-BreakStmt 0x2034bf7f3b0 <line:93:17>
|   |   |   |-UnaryOperator 0x2034bf7f3f0 <line:94:13, col:16> 'int' postfix '--'
|   |   |   | `-DeclRefExpr 0x2034bf7f3d0 <col:13> 'int' lvalue ParmVar 0x2034bf78a70 'num' 'int'
|   |   |   |-BinaryOperator 0x2034bf7f4c8 <line:95:13, col:22> 'int' '='
|   |   |   | |-DeclRefExpr 0x2034bf7f408 <col:13> 'int' lvalue Var 0x2034bf78e68 'c' 'int'
|   |   |   | `-ImplicitCastExpr 0x2034bf7f4b0 <col:17, col:22> 'int' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x2034bf7f498 <col:17, col:22> 'char' <LValueToRValue>
|   |   |   |     `-UnaryOperator 0x2034bf7f480 <col:17, col:22> 'const char' lvalue prefix '*' cannot overflow
|   |   |   |       `-ParenExpr 0x2034bf7f460 <col:18, col:22> 'const char *'
|   |   |   |         `-UnaryOperator 0x2034bf7f448 <col:19, col:20> 'const char *' postfix '++'
|   |   |   |           `-DeclRefExpr 0x2034bf7f428 <col:19> 'const char *' lvalue Var 0x2034bf74290 'p' 'const char *'
|   |   |   |-IfStmt 0x2034bf7f630 <line:96:13, line:97:17>
|   |   |   | |-BinaryOperator 0x2034bf7f608 <line:96:17, col:40> 'int' '||'
|   |   |   | | |-ParenExpr 0x2034bf7f558 <col:17, col:26> 'int'
|   |   |   | | | `-BinaryOperator 0x2034bf7f538 <col:18, col:23> 'int' '=='
|   |   |   | | |   |-ImplicitCastExpr 0x2034bf7f520 <col:18> 'int' <LValueToRValue>
|   |   |   | | |   | `-DeclRefExpr 0x2034bf7f4e8 <col:18> 'int' lvalue Var 0x2034bf78e68 'c' 'int'
|   |   |   | | |   `-CharacterLiteral 0x2034bf7f508 <col:23> 'int' 32
|   |   |   | | `-ParenExpr 0x2034bf7f5e8 <col:31, col:40> 'int'
|   |   |   | |   `-BinaryOperator 0x2034bf7f5c8 <col:32, col:37> 'int' '=='
|   |   |   | |     |-ImplicitCastExpr 0x2034bf7f5b0 <col:32> 'int' <LValueToRValue>
|   |   |   | |     | `-DeclRefExpr 0x2034bf7f578 <col:32> 'int' lvalue Var 0x2034bf78e68 'c' 'int'
|   |   |   | |     `-CharacterLiteral 0x2034bf7f598 <col:37> 'int' 46
|   |   |   | `-BreakStmt 0x2034bf7f628 <line:97:17>
|   |   |   |-IfStmt 0x2034bf7f7d8 <line:98:13, line:101:13>
|   |   |   | |-BinaryOperator 0x2034bf7f768 <line:98:17, col:38> 'int' '||'
|   |   |   | | |-ParenExpr 0x2034bf7f6b8 <col:17, col:25> 'int'
|   |   |   | | | `-BinaryOperator 0x2034bf7f698 <col:18, col:22> 'int' '<'
|   |   |   | | |   |-ImplicitCastExpr 0x2034bf7f680 <col:18> 'int' <LValueToRValue>
|   |   |   | | |   | `-DeclRefExpr 0x2034bf7f648 <col:18> 'int' lvalue Var 0x2034bf78e68 'c' 'int'
|   |   |   | | |   `-CharacterLiteral 0x2034bf7f668 <col:22> 'int' 48
|   |   |   | | `-ParenExpr 0x2034bf7f748 <col:30, col:38> 'int'
|   |   |   | |   `-BinaryOperator 0x2034bf7f728 <col:31, col:35> 'int' '>'
|   |   |   | |     |-ImplicitCastExpr 0x2034bf7f710 <col:31> 'int' <LValueToRValue>
|   |   |   | |     | `-DeclRefExpr 0x2034bf7f6d8 <col:31> 'int' lvalue Var 0x2034bf78e68 'c' 'int'
|   |   |   | |     `-CharacterLiteral 0x2034bf7f6f8 <col:35> 'int' 57
|   |   |   | `-CompoundStmt 0x2034bf7f7c0 <col:41, line:101:13>
|   |   |   |   `-GotoStmt 0x2034bf7f7a8 <line:100:17, col:22> 'err' 0x2034bf74c68
|   |   |   |-IfStmt 0x2034bf7ff00 <line:102:13, line:108:13>
|   |   |   | |-BinaryOperator 0x2034bf7fa88 <line:102:17, col:56> 'int' '&&'
|   |   |   | | |-UnaryOperator 0x2034bf7f828 <col:17, col:18> 'int' prefix '!' cannot overflow
|   |   |   | | | `-ImplicitCastExpr 0x2034bf7f810 <col:18> 'int' <LValueToRValue>
|   |   |   | | |   `-DeclRefExpr 0x2034bf7f7f0 <col:18> 'int' lvalue Var 0x2034bf78ee8 'use_bn' 'int'
|   |   |   | | `-BinaryOperator 0x2034bf7fa68 <col:28, col:56> 'int' '>='
|   |   |   | |   |-ImplicitCastExpr 0x2034bf7fa50 <col:28> 'unsigned long' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x2034bf7f840 <col:28> 'unsigned long' lvalue Var 0x2034bf74328 'l' 'unsigned long'
|   |   |   | |   `-ParenExpr 0x2034bf7fa30 <col:33, col:56> 'unsigned long'
|   |   |   | |     `-BinaryOperator 0x2034bf7fa10 <col:34, col:53> 'unsigned long' '/'
|   |   |   | |       |-ParenExpr 0x2034bf7f9b0 <col:34, col:49> 'unsigned long'
|   |   |   | |       | `-BinaryOperator 0x2034bf7f990 <D:\LLVM\lib\clang\10.0.0\include\limits.h:57:19, .//openssl//file_jk/before\crypto\asn1\a_object.c:102:47> 'unsigned long' '-'
|   |   |   | |       |   |-ParenExpr 0x2034bf7f930 <D:\LLVM\lib\clang\10.0.0\include\limits.h:57:19, col:41> 'unsigned long'
|   |   |   | |       |   | `-BinaryOperator 0x2034bf7f910 <<built-in>:31:22, D:\LLVM\lib\clang\10.0.0\include\limits.h:57:38> 'unsigned long' '+'
|   |   |   | |       |   |   |-BinaryOperator 0x2034bf7f8c8 <<built-in>:31:22, D:\LLVM\lib\clang\10.0.0\include\limits.h:57:34> 'unsigned long' '*'
|   |   |   | |       |   |   | |-ImplicitCastExpr 0x2034bf7f8b0 <<built-in>:31:22> 'unsigned long' <IntegralCast>
|   |   |   | |       |   |   | | `-IntegerLiteral 0x2034bf7f860 <col:22> 'long' 2147483647
|   |   |   | |       |   |   | `-IntegerLiteral 0x2034bf7f888 <D:\LLVM\lib\clang\10.0.0\include\limits.h:57:34> 'unsigned long' 2
|   |   |   | |       |   |   `-IntegerLiteral 0x2034bf7f8e8 <col:38> 'unsigned long' 1
|   |   |   | |       |   `-ImplicitCastExpr 0x2034bf7f978 <.//openssl//file_jk/before\crypto\asn1\a_object.c:102:47> 'unsigned long' <IntegralCast>
|   |   |   | |       |     `-IntegerLiteral 0x2034bf7f950 <col:47> 'int' 80
|   |   |   | |       `-ImplicitCastExpr 0x2034bf7f9f8 <col:53> 'unsigned long' <IntegralCast>
|   |   |   | |         `-IntegerLiteral 0x2034bf7f9d0 <col:53> 'long' 10
|   |   |   | `-CompoundStmt 0x2034bf7fee0 <col:59, line:108:13>
|   |   |   |   |-BinaryOperator 0x2034bf7faf0 <line:103:17, col:26> 'int' '='
|   |   |   |   | |-DeclRefExpr 0x2034bf7faa8 <col:17> 'int' lvalue Var 0x2034bf78ee8 'use_bn' 'int'
|   |   |   |   | `-IntegerLiteral 0x2034bf7fac8 <col:26> 'int' 1
|   |   |   |   `-IfStmt 0x2034bf7fec8 <line:106:17, line:107:26>
|   |   |   |     |-OpaqueValueExpr 0x2034bf7feb0 <<invalid sloc>> '_Bool'
|   |   |   |     `-GotoStmt 0x2034bf7fe98 <col:21, col:26> 'err' 0x2034bf74c68
|   |   |   `-IfStmt 0x2034bf80480 <line:109:13, line:114:45> has_else
|   |   |     |-ImplicitCastExpr 0x2034bf7ff38 <line:109:17> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x2034bf7ff18 <col:17> 'int' lvalue Var 0x2034bf78ee8 'use_bn' 'int'
|   |   |     |-CompoundStmt 0x2034bf80268 <col:25, line:113:13>
|   |   |     | `-IfStmt 0x2034bf80250 <line:110:17, line:112:26>
|   |   |     |   |-OpaqueValueExpr 0x2034bf80238 <<invalid sloc>> '_Bool'
|   |   |     |   `-GotoStmt 0x2034bf80220 <col:21, col:26> 'err' 0x2034bf74c68
|   |   |     `-BinaryOperator 0x2034bf80460 <line:114:17, col:45> 'unsigned long' '='
|   |   |       |-DeclRefExpr 0x2034bf80280 <col:17> 'unsigned long' lvalue Var 0x2034bf74328 'l' 'unsigned long'
|   |   |       `-BinaryOperator 0x2034bf80440 <col:21, col:45> 'unsigned long' '+'
|   |   |         |-BinaryOperator 0x2034bf80318 <col:21, col:25> 'unsigned long' '*'
|   |   |         | |-ImplicitCastExpr 0x2034bf802e8 <col:21> 'unsigned long' <LValueToRValue>
|   |   |         | | `-DeclRefExpr 0x2034bf802a0 <col:21> 'unsigned long' lvalue Var 0x2034bf74328 'l' 'unsigned long'
|   |   |         | `-ImplicitCastExpr 0x2034bf80300 <col:25> 'unsigned long' <IntegralCast>
|   |   |         |   `-IntegerLiteral 0x2034bf802c0 <col:25> 'long' 10
|   |   |         `-ImplicitCastExpr 0x2034bf80428 <col:31, col:45> 'unsigned long' <IntegralCast>
|   |   |           `-CStyleCastExpr 0x2034bf80400 <col:31, col:45> 'long' <IntegralCast>
|   |   |             `-ParenExpr 0x2034bf803e0 <col:37, col:45> 'int'
|   |   |               `-BinaryOperator 0x2034bf80388 <col:38, col:42> 'int' '-'
|   |   |                 |-ImplicitCastExpr 0x2034bf80370 <col:38> 'int' <LValueToRValue>
|   |   |                 | `-DeclRefExpr 0x2034bf80338 <col:38> 'int' lvalue Var 0x2034bf78e68 'c' 'int'
|   |   |                 `-CharacterLiteral 0x2034bf80358 <col:42> 'int' 48
|   |   |-IfStmt 0x2034bf80a60 <line:116:9, line:127:9>
|   |   | |-BinaryOperator 0x2034bf805a0 <line:116:13, col:20> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x2034bf80588 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2034bf80528 <col:13> 'int' lvalue Var 0x2034bf78dc0 'len' 'int'
|   |   | | `-IntegerLiteral 0x2034bf80560 <col:20> 'int' 0
|   |   | `-CompoundStmt 0x2034bf80a40 <col:23, line:127:9>
|   |   |   |-IfStmt 0x2034bf80788 <line:117:13, line:121:13>
|   |   |   | |-BinaryOperator 0x2034bf80718 <line:117:17, col:40> 'int' '&&'
|   |   |   | | |-ParenExpr 0x2034bf80640 <col:17, col:27> 'int'
|   |   |   | | | `-BinaryOperator 0x2034bf80620 <col:18, col:26> 'int' '<'
|   |   |   | | |   |-ImplicitCastExpr 0x2034bf80608 <col:18> 'int' <LValueToRValue>
|   |   |   | | |   | `-DeclRefExpr 0x2034bf805c0 <col:18> 'int' lvalue Var 0x2034bf78d40 'first' 'int'
|   |   |   | | |   `-IntegerLiteral 0x2034bf805e0 <col:26> 'int' 2
|   |   |   | | `-ParenExpr 0x2034bf806f8 <col:32, col:40> 'int'
|   |   |   | |   `-BinaryOperator 0x2034bf806d8 <col:33, col:38> 'int' '>='
|   |   |   | |     |-ImplicitCastExpr 0x2034bf806a8 <col:33> 'unsigned long' <LValueToRValue>
|   |   |   | |     | `-DeclRefExpr 0x2034bf80660 <col:33> 'unsigned long' lvalue Var 0x2034bf74328 'l' 'unsigned long'
|   |   |   | |     `-ImplicitCastExpr 0x2034bf806c0 <col:38> 'unsigned long' <IntegralCast>
|   |   |   | |       `-IntegerLiteral 0x2034bf80680 <col:38> 'int' 40
|   |   |   | `-CompoundStmt 0x2034bf80770 <col:43, line:121:13>
|   |   |   |   `-GotoStmt 0x2034bf80758 <line:120:17, col:22> 'err' 0x2034bf74c68
|   |   |   `-IfStmt 0x2034bf80a18 <line:122:13, line:126:35> has_else
|   |   |     |-ImplicitCastExpr 0x2034bf807c0 <line:122:17> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x2034bf807a0 <col:17> 'int' lvalue Var 0x2034bf78ee8 'use_bn' 'int'
|   |   |     |-CompoundStmt 0x2034bf808c0 <col:25, line:125:13>
|   |   |     | `-IfStmt 0x2034bf808a8 <line:123:17, line:124:26>
|   |   |     |   |-OpaqueValueExpr 0x2034bf80890 <<invalid sloc>> '_Bool'
|   |   |     |   `-GotoStmt 0x2034bf80878 <col:21, col:26> 'err' 0x2034bf74c68
|   |   |     `-CompoundAssignOperator 0x2034bf809e8 <line:126:17, col:35> 'unsigned long' '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   |       |-DeclRefExpr 0x2034bf808d8 <col:17> 'unsigned long' lvalue Var 0x2034bf74328 'l' 'unsigned long'
|   |   |       `-ImplicitCastExpr 0x2034bf809d0 <col:22, col:35> 'unsigned long' <IntegralCast>
|   |   |         `-BinaryOperator 0x2034bf809b0 <col:22, col:35> 'long' '*'
|   |   |           |-CStyleCastExpr 0x2034bf80948 <col:22, col:28> 'long' <IntegralCast>
|   |   |           | `-ImplicitCastExpr 0x2034bf80930 <col:28> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |           |   `-DeclRefExpr 0x2034bf808f8 <col:28> 'int' lvalue Var 0x2034bf78d40 'first' 'int'
|   |   |           `-ImplicitCastExpr 0x2034bf80998 <col:35> 'long' <IntegralCast>
|   |   |             `-IntegerLiteral 0x2034bf80970 <col:35> 'int' 40
|   |   |-BinaryOperator 0x2034bf80ad8 <line:128:9, col:13> 'int' '='
|   |   | |-DeclRefExpr 0x2034bf80a78 <col:9> 'int' lvalue Var 0x2034bf78cc0 'i' 'int'
|   |   | `-IntegerLiteral 0x2034bf80ab0 <col:13> 'int' 0
|   |   |-IfStmt 0x2034bf7e928 <line:129:9, line:156:9> has_else
|   |   | |-ImplicitCastExpr 0x2034bf80b18 <line:129:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2034bf80af8 <col:13> 'int' lvalue Var 0x2034bf78ee8 'use_bn' 'int'
|   |   | |-CompoundStmt 0x2034bf7e598 <col:21, line:147:9>
|   |   | | |-DeclStmt 0x2034bf80bb0 <line:130:13, col:23>
|   |   | | | `-VarDecl 0x2034bf80b48 <col:13, col:17> col:17 used blsize 'int'
|   |   | | |-BinaryOperator 0x2034bf80e18 <line:132:13, col:37> 'int' '='
|   |   | | | |-DeclRefExpr 0x2034bf80d10 <col:13> 'int' lvalue Var 0x2034bf80b48 'blsize' 'int'
|   |   | | | `-BinaryOperator 0x2034bf80df8 <col:22, col:37> 'int' '/'
|   |   | | |   |-ParenExpr 0x2034bf80db0 <col:22, col:33> 'int'
|   |   | | |   | `-BinaryOperator 0x2034bf80d90 <col:23, col:32> 'int' '+'
|   |   | | |   |   |-ImplicitCastExpr 0x2034bf80d78 <col:23> 'int' <LValueToRValue>
|   |   | | |   |   | `-DeclRefExpr 0x2034bf80d30 <col:23> 'int' lvalue Var 0x2034bf80b48 'blsize' 'int'
|   |   | | |   |   `-IntegerLiteral 0x2034bf80d50 <col:32> 'int' 6
|   |   | | |   `-IntegerLiteral 0x2034bf80dd0 <col:37> 'int' 7
|   |   | | |-IfStmt 0x2034bf7e418 <line:133:13, line:140:13>
|   |   | | | |-BinaryOperator 0x2034bf80ec0 <line:133:17, col:26> 'int' '>'
|   |   | | | | |-ImplicitCastExpr 0x2034bf80e90 <col:17> 'int' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x2034bf80e38 <col:17> 'int' lvalue Var 0x2034bf80b48 'blsize' 'int'
|   |   | | | | `-ImplicitCastExpr 0x2034bf80ea8 <col:26> 'int' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x2034bf80e58 <col:26> 'int' lvalue Var 0x2034bf74180 'tmpsize' 'int'
|   |   | | | `-CompoundStmt 0x2034bf7e3e8 <col:35, line:140:13>
|   |   | | |   |-IfStmt 0x2034bf7e0f8 <line:134:17, line:135:37>
|   |   | | |   | |-BinaryOperator 0x2034bf80f68 <line:134:21, col:28> 'int' '!='
|   |   | | |   | | |-ImplicitCastExpr 0x2034bf80f38 <col:21> 'char *' <LValueToRValue>
|   |   | | |   | | | `-DeclRefExpr 0x2034bf80ee0 <col:21> 'char *' lvalue Var 0x2034bf74080 'tmp' 'char *'
|   |   | | |   | | `-ImplicitCastExpr 0x2034bf80f50 <col:28> 'char *' <ArrayToPointerDecay>
|   |   | | |   | |   `-DeclRefExpr 0x2034bf80f18 <col:28> 'char [24]' lvalue Var 0x2034bf74000 'ftmp' 'char [24]'
|   |   | | |   | `-CallExpr 0x2034bf7e0b8 <line:135:21, col:37> 'int'
|   |   | | |   |   |-ImplicitCastExpr 0x2034bf7e0a0 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |   | | |   |   | `-DeclRefExpr 0x2034bf81078 <col:21> 'int ()' Function 0x2034bf80fb0 'OPENSSL_free' 'int ()'
|   |   | | |   |   `-ImplicitCastExpr 0x2034bf7e0e0 <col:34> 'char *' <LValueToRValue>
|   |   | | |   |     `-DeclRefExpr 0x2034bf7e080 <col:34> 'char *' lvalue Var 0x2034bf74080 'tmp' 'char *'
|   |   | | |   |-BinaryOperator 0x2034bf7e1b0 <line:136:17, col:36> 'int' '='
|   |   | | |   | |-DeclRefExpr 0x2034bf7e110 <col:17> 'int' lvalue Var 0x2034bf74180 'tmpsize' 'int'
|   |   | | |   | `-BinaryOperator 0x2034bf7e190 <col:27, col:36> 'int' '+'
|   |   | | |   |   |-ImplicitCastExpr 0x2034bf7e178 <col:27> 'int' <LValueToRValue>
|   |   | | |   |   | `-DeclRefExpr 0x2034bf7e130 <col:27> 'int' lvalue Var 0x2034bf80b48 'blsize' 'int'
|   |   | | |   |   `-IntegerLiteral 0x2034bf7e150 <col:36> 'int' 32
|   |   | | |   |-BinaryOperator 0x2034bf7e2a0 <line:137:17, col:45> 'char *' '='
|   |   | | |   | |-DeclRefExpr 0x2034bf7e1d0 <col:17> 'char *' lvalue Var 0x2034bf74080 'tmp' 'char *'
|   |   | | |   | `-ImplicitCastExpr 0x2034bf7e288 <col:23, col:45> 'char *' <IntegralToPointer>
|   |   | | |   |   `-CallExpr 0x2034bf7e248 <col:23, col:45> 'int'
|   |   | | |   |     |-ImplicitCastExpr 0x2034bf7e230 <col:23> 'int (*)()' <FunctionToPointerDecay>
|   |   | | |   |     | `-DeclRefExpr 0x2034bf7e1f0 <col:23> 'int ()' Function 0x2034bf7bdb8 'OPENSSL_malloc' 'int ()'
|   |   | | |   |     `-ImplicitCastExpr 0x2034bf7e270 <col:38> 'int' <LValueToRValue>
|   |   | | |   |       `-DeclRefExpr 0x2034bf7e210 <col:38> 'int' lvalue Var 0x2034bf74180 'tmpsize' 'int'
|   |   | | |   `-IfStmt 0x2034bf7e3d0 <line:138:17, line:139:26>
|   |   | | |     |-BinaryOperator 0x2034bf7e398 <line:138:21, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |   | | |     | |-ImplicitCastExpr 0x2034bf7e368 <.//openssl//file_jk/before\crypto\asn1\a_object.c:138:21> 'char *' <LValueToRValue>
|   |   | | |     | | `-DeclRefExpr 0x2034bf7e2c0 <col:21> 'char *' lvalue Var 0x2034bf74080 'tmp' 'char *'
|   |   | | |     | `-ImplicitCastExpr 0x2034bf7e380 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |   | | |     |   `-ParenExpr 0x2034bf7e348 <col:17, col:27> 'void *'
|   |   | | |     |     `-CStyleCastExpr 0x2034bf7e320 <col:18, col:26> 'void *' <NullToPointer>
|   |   | | |     |       `-IntegerLiteral 0x2034bf7e2e0 <col:26> 'int' 0
|   |   | | |     `-GotoStmt 0x2034bf7e3b8 <.//openssl//file_jk/before\crypto\asn1\a_object.c:139:21, col:26> 'err' 0x2034bf74c68
|   |   | | `-WhileStmt 0x2034bf7e580 <line:141:13, line:146:13>
|   |   | |   |-UnaryOperator 0x2034bf7e450 <line:141:20, col:26> 'int' postfix '--'
|   |   | |   | `-DeclRefExpr 0x2034bf7e430 <col:20> 'int' lvalue Var 0x2034bf80b48 'blsize' 'int'
|   |   | |   `-CompoundStmt 0x2034bf7e568 <col:30, line:146:13>
|   |   | |     `-IfStmt 0x2034bf7e4c0 <line:143:17, line:144:26>
|   |   | |       |-OpaqueValueExpr 0x2034bf7e4a8 <<invalid sloc>> '_Bool'
|   |   | |       `-GotoStmt 0x2034bf7e490 <col:21, col:26> 'err' 0x2034bf74c68
|   |   | `-CompoundStmt 0x2034bf7e910 <line:147:16, line:156:9>
|   |   |   `-ForStmt 0x2034bf7e8d8 <line:149:13, line:154:13>
|   |   |     |-<<<NULL>>>
|   |   |     |-<<<NULL>>>
|   |   |     |-<<<NULL>>>
|   |   |     |-<<<NULL>>>
|   |   |     `-CompoundStmt 0x2034bf7e8b0 <line:149:22, line:154:13>
|   |   |       |-BinaryOperator 0x2034bf7e748 <line:150:17, col:47> 'char' '='
|   |   |       | |-ArraySubscriptExpr 0x2034bf7e638 <col:17, col:24> 'char' lvalue
|   |   |       | | |-ImplicitCastExpr 0x2034bf7e620 <col:17> 'char *' <LValueToRValue>
|   |   |       | | | `-DeclRefExpr 0x2034bf7e5c8 <col:17> 'char *' lvalue Var 0x2034bf74080 'tmp' 'char *'
|   |   |       | | `-UnaryOperator 0x2034bf7e608 <col:21, col:22> 'int' postfix '++'
|   |   |       | |   `-DeclRefExpr 0x2034bf7e5e8 <col:21> 'int' lvalue Var 0x2034bf78cc0 'i' 'int'
|   |   |       | `-ImplicitCastExpr 0x2034bf7e730 <col:28, col:47> 'char' <IntegralCast>
|   |   |       |   `-BinaryOperator 0x2034bf7e710 <col:28, col:47> 'int' '&'
|   |   |       |     |-ImplicitCastExpr 0x2034bf7e6f8 <col:28, col:43> 'int' <IntegralCast>
|   |   |       |     | `-CStyleCastExpr 0x2034bf7e6a8 <col:28, col:43> 'unsigned char' <IntegralCast>
|   |   |       |     |   `-ImplicitCastExpr 0x2034bf7e690 <col:43> 'unsigned long' <LValueToRValue> part_of_explicit_cast
|   |   |       |     |     `-DeclRefExpr 0x2034bf7e658 <col:43> 'unsigned long' lvalue Var 0x2034bf74328 'l' 'unsigned long'
|   |   |       |     `-IntegerLiteral 0x2034bf7e6d0 <col:47> 'int' 127
|   |   |       |-CompoundAssignOperator 0x2034bf7e7c8 <line:151:17, col:23> 'unsigned long' '>>=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   |       | |-DeclRefExpr 0x2034bf7e768 <col:17> 'unsigned long' lvalue Var 0x2034bf74328 'l' 'unsigned long'
|   |   |       | `-IntegerLiteral 0x2034bf7e788 <col:23> 'long' 7
|   |   |       `-IfStmt 0x2034bf7e898 <line:152:17, line:153:21>
|   |   |         |-BinaryOperator 0x2034bf7e870 <line:152:21, col:26> 'int' '=='
|   |   |         | |-ImplicitCastExpr 0x2034bf7e840 <col:21> 'unsigned long' <LValueToRValue>
|   |   |         | | `-DeclRefExpr 0x2034bf7e7f8 <col:21> 'unsigned long' lvalue Var 0x2034bf74328 'l' 'unsigned long'
|   |   |         | `-ImplicitCastExpr 0x2034bf7e858 <col:26> 'unsigned long' <IntegralCast>
|   |   |         |   `-IntegerLiteral 0x2034bf7e818 <col:26> 'long' 0
|   |   |         `-BreakStmt 0x2034bf7e890 <line:153:21>
|   |   `-IfStmt 0x2034bf7f010 <line:157:9, line:166:20> has_else
|   |     |-BinaryOperator 0x2034bf7ea28 <line:157:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |     | |-ImplicitCastExpr 0x2034bf7e9f8 <.//openssl//file_jk/before\crypto\asn1\a_object.c:157:13> 'unsigned char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2034bf7e950 <col:13> 'unsigned char *' lvalue ParmVar 0x2034bf788f0 'out' 'unsigned char *'
|   |     | `-ImplicitCastExpr 0x2034bf7ea10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   |     |   `-ParenExpr 0x2034bf7e9d8 <col:17, col:27> 'void *'
|   |     |     `-CStyleCastExpr 0x2034bf7e9b0 <col:18, col:26> 'void *' <NullToPointer>
|   |     |       `-IntegerLiteral 0x2034bf7e970 <col:26> 'int' 0
|   |     |-CompoundStmt 0x2034bf7ef60 <.//openssl//file_jk/before\crypto\asn1\a_object.c:157:26, line:165:9>
|   |     | |-IfStmt 0x2034bf7eb80 <line:158:13, line:161:13>
|   |     | | |-BinaryOperator 0x2034bf7eb10 <line:158:17, col:27> 'int' '>'
|   |     | | | |-BinaryOperator 0x2034bf7eab8 <col:17, col:23> 'int' '+'
|   |     | | | | |-ImplicitCastExpr 0x2034bf7ea88 <col:17> 'int' <LValueToRValue>
|   |     | | | | | `-DeclRefExpr 0x2034bf7ea48 <col:17> 'int' lvalue Var 0x2034bf78dc0 'len' 'int'
|   |     | | | | `-ImplicitCastExpr 0x2034bf7eaa0 <col:23> 'int' <LValueToRValue>
|   |     | | | |   `-DeclRefExpr 0x2034bf7ea68 <col:23> 'int' lvalue Var 0x2034bf78cc0 'i' 'int'
|   |     | | | `-ImplicitCastExpr 0x2034bf7eaf8 <col:27> 'int' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x2034bf7ead8 <col:27> 'int' lvalue ParmVar 0x2034bf78970 'olen' 'int'
|   |     | | `-CompoundStmt 0x2034bf7eb68 <col:33, line:161:13>
|   |     | |   `-GotoStmt 0x2034bf7eb50 <line:160:17, col:22> 'err' 0x2034bf74c68
|   |     | |-WhileStmt 0x2034bf7ede8 <line:162:13, line:163:39>
|   |     | | |-BinaryOperator 0x2034bf7ebf8 <line:162:20, col:26> 'int' '>'
|   |     | | | |-UnaryOperator 0x2034bf7ebb8 <col:20, col:22> 'int' prefix '--'
|   |     | | | | `-DeclRefExpr 0x2034bf7eb98 <col:22> 'int' lvalue Var 0x2034bf78cc0 'i' 'int'
|   |     | | | `-IntegerLiteral 0x2034bf7ebd0 <col:26> 'int' 0
|   |     | | `-BinaryOperator 0x2034bf7edc8 <line:163:17, col:39> 'unsigned char' '='
|   |     | |   |-ArraySubscriptExpr 0x2034bf7ec88 <col:17, col:26> 'unsigned char' lvalue
|   |     | |   | |-ImplicitCastExpr 0x2034bf7ec70 <col:17> 'unsigned char *' <LValueToRValue>
|   |     | |   | | `-DeclRefExpr 0x2034bf7ec18 <col:17> 'unsigned char *' lvalue ParmVar 0x2034bf788f0 'out' 'unsigned char *'
|   |     | |   | `-UnaryOperator 0x2034bf7ec58 <col:21, col:24> 'int' postfix '++'
|   |     | |   |   `-DeclRefExpr 0x2034bf7ec38 <col:21> 'int' lvalue Var 0x2034bf78dc0 'len' 'int'
|   |     | |   `-ImplicitCastExpr 0x2034bf7edb0 <col:30, col:39> 'unsigned char' <IntegralCast>
|   |     | |     `-BinaryOperator 0x2034bf7ed90 <col:30, col:39> 'int' '|'
|   |     | |       |-ImplicitCastExpr 0x2034bf7ed78 <col:30, col:35> 'int' <IntegralCast>
|   |     | |       | `-ImplicitCastExpr 0x2034bf7ed60 <col:30, col:35> 'char' <LValueToRValue>
|   |     | |       |   `-ArraySubscriptExpr 0x2034bf7ed18 <col:30, col:35> 'char' lvalue
|   |     | |       |     |-ImplicitCastExpr 0x2034bf7ece8 <col:30> 'char *' <LValueToRValue>
|   |     | |       |     | `-DeclRefExpr 0x2034bf7eca8 <col:30> 'char *' lvalue Var 0x2034bf74080 'tmp' 'char *'
|   |     | |       |     `-ImplicitCastExpr 0x2034bf7ed00 <col:34> 'int' <LValueToRValue>
|   |     | |       |       `-DeclRefExpr 0x2034bf7ecc8 <col:34> 'int' lvalue Var 0x2034bf78cc0 'i' 'int'
|   |     | |       `-IntegerLiteral 0x2034bf7ed38 <col:39> 'int' 128
|   |     | `-BinaryOperator 0x2034bf7ef40 <line:164:13, col:31> 'unsigned char' '='
|   |     |   |-ArraySubscriptExpr 0x2034bf7ee70 <col:13, col:22> 'unsigned char' lvalue
|   |     |   | |-ImplicitCastExpr 0x2034bf7ee58 <col:13> 'unsigned char *' <LValueToRValue>
|   |     |   | | `-DeclRefExpr 0x2034bf7ee00 <col:13> 'unsigned char *' lvalue ParmVar 0x2034bf788f0 'out' 'unsigned char *'
|   |     |   | `-UnaryOperator 0x2034bf7ee40 <col:17, col:20> 'int' postfix '++'
|   |     |   |   `-DeclRefExpr 0x2034bf7ee20 <col:17> 'int' lvalue Var 0x2034bf78dc0 'len' 'int'
|   |     |   `-ImplicitCastExpr 0x2034bf7ef28 <col:26, col:31> 'unsigned char' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x2034bf7ef10 <col:26, col:31> 'char' <LValueToRValue>
|   |     |       `-ArraySubscriptExpr 0x2034bf7eef0 <col:26, col:31> 'char' lvalue
|   |     |         |-ImplicitCastExpr 0x2034bf7eed8 <col:26> 'char *' <LValueToRValue>
|   |     |         | `-DeclRefExpr 0x2034bf7ee90 <col:26> 'char *' lvalue Var 0x2034bf74080 'tmp' 'char *'
|   |     |         `-IntegerLiteral 0x2034bf7eeb0 <col:30> 'int' 0
|   |     `-CompoundAssignOperator 0x2034bf7efe0 <line:166:13, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       |-DeclRefExpr 0x2034bf7ef88 <col:13> 'int' lvalue Var 0x2034bf78dc0 'len' 'int'
|   |       `-ImplicitCastExpr 0x2034bf7efc8 <col:20> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x2034bf7efa8 <col:20> 'int' lvalue Var 0x2034bf78cc0 'i' 'int'
|   |-IfStmt 0x2034bf81268 <line:168:5, line:169:25>
|   | |-BinaryOperator 0x2034bf811b0 <line:168:9, col:16> 'int' '!='
|   | | |-ImplicitCastExpr 0x2034bf81180 <col:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2034bf81140 <col:9> 'char *' lvalue Var 0x2034bf74080 'tmp' 'char *'
|   | | `-ImplicitCastExpr 0x2034bf81198 <col:16> 'char *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x2034bf81160 <col:16> 'char [24]' lvalue Var 0x2034bf74000 'ftmp' 'char [24]'
|   | `-CallExpr 0x2034bf81228 <line:169:9, col:25> 'int'
|   |   |-ImplicitCastExpr 0x2034bf81210 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2034bf811d0 <col:9> 'int ()' Function 0x2034bf80fb0 'OPENSSL_free' 'int ()'
|   |   `-ImplicitCastExpr 0x2034bf81250 <col:22> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2034bf811f0 <col:22> 'char *' lvalue Var 0x2034bf74080 'tmp' 'char *'
|   |-ReturnStmt 0x2034bf813e8 <line:171:5, col:16>
|   | `-ImplicitCastExpr 0x2034bf813d0 <col:12, col:16> 'int' <LValueToRValue>
|   |   `-ParenExpr 0x2034bf813b0 <col:12, col:16> 'int' lvalue
|   |     `-DeclRefExpr 0x2034bf81390 <col:13> 'int' lvalue Var 0x2034bf78dc0 'len' 'int'
|   |-LabelStmt 0x2034bf81538 <line:172:2, line:174:25> 'err'
|   | `-IfStmt 0x2034bf81520 <line:173:5, line:174:25>
|   |   |-BinaryOperator 0x2034bf81468 <line:173:9, col:16> 'int' '!='
|   |   | |-ImplicitCastExpr 0x2034bf81438 <col:9> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2034bf813f8 <col:9> 'char *' lvalue Var 0x2034bf74080 'tmp' 'char *'
|   |   | `-ImplicitCastExpr 0x2034bf81450 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |   `-DeclRefExpr 0x2034bf81418 <col:16> 'char [24]' lvalue Var 0x2034bf74000 'ftmp' 'char [24]'
|   |   `-CallExpr 0x2034bf814e0 <line:174:9, col:25> 'int'
|   |     |-ImplicitCastExpr 0x2034bf814c8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2034bf81488 <col:9> 'int ()' Function 0x2034bf80fb0 'OPENSSL_free' 'int ()'
|   |     `-ImplicitCastExpr 0x2034bf81508 <col:22> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2034bf814a8 <col:22> 'char *' lvalue Var 0x2034bf74080 'tmp' 'char *'
|   `-ReturnStmt 0x2034bf815b8 <line:176:5, col:14>
|     `-ParenExpr 0x2034bf81598 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x2034bf81570 <col:13> 'int' 0
|-FunctionDecl 0x2034bf745f0 <line:64:15> col:15 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x2034bf74690 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2034bf81870 <line:179:1, line:182:1> line:179:5 invalid i2t_ASN1_OBJECT 'int (char *, int, const int *)'
| |-ParmVarDecl 0x2034bf81680 <col:21, col:27> col:27 used buf 'char *'
| |-ParmVarDecl 0x2034bf81700 <col:32, col:36> col:36 used buf_len 'int'
| |-ParmVarDecl 0x2034bf81780 <col:45, col:64> col:64 invalid a 'const int *'
| `-CompoundStmt 0x2034bf81ae8 <line:180:1, line:182:1>
|-FunctionDecl 0x2034bf81c70 <line:184:1, line:207:1> line:184:5 invalid i2a_ASN1_OBJECT 'int (int *, const int *)'
| |-ParmVarDecl 0x2034bf81b10 <col:21, col:26> col:26 invalid bp 'int *'
| |-ParmVarDecl 0x2034bf81b90 <col:30, col:49> col:49 invalid a 'const int *'
| `-CompoundStmt 0x2034bf82d78 <line:185:1, line:207:1>
|   |-DeclStmt 0x2034bf81f28 <line:186:5, col:27>
|   | |-VarDecl 0x2034bf81dd8 <col:5, col:16> col:10 used buf 'char [80]'
|   | `-VarDecl 0x2034bf81e58 <col:5, col:24> col:20 used p 'char *' cinit
|   |   `-ImplicitCastExpr 0x2034bf81ef8 <col:24> 'char *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x2034bf81ec0 <col:24> 'char [80]' lvalue Var 0x2034bf81dd8 'buf' 'char [80]'
|   |-DeclStmt 0x2034bf81fc0 <line:187:5, col:10>
|   | `-VarDecl 0x2034bf81f58 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x2034bf82860 <line:192:5, line:197:5>
|   | |-BinaryOperator 0x2034bf824d0 <line:192:9, col:34> 'int' '>'
|   | | |-ImplicitCastExpr 0x2034bf824b8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2034bf82358 <col:9> 'int' lvalue Var 0x2034bf81f58 'i' 'int'
|   | | `-CStyleCastExpr 0x2034bf82490 <col:13, col:34> 'int' <IntegralCast>
|   | |   `-ParenExpr 0x2034bf82470 <col:18, col:34> 'unsigned long long'
|   | |     `-BinaryOperator 0x2034bf82418 <col:19, col:33> 'unsigned long long' '-'
|   | |       |-UnaryExprOrTypeTraitExpr 0x2034bf823b8 <col:19, col:29> 'unsigned long long' sizeof
|   | |       | `-ParenExpr 0x2034bf82398 <col:25, col:29> 'char [80]' lvalue
|   | |       |   `-DeclRefExpr 0x2034bf82378 <col:26> 'char [80]' lvalue Var 0x2034bf81dd8 'buf' 'char [80]' non_odr_use_unevaluated
|   | |       `-ImplicitCastExpr 0x2034bf82400 <col:33> 'unsigned long long' <IntegralCast>
|   | |         `-IntegerLiteral 0x2034bf823d8 <col:33> 'int' 1
|   | `-CompoundStmt 0x2034bf82840 <col:37, line:197:5>
|   |   |-BinaryOperator 0x2034bf82620 <line:193:9, col:33> 'char *' '='
|   |   | |-DeclRefExpr 0x2034bf824f0 <col:9> 'char *' lvalue Var 0x2034bf81e58 'p' 'char *'
|   |   | `-ImplicitCastExpr 0x2034bf82608 <col:13, col:33> 'char *' <IntegralToPointer>
|   |   |   `-CallExpr 0x2034bf825e0 <col:13, col:33> 'int'
|   |   |     |-ImplicitCastExpr 0x2034bf825c8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x2034bf82528 <col:13> 'int ()' Function 0x2034bf7bdb8 'OPENSSL_malloc' 'int ()'
|   |   |     `-BinaryOperator 0x2034bf825a8 <col:28, col:32> 'int' '+'
|   |   |       |-ImplicitCastExpr 0x2034bf82590 <col:28> 'int' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x2034bf82548 <col:28> 'int' lvalue Var 0x2034bf81f58 'i' 'int'
|   |   |       `-IntegerLiteral 0x2034bf82568 <col:32> 'int' 1
|   |   `-IfStmt 0x2034bf82788 <line:194:9, line:195:21>
|   |     |-BinaryOperator 0x2034bf82718 <line:194:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |     | |-ImplicitCastExpr 0x2034bf826e8 <.//openssl//file_jk/before\crypto\asn1\a_object.c:194:13> 'char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2034bf82640 <col:13> 'char *' lvalue Var 0x2034bf81e58 'p' 'char *'
|   |     | `-ImplicitCastExpr 0x2034bf82700 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |     |   `-ParenExpr 0x2034bf826c8 <col:17, col:27> 'void *'
|   |     |     `-CStyleCastExpr 0x2034bf826a0 <col:18, col:26> 'void *' <NullToPointer>
|   |     |       `-IntegerLiteral 0x2034bf82660 <col:26> 'int' 0
|   |     `-ReturnStmt 0x2034bf82778 <.//openssl//file_jk/before\crypto\asn1\a_object.c:195:13, col:21>
|   |       `-UnaryOperator 0x2034bf82760 <col:20, col:21> 'int' prefix '-'
|   |         `-IntegerLiteral 0x2034bf82738 <col:21> 'int' 1
|   |-IfStmt 0x2034bf82b58 <line:198:5, line:202:5>
|   | |-BinaryOperator 0x2034bf828d8 <line:198:9, col:14> 'int' '<='
|   | | |-ImplicitCastExpr 0x2034bf828c0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2034bf82878 <col:9> 'int' lvalue Var 0x2034bf81f58 'i' 'int'
|   | | `-IntegerLiteral 0x2034bf82898 <col:14> 'int' 0
|   | `-CompoundStmt 0x2034bf82b40 <col:17, line:202:5>
|   |   `-ReturnStmt 0x2034bf82b30 <line:201:9, col:16>
|   |     `-ImplicitCastExpr 0x2034bf82b18 <col:16> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x2034bf82af8 <col:16> 'int' lvalue Var 0x2034bf81f58 'i' 'int'
|   |-IfStmt 0x2034bf82cf8 <line:204:5, line:205:23>
|   | |-BinaryOperator 0x2034bf82c40 <line:204:9, col:14> 'int' '!='
|   | | |-ImplicitCastExpr 0x2034bf82c10 <col:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2034bf82bd0 <col:9> 'char *' lvalue Var 0x2034bf81e58 'p' 'char *'
|   | | `-ImplicitCastExpr 0x2034bf82c28 <col:14> 'char *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x2034bf82bf0 <col:14> 'char [80]' lvalue Var 0x2034bf81dd8 'buf' 'char [80]'
|   | `-CallExpr 0x2034bf82cb8 <line:205:9, col:23> 'int'
|   |   |-ImplicitCastExpr 0x2034bf82ca0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2034bf82c60 <col:9> 'int ()' Function 0x2034bf80fb0 'OPENSSL_free' 'int ()'
|   |   `-ImplicitCastExpr 0x2034bf82ce0 <col:22> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2034bf82c80 <col:22> 'char *' lvalue Var 0x2034bf81e58 'p' 'char *'
|   `-ReturnStmt 0x2034bf82d68 <line:206:5, col:14>
|     `-ImplicitCastExpr 0x2034bf82d50 <col:12, col:14> 'int' <LValueToRValue>
|       `-ParenExpr 0x2034bf82d30 <col:12, col:14> 'int' lvalue
|         `-DeclRefExpr 0x2034bf82d10 <col:13> 'int' lvalue Var 0x2034bf81f58 'i' 'int'
|-FunctionDecl 0x2034bf82f88 <line:209:1, line:235:1> line:209:14 invalid d2i_ASN1_OBJECT 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x2034bf82dd8 <col:30, col:44> col:44 invalid a 'int **'
| |-ParmVarDecl 0x2034bf82e60 <col:47, col:69> col:69 used pp 'const unsigned char **'
| |-ParmVarDecl 0x2034bf82ee0 <line:210:30, col:35> col:35 used length 'long'
| `-CompoundStmt 0x2034bf83d60 <line:211:1, line:235:1>
|   |-DeclStmt 0x2034bf83138 <line:212:5, col:27>
|   | `-VarDecl 0x2034bf830d0 <col:5, col:26> col:26 used p 'const unsigned char *'
|   |-DeclStmt 0x2034bf831d0 <line:213:5, col:13>
|   | `-VarDecl 0x2034bf83168 <col:5, col:10> col:10 used len 'long'
|   |-DeclStmt 0x2034bf83300 <line:214:5, col:20>
|   | |-VarDecl 0x2034bf83200 <col:5, col:9> col:9 used tag 'int'
|   | `-VarDecl 0x2034bf83280 <col:5, col:14> col:14 used xclass 'int'
|   |-DeclStmt 0x2034bf83430 <line:215:5, col:15>
|   | |-VarDecl 0x2034bf83330 <col:5, col:9> col:9 used inf 'int'
|   | `-VarDecl 0x2034bf833b0 <col:5, col:14> col:14 used i 'int'
|   |-BinaryOperator 0x2034bf83588 <line:217:5, col:10> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x2034bf834d0 <col:5> 'const unsigned char *' lvalue Var 0x2034bf830d0 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x2034bf83570 <col:9, col:10> 'const unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x2034bf83558 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x2034bf83540 <col:10> 'const unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x2034bf83508 <col:10> 'const unsigned char **' lvalue ParmVar 0x2034bf82e60 'pp' 'const unsigned char **'
|   |-BinaryOperator 0x2034bf838f0 <line:218:5, col:58> 'int' '='
|   | |-DeclRefExpr 0x2034bf835a8 <col:5> 'int' lvalue Var 0x2034bf83330 'inf' 'int'
|   | `-CallExpr 0x2034bf83890 <col:11, col:58> 'int'
|   |   |-ImplicitCastExpr 0x2034bf83878 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2034bf836d0 <col:11> 'int ()' Function 0x2034bf83608 'ASN1_get_object' 'int ()'
|   |   |-UnaryOperator 0x2034bf83710 <col:27, col:28> 'const unsigned char **' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x2034bf836f0 <col:28> 'const unsigned char *' lvalue Var 0x2034bf830d0 'p' 'const unsigned char *'
|   |   |-UnaryOperator 0x2034bf83788 <col:31, col:32> 'long *' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x2034bf83728 <col:32> 'long' lvalue Var 0x2034bf83168 'len' 'long'
|   |   |-UnaryOperator 0x2034bf837d8 <col:37, col:38> 'int *' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x2034bf837a0 <col:38> 'int' lvalue Var 0x2034bf83200 'tag' 'int'
|   |   |-UnaryOperator 0x2034bf83828 <col:43, col:44> 'int *' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x2034bf837f0 <col:44> 'int' lvalue Var 0x2034bf83280 'xclass' 'int'
|   |   `-ImplicitCastExpr 0x2034bf838d8 <col:52> 'long' <LValueToRValue>
|   |     `-DeclRefExpr 0x2034bf83840 <col:52> 'long' lvalue ParmVar 0x2034bf82ee0 'length' 'long'
|   |-IfStmt 0x2034bf83a48 <line:219:5, line:222:5>
|   | |-BinaryOperator 0x2034bf83970 <line:219:9, col:15> 'int' '&'
|   | | |-ImplicitCastExpr 0x2034bf83958 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2034bf83910 <col:9> 'int' lvalue Var 0x2034bf83330 'inf' 'int'
|   | | `-IntegerLiteral 0x2034bf83930 <col:15> 'int' 128
|   | `-CompoundStmt 0x2034bf83a30 <col:21, line:222:5>
|   |   `-GotoStmt 0x2034bf83a18 <line:221:9, col:14> 'err' 0x2034bf839c8
|   |-IfStmt 0x2034bf83ae8 <line:224:5, line:227:5>
|   | |-OpaqueValueExpr 0x2034bf83ad0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2034bf83ab8 <line:224:31, line:227:5>
|   |   `-GotoStmt 0x2034bf83aa0 <line:226:9, col:14> 'err' 0x2034bf839c8
|   |-IfStmt 0x2034bf83c18 <line:229:5, line:230:15>
|   | |-OpaqueValueExpr 0x2034bf83c00 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x2034bf83be0 <col:9, col:15> 'const unsigned char *' '='
|   |   |-UnaryOperator 0x2034bf83b90 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x2034bf83b78 <col:10> 'const unsigned char **' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2034bf83b58 <col:10> 'const unsigned char **' lvalue ParmVar 0x2034bf82e60 'pp' 'const unsigned char **'
|   |   `-ImplicitCastExpr 0x2034bf83bc8 <col:15> 'const unsigned char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2034bf83ba8 <col:15> 'const unsigned char *' lvalue Var 0x2034bf830d0 'p' 'const unsigned char *'
|   |-LabelStmt 0x2034bf83c78 <line:232:2, col:5> 'err'
|   | `-NullStmt 0x2034bf83c70 <col:5>
|   `-ReturnStmt 0x2034bf83d50 <line:234:5, col:17>
|     `-ImplicitCastExpr 0x2034bf83d38 <col:12, col:17> 'int *' <NullToPointer>
|       `-ParenExpr 0x2034bf83d18 <col:12, col:17> 'void *'
|         `-ParenExpr 0x2034bf83cf8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|           `-CStyleCastExpr 0x2034bf83cd0 <col:18, col:26> 'void *' <NullToPointer>
|             `-IntegerLiteral 0x2034bf83c90 <col:26> 'int' 0
|-FunctionDecl 0x2034bf83f98 <.//openssl//file_jk/before\crypto\asn1\a_object.c:237:1, line:331:1> line:237:14 invalid c2i_ASN1_OBJECT 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x2034bf83de8 <col:30, col:44> col:44 invalid a 'int **'
| |-ParmVarDecl 0x2034bf83e70 <col:47, col:69> col:69 used pp 'const unsigned char **'
| |-ParmVarDecl 0x2034bf83ef0 <line:238:30, col:35> col:35 used len 'long'
| `-CompoundStmt 0x2034bf87818 <line:239:1, line:331:1>
|   |-DeclStmt 0x2034bf7c100 <line:241:5, col:27>
|   | `-VarDecl 0x2034bf7c098 <col:5, col:26> col:26 used p 'const unsigned char *'
|   |-DeclStmt 0x2034bf7c198 <line:242:5, col:24>
|   | `-VarDecl 0x2034bf7c130 <col:5, col:20> col:20 used data 'unsigned char *'
|   |-DeclStmt 0x2034bf7c2c8 <line:243:5, col:18>
|   | |-VarDecl 0x2034bf7c1c8 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x2034bf7c248 <col:5, col:12> col:12 used length 'int'
|   |-IfStmt 0x2034bf7c9a8 <line:250:5, line:254:5>
|   | |-BinaryOperator 0x2034bf7c8a0 <line:250:9, line:251:22> 'int' '||'
|   | | |-BinaryOperator 0x2034bf7c718 <line:250:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '||'
|   | | | |-BinaryOperator 0x2034bf7c558 <.//openssl//file_jk/before\crypto\asn1\a_object.c:250:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '||'
|   | | | | |-BinaryOperator 0x2034bf7c428 <.//openssl//file_jk/before\crypto\asn1\a_object.c:250:9, <built-in>:30:21> 'int' '||'
|   | | | | | |-BinaryOperator 0x2034bf7c370 <.//openssl//file_jk/before\crypto\asn1\a_object.c:250:9, col:16> 'int' '<='
|   | | | | | | |-ImplicitCastExpr 0x2034bf7c340 <col:9> 'long' <LValueToRValue>
|   | | | | | | | `-DeclRefExpr 0x2034bf7c2e0 <col:9> 'long' lvalue ParmVar 0x2034bf83ef0 'len' 'long'
|   | | | | | | `-ImplicitCastExpr 0x2034bf7c358 <col:16> 'long' <IntegralCast>
|   | | | | | |   `-IntegerLiteral 0x2034bf7c318 <col:16> 'int' 0
|   | | | | | `-BinaryOperator 0x2034bf7c408 <col:21, <built-in>:30:21> 'int' '>'
|   | | | | |   |-ImplicitCastExpr 0x2034bf7c3d8 <.//openssl//file_jk/before\crypto\asn1\a_object.c:250:21> 'long' <LValueToRValue>
|   | | | | |   | `-DeclRefExpr 0x2034bf7c390 <col:21> 'long' lvalue ParmVar 0x2034bf83ef0 'len' 'long'
|   | | | | |   `-ImplicitCastExpr 0x2034bf7c3f0 <<built-in>:30:21> 'long' <IntegralCast>
|   | | | | |     `-IntegerLiteral 0x2034bf7c3b0 <col:21> 'int' 2147483647
|   | | | | `-BinaryOperator 0x2034bf7c538 <.//openssl//file_jk/before\crypto\asn1\a_object.c:250:38, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | | |   |-ImplicitCastExpr 0x2034bf7c508 <.//openssl//file_jk/before\crypto\asn1\a_object.c:250:38> 'const unsigned char **' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x2034bf7c448 <col:38> 'const unsigned char **' lvalue ParmVar 0x2034bf83e70 'pp' 'const unsigned char **'
|   | | | |   `-ImplicitCastExpr 0x2034bf7c520 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const unsigned char **' <BitCast>
|   | | | |     `-ParenExpr 0x2034bf7c4e8 <col:17, col:27> 'void *'
|   | | | |       `-CStyleCastExpr 0x2034bf7c4c0 <col:18, col:26> 'void *' <NullToPointer>
|   | | | |         `-IntegerLiteral 0x2034bf7c480 <col:26> 'int' 0
|   | | | `-BinaryOperator 0x2034bf7c6f8 <.//openssl//file_jk/before\crypto\asn1\a_object.c:250:52, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |   |-ParenExpr 0x2034bf7c638 <.//openssl//file_jk/before\crypto\asn1\a_object.c:250:52, col:60> 'const unsigned char *'
|   | | |   | `-BinaryOperator 0x2034bf7c618 <col:53, col:58> 'const unsigned char *' '='
|   | | |   |   |-DeclRefExpr 0x2034bf7c578 <col:53> 'const unsigned char *' lvalue Var 0x2034bf7c098 'p' 'const unsigned char *'
|   | | |   |   `-ImplicitCastExpr 0x2034bf7c600 <col:57, col:58> 'const unsigned char *' <LValueToRValue>
|   | | |   |     `-UnaryOperator 0x2034bf7c5e8 <col:57, col:58> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | |   |       `-ImplicitCastExpr 0x2034bf7c5d0 <col:58> 'const unsigned char **' <LValueToRValue>
|   | | |   |         `-DeclRefExpr 0x2034bf7c5b0 <col:58> 'const unsigned char **' lvalue ParmVar 0x2034bf83e70 'pp' 'const unsigned char **'
|   | | |   `-ImplicitCastExpr 0x2034bf7c6e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const unsigned char *' <BitCast>
|   | | |     `-ParenExpr 0x2034bf7c6c0 <col:17, col:27> 'void *'
|   | | |       `-CStyleCastExpr 0x2034bf7c698 <col:18, col:26> 'void *' <NullToPointer>
|   | | |         `-IntegerLiteral 0x2034bf7c658 <col:26> 'int' 0
|   | | `-BinaryOperator 0x2034bf7c880 <.//openssl//file_jk/before\crypto\asn1\a_object.c:251:9, col:22> 'int' '&'
|   | |   |-ImplicitCastExpr 0x2034bf7c868 <col:9, col:18> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x2034bf7c850 <col:9, col:18> 'unsigned char' <LValueToRValue>
|   | |   |   `-ArraySubscriptExpr 0x2034bf7c808 <col:9, col:18> 'const unsigned char' lvalue
|   | |   |     |-ImplicitCastExpr 0x2034bf7c7f0 <col:9> 'const unsigned char *' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x2034bf7c738 <col:9> 'const unsigned char *' lvalue Var 0x2034bf7c098 'p' 'const unsigned char *'
|   | |   |     `-BinaryOperator 0x2034bf7c7d0 <col:11, col:17> 'long' '-'
|   | |   |       |-ImplicitCastExpr 0x2034bf7c7a0 <col:11> 'long' <LValueToRValue>
|   | |   |       | `-DeclRefExpr 0x2034bf7c758 <col:11> 'long' lvalue ParmVar 0x2034bf83ef0 'len' 'long'
|   | |   |       `-ImplicitCastExpr 0x2034bf7c7b8 <col:17> 'long' <IntegralCast>
|   | |   |         `-IntegerLiteral 0x2034bf7c778 <col:17> 'int' 1
|   | |   `-IntegerLiteral 0x2034bf7c828 <col:22> 'int' 128
|   | `-CompoundStmt 0x2034bf7c990 <col:28, line:254:5>
|   |   `-ReturnStmt 0x2034bf7c980 <line:253:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     `-ImplicitCastExpr 0x2034bf7c968 <col:17, col:27> 'int *' <NullToPointer>
|   |       `-ParenExpr 0x2034bf7c948 <col:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x2034bf7c920 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x2034bf7c8e0 <col:26> 'int' 0
|   |-BinaryOperator 0x2034bf7ca70 <.//openssl//file_jk/before\crypto\asn1\a_object.c:256:5, col:19> 'int' '='
|   | |-DeclRefExpr 0x2034bf7c9c0 <col:5> 'int' lvalue Var 0x2034bf7c248 'length' 'int'
|   | `-CStyleCastExpr 0x2034bf7ca48 <col:14, col:19> 'int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x2034bf7ca30 <col:19> 'long' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x2034bf7c9f8 <col:19> 'long' lvalue ParmVar 0x2034bf83ef0 'len' 'long'
|   |-IfStmt 0x2034bf7d028 <line:266:5, line:279:5>
|   | |-OpaqueValueExpr 0x2034bf7d010 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2034bf7cff0 <line:266:25, line:279:5>
|   |   |-IfStmt 0x2034bf7cf20 <line:273:9, line:276:9>
|   |   | |-OpaqueValueExpr 0x2034bf7cf08 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x2034bf7cef8 <line:273:16, line:276:9>
|   |   `-CompoundAssignOperator 0x2034bf7cfc0 <line:277:9, col:16> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |     |-UnaryOperator 0x2034bf7cf70 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |     | `-ImplicitCastExpr 0x2034bf7cf58 <col:10> 'const unsigned char **' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2034bf7cf38 <col:10> 'const unsigned char **' lvalue ParmVar 0x2034bf83e70 'pp' 'const unsigned char **'
|   |     `-ImplicitCastExpr 0x2034bf7cfa8 <col:16> 'long' <LValueToRValue>
|   |       `-DeclRefExpr 0x2034bf7cf88 <col:16> 'long' lvalue ParmVar 0x2034bf83ef0 'len' 'long'
|   |-ForStmt 0x2034bf7d5b0 <line:280:5, line:285:5>
|   | |-BinaryOperator 0x2034bf7d098 <line:280:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x2034bf7d040 <col:10> 'int' lvalue Var 0x2034bf7c1c8 'i' 'int'
|   | | `-IntegerLiteral 0x2034bf7d070 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2034bf7d128 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x2034bf7d0f8 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2034bf7d0b8 <col:17> 'int' lvalue Var 0x2034bf7c1c8 'i' 'int'
|   | | `-ImplicitCastExpr 0x2034bf7d110 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2034bf7d0d8 <col:21> 'int' lvalue Var 0x2034bf7c248 'length' 'int'
|   | |-BinaryOperator 0x2034bf7d1b8 <col:29, col:35> 'const unsigned char *' ','
|   | | |-UnaryOperator 0x2034bf7d168 <col:29, col:30> 'int' postfix '++'
|   | | | `-DeclRefExpr 0x2034bf7d148 <col:29> 'int' lvalue Var 0x2034bf7c1c8 'i' 'int'
|   | | `-UnaryOperator 0x2034bf7d1a0 <col:34, col:35> 'const unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x2034bf7d180 <col:34> 'const unsigned char *' lvalue Var 0x2034bf7c098 'p' 'const unsigned char *'
|   | `-CompoundStmt 0x2034bf7d598 <col:39, line:285:5>
|   |   `-IfStmt 0x2034bf7d580 <line:281:9, line:284:9>
|   |     |-BinaryOperator 0x2034bf7d478 <line:281:13, col:49> 'int' '&&'
|   |     | |-BinaryOperator 0x2034bf7d280 <col:13, col:19> 'int' '=='
|   |     | | |-ImplicitCastExpr 0x2034bf7d268 <col:13, col:14> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x2034bf7d250 <col:13, col:14> 'unsigned char' <LValueToRValue>
|   |     | | |   `-UnaryOperator 0x2034bf7d210 <col:13, col:14> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | | |     `-ImplicitCastExpr 0x2034bf7d1f8 <col:14> 'const unsigned char *' <LValueToRValue>
|   |     | | |       `-DeclRefExpr 0x2034bf7d1d8 <col:14> 'const unsigned char *' lvalue Var 0x2034bf7c098 'p' 'const unsigned char *'
|   |     | | `-IntegerLiteral 0x2034bf7d228 <col:19> 'int' 128
|   |     | `-ParenExpr 0x2034bf7d458 <col:27, col:49> 'int'
|   |     |   `-BinaryOperator 0x2034bf7d438 <col:28, col:48> 'int' '||'
|   |     |     |-UnaryOperator 0x2034bf7d2d8 <col:28, col:29> 'int' prefix '!' cannot overflow
|   |     |     | `-ImplicitCastExpr 0x2034bf7d2c0 <col:29> 'int' <LValueToRValue>
|   |     |     |   `-DeclRefExpr 0x2034bf7d2a0 <col:29> 'int' lvalue Var 0x2034bf7c1c8 'i' 'int'
|   |     |     `-UnaryOperator 0x2034bf7d420 <col:34, col:48> 'int' prefix '!' cannot overflow
|   |     |       `-ParenExpr 0x2034bf7d400 <col:35, col:48> 'int'
|   |     |         `-BinaryOperator 0x2034bf7d3e0 <col:36, col:44> 'int' '&'
|   |     |           |-ImplicitCastExpr 0x2034bf7d3c8 <col:36, col:40> 'int' <IntegralCast>
|   |     |           | `-ImplicitCastExpr 0x2034bf7d3b0 <col:36, col:40> 'unsigned char' <LValueToRValue>
|   |     |           |   `-ArraySubscriptExpr 0x2034bf7d368 <col:36, col:40> 'const unsigned char' lvalue
|   |     |           |     |-ImplicitCastExpr 0x2034bf7d350 <col:36> 'const unsigned char *' <LValueToRValue>
|   |     |           |     | `-DeclRefExpr 0x2034bf7d2f0 <col:36> 'const unsigned char *' lvalue Var 0x2034bf7c098 'p' 'const unsigned char *'
|   |     |           |     `-UnaryOperator 0x2034bf7d338 <col:38, col:39> 'int' prefix '-'
|   |     |           |       `-IntegerLiteral 0x2034bf7d310 <col:39> 'int' 1
|   |     |           `-IntegerLiteral 0x2034bf7d388 <col:44> 'int' 128
|   |     `-CompoundStmt 0x2034bf7d568 <col:52, line:284:9>
|   |       `-ReturnStmt 0x2034bf7d558 <line:283:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |         `-ImplicitCastExpr 0x2034bf7d540 <col:17, col:27> 'int *' <NullToPointer>
|   |           `-ParenExpr 0x2034bf7d520 <col:17, col:27> 'void *'
|   |             `-CStyleCastExpr 0x2034bf7d4f8 <col:18, col:26> 'void *' <NullToPointer>
|   |               `-IntegerLiteral 0x2034bf7d4b8 <col:26> 'int' 0
|   |-IfStmt 0x2034bf7da30 <.//openssl//file_jk/before\crypto\asn1\a_object.c:291:5, line:296:9> has_else
|   | |-OpaqueValueExpr 0x2034bf7da18 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x2034bf7d9f8 <line:292:52, line:295:5>
|   | | `-IfStmt 0x2034bf7d9e0 <line:293:9, line:294:25>
|   | |   |-OpaqueValueExpr 0x2034bf7d9c8 <<invalid sloc>> '_Bool'
|   | |   `-ReturnStmt 0x2034bf7d9b8 <col:13, col:25>
|   | |     `-ImplicitCastExpr 0x2034bf7d9a0 <col:20, col:25> 'int *' <NullToPointer>
|   | |       `-ParenExpr 0x2034bf7d980 <col:20, col:25> 'void *'
|   | |         `-ParenExpr 0x2034bf7d960 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   | |           `-CStyleCastExpr 0x2034bf7d938 <col:18, col:26> 'void *' <NullToPointer>
|   | |             `-IntegerLiteral 0x2034bf7d8f8 <col:26> 'int' 0
|   | `-NullStmt 0x2034bf7da10 <.//openssl//file_jk/before\crypto\asn1\a_object.c:296:9>
|   |-BinaryOperator 0x2034bf7dae0 <line:298:5, col:10> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x2034bf7da58 <col:5> 'const unsigned char *' lvalue Var 0x2034bf7c098 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x2034bf7dac8 <col:9, col:10> 'const unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x2034bf7dab0 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x2034bf7da98 <col:10> 'const unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x2034bf7da78 <col:10> 'const unsigned char **' lvalue ParmVar 0x2034bf83e70 'pp' 'const unsigned char **'
|   |-IfStmt 0x2034bf87150 <line:303:5, line:312:5>
|   | |-OpaqueValueExpr 0x2034bf87138 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2034bf87110 <line:303:51, line:312:5>
|   |   |-CallExpr 0x2034bf7dd78 <line:305:9, col:26> 'int'
|   |   | |-ImplicitCastExpr 0x2034bf7dd60 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2034bf7dd20 <col:9> 'int ()' Function 0x2034bf80fb0 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x2034bf7dda0 <col:22> 'unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2034bf7dd40 <col:22> 'unsigned char *' lvalue Var 0x2034bf7c130 'data' 'unsigned char *'
|   |   |-BinaryOperator 0x2034bf7de88 <line:306:9, col:37> 'unsigned char *' '='
|   |   | |-DeclRefExpr 0x2034bf7ddb8 <col:9> 'unsigned char *' lvalue Var 0x2034bf7c130 'data' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x2034bf7de70 <col:16, col:37> 'unsigned char *' <IntegralToPointer>
|   |   |   `-CallExpr 0x2034bf7de30 <col:16, col:37> 'int'
|   |   |     |-ImplicitCastExpr 0x2034bf7de18 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x2034bf7ddd8 <col:16> 'int ()' Function 0x2034bf7bdb8 'OPENSSL_malloc' 'int ()'
|   |   |     `-ImplicitCastExpr 0x2034bf7de58 <col:31> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x2034bf7ddf8 <col:31> 'int' lvalue Var 0x2034bf7c248 'length' 'int'
|   |   `-IfStmt 0x2034bf7e040 <line:307:9, line:310:9>
|   |     |-BinaryOperator 0x2034bf7df80 <line:307:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |     | |-ImplicitCastExpr 0x2034bf7df50 <.//openssl//file_jk/before\crypto\asn1\a_object.c:307:13> 'unsigned char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2034bf7dea8 <col:13> 'unsigned char *' lvalue Var 0x2034bf7c130 'data' 'unsigned char *'
|   |     | `-ImplicitCastExpr 0x2034bf7df68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   |     |   `-ParenExpr 0x2034bf7df30 <col:17, col:27> 'void *'
|   |     |     `-CStyleCastExpr 0x2034bf7df08 <col:18, col:26> 'void *' <NullToPointer>
|   |     |       `-IntegerLiteral 0x2034bf7dec8 <col:26> 'int' 0
|   |     `-CompoundStmt 0x2034bf7e028 <.//openssl//file_jk/before\crypto\asn1\a_object.c:307:27, line:310:9>
|   |       `-GotoStmt 0x2034bf7e010 <line:309:13, col:18> 'err' 0x2034bf7dfc0
|   |-CallExpr 0x2034bf87270 <line:313:5, col:27> 'void *'
|   | |-ImplicitCastExpr 0x2034bf87258 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2034bf87168 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x2034bf78480 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x2034bf872c0 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x2034bf872a8 <col:12> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2034bf87188 <col:12> 'unsigned char *' lvalue Var 0x2034bf7c130 'data' 'unsigned char *'
|   | |-ImplicitCastExpr 0x2034bf872f0 <col:18> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x2034bf872d8 <col:18> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2034bf871a8 <col:18> 'const unsigned char *' lvalue Var 0x2034bf7c098 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x2034bf87320 <col:21> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x2034bf87308 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x2034bf871c8 <col:21> 'int' lvalue Var 0x2034bf7c248 'length' 'int'
|   |-CompoundAssignOperator 0x2034bf874e0 <line:320:5, col:10> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | |-DeclRefExpr 0x2034bf87488 <col:5> 'const unsigned char *' lvalue Var 0x2034bf7c098 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x2034bf874c8 <col:10> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x2034bf874a8 <col:10> 'int' lvalue Var 0x2034bf7c248 'length' 'int'
|   |-BinaryOperator 0x2034bf87620 <line:324:5, col:11> 'const unsigned char *' '='
|   | |-UnaryOperator 0x2034bf875d0 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x2034bf875b8 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2034bf87598 <col:6> 'const unsigned char **' lvalue ParmVar 0x2034bf83e70 'pp' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x2034bf87608 <col:11> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2034bf875e8 <col:11> 'const unsigned char *' lvalue Var 0x2034bf7c098 'p' 'const unsigned char *'
|   |-LabelStmt 0x2034bf87688 <line:326:2, col:5> 'err'
|   | `-NullStmt 0x2034bf87680 <col:5>
|   `-ReturnStmt 0x2034bf87808 <line:330:5, col:17>
|     `-ImplicitCastExpr 0x2034bf877f0 <col:12, col:17> 'int *' <NullToPointer>
|       `-ParenExpr 0x2034bf877d0 <col:12, col:17> 'void *'
|         `-ParenExpr 0x2034bf877b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|           `-CStyleCastExpr 0x2034bf87788 <col:18, col:26> 'void *' <NullToPointer>
|             `-IntegerLiteral 0x2034bf87748 <col:26> 'int' 0
|-FunctionDecl 0x2034bf87970 <.//openssl//file_jk/before\crypto\asn1\a_object.c:333:1, line:344:1> line:333:14 invalid ASN1_OBJECT_new 'int *(void)'
| `-CompoundStmt 0x2034bf87cf8 <line:334:1, line:344:1>
|   `-IfStmt 0x2034bf87ce0 <line:338:5, line:341:5>
|     |-OpaqueValueExpr 0x2034bf87cc8 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x2034bf87cb0 <line:338:22, line:341:5>
|       `-ReturnStmt 0x2034bf87ca0 <line:340:9, col:21>
|         `-ImplicitCastExpr 0x2034bf87c88 <col:16, col:21> 'int *' <NullToPointer>
|           `-ParenExpr 0x2034bf87c68 <col:16, col:21> 'void *'
|             `-ParenExpr 0x2034bf87c48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|               `-CStyleCastExpr 0x2034bf87c20 <col:18, col:26> 'void *' <NullToPointer>
|                 `-IntegerLiteral 0x2034bf87be0 <col:26> 'int' 0
|-FunctionDecl 0x2034bf87de8 <.//openssl//file_jk/before\crypto\asn1\a_object.c:346:1, line:366:1> line:346:6 invalid ASN1_OBJECT_free 'void (int *)'
| |-ParmVarDecl 0x2034bf87d28 <col:23, col:36> col:36 invalid a 'int *'
| `-CompoundStmt 0x2034bf8b1f8 <line:347:1, line:366:1>
|   |-IfStmt 0x2034bf87f58 <line:348:5, line:349:9>
|   | |-OpaqueValueExpr 0x2034bf87f40 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2034bf87f30 <col:9>
|   |-IfStmt 0x2034bf88060 <line:350:5, line:358:5>
|   | |-OpaqueValueExpr 0x2034bf88048 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2034bf88038 <line:350:54, line:358:5>
|   `-IfStmt 0x2034bf8b1c0 <line:359:5, line:363:5>
|     |-OpaqueValueExpr 0x2034bf8b1a8 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x2034bf8b198 <line:359:51, line:363:5>
`-FunctionDecl 0x2034bf8b5c0 <line:368:1, line:381:1> line:368:14 invalid ASN1_OBJECT_create 'int *(int, unsigned char *, int, const char *, const char *)'
  |-ParmVarDecl 0x2034bf8b238 <col:33, col:37> col:37 used nid 'int'
  |-ParmVarDecl 0x2034bf8b2b8 <col:42, col:57> col:57 used data 'unsigned char *'
  |-ParmVarDecl 0x2034bf8b338 <col:63, col:67> col:67 used len 'int'
  |-ParmVarDecl 0x2034bf8b3b8 <line:369:33, col:45> col:45 used sn 'const char *'
  |-ParmVarDecl 0x2034bf8b438 <col:49, col:61> col:61 used ln 'const char *'
  `-CompoundStmt 0x2034bf8b850 <line:370:1, line:381:1>
