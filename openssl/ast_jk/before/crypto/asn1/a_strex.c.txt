TranslationUnitDecl 0x2df324c0ff8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2df324c1890 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2df324c1590 '__int128'
|-TypedefDecl 0x2df324c1900 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2df324c15b0 'unsigned __int128'
|-TypedefDecl 0x2df324c1c38 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x2df324c19f0 'struct __NSConstantString_tag'
|   `-Record 0x2df324c1958 '__NSConstantString_tag'
|-TypedefDecl 0x2df324c1ca8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x2df324c11d0 'unsigned long long'
|-TypedefDecl 0x2df324c1d40 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2df324c1d00 'char *'
|   `-BuiltinType 0x2df324c1090 'char'
|-TypedefDecl 0x2df324c1db0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x2df324c1d00 'char *'
|   `-BuiltinType 0x2df324c1090 'char'
|-TypedefDecl 0x2df324c1e70 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x2df324c11d0 'unsigned long long'
|-TypedefDecl 0x2df324c1ee0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x2df324c1d00 'char *'
|   `-BuiltinType 0x2df324c1090 'char'
|-FunctionDecl 0x2df340343a0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2df34034440 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x2df340344b0 <col:21> Implicit
|-FunctionDecl 0x2df34034508 prev 0x2df340343a0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2df34034230 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x2df340345f8 <col:21> Inherited Implicit
|-TypedefDecl 0x2df34034638 prev 0x2df324c1ca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x2df324c11d0 'unsigned long long'
|-TypedefDecl 0x2df340346e0 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x2df340346b0 'size_t' sugar
|   |-Typedef 0x2df34034638 'size_t'
|   `-BuiltinType 0x2df324c11d0 'unsigned long long'
|-TypedefDecl 0x2df34034750 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x2df324c1130 'long long'
|-TypedefDecl 0x2df340347c0 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x2df324c1130 'long long'
|-TypedefDecl 0x2df34034830 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x2df324c1170 'unsigned short'
|-TypedefDecl 0x2df340348a0 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x2df324c1170 'unsigned short'
|-TypedefDecl 0x2df34034910 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x2df324c1170 'unsigned short'
|-TypedefDecl 0x2df34034980 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x2df324c10f0 'int'
|-TypedefDecl 0x2df340349f0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x2df324c1110 'long'
|-TypedefDecl 0x2df34034a60 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x2df324c1130 'long long'
|-TypedefDecl 0x2df34034af0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x2df34034ac0 '__time64_t' sugar
|   |-Typedef 0x2df34034a60 '__time64_t'
|   `-BuiltinType 0x2df324c1130 'long long'
|-FunctionDecl 0x2df34034c68 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x2df34034e88 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x2df34073910 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x2df34034fc8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x2df34035040 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x2df340350b8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x2df34035138 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x2df340736b0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x2df340739f0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x2df34073ab0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x2df34073c20 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x2df34073bd0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x2df34073b70 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x2df34073a90 'struct threadlocaleinfostruct'
|       `-Record 0x2df34080780 'threadlocaleinfostruct'
|-TypedefDecl 0x2df34073d30 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x2df34073ce0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x2df34073c80 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x2df34073b50 'struct threadmbcinfostruct'
|       `-Record 0x2df34073ab0 'threadmbcinfostruct'
|-RecordDecl 0x2df34073d88 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x2df34073e40 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x2df34073f00 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2df34073f90 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x2df34074020 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x2df340740d8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x2df34074080 'struct localeinfo_struct' sugar
|   `-RecordType 0x2df34073ee0 'struct localeinfo_struct'
|     `-Record 0x2df34073e40 'localeinfo_struct'
|-TypedefDecl 0x2df340741b0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x2df34074160 'struct localeinfo_struct *'
|   `-ElaboratedType 0x2df34074080 'struct localeinfo_struct' sugar
|     `-RecordType 0x2df34073ee0 'struct localeinfo_struct'
|       `-Record 0x2df34073e40 'localeinfo_struct'
|-RecordDecl 0x2df34074228 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x2df340742e0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2df34074358 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x2df34074418 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x2df340744b0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x2df34074520 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x2df340745d8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x2df34074580 'struct localerefcount' sugar
|   `-RecordType 0x2df340742c0 'struct localerefcount'
|     `-Record 0x2df34074228 'localerefcount'
|-RecordDecl 0x2df34080780 prev 0x2df340739f0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x2df34080800 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2df34080878 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x2df340808e8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x2df34080958 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x2df340809c8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x2df34080b88 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x2df34080bf8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x2df34080c68 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x2df34080cd8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x2df34080d48 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x2df34080db8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x2df34080e10 parent 0x2df324c0ff8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x2df34080fa0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x2df34081010 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x2df34081080 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x2df340810f0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x2df34081190 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x2df34081200 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x2df34081310 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x2df34081448 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x2df340814f8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x2df340814a0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x2df34073a90 'struct threadlocaleinfostruct'
|     `-Record 0x2df34080780 'threadlocaleinfostruct'
|-RecordDecl 0x2df34081590 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x2df34081650 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2df340816c8 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x2df34079710 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x2df34079780 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x2df340797f0 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x2df34079860 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x2df340798d0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x2df34079940 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x2df340799b0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x2df34079a60 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x2df34079a10 'struct _iobuf' sugar
|   `-RecordType 0x2df34081630 'struct _iobuf'
|     `-Record 0x2df34081590 '_iobuf'
|-FunctionDecl 0x2df34079c98 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x2df34079d68 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x2df324c1130 'long long'
|-FunctionDecl 0x2df34079f48 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2df34079dd0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x2df3407a240 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2df3407a020 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x2df3407a098 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x2df3407a5f0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x2df3407a320 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x2df3407a3a0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x2df3407a420 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x2df3408a990 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2df3408a820 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x2df3408abc0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x2df3408aa80 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x2df3408ad70 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2df3408ac90 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x2df3408af60 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2df3408b258 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x2df3408b030 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x2df3408b0b0 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x2df3408b410 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2df3408b330 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x2df3408b5c0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2df3408b4e0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x2df3408b770 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2df3408b690 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x2df340858d8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2df340857f8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x2df34085a68 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2df34085dd0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x2df34085b30 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x2df34085c28 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x2df34086188 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x2df34085eb0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x2df34085f30 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x2df34085fa8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x2df34086348 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2df34086268 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x2df34086610 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x2df34086420 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x2df340864a0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x2df340837b0 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2df34083ba8 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x2df34083c48 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2df34083cb0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2df34083d28 prev 0x2df34083ba8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x2df34083980 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x2df34083a00 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x2df34083dd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df34084250 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x2df34083f80 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x2df34084000 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x2df34084080 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x2df34084570 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x2df34084610 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x2df34084678 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2df340846f0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x2df340867e0 prev 0x2df34084570 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2df34084330 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2df340843b0 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x2df340868d8 <col:40> Inherited printf 2 3
|-FunctionDecl 0x2df34086aa0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2df34086920 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x2df340869a0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x2df34086cf8 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2df34086b80 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x2df34086bf8 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x2df34086f28 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2df34086dd8 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x2df34087220 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x2df34087000 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x2df34087078 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x2df340876b8 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x2df34087758 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2df34088800 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2df34088868 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x2df340888d0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x2df34088958 prev 0x2df340876b8 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x2df34087300 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x2df34087378 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340873f0 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df34087468 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x2df34088e60 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2df34088a48 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x2df34088ac0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df34088b38 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df34088bb0 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df34088c28 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x2df34089320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x2df34089050 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x2df340890d0 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x2df34089148 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x2df340893d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df3408c8e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x2df34089520 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x2df340895a0 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x2df34089620 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x2df34089698 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x2df3408cc90 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x2df3408cd30 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x2df3408cd98 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2df3408ce10 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x2df3408ce78 prev 0x2df3408cc90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x2df3408cac8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x2df3408cb48 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x2df3408d058 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x2df3408cf28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df3408d498 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2df3408d198 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x2df3408d218 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x2df3408d2b0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2df3408d550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df3408d850 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2df3408d690 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x2df3408d710 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x2df3408db40 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2df3408d928 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2df3408d9a8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2df3408da20 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df3408dea0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x2df3408dc20 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x2df3408dcf8 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x2df3408e258 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x2df3408df78 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x2df3408dff8 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x2df3408e078 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x2df3408e4b8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x2df3408e338 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x2df3408e8a8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x2df3408e588 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2df3408e608 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x2df3408e688 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x2df3408eb08 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x2df3408e988 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x2df3408efc8 <line:246:43> col:43 implicit used fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x2df3408f068 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2df3408f0d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2df3408f138 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x2df3408f1a0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x2df3408f228 prev 0x2df3408efc8 <col:28, col:159> col:43 used fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x2df3408ec10 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x2df3408ec88 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df3408ed00 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df3408ed78 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x2df3408f3f0 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2df3408f310 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x2df3408f580 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2df3408f708 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2df340899d0 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x2df3408f7d8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x2df34089820 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2df34089cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2df34089bb0 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x2df34089da0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df34089fc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2df34089ee0 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x2df3408a1e0 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x2df3408a098 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x2df3408a390 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2df3408a2b0 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x2df3408a5e0 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x2df3408a468 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x2df3408a4e8 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x2df3408b830 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x2df3408b8d0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2df3408b940 <col:40> Implicit printf 1 2
|-FunctionDecl 0x2df3408b9a8 prev 0x2df3408b830 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x2df3408a6c0 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x2df3408ba98 <col:40> Inherited printf 1 2
|-FunctionDecl 0x2df3408bbc8 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2df3408bae8 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x2df3408be18 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2df3408bca0 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x2df3408bd18 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x2df3408bfd8 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2df3408bef8 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x2df3408c1f8 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2df3408c0b0 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x2df3408c448 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2df3408c2d0 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x2df3408c348 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x2df3408c608 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2df3408c528 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x2df340da090 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2df3408c6e0 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x2df3408c760 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x2df340da250 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2df340da170 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x2df340da4e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x2df340da400 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x2df340da588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x2df340da780 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2df340da6a8 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x2df340da910 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2df340dabb8 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x2df340dac58 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2df340dacc8 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x2df340dad30 prev 0x2df340dabb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x2df340daaa0 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x2df340daf08 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x2df340dadd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df340e2350 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340e2118 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x2df340e2190 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2df340e2400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df340e2628 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2df340e2548 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x2df340e2878 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340e2700 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x2df340e2778 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df340e2c38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x2df340e2a10 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x2df340e2a90 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x2df340e2ce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df340e2f10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2df340e2e30 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x2df340e0168 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x2df340e0020 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x2df340e0350 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x2df340e07a0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x2df340e0418 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2df340e0498 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x2df340e0518 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x2df340e0590 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2df340e0c20 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x2df340e0890 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x2df340e0908 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340e0980 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df340e0a00 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x2df340dafd0 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2df340e0d10 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2df340e0d88 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df340e0e08 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x2df340db198 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2df340db0b8 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x2df340db570 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x2df340db610 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2df340db678 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2df340db6f0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x2df340db758 prev 0x2df340db570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x2df340db330 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x2df340db3b0 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x2df340db938 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x2df340db808 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df340dbd28 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340dba48 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x2df340dbac8 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x2df340dbb40 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2df340dbde0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df340dd0f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x2df340dbf28 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x2df340dcff0 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x2df340dd3e8 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340dd1d0 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x2df340dd250 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x2df340dd2c8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df340dd878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2df340dd590 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x2df340dd608 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340dd688 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x2df340dd930 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df340ddf00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340ddb70 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x2df340ddbe8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340ddc68 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x2df340ddce0 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2df340e1030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df340e1390 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2df340e1178 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x2df340e11f0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df340e1270 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x2df340e1728 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340e1478 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x2df340e14f0 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340e1570 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x2df340e15e8 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df340e1988 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x2df340e1a28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df340e1ce0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x2df340e1b70 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x2df340e3050 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x2df340e1db8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x2df340e1e30 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2df340e32d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2df340e31f0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x2df340e3378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df340e3638 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2df340e34c0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x2df340e3538 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x2df340e3a50 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2df340e3af0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x2df340e3b58 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2df340e3bc0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2df340e3c40 <col:40> Implicit printf 2 0
|-FunctionDecl 0x2df340e3ca8 prev 0x2df340e3a50 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2df340e3710 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x2df340e3790 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x2df340e3808 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2df340e3da8 <col:40> Inherited printf 2 0
|-FunctionDecl 0x2df340dbfe0 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2df340dc080 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x2df340dc0e8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2df340dc150 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2df340dc1d0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x2df340dc238 prev 0x2df340dbfe0 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2df340e3df0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2df340e3e70 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x2df340e3ee8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2df340dc338 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x2df340dc598 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2df340dc380 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2df340dc400 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x2df340dc478 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340dc890 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2df340dc678 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2df340dc6f8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x2df340dc770 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340dcbd8 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2df340dcc78 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2df340dcce0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2df340dcd58 <col:40> Implicit printf 1 0
|-FunctionDecl 0x2df340dcdc0 prev 0x2df340dcbd8 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2df340dc978 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x2df340dc9f0 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2df340dceb8 <col:40> Inherited printf 1 0
|-FunctionDecl 0x2df340de138 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2df340de1d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2df340de240 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2df340de2b8 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x2df340de320 prev 0x2df340de138 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2df340dcf08 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x2df340de000 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2df340de418 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x2df340de5e0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2df340de468 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x2df340de4e0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340de838 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2df340de6c0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x2df340de738 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340ded98 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2df340dee38 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2df340deea0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2df340def08 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2df340def70 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2df340e4060 <col:77> Implicit printf 3 0
|-FunctionDecl 0x2df340e40c8 prev 0x2df340ded98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2df340de9d8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x2df340dea50 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340dead0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x2df340deb48 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x2df340e42b8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x2df340e4188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df340e4728 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2df340e4308 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x2df340e4380 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340e43f8 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340e4478 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x2df340e44f0 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340e4b68 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2df340e4820 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x2df340e4898 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340e4910 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340e4990 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x2df340e4a08 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340e4f38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2df340e4d20 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x2df340e4d98 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340e4e18 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x2df340e4ff0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df340e54e0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2df340e5230 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x2df340e52a8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340e5328 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x2df340e53a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x2df340e55a0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df340e5998 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2df340e56e8 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x2df340e5760 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340e57e0 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x2df340e5858 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340e5d58 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x2df340e5a88 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x2df340e5b08 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x2df340e5b80 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340df0b0 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x2df340df150 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2df340df1b8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2df340df230 <col:85> Implicit printf 2 3
|-FunctionDecl 0x2df340df298 prev 0x2df340df0b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x2df340e5f00 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x2df340e5f80 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x2df340df478 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x2df340df348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df340df8a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2df340df940 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2df340df9a8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2df340dfa10 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2df340dfa90 <col:94> Implicit printf 2 0
|-FunctionDecl 0x2df340dfaf8 prev 0x2df340df8a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2df340df588 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x2df340df608 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x2df340df680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x2df340dfce0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x2df340dfbb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df340eb0d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2df340eb170 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2df340eb1d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2df340eb240 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2df340eb2c0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x2df340eb328 prev 0x2df340eb0d0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2df340dfd30 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x2df340dfdb0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x2df340dfe28 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2df340eb428 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x2df340eb5f0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2df340eb478 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x2df340eb4f0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340eb8e8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2df340eb6d0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x2df340eb748 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df340eb7c8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x2df340ebc80 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2df340eb9d0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x2df340eba48 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340ebac8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x2df340ebb40 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340ebee8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2df340ebd68 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x2df340ebde8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x2df340ec0e0 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2df340ebfc8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x2df340ec3d0 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2df340ec1b8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x2df340ec230 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df340ec2b0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x2df340ec6c8 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2df340ec4b0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2df340ec530 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x2df340ec5a8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340ec928 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2df340ec7b0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x2df340ec828 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340eccb8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2df340eca08 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x2df340eca80 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340ecb00 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x2df340ecb78 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340ece88 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2df340ecda8 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x2df340e90b0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2df340ecf60 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x2df340ecfd8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340e9270 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2df340e9190 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x2df340e9400 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2df340e9648 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340e94d0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x2df340e9548 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df340e98a0 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340e9728 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2df340e97a0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df340e9af8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340e9980 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2df340e99f8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df340e9ea8 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df340e9bd8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x2df340e9c50 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2df340e9cc8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340ed210 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df340e9f90 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2df340ea008 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2df340ed0f0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340ed508 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df340ed2f8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2df340ed370 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2df340ed3e8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340ed800 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340ed5e8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2df340ed668 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x2df340ed6e0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df340edaf8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340ed8e0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2df340ed960 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2df340ed9d8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df340eddf0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340edbd8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2df340edc58 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2df340edcd0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df340e61e0 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df340eded0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2df340edf50 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x2df340edfc8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2df340ee040 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340e6578 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df340e62c8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2df340e6348 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x2df340e63c0 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2df340e6438 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340e6910 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df340e6660 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2df340e66e0 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x2df340e6758 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2df340e67d0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340e6da8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340e6ac0 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x2df340e6b40 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x2df340e6bb8 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2df340e6e60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df340ea3d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340e6fa8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x2df340ea0c0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340ea140 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x2df340ea1b8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df340ea770 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340ea4c0 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x2df340ea538 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340ea5b8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x2df340ea630 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df340eacc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df340ea960 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x2df340ea9e0 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x2df340eaa58 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2df340eaad0 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2df340ead80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df340ee338 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df340eaec8 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x2df340eaf40 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340eafc0 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x2df340eb038 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2df340ee100 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340ee778 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df340ee430 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2df340ee4a8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340ee528 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x2df340ee5a0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2df340ee618 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340ee9e8 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340ee870 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2df340ee8e8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df340eec40 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340eeac8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x2df340eeb40 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df340eef30 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df340eed20 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2df340eed98 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2df340eee10 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340e71c0 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df340ef018 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x2df340ef090 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2df340e70a0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340e7618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340e7368 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x2df340e73e0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340e7460 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x2df340e74d8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2df340e76d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df340e7ad0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340e7820 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x2df340e7898 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340e7918 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x2df340e7990 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df340f4160 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340e7bc0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2df340e7c38 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340e7cb0 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340e7d30 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x2df340e7da8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df340f46a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df340f4358 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x2df340f43d0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340f4450 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x2df340f44c8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2df340f4540 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2df340f4768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df340f4be8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df340f48b8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x2df340f4930 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340f49b0 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x2df340f4a28 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2df340f4aa0 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340f61e0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df340f4ce0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x2df340f4d58 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340f4dd0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340f4e50 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x2df340f4ec8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2df340f4f40 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340f65a0 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x2df340f62d8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2df340f6350 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x2df340f63d0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x2df340f6810 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2df340f66a0 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x2df340f6a28 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x2df340f6d08 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2df340f6af0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2df340f6b68 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x2df340f6f50 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x2df340f6de0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2df340ef110 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2df340f7020 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x2df340ef298 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x2df340ef4d0 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2df340ef360 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2df340ef3d8 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x2df340ef680 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x2df340ef5a8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2df340ef928 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x2df340ef750 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2df340ef7c8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x2df340efcd0 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x2df340efa00 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2df340efa80 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x2df340efaf8 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x2df340effd0 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2df340efdb0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2df340efe28 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2df340f22f8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x2df340f00a8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x2df340f2150 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2df340f2600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2df340f2490 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x2df340f26a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df340f2968 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x2df340f27e8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x2df340f2c70 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2df340f2a38 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x2df340f2ab0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x2df340f2ec0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2df340f2d48 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x2df340f2dc0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x2df340f1130 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2df340f2f98 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x2df340f12e0 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2df340f1200 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x2df340f1490 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2df340f13b0 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x2df340f1828 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2df340f1560 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2df340f15d8 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df340f1650 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340f1b18 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2df340f1908 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x2df340f1980 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df340f19f8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340f1e08 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2df340f1bf8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2df340f1c70 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df340f1ce8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340f0120 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2df340f1ee8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2df340f1f60 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df340f1fd8 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340f0420 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2df340f0200 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df340f0278 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340f0670 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2df340f04f8 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df340f0570 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340f08c0 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2df340f0748 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df340f07c0 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340f0b10 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2df340f0998 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df340f0a10 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340f0ec8 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2df340f0be8 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2df340f0c60 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df340f0cd8 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x2df340f83b0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2df340f0fa8 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2df340f1020 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340f1098 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df340f81a0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340f8768 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2df340f8498 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2df340f8510 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df340f8588 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340f8a58 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2df340f8848 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x2df340f88c0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df340f8938 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340f8d48 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2df340f8b38 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2df340f8bb0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df340f8c28 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x2df340f90d0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2df340f8e28 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2df340f8ea0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340f8f18 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df340f8f90 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340f5520 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2df340f5198 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2df340f5210 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340f5288 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df340f5300 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x2df340f5a28 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2df340f5608 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2df340f5680 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340f56f8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340f5770 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df340f57e8 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340f5de8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2df340f5bd8 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2df340f5c50 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340f5cc8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2df340f5ea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df340f3380 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2df340f60a0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2df340f3150 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340f31c8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2df340f3240 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x2df340f3440 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df340f36f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2df340f3580 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x2df340f35f8 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x2df340f38b0 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2df340f37d0 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x2df340f3b90 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2df340f3980 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2df340f39f8 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df340f3a70 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340f3de8 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2df340f3c70 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df340f3ce8 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340fd010 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2df340f3ec0 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2df340f3f38 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df340f3fb0 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x2df340fd398 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2df340fd0f0 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2df340fd168 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340fd1e0 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df340fd258 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340fd560 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2df340fd480 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x2df340fd7a8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2df340fd630 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df340fd6a8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340fdab0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340fd880 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df340fd8f8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df340fdd00 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340fdb88 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df340fdc00 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df340fdf50 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340fddd8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df340fde50 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df34101348 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df34101078 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2df341010f0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2df34101168 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df34101638 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df34101428 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2df341014a0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2df34101518 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df34101928 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df34101718 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2df34101790 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2df34101808 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df34101ce8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2df34101a08 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2df34101a80 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df34101af8 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df340fe020 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2df34101dc8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2df34101e40 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df34101eb8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df340fe310 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340fe100 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2df340fe178 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df340fe1f0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df340fe760 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df340fe3f0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2df340fe468 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2df340fe4e0 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2df340fe558 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340feaf0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df340fe848 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x2df340fe8c0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2df340fe938 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2df340fe9b0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340fee80 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df340febd8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x2df340fec50 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2df340fecc8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2df340fed40 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df34102370 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340fef68 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2df34102060 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df341020d8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df34102150 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df34102700 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2df34102458 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2df341024d0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df34102548 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df341025c0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df34102a90 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2df341027e8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2df34102860 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df341028d8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df34102950 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df34102f98 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df34102b78 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2df34102bf0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df34102c68 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2df34102ce0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2df34102d58 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340fb358 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df340fb018 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2df340fb090 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340fb108 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2df340fb180 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2df340fb1f8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340fb788 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df340fb448 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2df340fb4c0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340fb538 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2df340fb5b0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2df340fb628 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340fb9f0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340fb878 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df340fb8f0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df340fbc40 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340fbac8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df340fbb40 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df340fbf28 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df340fbd18 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2df340fbd90 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2df340fbe08 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df340ff3c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340ff120 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2df340ff198 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340ff210 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2df340ff288 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2df340ff488 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df340ff9f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2df340ff5d0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2df340ff648 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340ff6c0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340ff738 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df340ff7b0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df340fff30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df340ffbf0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2df340ffc68 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df340ffce0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2df340ffd58 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2df340ffdd0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2df34103070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df34103680 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df341031b8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2df34103230 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df341032a8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df34103320 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2df34103398 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2df34103410 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df34103b80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2df34103948 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2df341039c0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x2df34103c30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2df34103d48 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2df341052f8 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2df34104000 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2df341050a0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2df34105118 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x2df341053b0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2df341054c8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2df34105a68 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2df34105788 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2df34105800 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2df34105878 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x2df34105b20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2df34105c40 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2df34100250 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df34105f00 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2df34105f78 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2df34105ff0 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2df34100040 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x2df34100310 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2df34100430 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2df34100738 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x2df34100558 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x2df341005d0 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df34100648 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x2df3410b390 <line:37:1, line:44:1>
|   |-DeclStmt 0x2df34100880 <line:38:5, col:21>
|   | `-VarDecl 0x2df34100818 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x2df34100918 <line:39:5, col:13>
|   | `-VarDecl 0x2df341008b0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x2df34100c70 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x2df34100c58 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2df34100b70 <col:34> '<builtin fn type>' Function 0x2df34100a08 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x2df34100ba8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x2df34100818 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x2df34100be0 <col:29> 'const wchar_t *' lvalue ParmVar 0x2df34100648 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x2df34100f30 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x2df34100ca0 <col:5> 'int' lvalue Var 0x2df341008b0 '_Ret' 'int'
|   | `-CallExpr 0x2df34100e70 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x2df34100e58 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2df34100cd8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2df34102f98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x2df34100eb8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2df34100cf8 <col:27> 'wchar_t *' lvalue ParmVar 0x2df34100558 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x2df34100ed0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2df34100d18 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2df341005d0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x2df34100ee8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2df34100d38 <col:44> 'const wchar_t *' lvalue ParmVar 0x2df34100648 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x2df34100f00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x2df34100dc0 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x2df34100d98 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x2df34100d58 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x2df34100f18 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2df34100de0 <col:59> 'va_list':'char *' lvalue Var 0x2df34100818 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x2df3410b320 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x2df3410b308 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2df3410b258 <col:34> '<builtin fn type>' Function 0x2df3410b0f0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x2df3410b290 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x2df34100818 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x2df3410b380 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x2df3410b368 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2df3410b348 <col:12> 'int' lvalue Var 0x2df341008b0 '_Ret' 'int'
|-FunctionDecl 0x2df34100a08 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x2df34100aa8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x2df34100b18 <col:34> Implicit
|-FunctionDecl 0x2df3410b0f0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x2df3410b190 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x2df3410b200 <col:34> Implicit
|-FunctionDecl 0x2df3410b688 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x2df3410b3e0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x2df3410b458 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df3410b4d0 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2df3410b548 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x2df3410b970 <line:50:1, line:52:1>
|   `-ReturnStmt 0x2df3410b960 <line:51:5, col:62>
|     `-CallExpr 0x2df3410b8a0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x2df3410b888 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2df3410b760 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2df34102f98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x2df3410b8e8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2df3410b780 <col:27> 'wchar_t *' lvalue ParmVar 0x2df3410b3e0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x2df3410b900 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x2df3410b7a0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2df3410b458 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x2df3410b918 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2df3410b7c0 <col:44> 'const wchar_t *' lvalue ParmVar 0x2df3410b4d0 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x2df3410b930 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x2df3410b848 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x2df3410b820 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x2df3410b7e0 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x2df3410b948 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x2df3410b868 <col:59> 'va_list':'char *' lvalue ParmVar 0x2df3410b548 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x2df3410bc10 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x2df3410b998 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x2df3410ba10 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df3410ba88 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2df3410bb00 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x2df34104128 <line:61:1, line:68:1>
|   |-DeclStmt 0x2df3410bd60 <line:62:5, col:21>
|   | `-VarDecl 0x2df3410bcf8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x2df3410bdf8 <line:63:5, col:13>
|   | `-VarDecl 0x2df3410bd90 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x2df3410bea0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x2df3410be88 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2df3410be10 <col:34> '<builtin fn type>' Function 0x2df34100a08 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x2df3410be30 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x2df3410bcf8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x2df3410be68 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2df3410bb00 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x2df3410c0a0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x2df3410bed0 <col:5> 'int' lvalue Var 0x2df3410bd90 '_Ret' 'int'
|   | `-CallExpr 0x2df3410bfe0 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x2df3410bfc8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2df3410bf08 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2df34102f98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x2df3410c028 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2df3410bf28 <col:27> 'wchar_t *' lvalue ParmVar 0x2df3410b998 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x2df3410c040 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2df3410bf48 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2df3410ba10 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x2df3410c058 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2df3410bf68 <col:44> 'const wchar_t *' lvalue ParmVar 0x2df3410ba88 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x2df3410c070 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2df3410bf88 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2df3410bb00 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x2df3410c088 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2df3410bfa8 <col:64> 'va_list':'char *' lvalue Var 0x2df3410bcf8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x2df341040b8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x2df341040a0 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2df3410c0c0 <col:34> '<builtin fn type>' Function 0x2df3410b0f0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x2df34104080 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x2df3410bcf8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x2df34104118 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x2df34104100 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2df341040e0 <col:12> 'int' lvalue Var 0x2df3410bd90 '_Ret' 'int'
|-FunctionDecl 0x2df341044b8 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x2df34104178 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x2df341041f0 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df34104268 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2df341042e0 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2df34104358 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x2df34104740 <line:74:1, line:76:1>
|   `-ReturnStmt 0x2df34104730 <line:75:5, col:67>
|     `-CallExpr 0x2df34104670 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x2df34104658 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2df34104598 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2df34102f98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x2df341046b8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2df341045b8 <col:27> 'wchar_t *' lvalue ParmVar 0x2df34104178 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x2df341046d0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x2df341045d8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2df341041f0 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x2df341046e8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2df341045f8 <col:44> 'const wchar_t *' lvalue ParmVar 0x2df34104268 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x2df34104700 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x2df34104618 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2df341042e0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x2df34104718 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x2df34104638 <col:64> 'va_list':'char *' lvalue ParmVar 0x2df34104358 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x2df34104988 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2df34104768 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x2df341047e0 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x2df34104bd8 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2df34104a60 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df34104ad8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df34104ec0 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2df34104cb0 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2df34104d28 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2df34104da0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2df34108238 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2df341080c0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x2df34108138 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2df341082e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df341086f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2df341084e8 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x2df34108560 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2df341085d8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2df341087b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df34108a68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2df341088f0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x2df34108968 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x2df34108d50 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2df34108b40 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2df34108bb8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df34108c30 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df34109140 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2df34108ef0 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2df34108f68 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2df341091f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df341096c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2df341093f0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2df34109468 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2df341094e0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2df34109780 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df34109a38 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2df341098c0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2df34109938 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x2df34109d20 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2df34109b10 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2df34109b88 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df34109c00 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df3410c1e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2df34109ec0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2df34109f38 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df34109fb0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2df3410c2a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df3410c820 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2df3410c4a0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2df3410c518 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df3410c590 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2df3410c608 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2df3410c8e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df3410cc30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2df3410ca20 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2df3410ca98 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df3410cb10 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x2df3410cfb8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2df3410cd10 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2df3410cd88 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df3410ce00 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df3410ce78 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df3410d2c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x2df3410d1e0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2df3410d368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df3410d6e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2df3410d568 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2df3410d5e0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2df3410d790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df3410d9b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2df3410d8d0 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x2df3410dbf8 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2df3410da80 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2df3410daf8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df3410def8 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x2df3410dcd8 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x2df3410dd50 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x2df34106248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2df3410e090 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2df341060a0 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x2df341062f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df34106700 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2df34106440 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x2df341064b8 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x2df34106530 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x2df34106b60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2df341068a0 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2df34106918 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x2df34106990 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x2df34106c18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df341070f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2df34106d60 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x2df34106dd8 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2df34106e50 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x2df34106ec8 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x2df34107350 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x2df341071e0 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x2df34107590 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2df34107420 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x2df34107498 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x2df34107748 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x2df34107668 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x2df34107a38 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2df34107818 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x2df34107890 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2df34107ca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2df34107bd0 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x2df34107d50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df34107f68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2df34107e90 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x2df34111248 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2df34108038 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2df34111150 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2df34111490 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x2df34111320 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2df34111398 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2df34111640 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2df34111568 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x2df341117e8 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2df34111710 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x2df34111998 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2df341118b8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x2df34111b48 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2df34111a68 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x2df34111ec0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2df34111c20 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x2df34111c98 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df34111d10 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df34111d88 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x2df3410f300 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2df34111fb0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x2df34112028 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df341120a0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df3410f130 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df3410f1a8 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x2df3410f610 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x2df3410f3f0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2df3410f470 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x2df3410f4f0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x2df3410f7d0 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x2df3410f6f0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x2df3410fac0 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x2df3410f8a0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x2df3410f920 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x2df3410f9a0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x2df3410fc80 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x2df3410fba0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x2df3410fff8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2df3410fd58 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x2df3410fdd0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df3410fe48 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df3410fec0 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x2df34117328 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2df341171b0 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x2df34117228 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x2df34117660 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x2df341174e0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x2df34117560 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x2df34117710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x2df341179c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2df34117a68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x2df34117da8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x2df34117c30 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x2df34117cb0 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x2df34117e58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x2df341161a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2df34116240 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x2df341164e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x2df34116400 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x2df34116588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x2df34116808 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2df341168a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x2df34116b50 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x2df34116a70 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x2df34116bf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x2df34116ed8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x2df34116df8 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x2df34116f80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x2df341122d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2df34112160 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x2df341121d8 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x2df34112388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x2df34112648 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2df341126e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x2df34112b90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x2df34112810 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x2df34112890 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x2df34112910 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x2df34112988 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2df34112f58 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x2df34112ff8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2df34113060 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x2df341130c8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2df34114180 prev 0x2df34112f58 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x2df34112c80 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x2df34112d00 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x2df34112d78 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2df34114538 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x2df34114268 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x2df341142e8 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x2df34114360 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2df341149a0 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x2df34114620 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x2df341146a0 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x2df34114718 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df34114790 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df34114ca8 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2df34114d48 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2df34114db0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2df34114e18 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2df34114e98 prev 0x2df34114ca8 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x2df34114a90 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x2df34114b10 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x2df34114b88 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2df341182a8 <line:55:17> col:17 implicit memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2df34118348 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2df341183b0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2df34118418 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2df34118498 prev 0x2df341182a8 <col:1, col:127> col:17 memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x2df34114f80 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x2df34115000 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x2df34115078 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2df341188f8 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x2df34118580 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x2df341185f8 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2df34118678 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x2df341186f0 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2df34118cb8 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x2df34118d58 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2df34118dc0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x2df34118e28 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2df34118ea8 prev 0x2df34118cb8 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x2df341189e8 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x2df34118a68 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x2df34118ae0 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2df34119310 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x2df341193b0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2df34119418 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2df34119480 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x2df341194e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2df34119570 prev 0x2df34119310 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x2df34119030 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x2df341190b0 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x2df34119130 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x2df341191d0 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2df34119630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x2df34119a10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x2df341197f8 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x2df34119878 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x2df341198f0 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2df34119ac8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x2df34119ec0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x2df34119bf0 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x2df34119c68 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df34119ce8 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x2df34115230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x2df3411a068 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x2df3411a0e8 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x2df341152e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df341156f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x2df34115428 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x2df341154a0 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2df34115520 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x2df34115a80 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x2df34115b20 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x2df34115b88 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2df34115c00 prev 0x2df34115a80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x2df34115898 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x2df34115918 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x2df34115cb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df34116008 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x2df34115df8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x2df34115e70 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2df34115ef0 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x2df34123448 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x2df341234e8 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x2df34123550 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2df341235c8 prev 0x2df34123448 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x2df341232c8 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x2df34123348 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x2df34123678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df34123940 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x2df341239e0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2df34123a48 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2df34123ac0 prev 0x2df34123940 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x2df341237c0 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x2df34123840 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x2df34123d10 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x2df34123db0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2df34123e20 prev 0x2df34123d10 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x2df34123ba0 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x2df34124118 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x2df34123ef8 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x2df34123f70 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2df34122368 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x2df341221f8 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x2df34122270 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x2df34122698 <line:131:1, line:133:1>
|   `-ReturnStmt 0x2df34122688 <line:132:5, col:51>
|     `-ConditionalOperator 0x2df34122658 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x2df341224c8 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x2df341224a8 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x2df34122478 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x2df34122430 <col:13> 'const char *' lvalue ParmVar 0x2df341221f8 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x2df34122490 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x2df34122450 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x2df34122640 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x2df341224e8 <col:24> 'int' 0
|       `-CallExpr 0x2df341225e0 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x2df341225c8 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x2df34122510 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x2df34124118 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x2df34122610 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x2df34122530 <col:36> 'const char *' lvalue ParmVar 0x2df341221f8 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x2df34122628 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x2df34122550 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x2df34122270 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x2df34122970 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x2df341226c8 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x2df34122740 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2df341227c0 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x2df34122838 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2df34122c78 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2df34122d18 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2df34122d80 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2df34122de8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2df34122e68 prev 0x2df34122c78 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x2df34122a60 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x2df34122ae0 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x2df34122b58 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2df34123098 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x2df34122f50 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x2df34124380 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x2df34124420 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2df34124488 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2df34124500 prev 0x2df34124380 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x2df34123170 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x2df34124218 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x2df34124760 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2df341245e0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x2df34124660 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x2df341249c0 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2df34124840 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x2df341248c0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x2df34124d78 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x2df34124aa0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x2df34124b20 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x2df34124b98 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df34124fe0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2df34124e60 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x2df34124ee0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x2df341202e0 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x2df341250c0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x2df34125140 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x2df341201c0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df34120548 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2df341203c8 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x2df34120448 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x2df34120840 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x2df34120628 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x2df341206a8 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x2df34120720 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df34120bf8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2df34120928 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2df341209a8 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x2df34120a20 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2df34121060 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2df34120ce0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2df34120d60 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x2df34120dd8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df34120e50 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df3411e350 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2df34121150 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2df3411e1b8 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x2df3411e230 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2df3411e6e8 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2df3411e438 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x2df3411e4b8 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x2df3411e530 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df3411e5a8 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df3411e9f8 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x2df3411ea98 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2df3411eb00 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2df3411eb78 prev 0x2df3411e9f8 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x2df3411e7d8 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x2df3411e858 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x2df3411edf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x2df3411ed18 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x2df3411eea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df3411f290 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x2df3411efe8 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x2df3411f060 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df3411f0e0 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x2df3411f568 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x2df3411f608 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2df3411f678 prev 0x2df3411f568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x2df3411f438 <col:90> col:93 'int'
| `-DeprecatedAttr 0x2df3411f720 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df3411fa78 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x2df3411f868 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x2df3411f8e0 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df3411f960 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x2df3411fd38 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x2df3411fb60 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x2df3411fbd8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2df3411ffb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2df3411fed8 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x2df34120060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df3411d450 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2df3411d190 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x2df3411d208 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df3411d280 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df3411d820 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x2df3411d5f8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x2df3411d670 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2df3411d8d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df3411dd88 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x2df3411da18 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x2df3411da90 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2df3411db10 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x2df3411db88 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2df3412c2f8 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2df3412c398 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2df3412c400 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2df3412c468 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2df3412c4e8 prev 0x2df3412c2f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2df3411df38 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x2df3411dfb8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x2df3411e030 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2df3412c5a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df3412c900 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2df3412c9a0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2df3412ca08 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2df3412ca70 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2df3412caf0 prev 0x2df3412c900 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2df3412c6e8 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x2df3412c768 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x2df3412c7e0 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2df3412cdf0 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2df3412cbd8 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x2df3412cc58 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x2df3412ccd0 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2df3412d188 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2df3412ced8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2df3412cf58 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x2df3412cfd0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df3412d048 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df341264c8 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x2df34126220 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x2df34126298 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2df34126318 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x2df34126390 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2df34126890 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2df34126930 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2df34126998 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2df34126a00 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2df34126a80 prev 0x2df34126890 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2df34126678 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x2df341266f8 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x2df34126770 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2df34126b38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df34126ff8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x2df34126c80 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x2df34126cf8 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df34126d78 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x2df34126df0 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2df34127498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x2df341271a8 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x2df34127248 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x2df341272c0 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2df34127550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df34127818 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x2df341278b8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2df34127920 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2df34127998 prev 0x2df34127818 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x2df34127698 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x2df34127718 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x2df34127bf8 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x2df34127c98 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2df34127d00 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2df34127d78 prev 0x2df34127bf8 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x2df34127a78 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x2df34127af8 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x2df34127f38 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x2df34127e58 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x2df34128188 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x2df3412a260 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2df3412a2c8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2df3412a340 prev 0x2df34128188 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x2df34128010 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x2df34128090 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x2df3412a5a0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x2df3412a640 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2df3412a6a8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2df3412a720 prev 0x2df3412a5a0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x2df3412a420 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x2df3412a4a0 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x2df3412aa40 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x2df3412aae0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x2df3412ab48 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2df3412abc0 prev 0x2df3412aa40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x2df3412a8c0 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x2df3412a940 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x2df3412ac70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df3412b058 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x2df3412adb8 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x2df3412ae38 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x2df3412aeb8 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x2df3412e300 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x2df3412b140 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x2df3412b1b8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2df3412e580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2df3412e4a0 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x2df3412e628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df3412e978 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2df3412e770 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x2df3412e7e8 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df3412e860 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df3412ec98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x2df3412eb20 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x2df3412eb98 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2df3412ed48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df3412f160 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2df3412f200 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2df3412f2b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2df3412f318 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2df3412f398 prev 0x2df3412f160 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2df3412ee90 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x2df3412ef10 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x2df3412ef88 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2df3412f7f8 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2df3412f480 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x2df3412f500 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x2df3412f578 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df3412f5f0 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df3412fa68 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x2df3412fb08 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2df3412fb78 prev 0x2df3412fa68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x2df3412f988 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x2df3412fc20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x2df3412ff68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2df3412fde8 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x2df3412fe68 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x2df34130018 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x2df34129350 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2df341301e0 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x2df34129250 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x2df34129400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x2df341296a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2df341295c8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x2df34129750 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x2df34129b30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2df34129918 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x2df34129998 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x2df34129a10 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2df34129be8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x2df34129fc8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x2df34129db0 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x2df34129e30 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x2df34129ea8 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2df3412a080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x2df3412b350 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2df3412b270 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x2df3412b3f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x2df3412b740 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x2df3412b5c0 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x2df3412b640 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x2df3412b7f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x2df3412ba98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2df3412b9b8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x2df3412bb40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x2df3412bdd0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x2df3412bc60 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x2df3412c160 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x2df3412bea0 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2df3412bf18 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2df3412bf90 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x2df3412d578 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2df3412d360 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2df3412d3d8 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x2df3412d628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df3412d988 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x2df3412da28 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2df3412da90 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x2df3412db08 prev 0x2df3412d988 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x2df3412d768 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2df3412d7e0 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2df3412de00 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x2df3412dea0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2df3412df08 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x2df3412df80 prev 0x2df3412de00 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x2df3412dbe0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2df3412dc58 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x2df34128240 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x2df3412e058 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2df3412e0d0 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2df3412e148 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x2df34128550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2df341283e0 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2df34128458 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x2df34128600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df34128958 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2df34128740 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2df341287b8 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x2df34128ba0 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x2df34128c40 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x2df34128cb0 prev 0x2df34128ba0 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x2df34128a30 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x2df34128f98 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x2df34128d80 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2df34128df8 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2df34137330 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x2df34129070 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x2df341290e8 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x2df341376c8 <line:306:1, line:308:1>
|   `-ReturnStmt 0x2df341376b8 <line:307:5, col:56>
|     `-ConditionalOperator 0x2df34137688 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x2df341374f0 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x2df341374d0 <col:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x2df341374a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x2df341373f8 <col:13> 'const wchar_t *' lvalue ParmVar 0x2df34129070 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x2df341374b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x2df34137480 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x2df34137458 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x2df34137418 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x2df34137670 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x2df34137510 <col:29> 'int' 0
|       `-CallExpr 0x2df34137610 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x2df341375f8 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x2df34137538 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x2df34128f98 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x2df34137640 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x2df34137558 <col:41> 'const wchar_t *' lvalue ParmVar 0x2df34129070 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x2df34137658 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x2df34137578 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x2df341290e8 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x2df34137a58 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x2df341376f0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2df34137768 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2df341377e0 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2df34137858 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2df34137ec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2df34137c00 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2df34137c78 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x2df34137cf0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2df34137f78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df34130338 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x2df341303d8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x2df34130440 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2df341304a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2df34130528 prev 0x2df34130338 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x2df341380b8 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2df34138130 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2df341381a8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2df341308a8 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x2df34130608 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2df34130680 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2df341306f8 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2df34130770 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2df34130c58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2df34130a50 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2df34130ac8 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x2df34130b40 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2df34130d10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df34130fc0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2df34130e50 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2df34130ec8 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x2df34131208 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x2df34131098 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2df34131110 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2df34132478 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2df34132308 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2df34132380 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x2df341326c0 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2df34132550 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2df341325c8 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x2df341329c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2df34132858 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x2df341328d0 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x2df34132a78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df34132ee0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x2df34132bb8 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x2df34132c30 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x2df34132d10 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x2df34133200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x2df34133088 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x2df34134300 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df34134710 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x2df34134440 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x2df341344b8 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df34134538 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x2df34134988 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x2df341348b0 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x2df34134a30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df34134df0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x2df34134b70 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x2df34134be8 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df34134c60 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x2df34135048 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2df34134ed0 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2df34134f48 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x2df341333d8 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2df34135120 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2df34135198 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2df34135210 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df341336c8 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2df341334b8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2df34133530 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2df341335a8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2df34133b20 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2df341337a8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2df34133820 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2df34133898 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df34133910 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df34133f78 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x2df34133c08 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2df34133c80 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2df34133cf8 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2df34133d70 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2df34135430 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x2df34134120 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x2df34134198 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x2df34134210 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2df341354e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df34135700 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x2df34135628 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x2df34135a90 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x2df341357d0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2df34135848 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df341358c0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x2df34135e48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x2df34135c30 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x2df34135ca8 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x2df34135ef8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df341361a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2df34136038 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x2df341360b0 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2df341384e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2df34138410 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x2df34138590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df34138990 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2df341386d0 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x2df34138748 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df341387c0 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df34138d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2df34138b30 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x2df34138ba8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2df34138df8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df341390a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2df34138f38 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x2df34138fb0 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2df341312d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2df34139240 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x2df34131378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df341316c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2df341314b8 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x2df34131530 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df341315a8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df341319d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2df34131860 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x2df341318d8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2df34131a80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2df34131e80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2df34131bc0 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2df34131c38 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2df34131cb0 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2df3413a360 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2df34131f60 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2df34131fd8 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2df34132050 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df341320c8 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df3413a5c0 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2df3413a448 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2df3413a4c0 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x2df3413a8a8 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2df3413a698 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2df3413a710 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2df3413a788 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df3413ab00 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2df3413a988 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2df3413aa00 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x2df3413ade8 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2df3413abd8 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2df3413ac50 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2df3413acc8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df3413b0d8 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2df3413aec8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2df3413af40 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2df3413afb8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2df3413c4c0 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2df3413b1b8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2df3413b230 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2df3413b2a8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df3413c380 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df3413c7b8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2df3413c5a8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2df3413c620 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2df3413c698 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2df3413cb40 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2df3413c898 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2df3413c910 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2df3413c988 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2df3413ca00 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2df3413cda0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x2df3413ccc8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x2df3413ce48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x2df3413d180 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2df3413d008 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2df3413d080 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x2df3413d230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x2df34139610 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2df34139400 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2df34139478 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2df341394f0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2df341396c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x2df34139a90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x2df34139888 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x2df34139900 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x2df34139978 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2df34139b48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x2df34139de0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2df34139d08 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x2df34139e88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x2df3413a1b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x2df3413a048 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x2df3413a0c0 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x2df3413a268 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x2df34140590 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2df341404b8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x2df34140638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x2df341408d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2df341407f8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x2df34140978 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x2df34140cb0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2df34140b38 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2df34140bb0 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x2df34140d60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-VarDecl 0x2df34140ef0 <.//openssl//file_jk/before\crypto\asn1/charmap.h:22:1, line:34:1> line:22:29 used char_type 'const unsigned short [128]' static cinit
| `-InitListExpr 0x2df3413f7d8 <col:43, line:34:1> 'const unsigned short [128]'
|   |-ImplicitCastExpr 0x2df3413f818 <line:23:5> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df34140f58 <col:5> 'int' 1026
|   |-ImplicitCastExpr 0x2df3413f838 <col:14> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df34140f80 <col:14> 'int' 2
|   |-ImplicitCastExpr 0x2df3413f860 <col:20> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df34140fa8 <col:20> 'int' 2
|   |-ImplicitCastExpr 0x2df3413f898 <col:26> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df34140fd0 <col:26> 'int' 2
|   |-ImplicitCastExpr 0x2df3413f8b0 <col:32> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df34140ff8 <col:32> 'int' 2
|   |-ImplicitCastExpr 0x2df3413f908 <col:38> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df34141020 <col:38> 'int' 2
|   |-ImplicitCastExpr 0x2df3413f920 <col:44> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df34141048 <col:44> 'int' 2
|   |-ImplicitCastExpr 0x2df3413f938 <col:50> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df34141070 <col:50> 'int' 2
|   |-ImplicitCastExpr 0x2df3413f950 <col:56> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df34141098 <col:56> 'int' 2
|   |-ImplicitCastExpr 0x2df3413f9e8 <col:62> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df341410c0 <col:62> 'int' 2
|   |-ImplicitCastExpr 0x2df3413fa00 <col:68> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df341410e8 <col:68> 'int' 2
|   |-ImplicitCastExpr 0x2df3413fa18 <col:74> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df34141110 <col:74> 'int' 2
|   |-ImplicitCastExpr 0x2df3413fa30 <line:24:8> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df34141138 <col:8> 'int' 2
|   |-ImplicitCastExpr 0x2df3413fa48 <col:14> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df34141160 <col:14> 'int' 2
|   |-ImplicitCastExpr 0x2df3413fa60 <col:20> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df34141188 <col:20> 'int' 2
|   |-ImplicitCastExpr 0x2df3413fa78 <col:26> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df341411b0 <col:26> 'int' 2
|   |-ImplicitCastExpr 0x2df3413fa90 <col:32> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df341411d8 <col:32> 'int' 2
|   |-ImplicitCastExpr 0x2df3413fba8 <col:38> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df34141200 <col:38> 'int' 2
|   |-ImplicitCastExpr 0x2df3413fbc0 <col:44> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df34141228 <col:44> 'int' 2
|   |-ImplicitCastExpr 0x2df3413fbd8 <col:50> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df34141250 <col:50> 'int' 2
|   |-ImplicitCastExpr 0x2df3413fbf0 <col:56> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df34141278 <col:56> 'int' 2
|   |-ImplicitCastExpr 0x2df3413fc08 <col:62> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df341412a0 <col:62> 'int' 2
|   |-ImplicitCastExpr 0x2df3413fc20 <col:68> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df341412c8 <col:68> 'int' 2
|   |-ImplicitCastExpr 0x2df3413fc38 <col:74> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df341412f0 <col:74> 'int' 2
|   |-ImplicitCastExpr 0x2df3413fc50 <line:25:8> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df34141318 <col:8> 'int' 2
|   |-ImplicitCastExpr 0x2df3413fc68 <col:14> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df34141340 <col:14> 'int' 2
|   |-ImplicitCastExpr 0x2df3413fc80 <col:20> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df34141368 <col:20> 'int' 2
|   |-ImplicitCastExpr 0x2df3413fc98 <col:26> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df34141390 <col:26> 'int' 2
|   |-ImplicitCastExpr 0x2df3413fcb0 <col:32> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d390 <col:32> 'int' 2
|   |-ImplicitCastExpr 0x2df3413fcc8 <col:38> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d3b8 <col:38> 'int' 2
|   |-ImplicitCastExpr 0x2df3413fce0 <col:44> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d3e0 <col:44> 'int' 2
|   |-ImplicitCastExpr 0x2df3413fcf8 <col:50> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d408 <col:50> 'int' 2
|   |-ImplicitCastExpr 0x2df3413fd10 <col:54> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d430 <col:54> 'int' 120
|   |-ImplicitCastExpr 0x2df3413ff28 <col:62> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d458 <col:62> 'int' 0
|   |-ImplicitCastExpr 0x2df3413ff40 <col:68> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d480 <col:68> 'int' 1
|   |-ImplicitCastExpr 0x2df3413ff58 <col:73> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d4a8 <col:73> 'int' 40
|   |-ImplicitCastExpr 0x2df3413ff70 <line:26:8> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d4d0 <col:8> 'int' 0
|   |-ImplicitCastExpr 0x2df3413ff88 <col:14> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d4f8 <col:14> 'int' 0
|   |-ImplicitCastExpr 0x2df3413ffa0 <col:20> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d520 <col:20> 'int' 0
|   |-ImplicitCastExpr 0x2df3413ffb8 <col:25> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d548 <col:25> 'int' 16
|   |-ImplicitCastExpr 0x2df3413ffd0 <col:29> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d570 <col:29> 'int' 1040
|   |-ImplicitCastExpr 0x2df3413ffe8 <col:35> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d598 <col:35> 'int' 1040
|   |-ImplicitCastExpr 0x2df34140000 <col:41> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d5c0 <col:41> 'int' 33792
|   |-ImplicitCastExpr 0x2df34140018 <col:50> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d5e8 <col:50> 'int' 25
|   |-ImplicitCastExpr 0x2df34140030 <col:56> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d610 <col:56> 'int' 25
|   |-ImplicitCastExpr 0x2df34140048 <col:60> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d638 <col:60> 'int' 16400
|   |-ImplicitCastExpr 0x2df34140060 <col:67> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d660 <col:67> 'int' 8208
|   |-ImplicitCastExpr 0x2df34140078 <col:75> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d688 <col:75> 'int' 16
|   |-ImplicitCastExpr 0x2df34140090 <line:27:5> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d6b0 <col:5> 'int' 4112
|   |-ImplicitCastExpr 0x2df341400a8 <col:11> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d6d8 <col:11> 'int' 4112
|   |-ImplicitCastExpr 0x2df341400c0 <col:17> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d700 <col:17> 'int' 4112
|   |-ImplicitCastExpr 0x2df341400d8 <col:23> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d728 <col:23> 'int' 4112
|   |-ImplicitCastExpr 0x2df341400f0 <col:29> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d750 <col:29> 'int' 4112
|   |-ImplicitCastExpr 0x2df34140108 <col:35> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d778 <col:35> 'int' 4112
|   |-ImplicitCastExpr 0x2df34140120 <col:41> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d7a0 <col:41> 'int' 4112
|   |-ImplicitCastExpr 0x2df34140138 <col:47> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d7c8 <col:47> 'int' 4112
|   |-ImplicitCastExpr 0x2df34140150 <col:53> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d7f0 <col:53> 'int' 4112
|   |-ImplicitCastExpr 0x2df34140168 <col:59> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d818 <col:59> 'int' 4112
|   |-ImplicitCastExpr 0x2df34140180 <col:67> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d840 <col:67> 'int' 16
|   |-ImplicitCastExpr 0x2df34140198 <col:74> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d868 <col:74> 'int' 9
|   |-ImplicitCastExpr 0x2df341401b0 <line:28:8> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d890 <col:8> 'int' 9
|   |-ImplicitCastExpr 0x2df341401c8 <col:13> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d8b8 <col:13> 'int' 16
|   |-ImplicitCastExpr 0x2df341401e0 <col:20> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d8e0 <col:20> 'int' 9
|   |-ImplicitCastExpr 0x2df341401f8 <col:25> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d908 <col:25> 'int' 16
|   |-ImplicitCastExpr 0x2df34140210 <col:32> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d930 <col:32> 'int' 0
|   |-ImplicitCastExpr 0x2df341427e0 <col:35> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d958 <col:35> 'int' 4112
|   |-ImplicitCastExpr 0x2df341427f8 <col:41> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d980 <col:41> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142810 <col:47> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d9a8 <col:47> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142828 <col:53> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d9d0 <col:53> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142840 <col:59> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413d9f8 <col:59> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142858 <col:65> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413da20 <col:65> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142870 <col:71> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413da48 <col:71> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142888 <line:29:5> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413da70 <col:5> 'int' 4112
|   |-ImplicitCastExpr 0x2df341428a0 <col:11> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413da98 <col:11> 'int' 4112
|   |-ImplicitCastExpr 0x2df341428b8 <col:17> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413dac0 <col:17> 'int' 4112
|   |-ImplicitCastExpr 0x2df341428d0 <col:23> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413dae8 <col:23> 'int' 4112
|   |-ImplicitCastExpr 0x2df341428e8 <col:29> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413db10 <col:29> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142900 <col:35> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413db38 <col:35> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142918 <col:41> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413db60 <col:41> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142930 <col:47> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413db88 <col:47> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142948 <col:53> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413dbb0 <col:53> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142960 <col:59> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413dbd8 <col:59> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142978 <col:65> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413dc00 <col:65> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142990 <col:71> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413dc28 <col:71> 'int' 4112
|   |-ImplicitCastExpr 0x2df341429a8 <line:30:5> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413dc50 <col:5> 'int' 4112
|   |-ImplicitCastExpr 0x2df341429c0 <col:11> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413dc78 <col:11> 'int' 4112
|   |-ImplicitCastExpr 0x2df341429d8 <col:17> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413dca0 <col:17> 'int' 4112
|   |-ImplicitCastExpr 0x2df341429f0 <col:23> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413dcc8 <col:23> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142a08 <col:29> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413dcf0 <col:29> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142a20 <col:35> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413dd18 <col:35> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142a38 <col:41> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413dd40 <col:41> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142a50 <col:50> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413dd68 <col:50> 'int' 0
|   |-ImplicitCastExpr 0x2df34142a68 <col:53> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413dd90 <col:53> 'int' 1025
|   |-ImplicitCastExpr 0x2df34142a80 <col:62> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413ddb8 <col:62> 'int' 0
|   |-ImplicitCastExpr 0x2df34142a98 <col:68> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413dde0 <col:68> 'int' 0
|   |-ImplicitCastExpr 0x2df34142ab0 <col:74> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413de08 <col:74> 'int' 0
|   |-ImplicitCastExpr 0x2df34142ac8 <line:31:8> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413de30 <col:8> 'int' 0
|   |-ImplicitCastExpr 0x2df34142ae0 <col:11> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413de58 <col:11> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142af8 <col:17> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413de80 <col:17> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142b10 <col:23> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413dea8 <col:23> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142b28 <col:29> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413ded0 <col:29> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142b40 <col:35> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413def8 <col:35> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142b58 <col:41> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413df20 <col:41> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142b70 <col:47> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413df48 <col:47> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142b88 <col:53> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413df70 <col:53> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142ba0 <col:59> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413df98 <col:59> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142bb8 <col:65> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413dfc0 <col:65> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142bd0 <col:71> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413dfe8 <col:71> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142be8 <line:32:5> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413e010 <col:5> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142c00 <col:11> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413e038 <col:11> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142c18 <col:17> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413e060 <col:17> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142c30 <col:23> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413e088 <col:23> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142c48 <col:29> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413e0b0 <col:29> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142c60 <col:35> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413e0d8 <col:35> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142c78 <col:41> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413e100 <col:41> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142c90 <col:47> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413e128 <col:47> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142ca8 <col:53> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413e150 <col:53> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142cc0 <col:59> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413e178 <col:59> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142cd8 <col:65> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413e1a0 <col:65> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142cf0 <col:71> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413e1c8 <col:71> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142d08 <line:33:5> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413e1f0 <col:5> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142d20 <col:11> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413e218 <col:11> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142d38 <col:17> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413e240 <col:17> 'int' 4112
|   |-ImplicitCastExpr 0x2df34142d50 <col:26> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413e268 <col:26> 'int' 0
|   |-ImplicitCastExpr 0x2df34142d68 <col:32> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413e290 <col:32> 'int' 0
|   |-ImplicitCastExpr 0x2df34142d80 <col:38> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413e2b8 <col:38> 'int' 0
|   |-ImplicitCastExpr 0x2df34142d98 <col:44> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x2df3413e2e0 <col:44> 'int' 0
|   `-ImplicitCastExpr 0x2df34142db0 <col:50> 'unsigned short' <IntegralCast>
|     `-IntegerLiteral 0x2df3413e308 <col:50> 'int' 2
|-FunctionDecl 0x2df34143090 <.//openssl//file_jk/before\crypto\asn1\a_strex.c:38:1, line:45:1> line:38:12 used send_bio_chars 'int (void *, const void *, int)' static
| |-ParmVarDecl 0x2df34142e60 <col:27, col:33> col:33 used arg 'void *'
| |-ParmVarDecl 0x2df34142ee0 <col:38, col:50> col:50 used buf 'const void *'
| |-ParmVarDecl 0x2df34142f60 <col:55, col:59> col:59 used len 'int'
| `-CompoundStmt 0x2df3413b4d0 <line:39:1, line:45:1>
|   |-IfStmt 0x2df341431e8 <line:40:5, line:41:16>
|   | |-UnaryOperator 0x2df34143198 <line:40:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x2df34143180 <col:10> 'void *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2df34143160 <col:10> 'void *' lvalue ParmVar 0x2df34142e60 'arg' 'void *'
|   | `-ReturnStmt 0x2df341431d8 <line:41:9, col:16>
|   |   `-IntegerLiteral 0x2df341431b0 <col:16> 'int' 1
|   |-IfStmt 0x2df3413b480 <line:42:5, line:43:16>
|   | |-BinaryOperator 0x2df3413b428 <line:42:9, col:37> 'int' '!='
|   | | |-CallExpr 0x2df3413b370 <col:9, col:32> 'int'
|   | | | |-ImplicitCastExpr 0x2df341433c8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x2df34143318 <col:9> 'int ()' Function 0x2df34143250 'BIO_write' 'int ()'
|   | | | |-ImplicitCastExpr 0x2df3413b3a8 <col:19> 'void *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2df34143338 <col:19> 'void *' lvalue ParmVar 0x2df34142e60 'arg' 'void *'
|   | | | |-ImplicitCastExpr 0x2df3413b3c0 <col:24> 'const void *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2df34143358 <col:24> 'const void *' lvalue ParmVar 0x2df34142ee0 'buf' 'const void *'
|   | | | `-ImplicitCastExpr 0x2df3413b3d8 <col:29> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2df34143378 <col:29> 'int' lvalue ParmVar 0x2df34142f60 'len' 'int'
|   | | `-ImplicitCastExpr 0x2df3413b410 <col:37> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2df3413b3f0 <col:37> 'int' lvalue ParmVar 0x2df34142f60 'len' 'int'
|   | `-ReturnStmt 0x2df3413b470 <line:43:9, col:16>
|   |   `-IntegerLiteral 0x2df3413b448 <col:16> 'int' 0
|   `-ReturnStmt 0x2df3413b4c0 <line:44:5, col:12>
|     `-IntegerLiteral 0x2df3413b498 <col:12> 'int' 1
|-FunctionDecl 0x2df3413b700 <line:48:1, line:55:1> line:48:12 used send_fp_chars 'int (void *, const void *, int)' static
| |-ParmVarDecl 0x2df3413b510 <col:26, col:32> col:32 used arg 'void *'
| |-ParmVarDecl 0x2df3413b590 <col:37, col:49> col:49 used buf 'const void *'
| |-ParmVarDecl 0x2df3413b610 <col:54, col:58> col:58 used len 'int'
| `-CompoundStmt 0x2df3413bbd8 <line:49:1, line:55:1>
|   |-IfStmt 0x2df3413b858 <line:50:5, line:51:16>
|   | |-UnaryOperator 0x2df3413b808 <line:50:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x2df3413b7f0 <col:10> 'void *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2df3413b7d0 <col:10> 'void *' lvalue ParmVar 0x2df3413b510 'arg' 'void *'
|   | `-ReturnStmt 0x2df3413b848 <line:51:9, col:16>
|   |   `-IntegerLiteral 0x2df3413b820 <col:16> 'int' 1
|   |-IfStmt 0x2df3413bb88 <line:52:5, line:53:16>
|   | |-BinaryOperator 0x2df3413bb30 <line:52:9, col:51> 'int' '!='
|   | | |-CallExpr 0x2df3413b9d0 <col:9, col:32> 'unsigned long long'
|   | | | |-ImplicitCastExpr 0x2df3413b9b8 <col:9> 'unsigned long long (*)(const void *, unsigned long long, unsigned long long, FILE *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x2df3413b870 <col:9> 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' Function 0x2df3408f228 'fwrite' 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
|   | | | |-ImplicitCastExpr 0x2df3413ba10 <col:16> 'const void *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2df3413b890 <col:16> 'const void *' lvalue ParmVar 0x2df3413b590 'buf' 'const void *'
|   | | | |-ImplicitCastExpr 0x2df3413ba28 <col:21> 'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x2df3413b8b0 <col:21> 'int' 1
|   | | | |-ImplicitCastExpr 0x2df3413ba58 <col:24> 'unsigned long long' <IntegralCast>
|   | | | | `-ImplicitCastExpr 0x2df3413ba40 <col:24> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x2df3413b8d8 <col:24> 'int' lvalue ParmVar 0x2df3413b610 'len' 'int'
|   | | | `-ImplicitCastExpr 0x2df3413ba88 <col:29> 'FILE *' <BitCast>
|   | | |   `-ImplicitCastExpr 0x2df3413ba70 <col:29> 'void *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x2df3413b8f8 <col:29> 'void *' lvalue ParmVar 0x2df3413b510 'arg' 'void *'
|   | | `-ImplicitCastExpr 0x2df3413bb18 <col:37, col:51> 'unsigned long long' <IntegralCast>
|   | |   `-CStyleCastExpr 0x2df3413baf0 <col:37, col:51> 'unsigned int' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x2df3413bad8 <col:51> 'int' <LValueToRValue> part_of_explicit_cast
|   | |       `-DeclRefExpr 0x2df3413baa0 <col:51> 'int' lvalue ParmVar 0x2df3413b610 'len' 'int'
|   | `-ReturnStmt 0x2df3413bb78 <line:53:9, col:16>
|   |   `-IntegerLiteral 0x2df3413bb50 <col:16> 'int' 0
|   `-ReturnStmt 0x2df3413bbc8 <line:54:5, col:12>
|     `-IntegerLiteral 0x2df3413bba0 <col:12> 'int' 1
|-TypedefDecl 0x2df3413be08 <line:58:1, col:57> col:13 referenced char_io 'int (void *, const void *, int)'
| `-FunctionProtoType 0x2df34143010 'int (void *, const void *, int)' cdecl
|   |-BuiltinType 0x2df324c10f0 'int'
|   |-PointerType 0x2df324c1810 'void *'
|   | `-BuiltinType 0x2df324c1050 'void'
|   |-PointerType 0x2df3408ebd0 'const void *'
|   | `-QualType 0x2df324c1051 'const void' const
|   |   `-BuiltinType 0x2df324c1050 'void'
|   `-BuiltinType 0x2df324c10f0 'int'
|-FunctionDecl 0x2df3413c2c0 <line:66:1, line:127:1> line:66:12 used do_esc_char 'int (unsigned long, unsigned short, char *, char_io *, void *)' static
| |-ParmVarDecl 0x2df3413be78 <col:24, col:38> col:38 used c 'unsigned long'
| |-ParmVarDecl 0x2df3413bef8 <col:41, col:56> col:56 used flags 'unsigned short'
| |-ParmVarDecl 0x2df3413bf78 <col:63, col:69> col:69 used do_quotes 'char *'
| |-ParmVarDecl 0x2df3413c068 <line:67:24, col:33> col:33 used io_ch 'char_io *'
| |-ParmVarDecl 0x2df3413c0e8 <col:40, col:46> col:46 used arg 'void *'
| `-CompoundStmt 0x2df3414a0a8 <line:68:1, line:127:1>
|   |-DeclStmt 0x2df341464e0 <line:69:5, col:26>
|   | `-VarDecl 0x2df34146478 <col:5, col:20> col:20 used chflgs 'unsigned short'
|   |-DeclStmt 0x2df34146578 <line:70:5, col:24>
|   | `-VarDecl 0x2df34146510 <col:5, col:19> col:19 used chtmp 'unsigned char'
|   |-DeclStmt 0x2df34146740 <line:71:5, col:36>
|   | `-VarDecl 0x2df341466d8 <col:5, col:10> col:10 invalid tmphex 'char'
|   |-IfStmt 0x2df34146828 <line:73:5, line:74:17>
|   | |-BinaryOperator 0x2df341467b8 <line:73:9, col:13> 'int' '>'
|   | | |-ImplicitCastExpr 0x2df341467a0 <col:9> 'unsigned long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2df34146758 <col:9> 'unsigned long' lvalue ParmVar 0x2df3413be78 'c' 'unsigned long'
|   | | `-IntegerLiteral 0x2df34146778 <col:13> 'unsigned long' 4294967295
|   | `-ReturnStmt 0x2df34146818 <line:74:9, col:17>
|   |   `-UnaryOperator 0x2df34146800 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x2df341467d8 <col:17> 'int' 1
|   |-IfStmt 0x2df34146ba8 <line:75:5, line:80:5>
|   | |-BinaryOperator 0x2df341468b8 <line:75:9, col:13> 'int' '>'
|   | | |-ImplicitCastExpr 0x2df34146888 <col:9> 'unsigned long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2df34146840 <col:9> 'unsigned long' lvalue ParmVar 0x2df3413be78 'c' 'unsigned long'
|   | | `-ImplicitCastExpr 0x2df341468a0 <col:13> 'unsigned long' <IntegralCast>
|   | |   `-IntegerLiteral 0x2df34146860 <col:13> 'int' 65535
|   | `-CompoundStmt 0x2df34146b88 <col:21, line:80:5>
|   |   |-IfStmt 0x2df34146b38 <line:77:9, line:78:21>
|   |   | |-OpaqueValueExpr 0x2df34146b20 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x2df34146b10 <col:13, col:21>
|   |   |   `-UnaryOperator 0x2df34146af8 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x2df34146ad0 <col:21> 'int' 1
|   |   `-ReturnStmt 0x2df34146b78 <line:79:9, col:16>
|   |     `-IntegerLiteral 0x2df34146b50 <col:16> 'int' 10
|   |-IfStmt 0x2df34146df8 <line:81:5, line:86:5>
|   | |-BinaryOperator 0x2df34146c38 <line:81:9, col:13> 'int' '>'
|   | | |-ImplicitCastExpr 0x2df34146c08 <col:9> 'unsigned long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2df34146bc0 <col:9> 'unsigned long' lvalue ParmVar 0x2df3413be78 'c' 'unsigned long'
|   | | `-ImplicitCastExpr 0x2df34146c20 <col:13> 'unsigned long' <IntegralCast>
|   | |   `-IntegerLiteral 0x2df34146be0 <col:13> 'int' 255
|   | `-CompoundStmt 0x2df34146dd8 <col:19, line:86:5>
|   |   |-IfStmt 0x2df34146d88 <line:83:9, line:84:21>
|   |   | |-OpaqueValueExpr 0x2df34146d70 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x2df34146d60 <col:13, col:21>
|   |   |   `-UnaryOperator 0x2df34146d48 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x2df34146d20 <col:21> 'int' 1
|   |   `-ReturnStmt 0x2df34146dc8 <line:85:9, col:16>
|   |     `-IntegerLiteral 0x2df34146da0 <col:16> 'int' 6
|   |-BinaryOperator 0x2df34146ec0 <line:87:5, col:28> 'unsigned char' '='
|   | |-DeclRefExpr 0x2df34146e10 <col:5> 'unsigned char' lvalue Var 0x2df34146510 'chtmp' 'unsigned char'
|   | `-CStyleCastExpr 0x2df34146e98 <col:13, col:28> 'unsigned char' <IntegralCast>
|   |   `-ImplicitCastExpr 0x2df34146e80 <col:28> 'unsigned long' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x2df34146e48 <col:28> 'unsigned long' lvalue ParmVar 0x2df3413be78 'c' 'unsigned long'
|   |-IfStmt 0x2df34147160 <line:88:5, line:91:37> has_else
|   | |-BinaryOperator 0x2df34146f58 <line:88:9, col:17> 'int' '>'
|   | | |-ImplicitCastExpr 0x2df34146f40 <col:9> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x2df34146f28 <col:9> 'unsigned char' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2df34146ee0 <col:9> 'unsigned char' lvalue Var 0x2df34146510 'chtmp' 'unsigned char'
|   | | `-IntegerLiteral 0x2df34146f00 <col:17> 'int' 127
|   | |-NullStmt 0x2df34147158 <line:89:9>
|   | `-BinaryOperator 0x2df34147138 <line:91:9, col:37> 'unsigned short' '='
|   |   |-DeclRefExpr 0x2df34146fd0 <col:9> 'unsigned short' lvalue Var 0x2df34146478 'chflgs' 'unsigned short'
|   |   `-ImplicitCastExpr 0x2df34147120 <col:18, col:37> 'unsigned short' <IntegralCast>
|   |     `-BinaryOperator 0x2df34147100 <col:18, col:37> 'int' '&'
|   |       |-ImplicitCastExpr 0x2df341470b8 <col:18, col:33> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x2df341470a0 <col:18, col:33> 'unsigned short' <LValueToRValue>
|   |       |   `-ArraySubscriptExpr 0x2df34147060 <col:18, col:33> 'const unsigned short' lvalue
|   |       |     |-ImplicitCastExpr 0x2df34147030 <col:18> 'const unsigned short *' <ArrayToPointerDecay>
|   |       |     | `-DeclRefExpr 0x2df34146ff0 <col:18> 'const unsigned short [128]' lvalue Var 0x2df34140ef0 'char_type' 'const unsigned short [128]'
|   |       |     `-ImplicitCastExpr 0x2df34147048 <col:28> 'unsigned char' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x2df34147010 <col:28> 'unsigned char' lvalue Var 0x2df34146510 'chtmp' 'unsigned char'
|   |       `-ImplicitCastExpr 0x2df341470e8 <col:37> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x2df341470d0 <col:37> 'unsigned short' <LValueToRValue>
|   |           `-DeclRefExpr 0x2df34147080 <col:37> 'unsigned short' lvalue ParmVar 0x2df3413bef8 'flags' 'unsigned short'
|   |-IfStmt 0x2df34149958 <line:92:5, line:106:5>
|   | |-OpaqueValueExpr 0x2df34149940 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2df34149910 <line:92:35, line:106:5>
|   |   |-IfStmt 0x2df34149548 <line:94:9, line:100:9>
|   |   | |-OpaqueValueExpr 0x2df34149530 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x2df34149508 <line:94:46, line:100:9>
|   |   |   |-IfStmt 0x2df341472b0 <line:95:13, line:96:30>
|   |   |   | |-ImplicitCastExpr 0x2df341471e8 <line:95:17> 'char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x2df341471c8 <col:17> 'char *' lvalue ParmVar 0x2df3413bf78 'do_quotes' 'char *'
|   |   |   | `-BinaryOperator 0x2df34147290 <line:96:17, col:30> 'char' '='
|   |   |   |   |-UnaryOperator 0x2df34147238 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
|   |   |   |   | `-ImplicitCastExpr 0x2df34147220 <col:18> 'char *' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x2df34147200 <col:18> 'char *' lvalue ParmVar 0x2df3413bf78 'do_quotes' 'char *'
|   |   |   |   `-ImplicitCastExpr 0x2df34147278 <col:30> 'char' <IntegralCast>
|   |   |   |     `-IntegerLiteral 0x2df34147250 <col:30> 'int' 1
|   |   |   |-IfStmt 0x2df341494b8 <line:97:13, line:98:25>
|   |   |   | |-UnaryOperator 0x2df34149450 <line:97:17, col:38> 'int' prefix '!' cannot overflow
|   |   |   | | `-CallExpr 0x2df341473b0 <col:18, col:38> 'int'
|   |   |   | |   |-ImplicitCastExpr 0x2df34147398 <col:18> 'char_io *' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x2df341472c8 <col:18> 'char_io *' lvalue ParmVar 0x2df3413c068 'io_ch' 'char_io *'
|   |   |   | |   |-ImplicitCastExpr 0x2df341473e8 <col:24> 'void *' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x2df341472e8 <col:24> 'void *' lvalue ParmVar 0x2df3413c0e8 'arg' 'void *'
|   |   |   | |   |-ImplicitCastExpr 0x2df34147400 <col:29, col:30> 'const void *' <BitCast>
|   |   |   | |   | `-UnaryOperator 0x2df34147358 <col:29, col:30> 'unsigned char *' prefix '&' cannot overflow
|   |   |   | |   |   `-DeclRefExpr 0x2df34147308 <col:30> 'unsigned char' lvalue Var 0x2df34146510 'chtmp' 'unsigned char'
|   |   |   | |   `-IntegerLiteral 0x2df34147370 <col:37> 'int' 1
|   |   |   | `-ReturnStmt 0x2df341494a8 <line:98:17, col:25>
|   |   |   |   `-UnaryOperator 0x2df34149490 <col:24, col:25> 'int' prefix '-'
|   |   |   |     `-IntegerLiteral 0x2df34149468 <col:25> 'int' 1
|   |   |   `-ReturnStmt 0x2df341494f8 <line:99:13, col:20>
|   |   |     `-IntegerLiteral 0x2df341494d0 <col:20> 'int' 1
|   |   |-IfStmt 0x2df34149720 <line:101:9, line:102:21>
|   |   | |-UnaryOperator 0x2df341496b8 <line:101:13, col:32> 'int' prefix '!' cannot overflow
|   |   | | `-CallExpr 0x2df34149638 <col:14, col:32> 'int'
|   |   | |   |-ImplicitCastExpr 0x2df34149620 <col:14> 'char_io *' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x2df34149560 <col:14> 'char_io *' lvalue ParmVar 0x2df3413c068 'io_ch' 'char_io *'
|   |   | |   |-ImplicitCastExpr 0x2df34149670 <col:20> 'void *' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x2df34149580 <col:20> 'void *' lvalue ParmVar 0x2df3413c0e8 'arg' 'void *'
|   |   | |   |-ImplicitCastExpr 0x2df341496a0 <col:25> 'const void *' <BitCast>
|   |   | |   | `-ImplicitCastExpr 0x2df34149688 <col:25> 'char *' <ArrayToPointerDecay>
|   |   | |   |   `-StringLiteral 0x2df341495d8 <col:25> 'char [2]' lvalue "\\"
|   |   | |   `-IntegerLiteral 0x2df341495f8 <col:31> 'int' 1
|   |   | `-ReturnStmt 0x2df34149710 <line:102:13, col:21>
|   |   |   `-UnaryOperator 0x2df341496f8 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x2df341496d0 <col:21> 'int' 1
|   |   |-IfStmt 0x2df341498c0 <line:103:9, line:104:21>
|   |   | |-UnaryOperator 0x2df34149858 <line:103:13, col:34> 'int' prefix '!' cannot overflow
|   |   | | `-CallExpr 0x2df341497f0 <col:14, col:34> 'int'
|   |   | |   |-ImplicitCastExpr 0x2df341497d8 <col:14> 'char_io *' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x2df34149738 <col:14> 'char_io *' lvalue ParmVar 0x2df3413c068 'io_ch' 'char_io *'
|   |   | |   |-ImplicitCastExpr 0x2df34149828 <col:20> 'void *' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x2df34149758 <col:20> 'void *' lvalue ParmVar 0x2df3413c0e8 'arg' 'void *'
|   |   | |   |-ImplicitCastExpr 0x2df34149840 <col:25, col:26> 'const void *' <BitCast>
|   |   | |   | `-UnaryOperator 0x2df34149798 <col:25, col:26> 'unsigned char *' prefix '&' cannot overflow
|   |   | |   |   `-DeclRefExpr 0x2df34149778 <col:26> 'unsigned char' lvalue Var 0x2df34146510 'chtmp' 'unsigned char'
|   |   | |   `-IntegerLiteral 0x2df341497b0 <col:33> 'int' 1
|   |   | `-ReturnStmt 0x2df341498b0 <line:104:13, col:21>
|   |   |   `-UnaryOperator 0x2df34149898 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x2df34149870 <col:21> 'int' 1
|   |   `-ReturnStmt 0x2df34149900 <line:105:9, col:16>
|   |     `-IntegerLiteral 0x2df341498d8 <col:16> 'int' 2
|   |-IfStmt 0x2df34149bb0 <line:107:5, line:114:5>
|   | |-OpaqueValueExpr 0x2df34149b98 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2df34149b78 <line:109:45, line:114:5>
|   |   |-IfStmt 0x2df34149b28 <line:111:9, line:112:21>
|   |   | |-OpaqueValueExpr 0x2df34149b10 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x2df34149b00 <col:13, col:21>
|   |   |   `-UnaryOperator 0x2df34149ae8 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x2df34149ac0 <col:21> 'int' 1
|   |   `-ReturnStmt 0x2df34149b68 <line:113:9, col:16>
|   |     `-IntegerLiteral 0x2df34149b40 <col:16> 'int' 3
|   |-IfStmt 0x2df34149eb8 <line:119:5, line:123:5>
|   | |-OpaqueValueExpr 0x2df34149ea0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2df34149e80 <line:119:47, line:123:5>
|   |   |-IfStmt 0x2df34149e30 <line:120:9, line:121:21>
|   |   | |-UnaryOperator 0x2df34149dc8 <line:120:13, col:34> 'int' prefix '!' cannot overflow
|   |   | | `-CallExpr 0x2df34149d48 <col:14, col:34> 'int'
|   |   | |   |-ImplicitCastExpr 0x2df34149d30 <col:14> 'char_io *' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x2df34149c70 <col:14> 'char_io *' lvalue ParmVar 0x2df3413c068 'io_ch' 'char_io *'
|   |   | |   |-ImplicitCastExpr 0x2df34149d80 <col:20> 'void *' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x2df34149c90 <col:20> 'void *' lvalue ParmVar 0x2df3413c0e8 'arg' 'void *'
|   |   | |   |-ImplicitCastExpr 0x2df34149db0 <col:25> 'const void *' <BitCast>
|   |   | |   | `-ImplicitCastExpr 0x2df34149d98 <col:25> 'char *' <ArrayToPointerDecay>
|   |   | |   |   `-StringLiteral 0x2df34149ce8 <col:25> 'char [3]' lvalue "\\\\"
|   |   | |   `-IntegerLiteral 0x2df34149d08 <col:33> 'int' 2
|   |   | `-ReturnStmt 0x2df34149e20 <line:121:13, col:21>
|   |   |   `-UnaryOperator 0x2df34149e08 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x2df34149de0 <col:21> 'int' 1
|   |   `-ReturnStmt 0x2df34149e70 <line:122:9, col:16>
|   |     `-IntegerLiteral 0x2df34149e48 <col:16> 'int' 2
|   |-IfStmt 0x2df3414a058 <line:124:5, line:125:17>
|   | |-UnaryOperator 0x2df34149ff0 <line:124:9, col:30> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x2df34149f88 <col:10, col:30> 'int'
|   | |   |-ImplicitCastExpr 0x2df34149f70 <col:10> 'char_io *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x2df34149ed0 <col:10> 'char_io *' lvalue ParmVar 0x2df3413c068 'io_ch' 'char_io *'
|   | |   |-ImplicitCastExpr 0x2df34149fc0 <col:16> 'void *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x2df34149ef0 <col:16> 'void *' lvalue ParmVar 0x2df3413c0e8 'arg' 'void *'
|   | |   |-ImplicitCastExpr 0x2df34149fd8 <col:21, col:22> 'const void *' <BitCast>
|   | |   | `-UnaryOperator 0x2df34149f30 <col:21, col:22> 'unsigned char *' prefix '&' cannot overflow
|   | |   |   `-DeclRefExpr 0x2df34149f10 <col:22> 'unsigned char' lvalue Var 0x2df34146510 'chtmp' 'unsigned char'
|   | |   `-IntegerLiteral 0x2df34149f48 <col:29> 'int' 1
|   | `-ReturnStmt 0x2df3414a048 <line:125:9, col:17>
|   |   `-UnaryOperator 0x2df3414a030 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x2df3414a008 <col:17> 'int' 1
|   `-ReturnStmt 0x2df3414a098 <line:126:5, col:12>
|     `-IntegerLiteral 0x2df3414a070 <col:12> 'int' 1
|-FunctionDecl 0x2df34148670 <line:138:1, line:230:1> line:138:12 used do_buf 'int (unsigned char *, int, int, unsigned short, char *, char_io *, void *)' static
| |-ParmVarDecl 0x2df3414a138 <col:19, col:34> col:34 used buf 'unsigned char *'
| |-ParmVarDecl 0x2df3414a1b8 <col:39, col:43> col:43 used buflen 'int'
| |-ParmVarDecl 0x2df3414a238 <line:139:19, col:23> col:23 used type 'int'
| |-ParmVarDecl 0x2df3414a2b8 <col:29, col:44> col:44 used flags 'unsigned short'
| |-ParmVarDecl 0x2df3414a338 <col:51, col:57> col:57 used quotes 'char *'
| |-ParmVarDecl 0x2df3414a3b0 <col:65, col:74> col:74 used io_ch 'char_io *'
| |-ParmVarDecl 0x2df34148440 <line:140:19, col:25> col:25 used arg 'void *'
| `-CompoundStmt 0x2df3414a6a8 <line:141:1, line:230:1>
|   |-DeclStmt 0x2df34148988 <line:142:5, col:34>
|   | |-VarDecl 0x2df34148778 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x2df341487f8 <col:5, col:12> col:12 used outlen 'int'
|   | |-VarDecl 0x2df34148878 <col:5, col:20> col:20 used len 'int'
|   | `-VarDecl 0x2df341488f8 <col:5, col:25> col:25 used charwidth 'int'
|   |-DeclStmt 0x2df34148a20 <line:143:5, col:27>
|   | `-VarDecl 0x2df341489b8 <col:5, col:20> col:20 used orflags 'unsigned short'
|   |-DeclStmt 0x2df34148b50 <line:144:5, col:25>
|   | |-VarDecl 0x2df34148a50 <col:5, col:20> col:20 used p 'unsigned char *'
|   | `-VarDecl 0x2df34148ad0 <col:5, col:24> col:24 used q 'unsigned char *'
|   |-DeclStmt 0x2df34148be8 <line:145:5, col:20>
|   | `-VarDecl 0x2df34148b80 <col:5, col:19> col:19 used c 'unsigned long'
|   |-BinaryOperator 0x2df34148c70 <line:147:5, col:9> 'unsigned char *' '='
|   | |-DeclRefExpr 0x2df34148c00 <col:5> 'unsigned char *' lvalue Var 0x2df34148a50 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x2df34148c58 <col:9> 'unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2df34148c38 <col:9> 'unsigned char *' lvalue ParmVar 0x2df3414a138 'buf' 'unsigned char *'
|   |-BinaryOperator 0x2df34148d58 <line:148:5, col:15> 'unsigned char *' '='
|   | |-DeclRefExpr 0x2df34148c90 <col:5> 'unsigned char *' lvalue Var 0x2df34148ad0 'q' 'unsigned char *'
|   | `-BinaryOperator 0x2df34148d38 <col:9, col:15> 'unsigned char *' '+'
|   |   |-ImplicitCastExpr 0x2df34148d08 <col:9> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2df34148cc8 <col:9> 'unsigned char *' lvalue ParmVar 0x2df3414a138 'buf' 'unsigned char *'
|   |   `-ImplicitCastExpr 0x2df34148d20 <col:15> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x2df34148ce8 <col:15> 'int' lvalue ParmVar 0x2df3414a1b8 'buflen' 'int'
|   |-BinaryOperator 0x2df34148dd8 <line:149:5, col:14> 'int' '='
|   | |-DeclRefExpr 0x2df34148d78 <col:5> 'int' lvalue Var 0x2df341487f8 'outlen' 'int'
|   | `-IntegerLiteral 0x2df34148db0 <col:14> 'int' 0
|   |-BinaryOperator 0x2df34148eb0 <line:150:5, line:129:33> 'int' '='
|   | |-DeclRefExpr 0x2df34148df8 <line:150:5> 'int' lvalue Var 0x2df341488f8 'charwidth' 'int'
|   | `-BinaryOperator 0x2df34148e90 <col:17, line:129:33> 'int' '&'
|   |   |-ImplicitCastExpr 0x2df34148e78 <line:150:17> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2df34148e30 <col:17> 'int' lvalue ParmVar 0x2df3414a238 'type' 'int'
|   |   `-IntegerLiteral 0x2df34148e50 <line:129:33> 'int' 7
|   |-SwitchStmt 0x2df34148f08 <line:152:5, line:167:5>
|   | |-ImplicitCastExpr 0x2df34148ef0 <line:152:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x2df34148ed0 <col:13> 'int' lvalue Var 0x2df341488f8 'charwidth' 'int'
|   | `-CompoundStmt 0x2df34149360 <col:24, line:167:5>
|   |   |-CaseStmt 0x2df34148f68 <line:153:5, line:157:9>
|   |   | |-ConstantExpr 0x2df34148f50 <line:153:10> 'int'
|   |   | | `-IntegerLiteral 0x2df34148f28 <col:10> 'int' 4
|   |   | `-IfStmt 0x2df34149188 <line:154:9, line:157:9>
|   |   |   |-BinaryOperator 0x2df34148ff0 <line:154:13, col:22> 'int' '&'
|   |   |   | |-ImplicitCastExpr 0x2df34148fd8 <col:13> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x2df34148f90 <col:13> 'int' lvalue ParmVar 0x2df3414a1b8 'buflen' 'int'
|   |   |   | `-IntegerLiteral 0x2df34148fb0 <col:22> 'int' 3
|   |   |   `-CompoundStmt 0x2df34149170 <col:25, line:157:9>
|   |   |     `-ReturnStmt 0x2df34149160 <line:156:13, col:21>
|   |   |       `-UnaryOperator 0x2df34149148 <col:20, col:21> 'int' prefix '-'
|   |   |         `-IntegerLiteral 0x2df34149120 <col:21> 'int' 1
|   |   |-BreakStmt 0x2df341491a0 <line:158:9>
|   |   |-CaseStmt 0x2df341491e8 <line:159:5, line:163:9>
|   |   | |-ConstantExpr 0x2df341491d0 <line:159:10> 'int'
|   |   | | `-IntegerLiteral 0x2df341491a8 <col:10> 'int' 2
|   |   | `-IfStmt 0x2df34149318 <line:160:9, line:163:9>
|   |   |   |-BinaryOperator 0x2df34149270 <line:160:13, col:22> 'int' '&'
|   |   |   | |-ImplicitCastExpr 0x2df34149258 <col:13> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x2df34149210 <col:13> 'int' lvalue ParmVar 0x2df3414a1b8 'buflen' 'int'
|   |   |   | `-IntegerLiteral 0x2df34149230 <col:22> 'int' 1
|   |   |   `-CompoundStmt 0x2df34149300 <col:25, line:163:9>
|   |   |     `-ReturnStmt 0x2df341492f0 <line:162:13, col:21>
|   |   |       `-UnaryOperator 0x2df341492d8 <col:20, col:21> 'int' prefix '-'
|   |   |         `-IntegerLiteral 0x2df341492b0 <col:21> 'int' 1
|   |   |-BreakStmt 0x2df34149330 <line:164:9>
|   |   `-DefaultStmt 0x2df34149340 <line:165:5, line:166:9>
|   |     `-BreakStmt 0x2df34149338 <col:9>
|   |-WhileStmt 0x2df3414a648 <line:169:5, line:228:5>
|   | |-BinaryOperator 0x2df34149408 <line:169:12, col:17> 'int' '!='
|   | | |-ImplicitCastExpr 0x2df341493d8 <col:12> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2df34149398 <col:12> 'unsigned char *' lvalue Var 0x2df34148a50 'p' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x2df341493f0 <col:17> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2df341493b8 <col:17> 'unsigned char *' lvalue Var 0x2df34148ad0 'q' 'unsigned char *'
|   | `-CompoundStmt 0x2df3414a620 <col:20, line:228:5>
|   |   |-IfStmt 0x2df34145598 <line:170:9, line:173:23> has_else
|   |   | |-OpaqueValueExpr 0x2df34145580 <<invalid sloc>> '_Bool'
|   |   | |-NullStmt 0x2df34145578 <line:171:13>
|   |   | `-BinaryOperator 0x2df34145558 <line:173:13, col:23> 'unsigned short' '='
|   |   |   |-DeclRefExpr 0x2df341454f8 <col:13> 'unsigned short' lvalue Var 0x2df341489b8 'orflags' 'unsigned short'
|   |   |   `-ImplicitCastExpr 0x2df34145540 <col:23> 'unsigned short' <IntegralCast>
|   |   |     `-IntegerLiteral 0x2df34145518 <col:23> 'int' 0
|   |   |-SwitchStmt 0x2df341455f8 <line:175:9, line:201:9>
|   |   | |-ImplicitCastExpr 0x2df341455e0 <line:175:17> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2df341455c0 <col:17> 'int' lvalue Var 0x2df341488f8 'charwidth' 'int'
|   |   | `-CompoundStmt 0x2df34143498 <col:28, line:201:9>
|   |   |   |-CaseStmt 0x2df34145658 <line:176:9, line:177:42>
|   |   |   | |-ConstantExpr 0x2df34145640 <line:176:14> 'int'
|   |   |   | | `-IntegerLiteral 0x2df34145618 <col:14> 'int' 4
|   |   |   | `-BinaryOperator 0x2df341457c8 <line:177:13, col:42> 'unsigned long' '='
|   |   |   |   |-DeclRefExpr 0x2df34145680 <col:13> 'unsigned long' lvalue Var 0x2df34148b80 'c' 'unsigned long'
|   |   |   |   `-BinaryOperator 0x2df341457a8 <col:17, col:42> 'unsigned long' '<<'
|   |   |   |     |-ParenExpr 0x2df34145760 <col:17, col:37> 'unsigned long'
|   |   |   |     | `-CStyleCastExpr 0x2df34145738 <col:18, col:35> 'unsigned long' <IntegralCast>
|   |   |   |     |   `-ImplicitCastExpr 0x2df34145720 <col:33, col:35> 'unsigned char' <LValueToRValue> part_of_explicit_cast
|   |   |   |     |     `-UnaryOperator 0x2df341456f0 <col:33, col:35> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   |   |     |       `-UnaryOperator 0x2df341456d8 <col:34, col:35> 'unsigned char *' postfix '++'
|   |   |   |     |         `-DeclRefExpr 0x2df341456b8 <col:34> 'unsigned char *' lvalue Var 0x2df34148a50 'p' 'unsigned char *'
|   |   |   |     `-IntegerLiteral 0x2df34145780 <col:42> 'int' 24
|   |   |   |-CompoundAssignOperator 0x2df34145918 <line:178:13, col:43> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   |   | |-DeclRefExpr 0x2df341457e8 <col:13> 'unsigned long' lvalue Var 0x2df34148b80 'c' 'unsigned long'
|   |   |   | `-BinaryOperator 0x2df341458f8 <col:18, col:43> 'unsigned long' '<<'
|   |   |   |   |-ParenExpr 0x2df341458b0 <col:18, col:38> 'unsigned long'
|   |   |   |   | `-CStyleCastExpr 0x2df34145888 <col:19, col:36> 'unsigned long' <IntegralCast>
|   |   |   |   |   `-ImplicitCastExpr 0x2df34145870 <col:34, col:36> 'unsigned char' <LValueToRValue> part_of_explicit_cast
|   |   |   |   |     `-UnaryOperator 0x2df34145840 <col:34, col:36> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   |   |   |       `-UnaryOperator 0x2df34145828 <col:35, col:36> 'unsigned char *' postfix '++'
|   |   |   |   |         `-DeclRefExpr 0x2df34145808 <col:35> 'unsigned char *' lvalue Var 0x2df34148a50 'p' 'unsigned char *'
|   |   |   |   `-IntegerLiteral 0x2df341458d0 <col:43> 'int' 16
|   |   |   |-CompoundAssignOperator 0x2df34145a78 <line:179:13, col:43> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   |   | |-DeclRefExpr 0x2df34145948 <col:13> 'unsigned long' lvalue Var 0x2df34148b80 'c' 'unsigned long'
|   |   |   | `-BinaryOperator 0x2df34145a58 <col:18, col:43> 'unsigned long' '<<'
|   |   |   |   |-ParenExpr 0x2df34145a10 <col:18, col:38> 'unsigned long'
|   |   |   |   | `-CStyleCastExpr 0x2df341459e8 <col:19, col:36> 'unsigned long' <IntegralCast>
|   |   |   |   |   `-ImplicitCastExpr 0x2df341459d0 <col:34, col:36> 'unsigned char' <LValueToRValue> part_of_explicit_cast
|   |   |   |   |     `-UnaryOperator 0x2df341459a0 <col:34, col:36> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   |   |   |       `-UnaryOperator 0x2df34145988 <col:35, col:36> 'unsigned char *' postfix '++'
|   |   |   |   |         `-DeclRefExpr 0x2df34145968 <col:35> 'unsigned char *' lvalue Var 0x2df34148a50 'p' 'unsigned char *'
|   |   |   |   `-IntegerLiteral 0x2df34145a30 <col:43> 'int' 8
|   |   |   |-CompoundAssignOperator 0x2df34145b78 <line:180:13, col:20> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   |   | |-DeclRefExpr 0x2df34145aa8 <col:13> 'unsigned long' lvalue Var 0x2df34148b80 'c' 'unsigned long'
|   |   |   | `-ImplicitCastExpr 0x2df34145b60 <col:18, col:20> 'unsigned long' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x2df34145b48 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |   |   |     `-UnaryOperator 0x2df34145b30 <col:18, col:20> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   |   |       `-UnaryOperator 0x2df34145b18 <col:19, col:20> 'unsigned char *' postfix '++'
|   |   |   |         `-DeclRefExpr 0x2df34145af8 <col:19> 'unsigned char *' lvalue Var 0x2df34148a50 'p' 'unsigned char *'
|   |   |   |-BreakStmt 0x2df34145ba8 <line:181:13>
|   |   |   |-CaseStmt 0x2df34145bf0 <line:183:9, line:184:42>
|   |   |   | |-ConstantExpr 0x2df34145bd8 <line:183:14> 'int'
|   |   |   | | `-IntegerLiteral 0x2df34145bb0 <col:14> 'int' 2
|   |   |   | `-BinaryOperator 0x2df34145d48 <line:184:13, col:42> 'unsigned long' '='
|   |   |   |   |-DeclRefExpr 0x2df34145c18 <col:13> 'unsigned long' lvalue Var 0x2df34148b80 'c' 'unsigned long'
|   |   |   |   `-BinaryOperator 0x2df34145d28 <col:17, col:42> 'unsigned long' '<<'
|   |   |   |     |-ParenExpr 0x2df34145ce0 <col:17, col:37> 'unsigned long'
|   |   |   |     | `-CStyleCastExpr 0x2df34145cb8 <col:18, col:35> 'unsigned long' <IntegralCast>
|   |   |   |     |   `-ImplicitCastExpr 0x2df34145ca0 <col:33, col:35> 'unsigned char' <LValueToRValue> part_of_explicit_cast
|   |   |   |     |     `-UnaryOperator 0x2df34145c70 <col:33, col:35> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   |   |     |       `-UnaryOperator 0x2df34145c58 <col:34, col:35> 'unsigned char *' postfix '++'
|   |   |   |     |         `-DeclRefExpr 0x2df34145c38 <col:34> 'unsigned char *' lvalue Var 0x2df34148a50 'p' 'unsigned char *'
|   |   |   |     `-IntegerLiteral 0x2df34145d00 <col:42> 'int' 8
|   |   |   |-CompoundAssignOperator 0x2df34145e08 <line:185:13, col:20> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   |   | |-DeclRefExpr 0x2df34145d68 <col:13> 'unsigned long' lvalue Var 0x2df34148b80 'c' 'unsigned long'
|   |   |   | `-ImplicitCastExpr 0x2df34145df0 <col:18, col:20> 'unsigned long' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x2df34145dd8 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |   |   |     `-UnaryOperator 0x2df34145dc0 <col:18, col:20> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   |   |       `-UnaryOperator 0x2df34145da8 <col:19, col:20> 'unsigned char *' postfix '++'
|   |   |   |         `-DeclRefExpr 0x2df34145d88 <col:19> 'unsigned char *' lvalue Var 0x2df34148a50 'p' 'unsigned char *'
|   |   |   |-BreakStmt 0x2df34145e38 <line:186:13>
|   |   |   |-CaseStmt 0x2df34145e80 <line:188:9, line:189:19>
|   |   |   | |-ConstantExpr 0x2df34145e68 <line:188:14> 'int'
|   |   |   | | `-IntegerLiteral 0x2df34145e40 <col:14> 'int' 1
|   |   |   | `-BinaryOperator 0x2df34145f48 <line:189:13, col:19> 'unsigned long' '='
|   |   |   |   |-DeclRefExpr 0x2df34145ea8 <col:13> 'unsigned long' lvalue Var 0x2df34148b80 'c' 'unsigned long'
|   |   |   |   `-ImplicitCastExpr 0x2df34145f30 <col:17, col:19> 'unsigned long' <IntegralCast>
|   |   |   |     `-ImplicitCastExpr 0x2df34145f18 <col:17, col:19> 'unsigned char' <LValueToRValue>
|   |   |   |       `-UnaryOperator 0x2df34145f00 <col:17, col:19> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   |   |         `-UnaryOperator 0x2df34145ee8 <col:18, col:19> 'unsigned char *' postfix '++'
|   |   |   |           `-DeclRefExpr 0x2df34145ec8 <col:18> 'unsigned char *' lvalue Var 0x2df34148a50 'p' 'unsigned char *'
|   |   |   |-BreakStmt 0x2df34145f68 <line:190:13>
|   |   |   |-CaseStmt 0x2df34145fb0 <line:192:9, line:193:40>
|   |   |   | |-ConstantExpr 0x2df34145f98 <line:192:14> 'int'
|   |   |   | | `-IntegerLiteral 0x2df34145f70 <col:14> 'int' 0
|   |   |   | `-BinaryOperator 0x2df34146218 <line:193:13, col:40> 'int' '='
|   |   |   |   |-DeclRefExpr 0x2df34145fd8 <col:13> 'int' lvalue Var 0x2df34148778 'i' 'int'
|   |   |   |   `-CallExpr 0x2df341461b0 <col:17, col:40> 'int'
|   |   |   |     |-ImplicitCastExpr 0x2df34146198 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x2df34146100 <col:17> 'int ()' Function 0x2df34146038 'UTF8_getc' 'int ()'
|   |   |   |     |-ImplicitCastExpr 0x2df341461e8 <col:27> 'unsigned char *' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x2df34146120 <col:27> 'unsigned char *' lvalue Var 0x2df34148a50 'p' 'unsigned char *'
|   |   |   |     |-ImplicitCastExpr 0x2df34146200 <col:30> 'int' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x2df34146140 <col:30> 'int' lvalue ParmVar 0x2df3414a1b8 'buflen' 'int'
|   |   |   |     `-UnaryOperator 0x2df34146180 <col:38, col:39> 'unsigned long *' prefix '&' cannot overflow
|   |   |   |       `-DeclRefExpr 0x2df34146160 <col:39> 'unsigned long' lvalue Var 0x2df34148b80 'c' 'unsigned long'
|   |   |   |-IfStmt 0x2df34146308 <line:194:13, line:195:25>
|   |   |   | |-BinaryOperator 0x2df34146298 <line:194:17, col:21> 'int' '<'
|   |   |   | | |-ImplicitCastExpr 0x2df34146280 <col:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x2df34146238 <col:17> 'int' lvalue Var 0x2df34148778 'i' 'int'
|   |   |   | | `-IntegerLiteral 0x2df34146258 <col:21> 'int' 0
|   |   |   | `-ReturnStmt 0x2df341462f8 <line:195:17, col:25>
|   |   |   |   `-UnaryOperator 0x2df341462e0 <col:24, col:25> 'int' prefix '-'
|   |   |   |     `-IntegerLiteral 0x2df341462b8 <col:25> 'int' 1
|   |   |   |-CompoundAssignOperator 0x2df34146378 <line:196:13, col:23> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-DeclRefExpr 0x2df34146320 <col:13> 'int' lvalue ParmVar 0x2df3414a1b8 'buflen' 'int'
|   |   |   | `-ImplicitCastExpr 0x2df34146360 <col:23> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x2df34146340 <col:23> 'int' lvalue Var 0x2df34148778 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x2df341433f0 <line:197:13, col:18> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   |   | |-DeclRefExpr 0x2df341463a8 <col:13> 'unsigned char *' lvalue Var 0x2df34148a50 'p' 'unsigned char *'
|   |   |   | `-ImplicitCastExpr 0x2df341463e8 <col:18> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x2df341463c8 <col:18> 'int' lvalue Var 0x2df34148778 'i' 'int'
|   |   |   |-BreakStmt 0x2df34143420 <line:198:13>
|   |   |   `-DefaultStmt 0x2df34143478 <line:199:9, line:200:21>
|   |   |     `-ReturnStmt 0x2df34143468 <col:13, col:21>
|   |   |       `-UnaryOperator 0x2df34143450 <col:20, col:21> 'int' prefix '-'
|   |   |         `-IntegerLiteral 0x2df34143428 <col:21> 'int' 1
|   |   `-IfStmt 0x2df3414a5f8 <line:204:9, line:227:9> has_else
|   |     |-BinaryOperator 0x2df34143658 <line:204:13, line:130:33> 'int' '&'
|   |     | |-ImplicitCastExpr 0x2df34143640 <line:204:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2df341435f8 <col:13> 'int' lvalue ParmVar 0x2df3414a238 'type' 'int'
|   |     | `-IntegerLiteral 0x2df34143618 <line:130:33> 'int' 8
|   |     |-CompoundStmt 0x2df34144148 <line:204:39, line:221:9>
|   |     | |-DeclStmt 0x2df34143788 <line:205:13, col:36>
|   |     | | `-VarDecl 0x2df34143720 <col:13, col:35> col:27 used utfbuf 'unsigned char [6]'
|   |     | |-DeclStmt 0x2df34143820 <line:206:13, col:23>
|   |     | | `-VarDecl 0x2df341437b8 <col:13, col:17> col:17 used utflen 'int'
|   |     | |-BinaryOperator 0x2df34143ab8 <line:207:13, col:57> 'int' '='
|   |     | | |-DeclRefExpr 0x2df34143838 <col:13> 'int' lvalue Var 0x2df341437b8 'utflen' 'int'
|   |     | | `-CallExpr 0x2df34143a50 <col:22, col:57> 'int'
|   |     | |   |-ImplicitCastExpr 0x2df34143a38 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | |   | `-DeclRefExpr 0x2df34143960 <col:22> 'int ()' Function 0x2df34143898 'UTF8_putc' 'int ()'
|   |     | |   |-ImplicitCastExpr 0x2df34143a88 <col:32> 'unsigned char *' <ArrayToPointerDecay>
|   |     | |   | `-DeclRefExpr 0x2df34143980 <col:32> 'unsigned char [6]' lvalue Var 0x2df34143720 'utfbuf' 'unsigned char [6]'
|   |     | |   |-UnaryExprOrTypeTraitExpr 0x2df341439f8 <col:40, col:53> 'unsigned long long' sizeof
|   |     | |   | `-ParenExpr 0x2df341439d8 <col:46, col:53> 'unsigned char [6]' lvalue
|   |     | |   |   `-DeclRefExpr 0x2df341439b8 <col:47> 'unsigned char [6]' lvalue Var 0x2df34143720 'utfbuf' 'unsigned char [6]' non_odr_use_unevaluated
|   |     | |   `-ImplicitCastExpr 0x2df34143aa0 <col:56> 'unsigned long' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x2df34143a18 <col:56> 'unsigned long' lvalue Var 0x2df34148b80 'c' 'unsigned long'
|   |     | `-ForStmt 0x2df34144110 <line:208:13, line:220:13>
|   |     |   |-BinaryOperator 0x2df34143b20 <line:208:18, col:22> 'int' '='
|   |     |   | |-DeclRefExpr 0x2df34143ad8 <col:18> 'int' lvalue Var 0x2df34148778 'i' 'int'
|   |     |   | `-IntegerLiteral 0x2df34143af8 <col:22> 'int' 0
|   |     |   |-<<<NULL>>>
|   |     |   |-BinaryOperator 0x2df34143bb0 <col:25, col:29> 'int' '<'
|   |     |   | |-ImplicitCastExpr 0x2df34143b80 <col:25> 'int' <LValueToRValue>
|   |     |   | | `-DeclRefExpr 0x2df34143b40 <col:25> 'int' lvalue Var 0x2df34148778 'i' 'int'
|   |     |   | `-ImplicitCastExpr 0x2df34143b98 <col:29> 'int' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x2df34143b60 <col:29> 'int' lvalue Var 0x2df341437b8 'utflen' 'int'
|   |     |   |-UnaryOperator 0x2df34143bf0 <col:37, col:38> 'int' postfix '++'
|   |     |   | `-DeclRefExpr 0x2df34143bd0 <col:37> 'int' lvalue Var 0x2df34148778 'i' 'int'
|   |     |   `-CompoundStmt 0x2df341440e8 <col:42, line:220:13>
|   |     |     |-BinaryOperator 0x2df34143f58 <line:215:17, line:216:45> 'int' '='
|   |     |     | |-DeclRefExpr 0x2df34143c08 <line:215:17> 'int' lvalue Var 0x2df34148878 'len' 'int'
|   |     |     | `-CallExpr 0x2df34143e80 <col:23, line:216:45> 'int'
|   |     |     |   |-ImplicitCastExpr 0x2df34143e68 <line:215:23> 'int (*)(unsigned long, unsigned short, char *, char_io *, void *)' <FunctionToPointerDecay>
|   |     |     |   | `-DeclRefExpr 0x2df34143c40 <col:23> 'int (unsigned long, unsigned short, char *, char_io *, void *)' Function 0x2df3413c2c0 'do_esc_char' 'int (unsigned long, unsigned short, char *, char_io *, void *)'
|   |     |     |   |-ImplicitCastExpr 0x2df34143ee0 <col:35, col:43> 'unsigned long' <IntegralCast>
|   |     |     |   | `-ImplicitCastExpr 0x2df34143ec8 <col:35, col:43> 'unsigned char' <LValueToRValue>
|   |     |     |   |   `-ArraySubscriptExpr 0x2df34143cd0 <col:35, col:43> 'unsigned char' lvalue
|   |     |     |   |     |-ImplicitCastExpr 0x2df34143ca0 <col:35> 'unsigned char *' <ArrayToPointerDecay>
|   |     |     |   |     | `-DeclRefExpr 0x2df34143c60 <col:35> 'unsigned char [6]' lvalue Var 0x2df34143720 'utfbuf' 'unsigned char [6]'
|   |     |     |   |     `-ImplicitCastExpr 0x2df34143cb8 <col:42> 'int' <LValueToRValue>
|   |     |     |   |       `-DeclRefExpr 0x2df34143c80 <col:42> 'int' lvalue Var 0x2df34148778 'i' 'int'
|   |     |     |   |-ImplicitCastExpr 0x2df34143ef8 <col:46, col:54> 'unsigned short' <IntegralCast>
|   |     |     |   | `-BinaryOperator 0x2df34143d90 <col:46, col:54> 'int' '|'
|   |     |     |   |   |-ImplicitCastExpr 0x2df34143d48 <col:46> 'int' <IntegralCast>
|   |     |     |   |   | `-ImplicitCastExpr 0x2df34143d30 <col:46> 'unsigned short' <LValueToRValue>
|   |     |     |   |   |   `-DeclRefExpr 0x2df34143cf0 <col:46> 'unsigned short' lvalue ParmVar 0x2df3414a2b8 'flags' 'unsigned short'
|   |     |     |   |   `-ImplicitCastExpr 0x2df34143d78 <col:54> 'int' <IntegralCast>
|   |     |     |   |     `-ImplicitCastExpr 0x2df34143d60 <col:54> 'unsigned short' <LValueToRValue>
|   |     |     |   |       `-DeclRefExpr 0x2df34143d10 <col:54> 'unsigned short' lvalue Var 0x2df341489b8 'orflags' 'unsigned short'
|   |     |     |   |-ImplicitCastExpr 0x2df34143f10 <col:63> 'char *' <LValueToRValue>
|   |     |     |   | `-DeclRefExpr 0x2df34143db0 <col:63> 'char *' lvalue ParmVar 0x2df3414a338 'quotes' 'char *'
|   |     |     |   |-ImplicitCastExpr 0x2df34143f28 <line:216:35> 'char_io *' <LValueToRValue>
|   |     |     |   | `-DeclRefExpr 0x2df34143dd0 <col:35> 'char_io *' lvalue ParmVar 0x2df3414a3b0 'io_ch' 'char_io *'
|   |     |     |   `-ImplicitCastExpr 0x2df34143f40 <col:42> 'void *' <LValueToRValue>
|   |     |     |     `-DeclRefExpr 0x2df34143df0 <col:42> 'void *' lvalue ParmVar 0x2df34148440 'arg' 'void *'
|   |     |     |-IfStmt 0x2df34144048 <line:217:17, line:218:29>
|   |     |     | |-BinaryOperator 0x2df34143fd8 <line:217:21, col:27> 'int' '<'
|   |     |     | | |-ImplicitCastExpr 0x2df34143fc0 <col:21> 'int' <LValueToRValue>
|   |     |     | | | `-DeclRefExpr 0x2df34143f78 <col:21> 'int' lvalue Var 0x2df34148878 'len' 'int'
|   |     |     | | `-IntegerLiteral 0x2df34143f98 <col:27> 'int' 0
|   |     |     | `-ReturnStmt 0x2df34144038 <line:218:21, col:29>
|   |     |     |   `-UnaryOperator 0x2df34144020 <col:28, col:29> 'int' prefix '-'
|   |     |     |     `-IntegerLiteral 0x2df34143ff8 <col:29> 'int' 1
|   |     |     `-CompoundAssignOperator 0x2df341440b8 <line:219:17, col:27> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |       |-DeclRefExpr 0x2df34144060 <col:17> 'int' lvalue Var 0x2df341487f8 'outlen' 'int'
|   |     |       `-ImplicitCastExpr 0x2df341440a0 <col:27> 'int' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x2df34144080 <col:27> 'int' lvalue Var 0x2df34148878 'len' 'int'
|   |     `-CompoundStmt 0x2df3414a5d0 <line:221:16, line:227:9>
|   |       |-BinaryOperator 0x2df341443d0 <line:222:13, line:223:41> 'int' '='
|   |       | |-DeclRefExpr 0x2df34144178 <line:222:13> 'int' lvalue Var 0x2df34148878 'len' 'int'
|   |       | `-CallExpr 0x2df34144310 <col:19, line:223:41> 'int'
|   |       |   |-ImplicitCastExpr 0x2df341442f8 <line:222:19> 'int (*)(unsigned long, unsigned short, char *, char_io *, void *)' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x2df34144198 <col:19> 'int (unsigned long, unsigned short, char *, char_io *, void *)' Function 0x2df3413c2c0 'do_esc_char' 'int (unsigned long, unsigned short, char *, char_io *, void *)'
|   |       |   |-ImplicitCastExpr 0x2df34144358 <col:31> 'unsigned long' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x2df341441b8 <col:31> 'unsigned long' lvalue Var 0x2df34148b80 'c' 'unsigned long'
|   |       |   |-ImplicitCastExpr 0x2df34144370 <col:34, col:42> 'unsigned short' <IntegralCast>
|   |       |   | `-BinaryOperator 0x2df34144278 <col:34, col:42> 'int' '|'
|   |       |   |   |-ImplicitCastExpr 0x2df34144230 <col:34> 'int' <IntegralCast>
|   |       |   |   | `-ImplicitCastExpr 0x2df34144218 <col:34> 'unsigned short' <LValueToRValue>
|   |       |   |   |   `-DeclRefExpr 0x2df341441d8 <col:34> 'unsigned short' lvalue ParmVar 0x2df3414a2b8 'flags' 'unsigned short'
|   |       |   |   `-ImplicitCastExpr 0x2df34144260 <col:42> 'int' <IntegralCast>
|   |       |   |     `-ImplicitCastExpr 0x2df34144248 <col:42> 'unsigned short' <LValueToRValue>
|   |       |   |       `-DeclRefExpr 0x2df341441f8 <col:42> 'unsigned short' lvalue Var 0x2df341489b8 'orflags' 'unsigned short'
|   |       |   |-ImplicitCastExpr 0x2df34144388 <col:51> 'char *' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x2df34144298 <col:51> 'char *' lvalue ParmVar 0x2df3414a338 'quotes' 'char *'
|   |       |   |-ImplicitCastExpr 0x2df341443a0 <line:223:31> 'char_io *' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x2df341442b8 <col:31> 'char_io *' lvalue ParmVar 0x2df3414a3b0 'io_ch' 'char_io *'
|   |       |   `-ImplicitCastExpr 0x2df341443b8 <col:38> 'void *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x2df341442d8 <col:38> 'void *' lvalue ParmVar 0x2df34148440 'arg' 'void *'
|   |       |-IfStmt 0x2df3414a530 <line:224:13, line:225:25>
|   |       | |-BinaryOperator 0x2df3414a4c0 <line:224:17, col:23> 'int' '<'
|   |       | | |-ImplicitCastExpr 0x2df3414a4a8 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x2df3414a460 <col:17> 'int' lvalue Var 0x2df34148878 'len' 'int'
|   |       | | `-IntegerLiteral 0x2df3414a480 <col:23> 'int' 0
|   |       | `-ReturnStmt 0x2df3414a520 <line:225:17, col:25>
|   |       |   `-UnaryOperator 0x2df3414a508 <col:24, col:25> 'int' prefix '-'
|   |       |     `-IntegerLiteral 0x2df3414a4e0 <col:25> 'int' 1
|   |       `-CompoundAssignOperator 0x2df3414a5a0 <line:226:13, col:23> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |         |-DeclRefExpr 0x2df3414a548 <col:13> 'int' lvalue Var 0x2df341487f8 'outlen' 'int'
|   |         `-ImplicitCastExpr 0x2df3414a588 <col:23> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x2df3414a568 <col:23> 'int' lvalue Var 0x2df34148878 'len' 'int'
|   `-ReturnStmt 0x2df3414a698 <line:229:5, col:12>
|     `-ImplicitCastExpr 0x2df3414a680 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2df3414a660 <col:12> 'int' lvalue Var 0x2df341487f8 'outlen' 'int'
|-FunctionDecl 0x2df3414aa50 <line:234:1, line:252:1> line:234:12 used do_hex_dump 'int (char_io *, void *, unsigned char *, int)' static
| |-ParmVarDecl 0x2df3414a720 <col:24, col:33> col:33 used io_ch 'char_io *'
| |-ParmVarDecl 0x2df3414a7a0 <col:40, col:46> col:46 used arg 'void *'
| |-ParmVarDecl 0x2df3414a820 <col:51, col:66> col:66 used buf 'unsigned char *'
| |-ParmVarDecl 0x2df3414a8a0 <line:235:24, col:28> col:28 used buflen 'int'
| `-CompoundStmt 0x2df3414b7f0 <line:236:1, line:252:1>
|   |-DeclStmt 0x2df3414aca8 <line:237:5, col:52>
|   | `-VarDecl 0x2df3414aba8 <col:5, col:34> col:23 used hexdig 'const char [17]' static cinit
|   |   `-StringLiteral 0x2df3414ac48 <col:34> 'const char [17]' "0123456789ABCDEF"
|   |-DeclStmt 0x2df3414add8 <line:238:5, col:25>
|   | |-VarDecl 0x2df3414acd8 <col:5, col:20> col:20 used p 'unsigned char *'
|   | `-VarDecl 0x2df3414ad58 <col:5, col:24> col:24 used q 'unsigned char *'
|   |-DeclStmt 0x2df3414aeb8 <line:239:5, col:19>
|   | `-VarDecl 0x2df3414ae50 <col:5, col:18> col:10 used hextmp 'char [2]'
|   |-IfStmt 0x2df3414b748 <line:240:5, line:250:5>
|   | |-ImplicitCastExpr 0x2df3414aef0 <line:240:9> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x2df3414aed0 <col:9> 'void *' lvalue ParmVar 0x2df3414a7a0 'arg' 'void *'
|   | `-CompoundStmt 0x2df3414b720 <col:14, line:250:5>
|   |   |-BinaryOperator 0x2df3414af78 <line:241:9, col:13> 'unsigned char *' '='
|   |   | |-DeclRefExpr 0x2df3414af08 <col:9> 'unsigned char *' lvalue Var 0x2df3414acd8 'p' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x2df3414af60 <col:13> 'unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2df3414af40 <col:13> 'unsigned char *' lvalue ParmVar 0x2df3414a820 'buf' 'unsigned char *'
|   |   |-BinaryOperator 0x2df3414b060 <line:242:9, col:19> 'unsigned char *' '='
|   |   | |-DeclRefExpr 0x2df3414af98 <col:9> 'unsigned char *' lvalue Var 0x2df3414ad58 'q' 'unsigned char *'
|   |   | `-BinaryOperator 0x2df3414b040 <col:13, col:19> 'unsigned char *' '+'
|   |   |   |-ImplicitCastExpr 0x2df3414b010 <col:13> 'unsigned char *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x2df3414afd0 <col:13> 'unsigned char *' lvalue ParmVar 0x2df3414a820 'buf' 'unsigned char *'
|   |   |   `-ImplicitCastExpr 0x2df3414b028 <col:19> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2df3414aff0 <col:19> 'int' lvalue ParmVar 0x2df3414a8a0 'buflen' 'int'
|   |   `-WhileStmt 0x2df3414b708 <line:243:9, line:249:9>
|   |     |-BinaryOperator 0x2df3414b0f0 <line:243:16, col:21> 'int' '!='
|   |     | |-ImplicitCastExpr 0x2df3414b0c0 <col:16> 'unsigned char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2df3414b080 <col:16> 'unsigned char *' lvalue Var 0x2df3414acd8 'p' 'unsigned char *'
|   |     | `-ImplicitCastExpr 0x2df3414b0d8 <col:21> 'unsigned char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2df3414b0a0 <col:21> 'unsigned char *' lvalue Var 0x2df3414ad58 'q' 'unsigned char *'
|   |     `-CompoundStmt 0x2df3414b6d8 <col:24, line:249:9>
|   |       |-BinaryOperator 0x2df3414b2f8 <line:244:13, col:39> 'char' '='
|   |       | |-ArraySubscriptExpr 0x2df3414b188 <col:13, col:21> 'char' lvalue
|   |       | | |-ImplicitCastExpr 0x2df3414b170 <col:13> 'char *' <ArrayToPointerDecay>
|   |       | | | `-DeclRefExpr 0x2df3414b110 <col:13> 'char [2]' lvalue Var 0x2df3414ae50 'hextmp' 'char [2]'
|   |       | | `-IntegerLiteral 0x2df3414b148 <col:20> 'int' 0
|   |       | `-ImplicitCastExpr 0x2df3414b2e0 <col:25, col:39> 'char' <LValueToRValue>
|   |       |   `-ArraySubscriptExpr 0x2df3414b2c0 <col:25, col:39> 'const char' lvalue
|   |       |     |-ImplicitCastExpr 0x2df3414b2a8 <col:25> 'const char *' <ArrayToPointerDecay>
|   |       |     | `-DeclRefExpr 0x2df3414b1a8 <col:25> 'const char [17]' lvalue Var 0x2df3414aba8 'hexdig' 'const char [17]'
|   |       |     `-BinaryOperator 0x2df3414b288 <col:32, col:38> 'int' '>>'
|   |       |       |-ImplicitCastExpr 0x2df3414b270 <col:32, col:33> 'int' <IntegralCast>
|   |       |       | `-ImplicitCastExpr 0x2df3414b258 <col:32, col:33> 'unsigned char' <LValueToRValue>
|   |       |       |   `-UnaryOperator 0x2df3414b218 <col:32, col:33> 'unsigned char' lvalue prefix '*' cannot overflow
|   |       |       |     `-ImplicitCastExpr 0x2df3414b200 <col:33> 'unsigned char *' <LValueToRValue>
|   |       |       |       `-DeclRefExpr 0x2df3414b1e0 <col:33> 'unsigned char *' lvalue Var 0x2df3414acd8 'p' 'unsigned char *'
|   |       |       `-IntegerLiteral 0x2df3414b230 <col:38> 'int' 4
|   |       |-BinaryOperator 0x2df3414b4e0 <line:245:13, col:40> 'char' '='
|   |       | |-ArraySubscriptExpr 0x2df3414b378 <col:13, col:21> 'char' lvalue
|   |       | | |-ImplicitCastExpr 0x2df3414b360 <col:13> 'char *' <ArrayToPointerDecay>
|   |       | | | `-DeclRefExpr 0x2df3414b318 <col:13> 'char [2]' lvalue Var 0x2df3414ae50 'hextmp' 'char [2]'
|   |       | | `-IntegerLiteral 0x2df3414b338 <col:20> 'int' 1
|   |       | `-ImplicitCastExpr 0x2df3414b4c8 <col:25, col:40> 'char' <LValueToRValue>
|   |       |   `-ArraySubscriptExpr 0x2df3414b4a8 <col:25, col:40> 'const char' lvalue
|   |       |     |-ImplicitCastExpr 0x2df3414b490 <col:25> 'const char *' <ArrayToPointerDecay>
|   |       |     | `-DeclRefExpr 0x2df3414b398 <col:25> 'const char [17]' lvalue Var 0x2df3414aba8 'hexdig' 'const char [17]'
|   |       |     `-BinaryOperator 0x2df3414b470 <col:32, col:37> 'int' '&'
|   |       |       |-ImplicitCastExpr 0x2df3414b448 <col:32, col:33> 'int' <IntegralCast>
|   |       |       | `-ImplicitCastExpr 0x2df3414b430 <col:32, col:33> 'unsigned char' <LValueToRValue>
|   |       |       |   `-UnaryOperator 0x2df3414b3f0 <col:32, col:33> 'unsigned char' lvalue prefix '*' cannot overflow
|   |       |       |     `-ImplicitCastExpr 0x2df3414b3d8 <col:33> 'unsigned char *' <LValueToRValue>
|   |       |       |       `-DeclRefExpr 0x2df3414b3b8 <col:33> 'unsigned char *' lvalue Var 0x2df3414acd8 'p' 'unsigned char *'
|   |       |       `-IntegerLiteral 0x2df3414b408 <col:37> 'int' 15
|   |       |-IfStmt 0x2df3414b688 <line:246:13, line:247:25>
|   |       | |-UnaryOperator 0x2df3414b620 <line:246:17, col:38> 'int' prefix '!' cannot overflow
|   |       | | `-CallExpr 0x2df3414b5a0 <col:18, col:38> 'int'
|   |       | |   |-ImplicitCastExpr 0x2df3414b588 <col:18> 'char_io *' <LValueToRValue>
|   |       | |   | `-DeclRefExpr 0x2df3414b500 <col:18> 'char_io *' lvalue ParmVar 0x2df3414a720 'io_ch' 'char_io *'
|   |       | |   |-ImplicitCastExpr 0x2df3414b5d8 <col:24> 'void *' <LValueToRValue>
|   |       | |   | `-DeclRefExpr 0x2df3414b520 <col:24> 'void *' lvalue ParmVar 0x2df3414a7a0 'arg' 'void *'
|   |       | |   |-ImplicitCastExpr 0x2df3414b608 <col:29> 'const void *' <BitCast>
|   |       | |   | `-ImplicitCastExpr 0x2df3414b5f0 <col:29> 'char *' <ArrayToPointerDecay>
|   |       | |   |   `-DeclRefExpr 0x2df3414b540 <col:29> 'char [2]' lvalue Var 0x2df3414ae50 'hextmp' 'char [2]'
|   |       | |   `-IntegerLiteral 0x2df3414b560 <col:37> 'int' 2
|   |       | `-ReturnStmt 0x2df3414b678 <line:247:17, col:25>
|   |       |   `-UnaryOperator 0x2df3414b660 <col:24, col:25> 'int' prefix '-'
|   |       |     `-IntegerLiteral 0x2df3414b638 <col:25> 'int' 1
|   |       `-UnaryOperator 0x2df3414b6c0 <line:248:13, col:14> 'unsigned char *' postfix '++'
|   |         `-DeclRefExpr 0x2df3414b6a0 <col:13> 'unsigned char *' lvalue Var 0x2df3414acd8 'p' 'unsigned char *'
|   `-ReturnStmt 0x2df3414b7e0 <line:251:5, col:22>
|     `-BinaryOperator 0x2df3414b7c0 <col:12, col:22> 'int' '<<'
|       |-ImplicitCastExpr 0x2df3414b7a8 <col:12> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x2df3414b760 <col:12> 'int' lvalue ParmVar 0x2df3414a8a0 'buflen' 'int'
|       `-IntegerLiteral 0x2df3414b780 <col:22> 'int' 1
|-FunctionDecl 0x2df3414bb00 <line:260:1, line:293:1> line:260:12 invalid do_dump 'int (unsigned long, char_io *, void *, const int *)' static
| |-ParmVarDecl 0x2df3414b840 <col:20, col:34> col:34 used lflags 'unsigned long'
| |-ParmVarDecl 0x2df3414b8b8 <col:42, col:51> col:51 used io_ch 'char_io *'
| |-ParmVarDecl 0x2df3414b938 <col:58, col:64> col:64 used arg 'void *'
| |-ParmVarDecl 0x2df3414b9b8 <line:261:20, col:39> col:39 invalid str 'const int *'
| `-CompoundStmt 0x2df34144d60 <line:262:1, line:293:1>
|   |-DeclStmt 0x2df3414bcf0 <line:268:5, col:31>
|   | |-VarDecl 0x2df3414bbf0 <col:5, col:20> col:20 used der_buf 'unsigned char *'
|   | `-VarDecl 0x2df3414bc70 <col:5, col:30> col:30 used p 'unsigned char *'
|   |-DeclStmt 0x2df3414be20 <line:269:5, col:24>
|   | |-VarDecl 0x2df3414bd20 <col:5, col:9> col:9 used outlen 'int'
|   | `-VarDecl 0x2df3414bda0 <col:5, col:17> col:17 used der_len 'int'
|   |-IfStmt 0x2df3414bff0 <line:271:5, line:272:17>
|   | |-UnaryOperator 0x2df3414bf88 <line:271:9, col:27> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x2df3414bf08 <col:10, col:27> 'int'
|   | |   |-ImplicitCastExpr 0x2df3414bef0 <col:10> 'char_io *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x2df3414be38 <col:10> 'char_io *' lvalue ParmVar 0x2df3414b8b8 'io_ch' 'char_io *'
|   | |   |-ImplicitCastExpr 0x2df3414bf40 <col:16> 'void *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x2df3414be70 <col:16> 'void *' lvalue ParmVar 0x2df3414b938 'arg' 'void *'
|   | |   |-ImplicitCastExpr 0x2df3414bf70 <col:21> 'const void *' <BitCast>
|   | |   | `-ImplicitCastExpr 0x2df3414bf58 <col:21> 'char *' <ArrayToPointerDecay>
|   | |   |   `-StringLiteral 0x2df3414bea8 <col:21> 'char [2]' lvalue "#"
|   | |   `-IntegerLiteral 0x2df3414bec8 <col:26> 'int' 1
|   | `-ReturnStmt 0x2df3414bfe0 <line:272:9, col:17>
|   |   `-UnaryOperator 0x2df3414bfc8 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x2df3414bfa0 <col:17> 'int' 1
|   |-IfStmt 0x2df3414c288 <line:274:5, line:279:5>
|   | |-OpaqueValueExpr 0x2df3414c270 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2df3414c250 <line:274:44, line:279:5>
|   |   |-IfStmt 0x2df3414c1a8 <line:276:9, line:277:21>
|   |   | |-BinaryOperator 0x2df3414c138 <line:276:13, col:22> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x2df3414c120 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2df3414c0d8 <col:13> 'int' lvalue Var 0x2df3414bd20 'outlen' 'int'
|   |   | | `-IntegerLiteral 0x2df3414c0f8 <col:22> 'int' 0
|   |   | `-ReturnStmt 0x2df3414c198 <line:277:13, col:21>
|   |   |   `-UnaryOperator 0x2df3414c180 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x2df3414c158 <col:21> 'int' 1
|   |   `-ReturnStmt 0x2df3414c240 <line:278:9, col:25>
|   |     `-BinaryOperator 0x2df3414c220 <col:16, col:25> 'int' '+'
|   |       |-ImplicitCastExpr 0x2df3414c208 <col:16> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x2df3414c1c0 <col:16> 'int' lvalue Var 0x2df3414bd20 'outlen' 'int'
|   |       `-IntegerLiteral 0x2df3414c1e0 <col:25> 'int' 1
|   |-BinaryOperator 0x2df341445d8 <line:283:5, col:37> 'unsigned char *' '='
|   | |-DeclRefExpr 0x2df34144400 <col:5> 'unsigned char *' lvalue Var 0x2df3414bbf0 'der_buf' 'unsigned char *'
|   | `-ImplicitCastExpr 0x2df341445c0 <col:15, col:37> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x2df34144580 <col:15, col:37> 'int'
|   |     |-ImplicitCastExpr 0x2df34144568 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2df34144528 <col:15> 'int ()' Function 0x2df34144460 'OPENSSL_malloc' 'int ()'
|   |     `-ImplicitCastExpr 0x2df341445a8 <col:30> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x2df34144548 <col:30> 'int' lvalue Var 0x2df3414bda0 'der_len' 'int'
|   |-IfStmt 0x2df34144740 <line:284:5, line:285:17>
|   | |-BinaryOperator 0x2df341446d0 <line:284:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x2df341446a0 <.//openssl//file_jk/before\crypto\asn1\a_strex.c:284:9> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2df341445f8 <col:9> 'unsigned char *' lvalue Var 0x2df3414bbf0 'der_buf' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x2df341446b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x2df34144680 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2df34144658 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2df34144618 <col:26> 'int' 0
|   | `-ReturnStmt 0x2df34144730 <.//openssl//file_jk/before\crypto\asn1\a_strex.c:285:9, col:17>
|   |   `-UnaryOperator 0x2df34144718 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x2df341446f0 <col:17> 'int' 1
|   |-BinaryOperator 0x2df341447c8 <line:286:5, col:9> 'unsigned char *' '='
|   | |-DeclRefExpr 0x2df34144758 <col:5> 'unsigned char *' lvalue Var 0x2df3414bc70 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x2df341447b0 <col:9> 'unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2df34144790 <col:9> 'unsigned char *' lvalue Var 0x2df3414bbf0 'der_buf' 'unsigned char *'
|   |-BinaryOperator 0x2df34144a40 <line:288:5, col:54> 'int' '='
|   | |-DeclRefExpr 0x2df34144870 <col:5> 'int' lvalue Var 0x2df3414bd20 'outlen' 'int'
|   | `-CallExpr 0x2df341449a0 <col:14, col:54> 'int'
|   |   |-ImplicitCastExpr 0x2df34144988 <col:14> 'int (*)(char_io *, void *, unsigned char *, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2df34144890 <col:14> 'int (char_io *, void *, unsigned char *, int)' Function 0x2df3414aa50 'do_hex_dump' 'int (char_io *, void *, unsigned char *, int)'
|   |   |-ImplicitCastExpr 0x2df341449e0 <col:26> 'char_io *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2df341448b0 <col:26> 'char_io *' lvalue ParmVar 0x2df3414b8b8 'io_ch' 'char_io *'
|   |   |-ImplicitCastExpr 0x2df341449f8 <col:33> 'void *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2df341448d0 <col:33> 'void *' lvalue ParmVar 0x2df3414b938 'arg' 'void *'
|   |   |-ImplicitCastExpr 0x2df34144a10 <col:38> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2df341448f0 <col:38> 'unsigned char *' lvalue Var 0x2df3414bbf0 'der_buf' 'unsigned char *'
|   |   `-ImplicitCastExpr 0x2df34144a28 <col:47> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x2df34144910 <col:47> 'int' lvalue Var 0x2df3414bda0 'der_len' 'int'
|   |-CallExpr 0x2df34144ba8 <line:289:5, col:25> 'int'
|   | |-ImplicitCastExpr 0x2df34144b90 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2df34144b50 <col:5> 'int ()' Function 0x2df34144a88 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x2df34144bd0 <col:18> 'unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2df34144b70 <col:18> 'unsigned char *' lvalue Var 0x2df3414bbf0 'der_buf' 'unsigned char *'
|   |-IfStmt 0x2df34144cb8 <line:290:5, line:291:17>
|   | |-BinaryOperator 0x2df34144c48 <line:290:9, col:18> 'int' '<'
|   | | |-ImplicitCastExpr 0x2df34144c30 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2df34144be8 <col:9> 'int' lvalue Var 0x2df3414bd20 'outlen' 'int'
|   | | `-IntegerLiteral 0x2df34144c08 <col:18> 'int' 0
|   | `-ReturnStmt 0x2df34144ca8 <line:291:9, col:17>
|   |   `-UnaryOperator 0x2df34144c90 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x2df34144c68 <col:17> 'int' 1
|   `-ReturnStmt 0x2df34144d50 <line:292:5, col:21>
|     `-BinaryOperator 0x2df34144d30 <col:12, col:21> 'int' '+'
|       |-ImplicitCastExpr 0x2df34144d18 <col:12> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x2df34144cd0 <col:12> 'int' lvalue Var 0x2df3414bd20 'outlen' 'int'
|       `-IntegerLiteral 0x2df34144cf0 <col:21> 'int' 1
|-VarDecl 0x2df34144e50 <line:301:1, line:310:1> line:301:26 used tag2nbyte 'const signed char [31]' static cinit
| `-InitListExpr 0x2df3414f798 <col:40, line:310:1> 'const signed char [31]'
|   |-ImplicitCastExpr 0x2df3414f7d8 <line:302:5, col:6> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x2df34144ee0 <col:5, col:6> 'int' prefix '-'
|   |   `-IntegerLiteral 0x2df34144eb8 <col:6> 'int' 1
|   |-ImplicitCastExpr 0x2df3414f7f8 <col:9, col:10> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x2df34144f20 <col:9, col:10> 'int' prefix '-'
|   |   `-IntegerLiteral 0x2df34144ef8 <col:10> 'int' 1
|   |-ImplicitCastExpr 0x2df3414f820 <col:13, col:14> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x2df34144f60 <col:13, col:14> 'int' prefix '-'
|   |   `-IntegerLiteral 0x2df34144f38 <col:14> 'int' 1
|   |-ImplicitCastExpr 0x2df3414f858 <col:17, col:18> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x2df34144fa0 <col:17, col:18> 'int' prefix '-'
|   |   `-IntegerLiteral 0x2df34144f78 <col:18> 'int' 1
|   |-ImplicitCastExpr 0x2df3414f870 <col:21, col:22> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x2df34144fe0 <col:21, col:22> 'int' prefix '-'
|   |   `-IntegerLiteral 0x2df34144fb8 <col:22> 'int' 1
|   |-ImplicitCastExpr 0x2df3414f8c8 <line:303:5, col:6> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x2df34145020 <col:5, col:6> 'int' prefix '-'
|   |   `-IntegerLiteral 0x2df34144ff8 <col:6> 'int' 1
|   |-ImplicitCastExpr 0x2df3414f8e0 <col:9, col:10> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x2df34145060 <col:9, col:10> 'int' prefix '-'
|   |   `-IntegerLiteral 0x2df34145038 <col:10> 'int' 1
|   |-ImplicitCastExpr 0x2df3414f8f8 <col:13, col:14> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x2df341450a0 <col:13, col:14> 'int' prefix '-'
|   |   `-IntegerLiteral 0x2df34145078 <col:14> 'int' 1
|   |-ImplicitCastExpr 0x2df3414f910 <col:17, col:18> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x2df341450e0 <col:17, col:18> 'int' prefix '-'
|   |   `-IntegerLiteral 0x2df341450b8 <col:18> 'int' 1
|   |-ImplicitCastExpr 0x2df3414f9a8 <col:21, col:22> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x2df34145120 <col:21, col:22> 'int' prefix '-'
|   |   `-IntegerLiteral 0x2df341450f8 <col:22> 'int' 1
|   |-ImplicitCastExpr 0x2df3414f9c0 <line:304:5, col:6> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x2df34145160 <col:5, col:6> 'int' prefix '-'
|   |   `-IntegerLiteral 0x2df34145138 <col:6> 'int' 1
|   |-ImplicitCastExpr 0x2df3414f9d8 <col:9, col:10> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x2df341451a0 <col:9, col:10> 'int' prefix '-'
|   |   `-IntegerLiteral 0x2df34145178 <col:10> 'int' 1
|   |-ImplicitCastExpr 0x2df3414f9f0 <col:13> 'signed char' <IntegralCast>
|   | `-IntegerLiteral 0x2df341451b8 <col:13> 'int' 0
|   |-ImplicitCastExpr 0x2df3414fa08 <col:16, col:17> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x2df34145208 <col:16, col:17> 'int' prefix '-'
|   |   `-IntegerLiteral 0x2df341451e0 <col:17> 'int' 1
|   |-ImplicitCastExpr 0x2df3414fa20 <line:305:5, col:6> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x2df34145248 <col:5, col:6> 'int' prefix '-'
|   |   `-IntegerLiteral 0x2df34145220 <col:6> 'int' 1
|   |-ImplicitCastExpr 0x2df3414fa38 <col:9, col:10> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x2df34145288 <col:9, col:10> 'int' prefix '-'
|   |   `-IntegerLiteral 0x2df34145260 <col:10> 'int' 1
|   |-ImplicitCastExpr 0x2df3414fa50 <col:13, col:14> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x2df341452c8 <col:13, col:14> 'int' prefix '-'
|   |   `-IntegerLiteral 0x2df341452a0 <col:14> 'int' 1
|   |-ImplicitCastExpr 0x2df3414fb68 <col:17, col:18> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x2df34145308 <col:17, col:18> 'int' prefix '-'
|   |   `-IntegerLiteral 0x2df341452e0 <col:18> 'int' 1
|   |-ImplicitCastExpr 0x2df3414fb80 <line:306:5> 'signed char' <IntegralCast>
|   | `-IntegerLiteral 0x2df34145320 <col:5> 'int' 1
|   |-ImplicitCastExpr 0x2df3414fb98 <col:8> 'signed char' <IntegralCast>
|   | `-IntegerLiteral 0x2df34145348 <col:8> 'int' 1
|   |-ImplicitCastExpr 0x2df3414fbb0 <col:11> 'signed char' <IntegralCast>
|   | `-IntegerLiteral 0x2df34145370 <col:11> 'int' 1
|   |-ImplicitCastExpr 0x2df3414fbc8 <line:307:5, col:6> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x2df341453c0 <col:5, col:6> 'int' prefix '-'
|   |   `-IntegerLiteral 0x2df34145398 <col:6> 'int' 1
|   |-ImplicitCastExpr 0x2df3414fbe0 <col:9> 'signed char' <IntegralCast>
|   | `-IntegerLiteral 0x2df341453d8 <col:9> 'int' 1
|   |-ImplicitCastExpr 0x2df3414fbf8 <col:12> 'signed char' <IntegralCast>
|   | `-IntegerLiteral 0x2df3414f4b0 <col:12> 'int' 1
|   |-ImplicitCastExpr 0x2df3414fc10 <col:15> 'signed char' <IntegralCast>
|   | `-IntegerLiteral 0x2df3414f4d8 <col:15> 'int' 1
|   |-ImplicitCastExpr 0x2df3414fc28 <line:308:5, col:6> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x2df3414f528 <col:5, col:6> 'int' prefix '-'
|   |   `-IntegerLiteral 0x2df3414f500 <col:6> 'int' 1
|   |-ImplicitCastExpr 0x2df3414fc40 <col:9> 'signed char' <IntegralCast>
|   | `-IntegerLiteral 0x2df3414f540 <col:9> 'int' 1
|   |-ImplicitCastExpr 0x2df3414fc58 <col:12, col:13> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x2df3414f590 <col:12, col:13> 'int' prefix '-'
|   |   `-IntegerLiteral 0x2df3414f568 <col:13> 'int' 1
|   |-ImplicitCastExpr 0x2df3414fc70 <line:309:5> 'signed char' <IntegralCast>
|   | `-IntegerLiteral 0x2df3414f5a8 <col:5> 'int' 4
|   |-ImplicitCastExpr 0x2df3414fc88 <col:8, col:9> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x2df3414f5f8 <col:8, col:9> 'int' prefix '-'
|   |   `-IntegerLiteral 0x2df3414f5d0 <col:9> 'int' 1
|   `-ImplicitCastExpr 0x2df3414fca0 <col:12> 'signed char' <IntegralCast>
|     `-IntegerLiteral 0x2df3414f610 <col:12> 'int' 2
|-FunctionDecl 0x2df34150010 <line:318:1, line:395:1> line:318:12 invalid do_print_ex 'int (char_io *, void *, unsigned long, const int *)' static
| |-ParmVarDecl 0x2df3414fd48 <col:24, col:33> col:33 used io_ch 'char_io *'
| |-ParmVarDecl 0x2df3414fdc8 <col:40, col:46> col:46 used arg 'void *'
| |-ParmVarDecl 0x2df3414fe48 <col:51, col:65> col:65 used lflags 'unsigned long'
| |-ParmVarDecl 0x2df3414fec8 <line:319:24, col:43> col:43 invalid str 'const int *'
| `-CompoundStmt 0x2df34152348 <line:320:1, line:395:1>
|   |-DeclStmt 0x2df34150200 <line:321:5, col:20>
|   | |-VarDecl 0x2df34150100 <col:5, col:9> col:9 used outlen 'int'
|   | `-VarDecl 0x2df34150180 <col:5, col:17> col:17 used len 'int'
|   |-DeclStmt 0x2df34150298 <line:322:5, col:13>
|   | `-VarDecl 0x2df34150230 <col:5, col:9> col:9 used type 'int'
|   |-DeclStmt 0x2df34150328 <line:323:5, col:16>
|   | `-VarDecl 0x2df341502c0 <col:5, col:10> col:10 used quotes 'char'
|   |-DeclStmt 0x2df341503c0 <line:324:5, col:25>
|   | `-VarDecl 0x2df34150358 <col:5, col:20> col:20 used flags 'unsigned short'
|   |-BinaryOperator 0x2df34150450 <line:325:5, col:14> 'char' '='
|   | |-DeclRefExpr 0x2df341503d8 <col:5> 'char' lvalue Var 0x2df341502c0 'quotes' 'char'
|   | `-ImplicitCastExpr 0x2df34150438 <col:14> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x2df34150410 <col:14> 'int' 0
|   |-BinaryOperator 0x2df34150590 <line:331:5, col:14> 'int' '='
|   | |-DeclRefExpr 0x2df34150530 <col:5> 'int' lvalue Var 0x2df34150100 'outlen' 'int'
|   | `-IntegerLiteral 0x2df34150568 <col:14> 'int' 0
|   |-IfStmt 0x2df34150d50 <line:333:5, line:340:5>
|   | |-OpaqueValueExpr 0x2df34150d38 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2df34150d00 <line:333:42, line:340:5>
|   |   |-DeclStmt 0x2df34150650 <line:334:9, col:28>
|   |   | `-VarDecl 0x2df341505e8 <col:9, col:21> col:21 used tagname 'const char *'
|   |   |-BinaryOperator 0x2df34150840 <line:335:9, col:36> 'const char *' '='
|   |   | |-DeclRefExpr 0x2df34150668 <col:9> 'const char *' lvalue Var 0x2df341505e8 'tagname' 'const char *'
|   |   | `-ImplicitCastExpr 0x2df34150828 <col:19, col:36> 'const char *' <IntegralToPointer>
|   |   |   `-CallExpr 0x2df341507e8 <col:19, col:36> 'int'
|   |   |     |-ImplicitCastExpr 0x2df341507d0 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x2df34150790 <col:19> 'int ()' Function 0x2df341506c8 'ASN1_tag2str' 'int ()'
|   |   |     `-ImplicitCastExpr 0x2df34150810 <col:32> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x2df341507b0 <col:32> 'int' lvalue Var 0x2df34150230 'type' 'int'
|   |   |-CompoundAssignOperator 0x2df34150960 <line:336:9, col:33> 'int' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-DeclRefExpr 0x2df34150860 <col:9> 'int' lvalue Var 0x2df34150100 'outlen' 'int'
|   |   | `-CallExpr 0x2df34150920 <col:19, col:33> 'unsigned long long'
|   |   |   |-ImplicitCastExpr 0x2df34150908 <col:19> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x2df34150880 <col:19> 'unsigned long long (const char *)' Function 0x2df34123e20 'strlen' 'unsigned long long (const char *)'
|   |   |   `-ImplicitCastExpr 0x2df34150948 <col:26> 'const char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2df341508a0 <col:26> 'const char *' lvalue Var 0x2df341505e8 'tagname' 'const char *'
|   |   |-IfStmt 0x2df34150cb0 <line:337:9, line:338:21>
|   |   | |-BinaryOperator 0x2df34150c40 <line:337:13, col:63> 'int' '||'
|   |   | | |-UnaryOperator 0x2df34150af0 <col:13, col:40> 'int' prefix '!' cannot overflow
|   |   | | | `-CallExpr 0x2df34150a58 <col:14, col:40> 'int'
|   |   | | |   |-ImplicitCastExpr 0x2df34150a40 <col:14> 'char_io *' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x2df34150990 <col:14> 'char_io *' lvalue ParmVar 0x2df3414fd48 'io_ch' 'char_io *'
|   |   | | |   |-ImplicitCastExpr 0x2df34150a90 <col:20> 'void *' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x2df341509c8 <col:20> 'void *' lvalue ParmVar 0x2df3414fdc8 'arg' 'void *'
|   |   | | |   |-ImplicitCastExpr 0x2df34150ac0 <col:25> 'const void *' <BitCast>
|   |   | | |   | `-ImplicitCastExpr 0x2df34150aa8 <col:25> 'const char *' <LValueToRValue>
|   |   | | |   |   `-DeclRefExpr 0x2df34150a00 <col:25> 'const char *' lvalue Var 0x2df341505e8 'tagname' 'const char *'
|   |   | | |   `-ImplicitCastExpr 0x2df34150ad8 <col:34> 'int' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2df34150a20 <col:34> 'int' lvalue Var 0x2df34150100 'outlen' 'int'
|   |   | | `-UnaryOperator 0x2df34150c28 <col:45, col:63> 'int' prefix '!' cannot overflow
|   |   | |   `-CallExpr 0x2df34150ba8 <col:46, col:63> 'int'
|   |   | |     |-ImplicitCastExpr 0x2df34150b90 <col:46> 'char_io *' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x2df34150b08 <col:46> 'char_io *' lvalue ParmVar 0x2df3414fd48 'io_ch' 'char_io *'
|   |   | |     |-ImplicitCastExpr 0x2df34150be0 <col:52> 'void *' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x2df34150b28 <col:52> 'void *' lvalue ParmVar 0x2df3414fdc8 'arg' 'void *'
|   |   | |     |-ImplicitCastExpr 0x2df34150c10 <col:57> 'const void *' <BitCast>
|   |   | |     | `-ImplicitCastExpr 0x2df34150bf8 <col:57> 'char *' <ArrayToPointerDecay>
|   |   | |     |   `-StringLiteral 0x2df34150b48 <col:57> 'char [2]' lvalue ":"
|   |   | |     `-IntegerLiteral 0x2df34150b68 <col:62> 'int' 1
|   |   | `-ReturnStmt 0x2df34150ca0 <line:338:13, col:21>
|   |   |   `-UnaryOperator 0x2df34150c88 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x2df34150c60 <col:21> 'int' 1
|   |   `-UnaryOperator 0x2df34150ce8 <line:339:9, col:15> 'int' postfix '++'
|   |     `-DeclRefExpr 0x2df34150cc8 <col:9> 'int' lvalue Var 0x2df34150100 'outlen' 'int'
|   |-IfStmt 0x2df341513a8 <line:345:5, line:358:5> has_else
|   | |-OpaqueValueExpr 0x2df34151390 <<invalid sloc>> '_Bool'
|   | |-BinaryOperator 0x2df34150de8 <line:346:9, col:17> 'int' '='
|   | | |-DeclRefExpr 0x2df34150d88 <col:9> 'int' lvalue Var 0x2df34150230 'type' 'int'
|   | | `-UnaryOperator 0x2df34150dd0 <col:16, col:17> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x2df34150da8 <col:17> 'int' 1
|   | `-IfStmt 0x2df34151368 <line:348:10, line:358:5> has_else
|   |   |-OpaqueValueExpr 0x2df34151350 <<invalid sloc>> '_Bool'
|   |   |-BinaryOperator 0x2df34150e70 <line:349:9, col:16> 'int' '='
|   |   | |-DeclRefExpr 0x2df34150e28 <col:9> 'int' lvalue Var 0x2df34150230 'type' 'int'
|   |   | `-IntegerLiteral 0x2df34150e48 <col:16> 'int' 1
|   |   `-CompoundStmt 0x2df34151330 <line:350:10, line:358:5>
|   |     |-IfStmt 0x2df34151198 <line:352:9, line:355:21> has_else
|   |     | |-BinaryOperator 0x2df34150fd0 <line:352:13, col:37> 'int' '&&'
|   |     | | |-ParenExpr 0x2df34150f10 <col:13, col:22> 'int'
|   |     | | | `-BinaryOperator 0x2df34150ef0 <col:14, col:21> 'int' '>'
|   |     | | |   |-ImplicitCastExpr 0x2df34150ed8 <col:14> 'int' <LValueToRValue>
|   |     | | |   | `-DeclRefExpr 0x2df34150e90 <col:14> 'int' lvalue Var 0x2df34150230 'type' 'int'
|   |     | | |   `-IntegerLiteral 0x2df34150eb0 <col:21> 'int' 0
|   |     | | `-ParenExpr 0x2df34150fb0 <col:27, col:37> 'int'
|   |     | |   `-BinaryOperator 0x2df34150f90 <col:28, col:35> 'int' '<'
|   |     | |     |-ImplicitCastExpr 0x2df34150f78 <col:28> 'int' <LValueToRValue>
|   |     | |     | `-DeclRefExpr 0x2df34150f30 <col:28> 'int' lvalue Var 0x2df34150230 'type' 'int'
|   |     | |     `-IntegerLiteral 0x2df34150f50 <col:35> 'int' 31
|   |     | |-BinaryOperator 0x2df341510f8 <line:353:13, col:34> 'int' '='
|   |     | | |-DeclRefExpr 0x2df34150ff0 <col:13> 'int' lvalue Var 0x2df34150230 'type' 'int'
|   |     | | `-ImplicitCastExpr 0x2df341510e0 <col:20, col:34> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x2df341510c8 <col:20, col:34> 'signed char' <LValueToRValue>
|   |     | |     `-ArraySubscriptExpr 0x2df341510a8 <col:20, col:34> 'const signed char' lvalue
|   |     | |       |-ImplicitCastExpr 0x2df34151078 <col:20> 'const signed char *' <ArrayToPointerDecay>
|   |     | |       | `-DeclRefExpr 0x2df34151010 <col:20> 'const signed char [31]' lvalue Var 0x2df34144e50 'tag2nbyte' 'const signed char [31]'
|   |     | |       `-ImplicitCastExpr 0x2df34151090 <col:30> 'int' <LValueToRValue>
|   |     | |         `-DeclRefExpr 0x2df34151030 <col:30> 'int' lvalue Var 0x2df34150230 'type' 'int'
|   |     | `-BinaryOperator 0x2df34151178 <line:355:13, col:21> 'int' '='
|   |     |   |-DeclRefExpr 0x2df34151118 <col:13> 'int' lvalue Var 0x2df34150230 'type' 'int'
|   |     |   `-UnaryOperator 0x2df34151160 <col:20, col:21> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x2df34151138 <col:21> 'int' 1
|   |     `-IfStmt 0x2df34151318 <line:356:9, line:357:20>
|   |       |-OpaqueValueExpr 0x2df34151300 <<invalid sloc>> '_Bool'
|   |       `-BinaryOperator 0x2df341512e0 <col:13, col:20> 'int' '='
|   |         |-DeclRefExpr 0x2df34151298 <col:13> 'int' lvalue Var 0x2df34150230 'type' 'int'
|   |         `-IntegerLiteral 0x2df341512b8 <col:20> 'int' 1
|   |-IfStmt 0x2df341516f0 <line:360:5, line:366:5>
|   | |-BinaryOperator 0x2df34151448 <line:360:9, col:18> 'int' '=='
|   | | |-ImplicitCastExpr 0x2df34151430 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2df341513d0 <col:9> 'int' lvalue Var 0x2df34150230 'type' 'int'
|   | | `-UnaryOperator 0x2df34151418 <col:17, col:18> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x2df341513f0 <col:18> 'int' 1
|   | `-CompoundStmt 0x2df341516c8 <col:21, line:366:5>
|   |   |-IfStmt 0x2df341515e0 <line:362:9, line:363:21>
|   |   | |-BinaryOperator 0x2df34151570 <line:362:13, col:19> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x2df34151558 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2df34151510 <col:13> 'int' lvalue Var 0x2df34150180 'len' 'int'
|   |   | | `-IntegerLiteral 0x2df34151530 <col:19> 'int' 0
|   |   | `-ReturnStmt 0x2df341515d0 <line:363:13, col:21>
|   |   |   `-UnaryOperator 0x2df341515b8 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x2df34151590 <col:21> 'int' 1
|   |   |-CompoundAssignOperator 0x2df34151650 <line:364:9, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x2df341515f8 <col:9> 'int' lvalue Var 0x2df34150100 'outlen' 'int'
|   |   | `-ImplicitCastExpr 0x2df34151638 <col:19> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2df34151618 <col:19> 'int' lvalue Var 0x2df34150180 'len' 'int'
|   |   `-ReturnStmt 0x2df341516b8 <line:365:9, col:16>
|   |     `-ImplicitCastExpr 0x2df341516a0 <col:16> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x2df34151680 <col:16> 'int' lvalue Var 0x2df34150100 'outlen' 'int'
|   |-IfStmt 0x2df341518b0 <line:368:5, line:378:5>
|   | |-OpaqueValueExpr 0x2df34151898 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2df34151880 <line:368:45, line:378:5>
|   |   `-IfStmt 0x2df34151858 <line:374:9, line:130:33> has_else
|   |     |-UnaryOperator 0x2df34151760 <line:374:13, col:14> 'int' prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x2df34151748 <col:14> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2df34151728 <col:14> 'int' lvalue Var 0x2df34150230 'type' 'int'
|   |     |-BinaryOperator 0x2df341517c0 <line:375:13, col:20> 'int' '='
|   |     | |-DeclRefExpr 0x2df34151778 <col:13> 'int' lvalue Var 0x2df34150230 'type' 'int'
|   |     | `-IntegerLiteral 0x2df34151798 <col:20> 'int' 1
|   |     `-CompoundAssignOperator 0x2df34151828 <line:377:13, line:130:33> 'int' '|=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       |-DeclRefExpr 0x2df341517e0 <line:377:13> 'int' lvalue Var 0x2df34150230 'type' 'int'
|   |       `-IntegerLiteral 0x2df34151800 <line:130:33> 'int' 8
|   |-IfStmt 0x2df34151af8 <line:381:5, line:382:17>
|   | |-BinaryOperator 0x2df34151a88 <line:381:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x2df34151a70 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2df34151a28 <col:9> 'int' lvalue Var 0x2df34150180 'len' 'int'
|   | | `-IntegerLiteral 0x2df34151a48 <col:15> 'int' 0
|   | `-ReturnStmt 0x2df34151ae8 <line:382:9, col:17>
|   |   `-UnaryOperator 0x2df34151ad0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x2df34151aa8 <col:17> 'int' 1
|   |-CompoundAssignOperator 0x2df34151b68 <line:383:5, col:15> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x2df34151b10 <col:5> 'int' lvalue Var 0x2df34150100 'outlen' 'int'
|   | `-ImplicitCastExpr 0x2df34151b50 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x2df34151b30 <col:15> 'int' lvalue Var 0x2df34150180 'len' 'int'
|   |-IfStmt 0x2df34151c48 <line:384:5, line:385:19>
|   | |-ImplicitCastExpr 0x2df34151bb8 <line:384:9> 'char' <LValueToRValue>
|   | | `-DeclRefExpr 0x2df34151b98 <col:9> 'char' lvalue Var 0x2df341502c0 'quotes' 'char'
|   | `-CompoundAssignOperator 0x2df34151c18 <line:385:9, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |-DeclRefExpr 0x2df34151bd0 <col:9> 'int' lvalue Var 0x2df34150100 'outlen' 'int'
|   |   `-IntegerLiteral 0x2df34151bf0 <col:19> 'int' 2
|   |-IfStmt 0x2df34151cf8 <line:386:5, line:387:16>
|   | |-UnaryOperator 0x2df34151c98 <line:386:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x2df34151c80 <col:10> 'void *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2df34151c60 <col:10> 'void *' lvalue ParmVar 0x2df3414fdc8 'arg' 'void *'
|   | `-ReturnStmt 0x2df34151ce8 <line:387:9, col:16>
|   |   `-ImplicitCastExpr 0x2df34151cd0 <col:16> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x2df34151cb0 <col:16> 'int' lvalue Var 0x2df34150100 'outlen' 'int'
|   |-IfStmt 0x2df34151f08 <line:388:5, line:389:17>
|   | |-BinaryOperator 0x2df34151e98 <line:388:9, col:38> 'int' '&&'
|   | | |-ImplicitCastExpr 0x2df34151e80 <col:9> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x2df34151e68 <col:9> 'char' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2df34151d10 <col:9> 'char' lvalue Var 0x2df341502c0 'quotes' 'char'
|   | | `-UnaryOperator 0x2df34151e50 <col:19, col:38> 'int' prefix '!' cannot overflow
|   | |   `-CallExpr 0x2df34151dd0 <col:20, col:38> 'int'
|   | |     |-ImplicitCastExpr 0x2df34151db8 <col:20> 'char_io *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x2df34151d30 <col:20> 'char_io *' lvalue ParmVar 0x2df3414fd48 'io_ch' 'char_io *'
|   | |     |-ImplicitCastExpr 0x2df34151e08 <col:26> 'void *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x2df34151d50 <col:26> 'void *' lvalue ParmVar 0x2df3414fdc8 'arg' 'void *'
|   | |     |-ImplicitCastExpr 0x2df34151e38 <col:31> 'const void *' <BitCast>
|   | |     | `-ImplicitCastExpr 0x2df34151e20 <col:31> 'char *' <ArrayToPointerDecay>
|   | |     |   `-StringLiteral 0x2df34151d70 <col:31> 'char [2]' lvalue "\""
|   | |     `-IntegerLiteral 0x2df34151d90 <col:37> 'int' 1
|   | `-ReturnStmt 0x2df34151ef8 <line:389:9, col:17>
|   |   `-UnaryOperator 0x2df34151ee0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x2df34151eb8 <col:17> 'int' 1
|   |-IfStmt 0x2df341520d8 <line:390:5, line:391:17>
|   | |-OpaqueValueExpr 0x2df341520c0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2df341520b0 <col:9, col:17>
|   |   `-UnaryOperator 0x2df34152098 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x2df34152070 <col:17> 'int' 1
|   |-IfStmt 0x2df341522e8 <line:392:5, line:393:17>
|   | |-BinaryOperator 0x2df34152278 <line:392:9, col:38> 'int' '&&'
|   | | |-ImplicitCastExpr 0x2df34152260 <col:9> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x2df34152248 <col:9> 'char' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2df341520f0 <col:9> 'char' lvalue Var 0x2df341502c0 'quotes' 'char'
|   | | `-UnaryOperator 0x2df34152230 <col:19, col:38> 'int' prefix '!' cannot overflow
|   | |   `-CallExpr 0x2df341521b0 <col:20, col:38> 'int'
|   | |     |-ImplicitCastExpr 0x2df34152198 <col:20> 'char_io *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x2df34152110 <col:20> 'char_io *' lvalue ParmVar 0x2df3414fd48 'io_ch' 'char_io *'
|   | |     |-ImplicitCastExpr 0x2df341521e8 <col:26> 'void *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x2df34152130 <col:26> 'void *' lvalue ParmVar 0x2df3414fdc8 'arg' 'void *'
|   | |     |-ImplicitCastExpr 0x2df34152218 <col:31> 'const void *' <BitCast>
|   | |     | `-ImplicitCastExpr 0x2df34152200 <col:31> 'char *' <ArrayToPointerDecay>
|   | |     |   `-StringLiteral 0x2df34152150 <col:31> 'char [2]' lvalue "\""
|   | |     `-IntegerLiteral 0x2df34152170 <col:37> 'int' 1
|   | `-ReturnStmt 0x2df341522d8 <line:393:9, col:17>
|   |   `-UnaryOperator 0x2df341522c0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x2df34152298 <col:17> 'int' 1
|   `-ReturnStmt 0x2df34152338 <line:394:5, col:12>
|     `-ImplicitCastExpr 0x2df34152320 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2df34152300 <col:12> 'int' lvalue Var 0x2df34150100 'outlen' 'int'
|-FunctionDecl 0x2df341526d0 <line:399:1, line:406:1> line:399:12 used do_indent 'int (char_io *, void *, int)' static
| |-ParmVarDecl 0x2df341523f8 <col:22, col:31> col:31 used io_ch 'char_io *'
| |-ParmVarDecl 0x2df341524e0 <col:38, col:44> col:44 used arg 'void *'
| |-ParmVarDecl 0x2df34152560 <col:49, col:53> col:53 used indent 'int'
| `-CompoundStmt 0x2df34152b78 <line:400:1, line:406:1>
|   |-DeclStmt 0x2df34152820 <line:401:5, col:10>
|   | `-VarDecl 0x2df341527b8 <col:5, col:9> col:9 used i 'int'
|   |-ForStmt 0x2df34152b08 <line:402:5, line:404:20>
|   | |-BinaryOperator 0x2df34152898 <line:402:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x2df34152838 <col:10> 'int' lvalue Var 0x2df341527b8 'i' 'int'
|   | | `-IntegerLiteral 0x2df34152870 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2df34152928 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x2df341528f8 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2df341528b8 <col:17> 'int' lvalue Var 0x2df341527b8 'i' 'int'
|   | | `-ImplicitCastExpr 0x2df34152910 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2df341528d8 <col:21> 'int' lvalue ParmVar 0x2df34152560 'indent' 'int'
|   | |-UnaryOperator 0x2df34152968 <col:29, col:30> 'int' postfix '++'
|   | | `-DeclRefExpr 0x2df34152948 <col:29> 'int' lvalue Var 0x2df341527b8 'i' 'int'
|   | `-IfStmt 0x2df34152af0 <line:403:9, line:404:20>
|   |   |-UnaryOperator 0x2df34152aa0 <line:403:13, col:31> 'int' prefix '!' cannot overflow
|   |   | `-CallExpr 0x2df34152a20 <col:14, col:31> 'int'
|   |   |   |-ImplicitCastExpr 0x2df34152a08 <col:14> 'char_io *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x2df34152980 <col:14> 'char_io *' lvalue ParmVar 0x2df341523f8 'io_ch' 'char_io *'
|   |   |   |-ImplicitCastExpr 0x2df34152a58 <col:20> 'void *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x2df341529a0 <col:20> 'void *' lvalue ParmVar 0x2df341524e0 'arg' 'void *'
|   |   |   |-ImplicitCastExpr 0x2df34152a88 <col:25> 'const void *' <BitCast>
|   |   |   | `-ImplicitCastExpr 0x2df34152a70 <col:25> 'char *' <ArrayToPointerDecay>
|   |   |   |   `-StringLiteral 0x2df341529c0 <col:25> 'char [2]' lvalue " "
|   |   |   `-IntegerLiteral 0x2df341529e0 <col:30> 'int' 1
|   |   `-ReturnStmt 0x2df34152ae0 <line:404:13, col:20>
|   |     `-IntegerLiteral 0x2df34152ab8 <col:20> 'int' 0
|   `-ReturnStmt 0x2df34152b68 <line:405:5, col:12>
|     `-IntegerLiteral 0x2df34152b40 <col:12> 'int' 1
|-FunctionDecl 0x2df34152f10 <line:411:1, line:545:1> line:411:12 invalid do_name_ex 'int (char_io *, void *, const int *, int, unsigned long)' static
| |-ParmVarDecl 0x2df34152bb0 <col:23, col:32> col:32 used io_ch 'char_io *'
| |-ParmVarDecl 0x2df34152c30 <col:39, col:45> col:45 used arg 'void *'
| |-ParmVarDecl 0x2df34152cb0 <col:50, col:67> col:67 invalid n 'const int *'
| |-ParmVarDecl 0x2df34152d30 <line:412:23, col:27> col:27 used indent 'int'
| |-ParmVarDecl 0x2df34152db0 <col:35, col:49> col:49 used flags 'unsigned long'
| `-CompoundStmt 0x2df3414e828 <line:413:1, line:545:1>
|   |-DeclStmt 0x2df34153258 <line:414:5, col:35>
|   | |-VarDecl 0x2df34153008 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x2df34153088 <col:5, col:20> col:12 used prev 'int' cinit
|   | | `-UnaryOperator 0x2df34153118 <col:19, col:20> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x2df341530f0 <col:20> 'int' 1
|   | |-VarDecl 0x2df34153148 <col:5, col:23> col:23 used orflags 'int'
|   | `-VarDecl 0x2df341531c8 <col:5, col:32> col:32 used cnt 'int'
|   |-DeclStmt 0x2df34153388 <line:415:5, col:23>
|   | |-VarDecl 0x2df34153288 <col:5, col:9> col:9 used fn_opt 'int'
|   | `-VarDecl 0x2df34153308 <col:5, col:17> col:17 used fn_nid 'int'
|   |-DeclStmt 0x2df34153420 <line:417:5, col:27>
|   | `-VarDecl 0x2df341533b8 <col:5, col:24> col:24 invalid val 'const int *'
|   |-DeclStmt 0x2df341534b8 <line:418:5, col:31>
|   | `-VarDecl 0x2df34153450 <col:5, col:28> col:28 invalid ent 'const int *'
|   |-DeclStmt 0x2df341535f0 <line:419:5, col:20>
|   | `-VarDecl 0x2df34153588 <col:5, col:19> col:10 used objtmp 'char [80]'
|   |-DeclStmt 0x2df34153688 <line:420:5, col:23>
|   | `-VarDecl 0x2df34153620 <col:5, col:17> col:17 used objbuf 'const char *'
|   |-DeclStmt 0x2df341537b8 <line:421:5, col:20>
|   | |-VarDecl 0x2df341536b8 <col:5, col:9> col:9 used outlen 'int'
|   | `-VarDecl 0x2df34153738 <col:5, col:17> col:17 used len 'int'
|   |-DeclStmt 0x2df34153970 <line:422:5, col:35>
|   | |-VarDecl 0x2df341537e8 <col:5, col:11> col:11 used sep_dn 'char *'
|   | |-VarDecl 0x2df34153868 <col:5, col:20> col:20 used sep_mv 'char *'
|   | `-VarDecl 0x2df341538e8 <col:5, col:29> col:29 used sep_eq 'char *'
|   |-DeclStmt 0x2df34153b28 <line:423:5, col:43>
|   | |-VarDecl 0x2df341539a0 <col:5, col:9> col:9 used sep_dn_len 'int'
|   | |-VarDecl 0x2df34153a20 <col:5, col:21> col:21 used sep_mv_len 'int'
|   | `-VarDecl 0x2df34153aa0 <col:5, col:33> col:33 used sep_eq_len 'int'
|   |-IfStmt 0x2df34153c40 <line:424:5, line:425:18>
|   | |-BinaryOperator 0x2df34153bb8 <line:424:9, col:18> 'int' '<'
|   | | |-ImplicitCastExpr 0x2df34153ba0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2df34153b40 <col:9> 'int' lvalue ParmVar 0x2df34152d30 'indent' 'int'
|   | | `-IntegerLiteral 0x2df34153b78 <col:18> 'int' 0
|   | `-BinaryOperator 0x2df34153c20 <line:425:9, col:18> 'int' '='
|   |   |-DeclRefExpr 0x2df34153bd8 <col:9> 'int' lvalue ParmVar 0x2df34152d30 'indent' 'int'
|   |   `-IntegerLiteral 0x2df34153bf8 <col:18> 'int' 0
|   |-BinaryOperator 0x2df34153cc8 <line:426:5, col:14> 'int' '='
|   | |-DeclRefExpr 0x2df34153c58 <col:5> 'int' lvalue Var 0x2df341536b8 'outlen' 'int'
|   | `-ImplicitCastExpr 0x2df34153cb0 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x2df34153c90 <col:14> 'int' lvalue ParmVar 0x2df34152d30 'indent' 'int'
|   |-IfStmt 0x2df34153ef8 <line:427:5, line:428:17>
|   | |-UnaryOperator 0x2df34153e90 <line:427:9, col:38> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x2df34153e10 <col:10, col:38> 'int'
|   | |   |-ImplicitCastExpr 0x2df34153df8 <col:10> 'int (*)(char_io *, void *, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2df34153ce8 <col:10> 'int (char_io *, void *, int)' Function 0x2df341526d0 'do_indent' 'int (char_io *, void *, int)'
|   | |   |-ImplicitCastExpr 0x2df34153e48 <col:20> 'char_io *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x2df34153d08 <col:20> 'char_io *' lvalue ParmVar 0x2df34152bb0 'io_ch' 'char_io *'
|   | |   |-ImplicitCastExpr 0x2df34153e60 <col:27> 'void *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x2df34153d40 <col:27> 'void *' lvalue ParmVar 0x2df34152c30 'arg' 'void *'
|   | |   `-ImplicitCastExpr 0x2df34153e78 <col:32> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x2df34153d78 <col:32> 'int' lvalue ParmVar 0x2df34152d30 'indent' 'int'
|   | `-ReturnStmt 0x2df34153ee8 <line:428:9, col:17>
|   |   `-UnaryOperator 0x2df34153ed0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x2df34153ea8 <col:17> 'int' 1
|   |-IfStmt 0x2df3414cba8 <line:465:5, line:471:5> has_else
|   | |-OpaqueValueExpr 0x2df3414cb90 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x2df3414ca70 <line:465:33, line:468:5>
|   | | |-BinaryOperator 0x2df3414c9d0 <line:466:9, col:18> 'char *' '='
|   | | | |-DeclRefExpr 0x2df3414c960 <col:9> 'char *' lvalue Var 0x2df341538e8 'sep_eq' 'char *'
|   | | | `-ImplicitCastExpr 0x2df3414c9b8 <col:18> 'char *' <ArrayToPointerDecay>
|   | | |   `-StringLiteral 0x2df3414c998 <col:18> 'char [4]' lvalue " = "
|   | | `-BinaryOperator 0x2df3414ca50 <line:467:9, col:22> 'int' '='
|   | |   |-DeclRefExpr 0x2df3414c9f0 <col:9> 'int' lvalue Var 0x2df34153aa0 'sep_eq_len' 'int'
|   | |   `-IntegerLiteral 0x2df3414ca28 <col:22> 'int' 3
|   | `-CompoundStmt 0x2df3414cb70 <line:468:12, line:471:5>
|   |   |-BinaryOperator 0x2df3414cae8 <line:469:9, col:18> 'char *' '='
|   |   | |-DeclRefExpr 0x2df3414ca90 <col:9> 'char *' lvalue Var 0x2df341538e8 'sep_eq' 'char *'
|   |   | `-ImplicitCastExpr 0x2df3414cad0 <col:18> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x2df3414cab0 <col:18> 'char [2]' lvalue "="
|   |   `-BinaryOperator 0x2df3414cb50 <line:470:9, col:22> 'int' '='
|   |     |-DeclRefExpr 0x2df3414cb08 <col:9> 'int' lvalue Var 0x2df34153aa0 'sep_eq_len' 'int'
|   |     `-IntegerLiteral 0x2df3414cb28 <col:22> 'int' 1
|   |-ForStmt 0x2df3414e7a8 <line:476:5, line:543:5>
|   | |-BinaryOperator 0x2df3414cdd0 <line:476:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x2df3414cd70 <col:10> 'int' lvalue Var 0x2df34153008 'i' 'int'
|   | | `-IntegerLiteral 0x2df3414cda8 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2df3414ce60 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x2df3414ce30 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2df3414cdf0 <col:17> 'int' lvalue Var 0x2df34153008 'i' 'int'
|   | | `-ImplicitCastExpr 0x2df3414ce48 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2df3414ce10 <col:21> 'int' lvalue Var 0x2df341531c8 'cnt' 'int'
|   | |-UnaryOperator 0x2df3414cea0 <col:26, col:27> 'int' postfix '++'
|   | | `-DeclRefExpr 0x2df3414ce80 <col:26> 'int' lvalue Var 0x2df34153008 'i' 'int'
|   | `-CompoundStmt 0x2df3414e770 <col:31, line:543:5>
|   |   |-IfStmt 0x2df34154aa0 <line:481:9, line:494:9>
|   |   | |-BinaryOperator 0x2df3414d190 <line:481:13, col:22> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x2df3414d178 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2df3414d100 <col:13> 'int' lvalue Var 0x2df34153088 'prev' 'int'
|   |   | | `-UnaryOperator 0x2df3414d160 <col:21, col:22> 'int' prefix '-'
|   |   | |   `-IntegerLiteral 0x2df3414d138 <col:22> 'int' 1
|   |   | `-CompoundStmt 0x2df34154a88 <col:25, line:494:9>
|   |   |   `-IfStmt 0x2df34154a60 <line:482:13, line:493:13> has_else
|   |   |     |-OpaqueValueExpr 0x2df34154a48 <<invalid sloc>> '_Bool'
|   |   |     |-CompoundStmt 0x2df341545a0 <line:482:51, line:486:13>
|   |   |     | |-IfStmt 0x2df34154500 <line:483:17, line:484:29>
|   |   |     | | |-UnaryOperator 0x2df3414d410 <line:483:21, col:51> 'int' prefix '!' cannot overflow
|   |   |     | | | `-CallExpr 0x2df3414d378 <col:22, col:51> 'int'
|   |   |     | | |   |-ImplicitCastExpr 0x2df3414d360 <col:22> 'char_io *' <LValueToRValue>
|   |   |     | | |   | `-DeclRefExpr 0x2df3414d2e0 <col:22> 'char_io *' lvalue ParmVar 0x2df34152bb0 'io_ch' 'char_io *'
|   |   |     | | |   |-ImplicitCastExpr 0x2df3414d3b0 <col:28> 'void *' <LValueToRValue>
|   |   |     | | |   | `-DeclRefExpr 0x2df3414d300 <col:28> 'void *' lvalue ParmVar 0x2df34152c30 'arg' 'void *'
|   |   |     | | |   |-ImplicitCastExpr 0x2df3414d3e0 <col:33> 'const void *' <BitCast>
|   |   |     | | |   | `-ImplicitCastExpr 0x2df3414d3c8 <col:33> 'char *' <LValueToRValue>
|   |   |     | | |   |   `-DeclRefExpr 0x2df3414d320 <col:33> 'char *' lvalue Var 0x2df34153868 'sep_mv' 'char *'
|   |   |     | | |   `-ImplicitCastExpr 0x2df3414d3f8 <col:41> 'int' <LValueToRValue>
|   |   |     | | |     `-DeclRefExpr 0x2df3414d340 <col:41> 'int' lvalue Var 0x2df34153a20 'sep_mv_len' 'int'
|   |   |     | | `-ReturnStmt 0x2df3414d468 <line:484:21, col:29>
|   |   |     | |   `-UnaryOperator 0x2df3414d450 <col:28, col:29> 'int' prefix '-'
|   |   |     | |     `-IntegerLiteral 0x2df3414d428 <col:29> 'int' 1
|   |   |     | `-CompoundAssignOperator 0x2df34154570 <line:485:17, col:27> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |   |-DeclRefExpr 0x2df34154518 <col:17> 'int' lvalue Var 0x2df341536b8 'outlen' 'int'
|   |   |     |   `-ImplicitCastExpr 0x2df34154558 <col:27> 'int' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x2df34154538 <col:27> 'int' lvalue Var 0x2df34153a20 'sep_mv_len' 'int'
|   |   |     `-CompoundStmt 0x2df34154a18 <line:486:20, line:493:13>
|   |   |       |-IfStmt 0x2df34154758 <line:487:17, line:488:29>
|   |   |       | |-UnaryOperator 0x2df341546f0 <line:487:21, col:51> 'int' prefix '!' cannot overflow
|   |   |       | | `-CallExpr 0x2df34154658 <col:22, col:51> 'int'
|   |   |       | |   |-ImplicitCastExpr 0x2df34154640 <col:22> 'char_io *' <LValueToRValue>
|   |   |       | |   | `-DeclRefExpr 0x2df341545c0 <col:22> 'char_io *' lvalue ParmVar 0x2df34152bb0 'io_ch' 'char_io *'
|   |   |       | |   |-ImplicitCastExpr 0x2df34154690 <col:28> 'void *' <LValueToRValue>
|   |   |       | |   | `-DeclRefExpr 0x2df341545e0 <col:28> 'void *' lvalue ParmVar 0x2df34152c30 'arg' 'void *'
|   |   |       | |   |-ImplicitCastExpr 0x2df341546c0 <col:33> 'const void *' <BitCast>
|   |   |       | |   | `-ImplicitCastExpr 0x2df341546a8 <col:33> 'char *' <LValueToRValue>
|   |   |       | |   |   `-DeclRefExpr 0x2df34154600 <col:33> 'char *' lvalue Var 0x2df341537e8 'sep_dn' 'char *'
|   |   |       | |   `-ImplicitCastExpr 0x2df341546d8 <col:41> 'int' <LValueToRValue>
|   |   |       | |     `-DeclRefExpr 0x2df34154620 <col:41> 'int' lvalue Var 0x2df341539a0 'sep_dn_len' 'int'
|   |   |       | `-ReturnStmt 0x2df34154748 <line:488:21, col:29>
|   |   |       |   `-UnaryOperator 0x2df34154730 <col:28, col:29> 'int' prefix '-'
|   |   |       |     `-IntegerLiteral 0x2df34154708 <col:29> 'int' 1
|   |   |       |-CompoundAssignOperator 0x2df341547c8 <line:489:17, col:27> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |       | |-DeclRefExpr 0x2df34154770 <col:17> 'int' lvalue Var 0x2df341536b8 'outlen' 'int'
|   |   |       | `-ImplicitCastExpr 0x2df341547b0 <col:27> 'int' <LValueToRValue>
|   |   |       |   `-DeclRefExpr 0x2df34154790 <col:27> 'int' lvalue Var 0x2df341539a0 'sep_dn_len' 'int'
|   |   |       |-IfStmt 0x2df34154978 <line:490:17, line:491:29>
|   |   |       | |-UnaryOperator 0x2df34154910 <line:490:21, col:50> 'int' prefix '!' cannot overflow
|   |   |       | | `-CallExpr 0x2df34154890 <col:22, col:50> 'int'
|   |   |       | |   |-ImplicitCastExpr 0x2df34154878 <col:22> 'int (*)(char_io *, void *, int)' <FunctionToPointerDecay>
|   |   |       | |   | `-DeclRefExpr 0x2df341547f8 <col:22> 'int (char_io *, void *, int)' Function 0x2df341526d0 'do_indent' 'int (char_io *, void *, int)'
|   |   |       | |   |-ImplicitCastExpr 0x2df341548c8 <col:32> 'char_io *' <LValueToRValue>
|   |   |       | |   | `-DeclRefExpr 0x2df34154818 <col:32> 'char_io *' lvalue ParmVar 0x2df34152bb0 'io_ch' 'char_io *'
|   |   |       | |   |-ImplicitCastExpr 0x2df341548e0 <col:39> 'void *' <LValueToRValue>
|   |   |       | |   | `-DeclRefExpr 0x2df34154838 <col:39> 'void *' lvalue ParmVar 0x2df34152c30 'arg' 'void *'
|   |   |       | |   `-ImplicitCastExpr 0x2df341548f8 <col:44> 'int' <LValueToRValue>
|   |   |       | |     `-DeclRefExpr 0x2df34154858 <col:44> 'int' lvalue ParmVar 0x2df34152d30 'indent' 'int'
|   |   |       | `-ReturnStmt 0x2df34154968 <line:491:21, col:29>
|   |   |       |   `-UnaryOperator 0x2df34154950 <col:28, col:29> 'int' prefix '-'
|   |   |       |     `-IntegerLiteral 0x2df34154928 <col:29> 'int' 1
|   |   |       `-CompoundAssignOperator 0x2df341549e8 <line:492:17, col:27> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |         |-DeclRefExpr 0x2df34154990 <col:17> 'int' lvalue Var 0x2df341536b8 'outlen' 'int'
|   |   |         `-ImplicitCastExpr 0x2df341549d0 <col:27> 'int' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x2df341549b0 <col:27> 'int' lvalue ParmVar 0x2df34152d30 'indent' 'int'
|   |   |-IfStmt 0x2df3414e388 <line:499:9, line:528:9>
|   |   | |-OpaqueValueExpr 0x2df3414e370 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x2df3414e328 <line:499:40, line:528:9>
|   |   |   |-DeclStmt 0x2df34154f98 <line:500:13, col:32>
|   |   |   | |-VarDecl 0x2df34154e98 <col:13, col:17> col:17 used objlen 'int'
|   |   |   | `-VarDecl 0x2df34154f18 <col:13, col:25> col:25 used fld_len 'int'
|   |   |   |-IfStmt 0x2df3414d9b0 <line:501:13, line:516:13> has_else
|   |   |   | |-OpaqueValueExpr 0x2df3414d998 <<invalid sloc>> '_Bool'
|   |   |   | |-CompoundStmt 0x2df341552e8 <line:501:70, line:505:13>
|   |   |   | | |-BinaryOperator 0x2df34155220 <line:503:17, col:27> 'int' '='
|   |   |   | | | |-DeclRefExpr 0x2df341551c0 <col:17> 'int' lvalue Var 0x2df34154f18 'fld_len' 'int'
|   |   |   | | | `-IntegerLiteral 0x2df341551f8 <col:27> 'int' 0
|   |   |   | | `-BinaryOperator 0x2df341552c8 <line:504:17, col:26> 'const char *' '='
|   |   |   | |   |-DeclRefExpr 0x2df34155240 <col:17> 'const char *' lvalue Var 0x2df34153620 'objbuf' 'const char *'
|   |   |   | |   `-ImplicitCastExpr 0x2df341552b0 <col:26> 'const char *' <NoOp>
|   |   |   | |     `-ImplicitCastExpr 0x2df34155298 <col:26> 'char *' <ArrayToPointerDecay>
|   |   |   | |       `-DeclRefExpr 0x2df34155278 <col:26> 'char [80]' lvalue Var 0x2df34153588 'objtmp' 'char [80]'
|   |   |   | `-CompoundStmt 0x2df3414d980 <line:505:20, line:516:13>
|   |   |   |   `-IfStmt 0x2df3414d958 <line:506:17, line:515:17> has_else
|   |   |   |     |-OpaqueValueExpr 0x2df3414d940 <<invalid sloc>> '_Bool'
|   |   |   |     |-CompoundStmt 0x2df3414d508 <line:506:46, line:509:17>
|   |   |   |     | |-BinaryOperator 0x2df34155370 <line:507:21, line:409:25> 'int' '='
|   |   |   |     | | |-DeclRefExpr 0x2df34155328 <line:507:21> 'int' lvalue Var 0x2df34154f18 'fld_len' 'int'
|   |   |   |     | | `-IntegerLiteral 0x2df34155348 <line:409:25> 'int' 10
|   |   |   |     | `-BinaryOperator 0x2df3414d4e8 <line:508:21, col:47> 'const char *' '='
|   |   |   |     |   |-DeclRefExpr 0x2df34155390 <col:21> 'const char *' lvalue Var 0x2df34153620 'objbuf' 'const char *'
|   |   |   |     |   `-ImplicitCastExpr 0x2df3414d4d0 <col:30, col:47> 'const char *' <IntegralToPointer>
|   |   |   |     |     `-CallExpr 0x2df3414d490 <col:30, col:47> 'int'
|   |   |   |     |       |-ImplicitCastExpr 0x2df341554e0 <col:30> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |     |       | `-DeclRefExpr 0x2df341554a0 <col:30> 'int ()' Function 0x2df341553d8 'OBJ_nid2sn' 'int ()'
|   |   |   |     |       `-ImplicitCastExpr 0x2df3414d4b8 <col:41> 'int' <LValueToRValue>
|   |   |   |     |         `-DeclRefExpr 0x2df341554c0 <col:41> 'int' lvalue Var 0x2df34153308 'fn_nid' 'int'
|   |   |   |     `-IfStmt 0x2df3414d918 <line:509:24, line:515:17> has_else
|   |   |   |       |-OpaqueValueExpr 0x2df3414d900 <<invalid sloc>> '_Bool'
|   |   |   |       |-CompoundStmt 0x2df3414d790 <line:509:53, line:512:17>
|   |   |   |       | |-BinaryOperator 0x2df3414d590 <line:510:21, line:408:25> 'int' '='
|   |   |   |       | | |-DeclRefExpr 0x2df3414d548 <line:510:21> 'int' lvalue Var 0x2df34154f18 'fld_len' 'int'
|   |   |   |       | | `-IntegerLiteral 0x2df3414d568 <line:408:25> 'int' 25
|   |   |   |       | `-BinaryOperator 0x2df3414d770 <line:511:21, col:47> 'const char *' '='
|   |   |   |       |   |-DeclRefExpr 0x2df3414d5b0 <col:21> 'const char *' lvalue Var 0x2df34153620 'objbuf' 'const char *'
|   |   |   |       |   `-ImplicitCastExpr 0x2df3414d758 <col:30, col:47> 'const char *' <IntegralToPointer>
|   |   |   |       |     `-CallExpr 0x2df3414d718 <col:30, col:47> 'int'
|   |   |   |       |       |-ImplicitCastExpr 0x2df3414d700 <col:30> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |       |       | `-DeclRefExpr 0x2df3414d6c0 <col:30> 'int ()' Function 0x2df3414d5f8 'OBJ_nid2ln' 'int ()'
|   |   |   |       |       `-ImplicitCastExpr 0x2df3414d740 <col:41> 'int' <LValueToRValue>
|   |   |   |       |         `-DeclRefExpr 0x2df3414d6e0 <col:41> 'int' lvalue Var 0x2df34153308 'fn_nid' 'int'
|   |   |   |       `-CompoundStmt 0x2df3414d8e0 <line:512:24, line:515:17>
|   |   |   |         |-BinaryOperator 0x2df3414d7f8 <line:513:21, col:31> 'int' '='
|   |   |   |         | |-DeclRefExpr 0x2df3414d7b0 <col:21> 'int' lvalue Var 0x2df34154f18 'fld_len' 'int'
|   |   |   |         | `-IntegerLiteral 0x2df3414d7d0 <col:31> 'int' 0
|   |   |   |         `-BinaryOperator 0x2df3414d8c0 <line:514:21, col:30> 'const char *' '='
|   |   |   |           |-DeclRefExpr 0x2df3414d818 <col:21> 'const char *' lvalue Var 0x2df34153620 'objbuf' 'const char *'
|   |   |   |           `-ImplicitCastExpr 0x2df3414d8a8 <col:30> 'const char *' <NoOp>
|   |   |   |             `-ImplicitCastExpr 0x2df3414d890 <col:30> 'char *' <ArrayToPointerDecay>
|   |   |   |               `-StringLiteral 0x2df3414d878 <col:30> 'char [1]' lvalue ""
|   |   |   |-BinaryOperator 0x2df3414dad8 <line:517:13, col:35> 'int' '='
|   |   |   | |-DeclRefExpr 0x2df3414d9d8 <col:13> 'int' lvalue Var 0x2df34154e98 'objlen' 'int'
|   |   |   | `-ImplicitCastExpr 0x2df3414dac0 <col:22, col:35> 'int' <IntegralCast>
|   |   |   |   `-CallExpr 0x2df3414da80 <col:22, col:35> 'unsigned long long'
|   |   |   |     |-ImplicitCastExpr 0x2df3414da68 <col:22> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x2df3414da10 <col:22> 'unsigned long long (const char *)' Function 0x2df34123e20 'strlen' 'unsigned long long (const char *)'
|   |   |   |     `-ImplicitCastExpr 0x2df3414daa8 <col:29> 'const char *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x2df3414da30 <col:29> 'const char *' lvalue Var 0x2df34153620 'objbuf' 'const char *'
|   |   |   |-IfStmt 0x2df3414dc90 <line:518:13, line:519:25>
|   |   |   | |-UnaryOperator 0x2df3414dc28 <line:518:17, col:43> 'int' prefix '!' cannot overflow
|   |   |   | | `-CallExpr 0x2df3414db90 <col:18, col:43> 'int'
|   |   |   | |   |-ImplicitCastExpr 0x2df3414db78 <col:18> 'char_io *' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x2df3414daf8 <col:18> 'char_io *' lvalue ParmVar 0x2df34152bb0 'io_ch' 'char_io *'
|   |   |   | |   |-ImplicitCastExpr 0x2df3414dbc8 <col:24> 'void *' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x2df3414db18 <col:24> 'void *' lvalue ParmVar 0x2df34152c30 'arg' 'void *'
|   |   |   | |   |-ImplicitCastExpr 0x2df3414dbf8 <col:29> 'const void *' <BitCast>
|   |   |   | |   | `-ImplicitCastExpr 0x2df3414dbe0 <col:29> 'const char *' <LValueToRValue>
|   |   |   | |   |   `-DeclRefExpr 0x2df3414db38 <col:29> 'const char *' lvalue Var 0x2df34153620 'objbuf' 'const char *'
|   |   |   | |   `-ImplicitCastExpr 0x2df3414dc10 <col:37> 'int' <LValueToRValue>
|   |   |   | |     `-DeclRefExpr 0x2df3414db58 <col:37> 'int' lvalue Var 0x2df34154e98 'objlen' 'int'
|   |   |   | `-ReturnStmt 0x2df3414dc80 <line:519:17, col:25>
|   |   |   |   `-UnaryOperator 0x2df3414dc68 <col:24, col:25> 'int' prefix '-'
|   |   |   |     `-IntegerLiteral 0x2df3414dc40 <col:25> 'int' 1
|   |   |   |-IfStmt 0x2df3414e080 <line:520:13, line:524:13>
|   |   |   | |-OpaqueValueExpr 0x2df3414e068 <<invalid sloc>> '_Bool'
|   |   |   | `-CompoundStmt 0x2df3414e048 <line:520:67, line:524:13>
|   |   |   |   |-IfStmt 0x2df3414df50 <line:521:17, line:522:29>
|   |   |   |   | |-UnaryOperator 0x2df3414dee8 <line:521:21, col:60> 'int' prefix '!' cannot overflow
|   |   |   |   | | `-CallExpr 0x2df3414de80 <col:22, col:60> 'int'
|   |   |   |   | |   |-ImplicitCastExpr 0x2df3414de68 <col:22> 'int (*)(char_io *, void *, int)' <FunctionToPointerDecay>
|   |   |   |   | |   | `-DeclRefExpr 0x2df3414dd78 <col:22> 'int (char_io *, void *, int)' Function 0x2df341526d0 'do_indent' 'int (char_io *, void *, int)'
|   |   |   |   | |   |-ImplicitCastExpr 0x2df3414deb8 <col:32> 'char_io *' <LValueToRValue>
|   |   |   |   | |   | `-DeclRefExpr 0x2df3414dd98 <col:32> 'char_io *' lvalue ParmVar 0x2df34152bb0 'io_ch' 'char_io *'
|   |   |   |   | |   |-ImplicitCastExpr 0x2df3414ded0 <col:39> 'void *' <LValueToRValue>
|   |   |   |   | |   | `-DeclRefExpr 0x2df3414ddb8 <col:39> 'void *' lvalue ParmVar 0x2df34152c30 'arg' 'void *'
|   |   |   |   | |   `-BinaryOperator 0x2df3414de48 <col:44, col:54> 'int' '-'
|   |   |   |   | |     |-ImplicitCastExpr 0x2df3414de18 <col:44> 'int' <LValueToRValue>
|   |   |   |   | |     | `-DeclRefExpr 0x2df3414ddd8 <col:44> 'int' lvalue Var 0x2df34154f18 'fld_len' 'int'
|   |   |   |   | |     `-ImplicitCastExpr 0x2df3414de30 <col:54> 'int' <LValueToRValue>
|   |   |   |   | |       `-DeclRefExpr 0x2df3414ddf8 <col:54> 'int' lvalue Var 0x2df34154e98 'objlen' 'int'
|   |   |   |   | `-ReturnStmt 0x2df3414df40 <line:522:21, col:29>
|   |   |   |   |   `-UnaryOperator 0x2df3414df28 <col:28, col:29> 'int' prefix '-'
|   |   |   |   |     `-IntegerLiteral 0x2df3414df00 <col:29> 'int' 1
|   |   |   |   `-CompoundAssignOperator 0x2df3414e018 <line:523:17, col:37> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |     |-DeclRefExpr 0x2df3414df68 <col:17> 'int' lvalue Var 0x2df341536b8 'outlen' 'int'
|   |   |   |     `-BinaryOperator 0x2df3414dff8 <col:27, col:37> 'int' '-'
|   |   |   |       |-ImplicitCastExpr 0x2df3414dfc8 <col:27> 'int' <LValueToRValue>
|   |   |   |       | `-DeclRefExpr 0x2df3414df88 <col:27> 'int' lvalue Var 0x2df34154f18 'fld_len' 'int'
|   |   |   |       `-ImplicitCastExpr 0x2df3414dfe0 <col:37> 'int' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x2df3414dfa8 <col:37> 'int' lvalue Var 0x2df34154e98 'objlen' 'int'
|   |   |   |-IfStmt 0x2df3414e230 <line:525:13, line:526:25>
|   |   |   | |-UnaryOperator 0x2df3414e1c8 <line:525:17, col:47> 'int' prefix '!' cannot overflow
|   |   |   | | `-CallExpr 0x2df3414e130 <col:18, col:47> 'int'
|   |   |   | |   |-ImplicitCastExpr 0x2df3414e118 <col:18> 'char_io *' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x2df3414e098 <col:18> 'char_io *' lvalue ParmVar 0x2df34152bb0 'io_ch' 'char_io *'
|   |   |   | |   |-ImplicitCastExpr 0x2df3414e168 <col:24> 'void *' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x2df3414e0b8 <col:24> 'void *' lvalue ParmVar 0x2df34152c30 'arg' 'void *'
|   |   |   | |   |-ImplicitCastExpr 0x2df3414e198 <col:29> 'const void *' <BitCast>
|   |   |   | |   | `-ImplicitCastExpr 0x2df3414e180 <col:29> 'char *' <LValueToRValue>
|   |   |   | |   |   `-DeclRefExpr 0x2df3414e0d8 <col:29> 'char *' lvalue Var 0x2df341538e8 'sep_eq' 'char *'
|   |   |   | |   `-ImplicitCastExpr 0x2df3414e1b0 <col:37> 'int' <LValueToRValue>
|   |   |   | |     `-DeclRefExpr 0x2df3414e0f8 <col:37> 'int' lvalue Var 0x2df34153aa0 'sep_eq_len' 'int'
|   |   |   | `-ReturnStmt 0x2df3414e220 <line:526:17, col:25>
|   |   |   |   `-UnaryOperator 0x2df3414e208 <col:24, col:25> 'int' prefix '-'
|   |   |   |     `-IntegerLiteral 0x2df3414e1e0 <col:25> 'int' 1
|   |   |   `-CompoundAssignOperator 0x2df3414e2f8 <line:527:13, col:32> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |-DeclRefExpr 0x2df3414e248 <col:13> 'int' lvalue Var 0x2df341536b8 'outlen' 'int'
|   |   |     `-BinaryOperator 0x2df3414e2d8 <col:23, col:32> 'int' '+'
|   |   |       |-ImplicitCastExpr 0x2df3414e2a8 <col:23> 'int' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x2df3414e268 <col:23> 'int' lvalue Var 0x2df34154e98 'objlen' 'int'
|   |   |       `-ImplicitCastExpr 0x2df3414e2c0 <col:32> 'int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x2df3414e288 <col:32> 'int' lvalue Var 0x2df34153aa0 'sep_eq_len' 'int'
|   |   |-IfStmt 0x2df3414e4b8 <line:534:9, line:537:23> has_else
|   |   | |-OpaqueValueExpr 0x2df3414e4a0 <<invalid sloc>> '_Bool'
|   |   | |-NullStmt 0x2df3414e480 <line:535:13>
|   |   | `-BinaryOperator 0x2df3414e460 <line:537:13, col:23> 'int' '='
|   |   |   |-DeclRefExpr 0x2df3414e418 <col:13> 'int' lvalue Var 0x2df34153148 'orflags' 'int'
|   |   |   `-IntegerLiteral 0x2df3414e438 <col:23> 'int' 0
|   |   |-IfStmt 0x2df3414e6d0 <line:540:9, line:541:21>
|   |   | |-BinaryOperator 0x2df3414e660 <line:540:13, col:19> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x2df3414e648 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2df3414e600 <col:13> 'int' lvalue Var 0x2df34153738 'len' 'int'
|   |   | | `-IntegerLiteral 0x2df3414e620 <col:19> 'int' 0
|   |   | `-ReturnStmt 0x2df3414e6c0 <line:541:13, col:21>
|   |   |   `-UnaryOperator 0x2df3414e6a8 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x2df3414e680 <col:21> 'int' 1
|   |   `-CompoundAssignOperator 0x2df3414e740 <line:542:9, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x2df3414e6e8 <col:9> 'int' lvalue Var 0x2df341536b8 'outlen' 'int'
|   |     `-ImplicitCastExpr 0x2df3414e728 <col:19> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x2df3414e708 <col:19> 'int' lvalue Var 0x2df34153738 'len' 'int'
|   `-ReturnStmt 0x2df3414e818 <line:544:5, col:12>
|     `-ImplicitCastExpr 0x2df3414e800 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2df3414e7e0 <col:12> 'int' lvalue Var 0x2df341536b8 'outlen' 'int'
|-FunctionDecl 0x2df3414eb40 <line:549:1, line:555:1> line:549:5 invalid X509_NAME_print_ex 'int (int *, const int *, int, unsigned long)'
| |-ParmVarDecl 0x2df3414e8c8 <col:24, col:29> col:29 invalid out 'int *'
| |-ParmVarDecl 0x2df3414e948 <col:34, col:51> col:51 invalid nm 'const int *'
| |-ParmVarDecl 0x2df3414e9c8 <col:55, col:59> col:59 used indent 'int'
| |-ParmVarDecl 0x2df3414ea48 <line:550:24, col:38> col:38 used flags 'unsigned long'
| `-CompoundStmt 0x2df3414edf8 <line:551:1, line:555:1>
|-FunctionDecl 0x2df3414f0e0 <line:558:1, line:572:1> line:558:5 invalid X509_NAME_print_ex_fp 'int (FILE *, const int *, int, unsigned long)'
| |-ParmVarDecl 0x2df3414ee18 <col:27, col:33> col:33 used fp 'FILE *'
| |-ParmVarDecl 0x2df3414ee98 <col:37, col:54> col:54 invalid nm 'const int *'
| |-ParmVarDecl 0x2df3414ef18 <col:58, col:62> col:62 used indent 'int'
| |-ParmVarDecl 0x2df3414ef98 <line:559:27, col:41> col:41 used flags 'unsigned long'
| `-CompoundStmt 0x2df341567a8 <line:560:1, line:572:1>
|   `-IfStmt 0x2df34156710 <line:561:5, line:570:5>
|     |-OpaqueValueExpr 0x2df341566f8 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x2df341566d0 <line:561:34, line:570:5>
|       |-DeclStmt 0x2df3414f270 <line:563:9, col:16>
|       | `-VarDecl 0x2df3414f208 <col:9, col:13> col:13 used ret 'int'
|       |-IfStmt 0x2df3414f438 <line:565:9, line:566:21>
|       | |-OpaqueValueExpr 0x2df3414f420 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x2df3414f410 <col:13, col:21>
|       |   `-UnaryOperator 0x2df3414f3f8 <col:20, col:21> 'int' prefix '-'
|       |     `-IntegerLiteral 0x2df3414f3d0 <col:21> 'int' 1
|       `-ReturnStmt 0x2df341566c0 <line:569:9, col:16>
|         `-ImplicitCastExpr 0x2df341566a8 <col:16> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x2df34156688 <col:16> 'int' lvalue Var 0x2df3414f208 'ret' 'int'
|-FunctionDecl 0x2df341569c0 <line:575:1, line:578:1> line:575:5 invalid ASN1_STRING_print_ex 'int (int *, const int *, unsigned long)'
| |-ParmVarDecl 0x2df341567d8 <col:26, col:31> col:31 invalid out 'int *'
| |-ParmVarDecl 0x2df34156858 <col:36, col:55> col:55 invalid str 'const int *'
| |-ParmVarDecl 0x2df341568d8 <col:60, col:74> col:74 used flags 'unsigned long'
| `-CompoundStmt 0x2df34156ae8 <line:576:1, line:578:1>
|-FunctionDecl 0x2df34156d30 <line:581:1, line:584:1> line:581:5 invalid ASN1_STRING_print_ex_fp 'int (FILE *, const int *, unsigned long)'
| |-ParmVarDecl 0x2df34156b08 <col:29, col:35> col:35 used fp 'FILE *'
| |-ParmVarDecl 0x2df34156b88 <col:39, col:58> col:58 invalid str 'const int *'
| |-ParmVarDecl 0x2df34156c08 <col:63, col:77> col:77 used flags 'unsigned long'
| `-CompoundStmt 0x2df34156e90 <line:582:1, line:584:1>
`-FunctionDecl 0x2df34157020 <line:592:1, line:615:1> line:592:5 invalid ASN1_STRING_to_UTF8 'int (unsigned char **, const int *)'
  |-ParmVarDecl 0x2df34156ec0 <col:25, col:41> col:41 used out 'unsigned char **'
  |-ParmVarDecl 0x2df34156f40 <col:46, col:65> col:65 invalid in 'const int *'
  `-CompoundStmt 0x2df34159b10 <line:593:1, line:615:1>
    |-DeclStmt 0x2df34157288 <line:595:5, col:26>
    | |-VarDecl 0x2df34157100 <col:5, col:9> col:9 used mbflag 'int'
    | |-VarDecl 0x2df34157180 <col:5, col:17> col:17 used type 'int'
    | `-VarDecl 0x2df34157200 <col:5, col:23> col:23 used ret 'int'
    |-IfStmt 0x2df34157308 <line:596:5, line:597:17>
    | |-OpaqueValueExpr 0x2df341572f0 <<invalid sloc>> '_Bool'
    | `-ReturnStmt 0x2df341572e0 <col:9, col:17>
    |   `-UnaryOperator 0x2df341572c8 <col:16, col:17> 'int' prefix '-'
    |     `-IntegerLiteral 0x2df341572a0 <col:17> 'int' 1
    |-IfStmt 0x2df34157508 <line:599:5, line:600:17>
    | |-BinaryOperator 0x2df34157498 <line:599:9, col:33> 'int' '||'
    | | |-ParenExpr 0x2df341573d8 <col:9, col:18> 'int'
    | | | `-BinaryOperator 0x2df341573b8 <col:10, col:17> 'int' '<'
    | | |   |-ImplicitCastExpr 0x2df341573a0 <col:10> 'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x2df34157358 <col:10> 'int' lvalue Var 0x2df34157180 'type' 'int'
    | | |   `-IntegerLiteral 0x2df34157378 <col:17> 'int' 0
    | | `-ParenExpr 0x2df34157478 <col:23, col:33> 'int'
    | |   `-BinaryOperator 0x2df34157458 <col:24, col:31> 'int' '>'
    | |     |-ImplicitCastExpr 0x2df34157440 <col:24> 'int' <LValueToRValue>
    | |     | `-DeclRefExpr 0x2df341573f8 <col:24> 'int' lvalue Var 0x2df34157180 'type' 'int'
    | |     `-IntegerLiteral 0x2df34157418 <col:31> 'int' 30
    | `-ReturnStmt 0x2df341574f8 <line:600:9, col:17>
    |   `-UnaryOperator 0x2df341574e0 <col:16, col:17> 'int' prefix '-'
    |     `-IntegerLiteral 0x2df341574b8 <col:17> 'int' 1
    |-BinaryOperator 0x2df34159648 <line:601:5, col:28> 'int' '='
    | |-DeclRefExpr 0x2df34159550 <col:5> 'int' lvalue Var 0x2df34157100 'mbflag' 'int'
    | `-ImplicitCastExpr 0x2df34159630 <col:14, col:28> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x2df34159618 <col:14, col:28> 'signed char' <LValueToRValue>
    |     `-ArraySubscriptExpr 0x2df341595f8 <col:14, col:28> 'const signed char' lvalue
    |       |-ImplicitCastExpr 0x2df341595c8 <col:14> 'const signed char *' <ArrayToPointerDecay>
    |       | `-DeclRefExpr 0x2df34159588 <col:14> 'const signed char [31]' lvalue Var 0x2df34144e50 'tag2nbyte' 'const signed char [31]'
    |       `-ImplicitCastExpr 0x2df341595e0 <col:24> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x2df341595a8 <col:24> 'int' lvalue Var 0x2df34157180 'type' 'int'
    |-IfStmt 0x2df34159750 <line:602:5, line:603:17>
    | |-BinaryOperator 0x2df341596e0 <line:602:9, col:20> 'int' '=='
    | | |-ImplicitCastExpr 0x2df341596c8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x2df34159668 <col:9> 'int' lvalue Var 0x2df34157100 'mbflag' 'int'
    | | `-UnaryOperator 0x2df341596b0 <col:19, col:20> 'int' prefix '-'
    | |   `-IntegerLiteral 0x2df34159688 <col:20> 'int' 1
    | `-ReturnStmt 0x2df34159740 <line:603:9, col:17>
    |   `-UnaryOperator 0x2df34159728 <col:16, col:17> 'int' prefix '-'
    |     `-IntegerLiteral 0x2df34159700 <col:17> 'int' 1
    `-IfStmt 0x2df34159a90 <line:611:5, line:612:16>
      |-BinaryOperator 0x2df34159a28 <line:611:9, col:15> 'int' '<'
      | |-ImplicitCastExpr 0x2df34159a10 <col:9> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x2df341599c8 <col:9> 'int' lvalue Var 0x2df34157200 'ret' 'int'
      | `-IntegerLiteral 0x2df341599e8 <col:15> 'int' 0
      `-ReturnStmt 0x2df34159a80 <line:612:9, col:16>
        `-ImplicitCastExpr 0x2df34159a68 <col:16> 'int' <LValueToRValue>
          `-DeclRefExpr 0x2df34159a48 <col:16> 'int' lvalue Var 0x2df34157200 'ret' 'int'
