TranslationUnitDecl 0x12e2dd34968 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12e2dd35200 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12e2dd34f00 '__int128'
|-TypedefDecl 0x12e2dd35270 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12e2dd34f20 'unsigned __int128'
|-TypedefDecl 0x12e2dd355a8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12e2dd35360 'struct __NSConstantString_tag'
|   `-Record 0x12e2dd352c8 '__NSConstantString_tag'
|-TypedefDecl 0x12e2dd35618 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x12e2dd34b40 'unsigned long long'
|-TypedefDecl 0x12e2dd356b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12e2dd35670 'char *'
|   `-BuiltinType 0x12e2dd34a00 'char'
|-TypedefDecl 0x12e2dd35720 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12e2dd35670 'char *'
|   `-BuiltinType 0x12e2dd34a00 'char'
|-TypedefDecl 0x12e2dd357e0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x12e2dd34b40 'unsigned long long'
|-TypedefDecl 0x12e2dd35850 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x12e2dd35670 'char *'
|   `-BuiltinType 0x12e2dd34a00 'char'
|-FunctionDecl 0x12e2f7c6390 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x12e2f7c6430 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x12e2f7c64a0 <col:21> Implicit
|-FunctionDecl 0x12e2f7c64f8 prev 0x12e2f7c6390 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x12e2f7c6220 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x12e2f7c65e8 <col:21> Inherited Implicit
|-TypedefDecl 0x12e2f7c6628 prev 0x12e2dd35618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x12e2dd34b40 'unsigned long long'
|-TypedefDecl 0x12e2f7c66d0 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x12e2f7c66a0 'size_t' sugar
|   |-Typedef 0x12e2f7c6628 'size_t'
|   `-BuiltinType 0x12e2dd34b40 'unsigned long long'
|-TypedefDecl 0x12e2f7c6740 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x12e2dd34aa0 'long long'
|-TypedefDecl 0x12e2f7c67b0 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x12e2dd34aa0 'long long'
|-TypedefDecl 0x12e2f7c6820 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x12e2dd34ae0 'unsigned short'
|-TypedefDecl 0x12e2f7c6890 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x12e2dd34ae0 'unsigned short'
|-TypedefDecl 0x12e2f7c6900 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x12e2dd34ae0 'unsigned short'
|-TypedefDecl 0x12e2f7c6970 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x12e2dd34a60 'int'
|-TypedefDecl 0x12e2f7c69e0 <line:567:1, col:19> col:19 referenced __time32_t 'long'
| `-BuiltinType 0x12e2dd34a80 'long'
|-TypedefDecl 0x12e2f7c6a50 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x12e2dd34aa0 'long long'
|-TypedefDecl 0x12e2f7c6ae0 <line:580:1, col:20> col:20 referenced time_t '__time64_t':'long long'
| `-TypedefType 0x12e2f7c6ab0 '__time64_t' sugar
|   |-Typedef 0x12e2f7c6a50 '__time64_t'
|   `-BuiltinType 0x12e2dd34aa0 'long long'
|-FunctionDecl 0x12e2f7c6c58 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x12e2f7c6e78 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x12e2f80a9e0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x12e2f7c6fb8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x12e2f7c7030 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x12e2f7c70a8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x12e2f7c7128 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x12e2f80a780 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x12e2f80aac0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x12e2f80ab80 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x12e2f80acf0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x12e2f80aca0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x12e2f80ac40 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x12e2f80ab60 'struct threadlocaleinfostruct'
|       `-Record 0x12e2f815830 'threadlocaleinfostruct'
|-TypedefDecl 0x12e2f80ae00 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x12e2f80adb0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x12e2f80ad50 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x12e2f80ac20 'struct threadmbcinfostruct'
|       `-Record 0x12e2f80ab80 'threadmbcinfostruct'
|-RecordDecl 0x12e2f80ae58 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x12e2f80af10 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x12e2f80afd0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x12e2f80b060 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x12e2f80b0f0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x12e2f80b1a8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x12e2f80b150 'struct localeinfo_struct' sugar
|   `-RecordType 0x12e2f80afb0 'struct localeinfo_struct'
|     `-Record 0x12e2f80af10 'localeinfo_struct'
|-TypedefDecl 0x12e2f80b280 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x12e2f80b230 'struct localeinfo_struct *'
|   `-ElaboratedType 0x12e2f80b150 'struct localeinfo_struct' sugar
|     `-RecordType 0x12e2f80afb0 'struct localeinfo_struct'
|       `-Record 0x12e2f80af10 'localeinfo_struct'
|-RecordDecl 0x12e2f80b2f8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x12e2f80b3b0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x12e2f80b428 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x12e2f80b4e8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x12e2f80b580 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x12e2f80b5f0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x12e2f80b6a8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x12e2f80b650 'struct localerefcount' sugar
|   `-RecordType 0x12e2f80b390 'struct localerefcount'
|     `-Record 0x12e2f80b2f8 'localerefcount'
|-RecordDecl 0x12e2f815830 prev 0x12e2f80aac0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x12e2f8158b0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x12e2f815928 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x12e2f815998 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x12e2f815a08 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x12e2f815a78 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x12e2f815c38 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x12e2f815ca8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x12e2f815d18 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x12e2f815d88 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x12e2f815df8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x12e2f815e68 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x12e2f815ec0 parent 0x12e2dd34968 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x12e2f816050 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x12e2f8160c0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x12e2f816130 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x12e2f8161a0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x12e2f816240 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x12e2f8162b0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x12e2f8163c0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x12e2f8164f8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x12e2f8165a8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x12e2f816550 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x12e2f80ab60 'struct threadlocaleinfostruct'
|     `-Record 0x12e2f815830 'threadlocaleinfostruct'
|-RecordDecl 0x12e2f816640 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x12e2f816700 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x12e2f816778 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x12e2f813810 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x12e2f813880 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x12e2f8138f0 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x12e2f813960 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x12e2f8139d0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x12e2f813a40 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x12e2f813ab0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x12e2f813b60 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x12e2f813b10 'struct _iobuf' sugar
|   `-RecordType 0x12e2f8166e0 'struct _iobuf'
|     `-Record 0x12e2f816640 '_iobuf'
|-FunctionDecl 0x12e2f813d98 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x12e2f813e68 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x12e2dd34aa0 'long long'
|-FunctionDecl 0x12e2f814048 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12e2f813ed0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x12e2f814340 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x12e2f814120 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x12e2f814198 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x12e2f8146f0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x12e2f814420 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x12e2f8144a0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x12e2f814520 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x12e2f8169b0 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x12e2f816840 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x12e2f816be0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x12e2f816aa0 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x12e2f816d90 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12e2f816cb0 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x12e2f816f80 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x12e2f817278 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x12e2f817050 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x12e2f8170d0 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x12e2f817430 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12e2f817350 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x12e2f8175e0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12e2f817500 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x12e2f817790 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12e2f8176b0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x12e2f81d9b8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12e2f81d8d8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x12e2f81db48 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x12e2f81deb0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x12e2f81dc10 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x12e2f81dd08 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x12e2f81e268 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x12e2f81df90 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x12e2f81e010 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x12e2f81e088 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x12e2f81e428 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12e2f81e348 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x12e2f81e6f0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x12e2f81e500 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x12e2f81e580 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x12e2f81b890 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x12e2f81bc88 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x12e2f81bd28 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x12e2f81bd90 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x12e2f81be08 prev 0x12e2f81bc88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x12e2f81ba60 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x12e2f81bae0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x12e2f81beb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f81c330 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x12e2f81c060 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x12e2f81c0e0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x12e2f81c160 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x12e2f81c650 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x12e2f81c6f0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x12e2f81c758 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x12e2f81c7d0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x12e2f817850 prev 0x12e2f81c650 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x12e2f81c410 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x12e2f81c490 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x12e2f817948 <col:40> Inherited printf 2 3
|-FunctionDecl 0x12e2f817b10 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x12e2f817990 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x12e2f817a10 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x12e2f817d68 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x12e2f817bf0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x12e2f817c68 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x12e2f817f98 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x12e2f817e48 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x12e2f818290 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x12e2f818070 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x12e2f8180e8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x12e2f818728 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x12e2f8187c8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x12e2f823910 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x12e2f823978 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x12e2f8239e0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x12e2f823a68 prev 0x12e2f818728 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x12e2f818370 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x12e2f8183e8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f818460 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12e2f8184d8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x12e2f823f70 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x12e2f823b58 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x12e2f823bd0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f823c48 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f823cc0 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12e2f823d38 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x12e2f824430 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x12e2f824160 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x12e2f8241e0 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x12e2f824258 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x12e2f8244e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f81e968 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x12e2f824630 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x12e2f8246b0 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x12e2f824730 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x12e2f8247a8 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x12e2f81ed10 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x12e2f81edb0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x12e2f81ee18 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x12e2f81ee90 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x12e2f81eef8 prev 0x12e2f81ed10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x12e2f81eb48 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x12e2f81ebc8 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x12e2f81f0d8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x12e2f81efa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f81f518 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f81f218 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x12e2f81f298 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x12e2f81f330 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12e2f81f5d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f822900 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x12e2f81f710 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x12e2f81f790 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x12e2f822bf0 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f8229d8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x12e2f822a58 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x12e2f822ad0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f822f50 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x12e2f822cd0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x12e2f822da8 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x12e2f823308 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x12e2f823028 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x12e2f8230a8 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x12e2f823128 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x12e2f823568 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x12e2f8233e8 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x12e2f820928 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x12e2f823638 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x12e2f8236b8 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x12e2f823738 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x12e2f820b88 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x12e2f820a08 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x12e2f821048 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x12e2f8210e8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x12e2f821150 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x12e2f8211b8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x12e2f821220 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x12e2f8212a8 prev 0x12e2f821048 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x12e2f820c90 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x12e2f820d08 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f820d80 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12e2f820df8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x12e2f821470 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12e2f821390 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x12e2f821600 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x12e2f821788 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x12e2f81ca60 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x12e2f821858 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x12e2f81c8b0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x12e2f81cd88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x12e2f81cc40 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x12e2f81ce30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f81d050 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12e2f81cf70 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x12e2f81d270 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x12e2f81d128 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x12e2f81d420 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12e2f81d340 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x12e2f81d670 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x12e2f81d4f8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x12e2f81d578 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x12e2f81f8d0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x12e2f81f970 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x12e2f81f9e0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x12e2f81fa48 prev 0x12e2f81f8d0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x12e2f81d750 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x12e2f81fb38 <col:40> Inherited printf 1 2
|-FunctionDecl 0x12e2f81fc68 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x12e2f81fb88 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x12e2f81feb8 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x12e2f81fd40 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x12e2f81fdb8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x12e2f820078 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x12e2f81ff98 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x12e2f820298 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x12e2f820150 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x12e2f8204e8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x12e2f820370 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x12e2f8203e8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x12e2f8206a8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x12e2f8205c8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x12e2f872120 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x12e2f820780 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x12e2f820800 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x12e2f8722e0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x12e2f872200 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x12e2f872570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x12e2f872490 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x12e2f872618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x12e2f872810 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x12e2f872738 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x12e2f8729a0 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x12e2f872c48 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x12e2f872ce8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x12e2f872d58 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x12e2f872dc0 prev 0x12e2f872c48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x12e2f872b30 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x12e2f872f98 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x12e2f872e68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f875390 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f875158 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x12e2f8751d0 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12e2f875440 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f875668 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x12e2f875588 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x12e2f8758b8 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f875740 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x12e2f8757b8 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f875c78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x12e2f875a50 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x12e2f875ad0 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x12e2f875d28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f875f50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x12e2f875e70 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x12e2f86f168 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x12e2f86f020 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x12e2f86f350 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x12e2f86f7a0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x12e2f86f418 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x12e2f86f498 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x12e2f86f518 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x12e2f86f590 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x12e2f86fc20 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x12e2f86f890 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x12e2f86f908 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f86f980 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12e2f86fa00 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x12e2f876090 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x12e2f86fd10 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x12e2f86fd88 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12e2f86fe08 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x12e2f876258 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x12e2f876178 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x12e2f876630 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x12e2f8766d0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x12e2f876738 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x12e2f8767b0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x12e2f876818 prev 0x12e2f876630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x12e2f8763f0 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x12e2f876470 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x12e2f8769f8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x12e2f8768c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f876de8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f876b08 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x12e2f876b88 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x12e2f876c00 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12e2f876ea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f8771a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x12e2f876fe8 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x12e2f8770a0 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x12e2f877498 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f877280 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x12e2f877300 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x12e2f877378 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f877928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x12e2f877640 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x12e2f8776b8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f877738 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x12e2f8779e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f877fb0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f877c20 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x12e2f877c98 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f877d18 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x12e2f877d90 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12e2f870030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f870390 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x12e2f870178 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x12e2f8701f0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12e2f870270 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x12e2f870728 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f870478 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x12e2f8704f0 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f870570 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x12e2f8705e8 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f870988 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x12e2f870a28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f870ce0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x12e2f870b70 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x12e2f8780b0 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x12e2f870db8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x12e2f870e30 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x12e2f878330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x12e2f878250 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x12e2f8783d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f878698 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x12e2f878520 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x12e2f878598 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x12e2f878ab0 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x12e2f878b50 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x12e2f878bb8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12e2f878c20 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x12e2f878ca0 <col:40> Implicit printf 2 0
|-FunctionDecl 0x12e2f878d08 prev 0x12e2f878ab0 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x12e2f878770 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x12e2f8787f0 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x12e2f878868 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x12e2f878e08 <col:40> Inherited printf 2 0
|-FunctionDecl 0x12e2f871040 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x12e2f8710e0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x12e2f871148 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x12e2f8711b0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x12e2f871230 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x12e2f871298 prev 0x12e2f871040 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x12e2f878e50 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x12e2f878ed0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x12e2f878f48 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x12e2f871398 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x12e2f8715f8 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x12e2f8713e0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x12e2f871460 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x12e2f8714d8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f8718f0 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x12e2f8716d8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x12e2f871758 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x12e2f8717d0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f871c38 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x12e2f871cd8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12e2f871d40 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x12e2f871db8 <col:40> Implicit printf 1 0
|-FunctionDecl 0x12e2f871e20 prev 0x12e2f871c38 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x12e2f8719d8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x12e2f871a50 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x12e2f871f18 <col:40> Inherited printf 1 0
|-FunctionDecl 0x12e2f8791f8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x12e2f879298 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x12e2f879300 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x12e2f879378 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x12e2f8793e0 prev 0x12e2f8791f8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x12e2f871f68 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x12e2f8790c0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x12e2f8794d8 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x12e2f8796a0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x12e2f879528 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x12e2f8795a0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f8798f8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x12e2f879780 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x12e2f8797f8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f879e58 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x12e2f879ef8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x12e2f879f60 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x12e2f879fc8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12e2f87a030 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x12e2f87a0d0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x12e2f87a138 prev 0x12e2f879e58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x12e2f879a98 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x12e2f879b10 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f879b90 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x12e2f879c08 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x12e2f87a328 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x12e2f87a1f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f87a798 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x12e2f87a378 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x12e2f87a3f0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f87a468 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f87a4e8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x12e2f87a560 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f87abd8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x12e2f87a890 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x12e2f87a908 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f87a980 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f87aa00 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x12e2f87aa78 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f87afa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x12e2f87ad90 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x12e2f87ae08 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f87ae88 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x12e2f87b060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f8734d0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x12e2f873220 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x12e2f873298 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f873318 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x12e2f873390 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x12e2f873590 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f873988 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x12e2f8736d8 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x12e2f873750 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f8737d0 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x12e2f873848 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f873d48 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x12e2f873a78 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x12e2f873af8 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x12e2f873b70 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f87b180 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x12e2f87b220 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x12e2f87b288 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x12e2f87b300 <col:85> Implicit printf 2 3
|-FunctionDecl 0x12e2f87b368 prev 0x12e2f87b180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x12e2f873ef0 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x12e2f873f70 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x12e2f87b548 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x12e2f87b418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f87b970 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x12e2f87ba10 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x12e2f87ba78 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12e2f87bae0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x12e2f87bb60 <col:94> Implicit printf 2 0
|-FunctionDecl 0x12e2f87bbc8 prev 0x12e2f87b970 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x12e2f87b658 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x12e2f87b6d8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x12e2f87b750 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x12e2f87bdb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x12e2f87bc80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f874070 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x12e2f874110 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x12e2f874178 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x12e2f8741e0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x12e2f874260 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x12e2f8742c8 prev 0x12e2f874070 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x12e2f87be00 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x12e2f87be80 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x12e2f87bef8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x12e2f8743c8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x12e2f874590 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x12e2f874418 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x12e2f874490 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f874888 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x12e2f874670 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x12e2f8746e8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12e2f874768 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x12e2f874c20 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x12e2f874970 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x12e2f8749e8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f874a68 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x12e2f874ae0 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f874e88 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x12e2f874d08 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x12e2f874d88 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x12e2f87f120 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x12e2f874f68 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x12e2f87f410 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x12e2f87f1f8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x12e2f87f270 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12e2f87f2f0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x12e2f87f708 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x12e2f87f4f0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x12e2f87f570 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x12e2f87f5e8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f87f968 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x12e2f87f7f0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x12e2f87f868 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f87fcf8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x12e2f87fa48 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x12e2f87fac0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f87fb40 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x12e2f87fbb8 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f87fec8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x12e2f87fde8 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x12e2f881140 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x12e2f87ffa0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x12e2f880018 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f881300 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x12e2f881220 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x12e2f881490 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x12e2f8816d8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f881560 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x12e2f8815d8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f881930 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f8817b8 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x12e2f881830 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f881b88 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f881a10 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x12e2f881a88 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f881f38 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f881c68 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x12e2f881ce0 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12e2f881d58 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f87e230 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f882020 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x12e2f882098 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12e2f87e110 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f87e528 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f87e318 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x12e2f87e390 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12e2f87e408 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f87e820 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f87e608 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x12e2f87e688 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x12e2f87e700 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f87eb18 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f87e900 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x12e2f87e980 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x12e2f87e9f8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f87ee10 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f87ebf8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x12e2f87ec78 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x12e2f87ecf0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f8822b0 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f87eef0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x12e2f87ef70 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x12e2f87efe8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12e2f87f060 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f882648 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f882398 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x12e2f882418 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x12e2f882490 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12e2f882508 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f8829e0 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f882730 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x12e2f8827b0 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x12e2f882828 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12e2f8828a0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f882e78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f882b90 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x12e2f882c10 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x12e2f882c88 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12e2f882f30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f883470 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f883078 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x12e2f883160 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f8831e0 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x12e2f883258 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f883810 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f883560 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x12e2f8835d8 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f883658 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x12e2f8836d0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f883d60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f883a00 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x12e2f883a80 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x12e2f883af8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x12e2f883b70 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x12e2f883e20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f87c328 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f883f68 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x12e2f883fe0 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f884060 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x12e2f8840d8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12e2f87c0f0 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f87c768 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f87c420 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x12e2f87c498 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f87c518 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x12e2f87c590 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12e2f87c608 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f87c9d8 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f87c860 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x12e2f87c8d8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f87cc30 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f87cab8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x12e2f87cb30 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f87cf20 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f87cd10 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x12e2f87cd88 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12e2f87ce00 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f8842a0 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f87d008 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x12e2f87d080 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12e2f884180 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f8846f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f884448 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x12e2f8844c0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f884540 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x12e2f8845b8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12e2f8847b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f884bb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f884900 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x12e2f884978 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f8849f8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x12e2f884a70 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f87d100 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f884ca0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x12e2f884d18 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f884d90 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f884e10 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x12e2f884e88 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f87d640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f87d2f8 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x12e2f87d370 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f87d3f0 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x12e2f87d468 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x12e2f87d4e0 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x12e2f87d708 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f87db88 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f87d858 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x12e2f87d8d0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f87d950 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x12e2f87d9c8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12e2f87da40 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f88c250 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f87dc80 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x12e2f87dcf8 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f87dd70 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f87ddf0 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x12e2f87de68 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12e2f87dee0 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f88c610 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x12e2f88c348 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x12e2f88c3c0 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x12e2f88c440 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x12e2f88c880 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x12e2f88c710 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x12e2f88ca98 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x12e2f88cd78 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x12e2f88cb60 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x12e2f88cbd8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x12e2f88cfc0 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x12e2f88ce50 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x12e2f8871a0 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x12e2f88d090 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x12e2f887328 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x12e2f887560 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x12e2f8873f0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x12e2f887468 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x12e2f887710 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x12e2f887638 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x12e2f8879b8 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x12e2f8877e0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x12e2f887858 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x12e2f887d60 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x12e2f887a90 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x12e2f887b10 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x12e2f887b88 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x12e2f888060 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x12e2f887e40 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x12e2f887eb8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x12e2f88b398 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x12e2f888138 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x12e2f88b1f0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x12e2f88b6a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x12e2f88b530 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x12e2f88b748 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f88ba08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x12e2f88b888 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x12e2f88bd10 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x12e2f88bad8 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x12e2f88bb50 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x12e2f88bf60 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x12e2f88bde8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x12e2f88be60 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x12e2f886190 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x12e2f88c038 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x12e2f886340 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x12e2f886260 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x12e2f8864f0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x12e2f886410 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x12e2f886888 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12e2f8865c0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x12e2f886638 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f8866b0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f886b78 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12e2f886968 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x12e2f8869e0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f886a58 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f886e68 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12e2f886c58 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x12e2f886cd0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f886d48 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f885180 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12e2f886f48 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x12e2f886fc0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f887038 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f885480 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x12e2f885260 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f8852d8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f8856d0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x12e2f885558 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f8855d0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f885920 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x12e2f8857a8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f885820 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f885b70 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x12e2f8859f8 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f885a70 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f885f28 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x12e2f885c48 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x12e2f885cc0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12e2f885d38 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x12e2f8893d0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12e2f886008 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x12e2f886080 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f8860f8 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f8891c0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f889788 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12e2f8894b8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x12e2f889530 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f8895a8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f889a78 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12e2f889868 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x12e2f8898e0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f889958 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f889d68 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x12e2f889b58 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12e2f889bd0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12e2f889c48 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x12e2f88a0f0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12e2f889e48 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12e2f889ec0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f889f38 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f889fb0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f88d5b0 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x12e2f88d228 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12e2f88d2a0 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f88d318 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12e2f88d390 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x12e2f88dab8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12e2f88d698 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12e2f88d710 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f88d788 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f88d800 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f88d878 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f88de78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x12e2f88dc68 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x12e2f88dce0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f88dd58 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x12e2f88df30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f88a400 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12e2f88e130 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x12e2f88a1d0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f88a248 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12e2f88a2c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x12e2f88a4c0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f88a778 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x12e2f88a600 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x12e2f88a678 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x12e2f88a930 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x12e2f88a850 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x12e2f88ac10 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12e2f88aa00 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x12e2f88aa78 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f88aaf0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f88ae68 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x12e2f88acf0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f88ad68 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f850cb0 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x12e2f88af40 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12e2f88afb8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12e2f88b030 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x12e2f851038 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12e2f850d90 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12e2f850e08 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f850e80 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f850ef8 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f851200 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x12e2f851120 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x12e2f851448 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x12e2f8512d0 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f851348 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f851750 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f851520 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f851598 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f8519a0 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f851828 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f8518a0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f851bf0 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f851a78 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f851af0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f851fb8 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f851ce8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12e2f851d60 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12e2f851dd8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f8522a8 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f852098 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12e2f852110 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12e2f852188 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f852598 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f852388 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12e2f852400 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12e2f852478 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f852958 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f852678 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x12e2f8526f0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f852768 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f853ce0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f852a38 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x12e2f852ab0 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f852b28 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f853fd0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f853dc0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x12e2f853e38 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f853eb0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f854420 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f8540b0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x12e2f854128 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12e2f8541a0 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12e2f854218 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f8547b0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f854508 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x12e2f854580 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12e2f8545f8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12e2f854670 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f854b40 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f854898 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x12e2f854910 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12e2f854988 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12e2f854a00 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f855000 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f854c28 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12e2f854cf0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f854d68 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f854de0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f855390 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f8550e8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12e2f855160 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f8551d8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f855250 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f855720 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f855478 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12e2f8554f0 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f855568 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f8555e0 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f855c28 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f855808 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12e2f855880 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f8558f8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12e2f855970 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12e2f8559e8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f84dfe8 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f84dca8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12e2f84dd20 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f84dd98 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12e2f84de10 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12e2f84de88 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f84e418 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f84e0d8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12e2f84e150 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f84e1c8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12e2f84e240 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12e2f84e2b8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f84e680 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f84e508 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f84e580 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f84e8d0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f84e758 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f84e7d0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f84ebb8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f84e9a8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12e2f84ea20 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12e2f84ea98 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f856098 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f855df0 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12e2f855e68 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f855ee0 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12e2f855f58 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12e2f856158 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f8566c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f8562a0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12e2f856318 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f856390 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f856408 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f856480 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f856c00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f8568c0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12e2f856938 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f8569b0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12e2f856a28 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x12e2f856aa0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x12e2f84ec90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f84f2a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f84edd8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12e2f84ee50 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f84eec8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f84ef40 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12e2f84efb8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12e2f84f030 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f84f7a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x12e2f84f568 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x12e2f84f5e0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x12e2f84f850 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x12e2f84f968 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x12e2f856f78 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12e2f84fc20 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x12e2f856d20 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12e2f856d98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x12e2f857030 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x12e2f857148 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x12e2f8576e8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f857408 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x12e2f857480 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12e2f8574f8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x12e2f8577a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x12e2f8578c0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x12e2f84feb0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f857b80 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x12e2f857bf8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12e2f857c70 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x12e2f84fca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x12e2f84ff70 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x12e2f850090 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x12e2f850398 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x12e2f8501b8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x12e2f850230 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f8502a8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x12e2f85c000 <line:37:1, line:44:1>
|   |-DeclStmt 0x12e2f8504e0 <line:38:5, col:21>
|   | `-VarDecl 0x12e2f850478 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x12e2f850578 <line:39:5, col:13>
|   | `-VarDecl 0x12e2f850510 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x12e2f8508d0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x12e2f8508b8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x12e2f8507d0 <col:34> '<builtin fn type>' Function 0x12e2f850668 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x12e2f850808 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x12e2f850478 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x12e2f850840 <col:29> 'const wchar_t *' lvalue ParmVar 0x12e2f8502a8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x12e2f850b90 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x12e2f850900 <col:5> 'int' lvalue Var 0x12e2f850510 '_Ret' 'int'
|   | `-CallExpr 0x12e2f850ad0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x12e2f850ab8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12e2f850938 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x12e2f855c28 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x12e2f850b18 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12e2f850958 <col:27> 'wchar_t *' lvalue ParmVar 0x12e2f8501b8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x12e2f850b30 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12e2f850978 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x12e2f850230 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x12e2f850b48 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12e2f850998 <col:44> 'const wchar_t *' lvalue ParmVar 0x12e2f8502a8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x12e2f850b60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x12e2f850a20 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x12e2f8509f8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x12e2f8509b8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x12e2f850b78 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x12e2f850a40 <col:59> 'va_list':'char *' lvalue Var 0x12e2f850478 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x12e2f85bf90 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x12e2f85bf78 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x12e2f85bec8 <col:34> '<builtin fn type>' Function 0x12e2f85bd60 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x12e2f85bf00 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x12e2f850478 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x12e2f85bff0 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x12e2f85bfd8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x12e2f85bfb8 <col:12> 'int' lvalue Var 0x12e2f850510 '_Ret' 'int'
|-FunctionDecl 0x12e2f850668 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x12e2f850708 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x12e2f850778 <col:34> Implicit
|-FunctionDecl 0x12e2f85bd60 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x12e2f85be00 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x12e2f85be70 <col:34> Implicit
|-FunctionDecl 0x12e2f85c2f8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x12e2f85c050 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x12e2f85c0c8 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f85c140 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x12e2f85c1b8 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x12e2f85c5e0 <line:50:1, line:52:1>
|   `-ReturnStmt 0x12e2f85c5d0 <line:51:5, col:62>
|     `-CallExpr 0x12e2f85c510 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x12e2f85c4f8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x12e2f85c3d0 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x12e2f855c28 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x12e2f85c558 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x12e2f85c3f0 <col:27> 'wchar_t *' lvalue ParmVar 0x12e2f85c050 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x12e2f85c570 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x12e2f85c410 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x12e2f85c0c8 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x12e2f85c588 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x12e2f85c430 <col:44> 'const wchar_t *' lvalue ParmVar 0x12e2f85c140 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x12e2f85c5a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x12e2f85c4b8 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x12e2f85c490 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x12e2f85c450 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x12e2f85c5b8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x12e2f85c4d8 <col:59> 'va_list':'char *' lvalue ParmVar 0x12e2f85c1b8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x12e2f85c880 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x12e2f85c608 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x12e2f85c680 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f85c6f8 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x12e2f85c770 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x12e2f857dc8 <line:61:1, line:68:1>
|   |-DeclStmt 0x12e2f85c9d0 <line:62:5, col:21>
|   | `-VarDecl 0x12e2f85c968 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x12e2f85ca68 <line:63:5, col:13>
|   | `-VarDecl 0x12e2f85ca00 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x12e2f85cb10 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x12e2f85caf8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x12e2f85ca80 <col:34> '<builtin fn type>' Function 0x12e2f850668 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x12e2f85caa0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x12e2f85c968 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x12e2f85cad8 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x12e2f85c770 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x12e2f85cd10 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x12e2f85cb40 <col:5> 'int' lvalue Var 0x12e2f85ca00 '_Ret' 'int'
|   | `-CallExpr 0x12e2f85cc50 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x12e2f85cc38 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12e2f85cb78 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x12e2f855c28 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x12e2f85cc98 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12e2f85cb98 <col:27> 'wchar_t *' lvalue ParmVar 0x12e2f85c608 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x12e2f85ccb0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12e2f85cbb8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x12e2f85c680 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x12e2f85ccc8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12e2f85cbd8 <col:44> 'const wchar_t *' lvalue ParmVar 0x12e2f85c6f8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x12e2f85cce0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12e2f85cbf8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x12e2f85c770 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x12e2f85ccf8 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x12e2f85cc18 <col:64> 'va_list':'char *' lvalue Var 0x12e2f85c968 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x12e2f857d58 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x12e2f857d40 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x12e2f85cd30 <col:34> '<builtin fn type>' Function 0x12e2f85bd60 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x12e2f857d20 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x12e2f85c968 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x12e2f857db8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x12e2f857da0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x12e2f857d80 <col:12> 'int' lvalue Var 0x12e2f85ca00 '_Ret' 'int'
|-FunctionDecl 0x12e2f858158 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x12e2f857e18 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x12e2f857e90 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f857f08 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x12e2f857f80 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x12e2f857ff8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x12e2f8583e0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x12e2f8583d0 <line:75:5, col:67>
|     `-CallExpr 0x12e2f858310 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x12e2f8582f8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x12e2f858238 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x12e2f855c28 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x12e2f858358 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x12e2f858258 <col:27> 'wchar_t *' lvalue ParmVar 0x12e2f857e18 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x12e2f858370 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x12e2f858278 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x12e2f857e90 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x12e2f858388 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x12e2f858298 <col:44> 'const wchar_t *' lvalue ParmVar 0x12e2f857f08 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x12e2f8583a0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x12e2f8582b8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x12e2f857f80 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x12e2f8583b8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x12e2f8582d8 <col:64> 'va_list':'char *' lvalue ParmVar 0x12e2f857ff8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x12e2f858628 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x12e2f858408 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x12e2f858480 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x12e2f858878 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x12e2f858700 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f858778 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f858b60 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12e2f858950 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12e2f8589c8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12e2f858a40 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12e2f85ef08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x12e2f85ed90 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x12e2f85ee08 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x12e2f85efb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f85f3c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f85f1b8 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x12e2f85f230 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12e2f85f2a8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12e2f85f480 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f85f738 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x12e2f85f5c0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x12e2f85f638 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x12e2f85fa20 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f85f810 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x12e2f85f888 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f85f900 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f85fe10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x12e2f85fbc0 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x12e2f85fc38 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x12e2f85fec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f860398 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f8600c0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x12e2f860138 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12e2f8601b0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12e2f860450 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f860708 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x12e2f860590 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x12e2f860608 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x12e2f8609f0 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f8607e0 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x12e2f860858 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f8608d0 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f85de68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x12e2f860b90 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x12e2f860c08 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f860c80 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x12e2f85df20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f85e4a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f85e120 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x12e2f85e198 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f85e210 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12e2f85e288 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12e2f85e560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f85e8b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x12e2f85e6a0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x12e2f85e718 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12e2f85e790 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x12e2f85ec38 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f85e990 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x12e2f85ea08 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f85ea80 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f85eaf8 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f85cf20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x12e2f85ce40 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x12e2f85cfc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f85d340 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f85d1c8 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12e2f85d240 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12e2f85d3f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f85d610 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x12e2f85d530 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x12e2f85d858 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12e2f85d6e0 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f85d758 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f85db58 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x12e2f85d938 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x12e2f85d9b0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x12e2f858ed8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x12e2f85dcf0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x12e2f858d30 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x12e2f858f88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f859390 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x12e2f8590d0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x12e2f859148 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x12e2f8591c0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x12e2f8597f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x12e2f859530 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x12e2f8595a8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x12e2f859620 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x12e2f8598a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f864e38 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x12e2f8599f0 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x12e2f859a68 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x12e2f859ae0 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x12e2f859b58 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x12e2f865090 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x12e2f864f20 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x12e2f8652d0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x12e2f865160 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x12e2f8651d8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x12e2f865488 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x12e2f8653a8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x12e2f865778 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x12e2f865558 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x12e2f8655d0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x12e2f8659e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x12e2f865910 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x12e2f865a90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f865ca8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x12e2f865bd0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x12e2f863ed8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x12e2f865d78 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x12e2f863de0 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x12e2f864120 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x12e2f863fb0 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x12e2f864028 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x12e2f8642d0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x12e2f8641f8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x12e2f864478 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x12e2f8643a0 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x12e2f864628 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12e2f864548 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x12e2f8647d8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12e2f8646f8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x12e2f864b50 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x12e2f8648b0 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x12e2f864928 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f8649a0 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12e2f864a18 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x12e2f862fa0 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x12e2f864c40 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x12e2f864cb8 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f864d30 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f862dd0 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12e2f862e48 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x12e2f8632b0 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x12e2f863090 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x12e2f863110 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x12e2f863190 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x12e2f863470 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x12e2f863390 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x12e2f863760 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x12e2f863540 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x12e2f8635c0 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x12e2f863640 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x12e2f863920 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x12e2f863840 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x12e2f863c98 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x12e2f8639f8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x12e2f863a70 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f863ae8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12e2f863b60 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x12e2f867f98 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x12e2f867e20 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x12e2f867e98 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x12e2f8682d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x12e2f868150 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x12e2f8681d0 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x12e2f868380 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x12e2f868638 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x12e2f8686d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x12e2f868a18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x12e2f8688a0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x12e2f868920 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x12e2f868ac8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x12e2f865e00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x12e2f865ea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x12e2f866140 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x12e2f866060 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x12e2f8661e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x12e2f866468 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x12e2f866508 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x12e2f8667b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x12e2f8666d0 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x12e2f866858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x12e2f866b38 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x12e2f866a58 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x12e2f866be0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x12e2f866f88 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x12e2f866e10 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x12e2f866e88 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x12e2f867038 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x12e2f8672f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x12e2f867398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-TypedefDecl 0x12e2f8674e8 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:89:1, col:14> col:14 referenced clock_t 'long'
| `-BuiltinType 0x12e2dd34a80 'long'
|-RecordDecl 0x12e2f867540 <line:113:1, line:123:9> line:113:8 struct tm definition
| |-MaxFieldAlignmentAttr 0x12e2f867600 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x12e2f867678 <line:114:9, col:13> col:13 referenced tm_sec 'int'
| |-FieldDecl 0x12e2f8676e8 <line:115:9, col:13> col:13 referenced tm_min 'int'
| |-FieldDecl 0x12e2f867758 <line:116:9, col:13> col:13 referenced tm_hour 'int'
| |-FieldDecl 0x12e2f8677c8 <line:117:9, col:13> col:13 referenced tm_mday 'int'
| |-FieldDecl 0x12e2f867838 <line:118:9, col:13> col:13 referenced tm_mon 'int'
| |-FieldDecl 0x12e2f8678a8 <line:119:9, col:13> col:13 referenced tm_year 'int'
| |-FieldDecl 0x12e2f867918 <line:120:9, col:13> col:13 tm_wday 'int'
| |-FieldDecl 0x12e2f867988 <line:121:9, col:13> col:13 tm_yday 'int'
| `-FieldDecl 0x12e2f8679f8 <line:122:9, col:13> col:13 tm_isdst 'int'
|-FunctionDecl 0x12e2f867c40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:147:99> col:84 __daylight 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x12e2f867ce0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_daylight instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f861fe0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:151:98> col:84 __dstbias 'long *(void) __attribute__((cdecl))':'long *(void)'
| `-DeprecatedAttr 0x12e2f862080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_dstbias instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f862340 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:155:100> col:85 __timezone 'long *(void) __attribute__((cdecl))':'long *(void)'
| `-DeprecatedAttr 0x12e2f8623e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_timezone instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f862700 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:159:112> col:99 __tzname 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x12e2f8627a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_tzname instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f862a60 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:162:9, col:60> col:25 _get_daylight 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x12e2f8628e8 <col:45, col:51> col:51 _Daylight 'int *'
|-FunctionDecl 0x12e2f862cb0 <line:163:9, col:73> col:25 _get_dstbias 'errno_t (long *) __attribute__((cdecl))':'errno_t (long *)'
| `-ParmVarDecl 0x12e2f862b38 <col:44, col:51> col:51 _Daylight_savings_bias 'long *'
|-FunctionDecl 0x12e2f86af28 <line:164:9, col:61> col:25 _get_timezone 'errno_t (long *) __attribute__((cdecl))':'errno_t (long *)'
| `-ParmVarDecl 0x12e2f86ae50 <col:45, col:52> col:52 _Timezone 'long *'
|-FunctionDecl 0x12e2f86b3d8 <line:165:9, col:150> col:25 _get_tzname 'errno_t (size_t *, char *, size_t, int) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, int)'
| |-ParmVarDecl 0x12e2f86b058 <col:43, col:51> col:51 _ReturnValue 'size_t *'
| |-ParmVarDecl 0x12e2f86b0d8 <col:94, col:100> col:100 _Buffer 'char *'
| |-ParmVarDecl 0x12e2f86b150 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12e2f86b1d0 <col:140, col:144> col:144 _Index 'int'
|-FunctionDecl 0x12e2f86b798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:174:108> col:74 asctime 'char *(const struct tm *) __attribute__((cdecl))':'char *(const struct tm *)'
| |-ParmVarDecl 0x12e2f86b620 <col:87, col:105> col:105 _Tm 'const struct tm *'
| `-DeprecatedAttr 0x12e2f86b840 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using asctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f86bc60 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:176:28, col:170> col:44 asctime_s 'errno_t (char *, size_t, const struct tm *) __attribute__((cdecl))':'errno_t (char *, size_t, const struct tm *)'
| |-ParmVarDecl 0x12e2f86b988 <col:106, col:112> col:112 _Buf 'char *'
| |-ParmVarDecl 0x12e2f86ba00 <col:123, col:130> col:130 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12e2f86ba90 <col:149, col:167> col:167 _Tm 'const struct tm *'
|-FunctionDecl 0x12e2f86c018 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:180:98> col:60 _ctime32 'char *(const __time32_t *) __attribute__((cdecl))':'char *(const __time32_t *)'
| |-ParmVarDecl 0x12e2f86be98 <col:74, col:93> col:93 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x12e2f86c0c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ctime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f86c4d0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:181:9, col:154> col:25 _ctime32_s 'errno_t (char *, size_t, const __time32_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time32_t *)'
| |-ParmVarDecl 0x12e2f86c208 <col:88, col:94> col:94 _Buf 'char *'
| |-ParmVarDecl 0x12e2f86c280 <col:105, col:112> col:112 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12e2f86c2f8 <col:131, col:149> col:149 _Time 'const __time32_t *'
|-FunctionDecl 0x12e2f86c718 <line:184:24, col:50> col:40 clock 'clock_t (void) __attribute__((cdecl))':'clock_t (void)'
|-FunctionDecl 0x12e2f86ca00 <line:185:9, col:82> col:24 _difftime32 'double (__time32_t, __time32_t) __attribute__((cdecl))':'double (__time32_t, __time32_t)'
| |-ParmVarDecl 0x12e2f86c7e0 <col:41, col:52> col:52 _Time1 '__time32_t':'long'
| `-ParmVarDecl 0x12e2f86c858 <col:65, col:76> col:76 _Time2 '__time32_t':'long'
|-FunctionDecl 0x12e2f86cd88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:187:120> col:81 _gmtime32 'struct tm *(const __time32_t *) __attribute__((cdecl))':'struct tm *(const __time32_t *)'
| |-ParmVarDecl 0x12e2f86cb98 <col:96, col:115> col:115 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x12e2f89c680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gmtime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f89c9f8 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:188:28, col:106> col:44 _gmtime32_s 'errno_t (struct tm *, const __time32_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time32_t *)'
| |-ParmVarDecl 0x12e2f89c7d8 <col:61, col:72> col:72 _Tm 'struct tm *'
| `-ParmVarDecl 0x12e2f89c850 <col:82, col:101> col:101 _Time 'const __time32_t *'
|-FunctionDecl 0x12e2f89cc88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:190:111> col:69 _localtime32 'struct tm *(const __time32_t *) __attribute__((cdecl))':'struct tm *(const __time32_t *)'
| |-ParmVarDecl 0x12e2f89cb98 <col:87, col:106> col:106 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x12e2f89cd30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _localtime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f89d000 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:191:9, col:91> col:25 _localtime32_s 'errno_t (struct tm *, const __time32_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time32_t *)'
| |-ParmVarDecl 0x12e2f89ce90 <col:46, col:57> col:57 _Tm 'struct tm *'
| `-ParmVarDecl 0x12e2f89cf08 <col:67, col:86> col:86 _Time 'const __time32_t *'
|-FunctionDecl 0x12e2f89d468 <line:193:9, col:179> col:24 strftime 'size_t (char *, size_t, const char *, const struct tm *) __attribute__((cdecl))':'size_t (char *, size_t, const char *, const struct tm *)'
| |-ParmVarDecl 0x12e2f89d0e0 <col:62, col:69> col:69 _Buf 'char *'
| |-ParmVarDecl 0x12e2f89d158 <col:80, col:87> col:87 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f89d1d8 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x12e2f89d268 <col:158, col:176> col:176 _Tm 'const struct tm *'
|-FunctionDecl 0x12e2f89a9a0 <line:194:9, col:199> col:24 _strftime_l 'size_t (char *, size_t, const char *, const struct tm *, _locale_t) __attribute__((cdecl))':'size_t (char *, size_t, const char *, const struct tm *, _locale_t)'
| |-ParmVarDecl 0x12e2f89d558 <col:59, col:65> col:65 _Buf 'char *'
| |-ParmVarDecl 0x12e2f89d5d0 <col:76, col:83> col:83 _Max_size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f89a660 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x12e2f89a6f0 <col:151, col:168> col:168 _Tm 'const struct tm *'
| `-ParmVarDecl 0x12e2f89a768 <col:182, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f89ac78 <line:196:28, col:142> col:44 _strdate_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x12e2f89aa98 <col:106, col:112> col:112 _Buf 'char *'
| `-ParmVarDecl 0x12e2f89ab10 <col:123, col:130> col:130 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x12e2f89aef8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:198:79 _strdate 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x12e2f89ae18 <col:108, col:114> col:114 _Buffer 'char *'
| `-DeprecatedAttr 0x12e2f89afa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strdate_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f89b258 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:200:28, col:143> col:44 _strtime_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x12e2f89b0e8 <col:106, col:112> col:112 _Buf 'char *'
| `-ParmVarDecl 0x12e2f89b160 <col:124, col:131> col:131 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x12e2f89b4d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:202:79 _strtime 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x12e2f89b3f8 <col:108, col:114> col:114 _Buffer 'char *'
| `-DeprecatedAttr 0x12e2f89b580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f89b910 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:204:9, col:64> col:28 _time32 '__time32_t (__time32_t *) __attribute__((cdecl))':'__time32_t (__time32_t *)'
| `-ParmVarDecl 0x12e2f89b798 <col:46, col:59> col:59 _Time '__time32_t *'
|-FunctionDecl 0x12e2f89bb70 <line:205:9, col:61> col:28 _mktime32 '__time32_t (struct tm *) __attribute__((cdecl))':'__time32_t (struct tm *)'
| `-ParmVarDecl 0x12e2f89b9f8 <col:46, col:58> col:58 _Tm 'struct tm *'
|-FunctionDecl 0x12e2f89bd30 <line:206:9, col:63> col:28 _mkgmtime32 '__time32_t (struct tm *) __attribute__((cdecl))':'__time32_t (struct tm *)'
| `-ParmVarDecl 0x12e2f89bc58 <col:48, col:60> col:60 _Tm 'struct tm *'
|-FunctionDecl 0x12e2f89beb8 <line:210:9, col:33> col:22 _tzset 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x12e2f89c1a0 <line:214:24, col:97> col:39 used _difftime64 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)'
| |-ParmVarDecl 0x12e2f89bf80 <col:56, col:67> col:67 _Time1 '__time64_t':'long long'
| `-ParmVarDecl 0x12e2f89bff8 <col:80, col:91> col:91 _Time2 '__time64_t':'long long'
|-FunctionDecl 0x12e2f89c4e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:215:98> col:60 used _ctime64 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)'
| |-ParmVarDecl 0x12e2f89c368 <col:74, col:93> col:93 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x12e2f89c590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ctime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f898a00 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:216:9, col:132> col:25 used _ctime64_s 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)'
| |-ParmVarDecl 0x12e2f898740 <col:65, col:71> col:71 _Buf 'char *'
| |-ParmVarDecl 0x12e2f8987b8 <col:82, col:89> col:89 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12e2f898830 <col:108, col:127> col:127 _Time 'const __time64_t *'
|-FunctionDecl 0x12e2f898d28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:219:105> col:66 used _gmtime64 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |-ParmVarDecl 0x12e2f898ba0 <col:81, col:100> col:100 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x12e2f898dd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gmtime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f899148 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:220:9, col:87> col:25 used _gmtime64_s 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
| |-ParmVarDecl 0x12e2f898f28 <col:43, col:54> col:54 _Tm 'struct tm *'
| `-ParmVarDecl 0x12e2f898fa0 <col:64, col:82> col:82 _Time 'const __time64_t *'
|-FunctionDecl 0x12e2f8993d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:222:111> col:69 used _localtime64 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |-ParmVarDecl 0x12e2f8992e8 <col:87, col:106> col:106 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x12e2f899480 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _localtime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f8a0830 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:223:9, col:90> col:25 used _localtime64_s 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
| |-ParmVarDecl 0x12e2f8a06c0 <col:46, col:57> col:57 _Tm 'struct tm *'
| `-ParmVarDecl 0x12e2f8a0738 <col:67, col:85> col:85 _Time 'const __time64_t *'
|-FunctionDecl 0x12e2f8a0a90 <line:225:9, col:61> col:28 used _mktime64 '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
| `-ParmVarDecl 0x12e2f8a0920 <col:46, col:58> col:58 _Tm 'struct tm *'
|-FunctionDecl 0x12e2f8a0c50 <line:226:9, col:63> col:28 used _mkgmtime64 '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
| `-ParmVarDecl 0x12e2f8a0b78 <col:48, col:60> col:60 _Tm 'struct tm *'
|-FunctionDecl 0x12e2f8a0ec0 <line:227:9, col:64> col:28 used _time64 '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)'
| `-ParmVarDecl 0x12e2f8a0d48 <col:46, col:59> col:59 _Time '__time64_t *'
|-FunctionDecl 0x12e2f8a1228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:231:79> col:46 _getsystime 'unsigned int (struct tm *) __attribute__((cdecl))':'unsigned int (struct tm *)'
| |-ParmVarDecl 0x12e2f8a10a8 <col:64, col:76> col:76 _Tm 'struct tm *'
| `-DeprecatedAttr 0x12e2f8a12d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using GetLocalTime instead. See online help for details." ""
|-FunctionDecl 0x12e2f89d700 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:232:98> col:46 _setsystime 'unsigned int (struct tm *, unsigned int) __attribute__((cdecl))':'unsigned int (struct tm *, unsigned int)'
| |-ParmVarDecl 0x12e2f8a14f8 <col:63, col:75> col:75 _Tm 'struct tm *'
| |-ParmVarDecl 0x12e2f8a1578 <col:80, col:89> col:89 _MilliSec 'unsigned int'
| `-DeprecatedAttr 0x12e2f89d7b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetLocalTime instead. See online help for details." ""
|-FunctionDecl 0x12e2f89db40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:245:100> col:64 _wasctime 'wchar_t *(const struct tm *) __attribute__((cdecl))':'wchar_t *(const struct tm *)'
| |-ParmVarDecl 0x12e2f89d9d0 <col:79, col:97> col:97 _Tm 'const struct tm *'
| `-DeprecatedAttr 0x12e2f89dbe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wasctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f89e000 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:246:9, col:156> col:25 _wasctime_s 'errno_t (wchar_t *, size_t, const struct tm *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const struct tm *)'
| |-ParmVarDecl 0x12e2f89dd28 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x12e2f89dda0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12e2f89de30 <col:135, col:153> col:153 _Tm 'const struct tm *'
|-FunctionDecl 0x12e2f89e310 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:249:102> col:64 _wctime32 'wchar_t *(const __time32_t *) __attribute__((cdecl))':'wchar_t *(const __time32_t *)'
| |-ParmVarDecl 0x12e2f89e1a0 <col:79, col:97> col:97 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x12e2f89e3b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f89e7e0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:250:9, col:159> col:25 _wctime32_s 'errno_t (wchar_t *, size_t, const __time32_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time32_t *)'
| |-ParmVarDecl 0x12e2f89e4f8 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x12e2f89e570 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12e2f89e5e8 <col:135, col:154> col:154 _Time 'const __time32_t *'
|-FunctionDecl 0x12e2f89ec48 <line:253:9, col:186> col:24 wcsftime 'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *) __attribute__((cdecl))':'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *)'
| |-ParmVarDecl 0x12e2f89e8c0 <col:62, col:72> col:72 _Buf 'wchar_t *'
| |-ParmVarDecl 0x12e2f89e938 <col:83, col:90> col:90 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f89e9b0 <col:134, col:150> col:150 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12e2f89ea40 <col:165, col:183> col:183 _Tm 'const struct tm *'
|-FunctionDecl 0x12e2f89f160 <line:254:9, col:214> col:24 _wcsftime_l 'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *, _locale_t)'
| |-ParmVarDecl 0x12e2f89ed30 <col:65, col:75> col:75 _Buf 'wchar_t *'
| |-ParmVarDecl 0x12e2f89eda8 <col:86, col:93> col:93 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f89ee20 <col:137, col:152> col:152 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12e2f89eeb0 <col:166, col:183> col:183 _Tm 'const struct tm *'
| `-ParmVarDecl 0x12e2f89ef28 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12e2f89f3c0 <line:256:9, col:128> col:25 _wstrdate_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x12e2f89f250 <col:88, col:98> col:98 _Buf 'wchar_t *'
| `-ParmVarDecl 0x12e2f89f2c8 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x12e2f899650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:258:82 _wstrdate 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x12e2f89f558 <col:112, col:121> col:121 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x12e2f8996f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wstrdate_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f8999a8 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:260:9, col:128> col:25 _wstrtime_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x12e2f899838 <col:88, col:98> col:98 _Buf 'wchar_t *'
| `-ParmVarDecl 0x12e2f8998b0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x12e2f899c18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:262:82 _wstrtime 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x12e2f899b40 <col:112, col:121> col:121 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x12e2f899cc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wstrtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f89a030 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:264:103> col:64 used _wctime64 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)'
| |-ParmVarDecl 0x12e2f899ec0 <col:79, col:98> col:98 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x12e2f89a0d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f89a4e0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:265:9, col:158> col:25 used _wctime64_s 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)'
| |-ParmVarDecl 0x12e2f89a218 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x12e2f89a290 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12e2f89a308 <col:135, col:153> col:153 _Time 'const __time64_t *'
|-FunctionDecl 0x12e2f8a5850 <D:\Microsoft Visual Studio 12.0\VC\include\wtime.inl:44:1, line:50:1> line:44:37 _wctime 'wchar_t *(const time_t *) __attribute__((cdecl))':'wchar_t *(const time_t *)' static inline
| |-ParmVarDecl 0x12e2f8a5710 <col:45, col:60> col:60 used _Time 'const time_t *'
| `-CompoundStmt 0x12e2f8a5a10 <line:45:1, line:50:1>
|   `-ReturnStmt 0x12e2f8a5a00 <line:48:5, col:27>
|     `-CallExpr 0x12e2f8a59c0 <col:12, col:27> 'wchar_t *'
|       |-ImplicitCastExpr 0x12e2f8a59a8 <col:12> 'wchar_t *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x12e2f8a5910 <col:12> 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)' Function 0x12e2f89a030 '_wctime64' 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)'
|       `-ImplicitCastExpr 0x12e2f8a59e8 <col:22> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x12e2f8a5930 <col:22> 'const time_t *' lvalue ParmVar 0x12e2f8a5710 '_Time' 'const time_t *'
|-FunctionDecl 0x12e2f8a5cc0 <line:52:1, line:55:1> line:52:35 _wctime_s 'errno_t (wchar_t *, size_t, const time_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const time_t *)' static inline
| |-ParmVarDecl 0x12e2f8a5a38 <col:97, col:106> col:106 used _Buffer 'wchar_t *'
| |-ParmVarDecl 0x12e2f8a5ab0 <col:115, col:122> col:122 used _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f8a5b28 <col:136, col:151> col:151 used _Time 'const time_t *'
| `-CompoundStmt 0x12e2f8a5f10 <line:53:1, line:55:1>
|   `-ReturnStmt 0x12e2f8a5f00 <line:54:5, col:52>
|     `-CallExpr 0x12e2f8a5e80 <col:12, col:52> 'errno_t':'int'
|       |-ImplicitCastExpr 0x12e2f8a5e68 <col:12> 'errno_t (*)(wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x12e2f8a5d90 <col:12> 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)' Function 0x12e2f89a4e0 '_wctime64_s' 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)'
|       |-ImplicitCastExpr 0x12e2f8a5eb8 <col:24> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x12e2f8a5db0 <col:24> 'wchar_t *' lvalue ParmVar 0x12e2f8a5a38 '_Buffer' 'wchar_t *'
|       |-ImplicitCastExpr 0x12e2f8a5ed0 <col:33> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x12e2f8a5dd0 <col:33> 'size_t':'unsigned long long' lvalue ParmVar 0x12e2f8a5ab0 '_SizeInWords' 'size_t':'unsigned long long'
|       `-ImplicitCastExpr 0x12e2f8a5ee8 <col:47> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x12e2f8a5df0 <col:47> 'const time_t *' lvalue ParmVar 0x12e2f8a5b28 '_Time' 'const time_t *'
|-FunctionDecl 0x12e2f8a6120 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:82:1, line:85:1> line:82:34 difftime 'double (time_t, time_t) __attribute__((cdecl))':'double (time_t, time_t)' static inline
| |-ParmVarDecl 0x12e2f8a5f38 <col:43, col:50> col:50 used _Time1 'time_t':'long long'
| |-ParmVarDecl 0x12e2f8a5fb0 <col:58, col:65> col:65 used _Time2 'time_t':'long long'
| `-CompoundStmt 0x12e2f8a6330 <line:83:1, line:85:1>
|   `-ReturnStmt 0x12e2f8a6320 <line:84:5, col:37>
|     `-CallExpr 0x12e2f8a62c0 <col:12, col:37> 'double'
|       |-ImplicitCastExpr 0x12e2f8a62a8 <col:12> 'double (*)(__time64_t, __time64_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x12e2f8a61e8 <col:12> 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)' Function 0x12e2f89c1a0 '_difftime64' 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)'
|       |-ImplicitCastExpr 0x12e2f8a62f0 <col:24> 'time_t':'long long' <LValueToRValue>
|       | `-DeclRefExpr 0x12e2f8a6208 <col:24> 'time_t':'long long' lvalue ParmVar 0x12e2f8a5f38 '_Time1' 'time_t':'long long'
|       `-ImplicitCastExpr 0x12e2f8a6308 <col:31> 'time_t':'long long' <LValueToRValue>
|         `-DeclRefExpr 0x12e2f8a6228 <col:31> 'time_t':'long long' lvalue ParmVar 0x12e2f8a5fb0 '_Time2' 'time_t':'long long'
|-FunctionDecl 0x12e2f8a6568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:92:1> line:86:67 ctime 'char *(const time_t *) __attribute__((cdecl))':'char *(const time_t *)' static inline
| |-ParmVarDecl 0x12e2f8a6418 <col:73, col:88> col:88 used _Time 'const time_t *'
| |-CompoundStmt 0x12e2f8a6870 <line:87:1, line:92:1>
| | `-ReturnStmt 0x12e2f8a6860 <line:90:5, col:26>
| |   `-CallExpr 0x12e2f8a6820 <col:12, col:26> 'char *'
| |     |-ImplicitCastExpr 0x12e2f8a6808 <col:12> 'char *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x12e2f8a6768 <col:12> 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)' Function 0x12e2f89c4e8 '_ctime64' 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x12e2f8a6848 <col:21> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x12e2f8a6788 <col:21> 'const time_t *' lvalue ParmVar 0x12e2f8a6418 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x12e2f8a6610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using ctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f8a6b20 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:94:1, line:97:1> line:94:35 ctime_s 'errno_t (char *, size_t, const time_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const time_t *)' static inline
| |-ParmVarDecl 0x12e2f8a68a0 <col:43, col:49> col:49 used _Buffer 'char *'
| |-ParmVarDecl 0x12e2f8a6918 <col:58, col:65> col:65 used _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12e2f8a6990 <col:79, col:94> col:94 used _Time 'const time_t *'
| `-CompoundStmt 0x12e2f8a6d70 <line:95:1, line:97:1>
|   `-ReturnStmt 0x12e2f8a6d60 <line:96:5, col:51>
|     `-CallExpr 0x12e2f8a6ce0 <col:12, col:51> 'errno_t':'int'
|       |-ImplicitCastExpr 0x12e2f8a6cc8 <col:12> 'errno_t (*)(char *, size_t, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x12e2f8a6bf0 <col:12> 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)' Function 0x12e2f898a00 '_ctime64_s' 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)'
|       |-ImplicitCastExpr 0x12e2f8a6d18 <col:23> 'char *' <LValueToRValue>
|       | `-DeclRefExpr 0x12e2f8a6c10 <col:23> 'char *' lvalue ParmVar 0x12e2f8a68a0 '_Buffer' 'char *'
|       |-ImplicitCastExpr 0x12e2f8a6d30 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x12e2f8a6c30 <col:32> 'size_t':'unsigned long long' lvalue ParmVar 0x12e2f8a6918 '_SizeInBytes' 'size_t':'unsigned long long'
|       `-ImplicitCastExpr 0x12e2f8a6d48 <col:46> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x12e2f8a6c50 <col:46> 'const time_t *' lvalue ParmVar 0x12e2f8a6990 '_Time' 'const time_t *'
|-FunctionDecl 0x12e2f8a6fb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:105:1> line:99:73 gmtime 'struct tm *(const time_t *) __attribute__((cdecl))':'struct tm *(const time_t *)' static inline
| |-ParmVarDecl 0x12e2f8a6e58 <col:80, col:95> col:95 used _Time 'const time_t *'
| |-CompoundStmt 0x12e2f8a7290 <line:100:1, line:105:1>
| | `-ReturnStmt 0x12e2f8a7280 <line:103:5, col:27>
| |   `-CallExpr 0x12e2f8a7240 <col:12, col:27> 'struct tm *'
| |     |-ImplicitCastExpr 0x12e2f8a7228 <col:12> 'struct tm *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x12e2f8a7190 <col:12> 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)' Function 0x12e2f898d28 '_gmtime64' 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x12e2f8a7268 <col:22> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x12e2f8a71b0 <col:22> 'const time_t *' lvalue ParmVar 0x12e2f8a6e58 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x12e2f8a7060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gmtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f8a74a8 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:107:1, line:110:1> line:107:35 gmtime_s 'errno_t (struct tm *, const time_t *) __attribute__((cdecl))':'errno_t (struct tm *, const time_t *)' static inline
| |-ParmVarDecl 0x12e2f8a72d0 <col:44, col:56> col:56 used _Tm 'struct tm *'
| |-ParmVarDecl 0x12e2f8a7348 <col:61, col:76> col:76 used _Time 'const time_t *'
| `-CompoundStmt 0x12e2f8a76b0 <line:108:1, line:110:1>
|   `-ReturnStmt 0x12e2f8a76a0 <line:109:5, col:34>
|     `-CallExpr 0x12e2f8a7640 <col:12, col:34> 'errno_t':'int'
|       |-ImplicitCastExpr 0x12e2f8a7628 <col:12> 'errno_t (*)(struct tm *, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x12e2f8a7570 <col:12> 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)' Function 0x12e2f899148 '_gmtime64_s' 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
|       |-ImplicitCastExpr 0x12e2f8a7670 <col:24> 'struct tm *' <LValueToRValue>
|       | `-DeclRefExpr 0x12e2f8a7590 <col:24> 'struct tm *' lvalue ParmVar 0x12e2f8a72d0 '_Tm' 'struct tm *'
|       `-ImplicitCastExpr 0x12e2f8a7688 <col:29> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x12e2f8a75b0 <col:29> 'const time_t *' lvalue ParmVar 0x12e2f8a7348 '_Time' 'const time_t *'
|-FunctionDecl 0x12e2f8a78f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:118:1> line:112:76 localtime 'struct tm *(const time_t *) __attribute__((cdecl))':'struct tm *(const time_t *)' static inline
| |-ParmVarDecl 0x12e2f8a7800 <col:86, col:101> col:101 used _Time 'const time_t *'
| |-CompoundStmt 0x12e2f8a7b70 <line:113:1, line:118:1>
| | `-ReturnStmt 0x12e2f8a7b60 <line:116:5, col:30>
| |   `-CallExpr 0x12e2f8a7b20 <col:12, col:30> 'struct tm *'
| |     |-ImplicitCastExpr 0x12e2f8a7b08 <col:12> 'struct tm *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x12e2f8a7ac8 <col:12> 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)' Function 0x12e2f8993d8 '_localtime64' 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x12e2f8a7b48 <col:25> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x12e2f8a7ae8 <col:25> 'const time_t *' lvalue ParmVar 0x12e2f8a7800 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x12e2f8a7998 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using localtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f8a7d20 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:119:1, line:122:1> line:119:35 localtime_s 'errno_t (struct tm *, const time_t *) __attribute__((cdecl))':'errno_t (struct tm *, const time_t *)' static inline
| |-ParmVarDecl 0x12e2f8a7bb0 <col:47, col:59> col:59 used _Tm 'struct tm *'
| |-ParmVarDecl 0x12e2f8a7c28 <col:64, col:79> col:79 used _Time 'const time_t *'
| `-CompoundStmt 0x12e2f8a7ed0 <line:120:1, line:122:1>
|   `-ReturnStmt 0x12e2f8a7ec0 <line:121:5, col:37>
|     `-CallExpr 0x12e2f8a7e60 <col:12, col:37> 'errno_t':'int'
|       |-ImplicitCastExpr 0x12e2f8a7e48 <col:12> 'errno_t (*)(struct tm *, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x12e2f8a7de8 <col:12> 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)' Function 0x12e2f8a0830 '_localtime64_s' 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
|       |-ImplicitCastExpr 0x12e2f8a7e90 <col:27> 'struct tm *' <LValueToRValue>
|       | `-DeclRefExpr 0x12e2f8a7e08 <col:27> 'struct tm *' lvalue ParmVar 0x12e2f8a7bb0 '_Tm' 'struct tm *'
|       `-ImplicitCastExpr 0x12e2f8a7ea8 <col:32> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x12e2f8a7e28 <col:32> 'const time_t *' lvalue ParmVar 0x12e2f8a7c28 '_Time' 'const time_t *'
|-FunctionDecl 0x12e2f8a8050 <line:123:1, line:126:1> line:123:34 mktime 'time_t (struct tm *) __attribute__((cdecl))':'time_t (struct tm *)' static inline
| |-ParmVarDecl 0x12e2f8a7f10 <col:41, col:53> col:53 used _Tm 'struct tm *'
| `-CompoundStmt 0x12e2f8a8210 <line:124:1, line:126:1>
|   `-ReturnStmt 0x12e2f8a8200 <line:125:5, col:25>
|     `-CallExpr 0x12e2f8a81c0 <col:12, col:25> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x12e2f8a81a8 <col:12> '__time64_t (*)(struct tm *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x12e2f8a8110 <col:12> '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)' Function 0x12e2f8a0a90 '_mktime64' '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
|       `-ImplicitCastExpr 0x12e2f8a81e8 <col:22> 'struct tm *' <LValueToRValue>
|         `-DeclRefExpr 0x12e2f8a8130 <col:22> 'struct tm *' lvalue ParmVar 0x12e2f8a7f10 '_Tm' 'struct tm *'
|-FunctionDecl 0x12e2f8a8328 <line:127:1, line:130:1> line:127:34 _mkgmtime 'time_t (struct tm *) __attribute__((cdecl))':'time_t (struct tm *)' static inline
| |-ParmVarDecl 0x12e2f8a8250 <col:44, col:56> col:56 used _Tm 'struct tm *'
| `-CompoundStmt 0x12e2f8a8490 <line:128:1, line:130:1>
|   `-ReturnStmt 0x12e2f8a8480 <line:129:5, col:27>
|     `-CallExpr 0x12e2f8a8440 <col:12, col:27> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x12e2f8a8428 <col:12> '__time64_t (*)(struct tm *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x12e2f8a83e8 <col:12> '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)' Function 0x12e2f8a0c50 '_mkgmtime64' '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
|       `-ImplicitCastExpr 0x12e2f8a8468 <col:24> 'struct tm *' <LValueToRValue>
|         `-DeclRefExpr 0x12e2f8a8408 <col:24> 'struct tm *' lvalue ParmVar 0x12e2f8a8250 '_Tm' 'struct tm *'
|-FunctionDecl 0x12e2f8a8630 <line:131:1, line:134:1> line:131:34 time 'time_t (time_t *) __attribute__((cdecl))':'time_t (time_t *)' static inline
| |-ParmVarDecl 0x12e2f8a84e8 <col:39, col:48> col:48 used _Time 'time_t *'
| `-CompoundStmt 0x12e2f8a1790 <line:132:1, line:134:1>
|   `-ReturnStmt 0x12e2f8a1780 <line:133:5, col:25>
|     `-CallExpr 0x12e2f8a1740 <col:12, col:25> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x12e2f8a1728 <col:12> '__time64_t (*)(__time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x12e2f8a86f0 <col:12> '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)' Function 0x12e2f8a0ec0 '_time64' '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)'
|       `-ImplicitCastExpr 0x12e2f8a1768 <col:20> 'time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x12e2f8a8710 <col:20> 'time_t *' lvalue ParmVar 0x12e2f8a84e8 '_Time' 'time_t *'
|-VarDecl 0x12e2f8a1880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:291:67> col:67 daylight 'int' extern
| `-DeprecatedAttr 0x12e2f8a18e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_daylight instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x12e2f8a1af0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:292:68> col:68 timezone 'long' extern
| `-DeprecatedAttr 0x12e2f8a1b58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_timezone instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x12e2f8a1df0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:293:76> col:68 tzname 'char *[2]' extern
| `-DeprecatedAttr 0x12e2f8a1e58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_tzname instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12e2f8a20f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:297:63> col:53 tzset 'void (void) __attribute__((cdecl))':'void (void)'
| `-DeprecatedAttr 0x12e2f8a2190 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tzset. See online help for details." ""
|-FunctionDecl 0x12e2f8a2460 <.//openssl//file_jk/before\crypto\asn1/asn1_locl.h:12:1, col:60> col:5 invalid asn1_utctime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x12e2f8a22c8 <col:24, col:35> col:35 tm 'struct tm *'
| `-ParmVarDecl 0x12e2f8a2348 <col:39, col:59> col:59 invalid d 'const int *'
|-FunctionDecl 0x12e2f8a8740 <line:13:1, col:76> col:5 invalid asn1_generalizedtime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x12e2f8a2538 <col:32, col:43> col:43 tm 'struct tm *'
| `-ParmVarDecl 0x12e2f8a25b8 <col:47, col:75> col:75 invalid d 'const int *'
|-RecordDecl 0x12e2f8a87f0 <line:17:1, line:38:1> line:17:8 invalid struct asn1_sctx_st definition
| |-FieldDecl 0x12e2f8a88c8 <line:19:5, col:22> col:22 invalid it 'const int *'
| |-FieldDecl 0x12e2f8a8938 <line:21:5, col:26> col:26 invalid tt 'const int *'
| |-FieldDecl 0x12e2f8a89a8 <line:23:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x12e2f8a8a18 <line:25:5, col:9> col:9 skidx 'int'
| |-FieldDecl 0x12e2f8a8a88 <line:27:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x12e2f8a8af8 <line:29:5, col:17> col:17 sname 'const char *'
| |-FieldDecl 0x12e2f8a8b68 <col:5, col:25> col:25 fname 'const char *'
| |-FieldDecl 0x12e2f8a8bd8 <line:31:5, col:9> col:9 prim_type 'int'
| |-FieldDecl 0x12e2f8a8c78 <line:33:5, col:18> col:18 invalid field 'int **'
| |-FieldDecl 0x12e2f8a8e18 <line:35:5, col:35> col:11 scan_cb 'int (*)(int *)'
| `-FieldDecl 0x12e2f8a8e88 <line:37:5, col:11> col:11 app_data 'void *'
|-RecordDecl 0x12e2f8a8ee0 <line:40:9, col:16> col:16 struct mime_param_st
|-TypedefDecl 0x12e2f8a8ff8 <col:1, col:30> col:30 referenced MIME_PARAM 'struct mime_param_st':'struct mime_param_st'
| `-ElaboratedType 0x12e2f8a8fa0 'struct mime_param_st' sugar
|   `-RecordType 0x12e2f8a8f80 'struct mime_param_st'
|     `-Record 0x12e2f8a8ee0 'mime_param_st'
|-FunctionDecl 0x12e2f8a91a0 <line:41:1, col:27> col:1 DEFINE_STACK_OF 'int (MIME_PARAM)'
| `-ParmVarDecl 0x12e2f8a90a0 <col:17> col:27 'MIME_PARAM':'struct mime_param_st'
|-RecordDecl 0x12e2f8a9260 <line:42:9, col:16> col:16 struct mime_header_st
|-TypedefDecl 0x12e2f8a9378 <col:1, col:31> col:31 referenced MIME_HEADER 'struct mime_header_st':'struct mime_header_st'
| `-ElaboratedType 0x12e2f8a9320 'struct mime_header_st' sugar
|   `-RecordType 0x12e2f8a9300 'struct mime_header_st'
|     `-Record 0x12e2f8a9260 'mime_header_st'
|-FunctionDecl 0x12e2f8a9520 <line:43:1, col:28> col:1 invalid DEFINE_STACK_OF 'int (MIME_HEADER)'
| `-ParmVarDecl 0x12e2f8a9420 <col:17> col:28 'MIME_HEADER':'struct mime_header_st'
|-VarDecl 0x12e2f8a9670 <line:46:1, col:32> col:20 used _asn1_mon 'const char *[12]' extern
|-FunctionDecl 0x12e2f8a4858 <line:48:1, col:54> col:6 invalid asn1_string_embed_free 'void (int *, int)'
| |-ParmVarDecl 0x12e2f8a4700 <col:29, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x12e2f8a4780 <col:45, col:49> col:49 embed 'int'
|-FunctionDecl 0x12e2f8a4a80 <line:50:1, col:68> col:5 invalid asn1_get_choice_selector 'int (int **, const int *)'
| |-ParmVarDecl 0x12e2f8a4928 <col:30, col:43> col:43 invalid pval 'int **'
| `-ParmVarDecl 0x12e2f8a49a8 <col:49, col:66> col:66 invalid it 'const int *'
|-FunctionDecl 0x12e2f8a4d40 <line:51:1, line:52:49> line:51:5 invalid asn1_set_choice_selector 'int (int **, int, const int *)'
| |-ParmVarDecl 0x12e2f8a4b50 <col:30, col:43> col:43 invalid pval 'int **'
| |-ParmVarDecl 0x12e2f8a4bd0 <col:49, col:53> col:53 value 'int'
| `-ParmVarDecl 0x12e2f8a4c50 <line:52:30, col:47> col:47 invalid it 'const int *'
|-FunctionDecl 0x12e2f8a4f78 <line:54:1, col:75> col:14 invalid asn1_get_field_ptr 'int **(int **, const int *)'
| |-ParmVarDecl 0x12e2f8a4e18 <col:33, col:46> col:46 invalid pval 'int **'
| `-ParmVarDecl 0x12e2f8a4e98 <col:52, col:73> col:73 invalid tt 'const int *'
|-FunctionDecl 0x12e2f8a5230 <line:56:1, line:57:45> line:56:22 invalid asn1_do_adb 'const int *(int **, const int *, int)'
| |-ParmVarDecl 0x12e2f8a5048 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x12e2f8a50c8 <col:53, col:74> col:74 invalid tt 'const int *'
| `-ParmVarDecl 0x12e2f8a5148 <line:57:34, col:38> col:38 nullerr 'int'
|-FunctionDecl 0x12e2f8a54b0 <line:59:1, col:64> col:5 invalid asn1_do_lock 'int (int **, int, const int *)'
| |-ParmVarDecl 0x12e2f8a5308 <col:18, col:31> col:31 invalid pval 'int **'
| |-ParmVarDecl 0x12e2f8a5388 <col:37, col:41> col:41 op 'int'
| `-ParmVarDecl 0x12e2f8a5408 <col:45, col:62> col:62 invalid it 'const int *'
|-FunctionDecl 0x12e2f8a9750 <line:61:1, col:58> col:6 invalid asn1_enc_init 'void (int **, const int *)'
| |-ParmVarDecl 0x12e2f8a5588 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x12e2f8a5608 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x12e2f8a9938 <line:62:1, col:58> col:6 invalid asn1_enc_free 'void (int **, const int *)'
| |-ParmVarDecl 0x12e2f8a9820 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x12e2f8a98a0 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x12e2f8a9cf0 <line:63:1, line:64:41> line:63:5 invalid asn1_enc_restore 'int (int *, unsigned char **, int **, const int *)'
| |-ParmVarDecl 0x12e2f8a9a00 <col:22, col:27> col:27 len 'int *'
| |-ParmVarDecl 0x12e2f8a9ae8 <col:32, col:48> col:48 out 'unsigned char **'
| |-ParmVarDecl 0x12e2f8a9b70 <col:53, col:66> col:66 invalid pval 'int **'
| `-ParmVarDecl 0x12e2f8a9bf0 <line:64:22, col:39> col:39 invalid it 'const int *'
|-FunctionDecl 0x12e2f8aa050 <line:65:1, line:66:38> line:65:5 invalid asn1_enc_save 'int (int **, const unsigned char *, int, const int *)'
| |-ParmVarDecl 0x12e2f8a9dd0 <col:19, col:32> col:32 invalid pval 'int **'
| |-ParmVarDecl 0x12e2f8a9e50 <col:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x12e2f8a9ed0 <col:63, col:67> col:67 inlen 'int'
| `-ParmVarDecl 0x12e2f8a9f50 <line:66:19, col:36> col:36 invalid it 'const int *'
|-FunctionDecl 0x12e2f8aa318 <line:68:1, col:76> col:6 invalid asn1_item_embed_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x12e2f8aa130 <col:27, col:40> col:40 invalid pval 'int **'
| |-ParmVarDecl 0x12e2f8aa1b0 <col:46, col:63> col:63 invalid it 'const int *'
| `-ParmVarDecl 0x12e2f8aa230 <col:67, col:71> col:71 embed 'int'
|-FunctionDecl 0x12e2f8aa590 <line:69:1, col:75> col:6 invalid asn1_primitive_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x12e2f8aa3f0 <col:26, col:39> col:39 invalid pval 'int **'
| |-ParmVarDecl 0x12e2f8aa470 <col:45, col:62> col:62 invalid it 'const int *'
| `-ParmVarDecl 0x12e2f8aa4f0 <col:66, col:70> col:70 embed 'int'
|-FunctionDecl 0x12e2f8a2710 <line:70:1, col:67> col:6 invalid asn1_template_free 'void (int **, const int *)'
| |-ParmVarDecl 0x12e2f8aa668 <col:25, col:38> col:38 invalid pval 'int **'
| `-ParmVarDecl 0x12e2f8aa6e8 <col:44, col:65> col:65 invalid tt 'const int *'
|-FunctionDecl 0x12e2f8a2a00 <line:72:1, line:73:41> line:72:14 invalid c2i_ASN1_OBJECT 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x12e2f8a27e0 <col:30, col:44> col:44 invalid a 'int **'
| |-ParmVarDecl 0x12e2f8a2898 <col:47, col:69> col:69 pp 'const unsigned char **'
| `-ParmVarDecl 0x12e2f8a2918 <line:73:30, col:35> col:35 length 'long'
|-FunctionDecl 0x12e2f8a2c30 <line:74:1, col:63> col:5 invalid i2c_ASN1_BIT_STRING 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x12e2f8a2ad0 <col:25, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x12e2f8a2b58 <col:45, col:61> col:61 pp 'unsigned char **'
|-FunctionDecl 0x12e2f8a2eb0 <line:75:1, line:76:75> line:75:18 invalid c2i_ASN1_BIT_STRING 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x12e2f8a2d00 <col:38, col:56> col:56 invalid a 'int **'
| |-ParmVarDecl 0x12e2f8a2d88 <line:76:38, col:60> col:60 pp 'const unsigned char **'
| `-ParmVarDecl 0x12e2f8a2e08 <col:64, col:69> col:69 length 'long'
|-FunctionDecl 0x12e2f8a30a8 <line:77:1, col:57> col:5 invalid i2c_ASN1_INTEGER 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x12e2f8a2f80 <col:22, col:36> col:36 invalid a 'int *'
| `-ParmVarDecl 0x12e2f8a3008 <col:39, col:55> col:55 pp 'unsigned char **'
|-FunctionDecl 0x12e2f8a3328 <line:78:1, line:79:43> line:78:15 invalid c2i_ASN1_INTEGER 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x12e2f8a3178 <col:32, col:47> col:47 invalid a 'int **'
| |-ParmVarDecl 0x12e2f8a3200 <col:50, col:72> col:72 pp 'const unsigned char **'
| `-ParmVarDecl 0x12e2f8a3280 <line:79:32, col:37> col:37 length 'long'
|-FunctionDecl 0x12e2f8ad790 <line:82:1, col:79> col:5 invalid c2i_uint64_int 'int (int *, int *, const unsigned char **, long)'
| |-ParmVarDecl 0x12e2f8a33f8 <col:20, col:30> col:30 invalid ret 'int *'
| |-ParmVarDecl 0x12e2f8a3478 <col:35, col:40> col:40 neg 'int *'
| |-ParmVarDecl 0x12e2f8a3500 <col:45, col:67> col:67 pp 'const unsigned char **'
| `-ParmVarDecl 0x12e2f8a3580 <col:71, col:76> col:76 len 'long'
|-FunctionDecl 0x12e2f8ada50 <line:83:1, col:57> col:5 invalid i2c_uint64_int 'int (unsigned char *, int, int)'
| |-ParmVarDecl 0x12e2f8ad868 <col:20, col:35> col:35 p 'unsigned char *'
| |-ParmVarDecl 0x12e2f8ad8e8 <col:38, col:47> col:47 invalid r 'int'
| `-ParmVarDecl 0x12e2f8ad968 <col:50, col:54> col:54 neg 'int'
|-FunctionDecl 0x12e2f8adc50 <.//openssl//file_jk/before\crypto\asn1\a_utctm.c:16:1, line:106:1> line:16:5 invalid asn1_utctime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x12e2f8adb30 <col:24, col:35> col:35 used tm 'struct tm *'
| |-ParmVarDecl 0x12e2f8adbb0 <col:39, col:59> col:59 invalid d 'const int *'
| `-CompoundStmt 0x12e2f8ab428 <line:17:1, line:106:1>
|   |-DeclStmt 0x12e2f8ae0b8 <line:18:5, col:57>
|   | `-VarDecl 0x12e2f8ade00 <col:5, col:56> col:22 used min 'const int [8]' static cinit
|   |   `-InitListExpr 0x12e2f8ae038 <col:31, col:56> 'const int [8]'
|   |     |-IntegerLiteral 0x12e2f8ade68 <col:33> 'int' 0
|   |     |-IntegerLiteral 0x12e2f8ade90 <col:36> 'int' 1
|   |     |-IntegerLiteral 0x12e2f8adeb8 <col:39> 'int' 1
|   |     |-IntegerLiteral 0x12e2f8adee0 <col:42> 'int' 0
|   |     |-IntegerLiteral 0x12e2f8adf08 <col:45> 'int' 0
|   |     |-IntegerLiteral 0x12e2f8adf30 <col:48> 'int' 0
|   |     |-IntegerLiteral 0x12e2f8adf58 <col:51> 'int' 0
|   |     `-IntegerLiteral 0x12e2f8adf80 <col:54> 'int' 0
|   |-DeclStmt 0x12e2f8ae3f0 <line:19:5, col:65>
|   | `-VarDecl 0x12e2f8ae138 <col:5, col:64> col:22 used max 'const int [8]' static cinit
|   |   `-InitListExpr 0x12e2f8ae370 <col:31, col:64> 'const int [8]'
|   |     |-IntegerLiteral 0x12e2f8ae1a0 <col:33> 'int' 99
|   |     |-IntegerLiteral 0x12e2f8ae1c8 <col:37> 'int' 12
|   |     |-IntegerLiteral 0x12e2f8ae1f0 <col:41> 'int' 31
|   |     |-IntegerLiteral 0x12e2f8ae218 <col:45> 'int' 23
|   |     |-IntegerLiteral 0x12e2f8ae240 <col:49> 'int' 59
|   |     |-IntegerLiteral 0x12e2f8ae268 <col:53> 'int' 59
|   |     |-IntegerLiteral 0x12e2f8ae290 <col:57> 'int' 12
|   |     `-IntegerLiteral 0x12e2f8ae2b8 <col:61> 'int' 59
|   |-DeclStmt 0x12e2f8ae488 <line:20:5, col:12>
|   | `-VarDecl 0x12e2f8ae420 <col:5, col:11> col:11 used a 'char *'
|   |-DeclStmt 0x12e2f8ae6c8 <line:21:5, col:19>
|   | |-VarDecl 0x12e2f8ae4b8 <col:5, col:9> col:9 used n 'int'
|   | |-VarDecl 0x12e2f8ae538 <col:5, col:12> col:12 used i 'int'
|   | |-VarDecl 0x12e2f8ae5b8 <col:5, col:15> col:15 used l 'int'
|   | `-VarDecl 0x12e2f8ae638 <col:5, col:18> col:18 used o 'int'
|   |-IfStmt 0x12e2f8ae750 <line:23:5, line:24:18>
|   | |-OpaqueValueExpr 0x12e2f8ae738 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x12e2f8ae728 <col:9, col:18>
|   |   `-ParenExpr 0x12e2f8ae708 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x12e2f8ae6e0 <col:17> 'int' 0
|   |-BinaryOperator 0x12e2f8ae850 <line:27:5, col:9> 'int' '='
|   | |-DeclRefExpr 0x12e2f8ae7f0 <col:5> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   | `-IntegerLiteral 0x12e2f8ae828 <col:9> 'int' 0
|   |-IfStmt 0x12e2f8ae958 <line:29:5, line:30:14>
|   | |-BinaryOperator 0x12e2f8ae8d0 <line:29:9, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x12e2f8ae8b8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12e2f8ae870 <col:9> 'int' lvalue Var 0x12e2f8ae5b8 'l' 'int'
|   | | `-IntegerLiteral 0x12e2f8ae890 <col:13> 'int' 11
|   | `-GotoStmt 0x12e2f8ae940 <line:30:9, col:14> 'err' 0x12e2f8ae8f0
|   |-ForStmt 0x12e2f8ad730 <line:31:5, line:74:5>
|   | |-BinaryOperator 0x12e2f8ae9d0 <line:31:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x12e2f8ae970 <col:10> 'int' lvalue Var 0x12e2f8ae538 'i' 'int'
|   | | `-IntegerLiteral 0x12e2f8ae9a8 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x12e2f8aea50 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x12e2f8aea38 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12e2f8ae9f0 <col:17> 'int' lvalue Var 0x12e2f8ae538 'i' 'int'
|   | | `-IntegerLiteral 0x12e2f8aea10 <col:21> 'int' 6
|   | |-UnaryOperator 0x12e2f8aea90 <col:24, col:25> 'int' postfix '++'
|   | | `-DeclRefExpr 0x12e2f8aea70 <col:24> 'int' lvalue Var 0x12e2f8ae538 'i' 'int'
|   | `-CompoundStmt 0x12e2f8ad6d8 <col:29, line:74:5>
|   |   |-IfStmt 0x12e2f8af090 <line:32:9, line:37:9>
|   |   | |-BinaryOperator 0x12e2f8aeef0 <line:32:13, col:73> 'int' '&&'
|   |   | | |-ParenExpr 0x12e2f8aeb28 <col:13, col:20> 'int'
|   |   | | | `-BinaryOperator 0x12e2f8aeb08 <col:14, col:19> 'int' '=='
|   |   | | |   |-ImplicitCastExpr 0x12e2f8aeaf0 <col:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x12e2f8aeaa8 <col:14> 'int' lvalue Var 0x12e2f8ae538 'i' 'int'
|   |   | | |   `-IntegerLiteral 0x12e2f8aeac8 <col:19> 'int' 5
|   |   | | `-ParenExpr 0x12e2f8aeed0 <col:25, col:73> 'int'
|   |   | |   `-BinaryOperator 0x12e2f8aeeb0 <col:26, col:72> 'int' '||'
|   |   | |     |-BinaryOperator 0x12e2f8aed78 <col:26, col:55> 'int' '||'
|   |   | |     | |-ParenExpr 0x12e2f8aec40 <col:26, col:38> 'int'
|   |   | |     | | `-BinaryOperator 0x12e2f8aec20 <col:27, col:35> 'int' '=='
|   |   | |     | |   |-ImplicitCastExpr 0x12e2f8aec08 <col:27, col:30> 'int' <IntegralCast>
|   |   | |     | |   | `-ImplicitCastExpr 0x12e2f8aebf0 <col:27, col:30> 'char' <LValueToRValue>
|   |   | |     | |   |   `-ArraySubscriptExpr 0x12e2f8aebb8 <col:27, col:30> 'char' lvalue
|   |   | |     | |   |     |-ImplicitCastExpr 0x12e2f8aeb88 <col:27> 'char *' <LValueToRValue>
|   |   | |     | |   |     | `-DeclRefExpr 0x12e2f8aeb48 <col:27> 'char *' lvalue Var 0x12e2f8ae420 'a' 'char *'
|   |   | |     | |   |     `-ImplicitCastExpr 0x12e2f8aeba0 <col:29> 'int' <LValueToRValue>
|   |   | |     | |   |       `-DeclRefExpr 0x12e2f8aeb68 <col:29> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   |   | |     | |   `-CharacterLiteral 0x12e2f8aebd8 <col:35> 'int' 90
|   |   | |     | `-ParenExpr 0x12e2f8aed58 <col:43, col:55> 'int'
|   |   | |     |   `-BinaryOperator 0x12e2f8aed38 <col:44, col:52> 'int' '=='
|   |   | |     |     |-ImplicitCastExpr 0x12e2f8aed20 <col:44, col:47> 'int' <IntegralCast>
|   |   | |     |     | `-ImplicitCastExpr 0x12e2f8aed08 <col:44, col:47> 'char' <LValueToRValue>
|   |   | |     |     |   `-ArraySubscriptExpr 0x12e2f8aecd0 <col:44, col:47> 'char' lvalue
|   |   | |     |     |     |-ImplicitCastExpr 0x12e2f8aeca0 <col:44> 'char *' <LValueToRValue>
|   |   | |     |     |     | `-DeclRefExpr 0x12e2f8aec60 <col:44> 'char *' lvalue Var 0x12e2f8ae420 'a' 'char *'
|   |   | |     |     |     `-ImplicitCastExpr 0x12e2f8aecb8 <col:46> 'int' <LValueToRValue>
|   |   | |     |     |       `-DeclRefExpr 0x12e2f8aec80 <col:46> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   |   | |     |     `-CharacterLiteral 0x12e2f8aecf0 <col:52> 'int' 43
|   |   | |     `-ParenExpr 0x12e2f8aee90 <col:60, col:72> 'int'
|   |   | |       `-BinaryOperator 0x12e2f8aee70 <col:61, col:69> 'int' '=='
|   |   | |         |-ImplicitCastExpr 0x12e2f8aee58 <col:61, col:64> 'int' <IntegralCast>
|   |   | |         | `-ImplicitCastExpr 0x12e2f8aee40 <col:61, col:64> 'char' <LValueToRValue>
|   |   | |         |   `-ArraySubscriptExpr 0x12e2f8aee08 <col:61, col:64> 'char' lvalue
|   |   | |         |     |-ImplicitCastExpr 0x12e2f8aedd8 <col:61> 'char *' <LValueToRValue>
|   |   | |         |     | `-DeclRefExpr 0x12e2f8aed98 <col:61> 'char *' lvalue Var 0x12e2f8ae420 'a' 'char *'
|   |   | |         |     `-ImplicitCastExpr 0x12e2f8aedf0 <col:63> 'int' <LValueToRValue>
|   |   | |         |       `-DeclRefExpr 0x12e2f8aedb8 <col:63> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   |   | |         `-CharacterLiteral 0x12e2f8aee28 <col:69> 'int' 45
|   |   | `-CompoundStmt 0x12e2f8af068 <col:76, line:37:9>
|   |   |   |-UnaryOperator 0x12e2f8aef30 <line:33:13, col:14> 'int' postfix '++'
|   |   |   | `-DeclRefExpr 0x12e2f8aef10 <col:13> 'int' lvalue Var 0x12e2f8ae538 'i' 'int'
|   |   |   |-IfStmt 0x12e2f8af048 <line:34:13, line:35:30>
|   |   |   | |-ImplicitCastExpr 0x12e2f8aef80 <line:34:17> 'struct tm *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x12e2f8aef48 <col:17> 'struct tm *' lvalue ParmVar 0x12e2f8adb30 'tm' 'struct tm *'
|   |   |   | `-BinaryOperator 0x12e2f8af028 <line:35:17, col:30> 'int' '='
|   |   |   |   |-MemberExpr 0x12e2f8aefd0 <col:17, col:21> 'int' lvalue ->tm_sec 0x12e2f867678
|   |   |   |   | `-ImplicitCastExpr 0x12e2f8aefb8 <col:17> 'struct tm *' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x12e2f8aef98 <col:17> 'struct tm *' lvalue ParmVar 0x12e2f8adb30 'tm' 'struct tm *'
|   |   |   |   `-IntegerLiteral 0x12e2f8af000 <col:30> 'int' 0
|   |   |   `-BreakStmt 0x12e2f8af060 <line:36:13>
|   |   |-IfStmt 0x12e2f8af310 <line:38:9, line:39:18>
|   |   | |-BinaryOperator 0x12e2f8af2d8 <line:38:13, col:40> 'int' '||'
|   |   | | |-ParenExpr 0x12e2f8af1a0 <col:13, col:24> 'int'
|   |   | | | `-BinaryOperator 0x12e2f8af180 <col:14, col:21> 'int' '<'
|   |   | | |   |-ImplicitCastExpr 0x12e2f8af168 <col:14, col:17> 'int' <IntegralCast>
|   |   | | |   | `-ImplicitCastExpr 0x12e2f8af150 <col:14, col:17> 'char' <LValueToRValue>
|   |   | | |   |   `-ArraySubscriptExpr 0x12e2f8af118 <col:14, col:17> 'char' lvalue
|   |   | | |   |     |-ImplicitCastExpr 0x12e2f8af0e8 <col:14> 'char *' <LValueToRValue>
|   |   | | |   |     | `-DeclRefExpr 0x12e2f8af0a8 <col:14> 'char *' lvalue Var 0x12e2f8ae420 'a' 'char *'
|   |   | | |   |     `-ImplicitCastExpr 0x12e2f8af100 <col:16> 'int' <LValueToRValue>
|   |   | | |   |       `-DeclRefExpr 0x12e2f8af0c8 <col:16> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   |   | | |   `-CharacterLiteral 0x12e2f8af138 <col:21> 'int' 48
|   |   | | `-ParenExpr 0x12e2f8af2b8 <col:29, col:40> 'int'
|   |   | |   `-BinaryOperator 0x12e2f8af298 <col:30, col:37> 'int' '>'
|   |   | |     |-ImplicitCastExpr 0x12e2f8af280 <col:30, col:33> 'int' <IntegralCast>
|   |   | |     | `-ImplicitCastExpr 0x12e2f8af268 <col:30, col:33> 'char' <LValueToRValue>
|   |   | |     |   `-ArraySubscriptExpr 0x12e2f8af230 <col:30, col:33> 'char' lvalue
|   |   | |     |     |-ImplicitCastExpr 0x12e2f8af200 <col:30> 'char *' <LValueToRValue>
|   |   | |     |     | `-DeclRefExpr 0x12e2f8af1c0 <col:30> 'char *' lvalue Var 0x12e2f8ae420 'a' 'char *'
|   |   | |     |     `-ImplicitCastExpr 0x12e2f8af218 <col:32> 'int' <LValueToRValue>
|   |   | |     |       `-DeclRefExpr 0x12e2f8af1e0 <col:32> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   |   | |     `-CharacterLiteral 0x12e2f8af250 <col:37> 'int' 57
|   |   | `-GotoStmt 0x12e2f8af2f8 <line:39:13, col:18> 'err' 0x12e2f8ae8f0
|   |   |-BinaryOperator 0x12e2f8af458 <line:40:9, col:20> 'int' '='
|   |   | |-DeclRefExpr 0x12e2f8af328 <col:9> 'int' lvalue Var 0x12e2f8ae4b8 'n' 'int'
|   |   | `-BinaryOperator 0x12e2f8af438 <col:13, col:20> 'int' '-'
|   |   |   |-ImplicitCastExpr 0x12e2f8af420 <col:13, col:16> 'int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x12e2f8af408 <col:13, col:16> 'char' <LValueToRValue>
|   |   |   |   `-ArraySubscriptExpr 0x12e2f8af3d0 <col:13, col:16> 'char' lvalue
|   |   |   |     |-ImplicitCastExpr 0x12e2f8af3a0 <col:13> 'char *' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x12e2f8af360 <col:13> 'char *' lvalue Var 0x12e2f8ae420 'a' 'char *'
|   |   |   |     `-ImplicitCastExpr 0x12e2f8af3b8 <col:15> 'int' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x12e2f8af380 <col:15> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   |   |   `-CharacterLiteral 0x12e2f8af3f0 <col:20> 'int' 48
|   |   |-IfStmt 0x12e2f8af520 <line:41:9, line:42:18>
|   |   | |-BinaryOperator 0x12e2f8af4e8 <line:41:13, col:19> 'int' '>'
|   |   | | |-UnaryOperator 0x12e2f8af498 <col:13, col:15> 'int' prefix '++'
|   |   | | | `-DeclRefExpr 0x12e2f8af478 <col:15> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   |   | | `-ImplicitCastExpr 0x12e2f8af4d0 <col:19> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x12e2f8af4b0 <col:19> 'int' lvalue Var 0x12e2f8ae5b8 'l' 'int'
|   |   | `-GotoStmt 0x12e2f8af508 <line:42:13, col:18> 'err' 0x12e2f8ae8f0
|   |   |-IfStmt 0x12e2f8ac780 <line:44:9, line:45:18>
|   |   | |-BinaryOperator 0x12e2f8af768 <line:44:13, col:40> 'int' '||'
|   |   | | |-ParenExpr 0x12e2f8af630 <col:13, col:24> 'int'
|   |   | | | `-BinaryOperator 0x12e2f8af610 <col:14, col:21> 'int' '<'
|   |   | | |   |-ImplicitCastExpr 0x12e2f8af5f8 <col:14, col:17> 'int' <IntegralCast>
|   |   | | |   | `-ImplicitCastExpr 0x12e2f8af5e0 <col:14, col:17> 'char' <LValueToRValue>
|   |   | | |   |   `-ArraySubscriptExpr 0x12e2f8af5a8 <col:14, col:17> 'char' lvalue
|   |   | | |   |     |-ImplicitCastExpr 0x12e2f8af578 <col:14> 'char *' <LValueToRValue>
|   |   | | |   |     | `-DeclRefExpr 0x12e2f8af538 <col:14> 'char *' lvalue Var 0x12e2f8ae420 'a' 'char *'
|   |   | | |   |     `-ImplicitCastExpr 0x12e2f8af590 <col:16> 'int' <LValueToRValue>
|   |   | | |   |       `-DeclRefExpr 0x12e2f8af558 <col:16> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   |   | | |   `-CharacterLiteral 0x12e2f8af5c8 <col:21> 'int' 48
|   |   | | `-ParenExpr 0x12e2f8af748 <col:29, col:40> 'int'
|   |   | |   `-BinaryOperator 0x12e2f8af728 <col:30, col:37> 'int' '>'
|   |   | |     |-ImplicitCastExpr 0x12e2f8af710 <col:30, col:33> 'int' <IntegralCast>
|   |   | |     | `-ImplicitCastExpr 0x12e2f8af6f8 <col:30, col:33> 'char' <LValueToRValue>
|   |   | |     |   `-ArraySubscriptExpr 0x12e2f8af6c0 <col:30, col:33> 'char' lvalue
|   |   | |     |     |-ImplicitCastExpr 0x12e2f8af690 <col:30> 'char *' <LValueToRValue>
|   |   | |     |     | `-DeclRefExpr 0x12e2f8af650 <col:30> 'char *' lvalue Var 0x12e2f8ae420 'a' 'char *'
|   |   | |     |     `-ImplicitCastExpr 0x12e2f8af6a8 <col:32> 'int' <LValueToRValue>
|   |   | |     |       `-DeclRefExpr 0x12e2f8af670 <col:32> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   |   | |     `-CharacterLiteral 0x12e2f8af6e0 <col:37> 'int' 57
|   |   | `-GotoStmt 0x12e2f8af788 <line:45:13, col:18> 'err' 0x12e2f8ae8f0
|   |   |-BinaryOperator 0x12e2f8ac970 <line:46:9, col:31> 'int' '='
|   |   | |-DeclRefExpr 0x12e2f8ac798 <col:9> 'int' lvalue Var 0x12e2f8ae4b8 'n' 'int'
|   |   | `-BinaryOperator 0x12e2f8ac950 <col:13, col:31> 'int' '-'
|   |   |   |-BinaryOperator 0x12e2f8ac918 <col:13, col:27> 'int' '+'
|   |   |   | |-ParenExpr 0x12e2f8ac838 <col:13, col:20> 'int'
|   |   |   | | `-BinaryOperator 0x12e2f8ac818 <col:14, col:18> 'int' '*'
|   |   |   | |   |-ImplicitCastExpr 0x12e2f8ac800 <col:14> 'int' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x12e2f8ac7b8 <col:14> 'int' lvalue Var 0x12e2f8ae4b8 'n' 'int'
|   |   |   | |   `-IntegerLiteral 0x12e2f8ac7d8 <col:18> 'int' 10
|   |   |   | `-ImplicitCastExpr 0x12e2f8ac900 <col:24, col:27> 'int' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x12e2f8ac8e8 <col:24, col:27> 'char' <LValueToRValue>
|   |   |   |     `-ArraySubscriptExpr 0x12e2f8ac8c8 <col:24, col:27> 'char' lvalue
|   |   |   |       |-ImplicitCastExpr 0x12e2f8ac898 <col:24> 'char *' <LValueToRValue>
|   |   |   |       | `-DeclRefExpr 0x12e2f8ac858 <col:24> 'char *' lvalue Var 0x12e2f8ae420 'a' 'char *'
|   |   |   |       `-ImplicitCastExpr 0x12e2f8ac8b0 <col:26> 'int' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x12e2f8ac878 <col:26> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   |   |   `-CharacterLiteral 0x12e2f8ac938 <col:31> 'int' 48
|   |   |-IfStmt 0x12e2f8aca38 <line:47:9, line:48:18>
|   |   | |-BinaryOperator 0x12e2f8aca00 <line:47:13, col:19> 'int' '>'
|   |   | | |-UnaryOperator 0x12e2f8ac9b0 <col:13, col:15> 'int' prefix '++'
|   |   | | | `-DeclRefExpr 0x12e2f8ac990 <col:15> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   |   | | `-ImplicitCastExpr 0x12e2f8ac9e8 <col:19> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x12e2f8ac9c8 <col:19> 'int' lvalue Var 0x12e2f8ae5b8 'l' 'int'
|   |   | `-GotoStmt 0x12e2f8aca20 <line:48:13, col:18> 'err' 0x12e2f8ae8f0
|   |   |-IfStmt 0x12e2f8accf8 <line:50:9, line:51:18>
|   |   | |-BinaryOperator 0x12e2f8accc0 <line:50:13, col:40> 'int' '||'
|   |   | | |-ParenExpr 0x12e2f8acb68 <col:13, col:24> 'int'
|   |   | | | `-BinaryOperator 0x12e2f8acb48 <col:14, col:23> 'int' '<'
|   |   | | |   |-ImplicitCastExpr 0x12e2f8acb18 <col:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x12e2f8aca50 <col:14> 'int' lvalue Var 0x12e2f8ae4b8 'n' 'int'
|   |   | | |   `-ImplicitCastExpr 0x12e2f8acb30 <col:18, col:23> 'int' <LValueToRValue>
|   |   | | |     `-ArraySubscriptExpr 0x12e2f8acaf8 <col:18, col:23> 'const int' lvalue
|   |   | | |       |-ImplicitCastExpr 0x12e2f8acac8 <col:18> 'const int *' <ArrayToPointerDecay>
|   |   | | |       | `-DeclRefExpr 0x12e2f8aca70 <col:18> 'const int [8]' lvalue Var 0x12e2f8ade00 'min' 'const int [8]'
|   |   | | |       `-ImplicitCastExpr 0x12e2f8acae0 <col:22> 'int' <LValueToRValue>
|   |   | | |         `-DeclRefExpr 0x12e2f8acaa8 <col:22> 'int' lvalue Var 0x12e2f8ae538 'i' 'int'
|   |   | | `-ParenExpr 0x12e2f8acca0 <col:29, col:40> 'int'
|   |   | |   `-BinaryOperator 0x12e2f8acc80 <col:30, col:39> 'int' '>'
|   |   | |     |-ImplicitCastExpr 0x12e2f8acc50 <col:30> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x12e2f8acb88 <col:30> 'int' lvalue Var 0x12e2f8ae4b8 'n' 'int'
|   |   | |     `-ImplicitCastExpr 0x12e2f8acc68 <col:34, col:39> 'int' <LValueToRValue>
|   |   | |       `-ArraySubscriptExpr 0x12e2f8acc30 <col:34, col:39> 'const int' lvalue
|   |   | |         |-ImplicitCastExpr 0x12e2f8acc00 <col:34> 'const int *' <ArrayToPointerDecay>
|   |   | |         | `-DeclRefExpr 0x12e2f8acba8 <col:34> 'const int [8]' lvalue Var 0x12e2f8ae138 'max' 'const int [8]'
|   |   | |         `-ImplicitCastExpr 0x12e2f8acc18 <col:38> 'int' <LValueToRValue>
|   |   | |           `-DeclRefExpr 0x12e2f8acbe0 <col:38> 'int' lvalue Var 0x12e2f8ae538 'i' 'int'
|   |   | `-GotoStmt 0x12e2f8acce0 <line:51:13, col:18> 'err' 0x12e2f8ae8f0
|   |   `-IfStmt 0x12e2f8ad6c0 <line:52:9, line:73:9>
|   |     |-ImplicitCastExpr 0x12e2f8acd30 <line:52:13> 'struct tm *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x12e2f8acd10 <col:13> 'struct tm *' lvalue ParmVar 0x12e2f8adb30 'tm' 'struct tm *'
|   |     `-CompoundStmt 0x12e2f8ad6a8 <col:17, line:73:9>
|   |       `-SwitchStmt 0x12e2f8acd80 <line:53:13, line:72:13>
|   |         |-ImplicitCastExpr 0x12e2f8acd68 <line:53:21> 'int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x12e2f8acd48 <col:21> 'int' lvalue Var 0x12e2f8ae538 'i' 'int'
|   |         `-CompoundStmt 0x12e2f8ad638 <col:24, line:72:13>
|   |           |-CaseStmt 0x12e2f8acde0 <line:54:13, line:55:50>
|   |           | |-ConstantExpr 0x12e2f8acdc8 <line:54:18> 'int'
|   |           | | `-IntegerLiteral 0x12e2f8acda0 <col:18> 'int' 0
|   |           | `-BinaryOperator 0x12e2f8acfd8 <line:55:17, col:50> 'int' '='
|   |           |   |-MemberExpr 0x12e2f8ace40 <col:17, col:21> 'int' lvalue ->tm_year 0x12e2f8678a8
|   |           |   | `-ImplicitCastExpr 0x12e2f8ace28 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x12e2f8ace08 <col:17> 'struct tm *' lvalue ParmVar 0x12e2f8adb30 'tm' 'struct tm *'
|   |           |   `-ConditionalOperator 0x12e2f8acfa8 <col:31, col:50> 'int'
|   |           |     |-BinaryOperator 0x12e2f8aced0 <col:31, col:35> 'int' '<'
|   |           |     | |-ImplicitCastExpr 0x12e2f8aceb8 <col:31> 'int' <LValueToRValue>
|   |           |     | | `-DeclRefExpr 0x12e2f8ace70 <col:31> 'int' lvalue Var 0x12e2f8ae4b8 'n' 'int'
|   |           |     | `-IntegerLiteral 0x12e2f8ace90 <col:35> 'int' 50
|   |           |     |-BinaryOperator 0x12e2f8acf50 <col:40, col:44> 'int' '+'
|   |           |     | |-ImplicitCastExpr 0x12e2f8acf38 <col:40> 'int' <LValueToRValue>
|   |           |     | | `-DeclRefExpr 0x12e2f8acef0 <col:40> 'int' lvalue Var 0x12e2f8ae4b8 'n' 'int'
|   |           |     | `-IntegerLiteral 0x12e2f8acf10 <col:44> 'int' 100
|   |           |     `-ImplicitCastExpr 0x12e2f8acf90 <col:50> 'int' <LValueToRValue>
|   |           |       `-DeclRefExpr 0x12e2f8acf70 <col:50> 'int' lvalue Var 0x12e2f8ae4b8 'n' 'int'
|   |           |-BreakStmt 0x12e2f8acff8 <line:56:17>
|   |           |-CaseStmt 0x12e2f8ad040 <line:57:13, line:58:34>
|   |           | |-ConstantExpr 0x12e2f8ad028 <line:57:18> 'int'
|   |           | | `-IntegerLiteral 0x12e2f8ad000 <col:18> 'int' 1
|   |           | `-BinaryOperator 0x12e2f8ad150 <line:58:17, col:34> 'int' '='
|   |           |   |-MemberExpr 0x12e2f8ad0a0 <col:17, col:21> 'int' lvalue ->tm_mon 0x12e2f867838
|   |           |   | `-ImplicitCastExpr 0x12e2f8ad088 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x12e2f8ad068 <col:17> 'struct tm *' lvalue ParmVar 0x12e2f8adb30 'tm' 'struct tm *'
|   |           |   `-BinaryOperator 0x12e2f8ad130 <col:30, col:34> 'int' '-'
|   |           |     |-ImplicitCastExpr 0x12e2f8ad118 <col:30> 'int' <LValueToRValue>
|   |           |     | `-DeclRefExpr 0x12e2f8ad0d0 <col:30> 'int' lvalue Var 0x12e2f8ae4b8 'n' 'int'
|   |           |     `-IntegerLiteral 0x12e2f8ad0f0 <col:34> 'int' 1
|   |           |-BreakStmt 0x12e2f8ad170 <line:59:17>
|   |           |-CaseStmt 0x12e2f8ad1b8 <line:60:13, line:61:31>
|   |           | |-ConstantExpr 0x12e2f8ad1a0 <line:60:18> 'int'
|   |           | | `-IntegerLiteral 0x12e2f8ad178 <col:18> 'int' 2
|   |           | `-BinaryOperator 0x12e2f8ad280 <line:61:17, col:31> 'int' '='
|   |           |   |-MemberExpr 0x12e2f8ad218 <col:17, col:21> 'int' lvalue ->tm_mday 0x12e2f8677c8
|   |           |   | `-ImplicitCastExpr 0x12e2f8ad200 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x12e2f8ad1e0 <col:17> 'struct tm *' lvalue ParmVar 0x12e2f8adb30 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x12e2f8ad268 <col:31> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x12e2f8ad248 <col:31> 'int' lvalue Var 0x12e2f8ae4b8 'n' 'int'
|   |           |-BreakStmt 0x12e2f8ad2a0 <line:62:17>
|   |           |-CaseStmt 0x12e2f8ad2e8 <line:63:13, line:64:31>
|   |           | |-ConstantExpr 0x12e2f8ad2d0 <line:63:18> 'int'
|   |           | | `-IntegerLiteral 0x12e2f8ad2a8 <col:18> 'int' 3
|   |           | `-BinaryOperator 0x12e2f8ad3b0 <line:64:17, col:31> 'int' '='
|   |           |   |-MemberExpr 0x12e2f8ad348 <col:17, col:21> 'int' lvalue ->tm_hour 0x12e2f867758
|   |           |   | `-ImplicitCastExpr 0x12e2f8ad330 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x12e2f8ad310 <col:17> 'struct tm *' lvalue ParmVar 0x12e2f8adb30 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x12e2f8ad398 <col:31> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x12e2f8ad378 <col:31> 'int' lvalue Var 0x12e2f8ae4b8 'n' 'int'
|   |           |-BreakStmt 0x12e2f8ad3d0 <line:65:17>
|   |           |-CaseStmt 0x12e2f8ad418 <line:66:13, line:67:30>
|   |           | |-ConstantExpr 0x12e2f8ad400 <line:66:18> 'int'
|   |           | | `-IntegerLiteral 0x12e2f8ad3d8 <col:18> 'int' 4
|   |           | `-BinaryOperator 0x12e2f8ad4e0 <line:67:17, col:30> 'int' '='
|   |           |   |-MemberExpr 0x12e2f8ad478 <col:17, col:21> 'int' lvalue ->tm_min 0x12e2f8676e8
|   |           |   | `-ImplicitCastExpr 0x12e2f8ad460 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x12e2f8ad440 <col:17> 'struct tm *' lvalue ParmVar 0x12e2f8adb30 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x12e2f8ad4c8 <col:30> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x12e2f8ad4a8 <col:30> 'int' lvalue Var 0x12e2f8ae4b8 'n' 'int'
|   |           |-BreakStmt 0x12e2f8ad500 <line:68:17>
|   |           |-CaseStmt 0x12e2f8ad548 <line:69:13, line:70:30>
|   |           | |-ConstantExpr 0x12e2f8ad530 <line:69:18> 'int'
|   |           | | `-IntegerLiteral 0x12e2f8ad508 <col:18> 'int' 5
|   |           | `-BinaryOperator 0x12e2f8ad610 <line:70:17, col:30> 'int' '='
|   |           |   |-MemberExpr 0x12e2f8ad5a8 <col:17, col:21> 'int' lvalue ->tm_sec 0x12e2f867678
|   |           |   | `-ImplicitCastExpr 0x12e2f8ad590 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x12e2f8ad570 <col:17> 'struct tm *' lvalue ParmVar 0x12e2f8adb30 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x12e2f8ad5f8 <col:30> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x12e2f8ad5d8 <col:30> 'int' lvalue Var 0x12e2f8ae4b8 'n' 'int'
|   |           `-BreakStmt 0x12e2f8ad630 <line:71:17>
|   |-IfStmt 0x12e2f8ab310 <line:75:5, line:102:5> has_else
|   | |-BinaryOperator 0x12e2f8b0898 <line:75:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x12e2f8b0880 <col:9, col:12> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x12e2f8b0868 <col:9, col:12> 'char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x12e2f8b0830 <col:9, col:12> 'char' lvalue
|   | | |     |-ImplicitCastExpr 0x12e2f8b0800 <col:9> 'char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x12e2f8b07c0 <col:9> 'char *' lvalue Var 0x12e2f8ae420 'a' 'char *'
|   | | |     `-ImplicitCastExpr 0x12e2f8b0818 <col:11> 'int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x12e2f8b07e0 <col:11> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   | | `-CharacterLiteral 0x12e2f8b0850 <col:17> 'int' 90
|   | |-UnaryOperator 0x12e2f8b08d8 <line:76:9, col:10> 'int' postfix '++'
|   | | `-DeclRefExpr 0x12e2f8b08b8 <col:9> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   | `-IfStmt 0x12e2f8ab2f8 <line:77:10, line:102:5>
|   |   |-BinaryOperator 0x12e2f8b0b20 <line:77:14, col:43> 'int' '||'
|   |   | |-ParenExpr 0x12e2f8b09e8 <col:14, col:26> 'int'
|   |   | | `-BinaryOperator 0x12e2f8b09c8 <col:15, col:23> 'int' '=='
|   |   | |   |-ImplicitCastExpr 0x12e2f8b09b0 <col:15, col:18> 'int' <IntegralCast>
|   |   | |   | `-ImplicitCastExpr 0x12e2f8b0998 <col:15, col:18> 'char' <LValueToRValue>
|   |   | |   |   `-ArraySubscriptExpr 0x12e2f8b0960 <col:15, col:18> 'char' lvalue
|   |   | |   |     |-ImplicitCastExpr 0x12e2f8b0930 <col:15> 'char *' <LValueToRValue>
|   |   | |   |     | `-DeclRefExpr 0x12e2f8b08f0 <col:15> 'char *' lvalue Var 0x12e2f8ae420 'a' 'char *'
|   |   | |   |     `-ImplicitCastExpr 0x12e2f8b0948 <col:17> 'int' <LValueToRValue>
|   |   | |   |       `-DeclRefExpr 0x12e2f8b0910 <col:17> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   |   | |   `-CharacterLiteral 0x12e2f8b0980 <col:23> 'int' 43
|   |   | `-ParenExpr 0x12e2f8b0b00 <col:31, col:43> 'int'
|   |   |   `-BinaryOperator 0x12e2f8b0ae0 <col:32, col:40> 'int' '=='
|   |   |     |-ImplicitCastExpr 0x12e2f8b0ac8 <col:32, col:35> 'int' <IntegralCast>
|   |   |     | `-ImplicitCastExpr 0x12e2f8b0ab0 <col:32, col:35> 'char' <LValueToRValue>
|   |   |     |   `-ArraySubscriptExpr 0x12e2f8b0a78 <col:32, col:35> 'char' lvalue
|   |   |     |     |-ImplicitCastExpr 0x12e2f8b0a48 <col:32> 'char *' <LValueToRValue>
|   |   |     |     | `-DeclRefExpr 0x12e2f8b0a08 <col:32> 'char *' lvalue Var 0x12e2f8ae420 'a' 'char *'
|   |   |     |     `-ImplicitCastExpr 0x12e2f8b0a60 <col:34> 'int' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x12e2f8b0a28 <col:34> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   |   |     `-CharacterLiteral 0x12e2f8b0a98 <col:40> 'int' 45
|   |   `-CompoundStmt 0x12e2f8ab2c0 <col:46, line:102:5>
|   |     |-DeclStmt 0x12e2f8b0e10 <line:78:9, col:55>
|   |     | |-VarDecl 0x12e2f8b0b58 <col:9, col:42> col:13 used offsign 'int' cinit
|   |     | | `-ConditionalOperator 0x12e2f8b0d20 <col:23, col:42> 'int'
|   |     | |   |-BinaryOperator 0x12e2f8b0c98 <col:23, col:31> 'int' '=='
|   |     | |   | |-ImplicitCastExpr 0x12e2f8b0c80 <col:23, col:26> 'int' <IntegralCast>
|   |     | |   | | `-ImplicitCastExpr 0x12e2f8b0c68 <col:23, col:26> 'char' <LValueToRValue>
|   |     | |   | |   `-ArraySubscriptExpr 0x12e2f8b0c30 <col:23, col:26> 'char' lvalue
|   |     | |   | |     |-ImplicitCastExpr 0x12e2f8b0c00 <col:23> 'char *' <LValueToRValue>
|   |     | |   | |     | `-DeclRefExpr 0x12e2f8b0bc0 <col:23> 'char *' lvalue Var 0x12e2f8ae420 'a' 'char *'
|   |     | |   | |     `-ImplicitCastExpr 0x12e2f8b0c18 <col:25> 'int' <LValueToRValue>
|   |     | |   | |       `-DeclRefExpr 0x12e2f8b0be0 <col:25> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   |     | |   | `-CharacterLiteral 0x12e2f8b0c50 <col:31> 'int' 45
|   |     | |   |-IntegerLiteral 0x12e2f8b0cb8 <col:37> 'int' 1
|   |     | |   `-UnaryOperator 0x12e2f8b0d08 <col:41, col:42> 'int' prefix '-'
|   |     | |     `-IntegerLiteral 0x12e2f8b0ce0 <col:42> 'int' 1
|   |     | `-VarDecl 0x12e2f8b0d68 <col:9, col:54> col:45 used offset 'int' cinit
|   |     |   `-IntegerLiteral 0x12e2f8b0dd0 <col:54> 'int' 0
|   |     |-UnaryOperator 0x12e2f8b0e48 <line:79:9, col:10> 'int' postfix '++'
|   |     | `-DeclRefExpr 0x12e2f8b0e28 <col:9> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   |     |-IfStmt 0x12e2f8b0f50 <line:80:9, line:81:18>
|   |     | |-BinaryOperator 0x12e2f8b0f18 <line:80:13, col:21> 'int' '>'
|   |     | | |-BinaryOperator 0x12e2f8b0ec0 <col:13, col:17> 'int' '+'
|   |     | | | |-ImplicitCastExpr 0x12e2f8b0ea8 <col:13> 'int' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x12e2f8b0e60 <col:13> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   |     | | | `-IntegerLiteral 0x12e2f8b0e80 <col:17> 'int' 4
|   |     | | `-ImplicitCastExpr 0x12e2f8b0f00 <col:21> 'int' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x12e2f8b0ee0 <col:21> 'int' lvalue Var 0x12e2f8ae5b8 'l' 'int'
|   |     | `-GotoStmt 0x12e2f8b0f38 <line:81:13, col:18> 'err' 0x12e2f8ae8f0
|   |     |-ForStmt 0x12e2f8aaf00 <line:82:9, line:99:9>
|   |     | |-BinaryOperator 0x12e2f8b0fb0 <line:82:14, col:18> 'int' '='
|   |     | | |-DeclRefExpr 0x12e2f8b0f68 <col:14> 'int' lvalue Var 0x12e2f8ae538 'i' 'int'
|   |     | | `-IntegerLiteral 0x12e2f8b0f88 <col:18> 'int' 6
|   |     | |-<<<NULL>>>
|   |     | |-BinaryOperator 0x12e2f8b1030 <col:21, col:25> 'int' '<'
|   |     | | |-ImplicitCastExpr 0x12e2f8b1018 <col:21> 'int' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x12e2f8b0fd0 <col:21> 'int' lvalue Var 0x12e2f8ae538 'i' 'int'
|   |     | | `-IntegerLiteral 0x12e2f8b0ff0 <col:25> 'int' 8
|   |     | |-UnaryOperator 0x12e2f8b1070 <col:28, col:29> 'int' postfix '++'
|   |     | | `-DeclRefExpr 0x12e2f8b1050 <col:28> 'int' lvalue Var 0x12e2f8ae538 'i' 'int'
|   |     | `-CompoundStmt 0x12e2f8aaeb0 <col:33, line:99:9>
|   |     |   |-IfStmt 0x12e2f8b12f0 <line:83:13, line:84:22>
|   |     |   | |-BinaryOperator 0x12e2f8b12b8 <line:83:17, col:44> 'int' '||'
|   |     |   | | |-ParenExpr 0x12e2f8b1180 <col:17, col:28> 'int'
|   |     |   | | | `-BinaryOperator 0x12e2f8b1160 <col:18, col:25> 'int' '<'
|   |     |   | | |   |-ImplicitCastExpr 0x12e2f8b1148 <col:18, col:21> 'int' <IntegralCast>
|   |     |   | | |   | `-ImplicitCastExpr 0x12e2f8b1130 <col:18, col:21> 'char' <LValueToRValue>
|   |     |   | | |   |   `-ArraySubscriptExpr 0x12e2f8b10f8 <col:18, col:21> 'char' lvalue
|   |     |   | | |   |     |-ImplicitCastExpr 0x12e2f8b10c8 <col:18> 'char *' <LValueToRValue>
|   |     |   | | |   |     | `-DeclRefExpr 0x12e2f8b1088 <col:18> 'char *' lvalue Var 0x12e2f8ae420 'a' 'char *'
|   |     |   | | |   |     `-ImplicitCastExpr 0x12e2f8b10e0 <col:20> 'int' <LValueToRValue>
|   |     |   | | |   |       `-DeclRefExpr 0x12e2f8b10a8 <col:20> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   |     |   | | |   `-CharacterLiteral 0x12e2f8b1118 <col:25> 'int' 48
|   |     |   | | `-ParenExpr 0x12e2f8b1298 <col:33, col:44> 'int'
|   |     |   | |   `-BinaryOperator 0x12e2f8b1278 <col:34, col:41> 'int' '>'
|   |     |   | |     |-ImplicitCastExpr 0x12e2f8b1260 <col:34, col:37> 'int' <IntegralCast>
|   |     |   | |     | `-ImplicitCastExpr 0x12e2f8b1248 <col:34, col:37> 'char' <LValueToRValue>
|   |     |   | |     |   `-ArraySubscriptExpr 0x12e2f8b1210 <col:34, col:37> 'char' lvalue
|   |     |   | |     |     |-ImplicitCastExpr 0x12e2f8b11e0 <col:34> 'char *' <LValueToRValue>
|   |     |   | |     |     | `-DeclRefExpr 0x12e2f8b11a0 <col:34> 'char *' lvalue Var 0x12e2f8ae420 'a' 'char *'
|   |     |   | |     |     `-ImplicitCastExpr 0x12e2f8b11f8 <col:36> 'int' <LValueToRValue>
|   |     |   | |     |       `-DeclRefExpr 0x12e2f8b11c0 <col:36> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   |     |   | |     `-CharacterLiteral 0x12e2f8b1230 <col:41> 'int' 57
|   |     |   | `-GotoStmt 0x12e2f8b12d8 <line:84:17, col:22> 'err' 0x12e2f8ae8f0
|   |     |   |-BinaryOperator 0x12e2f8b1420 <line:85:13, col:24> 'int' '='
|   |     |   | |-DeclRefExpr 0x12e2f8b1308 <col:13> 'int' lvalue Var 0x12e2f8ae4b8 'n' 'int'
|   |     |   | `-BinaryOperator 0x12e2f8b1400 <col:17, col:24> 'int' '-'
|   |     |   |   |-ImplicitCastExpr 0x12e2f8b13e8 <col:17, col:20> 'int' <IntegralCast>
|   |     |   |   | `-ImplicitCastExpr 0x12e2f8b13d0 <col:17, col:20> 'char' <LValueToRValue>
|   |     |   |   |   `-ArraySubscriptExpr 0x12e2f8b1398 <col:17, col:20> 'char' lvalue
|   |     |   |   |     |-ImplicitCastExpr 0x12e2f8b1368 <col:17> 'char *' <LValueToRValue>
|   |     |   |   |     | `-DeclRefExpr 0x12e2f8b1328 <col:17> 'char *' lvalue Var 0x12e2f8ae420 'a' 'char *'
|   |     |   |   |     `-ImplicitCastExpr 0x12e2f8b1380 <col:19> 'int' <LValueToRValue>
|   |     |   |   |       `-DeclRefExpr 0x12e2f8b1348 <col:19> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   |     |   |   `-CharacterLiteral 0x12e2f8b13b8 <col:24> 'int' 48
|   |     |   |-UnaryOperator 0x12e2f8b1460 <line:86:13, col:14> 'int' postfix '++'
|   |     |   | `-DeclRefExpr 0x12e2f8b1440 <col:13> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   |     |   |-IfStmt 0x12e2f8b16e0 <line:87:13, line:88:22>
|   |     |   | |-BinaryOperator 0x12e2f8b16a8 <line:87:17, col:44> 'int' '||'
|   |     |   | | |-ParenExpr 0x12e2f8b1570 <col:17, col:28> 'int'
|   |     |   | | | `-BinaryOperator 0x12e2f8b1550 <col:18, col:25> 'int' '<'
|   |     |   | | |   |-ImplicitCastExpr 0x12e2f8b1538 <col:18, col:21> 'int' <IntegralCast>
|   |     |   | | |   | `-ImplicitCastExpr 0x12e2f8b1520 <col:18, col:21> 'char' <LValueToRValue>
|   |     |   | | |   |   `-ArraySubscriptExpr 0x12e2f8b14e8 <col:18, col:21> 'char' lvalue
|   |     |   | | |   |     |-ImplicitCastExpr 0x12e2f8b14b8 <col:18> 'char *' <LValueToRValue>
|   |     |   | | |   |     | `-DeclRefExpr 0x12e2f8b1478 <col:18> 'char *' lvalue Var 0x12e2f8ae420 'a' 'char *'
|   |     |   | | |   |     `-ImplicitCastExpr 0x12e2f8b14d0 <col:20> 'int' <LValueToRValue>
|   |     |   | | |   |       `-DeclRefExpr 0x12e2f8b1498 <col:20> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   |     |   | | |   `-CharacterLiteral 0x12e2f8b1508 <col:25> 'int' 48
|   |     |   | | `-ParenExpr 0x12e2f8b1688 <col:33, col:44> 'int'
|   |     |   | |   `-BinaryOperator 0x12e2f8b1668 <col:34, col:41> 'int' '>'
|   |     |   | |     |-ImplicitCastExpr 0x12e2f8b1650 <col:34, col:37> 'int' <IntegralCast>
|   |     |   | |     | `-ImplicitCastExpr 0x12e2f8b1638 <col:34, col:37> 'char' <LValueToRValue>
|   |     |   | |     |   `-ArraySubscriptExpr 0x12e2f8b1600 <col:34, col:37> 'char' lvalue
|   |     |   | |     |     |-ImplicitCastExpr 0x12e2f8b15d0 <col:34> 'char *' <LValueToRValue>
|   |     |   | |     |     | `-DeclRefExpr 0x12e2f8b1590 <col:34> 'char *' lvalue Var 0x12e2f8ae420 'a' 'char *'
|   |     |   | |     |     `-ImplicitCastExpr 0x12e2f8b15e8 <col:36> 'int' <LValueToRValue>
|   |     |   | |     |       `-DeclRefExpr 0x12e2f8b15b0 <col:36> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   |     |   | |     `-CharacterLiteral 0x12e2f8b1620 <col:41> 'int' 57
|   |     |   | `-GotoStmt 0x12e2f8b16c8 <line:88:17, col:22> 'err' 0x12e2f8ae8f0
|   |     |   |-BinaryOperator 0x12e2f8aa878 <line:89:13, col:35> 'int' '='
|   |     |   | |-DeclRefExpr 0x12e2f8b16f8 <col:13> 'int' lvalue Var 0x12e2f8ae4b8 'n' 'int'
|   |     |   | `-BinaryOperator 0x12e2f8aa858 <col:17, col:35> 'int' '-'
|   |     |   |   |-BinaryOperator 0x12e2f8aa820 <col:17, col:31> 'int' '+'
|   |     |   |   | |-ParenExpr 0x12e2f8b1798 <col:17, col:24> 'int'
|   |     |   |   | | `-BinaryOperator 0x12e2f8b1778 <col:18, col:22> 'int' '*'
|   |     |   |   | |   |-ImplicitCastExpr 0x12e2f8b1760 <col:18> 'int' <LValueToRValue>
|   |     |   |   | |   | `-DeclRefExpr 0x12e2f8b1718 <col:18> 'int' lvalue Var 0x12e2f8ae4b8 'n' 'int'
|   |     |   |   | |   `-IntegerLiteral 0x12e2f8b1738 <col:22> 'int' 10
|   |     |   |   | `-ImplicitCastExpr 0x12e2f8aa808 <col:28, col:31> 'int' <IntegralCast>
|   |     |   |   |   `-ImplicitCastExpr 0x12e2f8aa7f0 <col:28, col:31> 'char' <LValueToRValue>
|   |     |   |   |     `-ArraySubscriptExpr 0x12e2f8aa7d0 <col:28, col:31> 'char' lvalue
|   |     |   |   |       |-ImplicitCastExpr 0x12e2f8aa7a0 <col:28> 'char *' <LValueToRValue>
|   |     |   |   |       | `-DeclRefExpr 0x12e2f8aa760 <col:28> 'char *' lvalue Var 0x12e2f8ae420 'a' 'char *'
|   |     |   |   |       `-ImplicitCastExpr 0x12e2f8aa7b8 <col:30> 'int' <LValueToRValue>
|   |     |   |   |         `-DeclRefExpr 0x12e2f8aa780 <col:30> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   |     |   |   `-CharacterLiteral 0x12e2f8aa840 <col:35> 'int' 48
|   |     |   |-IfStmt 0x12e2f8aab10 <line:90:13, line:91:22>
|   |     |   | |-BinaryOperator 0x12e2f8aaad8 <line:90:17, col:44> 'int' '||'
|   |     |   | | |-ParenExpr 0x12e2f8aa998 <col:17, col:28> 'int'
|   |     |   | | | `-BinaryOperator 0x12e2f8aa978 <col:18, col:27> 'int' '<'
|   |     |   | | |   |-ImplicitCastExpr 0x12e2f8aa948 <col:18> 'int' <LValueToRValue>
|   |     |   | | |   | `-DeclRefExpr 0x12e2f8aa898 <col:18> 'int' lvalue Var 0x12e2f8ae4b8 'n' 'int'
|   |     |   | | |   `-ImplicitCastExpr 0x12e2f8aa960 <col:22, col:27> 'int' <LValueToRValue>
|   |     |   | | |     `-ArraySubscriptExpr 0x12e2f8aa928 <col:22, col:27> 'const int' lvalue
|   |     |   | | |       |-ImplicitCastExpr 0x12e2f8aa8f8 <col:22> 'const int *' <ArrayToPointerDecay>
|   |     |   | | |       | `-DeclRefExpr 0x12e2f8aa8b8 <col:22> 'const int [8]' lvalue Var 0x12e2f8ade00 'min' 'const int [8]'
|   |     |   | | |       `-ImplicitCastExpr 0x12e2f8aa910 <col:26> 'int' <LValueToRValue>
|   |     |   | | |         `-DeclRefExpr 0x12e2f8aa8d8 <col:26> 'int' lvalue Var 0x12e2f8ae538 'i' 'int'
|   |     |   | | `-ParenExpr 0x12e2f8aaab8 <col:33, col:44> 'int'
|   |     |   | |   `-BinaryOperator 0x12e2f8aaa98 <col:34, col:43> 'int' '>'
|   |     |   | |     |-ImplicitCastExpr 0x12e2f8aaa68 <col:34> 'int' <LValueToRValue>
|   |     |   | |     | `-DeclRefExpr 0x12e2f8aa9b8 <col:34> 'int' lvalue Var 0x12e2f8ae4b8 'n' 'int'
|   |     |   | |     `-ImplicitCastExpr 0x12e2f8aaa80 <col:38, col:43> 'int' <LValueToRValue>
|   |     |   | |       `-ArraySubscriptExpr 0x12e2f8aaa48 <col:38, col:43> 'const int' lvalue
|   |     |   | |         |-ImplicitCastExpr 0x12e2f8aaa18 <col:38> 'const int *' <ArrayToPointerDecay>
|   |     |   | |         | `-DeclRefExpr 0x12e2f8aa9d8 <col:38> 'const int [8]' lvalue Var 0x12e2f8ae138 'max' 'const int [8]'
|   |     |   | |         `-ImplicitCastExpr 0x12e2f8aaa30 <col:42> 'int' <LValueToRValue>
|   |     |   | |           `-DeclRefExpr 0x12e2f8aa9f8 <col:42> 'int' lvalue Var 0x12e2f8ae538 'i' 'int'
|   |     |   | `-GotoStmt 0x12e2f8aaaf8 <line:91:17, col:22> 'err' 0x12e2f8ae8f0
|   |     |   |-IfStmt 0x12e2f8aae60 <line:92:13, line:97:13>
|   |     |   | |-ImplicitCastExpr 0x12e2f8aab48 <line:92:17> 'struct tm *' <LValueToRValue>
|   |     |   | | `-DeclRefExpr 0x12e2f8aab28 <col:17> 'struct tm *' lvalue ParmVar 0x12e2f8adb30 'tm' 'struct tm *'
|   |     |   | `-CompoundStmt 0x12e2f8aae48 <col:21, line:97:13>
|   |     |   |   `-IfStmt 0x12e2f8aae20 <line:93:17, line:96:35> has_else
|   |     |   |     |-BinaryOperator 0x12e2f8aabc0 <line:93:21, col:26> 'int' '=='
|   |     |   |     | |-ImplicitCastExpr 0x12e2f8aaba8 <col:21> 'int' <LValueToRValue>
|   |     |   |     | | `-DeclRefExpr 0x12e2f8aab60 <col:21> 'int' lvalue Var 0x12e2f8ae538 'i' 'int'
|   |     |   |     | `-IntegerLiteral 0x12e2f8aab80 <col:26> 'int' 6
|   |     |   |     |-BinaryOperator 0x12e2f8aac98 <line:94:21, col:34> 'int' '='
|   |     |   |     | |-DeclRefExpr 0x12e2f8aabe0 <col:21> 'int' lvalue Var 0x12e2f8b0d68 'offset' 'int'
|   |     |   |     | `-BinaryOperator 0x12e2f8aac78 <col:30, col:34> 'int' '*'
|   |     |   |     |   |-ImplicitCastExpr 0x12e2f8aac60 <col:30> 'int' <LValueToRValue>
|   |     |   |     |   | `-DeclRefExpr 0x12e2f8aac18 <col:30> 'int' lvalue Var 0x12e2f8ae4b8 'n' 'int'
|   |     |   |     |   `-IntegerLiteral 0x12e2f8aac38 <col:34> 'int' 3600
|   |     |   |     `-IfStmt 0x12e2f8aae08 <line:95:22, line:96:35>
|   |     |   |       |-BinaryOperator 0x12e2f8aad18 <line:95:26, col:31> 'int' '=='
|   |     |   |       | |-ImplicitCastExpr 0x12e2f8aad00 <col:26> 'int' <LValueToRValue>
|   |     |   |       | | `-DeclRefExpr 0x12e2f8aacb8 <col:26> 'int' lvalue Var 0x12e2f8ae538 'i' 'int'
|   |     |   |       | `-IntegerLiteral 0x12e2f8aacd8 <col:31> 'int' 7
|   |     |   |       `-CompoundAssignOperator 0x12e2f8aadd8 <line:96:21, col:35> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |   |         |-DeclRefExpr 0x12e2f8aad38 <col:21> 'int' lvalue Var 0x12e2f8b0d68 'offset' 'int'
|   |     |   |         `-BinaryOperator 0x12e2f8aadb8 <col:31, col:35> 'int' '*'
|   |     |   |           |-ImplicitCastExpr 0x12e2f8aada0 <col:31> 'int' <LValueToRValue>
|   |     |   |           | `-DeclRefExpr 0x12e2f8aad58 <col:31> 'int' lvalue Var 0x12e2f8ae4b8 'n' 'int'
|   |     |   |           `-IntegerLiteral 0x12e2f8aad78 <col:35> 'int' 60
|   |     |   `-UnaryOperator 0x12e2f8aae98 <line:98:13, col:14> 'int' postfix '++'
|   |     |     `-DeclRefExpr 0x12e2f8aae78 <col:13> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   |     `-IfStmt 0x12e2f8ab2a8 <line:100:9, line:101:20>
|   |       |-BinaryOperator 0x12e2f8ab250 <line:100:13, col:66> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x12e2f8ab238 <col:13> 'int' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x12e2f8aaf38 <col:13> 'int' lvalue Var 0x12e2f8b0d68 'offset' 'int'
|   |       | `-UnaryOperator 0x12e2f8ab220 <col:23, col:66> 'int' prefix '!' cannot overflow
|   |       |   `-CallExpr 0x12e2f8ab1d0 <col:24, col:66> 'int'
|   |       |     |-ImplicitCastExpr 0x12e2f8ab1b8 <col:24> 'int (*)()' <FunctionToPointerDecay>
|   |       |     | `-DeclRefExpr 0x12e2f8ab078 <col:24> 'int ()' Function 0x12e2f8aafb0 'OPENSSL_gmtime_adj' 'int ()'
|   |       |     |-ImplicitCastExpr 0x12e2f8ab208 <col:43> 'struct tm *' <LValueToRValue>
|   |       |     | `-DeclRefExpr 0x12e2f8ab098 <col:43> 'struct tm *' lvalue ParmVar 0x12e2f8adb30 'tm' 'struct tm *'
|   |       |     |-IntegerLiteral 0x12e2f8ab0b8 <col:47> 'int' 0
|   |       |     `-BinaryOperator 0x12e2f8ab168 <col:50, col:59> 'int' '*'
|   |       |       |-ImplicitCastExpr 0x12e2f8ab138 <col:50> 'int' <LValueToRValue>
|   |       |       | `-DeclRefExpr 0x12e2f8ab0e0 <col:50> 'int' lvalue Var 0x12e2f8b0d68 'offset' 'int'
|   |       |       `-ImplicitCastExpr 0x12e2f8ab150 <col:59> 'int' <LValueToRValue>
|   |       |         `-DeclRefExpr 0x12e2f8ab100 <col:59> 'int' lvalue Var 0x12e2f8b0b58 'offsign' 'int'
|   |       `-ReturnStmt 0x12e2f8ab298 <line:101:13, col:20>
|   |         `-IntegerLiteral 0x12e2f8ab270 <col:20> 'int' 0
|   |-ReturnStmt 0x12e2f8ab3c8 <line:103:5, col:17>
|   | `-BinaryOperator 0x12e2f8ab3a8 <col:12, col:17> 'int' '=='
|   |   |-ImplicitCastExpr 0x12e2f8ab378 <col:12> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12e2f8ab338 <col:12> 'int' lvalue Var 0x12e2f8ae638 'o' 'int'
|   |   `-ImplicitCastExpr 0x12e2f8ab390 <col:17> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x12e2f8ab358 <col:17> 'int' lvalue Var 0x12e2f8ae5b8 'l' 'int'
|   `-LabelStmt 0x12e2f8ab410 <line:104:2, line:105:12> 'err'
|     `-ReturnStmt 0x12e2f8ab400 <col:5, col:12>
|       `-IntegerLiteral 0x12e2f8ab3d8 <col:12> 'int' 0
|-FunctionDecl 0x12e2f8ab570 <line:108:1, line:111:1> line:108:5 invalid ASN1_UTCTIME_check 'int (const int *)'
| |-ParmVarDecl 0x12e2f8ab4a8 <col:24, col:44> col:44 invalid d 'const int *'
| `-CompoundStmt 0x12e2f8ab6b8 <line:109:1, line:111:1>
|-FunctionDecl 0x12e2f8ab850 <line:113:1, line:129:1> line:113:5 invalid ASN1_UTCTIME_set_string 'int (int *, const char *)'
| |-ParmVarDecl 0x12e2f8ab6e0 <col:29, col:43> col:43 invalid s 'int *'
| |-ParmVarDecl 0x12e2f8ab770 <col:46, col:58> col:58 used str 'const char *'
| `-CompoundStmt 0x12e2f8abf60 <line:114:1, line:129:1>
|   `-IfStmt 0x12e2f8abf38 <line:120:5, line:128:18> has_else
|     |-OpaqueValueExpr 0x12e2f8abf20 <<invalid sloc>> '_Bool'
|     |-CompoundStmt 0x12e2f8abea8 <line:120:33, line:127:5>
|     | |-IfStmt 0x12e2f8abe38 <line:121:9, line:125:9>
|     | | |-OpaqueValueExpr 0x12e2f8abe20 <<invalid sloc>> '_Bool'
|     | | `-CompoundStmt 0x12e2f8abe08 <line:121:24, line:125:9>
|     | |   `-IfStmt 0x12e2f8abdf0 <line:122:13, line:123:24>
|     | |     |-OpaqueValueExpr 0x12e2f8abdd8 <<invalid sloc>> '_Bool'
|     | |     `-ReturnStmt 0x12e2f8abdc8 <col:17, col:24>
|     | |       `-IntegerLiteral 0x12e2f8abda0 <col:24> 'int' 0
|     | `-ReturnStmt 0x12e2f8abe98 <line:126:9, col:18>
|     |   `-ParenExpr 0x12e2f8abe78 <col:16, col:18> 'int'
|     |     `-IntegerLiteral 0x12e2f8abe50 <col:17> 'int' 1
|     `-ReturnStmt 0x12e2f8abf10 <line:128:9, col:18>
|       `-ParenExpr 0x12e2f8abef0 <col:16, col:18> 'int'
|         `-IntegerLiteral 0x12e2f8abec8 <col:17> 'int' 0
|-FunctionDecl 0x12e2f8ab950 <line:118:16> col:16 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x12e2f8ab9f0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x12e2f8ac120 <line:131:1, line:134:1> line:131:15 invalid ASN1_UTCTIME_set 'int *(int *, time_t)'
| |-ParmVarDecl 0x12e2f8abf90 <col:32, col:46> col:46 invalid s 'int *'
| |-ParmVarDecl 0x12e2f8ac008 <col:49, col:56> col:56 used t 'time_t':'long long'
| `-CompoundStmt 0x12e2f8ac380 <line:132:1, line:134:1>
|-FunctionDecl 0x12e2f8ac670 <line:136:1, line:188:1> line:136:15 invalid ASN1_UTCTIME_adj 'int *(int *, time_t, int, long)'
| |-ParmVarDecl 0x12e2f8ac3a8 <col:32, col:46> col:46 invalid s 'int *'
| |-ParmVarDecl 0x12e2f8ac420 <col:49, col:56> col:56 used t 'time_t':'long long'
| |-ParmVarDecl 0x12e2f8ac4a0 <line:137:32, col:36> col:36 used offset_day 'int'
| |-ParmVarDecl 0x12e2f8ac520 <col:48, col:53> col:53 used offset_sec 'long'
| `-CompoundStmt 0x12e2f8b5810 <line:138:1, line:188:1>
|   |-DeclStmt 0x12e2f8b1838 <line:139:5, col:12>
|   | `-VarDecl 0x12e2f8b17d0 <col:5, col:11> col:11 used p 'char *'
|   |-DeclStmt 0x12e2f8b18e0 <line:140:5, col:18>
|   | `-VarDecl 0x12e2f8b1878 <col:5, col:16> col:16 used ts 'struct tm *'
|   |-DeclStmt 0x12e2f8b1980 <line:141:5, col:19>
|   | `-VarDecl 0x12e2f8b1918 <col:5, col:15> col:15 used data 'struct tm':'struct tm'
|   |-DeclStmt 0x12e2f8b1a50 <line:142:5, col:20>
|   | `-VarDecl 0x12e2f8b19a8 <col:5, col:18> col:12 used len 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x12e2f8b1a38 <col:18> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x12e2f8b1a10 <col:18> 'int' 20
|   |-DeclStmt 0x12e2f8b1b10 <line:143:5, col:19>
|   | `-VarDecl 0x12e2f8b1a80 <col:5, col:18> col:9 used free_s 'int' cinit
|   |   `-IntegerLiteral 0x12e2f8b1ae8 <col:18> 'int' 0
|   |-IfStmt 0x12e2f8b1ed0 <line:145:5, line:150:5>
|   | |-OpaqueValueExpr 0x12e2f8b1eb8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x12e2f8b1e98 <line:145:20, line:150:5>
|   |   |-IfStmt 0x12e2f8b1e00 <line:147:9, line:148:18>
|   |   | |-OpaqueValueExpr 0x12e2f8b1de8 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x12e2f8b1dd0 <col:13, col:18> 'err' 0x12e2f8b1d80
|   |   `-BinaryOperator 0x12e2f8b1e78 <line:149:9, col:18> 'int' '='
|   |     |-DeclRefExpr 0x12e2f8b1e18 <col:9> 'int' lvalue Var 0x12e2f8b1a80 'free_s' 'int'
|   |     `-IntegerLiteral 0x12e2f8b1e50 <col:18> 'int' 1
|   |-BinaryOperator 0x12e2f8b2130 <line:152:5, col:34> 'struct tm *' '='
|   | |-DeclRefExpr 0x12e2f8b1ee8 <col:5> 'struct tm *' lvalue Var 0x12e2f8b1878 'ts' 'struct tm *'
|   | `-ImplicitCastExpr 0x12e2f8b2118 <col:10, col:34> 'struct tm *' <IntegralToPointer>
|   |   `-CallExpr 0x12e2f8b20e8 <col:10, col:34> 'int'
|   |     |-ImplicitCastExpr 0x12e2f8b20d0 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x12e2f8b2010 <col:10> 'int ()' Function 0x12e2f8b1f48 'OPENSSL_gmtime' 'int ()'
|   |     |-UnaryOperator 0x12e2f8b2068 <col:25, col:26> 'time_t *' prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0x12e2f8b2030 <col:26> 'time_t':'long long' lvalue ParmVar 0x12e2f8ac420 't' 'time_t':'long long'
|   |     `-UnaryOperator 0x12e2f8b20b8 <col:29, col:30> 'struct tm *' prefix '&' cannot overflow
|   |       `-DeclRefExpr 0x12e2f8b2080 <col:30> 'struct tm':'struct tm' lvalue Var 0x12e2f8b1918 'data' 'struct tm':'struct tm'
|   |-IfStmt 0x12e2f8b2260 <line:153:5, line:154:14>
|   | |-BinaryOperator 0x12e2f8b2228 <line:153:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x12e2f8b21f8 <.//openssl//file_jk/before\crypto\asn1\a_utctm.c:153:9> 'struct tm *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12e2f8b2150 <col:9> 'struct tm *' lvalue Var 0x12e2f8b1878 'ts' 'struct tm *'
|   | | `-ImplicitCastExpr 0x12e2f8b2210 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'struct tm *' <BitCast>
|   | |   `-ParenExpr 0x12e2f8b21d8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x12e2f8b21b0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x12e2f8b2170 <col:26> 'int' 0
|   | `-GotoStmt 0x12e2f8b2248 <.//openssl//file_jk/before\crypto\asn1\a_utctm.c:154:9, col:14> 'err' 0x12e2f8b1d80
|   |-IfStmt 0x12e2f8b24b0 <line:156:5, line:159:5>
|   | |-BinaryOperator 0x12e2f8b2318 <line:156:9, col:23> 'int' '||'
|   | | |-ImplicitCastExpr 0x12e2f8b22e8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12e2f8b2278 <col:9> 'int' lvalue ParmVar 0x12e2f8ac4a0 'offset_day' 'int'
|   | | `-ImplicitCastExpr 0x12e2f8b2300 <col:23> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12e2f8b22b0 <col:23> 'long' lvalue ParmVar 0x12e2f8ac520 'offset_sec' 'long'
|   | `-CompoundStmt 0x12e2f8b2498 <col:35, line:159:5>
|   |   `-IfStmt 0x12e2f8b2480 <line:157:9, line:158:18>
|   |     |-UnaryOperator 0x12e2f8b2450 <line:157:13, col:59> 'int' prefix '!' cannot overflow
|   |     | `-CallExpr 0x12e2f8b23d0 <col:14, col:59> 'int'
|   |     |   |-ImplicitCastExpr 0x12e2f8b23b8 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |     |   | `-DeclRefExpr 0x12e2f8b2338 <col:14> 'int ()' Function 0x12e2f8aafb0 'OPENSSL_gmtime_adj' 'int ()'
|   |     |   |-ImplicitCastExpr 0x12e2f8b2408 <col:33> 'struct tm *' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x12e2f8b2358 <col:33> 'struct tm *' lvalue Var 0x12e2f8b1878 'ts' 'struct tm *'
|   |     |   |-ImplicitCastExpr 0x12e2f8b2420 <col:37> 'int' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x12e2f8b2378 <col:37> 'int' lvalue ParmVar 0x12e2f8ac4a0 'offset_day' 'int'
|   |     |   `-ImplicitCastExpr 0x12e2f8b2438 <col:49> 'long' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x12e2f8b2398 <col:49> 'long' lvalue ParmVar 0x12e2f8ac520 'offset_sec' 'long'
|   |     `-GotoStmt 0x12e2f8b2468 <line:158:13, col:18> 'err' 0x12e2f8b1d80
|   |-IfStmt 0x12e2f8b26d0 <line:161:5, line:162:14>
|   | |-BinaryOperator 0x12e2f8b2698 <line:161:9, col:50> 'int' '||'
|   | | |-ParenExpr 0x12e2f8b2590 <col:9, col:26> 'int'
|   | | | `-BinaryOperator 0x12e2f8b2570 <col:10, col:24> 'int' '<'
|   | | |   |-ImplicitCastExpr 0x12e2f8b2558 <col:10, col:14> 'int' <LValueToRValue>
|   | | |   | `-MemberExpr 0x12e2f8b2500 <col:10, col:14> 'int' lvalue ->tm_year 0x12e2f8678a8
|   | | |   |   `-ImplicitCastExpr 0x12e2f8b24e8 <col:10> 'struct tm *' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x12e2f8b24c8 <col:10> 'struct tm *' lvalue Var 0x12e2f8b1878 'ts' 'struct tm *'
|   | | |   `-IntegerLiteral 0x12e2f8b2530 <col:24> 'int' 50
|   | | `-ParenExpr 0x12e2f8b2678 <col:31, col:50> 'int'
|   | |   `-BinaryOperator 0x12e2f8b2658 <col:32, col:47> 'int' '>='
|   | |     |-ImplicitCastExpr 0x12e2f8b2640 <col:32, col:36> 'int' <LValueToRValue>
|   | |     | `-MemberExpr 0x12e2f8b25e8 <col:32, col:36> 'int' lvalue ->tm_year 0x12e2f8678a8
|   | |     |   `-ImplicitCastExpr 0x12e2f8b25d0 <col:32> 'struct tm *' <LValueToRValue>
|   | |     |     `-DeclRefExpr 0x12e2f8b25b0 <col:32> 'struct tm *' lvalue Var 0x12e2f8b1878 'ts' 'struct tm *'
|   | |     `-IntegerLiteral 0x12e2f8b2618 <col:47> 'int' 150
|   | `-GotoStmt 0x12e2f8b26b8 <line:162:9, col:14> 'err' 0x12e2f8b1d80
|   |-IfStmt 0x12e2f8b8ed8 <line:165:5, line:173:5>
|   | |-OpaqueValueExpr 0x12e2f8b8ec0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x12e2f8b8ea0 <line:165:51, line:173:5>
|   |   |-BinaryOperator 0x12e2f8b8aa8 <line:166:9, col:31> 'char *' '='
|   |   | |-DeclRefExpr 0x12e2f8b88e8 <col:9> 'char *' lvalue Var 0x12e2f8b17d0 'p' 'char *'
|   |   | `-ImplicitCastExpr 0x12e2f8b8a90 <col:13, col:31> 'char *' <IntegralToPointer>
|   |   |   `-CallExpr 0x12e2f8b8a50 <col:13, col:31> 'int'
|   |   |     |-ImplicitCastExpr 0x12e2f8b8a38 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x12e2f8b89f8 <col:13> 'int ()' Function 0x12e2f8b8930 'OPENSSL_malloc' 'int ()'
|   |   |     `-ImplicitCastExpr 0x12e2f8b8a78 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x12e2f8b8a18 <col:28> 'size_t':'unsigned long long' lvalue Var 0x12e2f8b19a8 'len' 'size_t':'unsigned long long'
|   |   `-IfStmt 0x12e2f8b8d00 <line:167:9, line:170:9>
|   |     |-BinaryOperator 0x12e2f8b8ba0 <line:167:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |     | |-ImplicitCastExpr 0x12e2f8b8b70 <.//openssl//file_jk/before\crypto\asn1\a_utctm.c:167:13> 'char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x12e2f8b8ac8 <col:13> 'char *' lvalue Var 0x12e2f8b17d0 'p' 'char *'
|   |     | `-ImplicitCastExpr 0x12e2f8b8b88 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |     |   `-ParenExpr 0x12e2f8b8b50 <col:17, col:27> 'void *'
|   |     |     `-CStyleCastExpr 0x12e2f8b8b28 <col:18, col:26> 'void *' <NullToPointer>
|   |     |       `-IntegerLiteral 0x12e2f8b8ae8 <col:26> 'int' 0
|   |     `-CompoundStmt 0x12e2f8b8ce8 <.//openssl//file_jk/before\crypto\asn1\a_utctm.c:167:24, line:170:9>
|   |       `-GotoStmt 0x12e2f8b8cd0 <line:169:13, col:18> 'err' 0x12e2f8b1d80
|   |-CallExpr 0x12e2f8b93f8 <line:175:5, line:177:28> 'int'
|   | |-ImplicitCastExpr 0x12e2f8b93e0 <line:175:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12e2f8b8fe0 <col:5> 'int ()' Function 0x12e2f8b8f18 'BIO_snprintf' 'int ()'
|   | |-ImplicitCastExpr 0x12e2f8b9460 <col:18> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x12e2f8b9000 <col:18> 'char *' lvalue Var 0x12e2f8b17d0 'p' 'char *'
|   | |-ImplicitCastExpr 0x12e2f8b9478 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x12e2f8b9020 <col:21> 'size_t':'unsigned long long' lvalue Var 0x12e2f8b19a8 'len' 'size_t':'unsigned long long'
|   | |-ImplicitCastExpr 0x12e2f8b9490 <col:26> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x12e2f8b9078 <col:26> 'char [26]' lvalue "%02d%02d%02d%02d%02d%02dZ"
|   | |-BinaryOperator 0x12e2f8b9158 <col:55, col:69> 'int' '%'
|   | | |-ImplicitCastExpr 0x12e2f8b9140 <col:55, col:59> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x12e2f8b90e8 <col:55, col:59> 'int' lvalue ->tm_year 0x12e2f8678a8
|   | | |   `-ImplicitCastExpr 0x12e2f8b90d0 <col:55> 'struct tm *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x12e2f8b90b0 <col:55> 'struct tm *' lvalue Var 0x12e2f8b1878 'ts' 'struct tm *'
|   | | `-IntegerLiteral 0x12e2f8b9118 <col:69> 'int' 100
|   | |-BinaryOperator 0x12e2f8b9220 <line:176:18, col:31> 'int' '+'
|   | | |-ImplicitCastExpr 0x12e2f8b9208 <col:18, col:22> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x12e2f8b91b0 <col:18, col:22> 'int' lvalue ->tm_mon 0x12e2f867838
|   | | |   `-ImplicitCastExpr 0x12e2f8b9198 <col:18> 'struct tm *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x12e2f8b9178 <col:18> 'struct tm *' lvalue Var 0x12e2f8b1878 'ts' 'struct tm *'
|   | | `-IntegerLiteral 0x12e2f8b91e0 <col:31> 'int' 1
|   | |-ImplicitCastExpr 0x12e2f8b94a8 <col:34, col:38> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x12e2f8b9278 <col:34, col:38> 'int' lvalue ->tm_mday 0x12e2f8677c8
|   | |   `-ImplicitCastExpr 0x12e2f8b9260 <col:34> 'struct tm *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x12e2f8b9240 <col:34> 'struct tm *' lvalue Var 0x12e2f8b1878 'ts' 'struct tm *'
|   | |-ImplicitCastExpr 0x12e2f8b94c0 <col:47, col:51> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x12e2f8b92e0 <col:47, col:51> 'int' lvalue ->tm_hour 0x12e2f867758
|   | |   `-ImplicitCastExpr 0x12e2f8b92c8 <col:47> 'struct tm *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x12e2f8b92a8 <col:47> 'struct tm *' lvalue Var 0x12e2f8b1878 'ts' 'struct tm *'
|   | |-ImplicitCastExpr 0x12e2f8b94d8 <col:60, col:64> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x12e2f8b9348 <col:60, col:64> 'int' lvalue ->tm_min 0x12e2f8676e8
|   | |   `-ImplicitCastExpr 0x12e2f8b9330 <col:60> 'struct tm *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x12e2f8b9310 <col:60> 'struct tm *' lvalue Var 0x12e2f8b1878 'ts' 'struct tm *'
|   | `-ImplicitCastExpr 0x12e2f8b94f0 <line:177:18, col:22> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x12e2f8b93b0 <col:18, col:22> 'int' lvalue ->tm_sec 0x12e2f867678
|   |     `-ImplicitCastExpr 0x12e2f8b9398 <col:18> 'struct tm *' <LValueToRValue>
|   |       `-DeclRefExpr 0x12e2f8b9378 <col:18> 'struct tm *' lvalue Var 0x12e2f8b1878 'ts' 'struct tm *'
|   |-LabelStmt 0x12e2f8b9720 <line:184:2, col:5> 'err'
|   | `-NullStmt 0x12e2f8b9718 <col:5>
|   `-ReturnStmt 0x12e2f8b97d8 <line:187:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|     `-ImplicitCastExpr 0x12e2f8b97c0 <col:17, col:27> 'int *' <NullToPointer>
|       `-ParenExpr 0x12e2f8b97a0 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x12e2f8b9778 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x12e2f8b9738 <col:26> 'int' 0
|-FunctionDecl 0x12e2f8b5a40 <.//openssl//file_jk/before\crypto\asn1\a_utctm.c:190:1, line:213:1> line:190:5 invalid ASN1_UTCTIME_cmp_time_t 'int (const int *, time_t)'
| |-ParmVarDecl 0x12e2f8b58a8 <col:29, col:49> col:49 invalid s 'const int *'
| |-ParmVarDecl 0x12e2f8b5920 <col:52, col:59> col:59 used t 'time_t':'long long'
| `-CompoundStmt 0x12e2f8b6670 <line:191:1, line:213:1>
|   |-DeclStmt 0x12e2f8b5c30 <line:192:5, col:23>
|   | |-VarDecl 0x12e2f8b5b28 <col:5, col:15> col:15 used stm 'struct tm':'struct tm'
|   | `-VarDecl 0x12e2f8b5bb0 <col:5, col:20> col:20 used ttm 'struct tm':'struct tm'
|   |-DeclStmt 0x12e2f8b5d60 <line:193:5, col:17>
|   | |-VarDecl 0x12e2f8b5c60 <col:5, col:9> col:9 used day 'int'
|   | `-VarDecl 0x12e2f8b5ce0 <col:5, col:14> col:14 used sec 'int'
|   |-IfStmt 0x12e2f8b5e30 <line:195:5, line:196:17>
|   | |-OpaqueValueExpr 0x12e2f8b5e18 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x12e2f8b5e08 <col:9, col:17>
|   |   `-UnaryOperator 0x12e2f8b5df0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x12e2f8b5dc8 <col:17> 'int' 2
|   |-IfStmt 0x12e2f8b5fb8 <line:198:5, line:199:17>
|   | |-UnaryOperator 0x12e2f8b5f50 <line:198:9, col:33> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x12e2f8b5f20 <col:10, col:33> 'int'
|   | |   |-ImplicitCastExpr 0x12e2f8b5f08 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x12e2f8b5e48 <col:10> 'int ()' Function 0x12e2f8b1f48 'OPENSSL_gmtime' 'int ()'
|   | |   |-UnaryOperator 0x12e2f8b5ea0 <col:25, col:26> 'time_t *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x12e2f8b5e68 <col:26> 'time_t':'long long' lvalue ParmVar 0x12e2f8b5920 't' 'time_t':'long long'
|   | |   `-UnaryOperator 0x12e2f8b5ef0 <col:29, col:30> 'struct tm *' prefix '&' cannot overflow
|   | |     `-DeclRefExpr 0x12e2f8b5eb8 <col:30> 'struct tm':'struct tm' lvalue Var 0x12e2f8b5bb0 'ttm' 'struct tm':'struct tm'
|   | `-ReturnStmt 0x12e2f8b5fa8 <line:199:9, col:17>
|   |   `-UnaryOperator 0x12e2f8b5f90 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x12e2f8b5f68 <col:17> 'int' 2
|   |-IfStmt 0x12e2f8b62b0 <line:201:5, line:202:17>
|   | |-UnaryOperator 0x12e2f8b6248 <line:201:9, col:52> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x12e2f8b6208 <col:10, col:52> 'int'
|   | |   |-ImplicitCastExpr 0x12e2f8b61f0 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x12e2f8b60c0 <col:10> 'int ()' Function 0x12e2f8b5ff8 'OPENSSL_gmtime_diff' 'int ()'
|   | |   |-UnaryOperator 0x12e2f8b6118 <col:30, col:31> 'int *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x12e2f8b60e0 <col:31> 'int' lvalue Var 0x12e2f8b5c60 'day' 'int'
|   | |   |-UnaryOperator 0x12e2f8b6168 <col:36, col:37> 'int *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x12e2f8b6130 <col:37> 'int' lvalue Var 0x12e2f8b5ce0 'sec' 'int'
|   | |   |-UnaryOperator 0x12e2f8b61a0 <col:42, col:43> 'struct tm *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x12e2f8b6180 <col:43> 'struct tm':'struct tm' lvalue Var 0x12e2f8b5bb0 'ttm' 'struct tm':'struct tm'
|   | |   `-UnaryOperator 0x12e2f8b61d8 <col:48, col:49> 'struct tm *' prefix '&' cannot overflow
|   | |     `-DeclRefExpr 0x12e2f8b61b8 <col:49> 'struct tm':'struct tm' lvalue Var 0x12e2f8b5b28 'stm' 'struct tm':'struct tm'
|   | `-ReturnStmt 0x12e2f8b62a0 <line:202:9, col:17>
|   |   `-UnaryOperator 0x12e2f8b6288 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x12e2f8b6260 <col:17> 'int' 2
|   |-IfStmt 0x12e2f8b6380 <line:204:5, line:205:16>
|   | |-BinaryOperator 0x12e2f8b6328 <line:204:9, col:15> 'int' '>'
|   | | |-ImplicitCastExpr 0x12e2f8b6310 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12e2f8b62c8 <col:9> 'int' lvalue Var 0x12e2f8b5c60 'day' 'int'
|   | | `-IntegerLiteral 0x12e2f8b62e8 <col:15> 'int' 0
|   | `-ReturnStmt 0x12e2f8b6370 <line:205:9, col:16>
|   |   `-IntegerLiteral 0x12e2f8b6348 <col:16> 'int' 1
|   |-IfStmt 0x12e2f8b6468 <line:206:5, line:207:17>
|   | |-BinaryOperator 0x12e2f8b63f8 <line:206:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x12e2f8b63e0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12e2f8b6398 <col:9> 'int' lvalue Var 0x12e2f8b5c60 'day' 'int'
|   | | `-IntegerLiteral 0x12e2f8b63b8 <col:15> 'int' 0
|   | `-ReturnStmt 0x12e2f8b6458 <line:207:9, col:17>
|   |   `-UnaryOperator 0x12e2f8b6440 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x12e2f8b6418 <col:17> 'int' 1
|   |-IfStmt 0x12e2f8b6538 <line:208:5, line:209:16>
|   | |-BinaryOperator 0x12e2f8b64e0 <line:208:9, col:15> 'int' '>'
|   | | |-ImplicitCastExpr 0x12e2f8b64c8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12e2f8b6480 <col:9> 'int' lvalue Var 0x12e2f8b5ce0 'sec' 'int'
|   | | `-IntegerLiteral 0x12e2f8b64a0 <col:15> 'int' 0
|   | `-ReturnStmt 0x12e2f8b6528 <line:209:9, col:16>
|   |   `-IntegerLiteral 0x12e2f8b6500 <col:16> 'int' 1
|   |-IfStmt 0x12e2f8b6620 <line:210:5, line:211:17>
|   | |-BinaryOperator 0x12e2f8b65b0 <line:210:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x12e2f8b6598 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12e2f8b6550 <col:9> 'int' lvalue Var 0x12e2f8b5ce0 'sec' 'int'
|   | | `-IntegerLiteral 0x12e2f8b6570 <col:15> 'int' 0
|   | `-ReturnStmt 0x12e2f8b6610 <line:211:9, col:17>
|   |   `-UnaryOperator 0x12e2f8b65f8 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x12e2f8b65d0 <col:17> 'int' 1
|   `-ReturnStmt 0x12e2f8b6660 <line:212:5, col:12>
|     `-IntegerLiteral 0x12e2f8b6638 <col:12> 'int' 0
`-FunctionDecl 0x12e2f8b9888 <line:215:1, line:254:1> line:215:5 invalid ASN1_UTCTIME_print 'int (int *, const int *)'
  |-ParmVarDecl 0x12e2f8b66e8 <col:24, col:29> col:29 invalid bp 'int *'
  |-ParmVarDecl 0x12e2f8b6768 <col:33, col:53> col:53 invalid tm 'const int *'
  `-CompoundStmt 0x12e2f8b8770 <line:216:1, line:254:1>
    |-DeclStmt 0x12e2f8b99d0 <line:217:5, col:18>
    | `-VarDecl 0x12e2f8b9968 <col:5, col:17> col:17 used v 'const char *'
    |-DeclStmt 0x12e2f8b9a90 <line:218:5, col:16>
    | `-VarDecl 0x12e2f8b9a00 <col:5, col:15> col:9 used gmt 'int' cinit
    |   `-IntegerLiteral 0x12e2f8b9a68 <col:15> 'int' 0
    |-DeclStmt 0x12e2f8b9b28 <line:219:5, col:10>
    | `-VarDecl 0x12e2f8b9ac0 <col:5, col:9> col:9 used i 'int'
    |-DeclStmt 0x12e2f8b9f68 <line:220:5, col:49>
    | |-VarDecl 0x12e2f8b9b58 <col:5, col:13> col:9 used y 'int' cinit
    | | `-IntegerLiteral 0x12e2f8b9bc0 <col:13> 'int' 0
    | |-VarDecl 0x12e2f8b9c00 <col:5, col:20> col:16 used M 'int' cinit
    | | `-IntegerLiteral 0x12e2f8b9c68 <col:20> 'int' 0
    | |-VarDecl 0x12e2f8b9ca8 <col:5, col:27> col:23 used d 'int' cinit
    | | `-IntegerLiteral 0x12e2f8b9d10 <col:27> 'int' 0
    | |-VarDecl 0x12e2f8b9d50 <col:5, col:34> col:30 used h 'int' cinit
    | | `-IntegerLiteral 0x12e2f8b9db8 <col:34> 'int' 0
    | |-VarDecl 0x12e2f8b9df8 <col:5, col:41> col:37 used m 'int' cinit
    | | `-IntegerLiteral 0x12e2f8b9e60 <col:41> 'int' 0
    | `-VarDecl 0x12e2f8b9ea0 <col:5, col:48> col:44 used s 'int' cinit
    |   `-IntegerLiteral 0x12e2f8b9f08 <col:48> 'int' 0
    |-IfStmt 0x12e2f8ba0d8 <line:225:5, line:226:14>
    | |-BinaryOperator 0x12e2f8ba050 <line:225:9, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x12e2f8ba038 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12e2f8b9ff0 <col:9> 'int' lvalue Var 0x12e2f8b9ac0 'i' 'int'
    | | `-IntegerLiteral 0x12e2f8ba010 <col:13> 'int' 10
    | `-GotoStmt 0x12e2f8ba0c0 <line:226:9, col:14> 'err' 0x12e2f8ba070
    |-IfStmt 0x12e2f8ba2b0 <line:227:5, line:228:15>
    | |-BinaryOperator 0x12e2f8ba210 <line:227:9, col:21> 'int' '=='
    | | |-ImplicitCastExpr 0x12e2f8ba1f8 <col:9, col:16> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x12e2f8ba1e0 <col:9, col:16> 'char' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x12e2f8ba1a8 <col:9, col:16> 'const char' lvalue
    | | |     |-ImplicitCastExpr 0x12e2f8ba190 <col:9> 'const char *' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x12e2f8ba0f0 <col:9> 'const char *' lvalue Var 0x12e2f8b9968 'v' 'const char *'
    | | |     `-BinaryOperator 0x12e2f8ba170 <col:11, col:15> 'int' '-'
    | | |       |-ImplicitCastExpr 0x12e2f8ba158 <col:11> 'int' <LValueToRValue>
    | | |       | `-DeclRefExpr 0x12e2f8ba110 <col:11> 'int' lvalue Var 0x12e2f8b9ac0 'i' 'int'
    | | |       `-IntegerLiteral 0x12e2f8ba130 <col:15> 'int' 1
    | | `-CharacterLiteral 0x12e2f8ba1c8 <col:21> 'int' 90
    | `-BinaryOperator 0x12e2f8ba290 <line:228:9, col:15> 'int' '='
    |   |-DeclRefExpr 0x12e2f8ba230 <col:9> 'int' lvalue Var 0x12e2f8b9a00 'gmt' 'int'
    |   `-IntegerLiteral 0x12e2f8ba268 <col:15> 'int' 1
    |-ForStmt 0x12e2f8ba668 <line:229:5, line:231:18>
    | |-BinaryOperator 0x12e2f8ba310 <line:229:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x12e2f8ba2c8 <col:10> 'int' lvalue Var 0x12e2f8b9ac0 'i' 'int'
    | | `-IntegerLiteral 0x12e2f8ba2e8 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12e2f8ba390 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x12e2f8ba378 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12e2f8ba330 <col:17> 'int' lvalue Var 0x12e2f8b9ac0 'i' 'int'
    | | `-IntegerLiteral 0x12e2f8ba350 <col:21> 'int' 10
    | |-UnaryOperator 0x12e2f8ba3d0 <col:25, col:26> 'int' postfix '++'
    | | `-DeclRefExpr 0x12e2f8ba3b0 <col:25> 'int' lvalue Var 0x12e2f8b9ac0 'i' 'int'
    | `-IfStmt 0x12e2f8ba650 <line:230:9, line:231:18>
    |   |-BinaryOperator 0x12e2f8ba618 <line:230:13, col:40> 'int' '||'
    |   | |-ParenExpr 0x12e2f8ba4e0 <col:13, col:24> 'int'
    |   | | `-BinaryOperator 0x12e2f8ba4c0 <col:14, col:21> 'int' '>'
    |   | |   |-ImplicitCastExpr 0x12e2f8ba4a8 <col:14, col:17> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x12e2f8ba490 <col:14, col:17> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x12e2f8ba458 <col:14, col:17> 'const char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x12e2f8ba428 <col:14> 'const char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x12e2f8ba3e8 <col:14> 'const char *' lvalue Var 0x12e2f8b9968 'v' 'const char *'
    |   | |   |     `-ImplicitCastExpr 0x12e2f8ba440 <col:16> 'int' <LValueToRValue>
    |   | |   |       `-DeclRefExpr 0x12e2f8ba408 <col:16> 'int' lvalue Var 0x12e2f8b9ac0 'i' 'int'
    |   | |   `-CharacterLiteral 0x12e2f8ba478 <col:21> 'int' 57
    |   | `-ParenExpr 0x12e2f8ba5f8 <col:29, col:40> 'int'
    |   |   `-BinaryOperator 0x12e2f8ba5d8 <col:30, col:37> 'int' '<'
    |   |     |-ImplicitCastExpr 0x12e2f8ba5c0 <col:30, col:33> 'int' <IntegralCast>
    |   |     | `-ImplicitCastExpr 0x12e2f8ba5a8 <col:30, col:33> 'char' <LValueToRValue>
    |   |     |   `-ArraySubscriptExpr 0x12e2f8ba570 <col:30, col:33> 'const char' lvalue
    |   |     |     |-ImplicitCastExpr 0x12e2f8ba540 <col:30> 'const char *' <LValueToRValue>
    |   |     |     | `-DeclRefExpr 0x12e2f8ba500 <col:30> 'const char *' lvalue Var 0x12e2f8b9968 'v' 'const char *'
    |   |     |     `-ImplicitCastExpr 0x12e2f8ba558 <col:32> 'int' <LValueToRValue>
    |   |     |       `-DeclRefExpr 0x12e2f8ba520 <col:32> 'int' lvalue Var 0x12e2f8b9ac0 'i' 'int'
    |   |     `-CharacterLiteral 0x12e2f8ba590 <col:37> 'int' 48
    |   `-GotoStmt 0x12e2f8ba638 <line:231:13, col:18> 'err' 0x12e2f8ba070
    |-BinaryOperator 0x12e2f8b6928 <line:232:5, col:40> 'int' '='
    | |-DeclRefExpr 0x12e2f8ba6a0 <col:5> 'int' lvalue Var 0x12e2f8b9b58 'y' 'int'
    | `-BinaryOperator 0x12e2f8b6908 <col:9, col:40> 'int' '+'
    |   |-BinaryOperator 0x12e2f8ba808 <col:9, col:24> 'int' '*'
    |   | |-ParenExpr 0x12e2f8ba7c0 <col:9, col:20> 'int'
    |   | | `-BinaryOperator 0x12e2f8ba7a0 <col:10, col:17> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x12e2f8ba788 <col:10, col:13> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x12e2f8ba770 <col:10, col:13> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x12e2f8ba738 <col:10, col:13> 'const char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x12e2f8ba720 <col:10> 'const char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x12e2f8ba6d8 <col:10> 'const char *' lvalue Var 0x12e2f8b9968 'v' 'const char *'
    |   | |   |     `-IntegerLiteral 0x12e2f8ba6f8 <col:12> 'int' 0
    |   | |   `-CharacterLiteral 0x12e2f8ba758 <col:17> 'int' 48
    |   | `-IntegerLiteral 0x12e2f8ba7e0 <col:24> 'int' 10
    |   `-ParenExpr 0x12e2f8b68e8 <col:29, col:40> 'int'
    |     `-BinaryOperator 0x12e2f8b68c8 <col:30, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x12e2f8b68b0 <col:30, col:33> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x12e2f8b6898 <col:30, col:33> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x12e2f8b6860 <col:30, col:33> 'const char' lvalue
    |       |     |-ImplicitCastExpr 0x12e2f8b6848 <col:30> 'const char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x12e2f8ba828 <col:30> 'const char *' lvalue Var 0x12e2f8b9968 'v' 'const char *'
    |       |     `-IntegerLiteral 0x12e2f8b6820 <col:32> 'int' 1
    |       `-CharacterLiteral 0x12e2f8b6880 <col:37> 'int' 48
    |-IfStmt 0x12e2f8b6a40 <line:233:5, line:234:14>
    | |-BinaryOperator 0x12e2f8b69a8 <line:233:9, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x12e2f8b6990 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12e2f8b6948 <col:9> 'int' lvalue Var 0x12e2f8b9b58 'y' 'int'
    | | `-IntegerLiteral 0x12e2f8b6968 <col:13> 'int' 50
    | `-CompoundAssignOperator 0x12e2f8b6a10 <line:234:9, col:14> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |-DeclRefExpr 0x12e2f8b69c8 <col:9> 'int' lvalue Var 0x12e2f8b9b58 'y' 'int'
    |   `-IntegerLiteral 0x12e2f8b69e8 <col:14> 'int' 100
    |-BinaryOperator 0x12e2f8b6d08 <line:235:5, col:40> 'int' '='
    | |-DeclRefExpr 0x12e2f8b6a58 <col:5> 'int' lvalue Var 0x12e2f8b9c00 'M' 'int'
    | `-BinaryOperator 0x12e2f8b6ce8 <col:9, col:40> 'int' '+'
    |   |-BinaryOperator 0x12e2f8b6bc0 <col:9, col:24> 'int' '*'
    |   | |-ParenExpr 0x12e2f8b6b78 <col:9, col:20> 'int'
    |   | | `-BinaryOperator 0x12e2f8b6b58 <col:10, col:17> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x12e2f8b6b40 <col:10, col:13> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x12e2f8b6b28 <col:10, col:13> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x12e2f8b6af0 <col:10, col:13> 'const char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x12e2f8b6ad8 <col:10> 'const char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x12e2f8b6a90 <col:10> 'const char *' lvalue Var 0x12e2f8b9968 'v' 'const char *'
    |   | |   |     `-IntegerLiteral 0x12e2f8b6ab0 <col:12> 'int' 2
    |   | |   `-CharacterLiteral 0x12e2f8b6b10 <col:17> 'int' 48
    |   | `-IntegerLiteral 0x12e2f8b6b98 <col:24> 'int' 10
    |   `-ParenExpr 0x12e2f8b6cc8 <col:29, col:40> 'int'
    |     `-BinaryOperator 0x12e2f8b6ca8 <col:30, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x12e2f8b6c90 <col:30, col:33> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x12e2f8b6c78 <col:30, col:33> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x12e2f8b6c40 <col:30, col:33> 'const char' lvalue
    |       |     |-ImplicitCastExpr 0x12e2f8b6c28 <col:30> 'const char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x12e2f8b6be0 <col:30> 'const char *' lvalue Var 0x12e2f8b9968 'v' 'const char *'
    |       |     `-IntegerLiteral 0x12e2f8b6c00 <col:32> 'int' 3
    |       `-CharacterLiteral 0x12e2f8b6c60 <col:37> 'int' 48
    |-IfStmt 0x12e2f8b6ea0 <line:236:5, line:237:14>
    | |-BinaryOperator 0x12e2f8b6e68 <line:236:9, col:27> 'int' '||'
    | | |-ParenExpr 0x12e2f8b6da8 <col:9, col:16> 'int'
    | | | `-BinaryOperator 0x12e2f8b6d88 <col:10, col:14> 'int' '>'
    | | |   |-ImplicitCastExpr 0x12e2f8b6d70 <col:10> 'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x12e2f8b6d28 <col:10> 'int' lvalue Var 0x12e2f8b9c00 'M' 'int'
    | | |   `-IntegerLiteral 0x12e2f8b6d48 <col:14> 'int' 12
    | | `-ParenExpr 0x12e2f8b6e48 <col:21, col:27> 'int'
    | |   `-BinaryOperator 0x12e2f8b6e28 <col:22, col:26> 'int' '<'
    | |     |-ImplicitCastExpr 0x12e2f8b6e10 <col:22> 'int' <LValueToRValue>
    | |     | `-DeclRefExpr 0x12e2f8b6dc8 <col:22> 'int' lvalue Var 0x12e2f8b9c00 'M' 'int'
    | |     `-IntegerLiteral 0x12e2f8b6de8 <col:26> 'int' 1
    | `-GotoStmt 0x12e2f8b6e88 <line:237:9, col:14> 'err' 0x12e2f8ba070
    |-BinaryOperator 0x12e2f8b7168 <line:238:5, col:40> 'int' '='
    | |-DeclRefExpr 0x12e2f8b6eb8 <col:5> 'int' lvalue Var 0x12e2f8b9ca8 'd' 'int'
    | `-BinaryOperator 0x12e2f8b7148 <col:9, col:40> 'int' '+'
    |   |-BinaryOperator 0x12e2f8b7020 <col:9, col:24> 'int' '*'
    |   | |-ParenExpr 0x12e2f8b6fd8 <col:9, col:20> 'int'
    |   | | `-BinaryOperator 0x12e2f8b6fb8 <col:10, col:17> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x12e2f8b6fa0 <col:10, col:13> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x12e2f8b6f88 <col:10, col:13> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x12e2f8b6f50 <col:10, col:13> 'const char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x12e2f8b6f38 <col:10> 'const char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x12e2f8b6ef0 <col:10> 'const char *' lvalue Var 0x12e2f8b9968 'v' 'const char *'
    |   | |   |     `-IntegerLiteral 0x12e2f8b6f10 <col:12> 'int' 4
    |   | |   `-CharacterLiteral 0x12e2f8b6f70 <col:17> 'int' 48
    |   | `-IntegerLiteral 0x12e2f8b6ff8 <col:24> 'int' 10
    |   `-ParenExpr 0x12e2f8b7128 <col:29, col:40> 'int'
    |     `-BinaryOperator 0x12e2f8b7108 <col:30, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x12e2f8b70f0 <col:30, col:33> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x12e2f8b70d8 <col:30, col:33> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x12e2f8b70a0 <col:30, col:33> 'const char' lvalue
    |       |     |-ImplicitCastExpr 0x12e2f8b7088 <col:30> 'const char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x12e2f8b7040 <col:30> 'const char *' lvalue Var 0x12e2f8b9968 'v' 'const char *'
    |       |     `-IntegerLiteral 0x12e2f8b7060 <col:32> 'int' 5
    |       `-CharacterLiteral 0x12e2f8b70c0 <col:37> 'int' 48
    |-BinaryOperator 0x12e2f8b7438 <line:239:5, col:40> 'int' '='
    | |-DeclRefExpr 0x12e2f8b7188 <col:5> 'int' lvalue Var 0x12e2f8b9d50 'h' 'int'
    | `-BinaryOperator 0x12e2f8b7418 <col:9, col:40> 'int' '+'
    |   |-BinaryOperator 0x12e2f8b72f0 <col:9, col:24> 'int' '*'
    |   | |-ParenExpr 0x12e2f8b72a8 <col:9, col:20> 'int'
    |   | | `-BinaryOperator 0x12e2f8b7288 <col:10, col:17> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x12e2f8b7270 <col:10, col:13> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x12e2f8b7258 <col:10, col:13> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x12e2f8b7220 <col:10, col:13> 'const char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x12e2f8b7208 <col:10> 'const char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x12e2f8b71c0 <col:10> 'const char *' lvalue Var 0x12e2f8b9968 'v' 'const char *'
    |   | |   |     `-IntegerLiteral 0x12e2f8b71e0 <col:12> 'int' 6
    |   | |   `-CharacterLiteral 0x12e2f8b7240 <col:17> 'int' 48
    |   | `-IntegerLiteral 0x12e2f8b72c8 <col:24> 'int' 10
    |   `-ParenExpr 0x12e2f8b73f8 <col:29, col:40> 'int'
    |     `-BinaryOperator 0x12e2f8b73d8 <col:30, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x12e2f8b73c0 <col:30, col:33> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x12e2f8b73a8 <col:30, col:33> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x12e2f8b7370 <col:30, col:33> 'const char' lvalue
    |       |     |-ImplicitCastExpr 0x12e2f8b7358 <col:30> 'const char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x12e2f8b7310 <col:30> 'const char *' lvalue Var 0x12e2f8b9968 'v' 'const char *'
    |       |     `-IntegerLiteral 0x12e2f8b7330 <col:32> 'int' 7
    |       `-CharacterLiteral 0x12e2f8b7390 <col:37> 'int' 48
    |-BinaryOperator 0x12e2f8b7708 <line:240:5, col:40> 'int' '='
    | |-DeclRefExpr 0x12e2f8b7458 <col:5> 'int' lvalue Var 0x12e2f8b9df8 'm' 'int'
    | `-BinaryOperator 0x12e2f8b76e8 <col:9, col:40> 'int' '+'
    |   |-BinaryOperator 0x12e2f8b75c0 <col:9, col:24> 'int' '*'
    |   | |-ParenExpr 0x12e2f8b7578 <col:9, col:20> 'int'
    |   | | `-BinaryOperator 0x12e2f8b7558 <col:10, col:17> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x12e2f8b7540 <col:10, col:13> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x12e2f8b7528 <col:10, col:13> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x12e2f8b74f0 <col:10, col:13> 'const char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x12e2f8b74d8 <col:10> 'const char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x12e2f8b7490 <col:10> 'const char *' lvalue Var 0x12e2f8b9968 'v' 'const char *'
    |   | |   |     `-IntegerLiteral 0x12e2f8b74b0 <col:12> 'int' 8
    |   | |   `-CharacterLiteral 0x12e2f8b7510 <col:17> 'int' 48
    |   | `-IntegerLiteral 0x12e2f8b7598 <col:24> 'int' 10
    |   `-ParenExpr 0x12e2f8b76c8 <col:29, col:40> 'int'
    |     `-BinaryOperator 0x12e2f8b76a8 <col:30, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x12e2f8b7690 <col:30, col:33> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x12e2f8b7678 <col:30, col:33> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x12e2f8b7640 <col:30, col:33> 'const char' lvalue
    |       |     |-ImplicitCastExpr 0x12e2f8b7628 <col:30> 'const char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x12e2f8b75e0 <col:30> 'const char *' lvalue Var 0x12e2f8b9968 'v' 'const char *'
    |       |     `-IntegerLiteral 0x12e2f8b7600 <col:32> 'int' 9
    |       `-CharacterLiteral 0x12e2f8b7660 <col:37> 'int' 48
    |-IfStmt 0x12e2f8b7e70 <line:241:5, line:243:46>
    | |-OpaqueValueExpr 0x12e2f8b7e58 <<invalid sloc>> '_Bool'
    | `-BinaryOperator 0x12e2f8b7e38 <col:9, col:46> 'int' '='
    |   |-DeclRefExpr 0x12e2f8b7b88 <col:9> 'int' lvalue Var 0x12e2f8b9ea0 's' 'int'
    |   `-BinaryOperator 0x12e2f8b7e18 <col:13, col:46> 'int' '+'
    |     |-BinaryOperator 0x12e2f8b7cf0 <col:13, col:29> 'int' '*'
    |     | |-ParenExpr 0x12e2f8b7ca8 <col:13, col:25> 'int'
    |     | | `-BinaryOperator 0x12e2f8b7c88 <col:14, col:22> 'int' '-'
    |     | |   |-ImplicitCastExpr 0x12e2f8b7c70 <col:14, col:18> 'int' <IntegralCast>
    |     | |   | `-ImplicitCastExpr 0x12e2f8b7c58 <col:14, col:18> 'char' <LValueToRValue>
    |     | |   |   `-ArraySubscriptExpr 0x12e2f8b7c20 <col:14, col:18> 'const char' lvalue
    |     | |   |     |-ImplicitCastExpr 0x12e2f8b7c08 <col:14> 'const char *' <LValueToRValue>
    |     | |   |     | `-DeclRefExpr 0x12e2f8b7bc0 <col:14> 'const char *' lvalue Var 0x12e2f8b9968 'v' 'const char *'
    |     | |   |     `-IntegerLiteral 0x12e2f8b7be0 <col:16> 'int' 10
    |     | |   `-CharacterLiteral 0x12e2f8b7c40 <col:22> 'int' 48
    |     | `-IntegerLiteral 0x12e2f8b7cc8 <col:29> 'int' 10
    |     `-ParenExpr 0x12e2f8b7df8 <col:34, col:46> 'int'
    |       `-BinaryOperator 0x12e2f8b7dd8 <col:35, col:43> 'int' '-'
    |         |-ImplicitCastExpr 0x12e2f8b7dc0 <col:35, col:39> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x12e2f8b7da8 <col:35, col:39> 'char' <LValueToRValue>
    |         |   `-ArraySubscriptExpr 0x12e2f8b7d70 <col:35, col:39> 'const char' lvalue
    |         |     |-ImplicitCastExpr 0x12e2f8b7d58 <col:35> 'const char *' <LValueToRValue>
    |         |     | `-DeclRefExpr 0x12e2f8b7d10 <col:35> 'const char *' lvalue Var 0x12e2f8b9968 'v' 'const char *'
    |         |     `-IntegerLiteral 0x12e2f8b7d30 <col:37> 'int' 11
    |         `-CharacterLiteral 0x12e2f8b7d90 <col:43> 'int' 48
    |-IfStmt 0x12e2f8b8530 <line:245:5, line:250:18> has_else
    | |-OpaqueValueExpr 0x12e2f8b8518 <<invalid sloc>> '_Bool'
    | |-ReturnStmt 0x12e2f8b84b0 <line:248:9, col:18>
    | | `-ParenExpr 0x12e2f8b8490 <col:16, col:18> 'int'
    | |   `-IntegerLiteral 0x12e2f8b8468 <col:17> 'int' 0
    | `-ReturnStmt 0x12e2f8b8508 <line:250:9, col:18>
    |   `-ParenExpr 0x12e2f8b84e8 <col:16, col:18> 'int'
    |     `-IntegerLiteral 0x12e2f8b84c0 <col:17> 'int' 1
    |-LabelStmt 0x12e2f8b8700 <line:251:2, col:5> 'err'
    | `-NullStmt 0x12e2f8b86f8 <col:5>
    `-ReturnStmt 0x12e2f8b8760 <line:253:5, col:14>
      `-ParenExpr 0x12e2f8b8740 <col:12, col:14> 'int'
        `-IntegerLiteral 0x12e2f8b8718 <col:13> 'int' 0
