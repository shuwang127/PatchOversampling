TranslationUnitDecl 0x195db8e3f98 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x195db8e4830 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x195db8e4530 '__int128'
|-TypedefDecl 0x195db8e48a0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x195db8e4550 'unsigned __int128'
|-TypedefDecl 0x195db8e4bd8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x195db8e4990 'struct __NSConstantString_tag'
|   `-Record 0x195db8e48f8 '__NSConstantString_tag'
|-TypedefDecl 0x195db8e4c48 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x195db8e4170 'unsigned long long'
|-TypedefDecl 0x195db8e4ce0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x195db8e4ca0 'char *'
|   `-BuiltinType 0x195db8e4030 'char'
|-TypedefDecl 0x195db8e4d50 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x195db8e4ca0 'char *'
|   `-BuiltinType 0x195db8e4030 'char'
|-TypedefDecl 0x195db8e4e10 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x195db8e4170 'unsigned long long'
|-TypedefDecl 0x195db8e4e80 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x195db8e4ca0 'char *'
|   `-BuiltinType 0x195db8e4030 'char'
|-FunctionDecl 0x195dd43c3f0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x195dd43c490 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x195dd43c500 <col:21> Implicit
|-FunctionDecl 0x195dd43c558 prev 0x195dd43c3f0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x195dd43c280 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x195dd43c648 <col:21> Inherited Implicit
|-TypedefDecl 0x195dd43c688 prev 0x195db8e4c48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x195db8e4170 'unsigned long long'
|-TypedefDecl 0x195dd43c730 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x195dd43c700 'size_t' sugar
|   |-Typedef 0x195dd43c688 'size_t'
|   `-BuiltinType 0x195db8e4170 'unsigned long long'
|-TypedefDecl 0x195dd43c7a0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x195db8e40d0 'long long'
|-TypedefDecl 0x195dd43c810 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x195db8e40d0 'long long'
|-TypedefDecl 0x195dd43c880 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x195db8e4110 'unsigned short'
|-TypedefDecl 0x195dd43c8f0 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x195db8e4110 'unsigned short'
|-TypedefDecl 0x195dd43c960 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x195db8e4110 'unsigned short'
|-TypedefDecl 0x195dd43c9d0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x195db8e4090 'int'
|-TypedefDecl 0x195dd43ca40 <line:567:1, col:19> col:19 referenced __time32_t 'long'
| `-BuiltinType 0x195db8e40b0 'long'
|-TypedefDecl 0x195dd43cab0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x195db8e40d0 'long long'
|-TypedefDecl 0x195dd43cb40 <line:580:1, col:20> col:20 referenced time_t '__time64_t':'long long'
| `-TypedefType 0x195dd43cb10 '__time64_t' sugar
|   |-Typedef 0x195dd43cab0 '__time64_t'
|   `-BuiltinType 0x195db8e40d0 'long long'
|-FunctionDecl 0x195dd43ccb8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x195dd43ced8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x195dd474320 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x195dd43d018 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x195dd43d090 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x195dd43d108 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x195dd43d188 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x195dd4740c0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x195dd474400 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x195dd4744c0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x195dd474630 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x195dd4745e0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x195dd474580 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x195dd4744a0 'struct threadlocaleinfostruct'
|       `-Record 0x195dd4841c0 'threadlocaleinfostruct'
|-TypedefDecl 0x195dd474740 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x195dd4746f0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x195dd474690 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x195dd474560 'struct threadmbcinfostruct'
|       `-Record 0x195dd4744c0 'threadmbcinfostruct'
|-RecordDecl 0x195dd474798 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x195dd474850 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x195dd474910 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x195dd4749a0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x195dd474a30 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x195dd474ae8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x195dd474a90 'struct localeinfo_struct' sugar
|   `-RecordType 0x195dd4748f0 'struct localeinfo_struct'
|     `-Record 0x195dd474850 'localeinfo_struct'
|-TypedefDecl 0x195dd474bc0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x195dd474b70 'struct localeinfo_struct *'
|   `-ElaboratedType 0x195dd474a90 'struct localeinfo_struct' sugar
|     `-RecordType 0x195dd4748f0 'struct localeinfo_struct'
|       `-Record 0x195dd474850 'localeinfo_struct'
|-RecordDecl 0x195dd474c38 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x195dd474cf0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x195dd474d68 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x195dd474e28 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x195dd474ec0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x195dd474f30 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x195dd474fe8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x195dd474f90 'struct localerefcount' sugar
|   `-RecordType 0x195dd474cd0 'struct localerefcount'
|     `-Record 0x195dd474c38 'localerefcount'
|-RecordDecl 0x195dd4841c0 prev 0x195dd474400 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x195dd484240 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x195dd4842b8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x195dd484328 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x195dd484398 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x195dd484408 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x195dd4845c8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x195dd484638 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x195dd4846a8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x195dd484718 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x195dd484788 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x195dd4847f8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x195dd484850 parent 0x195db8e3f98 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x195dd4849e0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x195dd484a50 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x195dd484ac0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x195dd484b30 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x195dd484bd0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x195dd484c40 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x195dd484d50 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x195dd484e88 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x195dd484f38 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x195dd484ee0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x195dd4744a0 'struct threadlocaleinfostruct'
|     `-Record 0x195dd4841c0 'threadlocaleinfostruct'
|-RecordDecl 0x195dd484fd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x195dd485090 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x195dd485108 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x195dd4861e0 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x195dd486250 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x195dd4862c0 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x195dd486330 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x195dd4863a0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x195dd486410 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x195dd486480 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x195dd486530 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x195dd4864e0 'struct _iobuf' sugar
|   `-RecordType 0x195dd485070 'struct _iobuf'
|     `-Record 0x195dd484fd0 '_iobuf'
|-FunctionDecl 0x195dd486768 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x195dd486838 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x195db8e40d0 'long long'
|-FunctionDecl 0x195dd486a18 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x195dd4868a0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x195dd486d10 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x195dd486af0 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x195dd486b68 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x195dd4870c0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x195dd486df0 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x195dd486e70 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x195dd486ef0 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x195dd48e3d0 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x195dd48e260 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x195dd48e600 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x195dd48e4c0 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x195dd48e7b0 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x195dd48e6d0 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x195dd48e9a0 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x195dd48ec98 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x195dd48ea70 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x195dd48eaf0 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x195dd48ee50 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x195dd48ed70 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x195dd48f000 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x195dd48ef20 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x195dd48f1b0 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x195dd48f0d0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x195dd48d358 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x195dd48d278 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x195dd48d4e8 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x195dd48d850 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x195dd48d5b0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x195dd48d6a8 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x195dd48dc08 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x195dd48d930 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x195dd48d9b0 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x195dd48da28 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x195dd48ddc8 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x195dd48dce8 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x195dd48e090 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x195dd48dea0 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x195dd48df20 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x195dd488200 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x195dd4885f8 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x195dd488698 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x195dd488700 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x195dd488778 prev 0x195dd4885f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x195dd4883d0 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x195dd488450 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x195dd488828 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd488ca0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x195dd4889d0 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x195dd488a50 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x195dd488ad0 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x195dd488fc0 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x195dd489060 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x195dd4890c8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x195dd489140 <col:40> Implicit printf 2 3
|-FunctionDecl 0x195dd490280 prev 0x195dd488fc0 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x195dd488d80 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x195dd488e00 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x195dd490378 <col:40> Inherited printf 2 3
|-FunctionDecl 0x195dd490540 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x195dd4903c0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x195dd490440 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x195dd490798 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x195dd490620 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x195dd490698 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x195dd4909c8 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x195dd490878 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x195dd490cc0 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x195dd490aa0 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x195dd490b18 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x195dd491158 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x195dd4911f8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x195dd489210 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x195dd489278 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x195dd4892e0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x195dd489368 prev 0x195dd491158 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x195dd490da0 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x195dd490e18 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd490e90 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x195dd490f08 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x195dd489870 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x195dd489458 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x195dd4894d0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd489548 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4895c0 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x195dd489638 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x195dd489d30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x195dd489a60 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x195dd489ae0 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x195dd489b58 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x195dd489de8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd491338 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x195dd489f30 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x195dd489fb0 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x195dd48a030 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x195dd48a0a8 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x195dd4916e0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x195dd491780 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x195dd4917e8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x195dd491860 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x195dd4918c8 prev 0x195dd4916e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x195dd491518 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x195dd491598 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x195dd491aa8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x195dd491978 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd491ee8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd491be8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x195dd491c68 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x195dd491d00 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x195dd491fa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd48b230 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x195dd4920e0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x195dd492160 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x195dd48b520 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd48b308 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x195dd48b388 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x195dd48b400 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd48b880 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x195dd48b600 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x195dd48b6d8 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x195dd48bc38 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x195dd48b958 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x195dd48b9d8 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x195dd48ba58 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x195dd48be98 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x195dd48bd18 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x195dd48c288 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x195dd48bf68 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x195dd48bfe8 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x195dd48c068 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x195dd48c4e8 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x195dd48c368 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x195dd48c9a8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x195dd48ca48 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x195dd48cab0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x195dd48cb18 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x195dd48cb80 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x195dd48cc08 prev 0x195dd48c9a8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x195dd48c5f0 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x195dd48c668 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd48c6e0 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x195dd48c758 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x195dd48cdd0 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x195dd48ccf0 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x195dd48cf60 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x195dd48d0e8 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x195dd492460 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x195dd48d1b8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x195dd4922b0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x195dd492788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x195dd492640 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x195dd492830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd492a50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x195dd492970 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x195dd492c70 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x195dd492b28 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x195dd492e20 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x195dd492d40 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x195dd493070 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x195dd492ef8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x195dd492f78 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x195dd4e3f60 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x195dd4e4000 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x195dd4e4070 <col:40> Implicit printf 1 2
|-FunctionDecl 0x195dd4e40d8 prev 0x195dd4e3f60 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x195dd493150 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x195dd4e41c8 <col:40> Inherited printf 1 2
|-FunctionDecl 0x195dd4e42f8 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x195dd4e4218 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x195dd4e4548 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x195dd4e43d0 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x195dd4e4448 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x195dd4e4708 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x195dd4e4628 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x195dd4e4928 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x195dd4e47e0 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x195dd4e4b78 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x195dd4e4a00 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x195dd4e4a78 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x195dd4e4d38 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x195dd4e4c58 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x195dd4e1000 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x195dd4e4e10 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x195dd4e4e90 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x195dd4e11c0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x195dd4e10e0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x195dd4e1450 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x195dd4e1370 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x195dd4e14f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x195dd4e16f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x195dd4e1618 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x195dd4e1880 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x195dd4e1b28 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x195dd4e1bc8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x195dd4e1c38 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x195dd4e1ca0 prev 0x195dd4e1b28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x195dd4e1a10 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x195dd4e1e78 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x195dd4e1d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd4df220 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd4defe8 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x195dd4df060 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x195dd4df2d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd4df4f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x195dd4df418 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x195dd4df748 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd4df5d0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x195dd4df648 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd4dfb08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x195dd4df8e0 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x195dd4df960 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x195dd4dfbb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd4dfde0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x195dd4dfd00 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x195dd4e2088 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x195dd4e1f40 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x195dd4e2270 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x195dd4e26c0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x195dd4e2338 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x195dd4e23b8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x195dd4e2438 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x195dd4e24b0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x195dd4e2b40 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x195dd4e27b0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x195dd4e2828 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4e28a0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x195dd4e2920 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x195dd4e2f50 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x195dd4e2c30 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x195dd4e2ca8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x195dd4e2d28 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x195dd4e3118 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x195dd4e3038 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x195dd4e34f0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x195dd4e3590 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x195dd4e35f8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x195dd4e3670 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x195dd4e36d8 prev 0x195dd4e34f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x195dd4e32b0 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x195dd4e3330 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x195dd4e38b8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x195dd4e3788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd4e3ca8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd4e39c8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x195dd4e3a48 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x195dd4e3ac0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x195dd4e3d60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd4e5070 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x195dd4e3ea8 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x195dd4e4f70 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x195dd4e5368 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd4e5150 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x195dd4e51d0 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x195dd4e5248 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd4e57f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x195dd4e5510 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x195dd4e5588 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4e5608 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x195dd4e58b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd4e5e80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd4e5af0 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x195dd4e5b68 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4e5be8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x195dd4e5c60 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x195dd4ddf00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd4de260 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x195dd4de048 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x195dd4de0c0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x195dd4de140 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x195dd4de5f8 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd4de348 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x195dd4de3c0 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4de440 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x195dd4de4b8 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd4de858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x195dd4de8f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd4debb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x195dd4dea40 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x195dd4e5f80 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x195dd4dec88 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x195dd4ded00 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x195dd4e6200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x195dd4e6120 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x195dd4e62a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd4e6568 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x195dd4e63f0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x195dd4e6468 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x195dd4e6980 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x195dd4e6a20 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x195dd4e6a88 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x195dd4e6af0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x195dd4e6b70 <col:40> Implicit printf 2 0
|-FunctionDecl 0x195dd4e6bd8 prev 0x195dd4e6980 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x195dd4e6640 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x195dd4e66c0 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x195dd4e6738 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x195dd4e6cd8 <col:40> Inherited printf 2 0
|-FunctionDecl 0x195dd4e6f90 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x195dd4e7030 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x195dd4e7098 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x195dd4e7100 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x195dd4e7180 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x195dd4e71e8 prev 0x195dd4e6f90 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x195dd4e6d20 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x195dd4e6da0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x195dd4e6e18 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x195dd4e72e8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x195dd4e7548 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x195dd4e7330 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x195dd4e73b0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x195dd4e7428 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4e7840 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x195dd4e7628 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x195dd4e76a8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x195dd4e7720 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4e7b88 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x195dd4e7c28 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x195dd4e7c90 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x195dd4e7d08 <col:40> Implicit printf 1 0
|-FunctionDecl 0x195dd4e7d70 prev 0x195dd4e7b88 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x195dd4e7928 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x195dd4e79a0 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x195dd4e7e68 <col:40> Inherited printf 1 0
|-FunctionDecl 0x195dd4e0058 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x195dd4e00f8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x195dd4e0160 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x195dd4e01d8 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x195dd4e0240 prev 0x195dd4e0058 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x195dd4e7eb8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x195dd4dff20 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x195dd4e0338 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x195dd4e0500 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x195dd4e0388 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x195dd4e0400 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4e0758 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x195dd4e05e0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x195dd4e0658 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4e0cb8 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x195dd4e0d58 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x195dd4e0dc0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x195dd4e0e28 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x195dd4e0e90 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x195dd4ebfe0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x195dd4ec048 prev 0x195dd4e0cb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x195dd4e08f8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x195dd4e0970 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4e09f0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x195dd4e0a68 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x195dd4ec238 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x195dd4ec108 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd4ec6a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x195dd4ec288 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x195dd4ec300 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4ec378 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4ec3f8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x195dd4ec470 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4ecae8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x195dd4ec7a0 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x195dd4ec818 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4ec890 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4ec910 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x195dd4ec988 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4eceb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x195dd4ecca0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x195dd4ecd18 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4ecd98 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x195dd4ecf70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd4ea430 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x195dd4ea180 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x195dd4ea1f8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4ea278 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x195dd4ea2f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x195dd4ea4f0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd4ea8e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x195dd4ea638 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x195dd4ea6b0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4ea730 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x195dd4ea7a8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4eaca8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x195dd4ea9d8 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x195dd4eaa58 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x195dd4eaad0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4ee0a0 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x195dd4ee140 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x195dd4ee1a8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x195dd4ee220 <col:85> Implicit printf 2 3
|-FunctionDecl 0x195dd4ee288 prev 0x195dd4ee0a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x195dd4eae50 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x195dd4eaed0 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x195dd4ee468 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x195dd4ee338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd4ee890 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x195dd4ee930 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x195dd4ee998 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x195dd4eea00 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x195dd4eea80 <col:94> Implicit printf 2 0
|-FunctionDecl 0x195dd4eeae8 prev 0x195dd4ee890 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x195dd4ee578 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x195dd4ee5f8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x195dd4ee670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x195dd4eecd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x195dd4eeba0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd4ecff0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x195dd4ed090 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x195dd4ed0f8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x195dd4ed160 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x195dd4ed1e0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x195dd4ed248 prev 0x195dd4ecff0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x195dd4eed20 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x195dd4eeda0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x195dd4eee18 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x195dd4ed348 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x195dd4ed510 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x195dd4ed398 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x195dd4ed410 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4ed808 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x195dd4ed5f0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x195dd4ed668 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x195dd4ed6e8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x195dd4edba0 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x195dd4ed8f0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x195dd4ed968 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4ed9e8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x195dd4eda60 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4ede08 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x195dd4edc88 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x195dd4edd08 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x195dd4ef010 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x195dd4edee8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x195dd4ef300 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x195dd4ef0e8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x195dd4ef160 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x195dd4ef1e0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x195dd4ef5f8 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x195dd4ef3e0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x195dd4ef460 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x195dd4ef4d8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4ef858 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x195dd4ef6e0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x195dd4ef758 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4efbe8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x195dd4ef938 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x195dd4ef9b0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4efa30 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x195dd4efaa8 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4efdb8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x195dd4efcd8 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x195dd4eafd0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x195dd4efe90 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x195dd4eff08 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4eb190 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x195dd4eb0b0 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x195dd4eb320 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x195dd4eb568 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd4eb3f0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x195dd4eb468 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd4eb7c0 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd4eb648 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x195dd4eb6c0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd4eba18 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd4eb8a0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x195dd4eb918 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd4ebdc8 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd4ebaf8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x195dd4ebb70 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x195dd4ebbe8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4f0140 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd4ebeb0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x195dd4ebf28 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x195dd4f0020 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4f0438 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd4f0228 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x195dd4f02a0 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x195dd4f0318 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4f0730 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd4f0518 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x195dd4f0598 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x195dd4f0610 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd4f0a28 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd4f0810 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x195dd4f0890 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x195dd4f0908 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd4f0d20 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd4f0b08 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x195dd4f0b88 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x195dd4f0c00 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd4e9110 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd4f0e00 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x195dd4f0e80 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x195dd4f0ef8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x195dd4f0f70 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4e94a8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd4e91f8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x195dd4e9278 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x195dd4e92f0 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x195dd4e9368 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4e9840 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd4e9590 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x195dd4e9610 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x195dd4e9688 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x195dd4e9700 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4e9cd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd4e99f0 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x195dd4e9a70 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x195dd4e9ae8 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x195dd4e9d90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd4f3360 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd4e9ed8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x195dd4f3050 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4f30d0 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x195dd4f3148 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd4f3700 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd4f3450 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x195dd4f34c8 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4f3548 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x195dd4f35c0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd4f3c50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd4f38f0 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x195dd4f3970 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x195dd4f39e8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x195dd4f3a60 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x195dd4f3d10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd4f72c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd4f3e58 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x195dd4f3ed0 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4f3f50 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x195dd4f3fc8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x195dd4f7090 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4f7708 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd4f73c0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x195dd4f7438 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4f74b8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x195dd4f7530 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x195dd4f75a8 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4f7978 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd4f7800 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x195dd4f7878 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd4f7bd0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd4f7a58 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x195dd4f7ad0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd4f7ec0 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd4f7cb0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x195dd4f7d28 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x195dd4f7da0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4f61b0 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd4f7fa8 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x195dd4f8020 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x195dd4f6090 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4f6608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd4f6358 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x195dd4f63d0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4f6450 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x195dd4f64c8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x195dd4f66c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd4f6ac0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd4f6810 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x195dd4f6888 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4f6908 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x195dd4f6980 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd4f4060 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd4f6bb0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x195dd4f6c28 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4f6ca0 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4f6d20 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x195dd4f6d98 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd4f45a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd4f4258 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x195dd4f42d0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4f4350 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x195dd4f43c8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x195dd4f4440 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x195dd4f4668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd4f4ae8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd4f47b8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x195dd4f4830 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4f48b0 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x195dd4f4928 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x195dd4f49a0 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4f50d0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd4f4be0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x195dd4f4c58 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4f4cd0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4f4d50 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x195dd4f4dc8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x195dd4f4e40 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4f5490 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x195dd4f51c8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x195dd4f5240 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x195dd4f52c0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x195dd4f5700 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x195dd4f5590 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x195dd4f5918 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x195dd4f5bf8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x195dd4f59e0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x195dd4f5a58 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x195dd4f5e40 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x195dd4f5cd0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x195dd4f1030 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x195dd4f5f10 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x195dd4f11b8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x195dd4f13f0 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x195dd4f1280 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x195dd4f12f8 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x195dd4f15a0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x195dd4f14c8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x195dd4f1848 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x195dd4f1670 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x195dd4f16e8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x195dd4f1bf0 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x195dd4f1920 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x195dd4f19a0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x195dd4f1a18 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x195dd4f1ef0 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x195dd4f1cd0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x195dd4f1d48 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x195dd4f9268 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x195dd4f1fc8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x195dd4f90c0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x195dd4f9570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x195dd4f9400 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x195dd4f9618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd4f98d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x195dd4f9758 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x195dd4f9be0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x195dd4f99a8 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x195dd4f9a20 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x195dd4f9e30 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x195dd4f9cb8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x195dd4f9d30 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x195dd4f2040 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x195dd4f9f08 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x195dd4f21f0 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x195dd4f2110 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x195dd4f23a0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x195dd4f22c0 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x195dd4f2738 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x195dd4f2470 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x195dd4f24e8 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd4f2560 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4f2a28 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x195dd4f2818 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x195dd4f2890 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd4f2908 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4f2d18 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x195dd4f2b08 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x195dd4f2b80 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd4f2bf8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4fb0d0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x195dd4f2df8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x195dd4f2e70 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd4f2ee8 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4fb3d0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x195dd4fb1b0 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd4fb228 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4fb620 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x195dd4fb4a8 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd4fb520 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4fb870 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x195dd4fb6f8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd4fb770 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4fbac0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x195dd4fb948 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd4fb9c0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4fbe78 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x195dd4fbb98 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x195dd4fbc10 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x195dd4fbc88 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x195dd4fa2d0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x195dd4fbf58 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x195dd4fbfd0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4fc048 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd4fa0c0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4fa688 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x195dd4fa3b8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x195dd4fa430 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd4fa4a8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4fa978 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x195dd4fa768 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x195dd4fa7e0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd4fa858 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4fac68 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x195dd4faa58 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x195dd4faad0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x195dd4fab48 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x195dd4faff0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x195dd4fad48 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x195dd4fadc0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4fae38 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd4faeb0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4fc490 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x195dd4fc108 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x195dd4fc180 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4fc1f8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x195dd4fc270 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x195dd4fc998 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x195dd4fc578 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x195dd4fc5f0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4fc668 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4fc6e0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd4fc758 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd4fcd58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x195dd4fcb48 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x195dd4fcbc0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd4fcc38 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x195dd4fce10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd5041b0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x195dd4fd010 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x195dd503f80 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd503ff8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x195dd504070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x195dd504270 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd504528 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x195dd5043b0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x195dd504428 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x195dd5046e0 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x195dd504600 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x195dd5049c0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x195dd5047b0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x195dd504828 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd5048a0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd504c18 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x195dd504aa0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd504b18 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd504f90 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x195dd504cf0 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x195dd504d68 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x195dd504de0 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x195dd505318 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x195dd505070 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x195dd5050e8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd505160 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd5051d8 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd5054e0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x195dd505400 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x195dd505728 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x195dd5055b0 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd505628 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd505a30 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd505800 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd505878 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd505c80 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd505b08 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd505b80 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd505ed0 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd505d58 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd505dd0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd502258 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd501f88 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x195dd502000 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x195dd502078 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd502548 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd502338 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x195dd5023b0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x195dd502428 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd502838 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd502628 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x195dd5026a0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x195dd502718 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd502bf8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd502918 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x195dd502990 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd502a08 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd502f70 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd502cd8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x195dd502d50 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd502dc8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd503260 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd503050 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x195dd5030c8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd503140 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd5036b0 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd503340 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x195dd5033b8 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x195dd503430 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x195dd5034a8 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd503a40 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd503798 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x195dd503810 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x195dd503888 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x195dd503900 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd503dd0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd503b28 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x195dd503ba0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x195dd503c18 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x195dd503c90 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd501260 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd503eb8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x195dd500f50 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd500fc8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd501040 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd5015f0 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd501348 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x195dd5013c0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd501438 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd5014b0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd501980 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd5016d8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x195dd501750 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd5017c8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd501840 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd501e88 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd501a68 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x195dd501ae0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd501b58 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x195dd501bd0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x195dd501c48 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd506308 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd505fc8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x195dd506040 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd5060b8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x195dd506130 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x195dd5061a8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd506738 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd5063f8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x195dd506470 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd5064e8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x195dd506560 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x195dd5065d8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd5069a0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd506828 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd5068a0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd506bf0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd506a78 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd506af0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd506ed8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd506cc8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x195dd506d40 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x195dd506db8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd507348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd5070a0 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x195dd507118 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd507190 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x195dd507208 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x195dd507408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd507978 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd507550 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x195dd5075c8 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd507640 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd5076b8 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd507730 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd507eb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd507b70 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x195dd507be8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd507c60 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x195dd507cd8 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x195dd507d50 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x195dd4fff40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd500550 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd500088 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x195dd500100 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd500178 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd5001f0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x195dd500268 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x195dd5002e0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd500a50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x195dd500818 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x195dd500890 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x195dd500b00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x195dd500c18 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x195dd50d278 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x195dd500ed0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x195dd50d020 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x195dd50d098 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x195dd50d330 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x195dd50d448 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x195dd50d9e8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd50d708 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x195dd50d780 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x195dd50d7f8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x195dd50daa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x195dd50dbc0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x195dd5091e0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd50de80 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x195dd50def8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x195dd50df70 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x195dd508fd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x195dd5092a0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x195dd5093c0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x195dd5096c8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x195dd5094e8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x195dd509560 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd5095d8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x195dd50b290 <line:37:1, line:44:1>
|   |-DeclStmt 0x195dd509810 <line:38:5, col:21>
|   | `-VarDecl 0x195dd5097a8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x195dd5098a8 <line:39:5, col:13>
|   | `-VarDecl 0x195dd509840 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x195dd509c00 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x195dd509be8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x195dd509b00 <col:34> '<builtin fn type>' Function 0x195dd509998 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x195dd509b38 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x195dd5097a8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x195dd509b70 <col:29> 'const wchar_t *' lvalue ParmVar 0x195dd5095d8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x195dd509ec0 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x195dd509c30 <col:5> 'int' lvalue Var 0x195dd509840 '_Ret' 'int'
|   | `-CallExpr 0x195dd509e00 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x195dd509de8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x195dd509c68 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x195dd501e88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x195dd509e48 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x195dd509c88 <col:27> 'wchar_t *' lvalue ParmVar 0x195dd5094e8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x195dd509e60 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x195dd509ca8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x195dd509560 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x195dd509e78 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x195dd509cc8 <col:44> 'const wchar_t *' lvalue ParmVar 0x195dd5095d8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x195dd509e90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x195dd509d50 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x195dd509d28 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x195dd509ce8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x195dd509ea8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x195dd509d70 <col:59> 'va_list':'char *' lvalue Var 0x195dd5097a8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x195dd50b220 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x195dd50b208 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x195dd50b158 <col:34> '<builtin fn type>' Function 0x195dd50aff0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x195dd50b190 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x195dd5097a8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x195dd50b280 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x195dd50b268 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x195dd50b248 <col:12> 'int' lvalue Var 0x195dd509840 '_Ret' 'int'
|-FunctionDecl 0x195dd509998 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x195dd509a38 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x195dd509aa8 <col:34> Implicit
|-FunctionDecl 0x195dd50aff0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x195dd50b090 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x195dd50b100 <col:34> Implicit
|-FunctionDecl 0x195dd50b588 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x195dd50b2e0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x195dd50b358 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd50b3d0 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x195dd50b448 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x195dd50b870 <line:50:1, line:52:1>
|   `-ReturnStmt 0x195dd50b860 <line:51:5, col:62>
|     `-CallExpr 0x195dd50b7a0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x195dd50b788 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x195dd50b660 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x195dd501e88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x195dd50b7e8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x195dd50b680 <col:27> 'wchar_t *' lvalue ParmVar 0x195dd50b2e0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x195dd50b800 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x195dd50b6a0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x195dd50b358 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x195dd50b818 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x195dd50b6c0 <col:44> 'const wchar_t *' lvalue ParmVar 0x195dd50b3d0 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x195dd50b830 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x195dd50b748 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x195dd50b720 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x195dd50b6e0 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x195dd50b848 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x195dd50b768 <col:59> 'va_list':'char *' lvalue ParmVar 0x195dd50b448 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x195dd50bb10 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x195dd50b898 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x195dd50b910 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd50b988 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x195dd50ba00 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x195dd50e0c8 <line:61:1, line:68:1>
|   |-DeclStmt 0x195dd50bc60 <line:62:5, col:21>
|   | `-VarDecl 0x195dd50bbf8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x195dd50bcf8 <line:63:5, col:13>
|   | `-VarDecl 0x195dd50bc90 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x195dd50bda0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x195dd50bd88 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x195dd50bd10 <col:34> '<builtin fn type>' Function 0x195dd509998 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x195dd50bd30 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x195dd50bbf8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x195dd50bd68 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x195dd50ba00 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x195dd50bfa0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x195dd50bdd0 <col:5> 'int' lvalue Var 0x195dd50bc90 '_Ret' 'int'
|   | `-CallExpr 0x195dd50bee0 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x195dd50bec8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x195dd50be08 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x195dd501e88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x195dd50bf28 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x195dd50be28 <col:27> 'wchar_t *' lvalue ParmVar 0x195dd50b898 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x195dd50bf40 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x195dd50be48 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x195dd50b910 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x195dd50bf58 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x195dd50be68 <col:44> 'const wchar_t *' lvalue ParmVar 0x195dd50b988 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x195dd50bf70 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x195dd50be88 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x195dd50ba00 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x195dd50bf88 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x195dd50bea8 <col:64> 'va_list':'char *' lvalue Var 0x195dd50bbf8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x195dd50e058 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x195dd50e040 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x195dd50bfc0 <col:34> '<builtin fn type>' Function 0x195dd50aff0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x195dd50e020 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x195dd50bbf8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x195dd50e0b8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x195dd50e0a0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x195dd50e080 <col:12> 'int' lvalue Var 0x195dd50bc90 '_Ret' 'int'
|-FunctionDecl 0x195dd50e458 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x195dd50e118 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x195dd50e190 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd50e208 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x195dd50e280 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x195dd50e2f8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x195dd50e6e0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x195dd50e6d0 <line:75:5, col:67>
|     `-CallExpr 0x195dd50e610 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x195dd50e5f8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x195dd50e538 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x195dd501e88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x195dd50e658 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x195dd50e558 <col:27> 'wchar_t *' lvalue ParmVar 0x195dd50e118 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x195dd50e670 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x195dd50e578 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x195dd50e190 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x195dd50e688 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x195dd50e598 <col:44> 'const wchar_t *' lvalue ParmVar 0x195dd50e208 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x195dd50e6a0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x195dd50e5b8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x195dd50e280 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x195dd50e6b8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x195dd50e5d8 <col:64> 'va_list':'char *' lvalue ParmVar 0x195dd50e2f8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x195dd50e928 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x195dd50e708 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x195dd50e780 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x195dd50eb78 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x195dd50ea00 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd50ea78 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd50ee60 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x195dd50ec50 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x195dd50ecc8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x195dd50ed40 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x195dd508138 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x195dd507fc0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x195dd508038 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x195dd5081e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd5085f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd5083e8 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x195dd508460 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x195dd5084d8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x195dd5086b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd508968 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x195dd5087f0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x195dd508868 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x195dd508c50 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd508a40 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x195dd508ab8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd508b30 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd50c070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x195dd508df0 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x195dd508e68 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x195dd50c120 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd50c5f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd50c320 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x195dd50c398 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x195dd50c410 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x195dd50c6b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd50c968 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x195dd50c7f0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x195dd50c868 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x195dd50cc50 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd50ca40 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x195dd50cab8 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd50cb30 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd511138 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x195dd50cdf0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x195dd50ce68 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd50cee0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x195dd5111f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd511770 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd5113f0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x195dd511468 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd5114e0 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x195dd511558 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x195dd511830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd511b80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x195dd511970 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x195dd5119e8 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x195dd511a60 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x195dd511f08 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd511c60 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x195dd511cd8 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd511d50 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd511dc8 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd5101f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x195dd510110 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x195dd510298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd510610 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd510498 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x195dd510510 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x195dd5106c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd5108e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x195dd510800 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x195dd510b28 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x195dd5109b0 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd510a28 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd510e28 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x195dd510c08 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x195dd510c80 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x195dd513218 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x195dd510fc0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x195dd513070 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x195dd5132c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd5136d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x195dd513410 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x195dd513488 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x195dd513500 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x195dd513b30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x195dd513870 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x195dd5138e8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x195dd513960 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x195dd513be8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd5120a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x195dd513d30 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x195dd513da8 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x195dd513e20 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x195dd513e98 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x195dd512300 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x195dd512190 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x195dd512540 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x195dd5123d0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x195dd512448 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x195dd5126f8 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x195dd512618 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x195dd5129e8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x195dd5127c8 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x195dd512840 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x195dd512c58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x195dd512b80 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x195dd512d00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd512f18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x195dd512e40 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x195dd515188 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x195dd512fe8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x195dd515090 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x195dd5153d0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x195dd515260 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x195dd5152d8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x195dd515580 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x195dd5154a8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x195dd515728 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x195dd515650 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x195dd5158d8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x195dd5157f8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x195dd515a88 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x195dd5159a8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x195dd515e00 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x195dd515b60 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x195dd515bd8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd515c50 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x195dd515cc8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x195dd50f200 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x195dd515ef0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x195dd515f68 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd515fe0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd50f030 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x195dd50f0a8 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x195dd50f510 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x195dd50f2f0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x195dd50f370 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x195dd50f3f0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x195dd50f6d0 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x195dd50f5f0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x195dd50f9c0 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x195dd50f7a0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x195dd50f820 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x195dd50f8a0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x195dd50fb80 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x195dd50faa0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x195dd50fef8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x195dd50fc58 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x195dd50fcd0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd50fd48 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x195dd50fdc0 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x195dd519248 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x195dd5190d0 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x195dd519148 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x195dd519580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x195dd519400 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x195dd519480 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x195dd519630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x195dd5198e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x195dd519988 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x195dd519cc8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x195dd519b50 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x195dd519bd0 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x195dd519d78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x195dd5170b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x195dd517150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x195dd5173f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x195dd517310 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x195dd517498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x195dd517718 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x195dd5177b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x195dd517a60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x195dd517980 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x195dd517b08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x195dd517de8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x195dd517d08 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x195dd517e90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x195dd518238 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x195dd5180c0 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x195dd518138 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x195dd5182e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x195dd5185a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x195dd518648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-TypedefDecl 0x195dd518798 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:89:1, col:14> col:14 referenced clock_t 'long'
| `-BuiltinType 0x195db8e40b0 'long'
|-RecordDecl 0x195dd5187f0 <line:113:1, line:123:9> line:113:8 struct tm definition
| |-MaxFieldAlignmentAttr 0x195dd5188b0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x195dd518928 <line:114:9, col:13> col:13 referenced tm_sec 'int'
| |-FieldDecl 0x195dd518998 <line:115:9, col:13> col:13 referenced tm_min 'int'
| |-FieldDecl 0x195dd518a08 <line:116:9, col:13> col:13 referenced tm_hour 'int'
| |-FieldDecl 0x195dd518a78 <line:117:9, col:13> col:13 referenced tm_mday 'int'
| |-FieldDecl 0x195dd518ae8 <line:118:9, col:13> col:13 referenced tm_mon 'int'
| |-FieldDecl 0x195dd518b58 <line:119:9, col:13> col:13 referenced tm_year 'int'
| |-FieldDecl 0x195dd518bc8 <line:120:9, col:13> col:13 tm_wday 'int'
| |-FieldDecl 0x195dd518c38 <line:121:9, col:13> col:13 tm_yday 'int'
| `-FieldDecl 0x195dd518ca8 <line:122:9, col:13> col:13 tm_isdst 'int'
|-FunctionDecl 0x195dd518ef0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:147:99> col:84 __daylight 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x195dd518f90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_daylight instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd51b310 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:151:98> col:84 __dstbias 'long *(void) __attribute__((cdecl))':'long *(void)'
| `-DeprecatedAttr 0x195dd51b3b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_dstbias instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd51b670 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:155:100> col:85 __timezone 'long *(void) __attribute__((cdecl))':'long *(void)'
| `-DeprecatedAttr 0x195dd51b710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_timezone instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd51ba30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:159:112> col:99 __tzname 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x195dd51bad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_tzname instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd51bd90 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:162:9, col:60> col:25 _get_daylight 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x195dd51bc18 <col:45, col:51> col:51 _Daylight 'int *'
|-FunctionDecl 0x195dd51bfe0 <line:163:9, col:73> col:25 _get_dstbias 'errno_t (long *) __attribute__((cdecl))':'errno_t (long *)'
| `-ParmVarDecl 0x195dd51be68 <col:44, col:51> col:51 _Daylight_savings_bias 'long *'
|-FunctionDecl 0x195dd51d1e8 <line:164:9, col:61> col:25 _get_timezone 'errno_t (long *) __attribute__((cdecl))':'errno_t (long *)'
| `-ParmVarDecl 0x195dd51d110 <col:45, col:52> col:52 _Timezone 'long *'
|-FunctionDecl 0x195dd51d698 <line:165:9, col:150> col:25 _get_tzname 'errno_t (size_t *, char *, size_t, int) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, int)'
| |-ParmVarDecl 0x195dd51d318 <col:43, col:51> col:51 _ReturnValue 'size_t *'
| |-ParmVarDecl 0x195dd51d398 <col:94, col:100> col:100 _Buffer 'char *'
| |-ParmVarDecl 0x195dd51d410 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x195dd51d490 <col:140, col:144> col:144 _Index 'int'
|-FunctionDecl 0x195dd51da58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:174:108> col:74 asctime 'char *(const struct tm *) __attribute__((cdecl))':'char *(const struct tm *)'
| |-ParmVarDecl 0x195dd51d8e0 <col:87, col:105> col:105 _Tm 'const struct tm *'
| `-DeprecatedAttr 0x195dd51db00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using asctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd51df20 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:176:28, col:170> col:44 asctime_s 'errno_t (char *, size_t, const struct tm *) __attribute__((cdecl))':'errno_t (char *, size_t, const struct tm *)'
| |-ParmVarDecl 0x195dd51dc48 <col:106, col:112> col:112 _Buf 'char *'
| |-ParmVarDecl 0x195dd51dcc0 <col:123, col:130> col:130 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x195dd51dd50 <col:149, col:167> col:167 _Tm 'const struct tm *'
|-FunctionDecl 0x195dd5281e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:180:98> col:60 _ctime32 'char *(const __time32_t *) __attribute__((cdecl))':'char *(const __time32_t *)'
| |-ParmVarDecl 0x195dd528068 <col:74, col:93> col:93 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x195dd528290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ctime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd5286a0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:181:9, col:154> col:25 _ctime32_s 'errno_t (char *, size_t, const __time32_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time32_t *)'
| |-ParmVarDecl 0x195dd5283d8 <col:88, col:94> col:94 _Buf 'char *'
| |-ParmVarDecl 0x195dd528450 <col:105, col:112> col:112 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x195dd5284c8 <col:131, col:149> col:149 _Time 'const __time32_t *'
|-FunctionDecl 0x195dd5288e8 <line:184:24, col:50> col:40 clock 'clock_t (void) __attribute__((cdecl))':'clock_t (void)'
|-FunctionDecl 0x195dd528bd0 <line:185:9, col:82> col:24 _difftime32 'double (__time32_t, __time32_t) __attribute__((cdecl))':'double (__time32_t, __time32_t)'
| |-ParmVarDecl 0x195dd5289b0 <col:41, col:52> col:52 _Time1 '__time32_t':'long'
| `-ParmVarDecl 0x195dd528a28 <col:65, col:76> col:76 _Time2 '__time32_t':'long'
|-FunctionDecl 0x195dd528f58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:187:120> col:81 _gmtime32 'struct tm *(const __time32_t *) __attribute__((cdecl))':'struct tm *(const __time32_t *)'
| |-ParmVarDecl 0x195dd528d68 <col:96, col:115> col:115 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x195dd52c070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gmtime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd52c3e8 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:188:28, col:106> col:44 _gmtime32_s 'errno_t (struct tm *, const __time32_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time32_t *)'
| |-ParmVarDecl 0x195dd52c1c8 <col:61, col:72> col:72 _Tm 'struct tm *'
| `-ParmVarDecl 0x195dd52c240 <col:82, col:101> col:101 _Time 'const __time32_t *'
|-FunctionDecl 0x195dd52c678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:190:111> col:69 _localtime32 'struct tm *(const __time32_t *) __attribute__((cdecl))':'struct tm *(const __time32_t *)'
| |-ParmVarDecl 0x195dd52c588 <col:87, col:106> col:106 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x195dd52c720 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _localtime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd52c9f0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:191:9, col:91> col:25 _localtime32_s 'errno_t (struct tm *, const __time32_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time32_t *)'
| |-ParmVarDecl 0x195dd52c880 <col:46, col:57> col:57 _Tm 'struct tm *'
| `-ParmVarDecl 0x195dd52c8f8 <col:67, col:86> col:86 _Time 'const __time32_t *'
|-FunctionDecl 0x195dd52ce58 <line:193:9, col:179> col:24 strftime 'size_t (char *, size_t, const char *, const struct tm *) __attribute__((cdecl))':'size_t (char *, size_t, const char *, const struct tm *)'
| |-ParmVarDecl 0x195dd52cad0 <col:62, col:69> col:69 _Buf 'char *'
| |-ParmVarDecl 0x195dd52cb48 <col:80, col:87> col:87 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd52cbc8 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x195dd52cc58 <col:158, col:176> col:176 _Tm 'const struct tm *'
|-FunctionDecl 0x195dd52b3a0 <line:194:9, col:199> col:24 _strftime_l 'size_t (char *, size_t, const char *, const struct tm *, _locale_t) __attribute__((cdecl))':'size_t (char *, size_t, const char *, const struct tm *, _locale_t)'
| |-ParmVarDecl 0x195dd52cf48 <col:59, col:65> col:65 _Buf 'char *'
| |-ParmVarDecl 0x195dd52cfc0 <col:76, col:83> col:83 _Max_size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd52b060 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x195dd52b0f0 <col:151, col:168> col:168 _Tm 'const struct tm *'
| `-ParmVarDecl 0x195dd52b168 <col:182, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd52b678 <line:196:28, col:142> col:44 _strdate_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x195dd52b498 <col:106, col:112> col:112 _Buf 'char *'
| `-ParmVarDecl 0x195dd52b510 <col:123, col:130> col:130 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x195dd52b8f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:198:79 _strdate 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x195dd52b818 <col:108, col:114> col:114 _Buffer 'char *'
| `-DeprecatedAttr 0x195dd52b9a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strdate_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd52bc58 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:200:28, col:143> col:44 _strtime_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x195dd52bae8 <col:106, col:112> col:112 _Buf 'char *'
| `-ParmVarDecl 0x195dd52bb60 <col:124, col:131> col:131 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x195dd52bed8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:202:79 _strtime 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x195dd52bdf8 <col:108, col:114> col:114 _Buffer 'char *'
| `-DeprecatedAttr 0x195dd52bf80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd52a2f0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:204:9, col:64> col:28 _time32 '__time32_t (__time32_t *) __attribute__((cdecl))':'__time32_t (__time32_t *)'
| `-ParmVarDecl 0x195dd52a178 <col:46, col:59> col:59 _Time '__time32_t *'
|-FunctionDecl 0x195dd52a550 <line:205:9, col:61> col:28 _mktime32 '__time32_t (struct tm *) __attribute__((cdecl))':'__time32_t (struct tm *)'
| `-ParmVarDecl 0x195dd52a3d8 <col:46, col:58> col:58 _Tm 'struct tm *'
|-FunctionDecl 0x195dd52a710 <line:206:9, col:63> col:28 _mkgmtime32 '__time32_t (struct tm *) __attribute__((cdecl))':'__time32_t (struct tm *)'
| `-ParmVarDecl 0x195dd52a638 <col:48, col:60> col:60 _Tm 'struct tm *'
|-FunctionDecl 0x195dd52a898 <line:210:9, col:33> col:22 _tzset 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x195dd52ab80 <line:214:24, col:97> col:39 used _difftime64 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)'
| |-ParmVarDecl 0x195dd52a960 <col:56, col:67> col:67 _Time1 '__time64_t':'long long'
| `-ParmVarDecl 0x195dd52a9d8 <col:80, col:91> col:91 _Time2 '__time64_t':'long long'
|-FunctionDecl 0x195dd52aec8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:215:98> col:60 used _ctime64 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)'
| |-ParmVarDecl 0x195dd52ad48 <col:74, col:93> col:93 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x195dd52af70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ctime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd529400 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:216:9, col:132> col:25 used _ctime64_s 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)'
| |-ParmVarDecl 0x195dd529140 <col:65, col:71> col:71 _Buf 'char *'
| |-ParmVarDecl 0x195dd5291b8 <col:82, col:89> col:89 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x195dd529230 <col:108, col:127> col:127 _Time 'const __time64_t *'
|-FunctionDecl 0x195dd529728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:219:105> col:66 used _gmtime64 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |-ParmVarDecl 0x195dd5295a0 <col:81, col:100> col:100 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x195dd5297d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gmtime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd529b48 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:220:9, col:87> col:25 used _gmtime64_s 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
| |-ParmVarDecl 0x195dd529928 <col:43, col:54> col:54 _Tm 'struct tm *'
| `-ParmVarDecl 0x195dd5299a0 <col:64, col:82> col:82 _Time 'const __time64_t *'
|-FunctionDecl 0x195dd529dd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:222:111> col:69 used _localtime64 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |-ParmVarDecl 0x195dd529ce8 <col:87, col:106> col:106 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x195dd529e80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _localtime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd52e200 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:223:9, col:90> col:25 used _localtime64_s 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
| |-ParmVarDecl 0x195dd52e090 <col:46, col:57> col:57 _Tm 'struct tm *'
| `-ParmVarDecl 0x195dd52e108 <col:67, col:85> col:85 _Time 'const __time64_t *'
|-FunctionDecl 0x195dd52e460 <line:225:9, col:61> col:28 used _mktime64 '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
| `-ParmVarDecl 0x195dd52e2f0 <col:46, col:58> col:58 _Tm 'struct tm *'
|-FunctionDecl 0x195dd52e620 <line:226:9, col:63> col:28 used _mkgmtime64 '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
| `-ParmVarDecl 0x195dd52e548 <col:48, col:60> col:60 _Tm 'struct tm *'
|-FunctionDecl 0x195dd52e890 <line:227:9, col:64> col:28 used _time64 '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)'
| `-ParmVarDecl 0x195dd52e718 <col:46, col:59> col:59 _Time '__time64_t *'
|-FunctionDecl 0x195dd52ebf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:231:79> col:46 _getsystime 'unsigned int (struct tm *) __attribute__((cdecl))':'unsigned int (struct tm *)'
| |-ParmVarDecl 0x195dd52ea78 <col:64, col:76> col:76 _Tm 'struct tm *'
| `-DeprecatedAttr 0x195dd52eca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using GetLocalTime instead. See online help for details." ""
|-FunctionDecl 0x195dd527090 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:232:98> col:46 _setsystime 'unsigned int (struct tm *, unsigned int) __attribute__((cdecl))':'unsigned int (struct tm *, unsigned int)'
| |-ParmVarDecl 0x195dd52eec8 <col:63, col:75> col:75 _Tm 'struct tm *'
| |-ParmVarDecl 0x195dd52ef48 <col:80, col:89> col:89 _MilliSec 'unsigned int'
| `-DeprecatedAttr 0x195dd527140 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetLocalTime instead. See online help for details." ""
|-FunctionDecl 0x195dd5274d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:245:100> col:64 _wasctime 'wchar_t *(const struct tm *) __attribute__((cdecl))':'wchar_t *(const struct tm *)'
| |-ParmVarDecl 0x195dd527360 <col:79, col:97> col:97 _Tm 'const struct tm *'
| `-DeprecatedAttr 0x195dd527578 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wasctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd527990 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:246:9, col:156> col:25 _wasctime_s 'errno_t (wchar_t *, size_t, const struct tm *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const struct tm *)'
| |-ParmVarDecl 0x195dd5276b8 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x195dd527730 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x195dd5277c0 <col:135, col:153> col:153 _Tm 'const struct tm *'
|-FunctionDecl 0x195dd527ca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:249:102> col:64 _wctime32 'wchar_t *(const __time32_t *) __attribute__((cdecl))':'wchar_t *(const __time32_t *)'
| |-ParmVarDecl 0x195dd527b30 <col:79, col:97> col:97 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x195dd527d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd531200 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:250:9, col:159> col:25 _wctime32_s 'errno_t (wchar_t *, size_t, const __time32_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time32_t *)'
| |-ParmVarDecl 0x195dd527e88 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x195dd527f00 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x195dd527f78 <col:135, col:154> col:154 _Time 'const __time32_t *'
|-FunctionDecl 0x195dd531668 <line:253:9, col:186> col:24 wcsftime 'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *) __attribute__((cdecl))':'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *)'
| |-ParmVarDecl 0x195dd5312e0 <col:62, col:72> col:72 _Buf 'wchar_t *'
| |-ParmVarDecl 0x195dd531358 <col:83, col:90> col:90 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd5313d0 <col:134, col:150> col:150 _Format 'const wchar_t *'
| `-ParmVarDecl 0x195dd531460 <col:165, col:183> col:183 _Tm 'const struct tm *'
|-FunctionDecl 0x195dd531b80 <line:254:9, col:214> col:24 _wcsftime_l 'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *, _locale_t)'
| |-ParmVarDecl 0x195dd531750 <col:65, col:75> col:75 _Buf 'wchar_t *'
| |-ParmVarDecl 0x195dd5317c8 <col:86, col:93> col:93 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd531840 <col:137, col:152> col:152 _Format 'const wchar_t *'
| |-ParmVarDecl 0x195dd5318d0 <col:166, col:183> col:183 _Tm 'const struct tm *'
| `-ParmVarDecl 0x195dd531948 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195dd531de0 <line:256:9, col:128> col:25 _wstrdate_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x195dd531c70 <col:88, col:98> col:98 _Buf 'wchar_t *'
| `-ParmVarDecl 0x195dd531ce8 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x195dd5300b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:258:82 _wstrdate 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x195dd531f78 <col:112, col:121> col:121 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x195dd530158 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wstrdate_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd530408 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:260:9, col:128> col:25 _wstrtime_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x195dd530298 <col:88, col:98> col:98 _Buf 'wchar_t *'
| `-ParmVarDecl 0x195dd530310 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x195dd530678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:262:82 _wstrtime 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x195dd5305a0 <col:112, col:121> col:121 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x195dd530720 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wstrtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd530a90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:264:103> col:64 used _wctime64 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)'
| |-ParmVarDecl 0x195dd530920 <col:79, col:98> col:98 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x195dd530b38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd530f40 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:265:9, col:158> col:25 used _wctime64_s 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)'
| |-ParmVarDecl 0x195dd530c78 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x195dd530cf0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x195dd530d68 <col:135, col:153> col:153 _Time 'const __time64_t *'
|-FunctionDecl 0x195dd535240 <D:\Microsoft Visual Studio 12.0\VC\include\wtime.inl:44:1, line:50:1> line:44:37 _wctime 'wchar_t *(const time_t *) __attribute__((cdecl))':'wchar_t *(const time_t *)' static inline
| |-ParmVarDecl 0x195dd535100 <col:45, col:60> col:60 used _Time 'const time_t *'
| `-CompoundStmt 0x195dd535400 <line:45:1, line:50:1>
|   `-ReturnStmt 0x195dd5353f0 <line:48:5, col:27>
|     `-CallExpr 0x195dd5353b0 <col:12, col:27> 'wchar_t *'
|       |-ImplicitCastExpr 0x195dd535398 <col:12> 'wchar_t *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x195dd535300 <col:12> 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)' Function 0x195dd530a90 '_wctime64' 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)'
|       `-ImplicitCastExpr 0x195dd5353d8 <col:22> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x195dd535320 <col:22> 'const time_t *' lvalue ParmVar 0x195dd535100 '_Time' 'const time_t *'
|-FunctionDecl 0x195dd5356b0 <line:52:1, line:55:1> line:52:35 _wctime_s 'errno_t (wchar_t *, size_t, const time_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const time_t *)' static inline
| |-ParmVarDecl 0x195dd535428 <col:97, col:106> col:106 used _Buffer 'wchar_t *'
| |-ParmVarDecl 0x195dd5354a0 <col:115, col:122> col:122 used _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd535518 <col:136, col:151> col:151 used _Time 'const time_t *'
| `-CompoundStmt 0x195dd535900 <line:53:1, line:55:1>
|   `-ReturnStmt 0x195dd5358f0 <line:54:5, col:52>
|     `-CallExpr 0x195dd535870 <col:12, col:52> 'errno_t':'int'
|       |-ImplicitCastExpr 0x195dd535858 <col:12> 'errno_t (*)(wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x195dd535780 <col:12> 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)' Function 0x195dd530f40 '_wctime64_s' 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)'
|       |-ImplicitCastExpr 0x195dd5358a8 <col:24> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x195dd5357a0 <col:24> 'wchar_t *' lvalue ParmVar 0x195dd535428 '_Buffer' 'wchar_t *'
|       |-ImplicitCastExpr 0x195dd5358c0 <col:33> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x195dd5357c0 <col:33> 'size_t':'unsigned long long' lvalue ParmVar 0x195dd5354a0 '_SizeInWords' 'size_t':'unsigned long long'
|       `-ImplicitCastExpr 0x195dd5358d8 <col:47> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x195dd5357e0 <col:47> 'const time_t *' lvalue ParmVar 0x195dd535518 '_Time' 'const time_t *'
|-FunctionDecl 0x195dd535b10 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:82:1, line:85:1> line:82:34 difftime 'double (time_t, time_t) __attribute__((cdecl))':'double (time_t, time_t)' static inline
| |-ParmVarDecl 0x195dd535928 <col:43, col:50> col:50 used _Time1 'time_t':'long long'
| |-ParmVarDecl 0x195dd5359a0 <col:58, col:65> col:65 used _Time2 'time_t':'long long'
| `-CompoundStmt 0x195dd535d20 <line:83:1, line:85:1>
|   `-ReturnStmt 0x195dd535d10 <line:84:5, col:37>
|     `-CallExpr 0x195dd535cb0 <col:12, col:37> 'double'
|       |-ImplicitCastExpr 0x195dd535c98 <col:12> 'double (*)(__time64_t, __time64_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x195dd535bd8 <col:12> 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)' Function 0x195dd52ab80 '_difftime64' 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)'
|       |-ImplicitCastExpr 0x195dd535ce0 <col:24> 'time_t':'long long' <LValueToRValue>
|       | `-DeclRefExpr 0x195dd535bf8 <col:24> 'time_t':'long long' lvalue ParmVar 0x195dd535928 '_Time1' 'time_t':'long long'
|       `-ImplicitCastExpr 0x195dd535cf8 <col:31> 'time_t':'long long' <LValueToRValue>
|         `-DeclRefExpr 0x195dd535c18 <col:31> 'time_t':'long long' lvalue ParmVar 0x195dd5359a0 '_Time2' 'time_t':'long long'
|-FunctionDecl 0x195dd535f58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:92:1> line:86:67 ctime 'char *(const time_t *) __attribute__((cdecl))':'char *(const time_t *)' static inline
| |-ParmVarDecl 0x195dd535e08 <col:73, col:88> col:88 used _Time 'const time_t *'
| |-CompoundStmt 0x195dd533230 <line:87:1, line:92:1>
| | `-ReturnStmt 0x195dd533220 <line:90:5, col:26>
| |   `-CallExpr 0x195dd5331e0 <col:12, col:26> 'char *'
| |     |-ImplicitCastExpr 0x195dd5331c8 <col:12> 'char *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x195dd533128 <col:12> 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)' Function 0x195dd52aec8 '_ctime64' 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x195dd533208 <col:21> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x195dd533148 <col:21> 'const time_t *' lvalue ParmVar 0x195dd535e08 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x195dd536000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using ctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd5334e0 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:94:1, line:97:1> line:94:35 ctime_s 'errno_t (char *, size_t, const time_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const time_t *)' static inline
| |-ParmVarDecl 0x195dd533260 <col:43, col:49> col:49 used _Buffer 'char *'
| |-ParmVarDecl 0x195dd5332d8 <col:58, col:65> col:65 used _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x195dd533350 <col:79, col:94> col:94 used _Time 'const time_t *'
| `-CompoundStmt 0x195dd533730 <line:95:1, line:97:1>
|   `-ReturnStmt 0x195dd533720 <line:96:5, col:51>
|     `-CallExpr 0x195dd5336a0 <col:12, col:51> 'errno_t':'int'
|       |-ImplicitCastExpr 0x195dd533688 <col:12> 'errno_t (*)(char *, size_t, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x195dd5335b0 <col:12> 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)' Function 0x195dd529400 '_ctime64_s' 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)'
|       |-ImplicitCastExpr 0x195dd5336d8 <col:23> 'char *' <LValueToRValue>
|       | `-DeclRefExpr 0x195dd5335d0 <col:23> 'char *' lvalue ParmVar 0x195dd533260 '_Buffer' 'char *'
|       |-ImplicitCastExpr 0x195dd5336f0 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x195dd5335f0 <col:32> 'size_t':'unsigned long long' lvalue ParmVar 0x195dd5332d8 '_SizeInBytes' 'size_t':'unsigned long long'
|       `-ImplicitCastExpr 0x195dd533708 <col:46> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x195dd533610 <col:46> 'const time_t *' lvalue ParmVar 0x195dd533350 '_Time' 'const time_t *'
|-FunctionDecl 0x195dd533978 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:105:1> line:99:73 gmtime 'struct tm *(const time_t *) __attribute__((cdecl))':'struct tm *(const time_t *)' static inline
| |-ParmVarDecl 0x195dd533818 <col:80, col:95> col:95 used _Time 'const time_t *'
| |-CompoundStmt 0x195dd533c50 <line:100:1, line:105:1>
| | `-ReturnStmt 0x195dd533c40 <line:103:5, col:27>
| |   `-CallExpr 0x195dd533c00 <col:12, col:27> 'struct tm *'
| |     |-ImplicitCastExpr 0x195dd533be8 <col:12> 'struct tm *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x195dd533b50 <col:12> 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)' Function 0x195dd529728 '_gmtime64' 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x195dd533c28 <col:22> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x195dd533b70 <col:22> 'const time_t *' lvalue ParmVar 0x195dd533818 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x195dd533a20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gmtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd533e68 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:107:1, line:110:1> line:107:35 gmtime_s 'errno_t (struct tm *, const time_t *) __attribute__((cdecl))':'errno_t (struct tm *, const time_t *)' static inline
| |-ParmVarDecl 0x195dd533c90 <col:44, col:56> col:56 used _Tm 'struct tm *'
| |-ParmVarDecl 0x195dd533d08 <col:61, col:76> col:76 used _Time 'const time_t *'
| `-CompoundStmt 0x195dd534070 <line:108:1, line:110:1>
|   `-ReturnStmt 0x195dd534060 <line:109:5, col:34>
|     `-CallExpr 0x195dd534000 <col:12, col:34> 'errno_t':'int'
|       |-ImplicitCastExpr 0x195dd533fe8 <col:12> 'errno_t (*)(struct tm *, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x195dd533f30 <col:12> 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)' Function 0x195dd529b48 '_gmtime64_s' 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
|       |-ImplicitCastExpr 0x195dd534030 <col:24> 'struct tm *' <LValueToRValue>
|       | `-DeclRefExpr 0x195dd533f50 <col:24> 'struct tm *' lvalue ParmVar 0x195dd533c90 '_Tm' 'struct tm *'
|       `-ImplicitCastExpr 0x195dd534048 <col:29> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x195dd533f70 <col:29> 'const time_t *' lvalue ParmVar 0x195dd533d08 '_Time' 'const time_t *'
|-FunctionDecl 0x195dd5362d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:118:1> line:112:76 localtime 'struct tm *(const time_t *) __attribute__((cdecl))':'struct tm *(const time_t *)' static inline
| |-ParmVarDecl 0x195dd5361e0 <col:86, col:101> col:101 used _Time 'const time_t *'
| |-CompoundStmt 0x195dd536550 <line:113:1, line:118:1>
| | `-ReturnStmt 0x195dd536540 <line:116:5, col:30>
| |   `-CallExpr 0x195dd536500 <col:12, col:30> 'struct tm *'
| |     |-ImplicitCastExpr 0x195dd5364e8 <col:12> 'struct tm *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x195dd5364a8 <col:12> 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)' Function 0x195dd529dd8 '_localtime64' 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x195dd536528 <col:25> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x195dd5364c8 <col:25> 'const time_t *' lvalue ParmVar 0x195dd5361e0 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x195dd536378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using localtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd536700 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:119:1, line:122:1> line:119:35 localtime_s 'errno_t (struct tm *, const time_t *) __attribute__((cdecl))':'errno_t (struct tm *, const time_t *)' static inline
| |-ParmVarDecl 0x195dd536590 <col:47, col:59> col:59 used _Tm 'struct tm *'
| |-ParmVarDecl 0x195dd536608 <col:64, col:79> col:79 used _Time 'const time_t *'
| `-CompoundStmt 0x195dd5368b0 <line:120:1, line:122:1>
|   `-ReturnStmt 0x195dd5368a0 <line:121:5, col:37>
|     `-CallExpr 0x195dd536840 <col:12, col:37> 'errno_t':'int'
|       |-ImplicitCastExpr 0x195dd536828 <col:12> 'errno_t (*)(struct tm *, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x195dd5367c8 <col:12> 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)' Function 0x195dd52e200 '_localtime64_s' 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
|       |-ImplicitCastExpr 0x195dd536870 <col:27> 'struct tm *' <LValueToRValue>
|       | `-DeclRefExpr 0x195dd5367e8 <col:27> 'struct tm *' lvalue ParmVar 0x195dd536590 '_Tm' 'struct tm *'
|       `-ImplicitCastExpr 0x195dd536888 <col:32> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x195dd536808 <col:32> 'const time_t *' lvalue ParmVar 0x195dd536608 '_Time' 'const time_t *'
|-FunctionDecl 0x195dd536a30 <line:123:1, line:126:1> line:123:34 mktime 'time_t (struct tm *) __attribute__((cdecl))':'time_t (struct tm *)' static inline
| |-ParmVarDecl 0x195dd5368f0 <col:41, col:53> col:53 used _Tm 'struct tm *'
| `-CompoundStmt 0x195dd536bf0 <line:124:1, line:126:1>
|   `-ReturnStmt 0x195dd536be0 <line:125:5, col:25>
|     `-CallExpr 0x195dd536ba0 <col:12, col:25> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x195dd536b88 <col:12> '__time64_t (*)(struct tm *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x195dd536af0 <col:12> '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)' Function 0x195dd52e460 '_mktime64' '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
|       `-ImplicitCastExpr 0x195dd536bc8 <col:22> 'struct tm *' <LValueToRValue>
|         `-DeclRefExpr 0x195dd536b10 <col:22> 'struct tm *' lvalue ParmVar 0x195dd5368f0 '_Tm' 'struct tm *'
|-FunctionDecl 0x195dd536d08 <line:127:1, line:130:1> line:127:34 _mkgmtime 'time_t (struct tm *) __attribute__((cdecl))':'time_t (struct tm *)' static inline
| |-ParmVarDecl 0x195dd536c30 <col:44, col:56> col:56 used _Tm 'struct tm *'
| `-CompoundStmt 0x195dd536e70 <line:128:1, line:130:1>
|   `-ReturnStmt 0x195dd536e60 <line:129:5, col:27>
|     `-CallExpr 0x195dd536e20 <col:12, col:27> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x195dd536e08 <col:12> '__time64_t (*)(struct tm *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x195dd536dc8 <col:12> '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)' Function 0x195dd52e620 '_mkgmtime64' '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
|       `-ImplicitCastExpr 0x195dd536e48 <col:24> 'struct tm *' <LValueToRValue>
|         `-DeclRefExpr 0x195dd536de8 <col:24> 'struct tm *' lvalue ParmVar 0x195dd536c30 '_Tm' 'struct tm *'
|-FunctionDecl 0x195dd537010 <line:131:1, line:134:1> line:131:34 time 'time_t (time_t *) __attribute__((cdecl))':'time_t (time_t *)' static inline
| |-ParmVarDecl 0x195dd536ec8 <col:39, col:48> col:48 used _Time 'time_t *'
| `-CompoundStmt 0x195dd532190 <line:132:1, line:134:1>
|   `-ReturnStmt 0x195dd532180 <line:133:5, col:25>
|     `-CallExpr 0x195dd532140 <col:12, col:25> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x195dd532128 <col:12> '__time64_t (*)(__time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x195dd5370d0 <col:12> '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)' Function 0x195dd52e890 '_time64' '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)'
|       `-ImplicitCastExpr 0x195dd532168 <col:20> 'time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x195dd5370f0 <col:20> 'time_t *' lvalue ParmVar 0x195dd536ec8 '_Time' 'time_t *'
|-VarDecl 0x195dd532280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:291:67> col:67 daylight 'int' extern
| `-DeprecatedAttr 0x195dd5322e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_daylight instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x195dd5324f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:292:68> col:68 timezone 'long' extern
| `-DeprecatedAttr 0x195dd532558 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_timezone instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x195dd5327f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:293:76> col:68 tzname 'char *[2]' extern
| `-DeprecatedAttr 0x195dd532858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_tzname instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195dd532af0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:297:63> col:53 tzset 'void (void) __attribute__((cdecl))':'void (void)'
| `-DeprecatedAttr 0x195dd532b90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tzset. See online help for details." ""
|-FunctionDecl 0x195dd532e60 <.//openssl//file_jk/before\crypto\asn1/asn1_locl.h:12:1, col:60> col:5 invalid asn1_utctime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x195dd532cc8 <col:24, col:35> col:35 tm 'struct tm *'
| `-ParmVarDecl 0x195dd532d48 <col:39, col:59> col:59 invalid d 'const int *'
|-FunctionDecl 0x195dd52f0a0 <line:13:1, col:76> col:5 invalid asn1_generalizedtime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x195dd532f38 <col:32, col:43> col:43 tm 'struct tm *'
| `-ParmVarDecl 0x195dd532fb8 <col:47, col:75> col:75 invalid d 'const int *'
|-RecordDecl 0x195dd52f150 <line:17:1, line:38:1> line:17:8 invalid struct asn1_sctx_st definition
| |-FieldDecl 0x195dd52f228 <line:19:5, col:22> col:22 invalid it 'const int *'
| |-FieldDecl 0x195dd52f298 <line:21:5, col:26> col:26 invalid tt 'const int *'
| |-FieldDecl 0x195dd52f308 <line:23:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x195dd52f378 <line:25:5, col:9> col:9 skidx 'int'
| |-FieldDecl 0x195dd52f3e8 <line:27:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x195dd52f458 <line:29:5, col:17> col:17 sname 'const char *'
| |-FieldDecl 0x195dd52f4c8 <col:5, col:25> col:25 fname 'const char *'
| |-FieldDecl 0x195dd52f538 <line:31:5, col:9> col:9 prim_type 'int'
| |-FieldDecl 0x195dd52f5d8 <line:33:5, col:18> col:18 invalid field 'int **'
| |-FieldDecl 0x195dd52f778 <line:35:5, col:35> col:11 scan_cb 'int (*)(int *)'
| `-FieldDecl 0x195dd52f7e8 <line:37:5, col:11> col:11 app_data 'void *'
|-RecordDecl 0x195dd52f840 <line:40:9, col:16> col:16 struct mime_param_st
|-TypedefDecl 0x195dd52f958 <col:1, col:30> col:30 referenced MIME_PARAM 'struct mime_param_st':'struct mime_param_st'
| `-ElaboratedType 0x195dd52f900 'struct mime_param_st' sugar
|   `-RecordType 0x195dd52f8e0 'struct mime_param_st'
|     `-Record 0x195dd52f840 'mime_param_st'
|-FunctionDecl 0x195dd52fb00 <line:41:1, col:27> col:1 DEFINE_STACK_OF 'int (MIME_PARAM)'
| `-ParmVarDecl 0x195dd52fa00 <col:17> col:27 'MIME_PARAM':'struct mime_param_st'
|-RecordDecl 0x195dd52fbc0 <line:42:9, col:16> col:16 struct mime_header_st
|-TypedefDecl 0x195dd52fcd8 <col:1, col:31> col:31 referenced MIME_HEADER 'struct mime_header_st':'struct mime_header_st'
| `-ElaboratedType 0x195dd52fc80 'struct mime_header_st' sugar
|   `-RecordType 0x195dd52fc60 'struct mime_header_st'
|     `-Record 0x195dd52fbc0 'mime_header_st'
|-FunctionDecl 0x195dd52fe80 <line:43:1, col:28> col:1 invalid DEFINE_STACK_OF 'int (MIME_HEADER)'
| `-ParmVarDecl 0x195dd52fd80 <col:17> col:28 'MIME_HEADER':'struct mime_header_st'
|-VarDecl 0x195dd52ffd0 <line:46:1, col:32> col:20 used _asn1_mon 'const char *[12]' extern
|-FunctionDecl 0x195dd537278 <line:48:1, col:54> col:6 invalid asn1_string_embed_free 'void (int *, int)'
| |-ParmVarDecl 0x195dd537120 <col:29, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x195dd5371a0 <col:45, col:49> col:49 embed 'int'
|-FunctionDecl 0x195dd5374a0 <line:50:1, col:68> col:5 invalid asn1_get_choice_selector 'int (int **, const int *)'
| |-ParmVarDecl 0x195dd537348 <col:30, col:43> col:43 invalid pval 'int **'
| `-ParmVarDecl 0x195dd5373c8 <col:49, col:66> col:66 invalid it 'const int *'
|-FunctionDecl 0x195dd537760 <line:51:1, line:52:49> line:51:5 invalid asn1_set_choice_selector 'int (int **, int, const int *)'
| |-ParmVarDecl 0x195dd537570 <col:30, col:43> col:43 invalid pval 'int **'
| |-ParmVarDecl 0x195dd5375f0 <col:49, col:53> col:53 value 'int'
| `-ParmVarDecl 0x195dd537670 <line:52:30, col:47> col:47 invalid it 'const int *'
|-FunctionDecl 0x195dd537998 <line:54:1, col:75> col:14 invalid asn1_get_field_ptr 'int **(int **, const int *)'
| |-ParmVarDecl 0x195dd537838 <col:33, col:46> col:46 invalid pval 'int **'
| `-ParmVarDecl 0x195dd5378b8 <col:52, col:73> col:73 invalid tt 'const int *'
|-FunctionDecl 0x195dd537c50 <line:56:1, line:57:45> line:56:22 invalid asn1_do_adb 'const int *(int **, const int *, int)'
| |-ParmVarDecl 0x195dd537a68 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x195dd537ae8 <col:53, col:74> col:74 invalid tt 'const int *'
| `-ParmVarDecl 0x195dd537b68 <line:57:34, col:38> col:38 nullerr 'int'
|-FunctionDecl 0x195dd537ed0 <line:59:1, col:64> col:5 invalid asn1_do_lock 'int (int **, int, const int *)'
| |-ParmVarDecl 0x195dd537d28 <col:18, col:31> col:31 invalid pval 'int **'
| |-ParmVarDecl 0x195dd537da8 <col:37, col:41> col:41 op 'int'
| `-ParmVarDecl 0x195dd537e28 <col:45, col:62> col:62 invalid it 'const int *'
|-FunctionDecl 0x195dd53a150 <line:61:1, col:58> col:6 invalid asn1_enc_init 'void (int **, const int *)'
| |-ParmVarDecl 0x195dd537fa8 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x195dd538028 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x195dd53a338 <line:62:1, col:58> col:6 invalid asn1_enc_free 'void (int **, const int *)'
| |-ParmVarDecl 0x195dd53a220 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x195dd53a2a0 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x195dd53a6f0 <line:63:1, line:64:41> line:63:5 invalid asn1_enc_restore 'int (int *, unsigned char **, int **, const int *)'
| |-ParmVarDecl 0x195dd53a400 <col:22, col:27> col:27 len 'int *'
| |-ParmVarDecl 0x195dd53a4e8 <col:32, col:48> col:48 out 'unsigned char **'
| |-ParmVarDecl 0x195dd53a570 <col:53, col:66> col:66 invalid pval 'int **'
| `-ParmVarDecl 0x195dd53a5f0 <line:64:22, col:39> col:39 invalid it 'const int *'
|-FunctionDecl 0x195dd53aa50 <line:65:1, line:66:38> line:65:5 invalid asn1_enc_save 'int (int **, const unsigned char *, int, const int *)'
| |-ParmVarDecl 0x195dd53a7d0 <col:19, col:32> col:32 invalid pval 'int **'
| |-ParmVarDecl 0x195dd53a850 <col:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x195dd53a8d0 <col:63, col:67> col:67 inlen 'int'
| `-ParmVarDecl 0x195dd53a950 <line:66:19, col:36> col:36 invalid it 'const int *'
|-FunctionDecl 0x195dd53ad18 <line:68:1, col:76> col:6 invalid asn1_item_embed_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x195dd53ab30 <col:27, col:40> col:40 invalid pval 'int **'
| |-ParmVarDecl 0x195dd53abb0 <col:46, col:63> col:63 invalid it 'const int *'
| `-ParmVarDecl 0x195dd53ac30 <col:67, col:71> col:71 embed 'int'
|-FunctionDecl 0x195dd53af90 <line:69:1, col:75> col:6 invalid asn1_primitive_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x195dd53adf0 <col:26, col:39> col:39 invalid pval 'int **'
| |-ParmVarDecl 0x195dd53ae70 <col:45, col:62> col:62 invalid it 'const int *'
| `-ParmVarDecl 0x195dd53aef0 <col:66, col:70> col:70 embed 'int'
|-FunctionDecl 0x195dd539170 <line:70:1, col:67> col:6 invalid asn1_template_free 'void (int **, const int *)'
| |-ParmVarDecl 0x195dd53b068 <col:25, col:38> col:38 invalid pval 'int **'
| `-ParmVarDecl 0x195dd53b0e8 <col:44, col:65> col:65 invalid tt 'const int *'
|-FunctionDecl 0x195dd539460 <line:72:1, line:73:41> line:72:14 invalid c2i_ASN1_OBJECT 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x195dd539240 <col:30, col:44> col:44 invalid a 'int **'
| |-ParmVarDecl 0x195dd5392f8 <col:47, col:69> col:69 pp 'const unsigned char **'
| `-ParmVarDecl 0x195dd539378 <line:73:30, col:35> col:35 length 'long'
|-FunctionDecl 0x195dd539690 <line:74:1, col:63> col:5 invalid i2c_ASN1_BIT_STRING 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x195dd539530 <col:25, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x195dd5395b8 <col:45, col:61> col:61 pp 'unsigned char **'
|-FunctionDecl 0x195dd539910 <line:75:1, line:76:75> line:75:18 invalid c2i_ASN1_BIT_STRING 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x195dd539760 <col:38, col:56> col:56 invalid a 'int **'
| |-ParmVarDecl 0x195dd5397e8 <line:76:38, col:60> col:60 pp 'const unsigned char **'
| `-ParmVarDecl 0x195dd539868 <col:64, col:69> col:69 length 'long'
|-FunctionDecl 0x195dd539b08 <line:77:1, col:57> col:5 invalid i2c_ASN1_INTEGER 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x195dd5399e0 <col:22, col:36> col:36 invalid a 'int *'
| `-ParmVarDecl 0x195dd539a68 <col:39, col:55> col:55 pp 'unsigned char **'
|-FunctionDecl 0x195dd539d88 <line:78:1, line:79:43> line:78:15 invalid c2i_ASN1_INTEGER 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x195dd539bd8 <col:32, col:47> col:47 invalid a 'int **'
| |-ParmVarDecl 0x195dd539c60 <col:50, col:72> col:72 pp 'const unsigned char **'
| `-ParmVarDecl 0x195dd539ce0 <line:79:32, col:37> col:37 length 'long'
|-FunctionDecl 0x195dd53c170 <line:82:1, col:79> col:5 invalid c2i_uint64_int 'int (int *, int *, const unsigned char **, long)'
| |-ParmVarDecl 0x195dd539e58 <col:20, col:30> col:30 invalid ret 'int *'
| |-ParmVarDecl 0x195dd539ed8 <col:35, col:40> col:40 neg 'int *'
| |-ParmVarDecl 0x195dd539f60 <col:45, col:67> col:67 pp 'const unsigned char **'
| `-ParmVarDecl 0x195dd539fe0 <col:71, col:76> col:76 len 'long'
|-FunctionDecl 0x195dd53c430 <line:83:1, col:57> col:5 invalid i2c_uint64_int 'int (unsigned char *, int, int)'
| |-ParmVarDecl 0x195dd53c248 <col:20, col:35> col:35 p 'unsigned char *'
| |-ParmVarDecl 0x195dd53c2c8 <col:38, col:47> col:47 invalid r 'int'
| `-ParmVarDecl 0x195dd53c348 <col:50, col:54> col:54 neg 'int'
|-FunctionDecl 0x195dd53c630 <.//openssl//file_jk/before\crypto\asn1\a_utctm.c:16:1, line:106:1> line:16:5 invalid asn1_utctime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x195dd53c510 <col:24, col:35> col:35 used tm 'struct tm *'
| |-ParmVarDecl 0x195dd53c590 <col:39, col:59> col:59 invalid d 'const int *'
| `-CompoundStmt 0x195dd540e78 <line:17:1, line:106:1>
|   |-DeclStmt 0x195dd53ca98 <line:18:5, col:57>
|   | `-VarDecl 0x195dd53c7e0 <col:5, col:56> col:22 used min 'const int [8]' static cinit
|   |   `-InitListExpr 0x195dd53ca18 <col:31, col:56> 'const int [8]'
|   |     |-IntegerLiteral 0x195dd53c848 <col:33> 'int' 0
|   |     |-IntegerLiteral 0x195dd53c870 <col:36> 'int' 1
|   |     |-IntegerLiteral 0x195dd53c898 <col:39> 'int' 1
|   |     |-IntegerLiteral 0x195dd53c8c0 <col:42> 'int' 0
|   |     |-IntegerLiteral 0x195dd53c8e8 <col:45> 'int' 0
|   |     |-IntegerLiteral 0x195dd53c910 <col:48> 'int' 0
|   |     |-IntegerLiteral 0x195dd53c938 <col:51> 'int' 0
|   |     `-IntegerLiteral 0x195dd53c960 <col:54> 'int' 0
|   |-DeclStmt 0x195dd53cdd0 <line:19:5, col:65>
|   | `-VarDecl 0x195dd53cb18 <col:5, col:64> col:22 used max 'const int [8]' static cinit
|   |   `-InitListExpr 0x195dd53cd50 <col:31, col:64> 'const int [8]'
|   |     |-IntegerLiteral 0x195dd53cb80 <col:33> 'int' 99
|   |     |-IntegerLiteral 0x195dd53cba8 <col:37> 'int' 12
|   |     |-IntegerLiteral 0x195dd53cbd0 <col:41> 'int' 31
|   |     |-IntegerLiteral 0x195dd53cbf8 <col:45> 'int' 23
|   |     |-IntegerLiteral 0x195dd53cc20 <col:49> 'int' 59
|   |     |-IntegerLiteral 0x195dd53cc48 <col:53> 'int' 59
|   |     |-IntegerLiteral 0x195dd53cc70 <col:57> 'int' 12
|   |     `-IntegerLiteral 0x195dd53cc98 <col:61> 'int' 59
|   |-DeclStmt 0x195dd53ce68 <line:20:5, col:12>
|   | `-VarDecl 0x195dd53ce00 <col:5, col:11> col:11 used a 'char *'
|   |-DeclStmt 0x195dd53d0a8 <line:21:5, col:19>
|   | |-VarDecl 0x195dd53ce98 <col:5, col:9> col:9 used n 'int'
|   | |-VarDecl 0x195dd53cf18 <col:5, col:12> col:12 used i 'int'
|   | |-VarDecl 0x195dd53cf98 <col:5, col:15> col:15 used l 'int'
|   | `-VarDecl 0x195dd53d018 <col:5, col:18> col:18 used o 'int'
|   |-IfStmt 0x195dd53d130 <line:23:5, line:24:18>
|   | |-OpaqueValueExpr 0x195dd53d118 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x195dd53d108 <col:9, col:18>
|   |   `-ParenExpr 0x195dd53d0e8 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x195dd53d0c0 <col:17> 'int' 0
|   |-BinaryOperator 0x195dd5381e0 <line:27:5, col:9> 'int' '='
|   | |-DeclRefExpr 0x195dd538180 <col:5> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   | `-IntegerLiteral 0x195dd5381b8 <col:9> 'int' 0
|   |-IfStmt 0x195dd5382e8 <line:29:5, line:30:14>
|   | |-BinaryOperator 0x195dd538260 <line:29:9, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x195dd538248 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x195dd538200 <col:9> 'int' lvalue Var 0x195dd53cf98 'l' 'int'
|   | | `-IntegerLiteral 0x195dd538220 <col:13> 'int' 11
|   | `-GotoStmt 0x195dd5382d0 <line:30:9, col:14> 'err' 0x195dd538280
|   |-ForStmt 0x195dd53c110 <line:31:5, line:74:5>
|   | |-BinaryOperator 0x195dd538360 <line:31:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x195dd538300 <col:10> 'int' lvalue Var 0x195dd53cf18 'i' 'int'
|   | | `-IntegerLiteral 0x195dd538338 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x195dd5383e0 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x195dd5383c8 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x195dd538380 <col:17> 'int' lvalue Var 0x195dd53cf18 'i' 'int'
|   | | `-IntegerLiteral 0x195dd5383a0 <col:21> 'int' 6
|   | |-UnaryOperator 0x195dd538420 <col:24, col:25> 'int' postfix '++'
|   | | `-DeclRefExpr 0x195dd538400 <col:24> 'int' lvalue Var 0x195dd53cf18 'i' 'int'
|   | `-CompoundStmt 0x195dd53c0b8 <col:29, line:74:5>
|   |   |-IfStmt 0x195dd538a20 <line:32:9, line:37:9>
|   |   | |-BinaryOperator 0x195dd538880 <line:32:13, col:73> 'int' '&&'
|   |   | | |-ParenExpr 0x195dd5384b8 <col:13, col:20> 'int'
|   |   | | | `-BinaryOperator 0x195dd538498 <col:14, col:19> 'int' '=='
|   |   | | |   |-ImplicitCastExpr 0x195dd538480 <col:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x195dd538438 <col:14> 'int' lvalue Var 0x195dd53cf18 'i' 'int'
|   |   | | |   `-IntegerLiteral 0x195dd538458 <col:19> 'int' 5
|   |   | | `-ParenExpr 0x195dd538860 <col:25, col:73> 'int'
|   |   | |   `-BinaryOperator 0x195dd538840 <col:26, col:72> 'int' '||'
|   |   | |     |-BinaryOperator 0x195dd538708 <col:26, col:55> 'int' '||'
|   |   | |     | |-ParenExpr 0x195dd5385d0 <col:26, col:38> 'int'
|   |   | |     | | `-BinaryOperator 0x195dd5385b0 <col:27, col:35> 'int' '=='
|   |   | |     | |   |-ImplicitCastExpr 0x195dd538598 <col:27, col:30> 'int' <IntegralCast>
|   |   | |     | |   | `-ImplicitCastExpr 0x195dd538580 <col:27, col:30> 'char' <LValueToRValue>
|   |   | |     | |   |   `-ArraySubscriptExpr 0x195dd538548 <col:27, col:30> 'char' lvalue
|   |   | |     | |   |     |-ImplicitCastExpr 0x195dd538518 <col:27> 'char *' <LValueToRValue>
|   |   | |     | |   |     | `-DeclRefExpr 0x195dd5384d8 <col:27> 'char *' lvalue Var 0x195dd53ce00 'a' 'char *'
|   |   | |     | |   |     `-ImplicitCastExpr 0x195dd538530 <col:29> 'int' <LValueToRValue>
|   |   | |     | |   |       `-DeclRefExpr 0x195dd5384f8 <col:29> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   |   | |     | |   `-CharacterLiteral 0x195dd538568 <col:35> 'int' 90
|   |   | |     | `-ParenExpr 0x195dd5386e8 <col:43, col:55> 'int'
|   |   | |     |   `-BinaryOperator 0x195dd5386c8 <col:44, col:52> 'int' '=='
|   |   | |     |     |-ImplicitCastExpr 0x195dd5386b0 <col:44, col:47> 'int' <IntegralCast>
|   |   | |     |     | `-ImplicitCastExpr 0x195dd538698 <col:44, col:47> 'char' <LValueToRValue>
|   |   | |     |     |   `-ArraySubscriptExpr 0x195dd538660 <col:44, col:47> 'char' lvalue
|   |   | |     |     |     |-ImplicitCastExpr 0x195dd538630 <col:44> 'char *' <LValueToRValue>
|   |   | |     |     |     | `-DeclRefExpr 0x195dd5385f0 <col:44> 'char *' lvalue Var 0x195dd53ce00 'a' 'char *'
|   |   | |     |     |     `-ImplicitCastExpr 0x195dd538648 <col:46> 'int' <LValueToRValue>
|   |   | |     |     |       `-DeclRefExpr 0x195dd538610 <col:46> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   |   | |     |     `-CharacterLiteral 0x195dd538680 <col:52> 'int' 43
|   |   | |     `-ParenExpr 0x195dd538820 <col:60, col:72> 'int'
|   |   | |       `-BinaryOperator 0x195dd538800 <col:61, col:69> 'int' '=='
|   |   | |         |-ImplicitCastExpr 0x195dd5387e8 <col:61, col:64> 'int' <IntegralCast>
|   |   | |         | `-ImplicitCastExpr 0x195dd5387d0 <col:61, col:64> 'char' <LValueToRValue>
|   |   | |         |   `-ArraySubscriptExpr 0x195dd538798 <col:61, col:64> 'char' lvalue
|   |   | |         |     |-ImplicitCastExpr 0x195dd538768 <col:61> 'char *' <LValueToRValue>
|   |   | |         |     | `-DeclRefExpr 0x195dd538728 <col:61> 'char *' lvalue Var 0x195dd53ce00 'a' 'char *'
|   |   | |         |     `-ImplicitCastExpr 0x195dd538780 <col:63> 'int' <LValueToRValue>
|   |   | |         |       `-DeclRefExpr 0x195dd538748 <col:63> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   |   | |         `-CharacterLiteral 0x195dd5387b8 <col:69> 'int' 45
|   |   | `-CompoundStmt 0x195dd5389f8 <col:76, line:37:9>
|   |   |   |-UnaryOperator 0x195dd5388c0 <line:33:13, col:14> 'int' postfix '++'
|   |   |   | `-DeclRefExpr 0x195dd5388a0 <col:13> 'int' lvalue Var 0x195dd53cf18 'i' 'int'
|   |   |   |-IfStmt 0x195dd5389d8 <line:34:13, line:35:30>
|   |   |   | |-ImplicitCastExpr 0x195dd538910 <line:34:17> 'struct tm *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x195dd5388d8 <col:17> 'struct tm *' lvalue ParmVar 0x195dd53c510 'tm' 'struct tm *'
|   |   |   | `-BinaryOperator 0x195dd5389b8 <line:35:17, col:30> 'int' '='
|   |   |   |   |-MemberExpr 0x195dd538960 <col:17, col:21> 'int' lvalue ->tm_sec 0x195dd518928
|   |   |   |   | `-ImplicitCastExpr 0x195dd538948 <col:17> 'struct tm *' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x195dd538928 <col:17> 'struct tm *' lvalue ParmVar 0x195dd53c510 'tm' 'struct tm *'
|   |   |   |   `-IntegerLiteral 0x195dd538990 <col:30> 'int' 0
|   |   |   `-BreakStmt 0x195dd5389f0 <line:36:13>
|   |   |-IfStmt 0x195dd538ca0 <line:38:9, line:39:18>
|   |   | |-BinaryOperator 0x195dd538c68 <line:38:13, col:40> 'int' '||'
|   |   | | |-ParenExpr 0x195dd538b30 <col:13, col:24> 'int'
|   |   | | | `-BinaryOperator 0x195dd538b10 <col:14, col:21> 'int' '<'
|   |   | | |   |-ImplicitCastExpr 0x195dd538af8 <col:14, col:17> 'int' <IntegralCast>
|   |   | | |   | `-ImplicitCastExpr 0x195dd538ae0 <col:14, col:17> 'char' <LValueToRValue>
|   |   | | |   |   `-ArraySubscriptExpr 0x195dd538aa8 <col:14, col:17> 'char' lvalue
|   |   | | |   |     |-ImplicitCastExpr 0x195dd538a78 <col:14> 'char *' <LValueToRValue>
|   |   | | |   |     | `-DeclRefExpr 0x195dd538a38 <col:14> 'char *' lvalue Var 0x195dd53ce00 'a' 'char *'
|   |   | | |   |     `-ImplicitCastExpr 0x195dd538a90 <col:16> 'int' <LValueToRValue>
|   |   | | |   |       `-DeclRefExpr 0x195dd538a58 <col:16> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   |   | | |   `-CharacterLiteral 0x195dd538ac8 <col:21> 'int' 48
|   |   | | `-ParenExpr 0x195dd538c48 <col:29, col:40> 'int'
|   |   | |   `-BinaryOperator 0x195dd538c28 <col:30, col:37> 'int' '>'
|   |   | |     |-ImplicitCastExpr 0x195dd538c10 <col:30, col:33> 'int' <IntegralCast>
|   |   | |     | `-ImplicitCastExpr 0x195dd538bf8 <col:30, col:33> 'char' <LValueToRValue>
|   |   | |     |   `-ArraySubscriptExpr 0x195dd538bc0 <col:30, col:33> 'char' lvalue
|   |   | |     |     |-ImplicitCastExpr 0x195dd538b90 <col:30> 'char *' <LValueToRValue>
|   |   | |     |     | `-DeclRefExpr 0x195dd538b50 <col:30> 'char *' lvalue Var 0x195dd53ce00 'a' 'char *'
|   |   | |     |     `-ImplicitCastExpr 0x195dd538ba8 <col:32> 'int' <LValueToRValue>
|   |   | |     |       `-DeclRefExpr 0x195dd538b70 <col:32> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   |   | |     `-CharacterLiteral 0x195dd538be0 <col:37> 'int' 57
|   |   | `-GotoStmt 0x195dd538c88 <line:39:13, col:18> 'err' 0x195dd538280
|   |   |-BinaryOperator 0x195dd538de8 <line:40:9, col:20> 'int' '='
|   |   | |-DeclRefExpr 0x195dd538cb8 <col:9> 'int' lvalue Var 0x195dd53ce98 'n' 'int'
|   |   | `-BinaryOperator 0x195dd538dc8 <col:13, col:20> 'int' '-'
|   |   |   |-ImplicitCastExpr 0x195dd538db0 <col:13, col:16> 'int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x195dd538d98 <col:13, col:16> 'char' <LValueToRValue>
|   |   |   |   `-ArraySubscriptExpr 0x195dd538d60 <col:13, col:16> 'char' lvalue
|   |   |   |     |-ImplicitCastExpr 0x195dd538d30 <col:13> 'char *' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x195dd538cf0 <col:13> 'char *' lvalue Var 0x195dd53ce00 'a' 'char *'
|   |   |   |     `-ImplicitCastExpr 0x195dd538d48 <col:15> 'int' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x195dd538d10 <col:15> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   |   |   `-CharacterLiteral 0x195dd538d80 <col:20> 'int' 48
|   |   |-IfStmt 0x195dd538eb0 <line:41:9, line:42:18>
|   |   | |-BinaryOperator 0x195dd538e78 <line:41:13, col:19> 'int' '>'
|   |   | | |-UnaryOperator 0x195dd538e28 <col:13, col:15> 'int' prefix '++'
|   |   | | | `-DeclRefExpr 0x195dd538e08 <col:15> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   |   | | `-ImplicitCastExpr 0x195dd538e60 <col:19> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x195dd538e40 <col:19> 'int' lvalue Var 0x195dd53cf98 'l' 'int'
|   |   | `-GotoStmt 0x195dd538e98 <line:42:13, col:18> 'err' 0x195dd538280
|   |   |-IfStmt 0x195dd53b160 <line:44:9, line:45:18>
|   |   | |-BinaryOperator 0x195dd5390f8 <line:44:13, col:40> 'int' '||'
|   |   | | |-ParenExpr 0x195dd538fc0 <col:13, col:24> 'int'
|   |   | | | `-BinaryOperator 0x195dd538fa0 <col:14, col:21> 'int' '<'
|   |   | | |   |-ImplicitCastExpr 0x195dd538f88 <col:14, col:17> 'int' <IntegralCast>
|   |   | | |   | `-ImplicitCastExpr 0x195dd538f70 <col:14, col:17> 'char' <LValueToRValue>
|   |   | | |   |   `-ArraySubscriptExpr 0x195dd538f38 <col:14, col:17> 'char' lvalue
|   |   | | |   |     |-ImplicitCastExpr 0x195dd538f08 <col:14> 'char *' <LValueToRValue>
|   |   | | |   |     | `-DeclRefExpr 0x195dd538ec8 <col:14> 'char *' lvalue Var 0x195dd53ce00 'a' 'char *'
|   |   | | |   |     `-ImplicitCastExpr 0x195dd538f20 <col:16> 'int' <LValueToRValue>
|   |   | | |   |       `-DeclRefExpr 0x195dd538ee8 <col:16> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   |   | | |   `-CharacterLiteral 0x195dd538f58 <col:21> 'int' 48
|   |   | | `-ParenExpr 0x195dd5390d8 <col:29, col:40> 'int'
|   |   | |   `-BinaryOperator 0x195dd5390b8 <col:30, col:37> 'int' '>'
|   |   | |     |-ImplicitCastExpr 0x195dd5390a0 <col:30, col:33> 'int' <IntegralCast>
|   |   | |     | `-ImplicitCastExpr 0x195dd539088 <col:30, col:33> 'char' <LValueToRValue>
|   |   | |     |   `-ArraySubscriptExpr 0x195dd539050 <col:30, col:33> 'char' lvalue
|   |   | |     |     |-ImplicitCastExpr 0x195dd539020 <col:30> 'char *' <LValueToRValue>
|   |   | |     |     | `-DeclRefExpr 0x195dd538fe0 <col:30> 'char *' lvalue Var 0x195dd53ce00 'a' 'char *'
|   |   | |     |     `-ImplicitCastExpr 0x195dd539038 <col:32> 'int' <LValueToRValue>
|   |   | |     |       `-DeclRefExpr 0x195dd539000 <col:32> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   |   | |     `-CharacterLiteral 0x195dd539070 <col:37> 'int' 57
|   |   | `-GotoStmt 0x195dd539118 <line:45:13, col:18> 'err' 0x195dd538280
|   |   |-BinaryOperator 0x195dd53b350 <line:46:9, col:31> 'int' '='
|   |   | |-DeclRefExpr 0x195dd53b178 <col:9> 'int' lvalue Var 0x195dd53ce98 'n' 'int'
|   |   | `-BinaryOperator 0x195dd53b330 <col:13, col:31> 'int' '-'
|   |   |   |-BinaryOperator 0x195dd53b2f8 <col:13, col:27> 'int' '+'
|   |   |   | |-ParenExpr 0x195dd53b218 <col:13, col:20> 'int'
|   |   |   | | `-BinaryOperator 0x195dd53b1f8 <col:14, col:18> 'int' '*'
|   |   |   | |   |-ImplicitCastExpr 0x195dd53b1e0 <col:14> 'int' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x195dd53b198 <col:14> 'int' lvalue Var 0x195dd53ce98 'n' 'int'
|   |   |   | |   `-IntegerLiteral 0x195dd53b1b8 <col:18> 'int' 10
|   |   |   | `-ImplicitCastExpr 0x195dd53b2e0 <col:24, col:27> 'int' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x195dd53b2c8 <col:24, col:27> 'char' <LValueToRValue>
|   |   |   |     `-ArraySubscriptExpr 0x195dd53b2a8 <col:24, col:27> 'char' lvalue
|   |   |   |       |-ImplicitCastExpr 0x195dd53b278 <col:24> 'char *' <LValueToRValue>
|   |   |   |       | `-DeclRefExpr 0x195dd53b238 <col:24> 'char *' lvalue Var 0x195dd53ce00 'a' 'char *'
|   |   |   |       `-ImplicitCastExpr 0x195dd53b290 <col:26> 'int' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x195dd53b258 <col:26> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   |   |   `-CharacterLiteral 0x195dd53b318 <col:31> 'int' 48
|   |   |-IfStmt 0x195dd53b418 <line:47:9, line:48:18>
|   |   | |-BinaryOperator 0x195dd53b3e0 <line:47:13, col:19> 'int' '>'
|   |   | | |-UnaryOperator 0x195dd53b390 <col:13, col:15> 'int' prefix '++'
|   |   | | | `-DeclRefExpr 0x195dd53b370 <col:15> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   |   | | `-ImplicitCastExpr 0x195dd53b3c8 <col:19> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x195dd53b3a8 <col:19> 'int' lvalue Var 0x195dd53cf98 'l' 'int'
|   |   | `-GotoStmt 0x195dd53b400 <line:48:13, col:18> 'err' 0x195dd538280
|   |   |-IfStmt 0x195dd53b6d8 <line:50:9, line:51:18>
|   |   | |-BinaryOperator 0x195dd53b6a0 <line:50:13, col:40> 'int' '||'
|   |   | | |-ParenExpr 0x195dd53b548 <col:13, col:24> 'int'
|   |   | | | `-BinaryOperator 0x195dd53b528 <col:14, col:23> 'int' '<'
|   |   | | |   |-ImplicitCastExpr 0x195dd53b4f8 <col:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x195dd53b430 <col:14> 'int' lvalue Var 0x195dd53ce98 'n' 'int'
|   |   | | |   `-ImplicitCastExpr 0x195dd53b510 <col:18, col:23> 'int' <LValueToRValue>
|   |   | | |     `-ArraySubscriptExpr 0x195dd53b4d8 <col:18, col:23> 'const int' lvalue
|   |   | | |       |-ImplicitCastExpr 0x195dd53b4a8 <col:18> 'const int *' <ArrayToPointerDecay>
|   |   | | |       | `-DeclRefExpr 0x195dd53b450 <col:18> 'const int [8]' lvalue Var 0x195dd53c7e0 'min' 'const int [8]'
|   |   | | |       `-ImplicitCastExpr 0x195dd53b4c0 <col:22> 'int' <LValueToRValue>
|   |   | | |         `-DeclRefExpr 0x195dd53b488 <col:22> 'int' lvalue Var 0x195dd53cf18 'i' 'int'
|   |   | | `-ParenExpr 0x195dd53b680 <col:29, col:40> 'int'
|   |   | |   `-BinaryOperator 0x195dd53b660 <col:30, col:39> 'int' '>'
|   |   | |     |-ImplicitCastExpr 0x195dd53b630 <col:30> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x195dd53b568 <col:30> 'int' lvalue Var 0x195dd53ce98 'n' 'int'
|   |   | |     `-ImplicitCastExpr 0x195dd53b648 <col:34, col:39> 'int' <LValueToRValue>
|   |   | |       `-ArraySubscriptExpr 0x195dd53b610 <col:34, col:39> 'const int' lvalue
|   |   | |         |-ImplicitCastExpr 0x195dd53b5e0 <col:34> 'const int *' <ArrayToPointerDecay>
|   |   | |         | `-DeclRefExpr 0x195dd53b588 <col:34> 'const int [8]' lvalue Var 0x195dd53cb18 'max' 'const int [8]'
|   |   | |         `-ImplicitCastExpr 0x195dd53b5f8 <col:38> 'int' <LValueToRValue>
|   |   | |           `-DeclRefExpr 0x195dd53b5c0 <col:38> 'int' lvalue Var 0x195dd53cf18 'i' 'int'
|   |   | `-GotoStmt 0x195dd53b6c0 <line:51:13, col:18> 'err' 0x195dd538280
|   |   `-IfStmt 0x195dd53c0a0 <line:52:9, line:73:9>
|   |     |-ImplicitCastExpr 0x195dd53b710 <line:52:13> 'struct tm *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x195dd53b6f0 <col:13> 'struct tm *' lvalue ParmVar 0x195dd53c510 'tm' 'struct tm *'
|   |     `-CompoundStmt 0x195dd53c088 <col:17, line:73:9>
|   |       `-SwitchStmt 0x195dd53b760 <line:53:13, line:72:13>
|   |         |-ImplicitCastExpr 0x195dd53b748 <line:53:21> 'int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x195dd53b728 <col:21> 'int' lvalue Var 0x195dd53cf18 'i' 'int'
|   |         `-CompoundStmt 0x195dd53c018 <col:24, line:72:13>
|   |           |-CaseStmt 0x195dd53b7c0 <line:54:13, line:55:50>
|   |           | |-ConstantExpr 0x195dd53b7a8 <line:54:18> 'int'
|   |           | | `-IntegerLiteral 0x195dd53b780 <col:18> 'int' 0
|   |           | `-BinaryOperator 0x195dd53b9b8 <line:55:17, col:50> 'int' '='
|   |           |   |-MemberExpr 0x195dd53b820 <col:17, col:21> 'int' lvalue ->tm_year 0x195dd518b58
|   |           |   | `-ImplicitCastExpr 0x195dd53b808 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x195dd53b7e8 <col:17> 'struct tm *' lvalue ParmVar 0x195dd53c510 'tm' 'struct tm *'
|   |           |   `-ConditionalOperator 0x195dd53b988 <col:31, col:50> 'int'
|   |           |     |-BinaryOperator 0x195dd53b8b0 <col:31, col:35> 'int' '<'
|   |           |     | |-ImplicitCastExpr 0x195dd53b898 <col:31> 'int' <LValueToRValue>
|   |           |     | | `-DeclRefExpr 0x195dd53b850 <col:31> 'int' lvalue Var 0x195dd53ce98 'n' 'int'
|   |           |     | `-IntegerLiteral 0x195dd53b870 <col:35> 'int' 50
|   |           |     |-BinaryOperator 0x195dd53b930 <col:40, col:44> 'int' '+'
|   |           |     | |-ImplicitCastExpr 0x195dd53b918 <col:40> 'int' <LValueToRValue>
|   |           |     | | `-DeclRefExpr 0x195dd53b8d0 <col:40> 'int' lvalue Var 0x195dd53ce98 'n' 'int'
|   |           |     | `-IntegerLiteral 0x195dd53b8f0 <col:44> 'int' 100
|   |           |     `-ImplicitCastExpr 0x195dd53b970 <col:50> 'int' <LValueToRValue>
|   |           |       `-DeclRefExpr 0x195dd53b950 <col:50> 'int' lvalue Var 0x195dd53ce98 'n' 'int'
|   |           |-BreakStmt 0x195dd53b9d8 <line:56:17>
|   |           |-CaseStmt 0x195dd53ba20 <line:57:13, line:58:34>
|   |           | |-ConstantExpr 0x195dd53ba08 <line:57:18> 'int'
|   |           | | `-IntegerLiteral 0x195dd53b9e0 <col:18> 'int' 1
|   |           | `-BinaryOperator 0x195dd53bb30 <line:58:17, col:34> 'int' '='
|   |           |   |-MemberExpr 0x195dd53ba80 <col:17, col:21> 'int' lvalue ->tm_mon 0x195dd518ae8
|   |           |   | `-ImplicitCastExpr 0x195dd53ba68 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x195dd53ba48 <col:17> 'struct tm *' lvalue ParmVar 0x195dd53c510 'tm' 'struct tm *'
|   |           |   `-BinaryOperator 0x195dd53bb10 <col:30, col:34> 'int' '-'
|   |           |     |-ImplicitCastExpr 0x195dd53baf8 <col:30> 'int' <LValueToRValue>
|   |           |     | `-DeclRefExpr 0x195dd53bab0 <col:30> 'int' lvalue Var 0x195dd53ce98 'n' 'int'
|   |           |     `-IntegerLiteral 0x195dd53bad0 <col:34> 'int' 1
|   |           |-BreakStmt 0x195dd53bb50 <line:59:17>
|   |           |-CaseStmt 0x195dd53bb98 <line:60:13, line:61:31>
|   |           | |-ConstantExpr 0x195dd53bb80 <line:60:18> 'int'
|   |           | | `-IntegerLiteral 0x195dd53bb58 <col:18> 'int' 2
|   |           | `-BinaryOperator 0x195dd53bc60 <line:61:17, col:31> 'int' '='
|   |           |   |-MemberExpr 0x195dd53bbf8 <col:17, col:21> 'int' lvalue ->tm_mday 0x195dd518a78
|   |           |   | `-ImplicitCastExpr 0x195dd53bbe0 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x195dd53bbc0 <col:17> 'struct tm *' lvalue ParmVar 0x195dd53c510 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x195dd53bc48 <col:31> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x195dd53bc28 <col:31> 'int' lvalue Var 0x195dd53ce98 'n' 'int'
|   |           |-BreakStmt 0x195dd53bc80 <line:62:17>
|   |           |-CaseStmt 0x195dd53bcc8 <line:63:13, line:64:31>
|   |           | |-ConstantExpr 0x195dd53bcb0 <line:63:18> 'int'
|   |           | | `-IntegerLiteral 0x195dd53bc88 <col:18> 'int' 3
|   |           | `-BinaryOperator 0x195dd53bd90 <line:64:17, col:31> 'int' '='
|   |           |   |-MemberExpr 0x195dd53bd28 <col:17, col:21> 'int' lvalue ->tm_hour 0x195dd518a08
|   |           |   | `-ImplicitCastExpr 0x195dd53bd10 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x195dd53bcf0 <col:17> 'struct tm *' lvalue ParmVar 0x195dd53c510 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x195dd53bd78 <col:31> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x195dd53bd58 <col:31> 'int' lvalue Var 0x195dd53ce98 'n' 'int'
|   |           |-BreakStmt 0x195dd53bdb0 <line:65:17>
|   |           |-CaseStmt 0x195dd53bdf8 <line:66:13, line:67:30>
|   |           | |-ConstantExpr 0x195dd53bde0 <line:66:18> 'int'
|   |           | | `-IntegerLiteral 0x195dd53bdb8 <col:18> 'int' 4
|   |           | `-BinaryOperator 0x195dd53bec0 <line:67:17, col:30> 'int' '='
|   |           |   |-MemberExpr 0x195dd53be58 <col:17, col:21> 'int' lvalue ->tm_min 0x195dd518998
|   |           |   | `-ImplicitCastExpr 0x195dd53be40 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x195dd53be20 <col:17> 'struct tm *' lvalue ParmVar 0x195dd53c510 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x195dd53bea8 <col:30> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x195dd53be88 <col:30> 'int' lvalue Var 0x195dd53ce98 'n' 'int'
|   |           |-BreakStmt 0x195dd53bee0 <line:68:17>
|   |           |-CaseStmt 0x195dd53bf28 <line:69:13, line:70:30>
|   |           | |-ConstantExpr 0x195dd53bf10 <line:69:18> 'int'
|   |           | | `-IntegerLiteral 0x195dd53bee8 <col:18> 'int' 5
|   |           | `-BinaryOperator 0x195dd53bff0 <line:70:17, col:30> 'int' '='
|   |           |   |-MemberExpr 0x195dd53bf88 <col:17, col:21> 'int' lvalue ->tm_sec 0x195dd518928
|   |           |   | `-ImplicitCastExpr 0x195dd53bf70 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x195dd53bf50 <col:17> 'struct tm *' lvalue ParmVar 0x195dd53c510 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x195dd53bfd8 <col:30> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x195dd53bfb8 <col:30> 'int' lvalue Var 0x195dd53ce98 'n' 'int'
|   |           `-BreakStmt 0x195dd53c010 <line:71:17>
|   |-IfStmt 0x195dd540d60 <line:75:5, line:102:5> has_else
|   | |-BinaryOperator 0x195dd53f278 <line:75:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x195dd53f260 <col:9, col:12> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x195dd53f248 <col:9, col:12> 'char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x195dd53f210 <col:9, col:12> 'char' lvalue
|   | | |     |-ImplicitCastExpr 0x195dd53f1e0 <col:9> 'char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x195dd53f1a0 <col:9> 'char *' lvalue Var 0x195dd53ce00 'a' 'char *'
|   | | |     `-ImplicitCastExpr 0x195dd53f1f8 <col:11> 'int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x195dd53f1c0 <col:11> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   | | `-CharacterLiteral 0x195dd53f230 <col:17> 'int' 90
|   | |-UnaryOperator 0x195dd53f2b8 <line:76:9, col:10> 'int' postfix '++'
|   | | `-DeclRefExpr 0x195dd53f298 <col:9> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   | `-IfStmt 0x195dd540d48 <line:77:10, line:102:5>
|   |   |-BinaryOperator 0x195dd53f500 <line:77:14, col:43> 'int' '||'
|   |   | |-ParenExpr 0x195dd53f3c8 <col:14, col:26> 'int'
|   |   | | `-BinaryOperator 0x195dd53f3a8 <col:15, col:23> 'int' '=='
|   |   | |   |-ImplicitCastExpr 0x195dd53f390 <col:15, col:18> 'int' <IntegralCast>
|   |   | |   | `-ImplicitCastExpr 0x195dd53f378 <col:15, col:18> 'char' <LValueToRValue>
|   |   | |   |   `-ArraySubscriptExpr 0x195dd53f340 <col:15, col:18> 'char' lvalue
|   |   | |   |     |-ImplicitCastExpr 0x195dd53f310 <col:15> 'char *' <LValueToRValue>
|   |   | |   |     | `-DeclRefExpr 0x195dd53f2d0 <col:15> 'char *' lvalue Var 0x195dd53ce00 'a' 'char *'
|   |   | |   |     `-ImplicitCastExpr 0x195dd53f328 <col:17> 'int' <LValueToRValue>
|   |   | |   |       `-DeclRefExpr 0x195dd53f2f0 <col:17> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   |   | |   `-CharacterLiteral 0x195dd53f360 <col:23> 'int' 43
|   |   | `-ParenExpr 0x195dd53f4e0 <col:31, col:43> 'int'
|   |   |   `-BinaryOperator 0x195dd53f4c0 <col:32, col:40> 'int' '=='
|   |   |     |-ImplicitCastExpr 0x195dd53f4a8 <col:32, col:35> 'int' <IntegralCast>
|   |   |     | `-ImplicitCastExpr 0x195dd53f490 <col:32, col:35> 'char' <LValueToRValue>
|   |   |     |   `-ArraySubscriptExpr 0x195dd53f458 <col:32, col:35> 'char' lvalue
|   |   |     |     |-ImplicitCastExpr 0x195dd53f428 <col:32> 'char *' <LValueToRValue>
|   |   |     |     | `-DeclRefExpr 0x195dd53f3e8 <col:32> 'char *' lvalue Var 0x195dd53ce00 'a' 'char *'
|   |   |     |     `-ImplicitCastExpr 0x195dd53f440 <col:34> 'int' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x195dd53f408 <col:34> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   |   |     `-CharacterLiteral 0x195dd53f478 <col:40> 'int' 45
|   |   `-CompoundStmt 0x195dd540d10 <col:46, line:102:5>
|   |     |-DeclStmt 0x195dd53f7f0 <line:78:9, col:55>
|   |     | |-VarDecl 0x195dd53f538 <col:9, col:42> col:13 used offsign 'int' cinit
|   |     | | `-ConditionalOperator 0x195dd53f700 <col:23, col:42> 'int'
|   |     | |   |-BinaryOperator 0x195dd53f678 <col:23, col:31> 'int' '=='
|   |     | |   | |-ImplicitCastExpr 0x195dd53f660 <col:23, col:26> 'int' <IntegralCast>
|   |     | |   | | `-ImplicitCastExpr 0x195dd53f648 <col:23, col:26> 'char' <LValueToRValue>
|   |     | |   | |   `-ArraySubscriptExpr 0x195dd53f610 <col:23, col:26> 'char' lvalue
|   |     | |   | |     |-ImplicitCastExpr 0x195dd53f5e0 <col:23> 'char *' <LValueToRValue>
|   |     | |   | |     | `-DeclRefExpr 0x195dd53f5a0 <col:23> 'char *' lvalue Var 0x195dd53ce00 'a' 'char *'
|   |     | |   | |     `-ImplicitCastExpr 0x195dd53f5f8 <col:25> 'int' <LValueToRValue>
|   |     | |   | |       `-DeclRefExpr 0x195dd53f5c0 <col:25> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   |     | |   | `-CharacterLiteral 0x195dd53f630 <col:31> 'int' 45
|   |     | |   |-IntegerLiteral 0x195dd53f698 <col:37> 'int' 1
|   |     | |   `-UnaryOperator 0x195dd53f6e8 <col:41, col:42> 'int' prefix '-'
|   |     | |     `-IntegerLiteral 0x195dd53f6c0 <col:42> 'int' 1
|   |     | `-VarDecl 0x195dd53f748 <col:9, col:54> col:45 used offset 'int' cinit
|   |     |   `-IntegerLiteral 0x195dd53f7b0 <col:54> 'int' 0
|   |     |-UnaryOperator 0x195dd53f828 <line:79:9, col:10> 'int' postfix '++'
|   |     | `-DeclRefExpr 0x195dd53f808 <col:9> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   |     |-IfStmt 0x195dd53f930 <line:80:9, line:81:18>
|   |     | |-BinaryOperator 0x195dd53f8f8 <line:80:13, col:21> 'int' '>'
|   |     | | |-BinaryOperator 0x195dd53f8a0 <col:13, col:17> 'int' '+'
|   |     | | | |-ImplicitCastExpr 0x195dd53f888 <col:13> 'int' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x195dd53f840 <col:13> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   |     | | | `-IntegerLiteral 0x195dd53f860 <col:17> 'int' 4
|   |     | | `-ImplicitCastExpr 0x195dd53f8e0 <col:21> 'int' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x195dd53f8c0 <col:21> 'int' lvalue Var 0x195dd53cf98 'l' 'int'
|   |     | `-GotoStmt 0x195dd53f918 <line:81:13, col:18> 'err' 0x195dd538280
|   |     |-ForStmt 0x195dd540950 <line:82:9, line:99:9>
|   |     | |-BinaryOperator 0x195dd53f990 <line:82:14, col:18> 'int' '='
|   |     | | |-DeclRefExpr 0x195dd53f948 <col:14> 'int' lvalue Var 0x195dd53cf18 'i' 'int'
|   |     | | `-IntegerLiteral 0x195dd53f968 <col:18> 'int' 6
|   |     | |-<<<NULL>>>
|   |     | |-BinaryOperator 0x195dd53fa10 <col:21, col:25> 'int' '<'
|   |     | | |-ImplicitCastExpr 0x195dd53f9f8 <col:21> 'int' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x195dd53f9b0 <col:21> 'int' lvalue Var 0x195dd53cf18 'i' 'int'
|   |     | | `-IntegerLiteral 0x195dd53f9d0 <col:25> 'int' 8
|   |     | |-UnaryOperator 0x195dd53fa50 <col:28, col:29> 'int' postfix '++'
|   |     | | `-DeclRefExpr 0x195dd53fa30 <col:28> 'int' lvalue Var 0x195dd53cf18 'i' 'int'
|   |     | `-CompoundStmt 0x195dd540900 <col:33, line:99:9>
|   |     |   |-IfStmt 0x195dd53fcd0 <line:83:13, line:84:22>
|   |     |   | |-BinaryOperator 0x195dd53fc98 <line:83:17, col:44> 'int' '||'
|   |     |   | | |-ParenExpr 0x195dd53fb60 <col:17, col:28> 'int'
|   |     |   | | | `-BinaryOperator 0x195dd53fb40 <col:18, col:25> 'int' '<'
|   |     |   | | |   |-ImplicitCastExpr 0x195dd53fb28 <col:18, col:21> 'int' <IntegralCast>
|   |     |   | | |   | `-ImplicitCastExpr 0x195dd53fb10 <col:18, col:21> 'char' <LValueToRValue>
|   |     |   | | |   |   `-ArraySubscriptExpr 0x195dd53fad8 <col:18, col:21> 'char' lvalue
|   |     |   | | |   |     |-ImplicitCastExpr 0x195dd53faa8 <col:18> 'char *' <LValueToRValue>
|   |     |   | | |   |     | `-DeclRefExpr 0x195dd53fa68 <col:18> 'char *' lvalue Var 0x195dd53ce00 'a' 'char *'
|   |     |   | | |   |     `-ImplicitCastExpr 0x195dd53fac0 <col:20> 'int' <LValueToRValue>
|   |     |   | | |   |       `-DeclRefExpr 0x195dd53fa88 <col:20> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   |     |   | | |   `-CharacterLiteral 0x195dd53faf8 <col:25> 'int' 48
|   |     |   | | `-ParenExpr 0x195dd53fc78 <col:33, col:44> 'int'
|   |     |   | |   `-BinaryOperator 0x195dd53fc58 <col:34, col:41> 'int' '>'
|   |     |   | |     |-ImplicitCastExpr 0x195dd53fc40 <col:34, col:37> 'int' <IntegralCast>
|   |     |   | |     | `-ImplicitCastExpr 0x195dd53fc28 <col:34, col:37> 'char' <LValueToRValue>
|   |     |   | |     |   `-ArraySubscriptExpr 0x195dd53fbf0 <col:34, col:37> 'char' lvalue
|   |     |   | |     |     |-ImplicitCastExpr 0x195dd53fbc0 <col:34> 'char *' <LValueToRValue>
|   |     |   | |     |     | `-DeclRefExpr 0x195dd53fb80 <col:34> 'char *' lvalue Var 0x195dd53ce00 'a' 'char *'
|   |     |   | |     |     `-ImplicitCastExpr 0x195dd53fbd8 <col:36> 'int' <LValueToRValue>
|   |     |   | |     |       `-DeclRefExpr 0x195dd53fba0 <col:36> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   |     |   | |     `-CharacterLiteral 0x195dd53fc10 <col:41> 'int' 57
|   |     |   | `-GotoStmt 0x195dd53fcb8 <line:84:17, col:22> 'err' 0x195dd538280
|   |     |   |-BinaryOperator 0x195dd53fe00 <line:85:13, col:24> 'int' '='
|   |     |   | |-DeclRefExpr 0x195dd53fce8 <col:13> 'int' lvalue Var 0x195dd53ce98 'n' 'int'
|   |     |   | `-BinaryOperator 0x195dd53fde0 <col:17, col:24> 'int' '-'
|   |     |   |   |-ImplicitCastExpr 0x195dd53fdc8 <col:17, col:20> 'int' <IntegralCast>
|   |     |   |   | `-ImplicitCastExpr 0x195dd53fdb0 <col:17, col:20> 'char' <LValueToRValue>
|   |     |   |   |   `-ArraySubscriptExpr 0x195dd53fd78 <col:17, col:20> 'char' lvalue
|   |     |   |   |     |-ImplicitCastExpr 0x195dd53fd48 <col:17> 'char *' <LValueToRValue>
|   |     |   |   |     | `-DeclRefExpr 0x195dd53fd08 <col:17> 'char *' lvalue Var 0x195dd53ce00 'a' 'char *'
|   |     |   |   |     `-ImplicitCastExpr 0x195dd53fd60 <col:19> 'int' <LValueToRValue>
|   |     |   |   |       `-DeclRefExpr 0x195dd53fd28 <col:19> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   |     |   |   `-CharacterLiteral 0x195dd53fd98 <col:24> 'int' 48
|   |     |   |-UnaryOperator 0x195dd53fe40 <line:86:13, col:14> 'int' postfix '++'
|   |     |   | `-DeclRefExpr 0x195dd53fe20 <col:13> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   |     |   |-IfStmt 0x195dd5400c0 <line:87:13, line:88:22>
|   |     |   | |-BinaryOperator 0x195dd540088 <line:87:17, col:44> 'int' '||'
|   |     |   | | |-ParenExpr 0x195dd53ff50 <col:17, col:28> 'int'
|   |     |   | | | `-BinaryOperator 0x195dd53ff30 <col:18, col:25> 'int' '<'
|   |     |   | | |   |-ImplicitCastExpr 0x195dd53ff18 <col:18, col:21> 'int' <IntegralCast>
|   |     |   | | |   | `-ImplicitCastExpr 0x195dd53ff00 <col:18, col:21> 'char' <LValueToRValue>
|   |     |   | | |   |   `-ArraySubscriptExpr 0x195dd53fec8 <col:18, col:21> 'char' lvalue
|   |     |   | | |   |     |-ImplicitCastExpr 0x195dd53fe98 <col:18> 'char *' <LValueToRValue>
|   |     |   | | |   |     | `-DeclRefExpr 0x195dd53fe58 <col:18> 'char *' lvalue Var 0x195dd53ce00 'a' 'char *'
|   |     |   | | |   |     `-ImplicitCastExpr 0x195dd53feb0 <col:20> 'int' <LValueToRValue>
|   |     |   | | |   |       `-DeclRefExpr 0x195dd53fe78 <col:20> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   |     |   | | |   `-CharacterLiteral 0x195dd53fee8 <col:25> 'int' 48
|   |     |   | | `-ParenExpr 0x195dd540068 <col:33, col:44> 'int'
|   |     |   | |   `-BinaryOperator 0x195dd540048 <col:34, col:41> 'int' '>'
|   |     |   | |     |-ImplicitCastExpr 0x195dd540030 <col:34, col:37> 'int' <IntegralCast>
|   |     |   | |     | `-ImplicitCastExpr 0x195dd540018 <col:34, col:37> 'char' <LValueToRValue>
|   |     |   | |     |   `-ArraySubscriptExpr 0x195dd53ffe0 <col:34, col:37> 'char' lvalue
|   |     |   | |     |     |-ImplicitCastExpr 0x195dd53ffb0 <col:34> 'char *' <LValueToRValue>
|   |     |   | |     |     | `-DeclRefExpr 0x195dd53ff70 <col:34> 'char *' lvalue Var 0x195dd53ce00 'a' 'char *'
|   |     |   | |     |     `-ImplicitCastExpr 0x195dd53ffc8 <col:36> 'int' <LValueToRValue>
|   |     |   | |     |       `-DeclRefExpr 0x195dd53ff90 <col:36> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   |     |   | |     `-CharacterLiteral 0x195dd540000 <col:41> 'int' 57
|   |     |   | `-GotoStmt 0x195dd5400a8 <line:88:17, col:22> 'err' 0x195dd538280
|   |     |   |-BinaryOperator 0x195dd5402c8 <line:89:13, col:35> 'int' '='
|   |     |   | |-DeclRefExpr 0x195dd5400d8 <col:13> 'int' lvalue Var 0x195dd53ce98 'n' 'int'
|   |     |   | `-BinaryOperator 0x195dd5402a8 <col:17, col:35> 'int' '-'
|   |     |   |   |-BinaryOperator 0x195dd540270 <col:17, col:31> 'int' '+'
|   |     |   |   | |-ParenExpr 0x195dd540178 <col:17, col:24> 'int'
|   |     |   |   | | `-BinaryOperator 0x195dd540158 <col:18, col:22> 'int' '*'
|   |     |   |   | |   |-ImplicitCastExpr 0x195dd540140 <col:18> 'int' <LValueToRValue>
|   |     |   |   | |   | `-DeclRefExpr 0x195dd5400f8 <col:18> 'int' lvalue Var 0x195dd53ce98 'n' 'int'
|   |     |   |   | |   `-IntegerLiteral 0x195dd540118 <col:22> 'int' 10
|   |     |   |   | `-ImplicitCastExpr 0x195dd540258 <col:28, col:31> 'int' <IntegralCast>
|   |     |   |   |   `-ImplicitCastExpr 0x195dd540240 <col:28, col:31> 'char' <LValueToRValue>
|   |     |   |   |     `-ArraySubscriptExpr 0x195dd540220 <col:28, col:31> 'char' lvalue
|   |     |   |   |       |-ImplicitCastExpr 0x195dd5401f0 <col:28> 'char *' <LValueToRValue>
|   |     |   |   |       | `-DeclRefExpr 0x195dd5401b0 <col:28> 'char *' lvalue Var 0x195dd53ce00 'a' 'char *'
|   |     |   |   |       `-ImplicitCastExpr 0x195dd540208 <col:30> 'int' <LValueToRValue>
|   |     |   |   |         `-DeclRefExpr 0x195dd5401d0 <col:30> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   |     |   |   `-CharacterLiteral 0x195dd540290 <col:35> 'int' 48
|   |     |   |-IfStmt 0x195dd540560 <line:90:13, line:91:22>
|   |     |   | |-BinaryOperator 0x195dd540528 <line:90:17, col:44> 'int' '||'
|   |     |   | | |-ParenExpr 0x195dd5403e8 <col:17, col:28> 'int'
|   |     |   | | | `-BinaryOperator 0x195dd5403c8 <col:18, col:27> 'int' '<'
|   |     |   | | |   |-ImplicitCastExpr 0x195dd540398 <col:18> 'int' <LValueToRValue>
|   |     |   | | |   | `-DeclRefExpr 0x195dd5402e8 <col:18> 'int' lvalue Var 0x195dd53ce98 'n' 'int'
|   |     |   | | |   `-ImplicitCastExpr 0x195dd5403b0 <col:22, col:27> 'int' <LValueToRValue>
|   |     |   | | |     `-ArraySubscriptExpr 0x195dd540378 <col:22, col:27> 'const int' lvalue
|   |     |   | | |       |-ImplicitCastExpr 0x195dd540348 <col:22> 'const int *' <ArrayToPointerDecay>
|   |     |   | | |       | `-DeclRefExpr 0x195dd540308 <col:22> 'const int [8]' lvalue Var 0x195dd53c7e0 'min' 'const int [8]'
|   |     |   | | |       `-ImplicitCastExpr 0x195dd540360 <col:26> 'int' <LValueToRValue>
|   |     |   | | |         `-DeclRefExpr 0x195dd540328 <col:26> 'int' lvalue Var 0x195dd53cf18 'i' 'int'
|   |     |   | | `-ParenExpr 0x195dd540508 <col:33, col:44> 'int'
|   |     |   | |   `-BinaryOperator 0x195dd5404e8 <col:34, col:43> 'int' '>'
|   |     |   | |     |-ImplicitCastExpr 0x195dd5404b8 <col:34> 'int' <LValueToRValue>
|   |     |   | |     | `-DeclRefExpr 0x195dd540408 <col:34> 'int' lvalue Var 0x195dd53ce98 'n' 'int'
|   |     |   | |     `-ImplicitCastExpr 0x195dd5404d0 <col:38, col:43> 'int' <LValueToRValue>
|   |     |   | |       `-ArraySubscriptExpr 0x195dd540498 <col:38, col:43> 'const int' lvalue
|   |     |   | |         |-ImplicitCastExpr 0x195dd540468 <col:38> 'const int *' <ArrayToPointerDecay>
|   |     |   | |         | `-DeclRefExpr 0x195dd540428 <col:38> 'const int [8]' lvalue Var 0x195dd53cb18 'max' 'const int [8]'
|   |     |   | |         `-ImplicitCastExpr 0x195dd540480 <col:42> 'int' <LValueToRValue>
|   |     |   | |           `-DeclRefExpr 0x195dd540448 <col:42> 'int' lvalue Var 0x195dd53cf18 'i' 'int'
|   |     |   | `-GotoStmt 0x195dd540548 <line:91:17, col:22> 'err' 0x195dd538280
|   |     |   |-IfStmt 0x195dd5408b0 <line:92:13, line:97:13>
|   |     |   | |-ImplicitCastExpr 0x195dd540598 <line:92:17> 'struct tm *' <LValueToRValue>
|   |     |   | | `-DeclRefExpr 0x195dd540578 <col:17> 'struct tm *' lvalue ParmVar 0x195dd53c510 'tm' 'struct tm *'
|   |     |   | `-CompoundStmt 0x195dd540898 <col:21, line:97:13>
|   |     |   |   `-IfStmt 0x195dd540870 <line:93:17, line:96:35> has_else
|   |     |   |     |-BinaryOperator 0x195dd540610 <line:93:21, col:26> 'int' '=='
|   |     |   |     | |-ImplicitCastExpr 0x195dd5405f8 <col:21> 'int' <LValueToRValue>
|   |     |   |     | | `-DeclRefExpr 0x195dd5405b0 <col:21> 'int' lvalue Var 0x195dd53cf18 'i' 'int'
|   |     |   |     | `-IntegerLiteral 0x195dd5405d0 <col:26> 'int' 6
|   |     |   |     |-BinaryOperator 0x195dd5406e8 <line:94:21, col:34> 'int' '='
|   |     |   |     | |-DeclRefExpr 0x195dd540630 <col:21> 'int' lvalue Var 0x195dd53f748 'offset' 'int'
|   |     |   |     | `-BinaryOperator 0x195dd5406c8 <col:30, col:34> 'int' '*'
|   |     |   |     |   |-ImplicitCastExpr 0x195dd5406b0 <col:30> 'int' <LValueToRValue>
|   |     |   |     |   | `-DeclRefExpr 0x195dd540668 <col:30> 'int' lvalue Var 0x195dd53ce98 'n' 'int'
|   |     |   |     |   `-IntegerLiteral 0x195dd540688 <col:34> 'int' 3600
|   |     |   |     `-IfStmt 0x195dd540858 <line:95:22, line:96:35>
|   |     |   |       |-BinaryOperator 0x195dd540768 <line:95:26, col:31> 'int' '=='
|   |     |   |       | |-ImplicitCastExpr 0x195dd540750 <col:26> 'int' <LValueToRValue>
|   |     |   |       | | `-DeclRefExpr 0x195dd540708 <col:26> 'int' lvalue Var 0x195dd53cf18 'i' 'int'
|   |     |   |       | `-IntegerLiteral 0x195dd540728 <col:31> 'int' 7
|   |     |   |       `-CompoundAssignOperator 0x195dd540828 <line:96:21, col:35> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |   |         |-DeclRefExpr 0x195dd540788 <col:21> 'int' lvalue Var 0x195dd53f748 'offset' 'int'
|   |     |   |         `-BinaryOperator 0x195dd540808 <col:31, col:35> 'int' '*'
|   |     |   |           |-ImplicitCastExpr 0x195dd5407f0 <col:31> 'int' <LValueToRValue>
|   |     |   |           | `-DeclRefExpr 0x195dd5407a8 <col:31> 'int' lvalue Var 0x195dd53ce98 'n' 'int'
|   |     |   |           `-IntegerLiteral 0x195dd5407c8 <col:35> 'int' 60
|   |     |   `-UnaryOperator 0x195dd5408e8 <line:98:13, col:14> 'int' postfix '++'
|   |     |     `-DeclRefExpr 0x195dd5408c8 <col:13> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   |     `-IfStmt 0x195dd540cf8 <line:100:9, line:101:20>
|   |       |-BinaryOperator 0x195dd540ca0 <line:100:13, col:66> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x195dd540c88 <col:13> 'int' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x195dd540988 <col:13> 'int' lvalue Var 0x195dd53f748 'offset' 'int'
|   |       | `-UnaryOperator 0x195dd540c70 <col:23, col:66> 'int' prefix '!' cannot overflow
|   |       |   `-CallExpr 0x195dd540c20 <col:24, col:66> 'int'
|   |       |     |-ImplicitCastExpr 0x195dd540c08 <col:24> 'int (*)()' <FunctionToPointerDecay>
|   |       |     | `-DeclRefExpr 0x195dd540ac8 <col:24> 'int ()' Function 0x195dd540a00 'OPENSSL_gmtime_adj' 'int ()'
|   |       |     |-ImplicitCastExpr 0x195dd540c58 <col:43> 'struct tm *' <LValueToRValue>
|   |       |     | `-DeclRefExpr 0x195dd540ae8 <col:43> 'struct tm *' lvalue ParmVar 0x195dd53c510 'tm' 'struct tm *'
|   |       |     |-IntegerLiteral 0x195dd540b08 <col:47> 'int' 0
|   |       |     `-BinaryOperator 0x195dd540bb8 <col:50, col:59> 'int' '*'
|   |       |       |-ImplicitCastExpr 0x195dd540b88 <col:50> 'int' <LValueToRValue>
|   |       |       | `-DeclRefExpr 0x195dd540b30 <col:50> 'int' lvalue Var 0x195dd53f748 'offset' 'int'
|   |       |       `-ImplicitCastExpr 0x195dd540ba0 <col:59> 'int' <LValueToRValue>
|   |       |         `-DeclRefExpr 0x195dd540b50 <col:59> 'int' lvalue Var 0x195dd53f538 'offsign' 'int'
|   |       `-ReturnStmt 0x195dd540ce8 <line:101:13, col:20>
|   |         `-IntegerLiteral 0x195dd540cc0 <col:20> 'int' 0
|   |-ReturnStmt 0x195dd540e18 <line:103:5, col:17>
|   | `-BinaryOperator 0x195dd540df8 <col:12, col:17> 'int' '=='
|   |   |-ImplicitCastExpr 0x195dd540dc8 <col:12> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x195dd540d88 <col:12> 'int' lvalue Var 0x195dd53d018 'o' 'int'
|   |   `-ImplicitCastExpr 0x195dd540de0 <col:17> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x195dd540da8 <col:17> 'int' lvalue Var 0x195dd53cf98 'l' 'int'
|   `-LabelStmt 0x195dd540e60 <line:104:2, line:105:12> 'err'
|     `-ReturnStmt 0x195dd540e50 <col:5, col:12>
|       `-IntegerLiteral 0x195dd540e28 <col:12> 'int' 0
|-FunctionDecl 0x195dd540fc0 <line:108:1, line:111:1> line:108:5 invalid ASN1_UTCTIME_check 'int (const int *)'
| |-ParmVarDecl 0x195dd540ef8 <col:24, col:44> col:44 invalid d 'const int *'
| `-CompoundStmt 0x195dd541108 <line:109:1, line:111:1>
|-FunctionDecl 0x195dd5422b0 <line:113:1, line:129:1> line:113:5 invalid ASN1_UTCTIME_set_string 'int (int *, const char *)'
| |-ParmVarDecl 0x195dd541130 <col:29, col:43> col:43 invalid s 'int *'
| |-ParmVarDecl 0x195dd5421d0 <col:46, col:58> col:58 used str 'const char *'
| `-CompoundStmt 0x195dd5429c0 <line:114:1, line:129:1>
|   `-IfStmt 0x195dd542998 <line:120:5, line:128:18> has_else
|     |-OpaqueValueExpr 0x195dd542980 <<invalid sloc>> '_Bool'
|     |-CompoundStmt 0x195dd542908 <line:120:33, line:127:5>
|     | |-IfStmt 0x195dd542898 <line:121:9, line:125:9>
|     | | |-OpaqueValueExpr 0x195dd542880 <<invalid sloc>> '_Bool'
|     | | `-CompoundStmt 0x195dd542868 <line:121:24, line:125:9>
|     | |   `-IfStmt 0x195dd542850 <line:122:13, line:123:24>
|     | |     |-OpaqueValueExpr 0x195dd542838 <<invalid sloc>> '_Bool'
|     | |     `-ReturnStmt 0x195dd542828 <col:17, col:24>
|     | |       `-IntegerLiteral 0x195dd542800 <col:24> 'int' 0
|     | `-ReturnStmt 0x195dd5428f8 <line:126:9, col:18>
|     |   `-ParenExpr 0x195dd5428d8 <col:16, col:18> 'int'
|     |     `-IntegerLiteral 0x195dd5428b0 <col:17> 'int' 1
|     `-ReturnStmt 0x195dd542970 <line:128:9, col:18>
|       `-ParenExpr 0x195dd542950 <col:16, col:18> 'int'
|         `-IntegerLiteral 0x195dd542928 <col:17> 'int' 0
|-FunctionDecl 0x195dd5423b0 <line:118:16> col:16 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x195dd542450 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x195dd542b80 <line:131:1, line:134:1> line:131:15 invalid ASN1_UTCTIME_set 'int *(int *, time_t)'
| |-ParmVarDecl 0x195dd5429f0 <col:32, col:46> col:46 invalid s 'int *'
| |-ParmVarDecl 0x195dd542a68 <col:49, col:56> col:56 used t 'time_t':'long long'
| `-CompoundStmt 0x195dd542de0 <line:132:1, line:134:1>
|-FunctionDecl 0x195dd5430d0 <line:136:1, line:188:1> line:136:15 invalid ASN1_UTCTIME_adj 'int *(int *, time_t, int, long)'
| |-ParmVarDecl 0x195dd542e08 <col:32, col:46> col:46 invalid s 'int *'
| |-ParmVarDecl 0x195dd542e80 <col:49, col:56> col:56 used t 'time_t':'long long'
| |-ParmVarDecl 0x195dd542f00 <line:137:32, col:36> col:36 used offset_day 'int'
| |-ParmVarDecl 0x195dd542f80 <col:48, col:53> col:53 used offset_sec 'long'
| `-CompoundStmt 0x195dd545200 <line:138:1, line:188:1>
|   |-DeclStmt 0x195dd53d1e8 <line:139:5, col:12>
|   | `-VarDecl 0x195dd53d180 <col:5, col:11> col:11 used p 'char *'
|   |-DeclStmt 0x195dd53d290 <line:140:5, col:18>
|   | `-VarDecl 0x195dd53d228 <col:5, col:16> col:16 used ts 'struct tm *'
|   |-DeclStmt 0x195dd53d330 <line:141:5, col:19>
|   | `-VarDecl 0x195dd53d2c8 <col:5, col:15> col:15 used data 'struct tm':'struct tm'
|   |-DeclStmt 0x195dd53d400 <line:142:5, col:20>
|   | `-VarDecl 0x195dd53d358 <col:5, col:18> col:12 used len 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x195dd53d3e8 <col:18> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x195dd53d3c0 <col:18> 'int' 20
|   |-DeclStmt 0x195dd53d4c0 <line:143:5, col:19>
|   | `-VarDecl 0x195dd53d430 <col:5, col:18> col:9 used free_s 'int' cinit
|   |   `-IntegerLiteral 0x195dd53d498 <col:18> 'int' 0
|   |-IfStmt 0x195dd53d880 <line:145:5, line:150:5>
|   | |-OpaqueValueExpr 0x195dd53d868 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x195dd53d848 <line:145:20, line:150:5>
|   |   |-IfStmt 0x195dd53d7b0 <line:147:9, line:148:18>
|   |   | |-OpaqueValueExpr 0x195dd53d798 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x195dd53d780 <col:13, col:18> 'err' 0x195dd53d730
|   |   `-BinaryOperator 0x195dd53d828 <line:149:9, col:18> 'int' '='
|   |     |-DeclRefExpr 0x195dd53d7c8 <col:9> 'int' lvalue Var 0x195dd53d430 'free_s' 'int'
|   |     `-IntegerLiteral 0x195dd53d800 <col:18> 'int' 1
|   |-BinaryOperator 0x195dd53dae0 <line:152:5, col:34> 'struct tm *' '='
|   | |-DeclRefExpr 0x195dd53d898 <col:5> 'struct tm *' lvalue Var 0x195dd53d228 'ts' 'struct tm *'
|   | `-ImplicitCastExpr 0x195dd53dac8 <col:10, col:34> 'struct tm *' <IntegralToPointer>
|   |   `-CallExpr 0x195dd53da98 <col:10, col:34> 'int'
|   |     |-ImplicitCastExpr 0x195dd53da80 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x195dd53d9c0 <col:10> 'int ()' Function 0x195dd53d8f8 'OPENSSL_gmtime' 'int ()'
|   |     |-UnaryOperator 0x195dd53da18 <col:25, col:26> 'time_t *' prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0x195dd53d9e0 <col:26> 'time_t':'long long' lvalue ParmVar 0x195dd542e80 't' 'time_t':'long long'
|   |     `-UnaryOperator 0x195dd53da68 <col:29, col:30> 'struct tm *' prefix '&' cannot overflow
|   |       `-DeclRefExpr 0x195dd53da30 <col:30> 'struct tm':'struct tm' lvalue Var 0x195dd53d2c8 'data' 'struct tm':'struct tm'
|   |-IfStmt 0x195dd53dc10 <line:153:5, line:154:14>
|   | |-BinaryOperator 0x195dd53dbd8 <line:153:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x195dd53dba8 <.//openssl//file_jk/before\crypto\asn1\a_utctm.c:153:9> 'struct tm *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x195dd53db00 <col:9> 'struct tm *' lvalue Var 0x195dd53d228 'ts' 'struct tm *'
|   | | `-ImplicitCastExpr 0x195dd53dbc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'struct tm *' <BitCast>
|   | |   `-ParenExpr 0x195dd53db88 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x195dd53db60 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x195dd53db20 <col:26> 'int' 0
|   | `-GotoStmt 0x195dd53dbf8 <.//openssl//file_jk/before\crypto\asn1\a_utctm.c:154:9, col:14> 'err' 0x195dd53d730
|   |-IfStmt 0x195dd53de60 <line:156:5, line:159:5>
|   | |-BinaryOperator 0x195dd53dcc8 <line:156:9, col:23> 'int' '||'
|   | | |-ImplicitCastExpr 0x195dd53dc98 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x195dd53dc28 <col:9> 'int' lvalue ParmVar 0x195dd542f00 'offset_day' 'int'
|   | | `-ImplicitCastExpr 0x195dd53dcb0 <col:23> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x195dd53dc60 <col:23> 'long' lvalue ParmVar 0x195dd542f80 'offset_sec' 'long'
|   | `-CompoundStmt 0x195dd53de48 <col:35, line:159:5>
|   |   `-IfStmt 0x195dd53de30 <line:157:9, line:158:18>
|   |     |-UnaryOperator 0x195dd53de00 <line:157:13, col:59> 'int' prefix '!' cannot overflow
|   |     | `-CallExpr 0x195dd53dd80 <col:14, col:59> 'int'
|   |     |   |-ImplicitCastExpr 0x195dd53dd68 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |     |   | `-DeclRefExpr 0x195dd53dce8 <col:14> 'int ()' Function 0x195dd540a00 'OPENSSL_gmtime_adj' 'int ()'
|   |     |   |-ImplicitCastExpr 0x195dd53ddb8 <col:33> 'struct tm *' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x195dd53dd08 <col:33> 'struct tm *' lvalue Var 0x195dd53d228 'ts' 'struct tm *'
|   |     |   |-ImplicitCastExpr 0x195dd53ddd0 <col:37> 'int' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x195dd53dd28 <col:37> 'int' lvalue ParmVar 0x195dd542f00 'offset_day' 'int'
|   |     |   `-ImplicitCastExpr 0x195dd53dde8 <col:49> 'long' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x195dd53dd48 <col:49> 'long' lvalue ParmVar 0x195dd542f80 'offset_sec' 'long'
|   |     `-GotoStmt 0x195dd53de18 <line:158:13, col:18> 'err' 0x195dd53d730
|   |-IfStmt 0x195dd53e080 <line:161:5, line:162:14>
|   | |-BinaryOperator 0x195dd53e048 <line:161:9, col:50> 'int' '||'
|   | | |-ParenExpr 0x195dd53df40 <col:9, col:26> 'int'
|   | | | `-BinaryOperator 0x195dd53df20 <col:10, col:24> 'int' '<'
|   | | |   |-ImplicitCastExpr 0x195dd53df08 <col:10, col:14> 'int' <LValueToRValue>
|   | | |   | `-MemberExpr 0x195dd53deb0 <col:10, col:14> 'int' lvalue ->tm_year 0x195dd518b58
|   | | |   |   `-ImplicitCastExpr 0x195dd53de98 <col:10> 'struct tm *' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x195dd53de78 <col:10> 'struct tm *' lvalue Var 0x195dd53d228 'ts' 'struct tm *'
|   | | |   `-IntegerLiteral 0x195dd53dee0 <col:24> 'int' 50
|   | | `-ParenExpr 0x195dd53e028 <col:31, col:50> 'int'
|   | |   `-BinaryOperator 0x195dd53e008 <col:32, col:47> 'int' '>='
|   | |     |-ImplicitCastExpr 0x195dd53dff0 <col:32, col:36> 'int' <LValueToRValue>
|   | |     | `-MemberExpr 0x195dd53df98 <col:32, col:36> 'int' lvalue ->tm_year 0x195dd518b58
|   | |     |   `-ImplicitCastExpr 0x195dd53df80 <col:32> 'struct tm *' <LValueToRValue>
|   | |     |     `-DeclRefExpr 0x195dd53df60 <col:32> 'struct tm *' lvalue Var 0x195dd53d228 'ts' 'struct tm *'
|   | |     `-IntegerLiteral 0x195dd53dfc8 <col:47> 'int' 150
|   | `-GotoStmt 0x195dd53e068 <line:162:9, col:14> 'err' 0x195dd53d730
|   |-IfStmt 0x195dd543878 <line:165:5, line:173:5>
|   | |-OpaqueValueExpr 0x195dd543860 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x195dd543840 <line:165:51, line:173:5>
|   |   |-BinaryOperator 0x195dd543448 <line:166:9, col:31> 'char *' '='
|   |   | |-DeclRefExpr 0x195dd543288 <col:9> 'char *' lvalue Var 0x195dd53d180 'p' 'char *'
|   |   | `-ImplicitCastExpr 0x195dd543430 <col:13, col:31> 'char *' <IntegralToPointer>
|   |   |   `-CallExpr 0x195dd5433f0 <col:13, col:31> 'int'
|   |   |     |-ImplicitCastExpr 0x195dd5433d8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x195dd543398 <col:13> 'int ()' Function 0x195dd5432d0 'OPENSSL_malloc' 'int ()'
|   |   |     `-ImplicitCastExpr 0x195dd543418 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x195dd5433b8 <col:28> 'size_t':'unsigned long long' lvalue Var 0x195dd53d358 'len' 'size_t':'unsigned long long'
|   |   `-IfStmt 0x195dd5436a0 <line:167:9, line:170:9>
|   |     |-BinaryOperator 0x195dd543540 <line:167:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |     | |-ImplicitCastExpr 0x195dd543510 <.//openssl//file_jk/before\crypto\asn1\a_utctm.c:167:13> 'char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x195dd543468 <col:13> 'char *' lvalue Var 0x195dd53d180 'p' 'char *'
|   |     | `-ImplicitCastExpr 0x195dd543528 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |     |   `-ParenExpr 0x195dd5434f0 <col:17, col:27> 'void *'
|   |     |     `-CStyleCastExpr 0x195dd5434c8 <col:18, col:26> 'void *' <NullToPointer>
|   |     |       `-IntegerLiteral 0x195dd543488 <col:26> 'int' 0
|   |     `-CompoundStmt 0x195dd543688 <.//openssl//file_jk/before\crypto\asn1\a_utctm.c:167:24, line:170:9>
|   |       `-GotoStmt 0x195dd543670 <line:169:13, col:18> 'err' 0x195dd53d730
|   |-CallExpr 0x195dd543d98 <line:175:5, line:177:28> 'int'
|   | |-ImplicitCastExpr 0x195dd543d80 <line:175:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x195dd543980 <col:5> 'int ()' Function 0x195dd5438b8 'BIO_snprintf' 'int ()'
|   | |-ImplicitCastExpr 0x195dd543e00 <col:18> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x195dd5439a0 <col:18> 'char *' lvalue Var 0x195dd53d180 'p' 'char *'
|   | |-ImplicitCastExpr 0x195dd543e18 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x195dd5439c0 <col:21> 'size_t':'unsigned long long' lvalue Var 0x195dd53d358 'len' 'size_t':'unsigned long long'
|   | |-ImplicitCastExpr 0x195dd543e30 <col:26> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x195dd543a18 <col:26> 'char [26]' lvalue "%02d%02d%02d%02d%02d%02dZ"
|   | |-BinaryOperator 0x195dd543af8 <col:55, col:69> 'int' '%'
|   | | |-ImplicitCastExpr 0x195dd543ae0 <col:55, col:59> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x195dd543a88 <col:55, col:59> 'int' lvalue ->tm_year 0x195dd518b58
|   | | |   `-ImplicitCastExpr 0x195dd543a70 <col:55> 'struct tm *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x195dd543a50 <col:55> 'struct tm *' lvalue Var 0x195dd53d228 'ts' 'struct tm *'
|   | | `-IntegerLiteral 0x195dd543ab8 <col:69> 'int' 100
|   | |-BinaryOperator 0x195dd543bc0 <line:176:18, col:31> 'int' '+'
|   | | |-ImplicitCastExpr 0x195dd543ba8 <col:18, col:22> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x195dd543b50 <col:18, col:22> 'int' lvalue ->tm_mon 0x195dd518ae8
|   | | |   `-ImplicitCastExpr 0x195dd543b38 <col:18> 'struct tm *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x195dd543b18 <col:18> 'struct tm *' lvalue Var 0x195dd53d228 'ts' 'struct tm *'
|   | | `-IntegerLiteral 0x195dd543b80 <col:31> 'int' 1
|   | |-ImplicitCastExpr 0x195dd543e48 <col:34, col:38> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x195dd543c18 <col:34, col:38> 'int' lvalue ->tm_mday 0x195dd518a78
|   | |   `-ImplicitCastExpr 0x195dd543c00 <col:34> 'struct tm *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x195dd543be0 <col:34> 'struct tm *' lvalue Var 0x195dd53d228 'ts' 'struct tm *'
|   | |-ImplicitCastExpr 0x195dd543e60 <col:47, col:51> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x195dd543c80 <col:47, col:51> 'int' lvalue ->tm_hour 0x195dd518a08
|   | |   `-ImplicitCastExpr 0x195dd543c68 <col:47> 'struct tm *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x195dd543c48 <col:47> 'struct tm *' lvalue Var 0x195dd53d228 'ts' 'struct tm *'
|   | |-ImplicitCastExpr 0x195dd543e78 <col:60, col:64> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x195dd543ce8 <col:60, col:64> 'int' lvalue ->tm_min 0x195dd518998
|   | |   `-ImplicitCastExpr 0x195dd543cd0 <col:60> 'struct tm *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x195dd543cb0 <col:60> 'struct tm *' lvalue Var 0x195dd53d228 'ts' 'struct tm *'
|   | `-ImplicitCastExpr 0x195dd543e90 <line:177:18, col:22> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x195dd543d50 <col:18, col:22> 'int' lvalue ->tm_sec 0x195dd518928
|   |     `-ImplicitCastExpr 0x195dd543d38 <col:18> 'struct tm *' <LValueToRValue>
|   |       `-DeclRefExpr 0x195dd543d18 <col:18> 'struct tm *' lvalue Var 0x195dd53d228 'ts' 'struct tm *'
|   |-LabelStmt 0x195dd5440c0 <line:184:2, col:5> 'err'
|   | `-NullStmt 0x195dd5440b8 <col:5>
|   `-ReturnStmt 0x195dd544178 <line:187:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|     `-ImplicitCastExpr 0x195dd544160 <col:17, col:27> 'int *' <NullToPointer>
|       `-ParenExpr 0x195dd544140 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x195dd544118 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x195dd5440d8 <col:26> 'int' 0
|-FunctionDecl 0x195dd545430 <.//openssl//file_jk/before\crypto\asn1\a_utctm.c:190:1, line:213:1> line:190:5 invalid ASN1_UTCTIME_cmp_time_t 'int (const int *, time_t)'
| |-ParmVarDecl 0x195dd545298 <col:29, col:49> col:49 invalid s 'const int *'
| |-ParmVarDecl 0x195dd545310 <col:52, col:59> col:59 used t 'time_t':'long long'
| `-CompoundStmt 0x195dd546060 <line:191:1, line:213:1>
|   |-DeclStmt 0x195dd545620 <line:192:5, col:23>
|   | |-VarDecl 0x195dd545518 <col:5, col:15> col:15 used stm 'struct tm':'struct tm'
|   | `-VarDecl 0x195dd5455a0 <col:5, col:20> col:20 used ttm 'struct tm':'struct tm'
|   |-DeclStmt 0x195dd545750 <line:193:5, col:17>
|   | |-VarDecl 0x195dd545650 <col:5, col:9> col:9 used day 'int'
|   | `-VarDecl 0x195dd5456d0 <col:5, col:14> col:14 used sec 'int'
|   |-IfStmt 0x195dd545820 <line:195:5, line:196:17>
|   | |-OpaqueValueExpr 0x195dd545808 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x195dd5457f8 <col:9, col:17>
|   |   `-UnaryOperator 0x195dd5457e0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x195dd5457b8 <col:17> 'int' 2
|   |-IfStmt 0x195dd5459a8 <line:198:5, line:199:17>
|   | |-UnaryOperator 0x195dd545940 <line:198:9, col:33> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x195dd545910 <col:10, col:33> 'int'
|   | |   |-ImplicitCastExpr 0x195dd5458f8 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x195dd545838 <col:10> 'int ()' Function 0x195dd53d8f8 'OPENSSL_gmtime' 'int ()'
|   | |   |-UnaryOperator 0x195dd545890 <col:25, col:26> 'time_t *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x195dd545858 <col:26> 'time_t':'long long' lvalue ParmVar 0x195dd545310 't' 'time_t':'long long'
|   | |   `-UnaryOperator 0x195dd5458e0 <col:29, col:30> 'struct tm *' prefix '&' cannot overflow
|   | |     `-DeclRefExpr 0x195dd5458a8 <col:30> 'struct tm':'struct tm' lvalue Var 0x195dd5455a0 'ttm' 'struct tm':'struct tm'
|   | `-ReturnStmt 0x195dd545998 <line:199:9, col:17>
|   |   `-UnaryOperator 0x195dd545980 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x195dd545958 <col:17> 'int' 2
|   |-IfStmt 0x195dd545ca0 <line:201:5, line:202:17>
|   | |-UnaryOperator 0x195dd545c38 <line:201:9, col:52> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x195dd545bf8 <col:10, col:52> 'int'
|   | |   |-ImplicitCastExpr 0x195dd545be0 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x195dd545ab0 <col:10> 'int ()' Function 0x195dd5459e8 'OPENSSL_gmtime_diff' 'int ()'
|   | |   |-UnaryOperator 0x195dd545b08 <col:30, col:31> 'int *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x195dd545ad0 <col:31> 'int' lvalue Var 0x195dd545650 'day' 'int'
|   | |   |-UnaryOperator 0x195dd545b58 <col:36, col:37> 'int *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x195dd545b20 <col:37> 'int' lvalue Var 0x195dd5456d0 'sec' 'int'
|   | |   |-UnaryOperator 0x195dd545b90 <col:42, col:43> 'struct tm *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x195dd545b70 <col:43> 'struct tm':'struct tm' lvalue Var 0x195dd5455a0 'ttm' 'struct tm':'struct tm'
|   | |   `-UnaryOperator 0x195dd545bc8 <col:48, col:49> 'struct tm *' prefix '&' cannot overflow
|   | |     `-DeclRefExpr 0x195dd545ba8 <col:49> 'struct tm':'struct tm' lvalue Var 0x195dd545518 'stm' 'struct tm':'struct tm'
|   | `-ReturnStmt 0x195dd545c90 <line:202:9, col:17>
|   |   `-UnaryOperator 0x195dd545c78 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x195dd545c50 <col:17> 'int' 2
|   |-IfStmt 0x195dd545d70 <line:204:5, line:205:16>
|   | |-BinaryOperator 0x195dd545d18 <line:204:9, col:15> 'int' '>'
|   | | |-ImplicitCastExpr 0x195dd545d00 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x195dd545cb8 <col:9> 'int' lvalue Var 0x195dd545650 'day' 'int'
|   | | `-IntegerLiteral 0x195dd545cd8 <col:15> 'int' 0
|   | `-ReturnStmt 0x195dd545d60 <line:205:9, col:16>
|   |   `-IntegerLiteral 0x195dd545d38 <col:16> 'int' 1
|   |-IfStmt 0x195dd545e58 <line:206:5, line:207:17>
|   | |-BinaryOperator 0x195dd545de8 <line:206:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x195dd545dd0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x195dd545d88 <col:9> 'int' lvalue Var 0x195dd545650 'day' 'int'
|   | | `-IntegerLiteral 0x195dd545da8 <col:15> 'int' 0
|   | `-ReturnStmt 0x195dd545e48 <line:207:9, col:17>
|   |   `-UnaryOperator 0x195dd545e30 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x195dd545e08 <col:17> 'int' 1
|   |-IfStmt 0x195dd545f28 <line:208:5, line:209:16>
|   | |-BinaryOperator 0x195dd545ed0 <line:208:9, col:15> 'int' '>'
|   | | |-ImplicitCastExpr 0x195dd545eb8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x195dd545e70 <col:9> 'int' lvalue Var 0x195dd5456d0 'sec' 'int'
|   | | `-IntegerLiteral 0x195dd545e90 <col:15> 'int' 0
|   | `-ReturnStmt 0x195dd545f18 <line:209:9, col:16>
|   |   `-IntegerLiteral 0x195dd545ef0 <col:16> 'int' 1
|   |-IfStmt 0x195dd546010 <line:210:5, line:211:17>
|   | |-BinaryOperator 0x195dd545fa0 <line:210:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x195dd545f88 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x195dd545f40 <col:9> 'int' lvalue Var 0x195dd5456d0 'sec' 'int'
|   | | `-IntegerLiteral 0x195dd545f60 <col:15> 'int' 0
|   | `-ReturnStmt 0x195dd546000 <line:211:9, col:17>
|   |   `-UnaryOperator 0x195dd545fe8 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x195dd545fc0 <col:17> 'int' 1
|   `-ReturnStmt 0x195dd546050 <line:212:5, col:12>
|     `-IntegerLiteral 0x195dd546028 <col:12> 'int' 0
`-FunctionDecl 0x195dd53e1c8 <line:215:1, line:254:1> line:215:5 invalid ASN1_UTCTIME_print 'int (int *, const int *)'
  |-ParmVarDecl 0x195dd5460d8 <col:24, col:29> col:29 invalid bp 'int *'
  |-ParmVarDecl 0x195dd546158 <col:33, col:53> col:53 invalid tm 'const int *'
  `-CompoundStmt 0x195dd549170 <line:216:1, line:254:1>
    |-DeclStmt 0x195dd53e310 <line:217:5, col:18>
    | `-VarDecl 0x195dd53e2a8 <col:5, col:17> col:17 used v 'const char *'
    |-DeclStmt 0x195dd53e3d0 <line:218:5, col:16>
    | `-VarDecl 0x195dd53e340 <col:5, col:15> col:9 used gmt 'int' cinit
    |   `-IntegerLiteral 0x195dd53e3a8 <col:15> 'int' 0
    |-DeclStmt 0x195dd53e468 <line:219:5, col:10>
    | `-VarDecl 0x195dd53e400 <col:5, col:9> col:9 used i 'int'
    |-DeclStmt 0x195dd53e8a8 <line:220:5, col:49>
    | |-VarDecl 0x195dd53e498 <col:5, col:13> col:9 used y 'int' cinit
    | | `-IntegerLiteral 0x195dd53e500 <col:13> 'int' 0
    | |-VarDecl 0x195dd53e540 <col:5, col:20> col:16 used M 'int' cinit
    | | `-IntegerLiteral 0x195dd53e5a8 <col:20> 'int' 0
    | |-VarDecl 0x195dd53e5e8 <col:5, col:27> col:23 used d 'int' cinit
    | | `-IntegerLiteral 0x195dd53e650 <col:27> 'int' 0
    | |-VarDecl 0x195dd53e690 <col:5, col:34> col:30 used h 'int' cinit
    | | `-IntegerLiteral 0x195dd53e6f8 <col:34> 'int' 0
    | |-VarDecl 0x195dd53e738 <col:5, col:41> col:37 used m 'int' cinit
    | | `-IntegerLiteral 0x195dd53e7a0 <col:41> 'int' 0
    | `-VarDecl 0x195dd53e7e0 <col:5, col:48> col:44 used s 'int' cinit
    |   `-IntegerLiteral 0x195dd53e848 <col:48> 'int' 0
    |-IfStmt 0x195dd53ea18 <line:225:5, line:226:14>
    | |-BinaryOperator 0x195dd53e990 <line:225:9, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x195dd53e978 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x195dd53e930 <col:9> 'int' lvalue Var 0x195dd53e400 'i' 'int'
    | | `-IntegerLiteral 0x195dd53e950 <col:13> 'int' 10
    | `-GotoStmt 0x195dd53ea00 <line:226:9, col:14> 'err' 0x195dd53e9b0
    |-IfStmt 0x195dd53ebf0 <line:227:5, line:228:15>
    | |-BinaryOperator 0x195dd53eb50 <line:227:9, col:21> 'int' '=='
    | | |-ImplicitCastExpr 0x195dd53eb38 <col:9, col:16> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x195dd53eb20 <col:9, col:16> 'char' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x195dd53eae8 <col:9, col:16> 'const char' lvalue
    | | |     |-ImplicitCastExpr 0x195dd53ead0 <col:9> 'const char *' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x195dd53ea30 <col:9> 'const char *' lvalue Var 0x195dd53e2a8 'v' 'const char *'
    | | |     `-BinaryOperator 0x195dd53eab0 <col:11, col:15> 'int' '-'
    | | |       |-ImplicitCastExpr 0x195dd53ea98 <col:11> 'int' <LValueToRValue>
    | | |       | `-DeclRefExpr 0x195dd53ea50 <col:11> 'int' lvalue Var 0x195dd53e400 'i' 'int'
    | | |       `-IntegerLiteral 0x195dd53ea70 <col:15> 'int' 1
    | | `-CharacterLiteral 0x195dd53eb08 <col:21> 'int' 90
    | `-BinaryOperator 0x195dd53ebd0 <line:228:9, col:15> 'int' '='
    |   |-DeclRefExpr 0x195dd53eb70 <col:9> 'int' lvalue Var 0x195dd53e340 'gmt' 'int'
    |   `-IntegerLiteral 0x195dd53eba8 <col:15> 'int' 1
    |-ForStmt 0x195dd53efa8 <line:229:5, line:231:18>
    | |-BinaryOperator 0x195dd53ec50 <line:229:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x195dd53ec08 <col:10> 'int' lvalue Var 0x195dd53e400 'i' 'int'
    | | `-IntegerLiteral 0x195dd53ec28 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x195dd53ecd0 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x195dd53ecb8 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x195dd53ec70 <col:17> 'int' lvalue Var 0x195dd53e400 'i' 'int'
    | | `-IntegerLiteral 0x195dd53ec90 <col:21> 'int' 10
    | |-UnaryOperator 0x195dd53ed10 <col:25, col:26> 'int' postfix '++'
    | | `-DeclRefExpr 0x195dd53ecf0 <col:25> 'int' lvalue Var 0x195dd53e400 'i' 'int'
    | `-IfStmt 0x195dd53ef90 <line:230:9, line:231:18>
    |   |-BinaryOperator 0x195dd53ef58 <line:230:13, col:40> 'int' '||'
    |   | |-ParenExpr 0x195dd53ee20 <col:13, col:24> 'int'
    |   | | `-BinaryOperator 0x195dd53ee00 <col:14, col:21> 'int' '>'
    |   | |   |-ImplicitCastExpr 0x195dd53ede8 <col:14, col:17> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x195dd53edd0 <col:14, col:17> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x195dd53ed98 <col:14, col:17> 'const char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x195dd53ed68 <col:14> 'const char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x195dd53ed28 <col:14> 'const char *' lvalue Var 0x195dd53e2a8 'v' 'const char *'
    |   | |   |     `-ImplicitCastExpr 0x195dd53ed80 <col:16> 'int' <LValueToRValue>
    |   | |   |       `-DeclRefExpr 0x195dd53ed48 <col:16> 'int' lvalue Var 0x195dd53e400 'i' 'int'
    |   | |   `-CharacterLiteral 0x195dd53edb8 <col:21> 'int' 57
    |   | `-ParenExpr 0x195dd53ef38 <col:29, col:40> 'int'
    |   |   `-BinaryOperator 0x195dd53ef18 <col:30, col:37> 'int' '<'
    |   |     |-ImplicitCastExpr 0x195dd53ef00 <col:30, col:33> 'int' <IntegralCast>
    |   |     | `-ImplicitCastExpr 0x195dd53eee8 <col:30, col:33> 'char' <LValueToRValue>
    |   |     |   `-ArraySubscriptExpr 0x195dd53eeb0 <col:30, col:33> 'const char' lvalue
    |   |     |     |-ImplicitCastExpr 0x195dd53ee80 <col:30> 'const char *' <LValueToRValue>
    |   |     |     | `-DeclRefExpr 0x195dd53ee40 <col:30> 'const char *' lvalue Var 0x195dd53e2a8 'v' 'const char *'
    |   |     |     `-ImplicitCastExpr 0x195dd53ee98 <col:32> 'int' <LValueToRValue>
    |   |     |       `-DeclRefExpr 0x195dd53ee60 <col:32> 'int' lvalue Var 0x195dd53e400 'i' 'int'
    |   |     `-CharacterLiteral 0x195dd53eed0 <col:37> 'int' 48
    |   `-GotoStmt 0x195dd53ef78 <line:231:13, col:18> 'err' 0x195dd53e9b0
    |-BinaryOperator 0x195dd5412c8 <line:232:5, col:40> 'int' '='
    | |-DeclRefExpr 0x195dd53efe0 <col:5> 'int' lvalue Var 0x195dd53e498 'y' 'int'
    | `-BinaryOperator 0x195dd5412a8 <col:9, col:40> 'int' '+'
    |   |-BinaryOperator 0x195dd53f148 <col:9, col:24> 'int' '*'
    |   | |-ParenExpr 0x195dd53f100 <col:9, col:20> 'int'
    |   | | `-BinaryOperator 0x195dd53f0e0 <col:10, col:17> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x195dd53f0c8 <col:10, col:13> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x195dd53f0b0 <col:10, col:13> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x195dd53f078 <col:10, col:13> 'const char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x195dd53f060 <col:10> 'const char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x195dd53f018 <col:10> 'const char *' lvalue Var 0x195dd53e2a8 'v' 'const char *'
    |   | |   |     `-IntegerLiteral 0x195dd53f038 <col:12> 'int' 0
    |   | |   `-CharacterLiteral 0x195dd53f098 <col:17> 'int' 48
    |   | `-IntegerLiteral 0x195dd53f120 <col:24> 'int' 10
    |   `-ParenExpr 0x195dd541288 <col:29, col:40> 'int'
    |     `-BinaryOperator 0x195dd541268 <col:30, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x195dd541250 <col:30, col:33> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x195dd541238 <col:30, col:33> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x195dd541200 <col:30, col:33> 'const char' lvalue
    |       |     |-ImplicitCastExpr 0x195dd5411e8 <col:30> 'const char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x195dd53f168 <col:30> 'const char *' lvalue Var 0x195dd53e2a8 'v' 'const char *'
    |       |     `-IntegerLiteral 0x195dd5411c0 <col:32> 'int' 1
    |       `-CharacterLiteral 0x195dd541220 <col:37> 'int' 48
    |-IfStmt 0x195dd5413e0 <line:233:5, line:234:14>
    | |-BinaryOperator 0x195dd541348 <line:233:9, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x195dd541330 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x195dd5412e8 <col:9> 'int' lvalue Var 0x195dd53e498 'y' 'int'
    | | `-IntegerLiteral 0x195dd541308 <col:13> 'int' 50
    | `-CompoundAssignOperator 0x195dd5413b0 <line:234:9, col:14> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |-DeclRefExpr 0x195dd541368 <col:9> 'int' lvalue Var 0x195dd53e498 'y' 'int'
    |   `-IntegerLiteral 0x195dd541388 <col:14> 'int' 100
    |-BinaryOperator 0x195dd5416a8 <line:235:5, col:40> 'int' '='
    | |-DeclRefExpr 0x195dd5413f8 <col:5> 'int' lvalue Var 0x195dd53e540 'M' 'int'
    | `-BinaryOperator 0x195dd541688 <col:9, col:40> 'int' '+'
    |   |-BinaryOperator 0x195dd541560 <col:9, col:24> 'int' '*'
    |   | |-ParenExpr 0x195dd541518 <col:9, col:20> 'int'
    |   | | `-BinaryOperator 0x195dd5414f8 <col:10, col:17> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x195dd5414e0 <col:10, col:13> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x195dd5414c8 <col:10, col:13> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x195dd541490 <col:10, col:13> 'const char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x195dd541478 <col:10> 'const char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x195dd541430 <col:10> 'const char *' lvalue Var 0x195dd53e2a8 'v' 'const char *'
    |   | |   |     `-IntegerLiteral 0x195dd541450 <col:12> 'int' 2
    |   | |   `-CharacterLiteral 0x195dd5414b0 <col:17> 'int' 48
    |   | `-IntegerLiteral 0x195dd541538 <col:24> 'int' 10
    |   `-ParenExpr 0x195dd541668 <col:29, col:40> 'int'
    |     `-BinaryOperator 0x195dd541648 <col:30, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x195dd541630 <col:30, col:33> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x195dd541618 <col:30, col:33> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x195dd5415e0 <col:30, col:33> 'const char' lvalue
    |       |     |-ImplicitCastExpr 0x195dd5415c8 <col:30> 'const char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x195dd541580 <col:30> 'const char *' lvalue Var 0x195dd53e2a8 'v' 'const char *'
    |       |     `-IntegerLiteral 0x195dd5415a0 <col:32> 'int' 3
    |       `-CharacterLiteral 0x195dd541600 <col:37> 'int' 48
    |-IfStmt 0x195dd541840 <line:236:5, line:237:14>
    | |-BinaryOperator 0x195dd541808 <line:236:9, col:27> 'int' '||'
    | | |-ParenExpr 0x195dd541748 <col:9, col:16> 'int'
    | | | `-BinaryOperator 0x195dd541728 <col:10, col:14> 'int' '>'
    | | |   |-ImplicitCastExpr 0x195dd541710 <col:10> 'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x195dd5416c8 <col:10> 'int' lvalue Var 0x195dd53e540 'M' 'int'
    | | |   `-IntegerLiteral 0x195dd5416e8 <col:14> 'int' 12
    | | `-ParenExpr 0x195dd5417e8 <col:21, col:27> 'int'
    | |   `-BinaryOperator 0x195dd5417c8 <col:22, col:26> 'int' '<'
    | |     |-ImplicitCastExpr 0x195dd5417b0 <col:22> 'int' <LValueToRValue>
    | |     | `-DeclRefExpr 0x195dd541768 <col:22> 'int' lvalue Var 0x195dd53e540 'M' 'int'
    | |     `-IntegerLiteral 0x195dd541788 <col:26> 'int' 1
    | `-GotoStmt 0x195dd541828 <line:237:9, col:14> 'err' 0x195dd53e9b0
    |-BinaryOperator 0x195dd541b08 <line:238:5, col:40> 'int' '='
    | |-DeclRefExpr 0x195dd541858 <col:5> 'int' lvalue Var 0x195dd53e5e8 'd' 'int'
    | `-BinaryOperator 0x195dd541ae8 <col:9, col:40> 'int' '+'
    |   |-BinaryOperator 0x195dd5419c0 <col:9, col:24> 'int' '*'
    |   | |-ParenExpr 0x195dd541978 <col:9, col:20> 'int'
    |   | | `-BinaryOperator 0x195dd541958 <col:10, col:17> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x195dd541940 <col:10, col:13> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x195dd541928 <col:10, col:13> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x195dd5418f0 <col:10, col:13> 'const char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x195dd5418d8 <col:10> 'const char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x195dd541890 <col:10> 'const char *' lvalue Var 0x195dd53e2a8 'v' 'const char *'
    |   | |   |     `-IntegerLiteral 0x195dd5418b0 <col:12> 'int' 4
    |   | |   `-CharacterLiteral 0x195dd541910 <col:17> 'int' 48
    |   | `-IntegerLiteral 0x195dd541998 <col:24> 'int' 10
    |   `-ParenExpr 0x195dd541ac8 <col:29, col:40> 'int'
    |     `-BinaryOperator 0x195dd541aa8 <col:30, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x195dd541a90 <col:30, col:33> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x195dd541a78 <col:30, col:33> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x195dd541a40 <col:30, col:33> 'const char' lvalue
    |       |     |-ImplicitCastExpr 0x195dd541a28 <col:30> 'const char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x195dd5419e0 <col:30> 'const char *' lvalue Var 0x195dd53e2a8 'v' 'const char *'
    |       |     `-IntegerLiteral 0x195dd541a00 <col:32> 'int' 5
    |       `-CharacterLiteral 0x195dd541a60 <col:37> 'int' 48
    |-BinaryOperator 0x195dd541dd8 <line:239:5, col:40> 'int' '='
    | |-DeclRefExpr 0x195dd541b28 <col:5> 'int' lvalue Var 0x195dd53e690 'h' 'int'
    | `-BinaryOperator 0x195dd541db8 <col:9, col:40> 'int' '+'
    |   |-BinaryOperator 0x195dd541c90 <col:9, col:24> 'int' '*'
    |   | |-ParenExpr 0x195dd541c48 <col:9, col:20> 'int'
    |   | | `-BinaryOperator 0x195dd541c28 <col:10, col:17> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x195dd541c10 <col:10, col:13> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x195dd541bf8 <col:10, col:13> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x195dd541bc0 <col:10, col:13> 'const char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x195dd541ba8 <col:10> 'const char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x195dd541b60 <col:10> 'const char *' lvalue Var 0x195dd53e2a8 'v' 'const char *'
    |   | |   |     `-IntegerLiteral 0x195dd541b80 <col:12> 'int' 6
    |   | |   `-CharacterLiteral 0x195dd541be0 <col:17> 'int' 48
    |   | `-IntegerLiteral 0x195dd541c68 <col:24> 'int' 10
    |   `-ParenExpr 0x195dd541d98 <col:29, col:40> 'int'
    |     `-BinaryOperator 0x195dd541d78 <col:30, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x195dd541d60 <col:30, col:33> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x195dd541d48 <col:30, col:33> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x195dd541d10 <col:30, col:33> 'const char' lvalue
    |       |     |-ImplicitCastExpr 0x195dd541cf8 <col:30> 'const char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x195dd541cb0 <col:30> 'const char *' lvalue Var 0x195dd53e2a8 'v' 'const char *'
    |       |     `-IntegerLiteral 0x195dd541cd0 <col:32> 'int' 7
    |       `-CharacterLiteral 0x195dd541d30 <col:37> 'int' 48
    |-BinaryOperator 0x195dd5420a8 <line:240:5, col:40> 'int' '='
    | |-DeclRefExpr 0x195dd541df8 <col:5> 'int' lvalue Var 0x195dd53e738 'm' 'int'
    | `-BinaryOperator 0x195dd542088 <col:9, col:40> 'int' '+'
    |   |-BinaryOperator 0x195dd541f60 <col:9, col:24> 'int' '*'
    |   | |-ParenExpr 0x195dd541f18 <col:9, col:20> 'int'
    |   | | `-BinaryOperator 0x195dd541ef8 <col:10, col:17> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x195dd541ee0 <col:10, col:13> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x195dd541ec8 <col:10, col:13> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x195dd541e90 <col:10, col:13> 'const char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x195dd541e78 <col:10> 'const char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x195dd541e30 <col:10> 'const char *' lvalue Var 0x195dd53e2a8 'v' 'const char *'
    |   | |   |     `-IntegerLiteral 0x195dd541e50 <col:12> 'int' 8
    |   | |   `-CharacterLiteral 0x195dd541eb0 <col:17> 'int' 48
    |   | `-IntegerLiteral 0x195dd541f38 <col:24> 'int' 10
    |   `-ParenExpr 0x195dd542068 <col:29, col:40> 'int'
    |     `-BinaryOperator 0x195dd542048 <col:30, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x195dd542030 <col:30, col:33> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x195dd542018 <col:30, col:33> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x195dd541fe0 <col:30, col:33> 'const char' lvalue
    |       |     |-ImplicitCastExpr 0x195dd541fc8 <col:30> 'const char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x195dd541f80 <col:30> 'const char *' lvalue Var 0x195dd53e2a8 'v' 'const char *'
    |       |     `-IntegerLiteral 0x195dd541fa0 <col:32> 'int' 9
    |       `-CharacterLiteral 0x195dd542000 <col:37> 'int' 48
    |-IfStmt 0x195dd548870 <line:241:5, line:243:46>
    | |-OpaqueValueExpr 0x195dd548858 <<invalid sloc>> '_Bool'
    | `-BinaryOperator 0x195dd548838 <col:9, col:46> 'int' '='
    |   |-DeclRefExpr 0x195dd548588 <col:9> 'int' lvalue Var 0x195dd53e7e0 's' 'int'
    |   `-BinaryOperator 0x195dd548818 <col:13, col:46> 'int' '+'
    |     |-BinaryOperator 0x195dd5486f0 <col:13, col:29> 'int' '*'
    |     | |-ParenExpr 0x195dd5486a8 <col:13, col:25> 'int'
    |     | | `-BinaryOperator 0x195dd548688 <col:14, col:22> 'int' '-'
    |     | |   |-ImplicitCastExpr 0x195dd548670 <col:14, col:18> 'int' <IntegralCast>
    |     | |   | `-ImplicitCastExpr 0x195dd548658 <col:14, col:18> 'char' <LValueToRValue>
    |     | |   |   `-ArraySubscriptExpr 0x195dd548620 <col:14, col:18> 'const char' lvalue
    |     | |   |     |-ImplicitCastExpr 0x195dd548608 <col:14> 'const char *' <LValueToRValue>
    |     | |   |     | `-DeclRefExpr 0x195dd5485c0 <col:14> 'const char *' lvalue Var 0x195dd53e2a8 'v' 'const char *'
    |     | |   |     `-IntegerLiteral 0x195dd5485e0 <col:16> 'int' 10
    |     | |   `-CharacterLiteral 0x195dd548640 <col:22> 'int' 48
    |     | `-IntegerLiteral 0x195dd5486c8 <col:29> 'int' 10
    |     `-ParenExpr 0x195dd5487f8 <col:34, col:46> 'int'
    |       `-BinaryOperator 0x195dd5487d8 <col:35, col:43> 'int' '-'
    |         |-ImplicitCastExpr 0x195dd5487c0 <col:35, col:39> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x195dd5487a8 <col:35, col:39> 'char' <LValueToRValue>
    |         |   `-ArraySubscriptExpr 0x195dd548770 <col:35, col:39> 'const char' lvalue
    |         |     |-ImplicitCastExpr 0x195dd548758 <col:35> 'const char *' <LValueToRValue>
    |         |     | `-DeclRefExpr 0x195dd548710 <col:35> 'const char *' lvalue Var 0x195dd53e2a8 'v' 'const char *'
    |         |     `-IntegerLiteral 0x195dd548730 <col:37> 'int' 11
    |         `-CharacterLiteral 0x195dd548790 <col:43> 'int' 48
    |-IfStmt 0x195dd548f30 <line:245:5, line:250:18> has_else
    | |-OpaqueValueExpr 0x195dd548f18 <<invalid sloc>> '_Bool'
    | |-ReturnStmt 0x195dd548eb0 <line:248:9, col:18>
    | | `-ParenExpr 0x195dd548e90 <col:16, col:18> 'int'
    | |   `-IntegerLiteral 0x195dd548e68 <col:17> 'int' 0
    | `-ReturnStmt 0x195dd548f08 <line:250:9, col:18>
    |   `-ParenExpr 0x195dd548ee8 <col:16, col:18> 'int'
    |     `-IntegerLiteral 0x195dd548ec0 <col:17> 'int' 1
    |-LabelStmt 0x195dd549100 <line:251:2, col:5> 'err'
    | `-NullStmt 0x195dd5490f8 <col:5>
    `-ReturnStmt 0x195dd549160 <line:253:5, col:14>
      `-ParenExpr 0x195dd549140 <col:12, col:14> 'int'
        `-IntegerLiteral 0x195dd549118 <col:13> 'int' 0
