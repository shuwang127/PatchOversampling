TranslationUnitDecl 0x1d96d4a4ce8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1d96d4a5580 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1d96d4a5280 '__int128'
|-TypedefDecl 0x1d96d4a55f0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1d96d4a52a0 'unsigned __int128'
|-TypedefDecl 0x1d96d4a5928 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1d96d4a56e0 'struct __NSConstantString_tag'
|   `-Record 0x1d96d4a5648 '__NSConstantString_tag'
|-TypedefDecl 0x1d96d4a5998 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1d96d4a4ec0 'unsigned long long'
|-TypedefDecl 0x1d96d4a5a30 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1d96d4a59f0 'char *'
|   `-BuiltinType 0x1d96d4a4d80 'char'
|-TypedefDecl 0x1d96d4a5aa0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1d96d4a59f0 'char *'
|   `-BuiltinType 0x1d96d4a4d80 'char'
|-TypedefDecl 0x1d96d4a5b60 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1d96d4a4ec0 'unsigned long long'
|-TypedefDecl 0x1d96d4a5bd0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1d96d4a59f0 'char *'
|   `-BuiltinType 0x1d96d4a4d80 'char'
|-FunctionDecl 0x1d96ee5e410 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1d96ee5e4b0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1d96ee5e520 <col:21> Implicit
|-FunctionDecl 0x1d96ee5e578 prev 0x1d96ee5e410 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1d96ee5e2a0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1d96ee5e668 <col:21> Inherited Implicit
|-TypedefDecl 0x1d96ee5e6a8 prev 0x1d96d4a5998 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1d96d4a4ec0 'unsigned long long'
|-TypedefDecl 0x1d96ee5e750 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1d96ee5e720 'size_t' sugar
|   |-Typedef 0x1d96ee5e6a8 'size_t'
|   `-BuiltinType 0x1d96d4a4ec0 'unsigned long long'
|-TypedefDecl 0x1d96ee5e7c0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1d96d4a4e20 'long long'
|-TypedefDecl 0x1d96ee5e830 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1d96d4a4e20 'long long'
|-TypedefDecl 0x1d96ee5e8a0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1d96d4a4e60 'unsigned short'
|-TypedefDecl 0x1d96ee5e910 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1d96d4a4e60 'unsigned short'
|-TypedefDecl 0x1d96ee5e980 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1d96d4a4e60 'unsigned short'
|-TypedefDecl 0x1d96ee5e9f0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1d96d4a4de0 'int'
|-TypedefDecl 0x1d96ee5ea60 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1d96d4a4e00 'long'
|-TypedefDecl 0x1d96ee5ead0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1d96d4a4e20 'long long'
|-TypedefDecl 0x1d96ee5eb60 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1d96ee5eb30 '__time64_t' sugar
|   |-Typedef 0x1d96ee5ead0 '__time64_t'
|   `-BuiltinType 0x1d96d4a4e20 'long long'
|-FunctionDecl 0x1d96ee5ecd8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1d96ee5eef8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1d96ee9a950 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1d96ee5f038 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1d96ee5f0b0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1d96ee5f128 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1d96ee5f1a8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1d96ee9a6f0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1d96ee9aa30 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1d96ee9aaf0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1d96ee9ac60 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1d96ee9ac10 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1d96ee9abb0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1d96ee9aad0 'struct threadlocaleinfostruct'
|       `-Record 0x1d96ee9e730 'threadlocaleinfostruct'
|-TypedefDecl 0x1d96ee9ad70 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1d96ee9ad20 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1d96ee9acc0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1d96ee9ab90 'struct threadmbcinfostruct'
|       `-Record 0x1d96ee9aaf0 'threadmbcinfostruct'
|-RecordDecl 0x1d96ee9adc8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1d96ee9ae80 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1d96ee9af40 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1d96ee9afd0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1d96ee9b060 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1d96ee9b118 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1d96ee9b0c0 'struct localeinfo_struct' sugar
|   `-RecordType 0x1d96ee9af20 'struct localeinfo_struct'
|     `-Record 0x1d96ee9ae80 'localeinfo_struct'
|-TypedefDecl 0x1d96ee9b1f0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1d96ee9b1a0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1d96ee9b0c0 'struct localeinfo_struct' sugar
|     `-RecordType 0x1d96ee9af20 'struct localeinfo_struct'
|       `-Record 0x1d96ee9ae80 'localeinfo_struct'
|-RecordDecl 0x1d96ee9b268 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1d96ee9b320 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1d96ee9b398 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1d96ee9b458 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1d96ee9b4f0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1d96ee9b560 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1d96ee9b618 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1d96ee9b5c0 'struct localerefcount' sugar
|   `-RecordType 0x1d96ee9b300 'struct localerefcount'
|     `-Record 0x1d96ee9b268 'localerefcount'
|-RecordDecl 0x1d96ee9e730 prev 0x1d96ee9aa30 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1d96ee9e7b0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1d96ee9e828 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1d96ee9e898 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1d96ee9e908 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1d96ee9e978 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1d96ee9eb38 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1d96ee9eba8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1d96ee9ec18 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1d96ee9ec88 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1d96ee9ecf8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1d96ee9ed68 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1d96ee9edc0 parent 0x1d96d4a4ce8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1d96ee9ef50 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1d96ee9efc0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1d96ee9f030 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1d96ee9f0a0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1d96ee9f140 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1d96ee9f1b0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1d96ee9f2c0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1d96ee9f3f8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1d96ee9f4a8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1d96ee9f450 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1d96ee9aad0 'struct threadlocaleinfostruct'
|     `-Record 0x1d96ee9e730 'threadlocaleinfostruct'
|-RecordDecl 0x1d96ee9f540 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x1d96ee9f600 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1d96ee9f678 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x1d96eea77c0 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x1d96eea7830 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x1d96eea78a0 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x1d96eea7910 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x1d96eea7980 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x1d96eea79f0 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x1d96eea7a60 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x1d96eea7b10 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x1d96eea7ac0 'struct _iobuf' sugar
|   `-RecordType 0x1d96ee9f5e0 'struct _iobuf'
|     `-Record 0x1d96ee9f540 '_iobuf'
|-FunctionDecl 0x1d96eea7d48 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x1d96eea7e18 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1d96d4a4e20 'long long'
|-FunctionDecl 0x1d96eea7ff8 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d96eea7e80 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x1d96eea82f0 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1d96eea80d0 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x1d96eea8148 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1d96eea86a0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x1d96eea83d0 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x1d96eea8450 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x1d96eea84d0 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x1d96eeab970 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1d96eeab800 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x1d96eeabba0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x1d96eeaba60 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1d96eeabd50 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d96eeabc70 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x1d96eeabf40 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1d96eeac238 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1d96eeac010 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x1d96eeac090 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x1d96eeac3f0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d96eeac310 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x1d96eeac5a0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d96eeac4c0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x1d96eeac750 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d96eeac670 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1d96eea4898 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d96eea47b8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x1d96eea4a28 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1d96eea4d90 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x1d96eea4af0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1d96eea4be8 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x1d96eea5148 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x1d96eea4e70 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x1d96eea4ef0 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x1d96eea4f68 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x1d96eea5308 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d96eea5228 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1d96eea55d0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1d96eea53e0 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x1d96eea5460 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x1d96eeac810 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1d96eeacc08 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x1d96eeacca8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1d96eeacd10 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1d96eeacd88 prev 0x1d96eeacc08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1d96eeac9e0 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x1d96eeaca60 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x1d96eeace38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96eead2b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x1d96eeacfe0 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x1d96eead060 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x1d96eead0e0 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x1d96eead5d0 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x1d96eead670 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1d96eead6d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1d96eead750 <col:40> Implicit printf 2 3
|-FunctionDecl 0x1d96eeae830 prev 0x1d96eead5d0 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1d96eead390 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1d96eead410 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x1d96eeae928 <col:40> Inherited printf 2 3
|-FunctionDecl 0x1d96eeaeaf0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1d96eeae970 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1d96eeae9f0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1d96eeaed48 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1d96eeaebd0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x1d96eeaec48 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x1d96eeaef78 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1d96eeaee28 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x1d96eeaf270 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x1d96eeaf050 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1d96eeaf0c8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x1d96eeaf708 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1d96eeaf7a8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1d96eead820 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1d96eead888 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1d96eead8f0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1d96eead978 prev 0x1d96eeaf708 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1d96eeaf350 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x1d96eeaf3c8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eeaf440 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d96eeaf4b8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x1d96eeade80 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1d96eeada68 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x1d96eeadae0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eeadb58 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eeadbd0 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d96eeadc48 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x1d96eeae340 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1d96eeae070 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x1d96eeae0f0 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x1d96eeae168 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x1d96eeae3f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96eeaf8e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1d96eeae540 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1d96eeae5c0 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x1d96eeae640 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x1d96eeae6b8 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x1d96eeafc90 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1d96eeafd30 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1d96eeafd98 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1d96eeafe10 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1d96eeafe78 prev 0x1d96eeafc90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1d96eeafac8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x1d96eeafb48 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x1d96eeb0058 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1d96eeaff28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96eeb0498 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96eeb0198 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x1d96eeb0218 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x1d96eeb02b0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d96eeb0550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96eea97e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1d96eeb0690 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1d96eeb0710 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1d96eea9ad0 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96eea98b8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1d96eea9938 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1d96eea99b0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96eea9e30 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x1d96eea9bb0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1d96eea9c88 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x1d96eeaa1e8 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1d96eea9f08 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x1d96eea9f88 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x1d96eeaa008 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x1d96eeaa448 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1d96eeaa2c8 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x1d96eea8818 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1d96eeaa518 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1d96eeaa598 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x1d96eeaa618 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x1d96eea8a78 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1d96eea88f8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1d96eea8f38 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1d96eea8fd8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1d96eea9040 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1d96eea90a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1d96eea9110 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1d96eea9198 prev 0x1d96eea8f38 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1d96eea8b80 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x1d96eea8bf8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eea8c70 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d96eea8ce8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x1d96eea9360 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d96eea9280 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1d96eea94f0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1d96eea9678 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1d96eeb1a20 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x1d96eea9748 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x1d96eeb1870 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1d96eeb1d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1d96eeb1c00 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x1d96eeb1df0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96eeb2010 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d96eeb1f30 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x1d96eeb2230 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1d96eeb20e8 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1d96eeb23e0 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d96eeb2300 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x1d96eeb2630 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1d96eeb24b8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x1d96eeb2538 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x1d96eeb2870 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1d96eeb2910 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1d96eeb2980 <col:40> Implicit printf 1 2
|-FunctionDecl 0x1d96eeb29e8 prev 0x1d96eeb2870 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x1d96eeb2710 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x1d96eeb2ad8 <col:40> Inherited printf 1 2
|-FunctionDecl 0x1d96eeb2c08 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1d96eeb2b28 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x1d96eeb2e58 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1d96eeb2ce0 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x1d96eeb2d58 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1d96eeb3018 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1d96eeb2f38 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x1d96eeb3238 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1d96eeb30f0 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x1d96eeb3488 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1d96eeb3310 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x1d96eeb3388 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1d96eeb3648 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1d96eeb3568 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1d96ef040f0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1d96eeb3720 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x1d96eeb37a0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1d96ef042b0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1d96ef041d0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1d96ef04540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1d96ef04460 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1d96ef045e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1d96ef047e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1d96ef04708 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1d96ef04970 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1d96ef04c18 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1d96ef04cb8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1d96ef04d28 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1d96ef04d90 prev 0x1d96ef04c18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1d96ef04b00 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1d96ef04f68 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1d96ef04e38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96ef05340 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96ef05108 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1d96ef05180 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d96ef053f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96ef05618 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1d96ef05538 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x1d96ef05868 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96ef056f0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1d96ef05768 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96ef05c28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x1d96ef05a00 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x1d96ef05a80 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x1d96ef05cd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96ef05f00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1d96ef05e20 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x1d96ef00128 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1d96eefffe0 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x1d96ef00310 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x1d96ef00760 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x1d96ef003d8 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1d96ef00458 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x1d96ef004d8 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x1d96ef00550 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1d96ef00be0 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x1d96ef00850 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x1d96ef008c8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef00940 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d96ef009c0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x1d96ef00ff0 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1d96ef00cd0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1d96ef00d48 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d96ef00dc8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x1d96ef011b8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1d96ef010d8 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x1d96ef01590 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1d96ef01630 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1d96ef01698 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1d96ef01710 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1d96ef01778 prev 0x1d96ef01590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1d96ef01350 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x1d96ef013d0 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x1d96ef01958 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1d96ef01828 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96ef01d48 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96ef01a68 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x1d96ef01ae8 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x1d96ef01b60 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d96ef01e00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96ef02100 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x1d96ef01f48 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x1d96ef02000 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x1d96ef023f8 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96ef021e0 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x1d96ef02260 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1d96ef022d8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96ef02888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1d96ef025a0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x1d96ef02618 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef02698 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x1d96ef02940 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96ef02f10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96ef02b80 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x1d96ef02bf8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef02c78 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x1d96ef02cf0 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d96eefdfc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96eefe320 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1d96eefe108 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x1d96eefe180 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d96eefe200 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x1d96eefe6b8 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96eefe408 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x1d96eefe480 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eefe500 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x1d96eefe578 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96eefe918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x1d96eefe9b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96eefec70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x1d96eefeb00 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x1d96ef06040 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x1d96eefed48 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x1d96eefedc0 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1d96ef062c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1d96ef061e0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x1d96ef06368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96ef06628 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1d96ef064b0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x1d96ef06528 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x1d96ef06a40 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1d96ef06ae0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1d96ef06b48 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1d96ef06bb0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1d96ef06c30 <col:40> Implicit printf 2 0
|-FunctionDecl 0x1d96ef06c98 prev 0x1d96ef06a40 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1d96ef06700 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1d96ef06780 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x1d96ef067f8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1d96ef06d98 <col:40> Inherited printf 2 0
|-FunctionDecl 0x1d96ef03010 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1d96ef030b0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1d96ef03118 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1d96ef03180 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1d96ef03200 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1d96ef03268 prev 0x1d96ef03010 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1d96ef06de0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1d96ef06e60 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1d96ef06ed8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1d96ef03368 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1d96ef035c8 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1d96ef033b0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1d96ef03430 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1d96ef034a8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef038c0 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1d96ef036a8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1d96ef03728 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1d96ef037a0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef03c08 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1d96ef03ca8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1d96ef03d10 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1d96ef03d88 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1d96ef03df0 prev 0x1d96ef03c08 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1d96ef039a8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1d96ef03a20 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1d96ef03ee8 <col:40> Inherited printf 1 0
|-FunctionDecl 0x1d96eeff108 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1d96eeff1a8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1d96eeff210 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1d96eeff288 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x1d96eeff2f0 prev 0x1d96eeff108 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1d96ef03f38 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x1d96eefefd0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1d96eeff3e8 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x1d96eeff5b0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1d96eeff438 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x1d96eeff4b0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96eeff808 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1d96eeff690 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1d96eeff708 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96eeffd68 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1d96eeffe08 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1d96eeffe70 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1d96eeffed8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1d96eefff40 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1d96ef09070 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1d96ef090d8 prev 0x1d96eeffd68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1d96eeff9a8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x1d96eeffa20 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eeffaa0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1d96eeffb18 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1d96ef092c8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1d96ef09198 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96ef09738 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1d96ef09318 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1d96ef09390 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef09408 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef09488 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1d96ef09500 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef09b78 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1d96ef09830 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1d96ef098a8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef09920 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef099a0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1d96ef09a18 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef09f48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1d96ef09d30 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1d96ef09da8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef09e28 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1d96ef0a000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96ef074c0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1d96ef07210 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1d96ef07288 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef07308 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1d96ef07380 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1d96ef07580 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96ef07978 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1d96ef076c8 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1d96ef07740 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef077c0 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1d96ef07838 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef07d38 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1d96ef07a68 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1d96ef07ae8 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1d96ef07b60 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef0e160 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1d96ef0e200 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1d96ef0e268 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1d96ef0e2e0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1d96ef0e348 prev 0x1d96ef0e160 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1d96ef07ee0 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1d96ef07f60 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1d96ef0e528 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1d96ef0e3f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96ef0e950 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1d96ef0e9f0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1d96ef0ea58 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1d96ef0eac0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1d96ef0eb40 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1d96ef0eba8 prev 0x1d96ef0e950 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1d96ef0e638 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1d96ef0e6b8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1d96ef0e730 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1d96ef0ed90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1d96ef0ec60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96ef0f0d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1d96ef0f170 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1d96ef0f1d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1d96ef0f240 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1d96ef0f2c0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1d96ef0f328 prev 0x1d96ef0f0d0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1d96ef0ede0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1d96ef0ee60 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1d96ef0eed8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1d96ef0f428 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1d96ef0f5f0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1d96ef0f478 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1d96ef0f4f0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef0f8e8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1d96ef0f6d0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1d96ef0f748 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d96ef0f7c8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1d96ef0fc80 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1d96ef0f9d0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1d96ef0fa48 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef0fac8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1d96ef0fb40 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef0fee8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1d96ef0fd68 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1d96ef0fde8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1d96ef0a080 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1d96ef0ffc8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1d96ef0a370 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1d96ef0a158 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1d96ef0a1d0 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d96ef0a250 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1d96ef0a668 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1d96ef0a450 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1d96ef0a4d0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1d96ef0a548 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef0a8c8 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1d96ef0a750 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1d96ef0a7c8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef0ac58 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1d96ef0a9a8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1d96ef0aa20 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef0aaa0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1d96ef0ab18 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef0ae28 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1d96ef0ad48 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1d96ef0c0a0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1d96ef0af00 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1d96ef0af78 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef0c260 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1d96ef0c180 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1d96ef0c3f0 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1d96ef0c638 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96ef0c4c0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1d96ef0c538 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96ef0c890 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96ef0c718 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1d96ef0c790 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96ef0cae8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96ef0c970 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1d96ef0c9e8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96ef0ce98 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96ef0cbc8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1d96ef0cc40 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d96ef0ccb8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef0d1d0 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96ef0cf80 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1d96ef0cff8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d96ef0d0b0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef0d4c8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96ef0d2b8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1d96ef0d330 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d96ef0d3a8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef0d7c0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96ef0d5a8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1d96ef0d628 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x1d96ef0d6a0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96ef0dab8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96ef0d8a0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1d96ef0d920 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1d96ef0d998 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96ef0ddb0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96ef0db98 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1d96ef0dc18 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1d96ef0dc90 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96ef081c0 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96ef0de90 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1d96ef0df10 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x1d96ef0df88 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d96ef0e000 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef08558 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96ef082a8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1d96ef08328 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1d96ef083a0 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d96ef08418 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef088f0 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96ef08640 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1d96ef086c0 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1d96ef08738 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d96ef087b0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef08d88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96ef08aa0 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1d96ef08b20 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1d96ef08b98 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d96ef08e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96ef17460 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96ef08f88 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1d96ef17150 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef171d0 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x1d96ef17248 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96ef17800 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96ef17550 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1d96ef175c8 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef17648 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1d96ef176c0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96ef17d50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96ef179f0 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x1d96ef17a70 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x1d96ef17ae8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1d96ef17b60 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1d96ef17e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96ef10318 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96ef17f58 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1d96ef17fd0 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef18050 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x1d96ef180c8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d96ef100e0 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef10758 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96ef10410 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1d96ef10488 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef10508 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x1d96ef10580 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d96ef105f8 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef109c8 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96ef10850 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1d96ef108c8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96ef10c20 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96ef10aa8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x1d96ef10b20 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96ef10f10 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96ef10d00 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1d96ef10d78 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d96ef10df0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef18290 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96ef10ff8 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x1d96ef11070 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d96ef18170 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef186e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96ef18438 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1d96ef184b0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef18530 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1d96ef185a8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d96ef187a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96ef18ba0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96ef188f0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1d96ef18968 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef189e8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1d96ef18a60 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96ef16140 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96ef18c90 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1d96ef18d08 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef18d80 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef18e00 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1d96ef18e78 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96ef16680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96ef16338 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x1d96ef163b0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef16430 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x1d96ef164a8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1d96ef16520 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1d96ef16748 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96ef16bc8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96ef16898 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1d96ef16910 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef16990 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x1d96ef16a08 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d96ef16a80 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef11150 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96ef16cc0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1d96ef16d38 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef16db0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef16e30 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1d96ef16ea8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d96ef16f20 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef11510 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1d96ef11248 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1d96ef112c0 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1d96ef11340 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1d96ef11780 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1d96ef11610 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1d96ef11998 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1d96ef11c78 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1d96ef11a60 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1d96ef11ad8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1d96ef11ec0 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1d96ef11d50 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1d96ef19170 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1d96ef11f90 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x1d96ef192f8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1d96ef19530 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1d96ef193c0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1d96ef19438 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x1d96ef196e0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1d96ef19608 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1d96ef19988 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1d96ef197b0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1d96ef19828 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1d96ef19d30 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x1d96ef19a60 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1d96ef19ae0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x1d96ef19b58 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x1d96ef1a030 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1d96ef19e10 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1d96ef19e88 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1d96ef1a338 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1d96ef1a108 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1d96ef1a190 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1d96ef1a640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1d96ef1a4d0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1d96ef1a6e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96ef1a9a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1d96ef1a828 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1d96ef1acb0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d96ef1aa78 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1d96ef1aaf0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1d96ef1af00 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d96ef1ad88 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1d96ef1ae00 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1d96ef13110 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1d96ef1afd8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1d96ef132c0 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1d96ef131e0 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1d96ef13470 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1d96ef13390 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1d96ef13808 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d96ef13540 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1d96ef135b8 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96ef13630 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef13af8 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d96ef138e8 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1d96ef13960 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96ef139d8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef13de8 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d96ef13bd8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1d96ef13c50 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96ef13cc8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef1b190 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d96ef13ec8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1d96ef13f40 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96ef13fb8 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef1b490 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d96ef1b270 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96ef1b2e8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef1b6e0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d96ef1b568 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96ef1b5e0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef1b930 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d96ef1b7b8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96ef1b830 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef1bb80 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d96ef1ba08 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96ef1ba80 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef1bf38 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d96ef1bc58 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1d96ef1bcd0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d96ef1bd48 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1d96ef14330 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d96ef1c018 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1d96ef1c090 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef1c108 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96ef14120 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef146e8 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d96ef14418 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d96ef14490 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96ef14508 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef149d8 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d96ef147c8 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1d96ef14840 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96ef148b8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef14cc8 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d96ef14ab8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d96ef14b30 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d96ef14ba8 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1d96ef15050 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d96ef14da8 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d96ef14e20 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef14e98 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96ef14f10 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef1c550 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d96ef1c1c8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d96ef1c240 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef1c2b8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d96ef1c330 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1d96ef1ca58 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d96ef1c638 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d96ef1c6b0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef1c728 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef1c7a0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96ef1c818 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef1ce18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d96ef1cc08 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1d96ef1cc80 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef1ccf8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1d96ef1ced0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96ef15360 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d96ef1d0d0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1d96ef15130 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96ef151a8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d96ef15220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1d96ef15420 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96ef156d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d96ef15560 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1d96ef155d8 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1d96ef15890 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1d96ef157b0 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1d96ef15b70 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d96ef15960 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1d96ef159d8 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96ef15a50 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96ef15dc8 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d96ef15c50 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96ef15cc8 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96eede060 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d96ef15ea0 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d96ef15f18 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d96ef15f90 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x1d96eede3e8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d96eede140 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d96eede1b8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eede230 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96eede2a8 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96eede5b0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1d96eede4d0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x1d96eede7f8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d96eede680 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96eede6f8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96eedeb00 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96eede8d0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96eede948 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96eeded50 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96eedebd8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96eedec50 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96eedefa0 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96eedee28 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96eedeea0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96eedd348 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96eedd078 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d96eedd0f0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d96eedd168 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96eedd638 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96eedd428 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d96eedd4a0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d96eedd518 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96eedd928 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96eedd718 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d96eedd790 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d96eedd808 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96eeddce8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96eedda08 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1d96eedda80 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96eeddaf8 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96eee60e0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96eedddc8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1d96eedde40 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96eeddeb8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96eee63d0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96eee61c0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1d96eee6238 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96eee62b0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96eee6820 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96eee64b0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1d96eee6528 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d96eee65a0 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d96eee6618 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96eee6bb0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96eee6908 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1d96eee6980 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d96eee69f8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d96eee6a70 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96eee6f40 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96eee6c98 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1d96eee6d10 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d96eee6d88 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d96eee6e00 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96eee43d0 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96eee7028 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d96eee40c0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eee4138 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96eee41b0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96eee4760 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96eee44b8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d96eee4530 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eee45a8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96eee4620 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96eee4af0 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96eee4848 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d96eee48c0 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eee4938 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96eee49b0 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96eee4ff8 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96eee4bd8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d96eee4c50 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eee4cc8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d96eee4d40 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d96eee4db8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96eee7458 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96eee7118 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d96eee7190 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eee7208 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d96eee7280 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d96eee72f8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96eee7888 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96eee7548 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d96eee75c0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eee7638 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d96eee76b0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d96eee7728 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96eee7af0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96eee7978 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96eee79f0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96eee7d40 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96eee7bc8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96eee7c40 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96eee8028 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96eee7e18 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d96eee7e90 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d96eee7f08 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96eee0418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96eee0170 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d96eee01e8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eee0260 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d96eee02d8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d96eee04d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96eee0a48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96eee0620 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d96eee0698 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eee0710 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eee0788 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96eee0800 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96eee0f80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96eee0c40 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d96eee0cb8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eee0d30 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d96eee0da8 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1d96eee0e20 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1d96eee50d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96eee56e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96eee5218 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d96eee5290 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eee5308 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eee5380 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d96eee53f8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d96eee5470 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96eee5be0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d96eee59a8 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1d96eee5a20 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x1d96eee5c90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1d96eee5da8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1d96eee12f8 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d96eee6060 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1d96eee10a0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d96eee1118 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1d96eee13b0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1d96eee14c8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1d96eee1a68 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96eee1788 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1d96eee1800 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d96eee1878 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x1d96eee1b20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1d96eee1c40 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1d96eee8310 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96eee1f00 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1d96eee1f78 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d96eee1ff0 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1d96eee8100 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1d96eee83d0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1d96eee84f0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1d96eee87f8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1d96eee8618 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1d96eee8690 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eee8708 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x1d96eee2340 <line:37:1, line:44:1>
|   |-DeclStmt 0x1d96eee8940 <line:38:5, col:21>
|   | `-VarDecl 0x1d96eee88d8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1d96eee89d8 <line:39:5, col:13>
|   | `-VarDecl 0x1d96eee8970 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1d96eee8d30 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1d96eee8d18 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1d96eee8c30 <col:34> '<builtin fn type>' Function 0x1d96eee8ac8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1d96eee8c68 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1d96eee88d8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1d96eee8ca0 <col:29> 'const wchar_t *' lvalue ParmVar 0x1d96eee8708 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1d96eee8ff0 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1d96eee8d60 <col:5> 'int' lvalue Var 0x1d96eee8970 '_Ret' 'int'
|   | `-CallExpr 0x1d96eee8f30 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1d96eee8f18 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1d96eee8d98 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1d96eee4ff8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1d96eee8f78 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1d96eee8db8 <col:27> 'wchar_t *' lvalue ParmVar 0x1d96eee8618 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1d96eee8f90 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1d96eee8dd8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1d96eee8690 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1d96eee8fa8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1d96eee8df8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1d96eee8708 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1d96eee8fc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1d96eee8e80 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1d96eee8e58 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1d96eee8e18 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1d96eee8fd8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1d96eee8ea0 <col:59> 'va_list':'char *' lvalue Var 0x1d96eee88d8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1d96eee22d0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1d96eee22b8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1d96eee2208 <col:34> '<builtin fn type>' Function 0x1d96eee20a0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1d96eee2240 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1d96eee88d8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1d96eee2330 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x1d96eee2318 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1d96eee22f8 <col:12> 'int' lvalue Var 0x1d96eee8970 '_Ret' 'int'
|-FunctionDecl 0x1d96eee8ac8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1d96eee8b68 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1d96eee8bd8 <col:34> Implicit
|-FunctionDecl 0x1d96eee20a0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1d96eee2140 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1d96eee21b0 <col:34> Implicit
|-FunctionDecl 0x1d96eee2638 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x1d96eee2390 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x1d96eee2408 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eee2480 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d96eee24f8 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1d96eee2920 <line:50:1, line:52:1>
|   `-ReturnStmt 0x1d96eee2910 <line:51:5, col:62>
|     `-CallExpr 0x1d96eee2850 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x1d96eee2838 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1d96eee2710 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1d96eee4ff8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1d96eee2898 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1d96eee2730 <col:27> 'wchar_t *' lvalue ParmVar 0x1d96eee2390 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1d96eee28b0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1d96eee2750 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1d96eee2408 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1d96eee28c8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1d96eee2770 <col:44> 'const wchar_t *' lvalue ParmVar 0x1d96eee2480 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1d96eee28e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x1d96eee27f8 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x1d96eee27d0 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x1d96eee2790 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x1d96eee28f8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1d96eee2818 <col:59> 'va_list':'char *' lvalue ParmVar 0x1d96eee24f8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1d96eee2bc0 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x1d96eee2948 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x1d96eee29c0 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eee2a38 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d96eee2ab0 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1d96eeea1c8 <line:61:1, line:68:1>
|   |-DeclStmt 0x1d96eee2d10 <line:62:5, col:21>
|   | `-VarDecl 0x1d96eee2ca8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1d96eee2da8 <line:63:5, col:13>
|   | `-VarDecl 0x1d96eee2d40 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1d96eee2e50 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1d96eee2e38 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1d96eee2dc0 <col:34> '<builtin fn type>' Function 0x1d96eee8ac8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1d96eee2de0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x1d96eee2ca8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1d96eee2e18 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1d96eee2ab0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x1d96eee3050 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x1d96eee2e80 <col:5> 'int' lvalue Var 0x1d96eee2d40 '_Ret' 'int'
|   | `-CallExpr 0x1d96eee2f90 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1d96eee2f78 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1d96eee2eb8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1d96eee4ff8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1d96eee2fd8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1d96eee2ed8 <col:27> 'wchar_t *' lvalue ParmVar 0x1d96eee2948 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1d96eee2ff0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1d96eee2ef8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1d96eee29c0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1d96eee3008 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1d96eee2f18 <col:44> 'const wchar_t *' lvalue ParmVar 0x1d96eee2a38 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1d96eee3020 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1d96eee2f38 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1d96eee2ab0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x1d96eee3038 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1d96eee2f58 <col:64> 'va_list':'char *' lvalue Var 0x1d96eee2ca8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1d96eeea158 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1d96eeea140 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1d96eee3070 <col:34> '<builtin fn type>' Function 0x1d96eee20a0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1d96eeea120 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x1d96eee2ca8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1d96eeea1b8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1d96eeea1a0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1d96eeea180 <col:12> 'int' lvalue Var 0x1d96eee2d40 '_Ret' 'int'
|-FunctionDecl 0x1d96eeea558 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1d96eeea218 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1d96eeea290 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eeea308 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d96eeea380 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1d96eeea3f8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1d96eeea7e0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1d96eeea7d0 <line:75:5, col:67>
|     `-CallExpr 0x1d96eeea710 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1d96eeea6f8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1d96eeea638 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1d96eee4ff8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1d96eeea758 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1d96eeea658 <col:27> 'wchar_t *' lvalue ParmVar 0x1d96eeea218 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1d96eeea770 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1d96eeea678 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1d96eeea290 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1d96eeea788 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1d96eeea698 <col:44> 'const wchar_t *' lvalue ParmVar 0x1d96eeea308 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1d96eeea7a0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1d96eeea6b8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1d96eeea380 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1d96eeea7b8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1d96eeea6d8 <col:64> 'va_list':'char *' lvalue ParmVar 0x1d96eeea3f8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1d96eeeaa28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d96eeea808 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1d96eeea880 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1d96eeeac78 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d96eeeab00 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96eeeab78 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96eeeaf60 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d96eeead50 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d96eeeadc8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d96eeeae40 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d96eee3228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d96eee30b0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1d96eee3128 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1d96eee32d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96eee36e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96eee34d8 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1d96eee3550 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d96eee35c8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d96eee37a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96eee3a58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d96eee38e0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1d96eee3958 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1d96eee3d40 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96eee3b30 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1d96eee3ba8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96eee3c20 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96eef01f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d96eee3ee0 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d96eee3f58 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1d96eef02a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96eef0778 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96eef04a0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d96eef0518 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d96eef0590 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d96eef0830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96eef0ae8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d96eef0970 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1d96eef09e8 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1d96eef0dd0 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96eef0bc0 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d96eef0c38 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96eef0cb0 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96eef1278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d96eef0f70 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d96eef0fe8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eef1060 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1d96eef1330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96eef18b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96eef1530 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d96eef15a8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eef1620 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d96eef1698 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d96eef1970 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96eef1cc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d96eef1ab0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d96eef1b28 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d96eef1ba0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1d96eef2048 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96eef1da0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d96eef1e18 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eef1e90 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96eef1f08 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96eef2350 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1d96eef2270 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1d96eef23f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96eef2770 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96eef25f8 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d96eef2670 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d96eef2820 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96eef2a40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1d96eef2960 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1d96eef2c88 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d96eef2b10 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d96eef2b88 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d96eef2f88 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1d96eef2d68 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1d96eef2de0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x1d96eeeb2d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d96eef3120 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1d96eeeb130 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x1d96eeeb388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96eeeb790 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d96eeeb4d0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1d96eeeb548 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1d96eeeb5c0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x1d96eeebbf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1d96eeeb930 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1d96eeeb9a8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x1d96eeeba20 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x1d96eeebca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96eeec188 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1d96eeebdf0 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x1d96eeebe68 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1d96eeebee0 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1d96eeebf58 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x1d96eeec3e0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1d96eeec270 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1d96eeec620 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d96eeec4b0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x1d96eeec528 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x1d96eeec7d8 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1d96eeec6f8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x1d96eeecac8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1d96eeec8a8 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x1d96eeec920 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1d96eeecd38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1d96eeecc60 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1d96eeecde0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d96eeecff8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1d96eeecf20 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1d96eef42b8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1d96eeed0c8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1d96eef41c0 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1d96eef4500 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1d96eef4390 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1d96eef4408 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1d96eef46b0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1d96eef45d8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1d96eef4858 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1d96eef4780 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1d96eef4a08 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d96eef4928 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1d96eef4bb8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d96eef4ad8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1d96eef4f30 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1d96eef4c90 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1d96eef4d08 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eef4d80 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d96eef4df8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1d96eef53a0 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1d96eef5020 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1d96eef5098 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eef5110 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eef51d0 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d96eef5248 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1d96eef56b0 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1d96eef5490 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1d96eef5510 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1d96eef5590 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1d96eef5870 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1d96eef5790 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1d96eef5b60 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1d96eef5940 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1d96eef59c0 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1d96eef5a40 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1d96eef5d20 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1d96eef5c40 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1d96eef6098 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1d96eef5df8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1d96eef5e70 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d96eef5ee8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d96eef5f60 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1d96eeee2d8 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1d96eeee160 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1d96eeee1d8 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1d96eeee610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1d96eeee490 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1d96eeee510 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1d96eeee6c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1d96eeee978 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1d96eeeea18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1d96eeeed58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1d96eeeebe0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1d96eeeec60 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1d96eeeee08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1d96eef61e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1d96eef6280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1d96eef6520 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1d96eef6440 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1d96eef65c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1d96eef6848 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1d96eef68e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1d96eef6b90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1d96eef6ab0 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1d96eef6c38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1d96eef6f18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1d96eef6e38 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1d96eef6fc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1d96eeef2e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1d96eeef170 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1d96eeef1e8 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1d96eeef398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1d96eeef658 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1d96eeef6f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x1d96eeefa80 <.//openssl//file_jk/before\crypto\asn1\a_utf8.c:27:1, line:114:1> line:27:5 UTF8_getc 'int (const unsigned char *, int, unsigned long *)'
| |-ParmVarDecl 0x1d96eeef820 <col:15, col:36> col:36 used str 'const unsigned char *'
| |-ParmVarDecl 0x1d96eeef8a0 <col:41, col:45> col:45 used len 'int'
| |-ParmVarDecl 0x1d96eeef950 <col:50, col:65> col:65 used val 'unsigned long *'
| `-CompoundStmt 0x1d96ef24520 <line:28:1, line:114:1>
|   |-DeclStmt 0x1d96eeefbd0 <line:29:5, col:27>
|   | `-VarDecl 0x1d96eeefb68 <col:5, col:26> col:26 used p 'const unsigned char *'
|   |-DeclStmt 0x1d96eeefc68 <line:30:5, col:24>
|   | `-VarDecl 0x1d96eeefc00 <col:5, col:19> col:19 used value 'unsigned long'
|   |-DeclStmt 0x1d96eeefd00 <line:31:5, col:12>
|   | `-VarDecl 0x1d96eeefc98 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x1d96eeefdd0 <line:32:5, line:33:16>
|   | |-BinaryOperator 0x1d96eeefd78 <line:32:9, col:16> 'int' '<='
|   | | |-ImplicitCastExpr 0x1d96eeefd60 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1d96eeefd18 <col:9> 'int' lvalue ParmVar 0x1d96eeef8a0 'len' 'int'
|   | | `-IntegerLiteral 0x1d96eeefd38 <col:16> 'int' 0
|   | `-ReturnStmt 0x1d96eeefdc0 <line:33:9, col:16>
|   |   `-IntegerLiteral 0x1d96eeefd98 <col:16> 'int' 0
|   |-BinaryOperator 0x1d96eeefe58 <line:34:5, col:9> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x1d96eeefde8 <col:5> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x1d96eeefe40 <col:9> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1d96eeefe20 <col:9> 'const unsigned char *' lvalue ParmVar 0x1d96eeef820 'str' 'const unsigned char *'
|   |-IfStmt 0x1d96eefc110 <line:37:5, line:111:17> has_else
|   | |-BinaryOperator 0x1d96eeeff88 <line:37:9, col:24> 'int' '=='
|   | | |-ParenExpr 0x1d96eeeff40 <col:9, col:19> 'int'
|   | | | `-BinaryOperator 0x1d96eeeff20 <col:10, col:15> 'int' '&'
|   | | |   |-ImplicitCastExpr 0x1d96eeeff08 <col:10, col:11> 'int' <IntegralCast>
|   | | |   | `-ImplicitCastExpr 0x1d96eeefef0 <col:10, col:11> 'unsigned char' <LValueToRValue>
|   | | |   |   `-UnaryOperator 0x1d96eeefeb0 <col:10, col:11> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | | |   |     `-ImplicitCastExpr 0x1d96eeefe98 <col:11> 'const unsigned char *' <LValueToRValue>
|   | | |   |       `-DeclRefExpr 0x1d96eeefe78 <col:11> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   | | |   `-IntegerLiteral 0x1d96eeefec8 <col:15> 'int' 128
|   | | `-IntegerLiteral 0x1d96eeeff60 <col:24> 'int' 0
|   | |-CompoundStmt 0x1d96eef71f0 <col:27, line:40:5>
|   | | |-BinaryOperator 0x1d96eef00c0 <line:38:9, col:24> 'unsigned long' '='
|   | | | |-DeclRefExpr 0x1d96eeeffa8 <col:9> 'unsigned long' lvalue Var 0x1d96eeefc00 'value' 'unsigned long'
|   | | | `-ImplicitCastExpr 0x1d96eef00a8 <col:17, col:24> 'unsigned long' <IntegralCast>
|   | | |   `-BinaryOperator 0x1d96eef0088 <col:17, col:24> 'int' '&'
|   | | |     |-ImplicitCastExpr 0x1d96eef0070 <col:17, col:19> 'int' <IntegralCast>
|   | | |     | `-ImplicitCastExpr 0x1d96eef0058 <col:17, col:19> 'unsigned char' <LValueToRValue>
|   | | |     |   `-UnaryOperator 0x1d96eef0018 <col:17, col:19> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | | |     |     `-UnaryOperator 0x1d96eef0000 <col:18, col:19> 'const unsigned char *' postfix '++'
|   | | |     |       `-DeclRefExpr 0x1d96eeeffe0 <col:18> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   | | |     `-IntegerLiteral 0x1d96eef0030 <col:24> 'int' 127
|   | | `-BinaryOperator 0x1d96eef0140 <line:39:9, col:15> 'int' '='
|   | |   |-DeclRefExpr 0x1d96eef00e0 <col:9> 'int' lvalue Var 0x1d96eeefc98 'ret' 'int'
|   | |   `-IntegerLiteral 0x1d96eef0118 <col:15> 'int' 1
|   | `-IfStmt 0x1d96eefc0e8 <line:40:12, line:111:17> has_else
|   |   |-BinaryOperator 0x1d96eef7320 <line:40:16, col:31> 'int' '=='
|   |   | |-ParenExpr 0x1d96eef72d8 <col:16, col:26> 'int'
|   |   | | `-BinaryOperator 0x1d96eef72b8 <col:17, col:22> 'int' '&'
|   |   | |   |-ImplicitCastExpr 0x1d96eef72a0 <col:17, col:18> 'int' <IntegralCast>
|   |   | |   | `-ImplicitCastExpr 0x1d96eef7288 <col:17, col:18> 'unsigned char' <LValueToRValue>
|   |   | |   |   `-UnaryOperator 0x1d96eef7248 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   | |   |     `-ImplicitCastExpr 0x1d96eef7230 <col:18> 'const unsigned char *' <LValueToRValue>
|   |   | |   |       `-DeclRefExpr 0x1d96eef7210 <col:18> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |   | |   `-IntegerLiteral 0x1d96eef7260 <col:22> 'int' 224
|   |   | `-IntegerLiteral 0x1d96eef72f8 <col:31> 'int' 192
|   |   |-CompoundStmt 0x1d96eef7a10 <col:37, line:50:5>
|   |   | |-IfStmt 0x1d96eef7410 <line:41:9, line:42:21>
|   |   | | |-BinaryOperator 0x1d96eef73a0 <line:41:13, col:19> 'int' '<'
|   |   | | | |-ImplicitCastExpr 0x1d96eef7388 <col:13> 'int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x1d96eef7340 <col:13> 'int' lvalue ParmVar 0x1d96eeef8a0 'len' 'int'
|   |   | | | `-IntegerLiteral 0x1d96eef7360 <col:19> 'int' 2
|   |   | | `-ReturnStmt 0x1d96eef7400 <line:42:13, col:21>
|   |   | |   `-UnaryOperator 0x1d96eef73e8 <col:20, col:21> 'int' prefix '-'
|   |   | |     `-IntegerLiteral 0x1d96eef73c0 <col:21> 'int' 1
|   |   | |-IfStmt 0x1d96eef75d8 <line:43:9, line:44:21>
|   |   | | |-BinaryOperator 0x1d96eef7568 <line:43:13, col:30> 'int' '!='
|   |   | | | |-ParenExpr 0x1d96eef7520 <col:13, col:25> 'int'
|   |   | | | | `-BinaryOperator 0x1d96eef7500 <col:14, col:21> 'int' '&'
|   |   | | | |   |-ImplicitCastExpr 0x1d96eef74e8 <col:14, col:17> 'int' <IntegralCast>
|   |   | | | |   | `-ImplicitCastExpr 0x1d96eef74d0 <col:14, col:17> 'unsigned char' <LValueToRValue>
|   |   | | | |   |   `-ArraySubscriptExpr 0x1d96eef7488 <col:14, col:17> 'const unsigned char' lvalue
|   |   | | | |   |     |-ImplicitCastExpr 0x1d96eef7470 <col:14> 'const unsigned char *' <LValueToRValue>
|   |   | | | |   |     | `-DeclRefExpr 0x1d96eef7428 <col:14> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |   | | | |   |     `-IntegerLiteral 0x1d96eef7448 <col:16> 'int' 1
|   |   | | | |   `-IntegerLiteral 0x1d96eef74a8 <col:21> 'int' 192
|   |   | | | `-IntegerLiteral 0x1d96eef7540 <col:30> 'int' 128
|   |   | | `-ReturnStmt 0x1d96eef75c8 <line:44:13, col:21>
|   |   | |   `-UnaryOperator 0x1d96eef75b0 <col:20, col:21> 'int' prefix '-'
|   |   | |     `-IntegerLiteral 0x1d96eef7588 <col:21> 'int' 3
|   |   | |-BinaryOperator 0x1d96eef7758 <line:45:9, col:34> 'unsigned long' '='
|   |   | | |-DeclRefExpr 0x1d96eef75f0 <col:9> 'unsigned long' lvalue Var 0x1d96eeefc00 'value' 'unsigned long'
|   |   | | `-ImplicitCastExpr 0x1d96eef7740 <col:17, col:34> 'unsigned long' <IntegralCast>
|   |   | |   `-BinaryOperator 0x1d96eef7720 <col:17, col:34> 'int' '<<'
|   |   | |     |-ParenExpr 0x1d96eef76d8 <col:17, col:29> 'int'
|   |   | |     | `-BinaryOperator 0x1d96eef76b8 <col:18, col:25> 'int' '&'
|   |   | |     |   |-ImplicitCastExpr 0x1d96eef76a0 <col:18, col:20> 'int' <IntegralCast>
|   |   | |     |   | `-ImplicitCastExpr 0x1d96eef7688 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |   | |     |   |   `-UnaryOperator 0x1d96eef7648 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   | |     |   |     `-UnaryOperator 0x1d96eef7630 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |   | |     |   |       `-DeclRefExpr 0x1d96eef7610 <col:19> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |   | |     |   `-IntegerLiteral 0x1d96eef7660 <col:25> 'int' 31
|   |   | |     `-IntegerLiteral 0x1d96eef76f8 <col:34> 'int' 6
|   |   | |-CompoundAssignOperator 0x1d96eef7878 <line:46:9, col:25> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | |-DeclRefExpr 0x1d96eef7778 <col:9> 'unsigned long' lvalue Var 0x1d96eeefc00 'value' 'unsigned long'
|   |   | | `-ImplicitCastExpr 0x1d96eef7860 <col:18, col:25> 'unsigned long' <IntegralCast>
|   |   | |   `-BinaryOperator 0x1d96eef7840 <col:18, col:25> 'int' '&'
|   |   | |     |-ImplicitCastExpr 0x1d96eef7828 <col:18, col:20> 'int' <IntegralCast>
|   |   | |     | `-ImplicitCastExpr 0x1d96eef7810 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |   | |     |   `-UnaryOperator 0x1d96eef77d0 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   | |     |     `-UnaryOperator 0x1d96eef77b8 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |   | |     |       `-DeclRefExpr 0x1d96eef7798 <col:19> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |   | |     `-IntegerLiteral 0x1d96eef77e8 <col:25> 'int' 63
|   |   | |-IfStmt 0x1d96eef7990 <line:47:9, line:48:21>
|   |   | | |-BinaryOperator 0x1d96eef7920 <line:47:13, col:21> 'int' '<'
|   |   | | | |-ImplicitCastExpr 0x1d96eef78f0 <col:13> 'unsigned long' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x1d96eef78a8 <col:13> 'unsigned long' lvalue Var 0x1d96eeefc00 'value' 'unsigned long'
|   |   | | | `-ImplicitCastExpr 0x1d96eef7908 <col:21> 'unsigned long' <IntegralCast>
|   |   | | |   `-IntegerLiteral 0x1d96eef78c8 <col:21> 'int' 128
|   |   | | `-ReturnStmt 0x1d96eef7980 <line:48:13, col:21>
|   |   | |   `-UnaryOperator 0x1d96eef7968 <col:20, col:21> 'int' prefix '-'
|   |   | |     `-IntegerLiteral 0x1d96eef7940 <col:21> 'int' 4
|   |   | `-BinaryOperator 0x1d96eef79f0 <line:49:9, col:15> 'int' '='
|   |   |   |-DeclRefExpr 0x1d96eef79a8 <col:9> 'int' lvalue Var 0x1d96eeefc98 'ret' 'int'
|   |   |   `-IntegerLiteral 0x1d96eef79c8 <col:15> 'int' 2
|   |   `-IfStmt 0x1d96eefc0c0 <line:50:12, line:111:17> has_else
|   |     |-BinaryOperator 0x1d96eef7b60 <line:50:16, col:31> 'int' '=='
|   |     | |-ParenExpr 0x1d96eef7b18 <col:16, col:26> 'int'
|   |     | | `-BinaryOperator 0x1d96eef7af8 <col:17, col:22> 'int' '&'
|   |     | |   |-ImplicitCastExpr 0x1d96eef7ae0 <col:17, col:18> 'int' <IntegralCast>
|   |     | |   | `-ImplicitCastExpr 0x1d96eef7ac8 <col:17, col:18> 'unsigned char' <LValueToRValue>
|   |     | |   |   `-UnaryOperator 0x1d96eef7a88 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | |   |     `-ImplicitCastExpr 0x1d96eef7a70 <col:18> 'const unsigned char *' <LValueToRValue>
|   |     | |   |       `-DeclRefExpr 0x1d96eef7a50 <col:18> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |     | |   `-IntegerLiteral 0x1d96eef7aa0 <col:22> 'int' 240
|   |     | `-IntegerLiteral 0x1d96eef7b38 <col:31> 'int' 224
|   |     |-CompoundStmt 0x1d96eef85c0 <col:37, line:62:5>
|   |     | |-IfStmt 0x1d96eef7c50 <line:51:9, line:52:21>
|   |     | | |-BinaryOperator 0x1d96eef7be0 <line:51:13, col:19> 'int' '<'
|   |     | | | |-ImplicitCastExpr 0x1d96eef7bc8 <col:13> 'int' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x1d96eef7b80 <col:13> 'int' lvalue ParmVar 0x1d96eeef8a0 'len' 'int'
|   |     | | | `-IntegerLiteral 0x1d96eef7ba0 <col:19> 'int' 3
|   |     | | `-ReturnStmt 0x1d96eef7c40 <line:52:13, col:21>
|   |     | |   `-UnaryOperator 0x1d96eef7c28 <col:20, col:21> 'int' prefix '-'
|   |     | |     `-IntegerLiteral 0x1d96eef7c00 <col:21> 'int' 1
|   |     | |-IfStmt 0x1d96eef7fd8 <line:53:9, line:55:21>
|   |     | | |-BinaryOperator 0x1d96eef7f68 <line:53:13, line:54:38> 'int' '||'
|   |     | | | |-ParenExpr 0x1d96eef7dc8 <line:53:13, col:35> 'int'
|   |     | | | | `-BinaryOperator 0x1d96eef7da8 <col:14, col:31> 'int' '!='
|   |     | | | |   |-ParenExpr 0x1d96eef7d60 <col:14, col:26> 'int'
|   |     | | | |   | `-BinaryOperator 0x1d96eef7d40 <col:15, col:22> 'int' '&'
|   |     | | | |   |   |-ImplicitCastExpr 0x1d96eef7d28 <col:15, col:18> 'int' <IntegralCast>
|   |     | | | |   |   | `-ImplicitCastExpr 0x1d96eef7d10 <col:15, col:18> 'unsigned char' <LValueToRValue>
|   |     | | | |   |   |   `-ArraySubscriptExpr 0x1d96eef7cc8 <col:15, col:18> 'const unsigned char' lvalue
|   |     | | | |   |   |     |-ImplicitCastExpr 0x1d96eef7cb0 <col:15> 'const unsigned char *' <LValueToRValue>
|   |     | | | |   |   |     | `-DeclRefExpr 0x1d96eef7c68 <col:15> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |     | | | |   |   |     `-IntegerLiteral 0x1d96eef7c88 <col:17> 'int' 1
|   |     | | | |   |   `-IntegerLiteral 0x1d96eef7ce8 <col:22> 'int' 192
|   |     | | | |   `-IntegerLiteral 0x1d96eef7d80 <col:31> 'int' 128
|   |     | | | `-ParenExpr 0x1d96eef7f48 <line:54:16, col:38> 'int'
|   |     | | |   `-BinaryOperator 0x1d96eef7f28 <col:17, col:34> 'int' '!='
|   |     | | |     |-ParenExpr 0x1d96eef7ee0 <col:17, col:29> 'int'
|   |     | | |     | `-BinaryOperator 0x1d96eef7ec0 <col:18, col:25> 'int' '&'
|   |     | | |     |   |-ImplicitCastExpr 0x1d96eef7ea8 <col:18, col:21> 'int' <IntegralCast>
|   |     | | |     |   | `-ImplicitCastExpr 0x1d96eef7e90 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |     | | |     |   |   `-ArraySubscriptExpr 0x1d96eef7e48 <col:18, col:21> 'const unsigned char' lvalue
|   |     | | |     |   |     |-ImplicitCastExpr 0x1d96eef7e30 <col:18> 'const unsigned char *' <LValueToRValue>
|   |     | | |     |   |     | `-DeclRefExpr 0x1d96eef7de8 <col:18> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |     | | |     |   |     `-IntegerLiteral 0x1d96eef7e08 <col:20> 'int' 2
|   |     | | |     |   `-IntegerLiteral 0x1d96eef7e68 <col:25> 'int' 192
|   |     | | |     `-IntegerLiteral 0x1d96eef7f00 <col:34> 'int' 128
|   |     | | `-ReturnStmt 0x1d96eef7fc8 <line:55:13, col:21>
|   |     | |   `-UnaryOperator 0x1d96eef7fb0 <col:20, col:21> 'int' prefix '-'
|   |     | |     `-IntegerLiteral 0x1d96eef7f88 <col:21> 'int' 3
|   |     | |-BinaryOperator 0x1d96eef8158 <line:56:9, col:33> 'unsigned long' '='
|   |     | | |-DeclRefExpr 0x1d96eef7ff0 <col:9> 'unsigned long' lvalue Var 0x1d96eeefc00 'value' 'unsigned long'
|   |     | | `-ImplicitCastExpr 0x1d96eef8140 <col:17, col:33> 'unsigned long' <IntegralCast>
|   |     | |   `-BinaryOperator 0x1d96eef8120 <col:17, col:33> 'int' '<<'
|   |     | |     |-ParenExpr 0x1d96eef80d8 <col:17, col:28> 'int'
|   |     | |     | `-BinaryOperator 0x1d96eef80b8 <col:18, col:25> 'int' '&'
|   |     | |     |   |-ImplicitCastExpr 0x1d96eef80a0 <col:18, col:20> 'int' <IntegralCast>
|   |     | |     |   | `-ImplicitCastExpr 0x1d96eef8088 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |     | |     |   |   `-UnaryOperator 0x1d96eef8048 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | |     |   |     `-UnaryOperator 0x1d96eef8030 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |     | |     |   |       `-DeclRefExpr 0x1d96eef8010 <col:19> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |     | |     |   `-IntegerLiteral 0x1d96eef8060 <col:25> 'int' 15
|   |     | |     `-IntegerLiteral 0x1d96eef80f8 <col:33> 'int' 12
|   |     | |-CompoundAssignOperator 0x1d96eef82f8 <line:57:9, col:35> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |     | | |-DeclRefExpr 0x1d96eef8178 <col:9> 'unsigned long' lvalue Var 0x1d96eeefc00 'value' 'unsigned long'
|   |     | | `-ImplicitCastExpr 0x1d96eef82e0 <col:18, col:35> 'unsigned long' <IntegralCast>
|   |     | |   `-BinaryOperator 0x1d96eef82c0 <col:18, col:35> 'int' '<<'
|   |     | |     |-ParenExpr 0x1d96eef8278 <col:18, col:30> 'int'
|   |     | |     | `-BinaryOperator 0x1d96eef8258 <col:19, col:26> 'int' '&'
|   |     | |     |   |-ImplicitCastExpr 0x1d96eef8240 <col:19, col:21> 'int' <IntegralCast>
|   |     | |     |   | `-ImplicitCastExpr 0x1d96eef8228 <col:19, col:21> 'unsigned char' <LValueToRValue>
|   |     | |     |   |   `-UnaryOperator 0x1d96eef81d0 <col:19, col:21> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | |     |   |     `-UnaryOperator 0x1d96eef81b8 <col:20, col:21> 'const unsigned char *' postfix '++'
|   |     | |     |   |       `-DeclRefExpr 0x1d96eef8198 <col:20> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |     | |     |   `-IntegerLiteral 0x1d96eef8200 <col:26> 'int' 63
|   |     | |     `-IntegerLiteral 0x1d96eef8298 <col:35> 'int' 6
|   |     | |-CompoundAssignOperator 0x1d96eef8428 <line:58:9, col:25> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |     | | |-DeclRefExpr 0x1d96eef8328 <col:9> 'unsigned long' lvalue Var 0x1d96eeefc00 'value' 'unsigned long'
|   |     | | `-ImplicitCastExpr 0x1d96eef8410 <col:18, col:25> 'unsigned long' <IntegralCast>
|   |     | |   `-BinaryOperator 0x1d96eef83f0 <col:18, col:25> 'int' '&'
|   |     | |     |-ImplicitCastExpr 0x1d96eef83d8 <col:18, col:20> 'int' <IntegralCast>
|   |     | |     | `-ImplicitCastExpr 0x1d96eef83c0 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |     | |     |   `-UnaryOperator 0x1d96eef8380 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | |     |     `-UnaryOperator 0x1d96eef8368 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |     | |     |       `-DeclRefExpr 0x1d96eef8348 <col:19> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |     | |     `-IntegerLiteral 0x1d96eef8398 <col:25> 'int' 63
|   |     | |-IfStmt 0x1d96eef8540 <line:59:9, line:60:21>
|   |     | | |-BinaryOperator 0x1d96eef84d0 <line:59:13, col:21> 'int' '<'
|   |     | | | |-ImplicitCastExpr 0x1d96eef84a0 <col:13> 'unsigned long' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x1d96eef8458 <col:13> 'unsigned long' lvalue Var 0x1d96eeefc00 'value' 'unsigned long'
|   |     | | | `-ImplicitCastExpr 0x1d96eef84b8 <col:21> 'unsigned long' <IntegralCast>
|   |     | | |   `-IntegerLiteral 0x1d96eef8478 <col:21> 'int' 2048
|   |     | | `-ReturnStmt 0x1d96eef8530 <line:60:13, col:21>
|   |     | |   `-UnaryOperator 0x1d96eef8518 <col:20, col:21> 'int' prefix '-'
|   |     | |     `-IntegerLiteral 0x1d96eef84f0 <col:21> 'int' 4
|   |     | `-BinaryOperator 0x1d96eef85a0 <line:61:9, col:15> 'int' '='
|   |     |   |-DeclRefExpr 0x1d96eef8558 <col:9> 'int' lvalue Var 0x1d96eeefc98 'ret' 'int'
|   |     |   `-IntegerLiteral 0x1d96eef8578 <col:15> 'int' 3
|   |     `-IfStmt 0x1d96eefc098 <line:62:12, line:111:17> has_else
|   |       |-BinaryOperator 0x1d96eef8718 <line:62:16, col:31> 'int' '=='
|   |       | |-ParenExpr 0x1d96eef86d0 <col:16, col:26> 'int'
|   |       | | `-BinaryOperator 0x1d96eef86b0 <col:17, col:22> 'int' '&'
|   |       | |   |-ImplicitCastExpr 0x1d96eef8698 <col:17, col:18> 'int' <IntegralCast>
|   |       | |   | `-ImplicitCastExpr 0x1d96eef8680 <col:17, col:18> 'unsigned char' <LValueToRValue>
|   |       | |   |   `-UnaryOperator 0x1d96eef8640 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |       | |   |     `-ImplicitCastExpr 0x1d96eef8628 <col:18> 'const unsigned char *' <LValueToRValue>
|   |       | |   |       `-DeclRefExpr 0x1d96eef8608 <col:18> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |       | |   `-IntegerLiteral 0x1d96eef8658 <col:22> 'int' 248
|   |       | `-IntegerLiteral 0x1d96eef86f0 <col:31> 'int' 240
|   |       |-CompoundStmt 0x1d96eef9510 <col:37, line:76:5>
|   |       | |-IfStmt 0x1d96eef8808 <line:63:9, line:64:21>
|   |       | | |-BinaryOperator 0x1d96eef8798 <line:63:13, col:19> 'int' '<'
|   |       | | | |-ImplicitCastExpr 0x1d96eef8780 <col:13> 'int' <LValueToRValue>
|   |       | | | | `-DeclRefExpr 0x1d96eef8738 <col:13> 'int' lvalue ParmVar 0x1d96eeef8a0 'len' 'int'
|   |       | | | `-IntegerLiteral 0x1d96eef8758 <col:19> 'int' 4
|   |       | | `-ReturnStmt 0x1d96eef87f8 <line:64:13, col:21>
|   |       | |   `-UnaryOperator 0x1d96eef87e0 <col:20, col:21> 'int' prefix '-'
|   |       | |     `-IntegerLiteral 0x1d96eef87b8 <col:21> 'int' 1
|   |       | |-IfStmt 0x1d96eef8d30 <line:65:9, line:68:21>
|   |       | | |-BinaryOperator 0x1d96eef8cc0 <line:65:13, line:67:38> 'int' '||'
|   |       | | | |-BinaryOperator 0x1d96eef8b20 <line:65:13, line:66:38> 'int' '||'
|   |       | | | | |-ParenExpr 0x1d96eef8980 <line:65:13, col:35> 'int'
|   |       | | | | | `-BinaryOperator 0x1d96eef8960 <col:14, col:31> 'int' '!='
|   |       | | | | |   |-ParenExpr 0x1d96eef8918 <col:14, col:26> 'int'
|   |       | | | | |   | `-BinaryOperator 0x1d96eef88f8 <col:15, col:22> 'int' '&'
|   |       | | | | |   |   |-ImplicitCastExpr 0x1d96eef88e0 <col:15, col:18> 'int' <IntegralCast>
|   |       | | | | |   |   | `-ImplicitCastExpr 0x1d96eef88c8 <col:15, col:18> 'unsigned char' <LValueToRValue>
|   |       | | | | |   |   |   `-ArraySubscriptExpr 0x1d96eef8880 <col:15, col:18> 'const unsigned char' lvalue
|   |       | | | | |   |   |     |-ImplicitCastExpr 0x1d96eef8868 <col:15> 'const unsigned char *' <LValueToRValue>
|   |       | | | | |   |   |     | `-DeclRefExpr 0x1d96eef8820 <col:15> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |       | | | | |   |   |     `-IntegerLiteral 0x1d96eef8840 <col:17> 'int' 1
|   |       | | | | |   |   `-IntegerLiteral 0x1d96eef88a0 <col:22> 'int' 192
|   |       | | | | |   `-IntegerLiteral 0x1d96eef8938 <col:31> 'int' 128
|   |       | | | | `-ParenExpr 0x1d96eef8b00 <line:66:16, col:38> 'int'
|   |       | | | |   `-BinaryOperator 0x1d96eef8ae0 <col:17, col:34> 'int' '!='
|   |       | | | |     |-ParenExpr 0x1d96eef8a98 <col:17, col:29> 'int'
|   |       | | | |     | `-BinaryOperator 0x1d96eef8a78 <col:18, col:25> 'int' '&'
|   |       | | | |     |   |-ImplicitCastExpr 0x1d96eef8a60 <col:18, col:21> 'int' <IntegralCast>
|   |       | | | |     |   | `-ImplicitCastExpr 0x1d96eef8a48 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |       | | | |     |   |   `-ArraySubscriptExpr 0x1d96eef8a00 <col:18, col:21> 'const unsigned char' lvalue
|   |       | | | |     |   |     |-ImplicitCastExpr 0x1d96eef89e8 <col:18> 'const unsigned char *' <LValueToRValue>
|   |       | | | |     |   |     | `-DeclRefExpr 0x1d96eef89a0 <col:18> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |       | | | |     |   |     `-IntegerLiteral 0x1d96eef89c0 <col:20> 'int' 2
|   |       | | | |     |   `-IntegerLiteral 0x1d96eef8a20 <col:25> 'int' 192
|   |       | | | |     `-IntegerLiteral 0x1d96eef8ab8 <col:34> 'int' 128
|   |       | | | `-ParenExpr 0x1d96eef8ca0 <line:67:16, col:38> 'int'
|   |       | | |   `-BinaryOperator 0x1d96eef8c80 <col:17, col:34> 'int' '!='
|   |       | | |     |-ParenExpr 0x1d96eef8c38 <col:17, col:29> 'int'
|   |       | | |     | `-BinaryOperator 0x1d96eef8c18 <col:18, col:25> 'int' '&'
|   |       | | |     |   |-ImplicitCastExpr 0x1d96eef8c00 <col:18, col:21> 'int' <IntegralCast>
|   |       | | |     |   | `-ImplicitCastExpr 0x1d96eef8be8 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |       | | |     |   |   `-ArraySubscriptExpr 0x1d96eef8ba0 <col:18, col:21> 'const unsigned char' lvalue
|   |       | | |     |   |     |-ImplicitCastExpr 0x1d96eef8b88 <col:18> 'const unsigned char *' <LValueToRValue>
|   |       | | |     |   |     | `-DeclRefExpr 0x1d96eef8b40 <col:18> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |       | | |     |   |     `-IntegerLiteral 0x1d96eef8b60 <col:20> 'int' 3
|   |       | | |     |   `-IntegerLiteral 0x1d96eef8bc0 <col:25> 'int' 192
|   |       | | |     `-IntegerLiteral 0x1d96eef8c58 <col:34> 'int' 128
|   |       | | `-ReturnStmt 0x1d96eef8d20 <line:68:13, col:21>
|   |       | |   `-UnaryOperator 0x1d96eef8d08 <col:20, col:21> 'int' prefix '-'
|   |       | |     `-IntegerLiteral 0x1d96eef8ce0 <col:21> 'int' 3
|   |       | |-BinaryOperator 0x1d96eef8f18 <line:69:9, col:50> 'unsigned long' '='
|   |       | | |-DeclRefExpr 0x1d96eef8d48 <col:9> 'unsigned long' lvalue Var 0x1d96eeefc00 'value' 'unsigned long'
|   |       | | `-BinaryOperator 0x1d96eef8ef8 <col:17, col:50> 'unsigned long' '<<'
|   |       | |   |-ParenExpr 0x1d96eef8eb0 <col:17, col:45> 'unsigned long'
|   |       | |   | `-CStyleCastExpr 0x1d96eef8e88 <col:18, col:44> 'unsigned long' <IntegralCast>
|   |       | |   |   `-ParenExpr 0x1d96eef8e68 <col:33, col:44> 'int'
|   |       | |   |     `-BinaryOperator 0x1d96eef8e10 <col:34, col:41> 'int' '&'
|   |       | |   |       |-ImplicitCastExpr 0x1d96eef8df8 <col:34, col:36> 'int' <IntegralCast>
|   |       | |   |       | `-ImplicitCastExpr 0x1d96eef8de0 <col:34, col:36> 'unsigned char' <LValueToRValue>
|   |       | |   |       |   `-UnaryOperator 0x1d96eef8da0 <col:34, col:36> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |       | |   |       |     `-UnaryOperator 0x1d96eef8d88 <col:35, col:36> 'const unsigned char *' postfix '++'
|   |       | |   |       |       `-DeclRefExpr 0x1d96eef8d68 <col:35> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |       | |   |       `-IntegerLiteral 0x1d96eef8db8 <col:41> 'int' 7
|   |       | |   `-IntegerLiteral 0x1d96eef8ed0 <col:50> 'int' 18
|   |       | |-CompoundAssignOperator 0x1d96eef90a0 <line:70:9, col:35> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |       | | |-DeclRefExpr 0x1d96eef8f38 <col:9> 'unsigned long' lvalue Var 0x1d96eeefc00 'value' 'unsigned long'
|   |       | | `-ImplicitCastExpr 0x1d96eef9088 <col:18, col:35> 'unsigned long' <IntegralCast>
|   |       | |   `-BinaryOperator 0x1d96eef9068 <col:18, col:35> 'int' '<<'
|   |       | |     |-ParenExpr 0x1d96eef9020 <col:18, col:30> 'int'
|   |       | |     | `-BinaryOperator 0x1d96eef9000 <col:19, col:26> 'int' '&'
|   |       | |     |   |-ImplicitCastExpr 0x1d96eef8fe8 <col:19, col:21> 'int' <IntegralCast>
|   |       | |     |   | `-ImplicitCastExpr 0x1d96eef8fd0 <col:19, col:21> 'unsigned char' <LValueToRValue>
|   |       | |     |   |   `-UnaryOperator 0x1d96eef8f90 <col:19, col:21> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |       | |     |   |     `-UnaryOperator 0x1d96eef8f78 <col:20, col:21> 'const unsigned char *' postfix '++'
|   |       | |     |   |       `-DeclRefExpr 0x1d96eef8f58 <col:20> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |       | |     |   `-IntegerLiteral 0x1d96eef8fa8 <col:26> 'int' 63
|   |       | |     `-IntegerLiteral 0x1d96eef9040 <col:35> 'int' 12
|   |       | |-CompoundAssignOperator 0x1d96eef9248 <line:71:9, col:35> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |       | | |-DeclRefExpr 0x1d96eef90d0 <col:9> 'unsigned long' lvalue Var 0x1d96eeefc00 'value' 'unsigned long'
|   |       | | `-ImplicitCastExpr 0x1d96eef9230 <col:18, col:35> 'unsigned long' <IntegralCast>
|   |       | |   `-BinaryOperator 0x1d96eef9210 <col:18, col:35> 'int' '<<'
|   |       | |     |-ParenExpr 0x1d96eef91b8 <col:18, col:30> 'int'
|   |       | |     | `-BinaryOperator 0x1d96eef9198 <col:19, col:26> 'int' '&'
|   |       | |     |   |-ImplicitCastExpr 0x1d96eef9180 <col:19, col:21> 'int' <IntegralCast>
|   |       | |     |   | `-ImplicitCastExpr 0x1d96eef9168 <col:19, col:21> 'unsigned char' <LValueToRValue>
|   |       | |     |   |   `-UnaryOperator 0x1d96eef9128 <col:19, col:21> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |       | |     |   |     `-UnaryOperator 0x1d96eef9110 <col:20, col:21> 'const unsigned char *' postfix '++'
|   |       | |     |   |       `-DeclRefExpr 0x1d96eef90f0 <col:20> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |       | |     |   `-IntegerLiteral 0x1d96eef9140 <col:26> 'int' 63
|   |       | |     `-IntegerLiteral 0x1d96eef91d8 <col:35> 'int' 6
|   |       | |-CompoundAssignOperator 0x1d96eef9378 <line:72:9, col:25> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |       | | |-DeclRefExpr 0x1d96eef9278 <col:9> 'unsigned long' lvalue Var 0x1d96eeefc00 'value' 'unsigned long'
|   |       | | `-ImplicitCastExpr 0x1d96eef9360 <col:18, col:25> 'unsigned long' <IntegralCast>
|   |       | |   `-BinaryOperator 0x1d96eef9340 <col:18, col:25> 'int' '&'
|   |       | |     |-ImplicitCastExpr 0x1d96eef9328 <col:18, col:20> 'int' <IntegralCast>
|   |       | |     | `-ImplicitCastExpr 0x1d96eef9310 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |       | |     |   `-UnaryOperator 0x1d96eef92d0 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |       | |     |     `-UnaryOperator 0x1d96eef92b8 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |       | |     |       `-DeclRefExpr 0x1d96eef9298 <col:19> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |       | |     `-IntegerLiteral 0x1d96eef92e8 <col:25> 'int' 63
|   |       | |-IfStmt 0x1d96eef9490 <line:73:9, line:74:21>
|   |       | | |-BinaryOperator 0x1d96eef9420 <line:73:13, col:21> 'int' '<'
|   |       | | | |-ImplicitCastExpr 0x1d96eef93f0 <col:13> 'unsigned long' <LValueToRValue>
|   |       | | | | `-DeclRefExpr 0x1d96eef93a8 <col:13> 'unsigned long' lvalue Var 0x1d96eeefc00 'value' 'unsigned long'
|   |       | | | `-ImplicitCastExpr 0x1d96eef9408 <col:21> 'unsigned long' <IntegralCast>
|   |       | | |   `-IntegerLiteral 0x1d96eef93c8 <col:21> 'int' 65536
|   |       | | `-ReturnStmt 0x1d96eef9480 <line:74:13, col:21>
|   |       | |   `-UnaryOperator 0x1d96eef9468 <col:20, col:21> 'int' prefix '-'
|   |       | |     `-IntegerLiteral 0x1d96eef9440 <col:21> 'int' 4
|   |       | `-BinaryOperator 0x1d96eef94f0 <line:75:9, col:15> 'int' '='
|   |       |   |-DeclRefExpr 0x1d96eef94a8 <col:9> 'int' lvalue Var 0x1d96eeefc98 'ret' 'int'
|   |       |   `-IntegerLiteral 0x1d96eef94c8 <col:15> 'int' 4
|   |       `-IfStmt 0x1d96eefc070 <line:76:12, line:111:17> has_else
|   |         |-BinaryOperator 0x1d96eef9670 <line:76:16, col:31> 'int' '=='
|   |         | |-ParenExpr 0x1d96eef9628 <col:16, col:26> 'int'
|   |         | | `-BinaryOperator 0x1d96eef9608 <col:17, col:22> 'int' '&'
|   |         | |   |-ImplicitCastExpr 0x1d96eef95f0 <col:17, col:18> 'int' <IntegralCast>
|   |         | |   | `-ImplicitCastExpr 0x1d96eef95d8 <col:17, col:18> 'unsigned char' <LValueToRValue>
|   |         | |   |   `-UnaryOperator 0x1d96eef9598 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         | |   |     `-ImplicitCastExpr 0x1d96eef9580 <col:18> 'const unsigned char *' <LValueToRValue>
|   |         | |   |       `-DeclRefExpr 0x1d96eef9560 <col:18> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |         | |   `-IntegerLiteral 0x1d96eef95b0 <col:22> 'int' 252
|   |         | `-IntegerLiteral 0x1d96eef9648 <col:31> 'int' 248
|   |         |-CompoundStmt 0x1d96eefa880 <col:37, line:92:5>
|   |         | |-IfStmt 0x1d96eef9760 <line:77:9, line:78:21>
|   |         | | |-BinaryOperator 0x1d96eef96f0 <line:77:13, col:19> 'int' '<'
|   |         | | | |-ImplicitCastExpr 0x1d96eef96d8 <col:13> 'int' <LValueToRValue>
|   |         | | | | `-DeclRefExpr 0x1d96eef9690 <col:13> 'int' lvalue ParmVar 0x1d96eeef8a0 'len' 'int'
|   |         | | | `-IntegerLiteral 0x1d96eef96b0 <col:19> 'int' 5
|   |         | | `-ReturnStmt 0x1d96eef9750 <line:78:13, col:21>
|   |         | |   `-UnaryOperator 0x1d96eef9738 <col:20, col:21> 'int' prefix '-'
|   |         | |     `-IntegerLiteral 0x1d96eef9710 <col:21> 'int' 1
|   |         | |-IfStmt 0x1d96eef9e28 <line:79:9, line:83:21>
|   |         | | |-BinaryOperator 0x1d96eef9db8 <line:79:13, line:82:38> 'int' '||'
|   |         | | | |-BinaryOperator 0x1d96eef9c18 <line:79:13, line:81:38> 'int' '||'
|   |         | | | | |-BinaryOperator 0x1d96eef9a78 <line:79:13, line:80:38> 'int' '||'
|   |         | | | | | |-ParenExpr 0x1d96eef98d8 <line:79:13, col:35> 'int'
|   |         | | | | | | `-BinaryOperator 0x1d96eef98b8 <col:14, col:31> 'int' '!='
|   |         | | | | | |   |-ParenExpr 0x1d96eef9870 <col:14, col:26> 'int'
|   |         | | | | | |   | `-BinaryOperator 0x1d96eef9850 <col:15, col:22> 'int' '&'
|   |         | | | | | |   |   |-ImplicitCastExpr 0x1d96eef9838 <col:15, col:18> 'int' <IntegralCast>
|   |         | | | | | |   |   | `-ImplicitCastExpr 0x1d96eef9820 <col:15, col:18> 'unsigned char' <LValueToRValue>
|   |         | | | | | |   |   |   `-ArraySubscriptExpr 0x1d96eef97d8 <col:15, col:18> 'const unsigned char' lvalue
|   |         | | | | | |   |   |     |-ImplicitCastExpr 0x1d96eef97c0 <col:15> 'const unsigned char *' <LValueToRValue>
|   |         | | | | | |   |   |     | `-DeclRefExpr 0x1d96eef9778 <col:15> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |         | | | | | |   |   |     `-IntegerLiteral 0x1d96eef9798 <col:17> 'int' 1
|   |         | | | | | |   |   `-IntegerLiteral 0x1d96eef97f8 <col:22> 'int' 192
|   |         | | | | | |   `-IntegerLiteral 0x1d96eef9890 <col:31> 'int' 128
|   |         | | | | | `-ParenExpr 0x1d96eef9a58 <line:80:16, col:38> 'int'
|   |         | | | | |   `-BinaryOperator 0x1d96eef9a38 <col:17, col:34> 'int' '!='
|   |         | | | | |     |-ParenExpr 0x1d96eef99f0 <col:17, col:29> 'int'
|   |         | | | | |     | `-BinaryOperator 0x1d96eef99d0 <col:18, col:25> 'int' '&'
|   |         | | | | |     |   |-ImplicitCastExpr 0x1d96eef99b8 <col:18, col:21> 'int' <IntegralCast>
|   |         | | | | |     |   | `-ImplicitCastExpr 0x1d96eef99a0 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |         | | | | |     |   |   `-ArraySubscriptExpr 0x1d96eef9958 <col:18, col:21> 'const unsigned char' lvalue
|   |         | | | | |     |   |     |-ImplicitCastExpr 0x1d96eef9940 <col:18> 'const unsigned char *' <LValueToRValue>
|   |         | | | | |     |   |     | `-DeclRefExpr 0x1d96eef98f8 <col:18> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |         | | | | |     |   |     `-IntegerLiteral 0x1d96eef9918 <col:20> 'int' 2
|   |         | | | | |     |   `-IntegerLiteral 0x1d96eef9978 <col:25> 'int' 192
|   |         | | | | |     `-IntegerLiteral 0x1d96eef9a10 <col:34> 'int' 128
|   |         | | | | `-ParenExpr 0x1d96eef9bf8 <line:81:16, col:38> 'int'
|   |         | | | |   `-BinaryOperator 0x1d96eef9bd8 <col:17, col:34> 'int' '!='
|   |         | | | |     |-ParenExpr 0x1d96eef9b90 <col:17, col:29> 'int'
|   |         | | | |     | `-BinaryOperator 0x1d96eef9b70 <col:18, col:25> 'int' '&'
|   |         | | | |     |   |-ImplicitCastExpr 0x1d96eef9b58 <col:18, col:21> 'int' <IntegralCast>
|   |         | | | |     |   | `-ImplicitCastExpr 0x1d96eef9b40 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |         | | | |     |   |   `-ArraySubscriptExpr 0x1d96eef9af8 <col:18, col:21> 'const unsigned char' lvalue
|   |         | | | |     |   |     |-ImplicitCastExpr 0x1d96eef9ae0 <col:18> 'const unsigned char *' <LValueToRValue>
|   |         | | | |     |   |     | `-DeclRefExpr 0x1d96eef9a98 <col:18> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |         | | | |     |   |     `-IntegerLiteral 0x1d96eef9ab8 <col:20> 'int' 3
|   |         | | | |     |   `-IntegerLiteral 0x1d96eef9b18 <col:25> 'int' 192
|   |         | | | |     `-IntegerLiteral 0x1d96eef9bb0 <col:34> 'int' 128
|   |         | | | `-ParenExpr 0x1d96eef9d98 <line:82:16, col:38> 'int'
|   |         | | |   `-BinaryOperator 0x1d96eef9d78 <col:17, col:34> 'int' '!='
|   |         | | |     |-ParenExpr 0x1d96eef9d30 <col:17, col:29> 'int'
|   |         | | |     | `-BinaryOperator 0x1d96eef9d10 <col:18, col:25> 'int' '&'
|   |         | | |     |   |-ImplicitCastExpr 0x1d96eef9cf8 <col:18, col:21> 'int' <IntegralCast>
|   |         | | |     |   | `-ImplicitCastExpr 0x1d96eef9ce0 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |         | | |     |   |   `-ArraySubscriptExpr 0x1d96eef9c98 <col:18, col:21> 'const unsigned char' lvalue
|   |         | | |     |   |     |-ImplicitCastExpr 0x1d96eef9c80 <col:18> 'const unsigned char *' <LValueToRValue>
|   |         | | |     |   |     | `-DeclRefExpr 0x1d96eef9c38 <col:18> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |         | | |     |   |     `-IntegerLiteral 0x1d96eef9c58 <col:20> 'int' 4
|   |         | | |     |   `-IntegerLiteral 0x1d96eef9cb8 <col:25> 'int' 192
|   |         | | |     `-IntegerLiteral 0x1d96eef9d50 <col:34> 'int' 128
|   |         | | `-ReturnStmt 0x1d96eef9e18 <line:83:13, col:21>
|   |         | |   `-UnaryOperator 0x1d96eef9e00 <col:20, col:21> 'int' prefix '-'
|   |         | |     `-IntegerLiteral 0x1d96eef9dd8 <col:21> 'int' 3
|   |         | |-BinaryOperator 0x1d96eefa010 <line:84:9, col:50> 'unsigned long' '='
|   |         | | |-DeclRefExpr 0x1d96eef9e40 <col:9> 'unsigned long' lvalue Var 0x1d96eeefc00 'value' 'unsigned long'
|   |         | | `-BinaryOperator 0x1d96eef9ff0 <col:17, col:50> 'unsigned long' '<<'
|   |         | |   |-ParenExpr 0x1d96eef9fa8 <col:17, col:45> 'unsigned long'
|   |         | |   | `-CStyleCastExpr 0x1d96eef9f80 <col:18, col:44> 'unsigned long' <IntegralCast>
|   |         | |   |   `-ParenExpr 0x1d96eef9f60 <col:33, col:44> 'int'
|   |         | |   |     `-BinaryOperator 0x1d96eef9f08 <col:34, col:41> 'int' '&'
|   |         | |   |       |-ImplicitCastExpr 0x1d96eef9ef0 <col:34, col:36> 'int' <IntegralCast>
|   |         | |   |       | `-ImplicitCastExpr 0x1d96eef9ed8 <col:34, col:36> 'unsigned char' <LValueToRValue>
|   |         | |   |       |   `-UnaryOperator 0x1d96eef9e98 <col:34, col:36> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         | |   |       |     `-UnaryOperator 0x1d96eef9e80 <col:35, col:36> 'const unsigned char *' postfix '++'
|   |         | |   |       |       `-DeclRefExpr 0x1d96eef9e60 <col:35> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |         | |   |       `-IntegerLiteral 0x1d96eef9eb0 <col:41> 'int' 3
|   |         | |   `-IntegerLiteral 0x1d96eef9fc8 <col:50> 'int' 24
|   |         | |-CompoundAssignOperator 0x1d96eefa220 <line:85:9, col:52> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |         | | |-DeclRefExpr 0x1d96eefa030 <col:9> 'unsigned long' lvalue Var 0x1d96eeefc00 'value' 'unsigned long'
|   |         | | `-BinaryOperator 0x1d96eefa1e0 <col:18, col:52> 'unsigned long' '<<'
|   |         | |   |-ParenExpr 0x1d96eefa198 <col:18, col:47> 'unsigned long'
|   |         | |   | `-CStyleCastExpr 0x1d96eefa170 <col:19, col:46> 'unsigned long' <IntegralCast>
|   |         | |   |   `-ParenExpr 0x1d96eefa150 <col:34, col:46> 'int'
|   |         | |   |     `-BinaryOperator 0x1d96eefa0f8 <col:35, col:42> 'int' '&'
|   |         | |   |       |-ImplicitCastExpr 0x1d96eefa0e0 <col:35, col:37> 'int' <IntegralCast>
|   |         | |   |       | `-ImplicitCastExpr 0x1d96eefa0c8 <col:35, col:37> 'unsigned char' <LValueToRValue>
|   |         | |   |       |   `-UnaryOperator 0x1d96eefa088 <col:35, col:37> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         | |   |       |     `-UnaryOperator 0x1d96eefa070 <col:36, col:37> 'const unsigned char *' postfix '++'
|   |         | |   |       |       `-DeclRefExpr 0x1d96eefa050 <col:36> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |         | |   |       `-IntegerLiteral 0x1d96eefa0a0 <col:42> 'int' 63
|   |         | |   `-IntegerLiteral 0x1d96eefa1b8 <col:52> 'int' 18
|   |         | |-CompoundAssignOperator 0x1d96eefa420 <line:86:9, col:52> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |         | | |-DeclRefExpr 0x1d96eefa250 <col:9> 'unsigned long' lvalue Var 0x1d96eeefc00 'value' 'unsigned long'
|   |         | | `-BinaryOperator 0x1d96eefa400 <col:18, col:52> 'unsigned long' '<<'
|   |         | |   |-ParenExpr 0x1d96eefa3b8 <col:18, col:47> 'unsigned long'
|   |         | |   | `-CStyleCastExpr 0x1d96eefa390 <col:19, col:46> 'unsigned long' <IntegralCast>
|   |         | |   |   `-ParenExpr 0x1d96eefa370 <col:34, col:46> 'int'
|   |         | |   |     `-BinaryOperator 0x1d96eefa318 <col:35, col:42> 'int' '&'
|   |         | |   |       |-ImplicitCastExpr 0x1d96eefa300 <col:35, col:37> 'int' <IntegralCast>
|   |         | |   |       | `-ImplicitCastExpr 0x1d96eefa2e8 <col:35, col:37> 'unsigned char' <LValueToRValue>
|   |         | |   |       |   `-UnaryOperator 0x1d96eefa2a8 <col:35, col:37> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         | |   |       |     `-UnaryOperator 0x1d96eefa290 <col:36, col:37> 'const unsigned char *' postfix '++'
|   |         | |   |       |       `-DeclRefExpr 0x1d96eefa270 <col:36> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |         | |   |       `-IntegerLiteral 0x1d96eefa2c0 <col:42> 'int' 63
|   |         | |   `-IntegerLiteral 0x1d96eefa3d8 <col:52> 'int' 12
|   |         | |-CompoundAssignOperator 0x1d96eefa5b8 <line:87:9, col:35> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |         | | |-DeclRefExpr 0x1d96eefa450 <col:9> 'unsigned long' lvalue Var 0x1d96eeefc00 'value' 'unsigned long'
|   |         | | `-ImplicitCastExpr 0x1d96eefa5a0 <col:18, col:35> 'unsigned long' <IntegralCast>
|   |         | |   `-BinaryOperator 0x1d96eefa580 <col:18, col:35> 'int' '<<'
|   |         | |     |-ParenExpr 0x1d96eefa538 <col:18, col:30> 'int'
|   |         | |     | `-BinaryOperator 0x1d96eefa518 <col:19, col:26> 'int' '&'
|   |         | |     |   |-ImplicitCastExpr 0x1d96eefa500 <col:19, col:21> 'int' <IntegralCast>
|   |         | |     |   | `-ImplicitCastExpr 0x1d96eefa4e8 <col:19, col:21> 'unsigned char' <LValueToRValue>
|   |         | |     |   |   `-UnaryOperator 0x1d96eefa4a8 <col:19, col:21> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         | |     |   |     `-UnaryOperator 0x1d96eefa490 <col:20, col:21> 'const unsigned char *' postfix '++'
|   |         | |     |   |       `-DeclRefExpr 0x1d96eefa470 <col:20> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |         | |     |   `-IntegerLiteral 0x1d96eefa4c0 <col:26> 'int' 63
|   |         | |     `-IntegerLiteral 0x1d96eefa558 <col:35> 'int' 6
|   |         | |-CompoundAssignOperator 0x1d96eefa6e8 <line:88:9, col:25> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |         | | |-DeclRefExpr 0x1d96eefa5e8 <col:9> 'unsigned long' lvalue Var 0x1d96eeefc00 'value' 'unsigned long'
|   |         | | `-ImplicitCastExpr 0x1d96eefa6d0 <col:18, col:25> 'unsigned long' <IntegralCast>
|   |         | |   `-BinaryOperator 0x1d96eefa6b0 <col:18, col:25> 'int' '&'
|   |         | |     |-ImplicitCastExpr 0x1d96eefa698 <col:18, col:20> 'int' <IntegralCast>
|   |         | |     | `-ImplicitCastExpr 0x1d96eefa680 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |         | |     |   `-UnaryOperator 0x1d96eefa640 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         | |     |     `-UnaryOperator 0x1d96eefa628 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |         | |     |       `-DeclRefExpr 0x1d96eefa608 <col:19> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |         | |     `-IntegerLiteral 0x1d96eefa658 <col:25> 'int' 63
|   |         | |-IfStmt 0x1d96eefa800 <line:89:9, line:90:21>
|   |         | | |-BinaryOperator 0x1d96eefa790 <line:89:13, col:21> 'int' '<'
|   |         | | | |-ImplicitCastExpr 0x1d96eefa760 <col:13> 'unsigned long' <LValueToRValue>
|   |         | | | | `-DeclRefExpr 0x1d96eefa718 <col:13> 'unsigned long' lvalue Var 0x1d96eeefc00 'value' 'unsigned long'
|   |         | | | `-ImplicitCastExpr 0x1d96eefa778 <col:21> 'unsigned long' <IntegralCast>
|   |         | | |   `-IntegerLiteral 0x1d96eefa738 <col:21> 'int' 2097152
|   |         | | `-ReturnStmt 0x1d96eefa7f0 <line:90:13, col:21>
|   |         | |   `-UnaryOperator 0x1d96eefa7d8 <col:20, col:21> 'int' prefix '-'
|   |         | |     `-IntegerLiteral 0x1d96eefa7b0 <col:21> 'int' 4
|   |         | `-BinaryOperator 0x1d96eefa860 <line:91:9, col:15> 'int' '='
|   |         |   |-DeclRefExpr 0x1d96eefa818 <col:9> 'int' lvalue Var 0x1d96eeefc98 'ret' 'int'
|   |         |   `-IntegerLiteral 0x1d96eefa838 <col:15> 'int' 5
|   |         `-IfStmt 0x1d96eefc048 <line:92:12, line:111:17> has_else
|   |           |-BinaryOperator 0x1d96eefa9e8 <line:92:16, col:31> 'int' '=='
|   |           | |-ParenExpr 0x1d96eefa9a0 <col:16, col:26> 'int'
|   |           | | `-BinaryOperator 0x1d96eefa980 <col:17, col:22> 'int' '&'
|   |           | |   |-ImplicitCastExpr 0x1d96eefa968 <col:17, col:18> 'int' <IntegralCast>
|   |           | |   | `-ImplicitCastExpr 0x1d96eefa950 <col:17, col:18> 'unsigned char' <LValueToRValue>
|   |           | |   |   `-UnaryOperator 0x1d96eefa910 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |   |     `-ImplicitCastExpr 0x1d96eefa8f8 <col:18> 'const unsigned char *' <LValueToRValue>
|   |           | |   |       `-DeclRefExpr 0x1d96eefa8d8 <col:18> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |           | |   `-IntegerLiteral 0x1d96eefa928 <col:22> 'int' 254
|   |           | `-IntegerLiteral 0x1d96eefa9c0 <col:31> 'int' 252
|   |           |-CompoundStmt 0x1d96eefbf98 <col:37, line:110:5>
|   |           | |-IfStmt 0x1d96eefaad8 <line:93:9, line:94:21>
|   |           | | |-BinaryOperator 0x1d96eefaa68 <line:93:13, col:19> 'int' '<'
|   |           | | | |-ImplicitCastExpr 0x1d96eefaa50 <col:13> 'int' <LValueToRValue>
|   |           | | | | `-DeclRefExpr 0x1d96eefaa08 <col:13> 'int' lvalue ParmVar 0x1d96eeef8a0 'len' 'int'
|   |           | | | `-IntegerLiteral 0x1d96eefaa28 <col:19> 'int' 6
|   |           | | `-ReturnStmt 0x1d96eefaac8 <line:94:13, col:21>
|   |           | |   `-UnaryOperator 0x1d96eefaab0 <col:20, col:21> 'int' prefix '-'
|   |           | |     `-IntegerLiteral 0x1d96eefaa88 <col:21> 'int' 1
|   |           | |-IfStmt 0x1d96eefb360 <line:95:9, line:100:21>
|   |           | | |-BinaryOperator 0x1d96eefb2f0 <line:95:13, line:99:38> 'int' '||'
|   |           | | | |-BinaryOperator 0x1d96eefb130 <line:95:13, line:98:38> 'int' '||'
|   |           | | | | |-BinaryOperator 0x1d96eefaf90 <line:95:13, line:97:38> 'int' '||'
|   |           | | | | | |-BinaryOperator 0x1d96eefadf0 <line:95:13, line:96:38> 'int' '||'
|   |           | | | | | | |-ParenExpr 0x1d96eefac50 <line:95:13, col:35> 'int'
|   |           | | | | | | | `-BinaryOperator 0x1d96eefac30 <col:14, col:31> 'int' '!='
|   |           | | | | | | |   |-ParenExpr 0x1d96eefabe8 <col:14, col:26> 'int'
|   |           | | | | | | |   | `-BinaryOperator 0x1d96eefabc8 <col:15, col:22> 'int' '&'
|   |           | | | | | | |   |   |-ImplicitCastExpr 0x1d96eefabb0 <col:15, col:18> 'int' <IntegralCast>
|   |           | | | | | | |   |   | `-ImplicitCastExpr 0x1d96eefab98 <col:15, col:18> 'unsigned char' <LValueToRValue>
|   |           | | | | | | |   |   |   `-ArraySubscriptExpr 0x1d96eefab50 <col:15, col:18> 'const unsigned char' lvalue
|   |           | | | | | | |   |   |     |-ImplicitCastExpr 0x1d96eefab38 <col:15> 'const unsigned char *' <LValueToRValue>
|   |           | | | | | | |   |   |     | `-DeclRefExpr 0x1d96eefaaf0 <col:15> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |           | | | | | | |   |   |     `-IntegerLiteral 0x1d96eefab10 <col:17> 'int' 1
|   |           | | | | | | |   |   `-IntegerLiteral 0x1d96eefab70 <col:22> 'int' 192
|   |           | | | | | | |   `-IntegerLiteral 0x1d96eefac08 <col:31> 'int' 128
|   |           | | | | | | `-ParenExpr 0x1d96eefadd0 <line:96:16, col:38> 'int'
|   |           | | | | | |   `-BinaryOperator 0x1d96eefadb0 <col:17, col:34> 'int' '!='
|   |           | | | | | |     |-ParenExpr 0x1d96eefad68 <col:17, col:29> 'int'
|   |           | | | | | |     | `-BinaryOperator 0x1d96eefad48 <col:18, col:25> 'int' '&'
|   |           | | | | | |     |   |-ImplicitCastExpr 0x1d96eefad30 <col:18, col:21> 'int' <IntegralCast>
|   |           | | | | | |     |   | `-ImplicitCastExpr 0x1d96eefad18 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |           | | | | | |     |   |   `-ArraySubscriptExpr 0x1d96eefacd0 <col:18, col:21> 'const unsigned char' lvalue
|   |           | | | | | |     |   |     |-ImplicitCastExpr 0x1d96eefacb8 <col:18> 'const unsigned char *' <LValueToRValue>
|   |           | | | | | |     |   |     | `-DeclRefExpr 0x1d96eefac70 <col:18> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |           | | | | | |     |   |     `-IntegerLiteral 0x1d96eefac90 <col:20> 'int' 2
|   |           | | | | | |     |   `-IntegerLiteral 0x1d96eefacf0 <col:25> 'int' 192
|   |           | | | | | |     `-IntegerLiteral 0x1d96eefad88 <col:34> 'int' 128
|   |           | | | | | `-ParenExpr 0x1d96eefaf70 <line:97:16, col:38> 'int'
|   |           | | | | |   `-BinaryOperator 0x1d96eefaf50 <col:17, col:34> 'int' '!='
|   |           | | | | |     |-ParenExpr 0x1d96eefaf08 <col:17, col:29> 'int'
|   |           | | | | |     | `-BinaryOperator 0x1d96eefaee8 <col:18, col:25> 'int' '&'
|   |           | | | | |     |   |-ImplicitCastExpr 0x1d96eefaed0 <col:18, col:21> 'int' <IntegralCast>
|   |           | | | | |     |   | `-ImplicitCastExpr 0x1d96eefaeb8 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |           | | | | |     |   |   `-ArraySubscriptExpr 0x1d96eefae70 <col:18, col:21> 'const unsigned char' lvalue
|   |           | | | | |     |   |     |-ImplicitCastExpr 0x1d96eefae58 <col:18> 'const unsigned char *' <LValueToRValue>
|   |           | | | | |     |   |     | `-DeclRefExpr 0x1d96eefae10 <col:18> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |           | | | | |     |   |     `-IntegerLiteral 0x1d96eefae30 <col:20> 'int' 3
|   |           | | | | |     |   `-IntegerLiteral 0x1d96eefae90 <col:25> 'int' 192
|   |           | | | | |     `-IntegerLiteral 0x1d96eefaf28 <col:34> 'int' 128
|   |           | | | | `-ParenExpr 0x1d96eefb110 <line:98:16, col:38> 'int'
|   |           | | | |   `-BinaryOperator 0x1d96eefb0f0 <col:17, col:34> 'int' '!='
|   |           | | | |     |-ParenExpr 0x1d96eefb0a8 <col:17, col:29> 'int'
|   |           | | | |     | `-BinaryOperator 0x1d96eefb088 <col:18, col:25> 'int' '&'
|   |           | | | |     |   |-ImplicitCastExpr 0x1d96eefb070 <col:18, col:21> 'int' <IntegralCast>
|   |           | | | |     |   | `-ImplicitCastExpr 0x1d96eefb058 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |           | | | |     |   |   `-ArraySubscriptExpr 0x1d96eefb010 <col:18, col:21> 'const unsigned char' lvalue
|   |           | | | |     |   |     |-ImplicitCastExpr 0x1d96eefaff8 <col:18> 'const unsigned char *' <LValueToRValue>
|   |           | | | |     |   |     | `-DeclRefExpr 0x1d96eefafb0 <col:18> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |           | | | |     |   |     `-IntegerLiteral 0x1d96eefafd0 <col:20> 'int' 4
|   |           | | | |     |   `-IntegerLiteral 0x1d96eefb030 <col:25> 'int' 192
|   |           | | | |     `-IntegerLiteral 0x1d96eefb0c8 <col:34> 'int' 128
|   |           | | | `-ParenExpr 0x1d96eefb2d0 <line:99:16, col:38> 'int'
|   |           | | |   `-BinaryOperator 0x1d96eefb2b0 <col:17, col:34> 'int' '!='
|   |           | | |     |-ParenExpr 0x1d96eefb268 <col:17, col:29> 'int'
|   |           | | |     | `-BinaryOperator 0x1d96eefb248 <col:18, col:25> 'int' '&'
|   |           | | |     |   |-ImplicitCastExpr 0x1d96eefb230 <col:18, col:21> 'int' <IntegralCast>
|   |           | | |     |   | `-ImplicitCastExpr 0x1d96eefb1f8 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |           | | |     |   |   `-ArraySubscriptExpr 0x1d96eefb1b0 <col:18, col:21> 'const unsigned char' lvalue
|   |           | | |     |   |     |-ImplicitCastExpr 0x1d96eefb198 <col:18> 'const unsigned char *' <LValueToRValue>
|   |           | | |     |   |     | `-DeclRefExpr 0x1d96eefb150 <col:18> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |           | | |     |   |     `-IntegerLiteral 0x1d96eefb170 <col:20> 'int' 5
|   |           | | |     |   `-IntegerLiteral 0x1d96eefb1d0 <col:25> 'int' 192
|   |           | | |     `-IntegerLiteral 0x1d96eefb288 <col:34> 'int' 128
|   |           | | `-ReturnStmt 0x1d96eefb350 <line:100:13, col:21>
|   |           | |   `-UnaryOperator 0x1d96eefb338 <col:20, col:21> 'int' prefix '-'
|   |           | |     `-IntegerLiteral 0x1d96eefb310 <col:21> 'int' 3
|   |           | |-BinaryOperator 0x1d96eefb548 <line:101:9, col:50> 'unsigned long' '='
|   |           | | |-DeclRefExpr 0x1d96eefb378 <col:9> 'unsigned long' lvalue Var 0x1d96eeefc00 'value' 'unsigned long'
|   |           | | `-BinaryOperator 0x1d96eefb528 <col:17, col:50> 'unsigned long' '<<'
|   |           | |   |-ParenExpr 0x1d96eefb4e0 <col:17, col:45> 'unsigned long'
|   |           | |   | `-CStyleCastExpr 0x1d96eefb4b8 <col:18, col:44> 'unsigned long' <IntegralCast>
|   |           | |   |   `-ParenExpr 0x1d96eefb498 <col:33, col:44> 'int'
|   |           | |   |     `-BinaryOperator 0x1d96eefb440 <col:34, col:41> 'int' '&'
|   |           | |   |       |-ImplicitCastExpr 0x1d96eefb428 <col:34, col:36> 'int' <IntegralCast>
|   |           | |   |       | `-ImplicitCastExpr 0x1d96eefb410 <col:34, col:36> 'unsigned char' <LValueToRValue>
|   |           | |   |       |   `-UnaryOperator 0x1d96eefb3d0 <col:34, col:36> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |   |       |     `-UnaryOperator 0x1d96eefb3b8 <col:35, col:36> 'const unsigned char *' postfix '++'
|   |           | |   |       |       `-DeclRefExpr 0x1d96eefb398 <col:35> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |           | |   |       `-IntegerLiteral 0x1d96eefb3e8 <col:41> 'int' 1
|   |           | |   `-IntegerLiteral 0x1d96eefb500 <col:50> 'int' 30
|   |           | |-CompoundAssignOperator 0x1d96eefb738 <line:102:9, col:52> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |           | | |-DeclRefExpr 0x1d96eefb568 <col:9> 'unsigned long' lvalue Var 0x1d96eeefc00 'value' 'unsigned long'
|   |           | | `-BinaryOperator 0x1d96eefb718 <col:18, col:52> 'unsigned long' '<<'
|   |           | |   |-ParenExpr 0x1d96eefb6d0 <col:18, col:47> 'unsigned long'
|   |           | |   | `-CStyleCastExpr 0x1d96eefb6a8 <col:19, col:46> 'unsigned long' <IntegralCast>
|   |           | |   |   `-ParenExpr 0x1d96eefb688 <col:34, col:46> 'int'
|   |           | |   |     `-BinaryOperator 0x1d96eefb630 <col:35, col:42> 'int' '&'
|   |           | |   |       |-ImplicitCastExpr 0x1d96eefb618 <col:35, col:37> 'int' <IntegralCast>
|   |           | |   |       | `-ImplicitCastExpr 0x1d96eefb600 <col:35, col:37> 'unsigned char' <LValueToRValue>
|   |           | |   |       |   `-UnaryOperator 0x1d96eefb5c0 <col:35, col:37> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |   |       |     `-UnaryOperator 0x1d96eefb5a8 <col:36, col:37> 'const unsigned char *' postfix '++'
|   |           | |   |       |       `-DeclRefExpr 0x1d96eefb588 <col:36> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |           | |   |       `-IntegerLiteral 0x1d96eefb5d8 <col:42> 'int' 63
|   |           | |   `-IntegerLiteral 0x1d96eefb6f0 <col:52> 'int' 24
|   |           | |-CompoundAssignOperator 0x1d96eefb938 <line:103:9, col:52> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |           | | |-DeclRefExpr 0x1d96eefb768 <col:9> 'unsigned long' lvalue Var 0x1d96eeefc00 'value' 'unsigned long'
|   |           | | `-BinaryOperator 0x1d96eefb918 <col:18, col:52> 'unsigned long' '<<'
|   |           | |   |-ParenExpr 0x1d96eefb8d0 <col:18, col:47> 'unsigned long'
|   |           | |   | `-CStyleCastExpr 0x1d96eefb8a8 <col:19, col:46> 'unsigned long' <IntegralCast>
|   |           | |   |   `-ParenExpr 0x1d96eefb888 <col:34, col:46> 'int'
|   |           | |   |     `-BinaryOperator 0x1d96eefb830 <col:35, col:42> 'int' '&'
|   |           | |   |       |-ImplicitCastExpr 0x1d96eefb818 <col:35, col:37> 'int' <IntegralCast>
|   |           | |   |       | `-ImplicitCastExpr 0x1d96eefb800 <col:35, col:37> 'unsigned char' <LValueToRValue>
|   |           | |   |       |   `-UnaryOperator 0x1d96eefb7c0 <col:35, col:37> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |   |       |     `-UnaryOperator 0x1d96eefb7a8 <col:36, col:37> 'const unsigned char *' postfix '++'
|   |           | |   |       |       `-DeclRefExpr 0x1d96eefb788 <col:36> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |           | |   |       `-IntegerLiteral 0x1d96eefb7d8 <col:42> 'int' 63
|   |           | |   `-IntegerLiteral 0x1d96eefb8f0 <col:52> 'int' 18
|   |           | |-CompoundAssignOperator 0x1d96eefbb38 <line:104:9, col:52> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |           | | |-DeclRefExpr 0x1d96eefb968 <col:9> 'unsigned long' lvalue Var 0x1d96eeefc00 'value' 'unsigned long'
|   |           | | `-BinaryOperator 0x1d96eefbb18 <col:18, col:52> 'unsigned long' '<<'
|   |           | |   |-ParenExpr 0x1d96eefbad0 <col:18, col:47> 'unsigned long'
|   |           | |   | `-CStyleCastExpr 0x1d96eefbaa8 <col:19, col:46> 'unsigned long' <IntegralCast>
|   |           | |   |   `-ParenExpr 0x1d96eefba88 <col:34, col:46> 'int'
|   |           | |   |     `-BinaryOperator 0x1d96eefba30 <col:35, col:42> 'int' '&'
|   |           | |   |       |-ImplicitCastExpr 0x1d96eefba18 <col:35, col:37> 'int' <IntegralCast>
|   |           | |   |       | `-ImplicitCastExpr 0x1d96eefba00 <col:35, col:37> 'unsigned char' <LValueToRValue>
|   |           | |   |       |   `-UnaryOperator 0x1d96eefb9c0 <col:35, col:37> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |   |       |     `-UnaryOperator 0x1d96eefb9a8 <col:36, col:37> 'const unsigned char *' postfix '++'
|   |           | |   |       |       `-DeclRefExpr 0x1d96eefb988 <col:36> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |           | |   |       `-IntegerLiteral 0x1d96eefb9d8 <col:42> 'int' 63
|   |           | |   `-IntegerLiteral 0x1d96eefbaf0 <col:52> 'int' 12
|   |           | |-CompoundAssignOperator 0x1d96eefbcd0 <line:105:9, col:35> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |           | | |-DeclRefExpr 0x1d96eefbb68 <col:9> 'unsigned long' lvalue Var 0x1d96eeefc00 'value' 'unsigned long'
|   |           | | `-ImplicitCastExpr 0x1d96eefbcb8 <col:18, col:35> 'unsigned long' <IntegralCast>
|   |           | |   `-BinaryOperator 0x1d96eefbc98 <col:18, col:35> 'int' '<<'
|   |           | |     |-ParenExpr 0x1d96eefbc50 <col:18, col:30> 'int'
|   |           | |     | `-BinaryOperator 0x1d96eefbc30 <col:19, col:26> 'int' '&'
|   |           | |     |   |-ImplicitCastExpr 0x1d96eefbc18 <col:19, col:21> 'int' <IntegralCast>
|   |           | |     |   | `-ImplicitCastExpr 0x1d96eefbc00 <col:19, col:21> 'unsigned char' <LValueToRValue>
|   |           | |     |   |   `-UnaryOperator 0x1d96eefbbc0 <col:19, col:21> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |     |   |     `-UnaryOperator 0x1d96eefbba8 <col:20, col:21> 'const unsigned char *' postfix '++'
|   |           | |     |   |       `-DeclRefExpr 0x1d96eefbb88 <col:20> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |           | |     |   `-IntegerLiteral 0x1d96eefbbd8 <col:26> 'int' 63
|   |           | |     `-IntegerLiteral 0x1d96eefbc70 <col:35> 'int' 6
|   |           | |-CompoundAssignOperator 0x1d96eefbe00 <line:106:9, col:25> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |           | | |-DeclRefExpr 0x1d96eefbd00 <col:9> 'unsigned long' lvalue Var 0x1d96eeefc00 'value' 'unsigned long'
|   |           | | `-ImplicitCastExpr 0x1d96eefbde8 <col:18, col:25> 'unsigned long' <IntegralCast>
|   |           | |   `-BinaryOperator 0x1d96eefbdc8 <col:18, col:25> 'int' '&'
|   |           | |     |-ImplicitCastExpr 0x1d96eefbdb0 <col:18, col:20> 'int' <IntegralCast>
|   |           | |     | `-ImplicitCastExpr 0x1d96eefbd98 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |           | |     |   `-UnaryOperator 0x1d96eefbd58 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |     |     `-UnaryOperator 0x1d96eefbd40 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |           | |     |       `-DeclRefExpr 0x1d96eefbd20 <col:19> 'const unsigned char *' lvalue Var 0x1d96eeefb68 'p' 'const unsigned char *'
|   |           | |     `-IntegerLiteral 0x1d96eefbd70 <col:25> 'int' 63
|   |           | |-IfStmt 0x1d96eefbf18 <line:107:9, line:108:21>
|   |           | | |-BinaryOperator 0x1d96eefbea8 <line:107:13, col:21> 'int' '<'
|   |           | | | |-ImplicitCastExpr 0x1d96eefbe78 <col:13> 'unsigned long' <LValueToRValue>
|   |           | | | | `-DeclRefExpr 0x1d96eefbe30 <col:13> 'unsigned long' lvalue Var 0x1d96eeefc00 'value' 'unsigned long'
|   |           | | | `-ImplicitCastExpr 0x1d96eefbe90 <col:21> 'unsigned long' <IntegralCast>
|   |           | | |   `-IntegerLiteral 0x1d96eefbe50 <col:21> 'int' 67108864
|   |           | | `-ReturnStmt 0x1d96eefbf08 <line:108:13, col:21>
|   |           | |   `-UnaryOperator 0x1d96eefbef0 <col:20, col:21> 'int' prefix '-'
|   |           | |     `-IntegerLiteral 0x1d96eefbec8 <col:21> 'int' 4
|   |           | `-BinaryOperator 0x1d96eefbf78 <line:109:9, col:15> 'int' '='
|   |           |   |-DeclRefExpr 0x1d96eefbf30 <col:9> 'int' lvalue Var 0x1d96eeefc98 'ret' 'int'
|   |           |   `-IntegerLiteral 0x1d96eefbf50 <col:15> 'int' 6
|   |           `-ReturnStmt 0x1d96eefc038 <line:111:9, col:17>
|   |             `-UnaryOperator 0x1d96eefc020 <col:16, col:17> 'int' prefix '-'
|   |               `-IntegerLiteral 0x1d96eefbff8 <col:17> 'int' 2
|   |-BinaryOperator 0x1d96eefc1c0 <line:112:5, col:12> 'unsigned long' '='
|   | |-UnaryOperator 0x1d96eefc170 <col:5, col:6> 'unsigned long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1d96eefc158 <col:6> 'unsigned long *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1d96eefc138 <col:6> 'unsigned long *' lvalue ParmVar 0x1d96eeef950 'val' 'unsigned long *'
|   | `-ImplicitCastExpr 0x1d96eefc1a8 <col:12> 'unsigned long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1d96eefc188 <col:12> 'unsigned long' lvalue Var 0x1d96eeefc00 'value' 'unsigned long'
|   `-ReturnStmt 0x1d96eefc218 <line:113:5, col:12>
|     `-ImplicitCastExpr 0x1d96eefc200 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1d96eefc1e0 <col:12> 'int' lvalue Var 0x1d96eeefc98 'ret' 'int'
`-FunctionDecl 0x1d96ef247e0 <line:124:1, line:188:1> line:124:5 UTF8_putc 'int (unsigned char *, int, unsigned long)'
  |-ParmVarDecl 0x1d96ef245b0 <col:15, col:30> col:30 used str 'unsigned char *'
  |-ParmVarDecl 0x1d96ef24630 <col:35, col:39> col:39 used len 'int'
  |-ParmVarDecl 0x1d96ef246b0 <col:44, col:58> col:58 used value 'unsigned long'
  `-CompoundStmt 0x1d96ef26768 <line:125:1, line:188:1>
    |-IfStmt 0x1d96ef24a50 <line:126:5, line:129:17> has_else
    | |-UnaryOperator 0x1d96ef248e8 <line:126:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1d96ef248d0 <col:10> 'unsigned char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1d96ef248b0 <col:10> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    | |-BinaryOperator 0x1d96ef24948 <line:127:9, col:15> 'int' '='
    | | |-DeclRefExpr 0x1d96ef24900 <col:9> 'int' lvalue ParmVar 0x1d96ef24630 'len' 'int'
    | | `-IntegerLiteral 0x1d96ef24920 <col:15> 'int' 6
    | `-IfStmt 0x1d96ef24a38 <line:128:10, line:129:17>
    |   |-BinaryOperator 0x1d96ef249c8 <line:128:14, col:21> 'int' '<='
    |   | |-ImplicitCastExpr 0x1d96ef249b0 <col:14> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1d96ef24968 <col:14> 'int' lvalue ParmVar 0x1d96ef24630 'len' 'int'
    |   | `-IntegerLiteral 0x1d96ef24988 <col:21> 'int' 0
    |   `-ReturnStmt 0x1d96ef24a28 <line:129:9, col:17>
    |     `-UnaryOperator 0x1d96ef24a10 <col:16, col:17> 'int' prefix '-'
    |       `-IntegerLiteral 0x1d96ef249e8 <col:17> 'int' 1
    |-IfStmt 0x1d96ef24ca0 <line:130:5, line:134:5>
    | |-BinaryOperator 0x1d96ef24af0 <line:130:9, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x1d96ef24ac0 <col:9> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1d96ef24a78 <col:9> 'unsigned long' lvalue ParmVar 0x1d96ef246b0 'value' 'unsigned long'
    | | `-ImplicitCastExpr 0x1d96ef24ad8 <col:17> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x1d96ef24a98 <col:17> 'int' 128
    | `-CompoundStmt 0x1d96ef24c80 <col:23, line:134:5>
    |   |-IfStmt 0x1d96ef24c30 <line:131:9, line:132:35>
    |   | |-ImplicitCastExpr 0x1d96ef24b30 <line:131:13> 'unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1d96ef24b10 <col:13> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    |   | `-BinaryOperator 0x1d96ef24c10 <line:132:13, col:35> 'unsigned char' '='
    |   |   |-UnaryOperator 0x1d96ef24b80 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | `-ImplicitCastExpr 0x1d96ef24b68 <col:14> 'unsigned char *' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x1d96ef24b48 <col:14> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    |   |   `-CStyleCastExpr 0x1d96ef24be8 <col:20, col:35> 'unsigned char' <IntegralCast>
    |   |     `-ImplicitCastExpr 0x1d96ef24bd0 <col:35> 'unsigned long' <LValueToRValue> part_of_explicit_cast
    |   |       `-DeclRefExpr 0x1d96ef24b98 <col:35> 'unsigned long' lvalue ParmVar 0x1d96ef246b0 'value' 'unsigned long'
    |   `-ReturnStmt 0x1d96ef24c70 <line:133:9, col:16>
    |     `-IntegerLiteral 0x1d96ef24c48 <col:16> 'int' 1
    |-IfStmt 0x1d96ef25380 <line:135:5, line:143:5>
    | |-BinaryOperator 0x1d96ef24d30 <line:135:9, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x1d96ef24d00 <col:9> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1d96ef24cb8 <col:9> 'unsigned long' lvalue ParmVar 0x1d96ef246b0 'value' 'unsigned long'
    | | `-ImplicitCastExpr 0x1d96ef24d18 <col:17> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x1d96ef24cd8 <col:17> 'int' 2048
    | `-CompoundStmt 0x1d96ef25358 <col:24, line:143:5>
    |   |-IfStmt 0x1d96ef24e20 <line:136:9, line:137:21>
    |   | |-BinaryOperator 0x1d96ef24db0 <line:136:13, col:19> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1d96ef24d98 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1d96ef24d50 <col:13> 'int' lvalue ParmVar 0x1d96ef24630 'len' 'int'
    |   | | `-IntegerLiteral 0x1d96ef24d70 <col:19> 'int' 2
    |   | `-ReturnStmt 0x1d96ef24e10 <line:137:13, col:21>
    |   |   `-UnaryOperator 0x1d96ef24df8 <col:20, col:21> 'int' prefix '-'
    |   |     `-IntegerLiteral 0x1d96ef24dd0 <col:21> 'int' 1
    |   |-IfStmt 0x1d96ef25308 <line:138:9, line:141:9>
    |   | |-ImplicitCastExpr 0x1d96ef24e58 <line:138:13> 'unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1d96ef24e38 <col:13> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    |   | `-CompoundStmt 0x1d96ef252e8 <col:18, line:141:9>
    |   |   |-BinaryOperator 0x1d96ef250c0 <line:139:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1d96ef24ea8 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1d96ef24e90 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1d96ef24e70 <col:14> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1d96ef25098 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1d96ef25078 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1d96ef25020 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1d96ef24fc0 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1d96ef24fa0 <col:39, col:54> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1d96ef24f40 <col:39, col:50> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1d96ef24f20 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1d96ef24f08 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1d96ef24ec0 <col:40> 'unsigned long' lvalue ParmVar 0x1d96ef246b0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1d96ef24ee0 <col:49> 'int' 6
    |   |   |       |   `-ImplicitCastExpr 0x1d96ef24f88 <col:54> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1d96ef24f60 <col:54> 'int' 31
    |   |   |       `-ImplicitCastExpr 0x1d96ef25008 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1d96ef24fe0 <col:62> 'int' 192
    |   |   `-BinaryOperator 0x1d96ef252c8 <line:140:13, col:57> 'unsigned char' '='
    |   |     |-UnaryOperator 0x1d96ef25118 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |     | `-ImplicitCastExpr 0x1d96ef25100 <col:14> 'unsigned char *' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x1d96ef250e0 <col:14> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    |   |     `-CStyleCastExpr 0x1d96ef252a0 <col:20, col:57> 'unsigned char' <IntegralCast>
    |   |       `-ParenExpr 0x1d96ef25280 <col:35, col:57> 'unsigned long'
    |   |         `-BinaryOperator 0x1d96ef25228 <col:36, col:53> 'unsigned long' '|'
    |   |           |-ParenExpr 0x1d96ef251c8 <col:36, col:49> 'unsigned long'
    |   |           | `-BinaryOperator 0x1d96ef251a8 <col:37, col:45> 'unsigned long' '&'
    |   |           |   |-ImplicitCastExpr 0x1d96ef25178 <col:37> 'unsigned long' <LValueToRValue>
    |   |           |   | `-DeclRefExpr 0x1d96ef25130 <col:37> 'unsigned long' lvalue ParmVar 0x1d96ef246b0 'value' 'unsigned long'
    |   |           |   `-ImplicitCastExpr 0x1d96ef25190 <col:45> 'unsigned long' <IntegralCast>
    |   |           |     `-IntegerLiteral 0x1d96ef25150 <col:45> 'int' 63
    |   |           `-ImplicitCastExpr 0x1d96ef25210 <col:53> 'unsigned long' <IntegralCast>
    |   |             `-IntegerLiteral 0x1d96ef251e8 <col:53> 'int' 128
    |   `-ReturnStmt 0x1d96ef25348 <line:142:9, col:16>
    |     `-IntegerLiteral 0x1d96ef25320 <col:16> 'int' 2
    |-IfStmt 0x1d96ef2ad40 <line:144:5, line:153:5>
    | |-BinaryOperator 0x1d96ef25410 <line:144:9, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x1d96ef253e0 <col:9> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1d96ef25398 <col:9> 'unsigned long' lvalue ParmVar 0x1d96ef246b0 'value' 'unsigned long'
    | | `-ImplicitCastExpr 0x1d96ef253f8 <col:17> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x1d96ef253b8 <col:17> 'int' 65536
    | `-CompoundStmt 0x1d96ef2ad18 <col:26, line:153:5>
    |   |-IfStmt 0x1d96ef25500 <line:145:9, line:146:21>
    |   | |-BinaryOperator 0x1d96ef25490 <line:145:13, col:19> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1d96ef25478 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1d96ef25430 <col:13> 'int' lvalue ParmVar 0x1d96ef24630 'len' 'int'
    |   | | `-IntegerLiteral 0x1d96ef25450 <col:19> 'int' 3
    |   | `-ReturnStmt 0x1d96ef254f0 <line:146:13, col:21>
    |   |   `-UnaryOperator 0x1d96ef254d8 <col:20, col:21> 'int' prefix '-'
    |   |     `-IntegerLiteral 0x1d96ef254b0 <col:21> 'int' 1
    |   |-IfStmt 0x1d96ef2acc8 <line:147:9, line:151:9>
    |   | |-ImplicitCastExpr 0x1d96ef2a5a0 <line:147:13> 'unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1d96ef2a580 <col:13> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    |   | `-CompoundStmt 0x1d96ef2aca0 <col:18, line:151:9>
    |   |   |-BinaryOperator 0x1d96ef2a808 <line:148:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1d96ef2a5f0 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1d96ef2a5d8 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1d96ef2a5b8 <col:14> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1d96ef2a7e0 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1d96ef2a7c0 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1d96ef2a768 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1d96ef2a708 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1d96ef2a6e8 <col:39, col:55> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1d96ef2a688 <col:39, col:51> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1d96ef2a668 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1d96ef2a650 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1d96ef2a608 <col:40> 'unsigned long' lvalue ParmVar 0x1d96ef246b0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1d96ef2a628 <col:49> 'int' 12
    |   |   |       |   `-ImplicitCastExpr 0x1d96ef2a6d0 <col:55> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1d96ef2a6a8 <col:55> 'int' 15
    |   |   |       `-ImplicitCastExpr 0x1d96ef2a750 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1d96ef2a728 <col:62> 'int' 224
    |   |   |-BinaryOperator 0x1d96ef2aa78 <line:149:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1d96ef2a860 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1d96ef2a848 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1d96ef2a828 <col:14> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1d96ef2aa50 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1d96ef2aa30 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1d96ef2a9d8 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1d96ef2a978 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1d96ef2a958 <col:39, col:54> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1d96ef2a8f8 <col:39, col:50> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1d96ef2a8d8 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1d96ef2a8c0 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1d96ef2a878 <col:40> 'unsigned long' lvalue ParmVar 0x1d96ef246b0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1d96ef2a898 <col:49> 'int' 6
    |   |   |       |   `-ImplicitCastExpr 0x1d96ef2a940 <col:54> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1d96ef2a918 <col:54> 'int' 63
    |   |   |       `-ImplicitCastExpr 0x1d96ef2a9c0 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1d96ef2a998 <col:62> 'int' 128
    |   |   `-BinaryOperator 0x1d96ef2ac80 <line:150:13, col:57> 'unsigned char' '='
    |   |     |-UnaryOperator 0x1d96ef2aad0 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |     | `-ImplicitCastExpr 0x1d96ef2aab8 <col:14> 'unsigned char *' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x1d96ef2aa98 <col:14> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    |   |     `-CStyleCastExpr 0x1d96ef2ac58 <col:20, col:57> 'unsigned char' <IntegralCast>
    |   |       `-ParenExpr 0x1d96ef2ac38 <col:35, col:57> 'unsigned long'
    |   |         `-BinaryOperator 0x1d96ef2abe0 <col:36, col:53> 'unsigned long' '|'
    |   |           |-ParenExpr 0x1d96ef2ab80 <col:36, col:49> 'unsigned long'
    |   |           | `-BinaryOperator 0x1d96ef2ab60 <col:37, col:45> 'unsigned long' '&'
    |   |           |   |-ImplicitCastExpr 0x1d96ef2ab30 <col:37> 'unsigned long' <LValueToRValue>
    |   |           |   | `-DeclRefExpr 0x1d96ef2aae8 <col:37> 'unsigned long' lvalue ParmVar 0x1d96ef246b0 'value' 'unsigned long'
    |   |           |   `-ImplicitCastExpr 0x1d96ef2ab48 <col:45> 'unsigned long' <IntegralCast>
    |   |           |     `-IntegerLiteral 0x1d96ef2ab08 <col:45> 'int' 63
    |   |           `-ImplicitCastExpr 0x1d96ef2abc8 <col:53> 'unsigned long' <IntegralCast>
    |   |             `-IntegerLiteral 0x1d96ef2aba0 <col:53> 'int' 128
    |   `-ReturnStmt 0x1d96ef2ad08 <line:152:9, col:16>
    |     `-IntegerLiteral 0x1d96ef2ace0 <col:16> 'int' 3
    |-IfStmt 0x1d96ef258e0 <line:154:5, line:164:5>
    | |-BinaryOperator 0x1d96ef2add0 <line:154:9, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x1d96ef2ada0 <col:9> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1d96ef2ad58 <col:9> 'unsigned long' lvalue ParmVar 0x1d96ef246b0 'value' 'unsigned long'
    | | `-ImplicitCastExpr 0x1d96ef2adb8 <col:17> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x1d96ef2ad78 <col:17> 'int' 2097152
    | `-CompoundStmt 0x1d96ef258b8 <col:27, line:164:5>
    |   |-IfStmt 0x1d96ef2aec0 <line:155:9, line:156:21>
    |   | |-BinaryOperator 0x1d96ef2ae50 <line:155:13, col:19> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1d96ef2ae38 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1d96ef2adf0 <col:13> 'int' lvalue ParmVar 0x1d96ef24630 'len' 'int'
    |   | | `-IntegerLiteral 0x1d96ef2ae10 <col:19> 'int' 4
    |   | `-ReturnStmt 0x1d96ef2aeb0 <line:156:13, col:21>
    |   |   `-UnaryOperator 0x1d96ef2ae98 <col:20, col:21> 'int' prefix '-'
    |   |     `-IntegerLiteral 0x1d96ef2ae70 <col:21> 'int' 1
    |   |-IfStmt 0x1d96ef25868 <line:157:9, line:162:9>
    |   | |-ImplicitCastExpr 0x1d96ef2aef8 <line:157:13> 'unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1d96ef2aed8 <col:13> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    |   | `-CompoundStmt 0x1d96ef25838 <col:18, line:162:9>
    |   |   |-BinaryOperator 0x1d96ef2b160 <line:158:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1d96ef2af48 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1d96ef2af30 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1d96ef2af10 <col:14> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1d96ef2b138 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1d96ef2b118 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1d96ef2b0c0 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1d96ef2b060 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1d96ef2b040 <col:39, col:55> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1d96ef2afe0 <col:39, col:51> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1d96ef2afc0 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1d96ef2afa8 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1d96ef2af60 <col:40> 'unsigned long' lvalue ParmVar 0x1d96ef246b0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1d96ef2af80 <col:49> 'int' 18
    |   |   |       |   `-ImplicitCastExpr 0x1d96ef2b028 <col:55> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1d96ef2b000 <col:55> 'int' 7
    |   |   |       `-ImplicitCastExpr 0x1d96ef2b0a8 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1d96ef2b080 <col:62> 'int' 240
    |   |   |-BinaryOperator 0x1d96ef2b3d0 <line:159:13, col:67> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1d96ef2b1b8 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1d96ef2b1a0 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1d96ef2b180 <col:14> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1d96ef2b3a8 <col:22, col:67> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1d96ef2b388 <col:37, col:67> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1d96ef2b330 <col:38, col:63> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1d96ef2b2d0 <col:38, col:59> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1d96ef2b2b0 <col:39, col:55> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1d96ef2b250 <col:39, col:51> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1d96ef2b230 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1d96ef2b218 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1d96ef2b1d0 <col:40> 'unsigned long' lvalue ParmVar 0x1d96ef246b0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1d96ef2b1f0 <col:49> 'int' 12
    |   |   |       |   `-ImplicitCastExpr 0x1d96ef2b298 <col:55> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1d96ef2b270 <col:55> 'int' 63
    |   |   |       `-ImplicitCastExpr 0x1d96ef2b318 <col:63> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1d96ef2b2f0 <col:63> 'int' 128
    |   |   |-BinaryOperator 0x1d96ef25610 <line:160:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1d96ef2b428 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1d96ef2b410 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1d96ef2b3f0 <col:14> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1d96ef255e8 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1d96ef255c8 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1d96ef25570 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1d96ef2b540 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1d96ef2b520 <col:39, col:54> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1d96ef2b4c0 <col:39, col:50> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1d96ef2b4a0 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1d96ef2b488 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1d96ef2b440 <col:40> 'unsigned long' lvalue ParmVar 0x1d96ef246b0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1d96ef2b460 <col:49> 'int' 6
    |   |   |       |   `-ImplicitCastExpr 0x1d96ef2b508 <col:54> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1d96ef2b4e0 <col:54> 'int' 63
    |   |   |       `-ImplicitCastExpr 0x1d96ef25558 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1d96ef25530 <col:62> 'int' 128
    |   |   `-BinaryOperator 0x1d96ef25818 <line:161:13, col:57> 'unsigned char' '='
    |   |     |-UnaryOperator 0x1d96ef25668 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |     | `-ImplicitCastExpr 0x1d96ef25650 <col:14> 'unsigned char *' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x1d96ef25630 <col:14> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    |   |     `-CStyleCastExpr 0x1d96ef257f0 <col:20, col:57> 'unsigned char' <IntegralCast>
    |   |       `-ParenExpr 0x1d96ef257d0 <col:35, col:57> 'unsigned long'
    |   |         `-BinaryOperator 0x1d96ef25778 <col:36, col:53> 'unsigned long' '|'
    |   |           |-ParenExpr 0x1d96ef25718 <col:36, col:49> 'unsigned long'
    |   |           | `-BinaryOperator 0x1d96ef256f8 <col:37, col:45> 'unsigned long' '&'
    |   |           |   |-ImplicitCastExpr 0x1d96ef256c8 <col:37> 'unsigned long' <LValueToRValue>
    |   |           |   | `-DeclRefExpr 0x1d96ef25680 <col:37> 'unsigned long' lvalue ParmVar 0x1d96ef246b0 'value' 'unsigned long'
    |   |           |   `-ImplicitCastExpr 0x1d96ef256e0 <col:45> 'unsigned long' <IntegralCast>
    |   |           |     `-IntegerLiteral 0x1d96ef256a0 <col:45> 'int' 63
    |   |           `-ImplicitCastExpr 0x1d96ef25760 <col:53> 'unsigned long' <IntegralCast>
    |   |             `-IntegerLiteral 0x1d96ef25738 <col:53> 'int' 128
    |   `-ReturnStmt 0x1d96ef258a8 <line:163:9, col:16>
    |     `-IntegerLiteral 0x1d96ef25880 <col:16> 'int' 4
    |-IfStmt 0x1d96ef27758 <line:165:5, line:176:5>
    | |-BinaryOperator 0x1d96ef25970 <line:165:9, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x1d96ef25940 <col:9> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1d96ef258f8 <col:9> 'unsigned long' lvalue ParmVar 0x1d96ef246b0 'value' 'unsigned long'
    | | `-ImplicitCastExpr 0x1d96ef25958 <col:17> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x1d96ef25918 <col:17> 'int' 67108864
    | `-CompoundStmt 0x1d96ef27730 <col:28, line:176:5>
    |   |-IfStmt 0x1d96ef25a60 <line:166:9, line:167:21>
    |   | |-BinaryOperator 0x1d96ef259f0 <line:166:13, col:19> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1d96ef259d8 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1d96ef25990 <col:13> 'int' lvalue ParmVar 0x1d96ef24630 'len' 'int'
    |   | | `-IntegerLiteral 0x1d96ef259b0 <col:19> 'int' 5
    |   | `-ReturnStmt 0x1d96ef25a50 <line:167:13, col:21>
    |   |   `-UnaryOperator 0x1d96ef25a38 <col:20, col:21> 'int' prefix '-'
    |   |     `-IntegerLiteral 0x1d96ef25a10 <col:21> 'int' 1
    |   |-IfStmt 0x1d96ef276e0 <line:168:9, line:174:9>
    |   | |-ImplicitCastExpr 0x1d96ef25a98 <line:168:13> 'unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1d96ef25a78 <col:13> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    |   | `-CompoundStmt 0x1d96ef276a8 <col:18, line:174:9>
    |   |   |-BinaryOperator 0x1d96ef25d00 <line:169:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1d96ef25ae8 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1d96ef25ad0 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1d96ef25ab0 <col:14> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1d96ef25cd8 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1d96ef25cb8 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1d96ef25c60 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1d96ef25c00 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1d96ef25be0 <col:39, col:55> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1d96ef25b80 <col:39, col:51> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1d96ef25b60 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1d96ef25b48 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1d96ef25b00 <col:40> 'unsigned long' lvalue ParmVar 0x1d96ef246b0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1d96ef25b20 <col:49> 'int' 24
    |   |   |       |   `-ImplicitCastExpr 0x1d96ef25bc8 <col:55> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1d96ef25ba0 <col:55> 'int' 3
    |   |   |       `-ImplicitCastExpr 0x1d96ef25c48 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1d96ef25c20 <col:62> 'int' 248
    |   |   |-BinaryOperator 0x1d96ef25f70 <line:170:13, col:67> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1d96ef25d58 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1d96ef25d40 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1d96ef25d20 <col:14> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1d96ef25f48 <col:22, col:67> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1d96ef25f28 <col:37, col:67> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1d96ef25ed0 <col:38, col:63> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1d96ef25e70 <col:38, col:59> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1d96ef25e50 <col:39, col:55> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1d96ef25df0 <col:39, col:51> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1d96ef25dd0 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1d96ef25db8 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1d96ef25d70 <col:40> 'unsigned long' lvalue ParmVar 0x1d96ef246b0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1d96ef25d90 <col:49> 'int' 18
    |   |   |       |   `-ImplicitCastExpr 0x1d96ef25e38 <col:55> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1d96ef25e10 <col:55> 'int' 63
    |   |   |       `-ImplicitCastExpr 0x1d96ef25eb8 <col:63> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1d96ef25e90 <col:63> 'int' 128
    |   |   |-BinaryOperator 0x1d96ef261e0 <line:171:13, col:67> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1d96ef25fc8 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1d96ef25fb0 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1d96ef25f90 <col:14> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1d96ef261b8 <col:22, col:67> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1d96ef26198 <col:37, col:67> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1d96ef26140 <col:38, col:63> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1d96ef260e0 <col:38, col:59> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1d96ef260c0 <col:39, col:55> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1d96ef26060 <col:39, col:51> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1d96ef26040 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1d96ef26028 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1d96ef25fe0 <col:40> 'unsigned long' lvalue ParmVar 0x1d96ef246b0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1d96ef26000 <col:49> 'int' 12
    |   |   |       |   `-ImplicitCastExpr 0x1d96ef260a8 <col:55> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1d96ef26080 <col:55> 'int' 63
    |   |   |       `-ImplicitCastExpr 0x1d96ef26128 <col:63> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1d96ef26100 <col:63> 'int' 128
    |   |   |-BinaryOperator 0x1d96ef26450 <line:172:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1d96ef26238 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1d96ef26220 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1d96ef26200 <col:14> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1d96ef26428 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1d96ef26408 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1d96ef263b0 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1d96ef26350 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1d96ef26330 <col:39, col:54> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1d96ef262d0 <col:39, col:50> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1d96ef262b0 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1d96ef26298 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1d96ef26250 <col:40> 'unsigned long' lvalue ParmVar 0x1d96ef246b0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1d96ef26270 <col:49> 'int' 6
    |   |   |       |   `-ImplicitCastExpr 0x1d96ef26318 <col:54> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1d96ef262f0 <col:54> 'int' 63
    |   |   |       `-ImplicitCastExpr 0x1d96ef26398 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1d96ef26370 <col:62> 'int' 128
    |   |   `-BinaryOperator 0x1d96ef27688 <line:173:13, col:57> 'unsigned char' '='
    |   |     |-UnaryOperator 0x1d96ef264a8 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |     | `-ImplicitCastExpr 0x1d96ef26490 <col:14> 'unsigned char *' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x1d96ef26470 <col:14> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    |   |     `-CStyleCastExpr 0x1d96ef27660 <col:20, col:57> 'unsigned char' <IntegralCast>
    |   |       `-ParenExpr 0x1d96ef27640 <col:35, col:57> 'unsigned long'
    |   |         `-BinaryOperator 0x1d96ef275e8 <col:36, col:53> 'unsigned long' '|'
    |   |           |-ParenExpr 0x1d96ef27588 <col:36, col:49> 'unsigned long'
    |   |           | `-BinaryOperator 0x1d96ef27568 <col:37, col:45> 'unsigned long' '&'
    |   |           |   |-ImplicitCastExpr 0x1d96ef26508 <col:37> 'unsigned long' <LValueToRValue>
    |   |           |   | `-DeclRefExpr 0x1d96ef264c0 <col:37> 'unsigned long' lvalue ParmVar 0x1d96ef246b0 'value' 'unsigned long'
    |   |           |   `-ImplicitCastExpr 0x1d96ef27550 <col:45> 'unsigned long' <IntegralCast>
    |   |           |     `-IntegerLiteral 0x1d96ef264e0 <col:45> 'int' 63
    |   |           `-ImplicitCastExpr 0x1d96ef275d0 <col:53> 'unsigned long' <IntegralCast>
    |   |             `-IntegerLiteral 0x1d96ef275a8 <col:53> 'int' 128
    |   `-ReturnStmt 0x1d96ef27720 <line:175:9, col:16>
    |     `-IntegerLiteral 0x1d96ef276f8 <col:16> 'int' 5
    |-IfStmt 0x1d96ef27840 <line:177:5, line:178:17>
    | |-BinaryOperator 0x1d96ef277d0 <line:177:9, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x1d96ef277b8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1d96ef27770 <col:9> 'int' lvalue ParmVar 0x1d96ef24630 'len' 'int'
    | | `-IntegerLiteral 0x1d96ef27790 <col:15> 'int' 6
    | `-ReturnStmt 0x1d96ef27830 <line:178:9, col:17>
    |   `-UnaryOperator 0x1d96ef27818 <col:16, col:17> 'int' prefix '-'
    |     `-IntegerLiteral 0x1d96ef277f0 <col:17> 'int' 1
    |-IfStmt 0x1d96ef26718 <line:179:5, line:186:5>
    | |-ImplicitCastExpr 0x1d96ef27878 <line:179:9> 'unsigned char *' <LValueToRValue>
    | | `-DeclRefExpr 0x1d96ef27858 <col:9> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    | `-CompoundStmt 0x1d96ef266d8 <col:14, line:186:5>
    |   |-BinaryOperator 0x1d96ef27ae0 <line:180:9, col:62> 'unsigned char' '='
    |   | |-UnaryOperator 0x1d96ef278c8 <col:9, col:13> 'unsigned char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x1d96ef278b0 <col:10, col:13> 'unsigned char *' postfix '++'
    |   | |   `-DeclRefExpr 0x1d96ef27890 <col:10> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    |   | `-CStyleCastExpr 0x1d96ef27ab8 <col:18, col:62> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x1d96ef27a98 <col:33, col:62> 'unsigned long'
    |   |     `-BinaryOperator 0x1d96ef27a40 <col:34, col:58> 'unsigned long' '|'
    |   |       |-ParenExpr 0x1d96ef279e0 <col:34, col:54> 'unsigned long'
    |   |       | `-BinaryOperator 0x1d96ef279c0 <col:35, col:51> 'unsigned long' '&'
    |   |       |   |-ParenExpr 0x1d96ef27960 <col:35, col:47> 'unsigned long'
    |   |       |   | `-BinaryOperator 0x1d96ef27940 <col:36, col:45> 'unsigned long' '>>'
    |   |       |   |   |-ImplicitCastExpr 0x1d96ef27928 <col:36> 'unsigned long' <LValueToRValue>
    |   |       |   |   | `-DeclRefExpr 0x1d96ef278e0 <col:36> 'unsigned long' lvalue ParmVar 0x1d96ef246b0 'value' 'unsigned long'
    |   |       |   |   `-IntegerLiteral 0x1d96ef27900 <col:45> 'int' 30
    |   |       |   `-ImplicitCastExpr 0x1d96ef279a8 <col:51> 'unsigned long' <IntegralCast>
    |   |       |     `-IntegerLiteral 0x1d96ef27980 <col:51> 'int' 1
    |   |       `-ImplicitCastExpr 0x1d96ef27a28 <col:58> 'unsigned long' <IntegralCast>
    |   |         `-IntegerLiteral 0x1d96ef27a00 <col:58> 'int' 252
    |   |-BinaryOperator 0x1d96ef27d50 <line:181:9, col:63> 'unsigned char' '='
    |   | |-UnaryOperator 0x1d96ef27b38 <col:9, col:13> 'unsigned char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x1d96ef27b20 <col:10, col:13> 'unsigned char *' postfix '++'
    |   | |   `-DeclRefExpr 0x1d96ef27b00 <col:10> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    |   | `-CStyleCastExpr 0x1d96ef27d28 <col:18, col:63> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x1d96ef27d08 <col:33, col:63> 'unsigned long'
    |   |     `-BinaryOperator 0x1d96ef27cb0 <col:34, col:59> 'unsigned long' '|'
    |   |       |-ParenExpr 0x1d96ef27c50 <col:34, col:55> 'unsigned long'
    |   |       | `-BinaryOperator 0x1d96ef27c30 <col:35, col:51> 'unsigned long' '&'
    |   |       |   |-ParenExpr 0x1d96ef27bd0 <col:35, col:47> 'unsigned long'
    |   |       |   | `-BinaryOperator 0x1d96ef27bb0 <col:36, col:45> 'unsigned long' '>>'
    |   |       |   |   |-ImplicitCastExpr 0x1d96ef27b98 <col:36> 'unsigned long' <LValueToRValue>
    |   |       |   |   | `-DeclRefExpr 0x1d96ef27b50 <col:36> 'unsigned long' lvalue ParmVar 0x1d96ef246b0 'value' 'unsigned long'
    |   |       |   |   `-IntegerLiteral 0x1d96ef27b70 <col:45> 'int' 24
    |   |       |   `-ImplicitCastExpr 0x1d96ef27c18 <col:51> 'unsigned long' <IntegralCast>
    |   |       |     `-IntegerLiteral 0x1d96ef27bf0 <col:51> 'int' 63
    |   |       `-ImplicitCastExpr 0x1d96ef27c98 <col:59> 'unsigned long' <IntegralCast>
    |   |         `-IntegerLiteral 0x1d96ef27c70 <col:59> 'int' 128
    |   |-BinaryOperator 0x1d96ef27fc0 <line:182:9, col:63> 'unsigned char' '='
    |   | |-UnaryOperator 0x1d96ef27da8 <col:9, col:13> 'unsigned char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x1d96ef27d90 <col:10, col:13> 'unsigned char *' postfix '++'
    |   | |   `-DeclRefExpr 0x1d96ef27d70 <col:10> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    |   | `-CStyleCastExpr 0x1d96ef27f98 <col:18, col:63> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x1d96ef27f78 <col:33, col:63> 'unsigned long'
    |   |     `-BinaryOperator 0x1d96ef27f20 <col:34, col:59> 'unsigned long' '|'
    |   |       |-ParenExpr 0x1d96ef27ec0 <col:34, col:55> 'unsigned long'
    |   |       | `-BinaryOperator 0x1d96ef27ea0 <col:35, col:51> 'unsigned long' '&'
    |   |       |   |-ParenExpr 0x1d96ef27e40 <col:35, col:47> 'unsigned long'
    |   |       |   | `-BinaryOperator 0x1d96ef27e20 <col:36, col:45> 'unsigned long' '>>'
    |   |       |   |   |-ImplicitCastExpr 0x1d96ef27e08 <col:36> 'unsigned long' <LValueToRValue>
    |   |       |   |   | `-DeclRefExpr 0x1d96ef27dc0 <col:36> 'unsigned long' lvalue ParmVar 0x1d96ef246b0 'value' 'unsigned long'
    |   |       |   |   `-IntegerLiteral 0x1d96ef27de0 <col:45> 'int' 18
    |   |       |   `-ImplicitCastExpr 0x1d96ef27e88 <col:51> 'unsigned long' <IntegralCast>
    |   |       |     `-IntegerLiteral 0x1d96ef27e60 <col:51> 'int' 63
    |   |       `-ImplicitCastExpr 0x1d96ef27f08 <col:59> 'unsigned long' <IntegralCast>
    |   |         `-IntegerLiteral 0x1d96ef27ee0 <col:59> 'int' 128
    |   |-BinaryOperator 0x1d96ef28230 <line:183:9, col:63> 'unsigned char' '='
    |   | |-UnaryOperator 0x1d96ef28018 <col:9, col:13> 'unsigned char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x1d96ef28000 <col:10, col:13> 'unsigned char *' postfix '++'
    |   | |   `-DeclRefExpr 0x1d96ef27fe0 <col:10> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    |   | `-CStyleCastExpr 0x1d96ef28208 <col:18, col:63> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x1d96ef281e8 <col:33, col:63> 'unsigned long'
    |   |     `-BinaryOperator 0x1d96ef28190 <col:34, col:59> 'unsigned long' '|'
    |   |       |-ParenExpr 0x1d96ef28130 <col:34, col:55> 'unsigned long'
    |   |       | `-BinaryOperator 0x1d96ef28110 <col:35, col:51> 'unsigned long' '&'
    |   |       |   |-ParenExpr 0x1d96ef280b0 <col:35, col:47> 'unsigned long'
    |   |       |   | `-BinaryOperator 0x1d96ef28090 <col:36, col:45> 'unsigned long' '>>'
    |   |       |   |   |-ImplicitCastExpr 0x1d96ef28078 <col:36> 'unsigned long' <LValueToRValue>
    |   |       |   |   | `-DeclRefExpr 0x1d96ef28030 <col:36> 'unsigned long' lvalue ParmVar 0x1d96ef246b0 'value' 'unsigned long'
    |   |       |   |   `-IntegerLiteral 0x1d96ef28050 <col:45> 'int' 12
    |   |       |   `-ImplicitCastExpr 0x1d96ef280f8 <col:51> 'unsigned long' <IntegralCast>
    |   |       |     `-IntegerLiteral 0x1d96ef280d0 <col:51> 'int' 63
    |   |       `-ImplicitCastExpr 0x1d96ef28178 <col:59> 'unsigned long' <IntegralCast>
    |   |         `-IntegerLiteral 0x1d96ef28150 <col:59> 'int' 128
    |   |-BinaryOperator 0x1d96ef284a0 <line:184:9, col:62> 'unsigned char' '='
    |   | |-UnaryOperator 0x1d96ef28288 <col:9, col:13> 'unsigned char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x1d96ef28270 <col:10, col:13> 'unsigned char *' postfix '++'
    |   | |   `-DeclRefExpr 0x1d96ef28250 <col:10> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    |   | `-CStyleCastExpr 0x1d96ef28478 <col:18, col:62> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x1d96ef28458 <col:33, col:62> 'unsigned long'
    |   |     `-BinaryOperator 0x1d96ef28400 <col:34, col:58> 'unsigned long' '|'
    |   |       |-ParenExpr 0x1d96ef283a0 <col:34, col:54> 'unsigned long'
    |   |       | `-BinaryOperator 0x1d96ef28380 <col:35, col:50> 'unsigned long' '&'
    |   |       |   |-ParenExpr 0x1d96ef28320 <col:35, col:46> 'unsigned long'
    |   |       |   | `-BinaryOperator 0x1d96ef28300 <col:36, col:45> 'unsigned long' '>>'
    |   |       |   |   |-ImplicitCastExpr 0x1d96ef282e8 <col:36> 'unsigned long' <LValueToRValue>
    |   |       |   |   | `-DeclRefExpr 0x1d96ef282a0 <col:36> 'unsigned long' lvalue ParmVar 0x1d96ef246b0 'value' 'unsigned long'
    |   |       |   |   `-IntegerLiteral 0x1d96ef282c0 <col:45> 'int' 6
    |   |       |   `-ImplicitCastExpr 0x1d96ef28368 <col:50> 'unsigned long' <IntegralCast>
    |   |       |     `-IntegerLiteral 0x1d96ef28340 <col:50> 'int' 63
    |   |       `-ImplicitCastExpr 0x1d96ef283e8 <col:58> 'unsigned long' <IntegralCast>
    |   |         `-IntegerLiteral 0x1d96ef283c0 <col:58> 'int' 128
    |   `-BinaryOperator 0x1d96ef266b8 <line:185:9, col:53> 'unsigned char' '='
    |     |-UnaryOperator 0x1d96ef284f8 <col:9, col:10> 'unsigned char' lvalue prefix '*' cannot overflow
    |     | `-ImplicitCastExpr 0x1d96ef284e0 <col:10> 'unsigned char *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1d96ef284c0 <col:10> 'unsigned char *' lvalue ParmVar 0x1d96ef245b0 'str' 'unsigned char *'
    |     `-CStyleCastExpr 0x1d96ef26690 <col:16, col:53> 'unsigned char' <IntegralCast>
    |       `-ParenExpr 0x1d96ef26670 <col:31, col:53> 'unsigned long'
    |         `-BinaryOperator 0x1d96ef26618 <col:32, col:49> 'unsigned long' '|'
    |           |-ParenExpr 0x1d96ef265b8 <col:32, col:45> 'unsigned long'
    |           | `-BinaryOperator 0x1d96ef26598 <col:33, col:41> 'unsigned long' '&'
    |           |   |-ImplicitCastExpr 0x1d96ef26568 <col:33> 'unsigned long' <LValueToRValue>
    |           |   | `-DeclRefExpr 0x1d96ef28510 <col:33> 'unsigned long' lvalue ParmVar 0x1d96ef246b0 'value' 'unsigned long'
    |           |   `-ImplicitCastExpr 0x1d96ef26580 <col:41> 'unsigned long' <IntegralCast>
    |           |     `-IntegerLiteral 0x1d96ef26540 <col:41> 'int' 63
    |           `-ImplicitCastExpr 0x1d96ef26600 <col:49> 'unsigned long' <IntegralCast>
    |             `-IntegerLiteral 0x1d96ef265d8 <col:49> 'int' 128
    `-ReturnStmt 0x1d96ef26758 <line:187:5, col:12>
      `-IntegerLiteral 0x1d96ef26730 <col:12> 'int' 6
