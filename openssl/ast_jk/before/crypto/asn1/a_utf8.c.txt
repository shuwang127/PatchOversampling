TranslationUnitDecl 0x1f01ed5e128 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1f01ed5e9c0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1f01ed5e6c0 '__int128'
|-TypedefDecl 0x1f01ed5ea30 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1f01ed5e6e0 'unsigned __int128'
|-TypedefDecl 0x1f01ed5ed68 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1f01ed5eb20 'struct __NSConstantString_tag'
|   `-Record 0x1f01ed5ea88 '__NSConstantString_tag'
|-TypedefDecl 0x1f01ed5edd8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1f01ed5e300 'unsigned long long'
|-TypedefDecl 0x1f01ed5ee70 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1f01ed5ee30 'char *'
|   `-BuiltinType 0x1f01ed5e1c0 'char'
|-TypedefDecl 0x1f01ed5eee0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1f01ed5ee30 'char *'
|   `-BuiltinType 0x1f01ed5e1c0 'char'
|-TypedefDecl 0x1f01ed5efa0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1f01ed5e300 'unsigned long long'
|-TypedefDecl 0x1f01ed5f010 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1f01ed5ee30 'char *'
|   `-BuiltinType 0x1f01ed5e1c0 'char'
|-FunctionDecl 0x1f02068f420 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1f02068f4c0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1f02068f530 <col:21> Implicit
|-FunctionDecl 0x1f02068f588 prev 0x1f02068f420 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1f02068f2b0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1f02068f678 <col:21> Inherited Implicit
|-TypedefDecl 0x1f02068f6b8 prev 0x1f01ed5edd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1f01ed5e300 'unsigned long long'
|-TypedefDecl 0x1f02068f760 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1f02068f730 'size_t' sugar
|   |-Typedef 0x1f02068f6b8 'size_t'
|   `-BuiltinType 0x1f01ed5e300 'unsigned long long'
|-TypedefDecl 0x1f02068f7d0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1f01ed5e260 'long long'
|-TypedefDecl 0x1f02068f840 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1f01ed5e260 'long long'
|-TypedefDecl 0x1f02068f8b0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1f01ed5e2a0 'unsigned short'
|-TypedefDecl 0x1f02068f920 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1f01ed5e2a0 'unsigned short'
|-TypedefDecl 0x1f02068f990 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1f01ed5e2a0 'unsigned short'
|-TypedefDecl 0x1f02068fa00 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1f01ed5e220 'int'
|-TypedefDecl 0x1f02068fa70 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1f01ed5e240 'long'
|-TypedefDecl 0x1f02068fae0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1f01ed5e260 'long long'
|-TypedefDecl 0x1f02068fb70 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1f02068fb40 '__time64_t' sugar
|   |-Typedef 0x1f02068fae0 '__time64_t'
|   `-BuiltinType 0x1f01ed5e260 'long long'
|-FunctionDecl 0x1f02068fce8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1f02068ff08 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1f0206c51a0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1f020690048 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1f0206900c0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1f020690138 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1f0206901b8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1f0206c4f40 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1f0206c5280 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1f0206c5340 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1f0206c54b0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1f0206c5460 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1f0206c5400 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1f0206c5320 'struct threadlocaleinfostruct'
|       `-Record 0x1f0206d1000 'threadlocaleinfostruct'
|-TypedefDecl 0x1f0206c55c0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1f0206c5570 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1f0206c5510 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1f0206c53e0 'struct threadmbcinfostruct'
|       `-Record 0x1f0206c5340 'threadmbcinfostruct'
|-RecordDecl 0x1f0206c5618 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1f0206c56d0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1f0206c5790 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1f0206c5820 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1f0206c58b0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1f0206c5968 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1f0206c5910 'struct localeinfo_struct' sugar
|   `-RecordType 0x1f0206c5770 'struct localeinfo_struct'
|     `-Record 0x1f0206c56d0 'localeinfo_struct'
|-TypedefDecl 0x1f0206c5a40 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1f0206c59f0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1f0206c5910 'struct localeinfo_struct' sugar
|     `-RecordType 0x1f0206c5770 'struct localeinfo_struct'
|       `-Record 0x1f0206c56d0 'localeinfo_struct'
|-RecordDecl 0x1f0206c5ab8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1f0206c5b70 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1f0206c5be8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1f0206c5ca8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1f0206c5d40 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1f0206c5db0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1f0206c5e68 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1f0206c5e10 'struct localerefcount' sugar
|   `-RecordType 0x1f0206c5b50 'struct localerefcount'
|     `-Record 0x1f0206c5ab8 'localerefcount'
|-RecordDecl 0x1f0206d1000 prev 0x1f0206c5280 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1f0206d1080 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1f0206d10f8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1f0206d1168 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1f0206d11d8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1f0206d1248 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1f0206d1408 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1f0206d1478 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1f0206d14e8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1f0206d1558 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1f0206d15c8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1f0206d1638 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1f0206d1690 parent 0x1f01ed5e128 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1f0206d1820 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1f0206d1890 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1f0206d1900 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1f0206d1970 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1f0206d1a10 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1f0206d1a80 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1f0206d1b90 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1f0206d1cc8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1f0206d1d78 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1f0206d1d20 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1f0206c5320 'struct threadlocaleinfostruct'
|     `-Record 0x1f0206d1000 'threadlocaleinfostruct'
|-RecordDecl 0x1f0206d1e10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x1f0206d1ed0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1f0206d1f48 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x1f0206d4030 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x1f0206d40a0 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x1f0206d4110 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x1f0206d4180 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x1f0206d41f0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x1f0206d4260 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x1f0206d42d0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x1f0206d4380 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x1f0206d4330 'struct _iobuf' sugar
|   `-RecordType 0x1f0206d1eb0 'struct _iobuf'
|     `-Record 0x1f0206d1e10 '_iobuf'
|-FunctionDecl 0x1f0206d45b8 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x1f0206d4688 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1f01ed5e260 'long long'
|-FunctionDecl 0x1f0206d4868 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f0206d46f0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x1f0206d4b60 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1f0206d4940 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x1f0206d49b8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1f0206d4f10 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x1f0206d4c40 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x1f0206d4cc0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x1f0206d4d40 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x1f0206cf150 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1f0206cefe0 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x1f0206cf380 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x1f0206cf240 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1f0206cf530 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f0206cf450 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x1f0206cf720 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1f0206cfa18 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1f0206cf7f0 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x1f0206cf870 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x1f0206cfbd0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f0206cfaf0 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x1f0206cfd80 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f0206cfca0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x1f0206cff30 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f0206cfe50 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1f0206d8178 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f0206d8098 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x1f0206d8308 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1f0206d8670 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x1f0206d83d0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1f0206d84c8 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x1f0206d8a28 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x1f0206d8750 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x1f0206d87d0 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x1f0206d8848 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x1f0206d8be8 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f0206d8b08 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1f0206d8eb0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1f0206d8cc0 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x1f0206d8d40 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x1f0206dd0c0 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1f0206dd4b8 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x1f0206dd558 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1f0206dd5c0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1f0206dd638 prev 0x1f0206dd4b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1f0206dd290 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x1f0206dd310 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x1f0206dd6e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f0206ddb60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x1f0206dd890 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x1f0206dd910 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x1f0206dd990 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x1f0206dde80 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x1f0206ddf20 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1f0206ddf88 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1f0206de000 <col:40> Implicit printf 2 3
|-FunctionDecl 0x1f0206de0d0 prev 0x1f0206dde80 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1f0206ddc40 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1f0206ddcc0 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x1f0206de1c8 <col:40> Inherited printf 2 3
|-FunctionDecl 0x1f0206de390 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1f0206de210 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1f0206de290 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1f0206de5e8 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1f0206de470 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x1f0206de4e8 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x1f0206de818 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1f0206de6c8 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x1f0206deb10 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x1f0206de8f0 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1f0206de968 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x1f0206defa8 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1f0206df048 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1f0206db0a0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1f0206db108 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1f0206db170 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1f0206db1f8 prev 0x1f0206defa8 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1f0206debf0 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x1f0206dec68 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f0206dece0 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f0206ded58 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x1f0206db700 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1f0206db2e8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x1f0206db360 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f0206db3d8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f0206db450 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f0206db4c8 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x1f0206dbbc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1f0206db8f0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x1f0206db970 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x1f0206db9e8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x1f0206dbc78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f0206d7108 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1f0206dbdc0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1f0206dbe40 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x1f0206dbec0 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x1f0206dbf38 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x1f0206d74b0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1f0206d7550 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1f0206d75b8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1f0206d7630 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1f0206d7698 prev 0x1f0206d74b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1f0206d72e8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x1f0206d7368 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x1f0206d7878 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1f0206d7748 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f0206d7cb8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f0206d79b8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x1f0206d7a38 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x1f0206d7ad0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f0206d7d70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f0206d9080 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1f0206d7eb0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1f0206d7f30 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1f0206d9370 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f0206d9158 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1f0206d91d8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1f0206d9250 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f0206d96d0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x1f0206d9450 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1f0206d9528 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x1f0206d9a88 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1f0206d97a8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x1f0206d9828 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x1f0206d98a8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x1f0206d9ce8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1f0206d9b68 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x1f0206da0d8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1f0206d9db8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1f0206d9e38 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x1f0206d9eb8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x1f0206da338 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1f0206da1b8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1f0206da7f8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1f0206da898 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1f0206da900 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1f0206da968 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1f0206da9d0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1f0206daa58 prev 0x1f0206da7f8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1f0206da440 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x1f0206da4b8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f0206da530 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f0206da5a8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x1f0206dac20 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f0206dab40 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1f0206dadb0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1f0206daf38 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1f0206dc270 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x1f0206db008 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x1f0206dc0c0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1f0206dc598 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1f0206dc450 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x1f0206dc640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f0206dc860 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f0206dc780 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x1f0206dca80 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1f0206dc938 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1f0206dcc30 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f0206dcb50 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x1f0206dce80 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1f0206dcd08 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x1f0206dcd88 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x1f0206df0e0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1f0206df180 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1f0206df1f0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x1f0206df258 prev 0x1f0206df0e0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x1f0206dcf60 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x1f0206df348 <col:40> Inherited printf 1 2
|-FunctionDecl 0x1f0206df478 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1f0206df398 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x1f0206df6c8 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1f0206df550 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x1f0206df5c8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1f0206df888 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1f0206df7a8 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x1f0206dfaa8 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1f0206df960 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x1f0206dfcf8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1f0206dfb80 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x1f0206dfbf8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1f0206dfeb8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1f0206dfdd8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1f020731040 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1f0206dff90 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x1f0206e0010 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1f020731200 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1f020731120 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1f020731490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1f0207313b0 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1f020731538 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1f020731730 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1f020731658 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1f0207318c0 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1f020731b68 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1f020731c08 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1f020731c78 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1f020731ce0 prev 0x1f020731b68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1f020731a50 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1f020731eb8 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1f020731d88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f020732290 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f020732058 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1f0207320d0 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f020732340 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f020732568 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1f020732488 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x1f0207327b8 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f020732640 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1f0207326b8 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f020732b78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x1f020732950 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x1f0207329d0 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x1f020732c28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f020732e50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1f020732d70 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x1f02072d078 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1f02072cf30 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x1f02072d260 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x1f02072d6b0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x1f02072d328 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1f02072d3a8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x1f02072d428 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x1f02072d4a0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1f02072db30 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x1f02072d7a0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x1f02072d818 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f02072d890 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f02072d910 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x1f02072ff60 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1f02072dc20 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1f02072dc98 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f02072dd18 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x1f020730128 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1f020730048 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x1f020730500 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1f0207305a0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1f020730608 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1f020730680 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1f0207306e8 prev 0x1f020730500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1f0207302c0 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x1f020730340 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x1f0207308c8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1f020730798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f020730cb8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f0207309d8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x1f020730a58 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x1f020730ad0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f020730d70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f02072b010 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x1f020730eb8 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x1f02072af10 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x1f02072b308 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f02072b0f0 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x1f02072b170 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1f02072b1e8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f02072b798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1f02072b4b0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x1f02072b528 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f02072b5a8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x1f02072b850 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f02072be20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f02072ba90 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x1f02072bb08 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f02072bb88 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x1f02072bc00 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f020732f90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f0207332f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1f0207330d8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x1f020733150 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f0207331d0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x1f020733688 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f0207333d8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x1f020733450 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f0207334d0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x1f020733548 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f0207338e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x1f020733988 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f020733c40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x1f020733ad0 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x1f02072bf20 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x1f020733d18 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x1f020733d90 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1f02072c1a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1f02072c0c0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x1f02072c248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f02072c508 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1f02072c390 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x1f02072c408 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x1f02072c920 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1f02072c9c0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1f02072ca28 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1f02072ca90 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1f02072cb10 <col:40> Implicit printf 2 0
|-FunctionDecl 0x1f02072cb78 prev 0x1f02072c920 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1f02072c5e0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1f02072c660 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x1f02072c6d8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1f02072cc78 <col:40> Inherited printf 2 0
|-FunctionDecl 0x1f020733fa0 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1f020734040 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1f0207340a8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1f020734110 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1f020734190 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1f0207341f8 prev 0x1f020733fa0 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1f02072ccc0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1f02072cd40 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1f02072cdb8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1f0207342f8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1f020734558 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1f020734340 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1f0207343c0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1f020734438 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020734850 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1f020734638 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1f0207346b8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1f020734730 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020734b98 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1f020734c38 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1f020734ca0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1f020734d18 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1f020734d80 prev 0x1f020734b98 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1f020734938 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1f0207349b0 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1f020734e78 <col:40> Inherited printf 1 0
|-FunctionDecl 0x1f0207350e8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1f020735188 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1f0207351f0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1f020735268 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x1f0207352d0 prev 0x1f0207350e8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1f020734ec8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x1f020734fb0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1f0207353c8 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x1f020735590 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1f020735418 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x1f020735490 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f0207357e8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1f020735670 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1f0207356e8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020735d48 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1f020735de8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1f020735e50 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1f020735eb8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1f020735f20 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1f02072df40 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1f02072dfa8 prev 0x1f020735d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1f020735988 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x1f020735a00 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f020735a80 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1f020735af8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1f02072e198 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1f02072e068 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f02072e608 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1f02072e1e8 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1f02072e260 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f02072e2d8 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f02072e358 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1f02072e3d0 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f02072ea48 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1f02072e700 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1f02072e778 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f02072e7f0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f02072e870 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1f02072e8e8 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f02072ee18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1f02072ec00 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1f02072ec78 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f02072ecf8 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1f02072eed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f020736430 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1f020736180 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1f0207361f8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f020736278 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1f0207362f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1f0207364f0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f0207368e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1f020736638 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1f0207366b0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f020736730 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1f0207367a8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020736ca8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1f0207369d8 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1f020736a58 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1f020736ad0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f02072eff0 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1f02072f090 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1f02072f0f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1f02072f170 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1f02072f1d8 prev 0x1f02072eff0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1f020736e50 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1f020736ed0 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1f02072f3b8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1f02072f288 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f02072f7e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1f02072f880 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1f02072f8e8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1f02072f950 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1f02072f9d0 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1f02072fa38 prev 0x1f02072f7e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1f02072f4c8 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1f02072f548 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1f02072f5c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1f02072fc20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1f02072faf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f020736fd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1f020737070 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1f0207370d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1f020737140 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1f0207371c0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1f020737228 prev 0x1f020736fd0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1f02072fc70 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1f02072fcf0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1f02072fd68 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1f020737328 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1f0207374f0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1f020737378 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1f0207373f0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f0207377e8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1f0207375d0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1f020737648 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f0207376c8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1f020737b80 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1f0207378d0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1f020737948 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f0207379c8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1f020737a40 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020737de8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1f020737c68 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1f020737ce8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1f02073e040 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1f020737ec8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1f02073e330 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1f02073e118 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1f02073e190 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f02073e210 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1f02073e628 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1f02073e410 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1f02073e490 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1f02073e508 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f02073e888 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1f02073e710 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1f02073e788 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f02073ec18 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1f02073e968 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1f02073e9e0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f02073ea60 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1f02073ead8 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f02073ede8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1f02073ed08 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1f02073d030 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1f02073eec0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1f02073ef38 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f02073d1f0 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1f02073d110 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1f02073d380 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1f02073d5c8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f02073d450 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1f02073d4c8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f02073d820 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f02073d6a8 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1f02073d720 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f02073da78 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f02073d900 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1f02073d978 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f02073de28 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f02073db58 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1f02073dbd0 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f02073dc48 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f02073f170 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f02073df10 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1f02073df88 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f02073f050 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f02073f468 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f02073f258 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1f02073f2d0 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f02073f348 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f02073f760 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f02073f548 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1f02073f5c8 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x1f02073f640 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f02073fa58 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f02073f840 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1f02073f8c0 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1f02073f938 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f02073fd50 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f02073fb38 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1f02073fbb8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1f02073fc30 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f02073a160 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f02073fe30 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1f02073feb0 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x1f02073ff28 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f02073ffa0 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f02073a4f8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f02073a248 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1f02073a2c8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1f02073a340 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f02073a3b8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f02073a890 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f02073a5e0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1f02073a660 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1f02073a6d8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f02073a750 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f02073ad28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f02073aa40 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1f02073aac0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1f02073ab38 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f02073ade0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f02073c330 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f02073af28 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1f02073c020 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f02073c0a0 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x1f02073c118 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f02073c6d0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f02073c420 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1f02073c498 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f02073c518 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1f02073c590 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f02073cc20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f02073c8c0 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x1f02073c940 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x1f02073c9b8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1f02073ca30 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1f02073cce0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f02073b248 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f02073ce28 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1f02073cea0 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f02073cf20 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x1f02073cf98 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f02073b010 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f02073b688 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f02073b340 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1f02073b3b8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f02073b438 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x1f02073b4b0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f02073b528 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f02073b8f8 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f02073b780 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1f02073b7f8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f02073bb50 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f02073b9d8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x1f02073ba50 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f02073be40 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f02073bc30 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1f02073bca8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f02073bd20 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020738110 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f02073bf28 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x1f02073bfa0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f020737ff0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020738568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f0207382b8 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1f020738330 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f0207383b0 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1f020738428 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f020738628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f020738a20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f020738770 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1f0207387e8 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f020738868 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1f0207388e0 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f0207470d0 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f020738b10 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1f020738b88 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f020738c00 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f020738c80 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1f020738cf8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f020747610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f0207472c8 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x1f020747340 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f0207473c0 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x1f020747438 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1f0207474b0 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1f0207476d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f020747b58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f020747828 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1f0207478a0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f020747920 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x1f020747998 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f020747a10 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f0207410d0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f020747c50 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1f020747cc8 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f020747d40 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f020747dc0 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1f020747e38 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f020747eb0 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020741490 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1f0207411c8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1f020741240 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1f0207412c0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1f020741700 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1f020741590 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1f020741918 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1f020741bf8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1f0207419e0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1f020741a58 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1f020741e40 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1f020741cd0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1f020740060 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1f020741f10 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x1f0207401e8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1f020740420 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1f0207402b0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1f020740328 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x1f0207405d0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1f0207404f8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1f020740878 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1f0207406a0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1f020740718 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1f020740c20 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x1f020740950 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1f0207409d0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x1f020740a48 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x1f020740f20 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1f020740d00 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1f020740d78 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1f020742238 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1f020740ff8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1f020742090 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1f020742540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1f0207423d0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1f0207425e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f0207428a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1f020742728 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1f020742bb0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f020742978 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1f0207429f0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1f020742e00 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f020742c88 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1f020742d00 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1f020743090 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1f020742ed8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1f020743240 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1f020743160 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1f0207433f0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1f020743310 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1f020743788 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f0207434c0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1f020743538 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f0207435b0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020743a78 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f020743868 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1f0207438e0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f020743958 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020743d68 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f020743b58 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1f020743bd0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f020743c48 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f0207480e0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f020743e48 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1f020743ec0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f020743f38 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f0207483e0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f0207481c0 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f020748238 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020748630 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f0207484b8 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f020748530 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020748880 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f020748708 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f020748780 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020748ad0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f020748958 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f0207489d0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020748e88 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f020748ba8 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1f020748c20 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f020748c98 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1f0207442b0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f020748f68 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1f020748fe0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f020749058 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f0207440a0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020744668 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f020744398 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1f020744410 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f020744488 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020744958 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f020744748 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1f0207447c0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f020744838 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020744c48 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f020744a38 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f020744ab0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f020744b28 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1f020744fd0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f020744d28 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f020744da0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f020744e18 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f020744e90 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020746470 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f0207460e8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f020746160 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f0207461d8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f020746250 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1f020746978 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f020746558 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f0207465d0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f020746648 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f0207466c0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f020746738 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020746d38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f020746b28 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1f020746ba0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f020746c18 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1f020746df0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f020749320 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f020746ff0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1f0207490f0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f020749168 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f0207491e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1f0207493e0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f020749698 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f020749520 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1f020749598 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1f020749850 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1f020749770 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1f020749b30 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f020749920 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1f020749998 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f020749a10 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020749d88 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f020749c10 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f020749c88 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020750f90 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f020749e60 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f020749ed8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f020749f50 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x1f020751318 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f020751070 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f0207510e8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f020751160 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f0207511d8 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f0207514e0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1f020751400 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x1f020751728 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f0207515b0 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f020751628 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020751a30 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f020751800 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f020751878 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f020751c80 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f020751b08 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f020751b80 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f020751ed0 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f020751d58 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f020751dd0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f020752298 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f020751fc8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f020752040 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f0207520b8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020752588 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f020752378 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f0207523f0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f020752468 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020752878 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f020752668 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f0207526e0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f020752758 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020752c38 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f020752958 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1f0207529d0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f020752a48 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f020752fb0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f020752d18 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1f020752d90 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f020752e08 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f0207532a0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f020753090 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1f020753108 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f020753180 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f0207536f0 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f020753380 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1f0207533f8 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f020753470 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f0207534e8 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020753a80 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f0207537d8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1f020753850 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f0207538c8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f020753940 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020753e10 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f020753b68 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1f020753be0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f020753c58 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f020753cd0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f02074c250 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f020753ef8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f02074bf40 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f02074bfb8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f02074c030 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f02074c5e0 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f02074c338 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f02074c3b0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f02074c428 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f02074c4a0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f02074c970 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f02074c6c8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f02074c740 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f02074c7b8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f02074c830 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f02074ce78 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f02074ca58 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f02074cad0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f02074cb48 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f02074cbc0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f02074cc38 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f02074f2d8 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f02074ef98 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f02074f010 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f02074f088 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f02074f100 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f02074f178 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f02074f708 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f02074f3c8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f02074f440 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f02074f4b8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f02074f530 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f02074f5a8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f02074f970 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f02074f7f8 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f02074f870 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f02074fbc0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f02074fa48 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f02074fac0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f02074fea8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f02074fc98 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f02074fd10 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f02074fd88 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020754358 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f0207540b0 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f020754128 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f0207541a0 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f020754218 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f020754418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f020754988 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f020754560 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f0207545d8 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f020754650 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f0207546c8 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f020754740 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f020754ec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f020754b80 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f020754bf8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f020754c70 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f020754ce8 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1f020754d60 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1f02074ff80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f020750590 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f0207500c8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f020750140 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f0207501b8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f020750230 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f0207502a8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f020750320 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020750a90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f020750858 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1f0207508d0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x1f020750b40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1f020750c58 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1f020755238 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f020750f10 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1f020754fe0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f020755058 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1f0207552f0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1f020755408 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1f0207559a8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f0207556c8 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1f020755740 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f0207557b8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x1f020755a60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1f020755b80 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1f02074e170 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f020755e40 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1f020755eb8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f020755f30 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1f02074df60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1f02074e230 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1f02074e350 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1f02074e658 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1f02074e478 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1f02074e4f0 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f02074e568 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x1f02075c2e0 <line:37:1, line:44:1>
|   |-DeclStmt 0x1f02074e7a0 <line:38:5, col:21>
|   | `-VarDecl 0x1f02074e738 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1f02074e838 <line:39:5, col:13>
|   | `-VarDecl 0x1f02074e7d0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1f02074eb90 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1f02074eb78 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1f02074ea90 <col:34> '<builtin fn type>' Function 0x1f02074e928 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1f02074eac8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1f02074e738 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1f02074eb00 <col:29> 'const wchar_t *' lvalue ParmVar 0x1f02074e568 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1f02074ee50 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1f02074ebc0 <col:5> 'int' lvalue Var 0x1f02074e7d0 '_Ret' 'int'
|   | `-CallExpr 0x1f02074ed90 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1f02074ed78 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1f02074ebf8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1f02074ce78 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1f02074edd8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f02074ec18 <col:27> 'wchar_t *' lvalue ParmVar 0x1f02074e478 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1f02074edf0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f02074ec38 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1f02074e4f0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1f02074ee08 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f02074ec58 <col:44> 'const wchar_t *' lvalue ParmVar 0x1f02074e568 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1f02074ee20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1f02074ece0 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1f02074ecb8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1f02074ec78 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1f02074ee38 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1f02074ed00 <col:59> 'va_list':'char *' lvalue Var 0x1f02074e738 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1f02075c270 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1f02075c258 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1f02075c1a8 <col:34> '<builtin fn type>' Function 0x1f02075c040 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1f02075c1e0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1f02074e738 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1f02075c2d0 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x1f02075c2b8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1f02075c298 <col:12> 'int' lvalue Var 0x1f02074e7d0 '_Ret' 'int'
|-FunctionDecl 0x1f02074e928 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1f02074e9c8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1f02074ea38 <col:34> Implicit
|-FunctionDecl 0x1f02075c040 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1f02075c0e0 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1f02075c150 <col:34> Implicit
|-FunctionDecl 0x1f02075c5d8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x1f02075c330 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x1f02075c3a8 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f02075c420 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f02075c498 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1f02075c8c0 <line:50:1, line:52:1>
|   `-ReturnStmt 0x1f02075c8b0 <line:51:5, col:62>
|     `-CallExpr 0x1f02075c7f0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x1f02075c7d8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1f02075c6b0 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1f02074ce78 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1f02075c838 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1f02075c6d0 <col:27> 'wchar_t *' lvalue ParmVar 0x1f02075c330 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1f02075c850 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1f02075c6f0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1f02075c3a8 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1f02075c868 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1f02075c710 <col:44> 'const wchar_t *' lvalue ParmVar 0x1f02075c420 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1f02075c880 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x1f02075c798 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x1f02075c770 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x1f02075c730 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x1f02075c898 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1f02075c7b8 <col:59> 'va_list':'char *' lvalue ParmVar 0x1f02075c498 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1f02075cb60 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x1f02075c8e8 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x1f02075c960 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f02075c9d8 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f02075ca50 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1f02075d0f8 <line:61:1, line:68:1>
|   |-DeclStmt 0x1f02075ccb0 <line:62:5, col:21>
|   | `-VarDecl 0x1f02075cc48 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1f02075cd48 <line:63:5, col:13>
|   | `-VarDecl 0x1f02075cce0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1f02075cdf0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1f02075cdd8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1f02075cd60 <col:34> '<builtin fn type>' Function 0x1f02074e928 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1f02075cd80 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x1f02075cc48 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1f02075cdb8 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1f02075ca50 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x1f02075cff0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x1f02075ce20 <col:5> 'int' lvalue Var 0x1f02075cce0 '_Ret' 'int'
|   | `-CallExpr 0x1f02075cf30 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1f02075cf18 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1f02075ce58 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1f02074ce78 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1f02075cf78 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f02075ce78 <col:27> 'wchar_t *' lvalue ParmVar 0x1f02075c8e8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1f02075cf90 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f02075ce98 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1f02075c960 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1f02075cfa8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f02075ceb8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1f02075c9d8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1f02075cfc0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f02075ced8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1f02075ca50 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x1f02075cfd8 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1f02075cef8 <col:64> 'va_list':'char *' lvalue Var 0x1f02075cc48 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1f02075d088 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1f02075d070 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1f02075d010 <col:34> '<builtin fn type>' Function 0x1f02075c040 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1f02075d050 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x1f02075cc48 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1f02075d0e8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1f02075d0d0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1f02075d0b0 <col:12> 'int' lvalue Var 0x1f02075cce0 '_Ret' 'int'
|-FunctionDecl 0x1f02075d488 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1f02075d148 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1f02075d1c0 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f02075d238 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f02075d2b0 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1f02075d328 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1f02075d710 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1f02075d700 <line:75:5, col:67>
|     `-CallExpr 0x1f02075d640 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1f02075d628 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1f02075d568 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1f02074ce78 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1f02075d688 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1f02075d588 <col:27> 'wchar_t *' lvalue ParmVar 0x1f02075d148 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1f02075d6a0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1f02075d5a8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1f02075d1c0 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1f02075d6b8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1f02075d5c8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1f02075d238 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1f02075d6d0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1f02075d5e8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1f02075d2b0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1f02075d6e8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1f02075d608 <col:64> 'va_list':'char *' lvalue ParmVar 0x1f02075d328 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1f02075d958 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1f02075d738 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1f02075d7b0 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1f02075dba8 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f02075da30 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f02075daa8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f02075de90 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f02075dc80 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f02075dcf8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f02075dd70 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f020757168 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f020756ff0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1f020757068 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1f020757218 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f020757628 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f020757418 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1f020757490 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f020757508 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f0207576e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f020757998 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f020757820 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1f020757898 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1f020757c80 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f020757a70 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1f020757ae8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f020757b60 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f020756050 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f020757e20 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1f020757e98 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1f020756100 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f0207565d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f020756300 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1f020756378 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f0207563f0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f020756690 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f020756948 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f0207567d0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1f020756848 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1f020756c30 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f020756a20 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1f020756a98 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f020756b10 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f02075a108 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f020756dd0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1f020756e48 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f020756ec0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1f02075a1c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f02075a740 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f02075a3c0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1f02075a438 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f02075a4b0 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f02075a528 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f02075a800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f02075ab50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f02075a940 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1f02075a9b8 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f02075aa30 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1f02075aed8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f02075ac30 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1f02075aca8 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f02075ad20 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f02075ad98 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f02075f220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1f02075f140 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1f02075f2c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f02075f640 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f02075f4c8 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f02075f540 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f02075f6f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f02075f910 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1f02075f830 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1f02075fb58 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f02075f9e0 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f02075fa58 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f02075fe58 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1f02075fc38 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1f02075fcb0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x1f02075b1d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1f02075fff0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1f02075b030 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x1f02075b288 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f02075b690 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1f02075b3d0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1f02075b448 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1f02075b4c0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x1f02075baf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1f02075b830 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1f02075b8a8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x1f02075b920 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x1f02075bba8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f020758048 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1f02075bcf0 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x1f02075bd68 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1f02075bde0 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1f02075be58 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x1f0207582a0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1f020758130 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1f0207584e0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1f020758370 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x1f0207583e8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x1f020758698 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1f0207585b8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x1f020758988 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1f020758768 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x1f0207587e0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1f020758bf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1f020758b20 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1f020758ca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f020758eb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1f020758de0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1f020760178 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1f020758f88 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1f020760080 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1f0207603c0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1f020760250 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1f0207602c8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1f020760570 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1f020760498 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1f020760718 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1f020760640 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1f0207608c8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f0207607e8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1f020760a78 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f020760998 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1f020760df0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1f020760b50 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1f020760bc8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f020760c40 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f020760cb8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1f0207662b0 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1f020760ee0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1f020760f58 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f020760fd0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f0207660e0 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f020766158 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1f0207665c0 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1f0207663a0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1f020766420 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1f0207664a0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1f020766780 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1f0207666a0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1f020766a70 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1f020766850 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1f0207668d0 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1f020766950 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1f020766c30 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1f020766b50 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1f020766fa8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1f020766d08 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1f020766d80 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f020766df8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f020766e70 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1f020763228 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1f0207630b0 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1f020763128 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1f020763560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1f0207633e0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1f020763460 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1f020763610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1f0207638c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1f020763968 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1f020763ca8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1f020763b30 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1f020763bb0 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1f020763d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1f0207620a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1f020762140 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1f0207623e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1f020762300 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1f020762488 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1f020762708 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1f0207627a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1f020762a50 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1f020762970 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1f020762af8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1f020762dd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1f020762cf8 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1f020762e80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1f020764238 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1f0207640c0 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1f020764138 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1f0207642e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1f0207645a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1f020764648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x1f0207649d0 <.//openssl//file_jk/before\crypto\asn1\a_utf8.c:27:1, line:114:1> line:27:5 UTF8_getc 'int (const unsigned char *, int, unsigned long *)'
| |-ParmVarDecl 0x1f020764770 <col:15, col:36> col:36 used str 'const unsigned char *'
| |-ParmVarDecl 0x1f0207647f0 <col:41, col:45> col:45 used len 'int'
| |-ParmVarDecl 0x1f0207648a0 <col:50, col:65> col:65 used val 'unsigned long *'
| `-CompoundStmt 0x1f020776040 <line:28:1, line:114:1>
|   |-DeclStmt 0x1f020764b20 <line:29:5, col:27>
|   | `-VarDecl 0x1f020764ab8 <col:5, col:26> col:26 used p 'const unsigned char *'
|   |-DeclStmt 0x1f020764bb8 <line:30:5, col:24>
|   | `-VarDecl 0x1f020764b50 <col:5, col:19> col:19 used value 'unsigned long'
|   |-DeclStmt 0x1f020764c50 <line:31:5, col:12>
|   | `-VarDecl 0x1f020764be8 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x1f020764d20 <line:32:5, line:33:16>
|   | |-BinaryOperator 0x1f020764cc8 <line:32:9, col:16> 'int' '<='
|   | | |-ImplicitCastExpr 0x1f020764cb0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1f020764c68 <col:9> 'int' lvalue ParmVar 0x1f0207647f0 'len' 'int'
|   | | `-IntegerLiteral 0x1f020764c88 <col:16> 'int' 0
|   | `-ReturnStmt 0x1f020764d10 <line:33:9, col:16>
|   |   `-IntegerLiteral 0x1f020764ce8 <col:16> 'int' 0
|   |-BinaryOperator 0x1f020764da8 <line:34:5, col:9> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x1f020764d38 <col:5> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x1f020764d90 <col:9> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1f020764d70 <col:9> 'const unsigned char *' lvalue ParmVar 0x1f020764770 'str' 'const unsigned char *'
|   |-IfStmt 0x1f02076b000 <line:37:5, line:111:17> has_else
|   | |-BinaryOperator 0x1f020764ed8 <line:37:9, col:24> 'int' '=='
|   | | |-ParenExpr 0x1f020764e90 <col:9, col:19> 'int'
|   | | | `-BinaryOperator 0x1f020764e70 <col:10, col:15> 'int' '&'
|   | | |   |-ImplicitCastExpr 0x1f020764e58 <col:10, col:11> 'int' <IntegralCast>
|   | | |   | `-ImplicitCastExpr 0x1f020764e40 <col:10, col:11> 'unsigned char' <LValueToRValue>
|   | | |   |   `-UnaryOperator 0x1f020764e00 <col:10, col:11> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | | |   |     `-ImplicitCastExpr 0x1f020764de8 <col:11> 'const unsigned char *' <LValueToRValue>
|   | | |   |       `-DeclRefExpr 0x1f020764dc8 <col:11> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   | | |   `-IntegerLiteral 0x1f020764e18 <col:15> 'int' 128
|   | | `-IntegerLiteral 0x1f020764eb0 <col:24> 'int' 0
|   | |-CompoundStmt 0x1f0207650d0 <col:27, line:40:5>
|   | | |-BinaryOperator 0x1f020765010 <line:38:9, col:24> 'unsigned long' '='
|   | | | |-DeclRefExpr 0x1f020764ef8 <col:9> 'unsigned long' lvalue Var 0x1f020764b50 'value' 'unsigned long'
|   | | | `-ImplicitCastExpr 0x1f020764ff8 <col:17, col:24> 'unsigned long' <IntegralCast>
|   | | |   `-BinaryOperator 0x1f020764fd8 <col:17, col:24> 'int' '&'
|   | | |     |-ImplicitCastExpr 0x1f020764fc0 <col:17, col:19> 'int' <IntegralCast>
|   | | |     | `-ImplicitCastExpr 0x1f020764fa8 <col:17, col:19> 'unsigned char' <LValueToRValue>
|   | | |     |   `-UnaryOperator 0x1f020764f68 <col:17, col:19> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | | |     |     `-UnaryOperator 0x1f020764f50 <col:18, col:19> 'const unsigned char *' postfix '++'
|   | | |     |       `-DeclRefExpr 0x1f020764f30 <col:18> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   | | |     `-IntegerLiteral 0x1f020764f80 <col:24> 'int' 127
|   | | `-BinaryOperator 0x1f020765090 <line:39:9, col:15> 'int' '='
|   | |   |-DeclRefExpr 0x1f020765030 <col:9> 'int' lvalue Var 0x1f020764be8 'ret' 'int'
|   | |   `-IntegerLiteral 0x1f020765068 <col:15> 'int' 1
|   | `-IfStmt 0x1f02076afd8 <line:40:12, line:111:17> has_else
|   |   |-BinaryOperator 0x1f020765200 <line:40:16, col:31> 'int' '=='
|   |   | |-ParenExpr 0x1f0207651b8 <col:16, col:26> 'int'
|   |   | | `-BinaryOperator 0x1f020765198 <col:17, col:22> 'int' '&'
|   |   | |   |-ImplicitCastExpr 0x1f020765180 <col:17, col:18> 'int' <IntegralCast>
|   |   | |   | `-ImplicitCastExpr 0x1f020765168 <col:17, col:18> 'unsigned char' <LValueToRValue>
|   |   | |   |   `-UnaryOperator 0x1f020765128 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   | |   |     `-ImplicitCastExpr 0x1f020765110 <col:18> 'const unsigned char *' <LValueToRValue>
|   |   | |   |       `-DeclRefExpr 0x1f0207650f0 <col:18> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |   | |   `-IntegerLiteral 0x1f020765140 <col:22> 'int' 224
|   |   | `-IntegerLiteral 0x1f0207651d8 <col:31> 'int' 192
|   |   |-CompoundStmt 0x1f0207658f0 <col:37, line:50:5>
|   |   | |-IfStmt 0x1f0207652f0 <line:41:9, line:42:21>
|   |   | | |-BinaryOperator 0x1f020765280 <line:41:13, col:19> 'int' '<'
|   |   | | | |-ImplicitCastExpr 0x1f020765268 <col:13> 'int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x1f020765220 <col:13> 'int' lvalue ParmVar 0x1f0207647f0 'len' 'int'
|   |   | | | `-IntegerLiteral 0x1f020765240 <col:19> 'int' 2
|   |   | | `-ReturnStmt 0x1f0207652e0 <line:42:13, col:21>
|   |   | |   `-UnaryOperator 0x1f0207652c8 <col:20, col:21> 'int' prefix '-'
|   |   | |     `-IntegerLiteral 0x1f0207652a0 <col:21> 'int' 1
|   |   | |-IfStmt 0x1f0207654b8 <line:43:9, line:44:21>
|   |   | | |-BinaryOperator 0x1f020765448 <line:43:13, col:30> 'int' '!='
|   |   | | | |-ParenExpr 0x1f020765400 <col:13, col:25> 'int'
|   |   | | | | `-BinaryOperator 0x1f0207653e0 <col:14, col:21> 'int' '&'
|   |   | | | |   |-ImplicitCastExpr 0x1f0207653c8 <col:14, col:17> 'int' <IntegralCast>
|   |   | | | |   | `-ImplicitCastExpr 0x1f0207653b0 <col:14, col:17> 'unsigned char' <LValueToRValue>
|   |   | | | |   |   `-ArraySubscriptExpr 0x1f020765368 <col:14, col:17> 'const unsigned char' lvalue
|   |   | | | |   |     |-ImplicitCastExpr 0x1f020765350 <col:14> 'const unsigned char *' <LValueToRValue>
|   |   | | | |   |     | `-DeclRefExpr 0x1f020765308 <col:14> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |   | | | |   |     `-IntegerLiteral 0x1f020765328 <col:16> 'int' 1
|   |   | | | |   `-IntegerLiteral 0x1f020765388 <col:21> 'int' 192
|   |   | | | `-IntegerLiteral 0x1f020765420 <col:30> 'int' 128
|   |   | | `-ReturnStmt 0x1f0207654a8 <line:44:13, col:21>
|   |   | |   `-UnaryOperator 0x1f020765490 <col:20, col:21> 'int' prefix '-'
|   |   | |     `-IntegerLiteral 0x1f020765468 <col:21> 'int' 3
|   |   | |-BinaryOperator 0x1f020765638 <line:45:9, col:34> 'unsigned long' '='
|   |   | | |-DeclRefExpr 0x1f0207654d0 <col:9> 'unsigned long' lvalue Var 0x1f020764b50 'value' 'unsigned long'
|   |   | | `-ImplicitCastExpr 0x1f020765620 <col:17, col:34> 'unsigned long' <IntegralCast>
|   |   | |   `-BinaryOperator 0x1f020765600 <col:17, col:34> 'int' '<<'
|   |   | |     |-ParenExpr 0x1f0207655b8 <col:17, col:29> 'int'
|   |   | |     | `-BinaryOperator 0x1f020765598 <col:18, col:25> 'int' '&'
|   |   | |     |   |-ImplicitCastExpr 0x1f020765580 <col:18, col:20> 'int' <IntegralCast>
|   |   | |     |   | `-ImplicitCastExpr 0x1f020765568 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |   | |     |   |   `-UnaryOperator 0x1f020765528 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   | |     |   |     `-UnaryOperator 0x1f020765510 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |   | |     |   |       `-DeclRefExpr 0x1f0207654f0 <col:19> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |   | |     |   `-IntegerLiteral 0x1f020765540 <col:25> 'int' 31
|   |   | |     `-IntegerLiteral 0x1f0207655d8 <col:34> 'int' 6
|   |   | |-CompoundAssignOperator 0x1f020765758 <line:46:9, col:25> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | |-DeclRefExpr 0x1f020765658 <col:9> 'unsigned long' lvalue Var 0x1f020764b50 'value' 'unsigned long'
|   |   | | `-ImplicitCastExpr 0x1f020765740 <col:18, col:25> 'unsigned long' <IntegralCast>
|   |   | |   `-BinaryOperator 0x1f020765720 <col:18, col:25> 'int' '&'
|   |   | |     |-ImplicitCastExpr 0x1f020765708 <col:18, col:20> 'int' <IntegralCast>
|   |   | |     | `-ImplicitCastExpr 0x1f0207656f0 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |   | |     |   `-UnaryOperator 0x1f0207656b0 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   | |     |     `-UnaryOperator 0x1f020765698 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |   | |     |       `-DeclRefExpr 0x1f020765678 <col:19> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |   | |     `-IntegerLiteral 0x1f0207656c8 <col:25> 'int' 63
|   |   | |-IfStmt 0x1f020765870 <line:47:9, line:48:21>
|   |   | | |-BinaryOperator 0x1f020765800 <line:47:13, col:21> 'int' '<'
|   |   | | | |-ImplicitCastExpr 0x1f0207657d0 <col:13> 'unsigned long' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x1f020765788 <col:13> 'unsigned long' lvalue Var 0x1f020764b50 'value' 'unsigned long'
|   |   | | | `-ImplicitCastExpr 0x1f0207657e8 <col:21> 'unsigned long' <IntegralCast>
|   |   | | |   `-IntegerLiteral 0x1f0207657a8 <col:21> 'int' 128
|   |   | | `-ReturnStmt 0x1f020765860 <line:48:13, col:21>
|   |   | |   `-UnaryOperator 0x1f020765848 <col:20, col:21> 'int' prefix '-'
|   |   | |     `-IntegerLiteral 0x1f020765820 <col:21> 'int' 4
|   |   | `-BinaryOperator 0x1f0207658d0 <line:49:9, col:15> 'int' '='
|   |   |   |-DeclRefExpr 0x1f020765888 <col:9> 'int' lvalue Var 0x1f020764be8 'ret' 'int'
|   |   |   `-IntegerLiteral 0x1f0207658a8 <col:15> 'int' 2
|   |   `-IfStmt 0x1f02076afb0 <line:50:12, line:111:17> has_else
|   |     |-BinaryOperator 0x1f020765a40 <line:50:16, col:31> 'int' '=='
|   |     | |-ParenExpr 0x1f0207659f8 <col:16, col:26> 'int'
|   |     | | `-BinaryOperator 0x1f0207659d8 <col:17, col:22> 'int' '&'
|   |     | |   |-ImplicitCastExpr 0x1f0207659c0 <col:17, col:18> 'int' <IntegralCast>
|   |     | |   | `-ImplicitCastExpr 0x1f0207659a8 <col:17, col:18> 'unsigned char' <LValueToRValue>
|   |     | |   |   `-UnaryOperator 0x1f020765968 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | |   |     `-ImplicitCastExpr 0x1f020765950 <col:18> 'const unsigned char *' <LValueToRValue>
|   |     | |   |       `-DeclRefExpr 0x1f020765930 <col:18> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |     | |   `-IntegerLiteral 0x1f020765980 <col:22> 'int' 240
|   |     | `-IntegerLiteral 0x1f020765a18 <col:31> 'int' 224
|   |     |-CompoundStmt 0x1f0207674b0 <col:37, line:62:5>
|   |     | |-IfStmt 0x1f020765b30 <line:51:9, line:52:21>
|   |     | | |-BinaryOperator 0x1f020765ac0 <line:51:13, col:19> 'int' '<'
|   |     | | | |-ImplicitCastExpr 0x1f020765aa8 <col:13> 'int' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x1f020765a60 <col:13> 'int' lvalue ParmVar 0x1f0207647f0 'len' 'int'
|   |     | | | `-IntegerLiteral 0x1f020765a80 <col:19> 'int' 3
|   |     | | `-ReturnStmt 0x1f020765b20 <line:52:13, col:21>
|   |     | |   `-UnaryOperator 0x1f020765b08 <col:20, col:21> 'int' prefix '-'
|   |     | |     `-IntegerLiteral 0x1f020765ae0 <col:21> 'int' 1
|   |     | |-IfStmt 0x1f020765eb8 <line:53:9, line:55:21>
|   |     | | |-BinaryOperator 0x1f020765e48 <line:53:13, line:54:38> 'int' '||'
|   |     | | | |-ParenExpr 0x1f020765ca8 <line:53:13, col:35> 'int'
|   |     | | | | `-BinaryOperator 0x1f020765c88 <col:14, col:31> 'int' '!='
|   |     | | | |   |-ParenExpr 0x1f020765c40 <col:14, col:26> 'int'
|   |     | | | |   | `-BinaryOperator 0x1f020765c20 <col:15, col:22> 'int' '&'
|   |     | | | |   |   |-ImplicitCastExpr 0x1f020765c08 <col:15, col:18> 'int' <IntegralCast>
|   |     | | | |   |   | `-ImplicitCastExpr 0x1f020765bf0 <col:15, col:18> 'unsigned char' <LValueToRValue>
|   |     | | | |   |   |   `-ArraySubscriptExpr 0x1f020765ba8 <col:15, col:18> 'const unsigned char' lvalue
|   |     | | | |   |   |     |-ImplicitCastExpr 0x1f020765b90 <col:15> 'const unsigned char *' <LValueToRValue>
|   |     | | | |   |   |     | `-DeclRefExpr 0x1f020765b48 <col:15> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |     | | | |   |   |     `-IntegerLiteral 0x1f020765b68 <col:17> 'int' 1
|   |     | | | |   |   `-IntegerLiteral 0x1f020765bc8 <col:22> 'int' 192
|   |     | | | |   `-IntegerLiteral 0x1f020765c60 <col:31> 'int' 128
|   |     | | | `-ParenExpr 0x1f020765e28 <line:54:16, col:38> 'int'
|   |     | | |   `-BinaryOperator 0x1f020765e08 <col:17, col:34> 'int' '!='
|   |     | | |     |-ParenExpr 0x1f020765dc0 <col:17, col:29> 'int'
|   |     | | |     | `-BinaryOperator 0x1f020765da0 <col:18, col:25> 'int' '&'
|   |     | | |     |   |-ImplicitCastExpr 0x1f020765d88 <col:18, col:21> 'int' <IntegralCast>
|   |     | | |     |   | `-ImplicitCastExpr 0x1f020765d70 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |     | | |     |   |   `-ArraySubscriptExpr 0x1f020765d28 <col:18, col:21> 'const unsigned char' lvalue
|   |     | | |     |   |     |-ImplicitCastExpr 0x1f020765d10 <col:18> 'const unsigned char *' <LValueToRValue>
|   |     | | |     |   |     | `-DeclRefExpr 0x1f020765cc8 <col:18> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |     | | |     |   |     `-IntegerLiteral 0x1f020765ce8 <col:20> 'int' 2
|   |     | | |     |   `-IntegerLiteral 0x1f020765d48 <col:25> 'int' 192
|   |     | | |     `-IntegerLiteral 0x1f020765de0 <col:34> 'int' 128
|   |     | | `-ReturnStmt 0x1f020765ea8 <line:55:13, col:21>
|   |     | |   `-UnaryOperator 0x1f020765e90 <col:20, col:21> 'int' prefix '-'
|   |     | |     `-IntegerLiteral 0x1f020765e68 <col:21> 'int' 3
|   |     | |-BinaryOperator 0x1f020766038 <line:56:9, col:33> 'unsigned long' '='
|   |     | | |-DeclRefExpr 0x1f020765ed0 <col:9> 'unsigned long' lvalue Var 0x1f020764b50 'value' 'unsigned long'
|   |     | | `-ImplicitCastExpr 0x1f020766020 <col:17, col:33> 'unsigned long' <IntegralCast>
|   |     | |   `-BinaryOperator 0x1f020766000 <col:17, col:33> 'int' '<<'
|   |     | |     |-ParenExpr 0x1f020765fb8 <col:17, col:28> 'int'
|   |     | |     | `-BinaryOperator 0x1f020765f98 <col:18, col:25> 'int' '&'
|   |     | |     |   |-ImplicitCastExpr 0x1f020765f80 <col:18, col:20> 'int' <IntegralCast>
|   |     | |     |   | `-ImplicitCastExpr 0x1f020765f68 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |     | |     |   |   `-UnaryOperator 0x1f020765f28 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | |     |   |     `-UnaryOperator 0x1f020765f10 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |     | |     |   |       `-DeclRefExpr 0x1f020765ef0 <col:19> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |     | |     |   `-IntegerLiteral 0x1f020765f40 <col:25> 'int' 15
|   |     | |     `-IntegerLiteral 0x1f020765fd8 <col:33> 'int' 12
|   |     | |-CompoundAssignOperator 0x1f0207671e8 <line:57:9, col:35> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |     | | |-DeclRefExpr 0x1f020766058 <col:9> 'unsigned long' lvalue Var 0x1f020764b50 'value' 'unsigned long'
|   |     | | `-ImplicitCastExpr 0x1f0207671d0 <col:18, col:35> 'unsigned long' <IntegralCast>
|   |     | |   `-BinaryOperator 0x1f0207671b0 <col:18, col:35> 'int' '<<'
|   |     | |     |-ParenExpr 0x1f020767168 <col:18, col:30> 'int'
|   |     | |     | `-BinaryOperator 0x1f020767148 <col:19, col:26> 'int' '&'
|   |     | |     |   |-ImplicitCastExpr 0x1f020767130 <col:19, col:21> 'int' <IntegralCast>
|   |     | |     |   | `-ImplicitCastExpr 0x1f020767118 <col:19, col:21> 'unsigned char' <LValueToRValue>
|   |     | |     |   |   `-UnaryOperator 0x1f0207660b0 <col:19, col:21> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | |     |   |     `-UnaryOperator 0x1f020766098 <col:20, col:21> 'const unsigned char *' postfix '++'
|   |     | |     |   |       `-DeclRefExpr 0x1f020766078 <col:20> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |     | |     |   `-IntegerLiteral 0x1f0207670f0 <col:26> 'int' 63
|   |     | |     `-IntegerLiteral 0x1f020767188 <col:35> 'int' 6
|   |     | |-CompoundAssignOperator 0x1f020767318 <line:58:9, col:25> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |     | | |-DeclRefExpr 0x1f020767218 <col:9> 'unsigned long' lvalue Var 0x1f020764b50 'value' 'unsigned long'
|   |     | | `-ImplicitCastExpr 0x1f020767300 <col:18, col:25> 'unsigned long' <IntegralCast>
|   |     | |   `-BinaryOperator 0x1f0207672e0 <col:18, col:25> 'int' '&'
|   |     | |     |-ImplicitCastExpr 0x1f0207672c8 <col:18, col:20> 'int' <IntegralCast>
|   |     | |     | `-ImplicitCastExpr 0x1f0207672b0 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |     | |     |   `-UnaryOperator 0x1f020767270 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | |     |     `-UnaryOperator 0x1f020767258 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |     | |     |       `-DeclRefExpr 0x1f020767238 <col:19> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |     | |     `-IntegerLiteral 0x1f020767288 <col:25> 'int' 63
|   |     | |-IfStmt 0x1f020767430 <line:59:9, line:60:21>
|   |     | | |-BinaryOperator 0x1f0207673c0 <line:59:13, col:21> 'int' '<'
|   |     | | | |-ImplicitCastExpr 0x1f020767390 <col:13> 'unsigned long' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x1f020767348 <col:13> 'unsigned long' lvalue Var 0x1f020764b50 'value' 'unsigned long'
|   |     | | | `-ImplicitCastExpr 0x1f0207673a8 <col:21> 'unsigned long' <IntegralCast>
|   |     | | |   `-IntegerLiteral 0x1f020767368 <col:21> 'int' 2048
|   |     | | `-ReturnStmt 0x1f020767420 <line:60:13, col:21>
|   |     | |   `-UnaryOperator 0x1f020767408 <col:20, col:21> 'int' prefix '-'
|   |     | |     `-IntegerLiteral 0x1f0207673e0 <col:21> 'int' 4
|   |     | `-BinaryOperator 0x1f020767490 <line:61:9, col:15> 'int' '='
|   |     |   |-DeclRefExpr 0x1f020767448 <col:9> 'int' lvalue Var 0x1f020764be8 'ret' 'int'
|   |     |   `-IntegerLiteral 0x1f020767468 <col:15> 'int' 3
|   |     `-IfStmt 0x1f02076af88 <line:62:12, line:111:17> has_else
|   |       |-BinaryOperator 0x1f020767608 <line:62:16, col:31> 'int' '=='
|   |       | |-ParenExpr 0x1f0207675c0 <col:16, col:26> 'int'
|   |       | | `-BinaryOperator 0x1f0207675a0 <col:17, col:22> 'int' '&'
|   |       | |   |-ImplicitCastExpr 0x1f020767588 <col:17, col:18> 'int' <IntegralCast>
|   |       | |   | `-ImplicitCastExpr 0x1f020767570 <col:17, col:18> 'unsigned char' <LValueToRValue>
|   |       | |   |   `-UnaryOperator 0x1f020767530 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |       | |   |     `-ImplicitCastExpr 0x1f020767518 <col:18> 'const unsigned char *' <LValueToRValue>
|   |       | |   |       `-DeclRefExpr 0x1f0207674f8 <col:18> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |       | |   `-IntegerLiteral 0x1f020767548 <col:22> 'int' 248
|   |       | `-IntegerLiteral 0x1f0207675e0 <col:31> 'int' 240
|   |       |-CompoundStmt 0x1f020768400 <col:37, line:76:5>
|   |       | |-IfStmt 0x1f0207676f8 <line:63:9, line:64:21>
|   |       | | |-BinaryOperator 0x1f020767688 <line:63:13, col:19> 'int' '<'
|   |       | | | |-ImplicitCastExpr 0x1f020767670 <col:13> 'int' <LValueToRValue>
|   |       | | | | `-DeclRefExpr 0x1f020767628 <col:13> 'int' lvalue ParmVar 0x1f0207647f0 'len' 'int'
|   |       | | | `-IntegerLiteral 0x1f020767648 <col:19> 'int' 4
|   |       | | `-ReturnStmt 0x1f0207676e8 <line:64:13, col:21>
|   |       | |   `-UnaryOperator 0x1f0207676d0 <col:20, col:21> 'int' prefix '-'
|   |       | |     `-IntegerLiteral 0x1f0207676a8 <col:21> 'int' 1
|   |       | |-IfStmt 0x1f020767c20 <line:65:9, line:68:21>
|   |       | | |-BinaryOperator 0x1f020767bb0 <line:65:13, line:67:38> 'int' '||'
|   |       | | | |-BinaryOperator 0x1f020767a10 <line:65:13, line:66:38> 'int' '||'
|   |       | | | | |-ParenExpr 0x1f020767870 <line:65:13, col:35> 'int'
|   |       | | | | | `-BinaryOperator 0x1f020767850 <col:14, col:31> 'int' '!='
|   |       | | | | |   |-ParenExpr 0x1f020767808 <col:14, col:26> 'int'
|   |       | | | | |   | `-BinaryOperator 0x1f0207677e8 <col:15, col:22> 'int' '&'
|   |       | | | | |   |   |-ImplicitCastExpr 0x1f0207677d0 <col:15, col:18> 'int' <IntegralCast>
|   |       | | | | |   |   | `-ImplicitCastExpr 0x1f0207677b8 <col:15, col:18> 'unsigned char' <LValueToRValue>
|   |       | | | | |   |   |   `-ArraySubscriptExpr 0x1f020767770 <col:15, col:18> 'const unsigned char' lvalue
|   |       | | | | |   |   |     |-ImplicitCastExpr 0x1f020767758 <col:15> 'const unsigned char *' <LValueToRValue>
|   |       | | | | |   |   |     | `-DeclRefExpr 0x1f020767710 <col:15> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |       | | | | |   |   |     `-IntegerLiteral 0x1f020767730 <col:17> 'int' 1
|   |       | | | | |   |   `-IntegerLiteral 0x1f020767790 <col:22> 'int' 192
|   |       | | | | |   `-IntegerLiteral 0x1f020767828 <col:31> 'int' 128
|   |       | | | | `-ParenExpr 0x1f0207679f0 <line:66:16, col:38> 'int'
|   |       | | | |   `-BinaryOperator 0x1f0207679d0 <col:17, col:34> 'int' '!='
|   |       | | | |     |-ParenExpr 0x1f020767988 <col:17, col:29> 'int'
|   |       | | | |     | `-BinaryOperator 0x1f020767968 <col:18, col:25> 'int' '&'
|   |       | | | |     |   |-ImplicitCastExpr 0x1f020767950 <col:18, col:21> 'int' <IntegralCast>
|   |       | | | |     |   | `-ImplicitCastExpr 0x1f020767938 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |       | | | |     |   |   `-ArraySubscriptExpr 0x1f0207678f0 <col:18, col:21> 'const unsigned char' lvalue
|   |       | | | |     |   |     |-ImplicitCastExpr 0x1f0207678d8 <col:18> 'const unsigned char *' <LValueToRValue>
|   |       | | | |     |   |     | `-DeclRefExpr 0x1f020767890 <col:18> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |       | | | |     |   |     `-IntegerLiteral 0x1f0207678b0 <col:20> 'int' 2
|   |       | | | |     |   `-IntegerLiteral 0x1f020767910 <col:25> 'int' 192
|   |       | | | |     `-IntegerLiteral 0x1f0207679a8 <col:34> 'int' 128
|   |       | | | `-ParenExpr 0x1f020767b90 <line:67:16, col:38> 'int'
|   |       | | |   `-BinaryOperator 0x1f020767b70 <col:17, col:34> 'int' '!='
|   |       | | |     |-ParenExpr 0x1f020767b28 <col:17, col:29> 'int'
|   |       | | |     | `-BinaryOperator 0x1f020767b08 <col:18, col:25> 'int' '&'
|   |       | | |     |   |-ImplicitCastExpr 0x1f020767af0 <col:18, col:21> 'int' <IntegralCast>
|   |       | | |     |   | `-ImplicitCastExpr 0x1f020767ad8 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |       | | |     |   |   `-ArraySubscriptExpr 0x1f020767a90 <col:18, col:21> 'const unsigned char' lvalue
|   |       | | |     |   |     |-ImplicitCastExpr 0x1f020767a78 <col:18> 'const unsigned char *' <LValueToRValue>
|   |       | | |     |   |     | `-DeclRefExpr 0x1f020767a30 <col:18> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |       | | |     |   |     `-IntegerLiteral 0x1f020767a50 <col:20> 'int' 3
|   |       | | |     |   `-IntegerLiteral 0x1f020767ab0 <col:25> 'int' 192
|   |       | | |     `-IntegerLiteral 0x1f020767b48 <col:34> 'int' 128
|   |       | | `-ReturnStmt 0x1f020767c10 <line:68:13, col:21>
|   |       | |   `-UnaryOperator 0x1f020767bf8 <col:20, col:21> 'int' prefix '-'
|   |       | |     `-IntegerLiteral 0x1f020767bd0 <col:21> 'int' 3
|   |       | |-BinaryOperator 0x1f020767e08 <line:69:9, col:50> 'unsigned long' '='
|   |       | | |-DeclRefExpr 0x1f020767c38 <col:9> 'unsigned long' lvalue Var 0x1f020764b50 'value' 'unsigned long'
|   |       | | `-BinaryOperator 0x1f020767de8 <col:17, col:50> 'unsigned long' '<<'
|   |       | |   |-ParenExpr 0x1f020767da0 <col:17, col:45> 'unsigned long'
|   |       | |   | `-CStyleCastExpr 0x1f020767d78 <col:18, col:44> 'unsigned long' <IntegralCast>
|   |       | |   |   `-ParenExpr 0x1f020767d58 <col:33, col:44> 'int'
|   |       | |   |     `-BinaryOperator 0x1f020767d00 <col:34, col:41> 'int' '&'
|   |       | |   |       |-ImplicitCastExpr 0x1f020767ce8 <col:34, col:36> 'int' <IntegralCast>
|   |       | |   |       | `-ImplicitCastExpr 0x1f020767cd0 <col:34, col:36> 'unsigned char' <LValueToRValue>
|   |       | |   |       |   `-UnaryOperator 0x1f020767c90 <col:34, col:36> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |       | |   |       |     `-UnaryOperator 0x1f020767c78 <col:35, col:36> 'const unsigned char *' postfix '++'
|   |       | |   |       |       `-DeclRefExpr 0x1f020767c58 <col:35> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |       | |   |       `-IntegerLiteral 0x1f020767ca8 <col:41> 'int' 7
|   |       | |   `-IntegerLiteral 0x1f020767dc0 <col:50> 'int' 18
|   |       | |-CompoundAssignOperator 0x1f020767f90 <line:70:9, col:35> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |       | | |-DeclRefExpr 0x1f020767e28 <col:9> 'unsigned long' lvalue Var 0x1f020764b50 'value' 'unsigned long'
|   |       | | `-ImplicitCastExpr 0x1f020767f78 <col:18, col:35> 'unsigned long' <IntegralCast>
|   |       | |   `-BinaryOperator 0x1f020767f58 <col:18, col:35> 'int' '<<'
|   |       | |     |-ParenExpr 0x1f020767f10 <col:18, col:30> 'int'
|   |       | |     | `-BinaryOperator 0x1f020767ef0 <col:19, col:26> 'int' '&'
|   |       | |     |   |-ImplicitCastExpr 0x1f020767ed8 <col:19, col:21> 'int' <IntegralCast>
|   |       | |     |   | `-ImplicitCastExpr 0x1f020767ec0 <col:19, col:21> 'unsigned char' <LValueToRValue>
|   |       | |     |   |   `-UnaryOperator 0x1f020767e80 <col:19, col:21> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |       | |     |   |     `-UnaryOperator 0x1f020767e68 <col:20, col:21> 'const unsigned char *' postfix '++'
|   |       | |     |   |       `-DeclRefExpr 0x1f020767e48 <col:20> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |       | |     |   `-IntegerLiteral 0x1f020767e98 <col:26> 'int' 63
|   |       | |     `-IntegerLiteral 0x1f020767f30 <col:35> 'int' 12
|   |       | |-CompoundAssignOperator 0x1f020768138 <line:71:9, col:35> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |       | | |-DeclRefExpr 0x1f020767fc0 <col:9> 'unsigned long' lvalue Var 0x1f020764b50 'value' 'unsigned long'
|   |       | | `-ImplicitCastExpr 0x1f020768120 <col:18, col:35> 'unsigned long' <IntegralCast>
|   |       | |   `-BinaryOperator 0x1f020768100 <col:18, col:35> 'int' '<<'
|   |       | |     |-ParenExpr 0x1f0207680a8 <col:18, col:30> 'int'
|   |       | |     | `-BinaryOperator 0x1f020768088 <col:19, col:26> 'int' '&'
|   |       | |     |   |-ImplicitCastExpr 0x1f020768070 <col:19, col:21> 'int' <IntegralCast>
|   |       | |     |   | `-ImplicitCastExpr 0x1f020768058 <col:19, col:21> 'unsigned char' <LValueToRValue>
|   |       | |     |   |   `-UnaryOperator 0x1f020768018 <col:19, col:21> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |       | |     |   |     `-UnaryOperator 0x1f020768000 <col:20, col:21> 'const unsigned char *' postfix '++'
|   |       | |     |   |       `-DeclRefExpr 0x1f020767fe0 <col:20> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |       | |     |   `-IntegerLiteral 0x1f020768030 <col:26> 'int' 63
|   |       | |     `-IntegerLiteral 0x1f0207680c8 <col:35> 'int' 6
|   |       | |-CompoundAssignOperator 0x1f020768268 <line:72:9, col:25> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |       | | |-DeclRefExpr 0x1f020768168 <col:9> 'unsigned long' lvalue Var 0x1f020764b50 'value' 'unsigned long'
|   |       | | `-ImplicitCastExpr 0x1f020768250 <col:18, col:25> 'unsigned long' <IntegralCast>
|   |       | |   `-BinaryOperator 0x1f020768230 <col:18, col:25> 'int' '&'
|   |       | |     |-ImplicitCastExpr 0x1f020768218 <col:18, col:20> 'int' <IntegralCast>
|   |       | |     | `-ImplicitCastExpr 0x1f020768200 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |       | |     |   `-UnaryOperator 0x1f0207681c0 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |       | |     |     `-UnaryOperator 0x1f0207681a8 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |       | |     |       `-DeclRefExpr 0x1f020768188 <col:19> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |       | |     `-IntegerLiteral 0x1f0207681d8 <col:25> 'int' 63
|   |       | |-IfStmt 0x1f020768380 <line:73:9, line:74:21>
|   |       | | |-BinaryOperator 0x1f020768310 <line:73:13, col:21> 'int' '<'
|   |       | | | |-ImplicitCastExpr 0x1f0207682e0 <col:13> 'unsigned long' <LValueToRValue>
|   |       | | | | `-DeclRefExpr 0x1f020768298 <col:13> 'unsigned long' lvalue Var 0x1f020764b50 'value' 'unsigned long'
|   |       | | | `-ImplicitCastExpr 0x1f0207682f8 <col:21> 'unsigned long' <IntegralCast>
|   |       | | |   `-IntegerLiteral 0x1f0207682b8 <col:21> 'int' 65536
|   |       | | `-ReturnStmt 0x1f020768370 <line:74:13, col:21>
|   |       | |   `-UnaryOperator 0x1f020768358 <col:20, col:21> 'int' prefix '-'
|   |       | |     `-IntegerLiteral 0x1f020768330 <col:21> 'int' 4
|   |       | `-BinaryOperator 0x1f0207683e0 <line:75:9, col:15> 'int' '='
|   |       |   |-DeclRefExpr 0x1f020768398 <col:9> 'int' lvalue Var 0x1f020764be8 'ret' 'int'
|   |       |   `-IntegerLiteral 0x1f0207683b8 <col:15> 'int' 4
|   |       `-IfStmt 0x1f02076af60 <line:76:12, line:111:17> has_else
|   |         |-BinaryOperator 0x1f020768560 <line:76:16, col:31> 'int' '=='
|   |         | |-ParenExpr 0x1f020768518 <col:16, col:26> 'int'
|   |         | | `-BinaryOperator 0x1f0207684f8 <col:17, col:22> 'int' '&'
|   |         | |   |-ImplicitCastExpr 0x1f0207684e0 <col:17, col:18> 'int' <IntegralCast>
|   |         | |   | `-ImplicitCastExpr 0x1f0207684c8 <col:17, col:18> 'unsigned char' <LValueToRValue>
|   |         | |   |   `-UnaryOperator 0x1f020768488 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         | |   |     `-ImplicitCastExpr 0x1f020768470 <col:18> 'const unsigned char *' <LValueToRValue>
|   |         | |   |       `-DeclRefExpr 0x1f020768450 <col:18> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |         | |   `-IntegerLiteral 0x1f0207684a0 <col:22> 'int' 252
|   |         | `-IntegerLiteral 0x1f020768538 <col:31> 'int' 248
|   |         |-CompoundStmt 0x1f020769770 <col:37, line:92:5>
|   |         | |-IfStmt 0x1f020768650 <line:77:9, line:78:21>
|   |         | | |-BinaryOperator 0x1f0207685e0 <line:77:13, col:19> 'int' '<'
|   |         | | | |-ImplicitCastExpr 0x1f0207685c8 <col:13> 'int' <LValueToRValue>
|   |         | | | | `-DeclRefExpr 0x1f020768580 <col:13> 'int' lvalue ParmVar 0x1f0207647f0 'len' 'int'
|   |         | | | `-IntegerLiteral 0x1f0207685a0 <col:19> 'int' 5
|   |         | | `-ReturnStmt 0x1f020768640 <line:78:13, col:21>
|   |         | |   `-UnaryOperator 0x1f020768628 <col:20, col:21> 'int' prefix '-'
|   |         | |     `-IntegerLiteral 0x1f020768600 <col:21> 'int' 1
|   |         | |-IfStmt 0x1f020768d18 <line:79:9, line:83:21>
|   |         | | |-BinaryOperator 0x1f020768ca8 <line:79:13, line:82:38> 'int' '||'
|   |         | | | |-BinaryOperator 0x1f020768b08 <line:79:13, line:81:38> 'int' '||'
|   |         | | | | |-BinaryOperator 0x1f020768968 <line:79:13, line:80:38> 'int' '||'
|   |         | | | | | |-ParenExpr 0x1f0207687c8 <line:79:13, col:35> 'int'
|   |         | | | | | | `-BinaryOperator 0x1f0207687a8 <col:14, col:31> 'int' '!='
|   |         | | | | | |   |-ParenExpr 0x1f020768760 <col:14, col:26> 'int'
|   |         | | | | | |   | `-BinaryOperator 0x1f020768740 <col:15, col:22> 'int' '&'
|   |         | | | | | |   |   |-ImplicitCastExpr 0x1f020768728 <col:15, col:18> 'int' <IntegralCast>
|   |         | | | | | |   |   | `-ImplicitCastExpr 0x1f020768710 <col:15, col:18> 'unsigned char' <LValueToRValue>
|   |         | | | | | |   |   |   `-ArraySubscriptExpr 0x1f0207686c8 <col:15, col:18> 'const unsigned char' lvalue
|   |         | | | | | |   |   |     |-ImplicitCastExpr 0x1f0207686b0 <col:15> 'const unsigned char *' <LValueToRValue>
|   |         | | | | | |   |   |     | `-DeclRefExpr 0x1f020768668 <col:15> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |         | | | | | |   |   |     `-IntegerLiteral 0x1f020768688 <col:17> 'int' 1
|   |         | | | | | |   |   `-IntegerLiteral 0x1f0207686e8 <col:22> 'int' 192
|   |         | | | | | |   `-IntegerLiteral 0x1f020768780 <col:31> 'int' 128
|   |         | | | | | `-ParenExpr 0x1f020768948 <line:80:16, col:38> 'int'
|   |         | | | | |   `-BinaryOperator 0x1f020768928 <col:17, col:34> 'int' '!='
|   |         | | | | |     |-ParenExpr 0x1f0207688e0 <col:17, col:29> 'int'
|   |         | | | | |     | `-BinaryOperator 0x1f0207688c0 <col:18, col:25> 'int' '&'
|   |         | | | | |     |   |-ImplicitCastExpr 0x1f0207688a8 <col:18, col:21> 'int' <IntegralCast>
|   |         | | | | |     |   | `-ImplicitCastExpr 0x1f020768890 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |         | | | | |     |   |   `-ArraySubscriptExpr 0x1f020768848 <col:18, col:21> 'const unsigned char' lvalue
|   |         | | | | |     |   |     |-ImplicitCastExpr 0x1f020768830 <col:18> 'const unsigned char *' <LValueToRValue>
|   |         | | | | |     |   |     | `-DeclRefExpr 0x1f0207687e8 <col:18> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |         | | | | |     |   |     `-IntegerLiteral 0x1f020768808 <col:20> 'int' 2
|   |         | | | | |     |   `-IntegerLiteral 0x1f020768868 <col:25> 'int' 192
|   |         | | | | |     `-IntegerLiteral 0x1f020768900 <col:34> 'int' 128
|   |         | | | | `-ParenExpr 0x1f020768ae8 <line:81:16, col:38> 'int'
|   |         | | | |   `-BinaryOperator 0x1f020768ac8 <col:17, col:34> 'int' '!='
|   |         | | | |     |-ParenExpr 0x1f020768a80 <col:17, col:29> 'int'
|   |         | | | |     | `-BinaryOperator 0x1f020768a60 <col:18, col:25> 'int' '&'
|   |         | | | |     |   |-ImplicitCastExpr 0x1f020768a48 <col:18, col:21> 'int' <IntegralCast>
|   |         | | | |     |   | `-ImplicitCastExpr 0x1f020768a30 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |         | | | |     |   |   `-ArraySubscriptExpr 0x1f0207689e8 <col:18, col:21> 'const unsigned char' lvalue
|   |         | | | |     |   |     |-ImplicitCastExpr 0x1f0207689d0 <col:18> 'const unsigned char *' <LValueToRValue>
|   |         | | | |     |   |     | `-DeclRefExpr 0x1f020768988 <col:18> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |         | | | |     |   |     `-IntegerLiteral 0x1f0207689a8 <col:20> 'int' 3
|   |         | | | |     |   `-IntegerLiteral 0x1f020768a08 <col:25> 'int' 192
|   |         | | | |     `-IntegerLiteral 0x1f020768aa0 <col:34> 'int' 128
|   |         | | | `-ParenExpr 0x1f020768c88 <line:82:16, col:38> 'int'
|   |         | | |   `-BinaryOperator 0x1f020768c68 <col:17, col:34> 'int' '!='
|   |         | | |     |-ParenExpr 0x1f020768c20 <col:17, col:29> 'int'
|   |         | | |     | `-BinaryOperator 0x1f020768c00 <col:18, col:25> 'int' '&'
|   |         | | |     |   |-ImplicitCastExpr 0x1f020768be8 <col:18, col:21> 'int' <IntegralCast>
|   |         | | |     |   | `-ImplicitCastExpr 0x1f020768bd0 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |         | | |     |   |   `-ArraySubscriptExpr 0x1f020768b88 <col:18, col:21> 'const unsigned char' lvalue
|   |         | | |     |   |     |-ImplicitCastExpr 0x1f020768b70 <col:18> 'const unsigned char *' <LValueToRValue>
|   |         | | |     |   |     | `-DeclRefExpr 0x1f020768b28 <col:18> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |         | | |     |   |     `-IntegerLiteral 0x1f020768b48 <col:20> 'int' 4
|   |         | | |     |   `-IntegerLiteral 0x1f020768ba8 <col:25> 'int' 192
|   |         | | |     `-IntegerLiteral 0x1f020768c40 <col:34> 'int' 128
|   |         | | `-ReturnStmt 0x1f020768d08 <line:83:13, col:21>
|   |         | |   `-UnaryOperator 0x1f020768cf0 <col:20, col:21> 'int' prefix '-'
|   |         | |     `-IntegerLiteral 0x1f020768cc8 <col:21> 'int' 3
|   |         | |-BinaryOperator 0x1f020768f00 <line:84:9, col:50> 'unsigned long' '='
|   |         | | |-DeclRefExpr 0x1f020768d30 <col:9> 'unsigned long' lvalue Var 0x1f020764b50 'value' 'unsigned long'
|   |         | | `-BinaryOperator 0x1f020768ee0 <col:17, col:50> 'unsigned long' '<<'
|   |         | |   |-ParenExpr 0x1f020768e98 <col:17, col:45> 'unsigned long'
|   |         | |   | `-CStyleCastExpr 0x1f020768e70 <col:18, col:44> 'unsigned long' <IntegralCast>
|   |         | |   |   `-ParenExpr 0x1f020768e50 <col:33, col:44> 'int'
|   |         | |   |     `-BinaryOperator 0x1f020768df8 <col:34, col:41> 'int' '&'
|   |         | |   |       |-ImplicitCastExpr 0x1f020768de0 <col:34, col:36> 'int' <IntegralCast>
|   |         | |   |       | `-ImplicitCastExpr 0x1f020768dc8 <col:34, col:36> 'unsigned char' <LValueToRValue>
|   |         | |   |       |   `-UnaryOperator 0x1f020768d88 <col:34, col:36> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         | |   |       |     `-UnaryOperator 0x1f020768d70 <col:35, col:36> 'const unsigned char *' postfix '++'
|   |         | |   |       |       `-DeclRefExpr 0x1f020768d50 <col:35> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |         | |   |       `-IntegerLiteral 0x1f020768da0 <col:41> 'int' 3
|   |         | |   `-IntegerLiteral 0x1f020768eb8 <col:50> 'int' 24
|   |         | |-CompoundAssignOperator 0x1f020769110 <line:85:9, col:52> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |         | | |-DeclRefExpr 0x1f020768f20 <col:9> 'unsigned long' lvalue Var 0x1f020764b50 'value' 'unsigned long'
|   |         | | `-BinaryOperator 0x1f0207690d0 <col:18, col:52> 'unsigned long' '<<'
|   |         | |   |-ParenExpr 0x1f020769088 <col:18, col:47> 'unsigned long'
|   |         | |   | `-CStyleCastExpr 0x1f020769060 <col:19, col:46> 'unsigned long' <IntegralCast>
|   |         | |   |   `-ParenExpr 0x1f020769040 <col:34, col:46> 'int'
|   |         | |   |     `-BinaryOperator 0x1f020768fe8 <col:35, col:42> 'int' '&'
|   |         | |   |       |-ImplicitCastExpr 0x1f020768fd0 <col:35, col:37> 'int' <IntegralCast>
|   |         | |   |       | `-ImplicitCastExpr 0x1f020768fb8 <col:35, col:37> 'unsigned char' <LValueToRValue>
|   |         | |   |       |   `-UnaryOperator 0x1f020768f78 <col:35, col:37> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         | |   |       |     `-UnaryOperator 0x1f020768f60 <col:36, col:37> 'const unsigned char *' postfix '++'
|   |         | |   |       |       `-DeclRefExpr 0x1f020768f40 <col:36> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |         | |   |       `-IntegerLiteral 0x1f020768f90 <col:42> 'int' 63
|   |         | |   `-IntegerLiteral 0x1f0207690a8 <col:52> 'int' 18
|   |         | |-CompoundAssignOperator 0x1f020769310 <line:86:9, col:52> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |         | | |-DeclRefExpr 0x1f020769140 <col:9> 'unsigned long' lvalue Var 0x1f020764b50 'value' 'unsigned long'
|   |         | | `-BinaryOperator 0x1f0207692f0 <col:18, col:52> 'unsigned long' '<<'
|   |         | |   |-ParenExpr 0x1f0207692a8 <col:18, col:47> 'unsigned long'
|   |         | |   | `-CStyleCastExpr 0x1f020769280 <col:19, col:46> 'unsigned long' <IntegralCast>
|   |         | |   |   `-ParenExpr 0x1f020769260 <col:34, col:46> 'int'
|   |         | |   |     `-BinaryOperator 0x1f020769208 <col:35, col:42> 'int' '&'
|   |         | |   |       |-ImplicitCastExpr 0x1f0207691f0 <col:35, col:37> 'int' <IntegralCast>
|   |         | |   |       | `-ImplicitCastExpr 0x1f0207691d8 <col:35, col:37> 'unsigned char' <LValueToRValue>
|   |         | |   |       |   `-UnaryOperator 0x1f020769198 <col:35, col:37> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         | |   |       |     `-UnaryOperator 0x1f020769180 <col:36, col:37> 'const unsigned char *' postfix '++'
|   |         | |   |       |       `-DeclRefExpr 0x1f020769160 <col:36> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |         | |   |       `-IntegerLiteral 0x1f0207691b0 <col:42> 'int' 63
|   |         | |   `-IntegerLiteral 0x1f0207692c8 <col:52> 'int' 12
|   |         | |-CompoundAssignOperator 0x1f0207694a8 <line:87:9, col:35> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |         | | |-DeclRefExpr 0x1f020769340 <col:9> 'unsigned long' lvalue Var 0x1f020764b50 'value' 'unsigned long'
|   |         | | `-ImplicitCastExpr 0x1f020769490 <col:18, col:35> 'unsigned long' <IntegralCast>
|   |         | |   `-BinaryOperator 0x1f020769470 <col:18, col:35> 'int' '<<'
|   |         | |     |-ParenExpr 0x1f020769428 <col:18, col:30> 'int'
|   |         | |     | `-BinaryOperator 0x1f020769408 <col:19, col:26> 'int' '&'
|   |         | |     |   |-ImplicitCastExpr 0x1f0207693f0 <col:19, col:21> 'int' <IntegralCast>
|   |         | |     |   | `-ImplicitCastExpr 0x1f0207693d8 <col:19, col:21> 'unsigned char' <LValueToRValue>
|   |         | |     |   |   `-UnaryOperator 0x1f020769398 <col:19, col:21> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         | |     |   |     `-UnaryOperator 0x1f020769380 <col:20, col:21> 'const unsigned char *' postfix '++'
|   |         | |     |   |       `-DeclRefExpr 0x1f020769360 <col:20> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |         | |     |   `-IntegerLiteral 0x1f0207693b0 <col:26> 'int' 63
|   |         | |     `-IntegerLiteral 0x1f020769448 <col:35> 'int' 6
|   |         | |-CompoundAssignOperator 0x1f0207695d8 <line:88:9, col:25> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |         | | |-DeclRefExpr 0x1f0207694d8 <col:9> 'unsigned long' lvalue Var 0x1f020764b50 'value' 'unsigned long'
|   |         | | `-ImplicitCastExpr 0x1f0207695c0 <col:18, col:25> 'unsigned long' <IntegralCast>
|   |         | |   `-BinaryOperator 0x1f0207695a0 <col:18, col:25> 'int' '&'
|   |         | |     |-ImplicitCastExpr 0x1f020769588 <col:18, col:20> 'int' <IntegralCast>
|   |         | |     | `-ImplicitCastExpr 0x1f020769570 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |         | |     |   `-UnaryOperator 0x1f020769530 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         | |     |     `-UnaryOperator 0x1f020769518 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |         | |     |       `-DeclRefExpr 0x1f0207694f8 <col:19> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |         | |     `-IntegerLiteral 0x1f020769548 <col:25> 'int' 63
|   |         | |-IfStmt 0x1f0207696f0 <line:89:9, line:90:21>
|   |         | | |-BinaryOperator 0x1f020769680 <line:89:13, col:21> 'int' '<'
|   |         | | | |-ImplicitCastExpr 0x1f020769650 <col:13> 'unsigned long' <LValueToRValue>
|   |         | | | | `-DeclRefExpr 0x1f020769608 <col:13> 'unsigned long' lvalue Var 0x1f020764b50 'value' 'unsigned long'
|   |         | | | `-ImplicitCastExpr 0x1f020769668 <col:21> 'unsigned long' <IntegralCast>
|   |         | | |   `-IntegerLiteral 0x1f020769628 <col:21> 'int' 2097152
|   |         | | `-ReturnStmt 0x1f0207696e0 <line:90:13, col:21>
|   |         | |   `-UnaryOperator 0x1f0207696c8 <col:20, col:21> 'int' prefix '-'
|   |         | |     `-IntegerLiteral 0x1f0207696a0 <col:21> 'int' 4
|   |         | `-BinaryOperator 0x1f020769750 <line:91:9, col:15> 'int' '='
|   |         |   |-DeclRefExpr 0x1f020769708 <col:9> 'int' lvalue Var 0x1f020764be8 'ret' 'int'
|   |         |   `-IntegerLiteral 0x1f020769728 <col:15> 'int' 5
|   |         `-IfStmt 0x1f02076af38 <line:92:12, line:111:17> has_else
|   |           |-BinaryOperator 0x1f0207698d8 <line:92:16, col:31> 'int' '=='
|   |           | |-ParenExpr 0x1f020769890 <col:16, col:26> 'int'
|   |           | | `-BinaryOperator 0x1f020769870 <col:17, col:22> 'int' '&'
|   |           | |   |-ImplicitCastExpr 0x1f020769858 <col:17, col:18> 'int' <IntegralCast>
|   |           | |   | `-ImplicitCastExpr 0x1f020769840 <col:17, col:18> 'unsigned char' <LValueToRValue>
|   |           | |   |   `-UnaryOperator 0x1f020769800 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |   |     `-ImplicitCastExpr 0x1f0207697e8 <col:18> 'const unsigned char *' <LValueToRValue>
|   |           | |   |       `-DeclRefExpr 0x1f0207697c8 <col:18> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |           | |   `-IntegerLiteral 0x1f020769818 <col:22> 'int' 254
|   |           | `-IntegerLiteral 0x1f0207698b0 <col:31> 'int' 252
|   |           |-CompoundStmt 0x1f02076ae88 <col:37, line:110:5>
|   |           | |-IfStmt 0x1f0207699c8 <line:93:9, line:94:21>
|   |           | | |-BinaryOperator 0x1f020769958 <line:93:13, col:19> 'int' '<'
|   |           | | | |-ImplicitCastExpr 0x1f020769940 <col:13> 'int' <LValueToRValue>
|   |           | | | | `-DeclRefExpr 0x1f0207698f8 <col:13> 'int' lvalue ParmVar 0x1f0207647f0 'len' 'int'
|   |           | | | `-IntegerLiteral 0x1f020769918 <col:19> 'int' 6
|   |           | | `-ReturnStmt 0x1f0207699b8 <line:94:13, col:21>
|   |           | |   `-UnaryOperator 0x1f0207699a0 <col:20, col:21> 'int' prefix '-'
|   |           | |     `-IntegerLiteral 0x1f020769978 <col:21> 'int' 1
|   |           | |-IfStmt 0x1f02076a250 <line:95:9, line:100:21>
|   |           | | |-BinaryOperator 0x1f02076a1e0 <line:95:13, line:99:38> 'int' '||'
|   |           | | | |-BinaryOperator 0x1f02076a020 <line:95:13, line:98:38> 'int' '||'
|   |           | | | | |-BinaryOperator 0x1f020769e80 <line:95:13, line:97:38> 'int' '||'
|   |           | | | | | |-BinaryOperator 0x1f020769ce0 <line:95:13, line:96:38> 'int' '||'
|   |           | | | | | | |-ParenExpr 0x1f020769b40 <line:95:13, col:35> 'int'
|   |           | | | | | | | `-BinaryOperator 0x1f020769b20 <col:14, col:31> 'int' '!='
|   |           | | | | | | |   |-ParenExpr 0x1f020769ad8 <col:14, col:26> 'int'
|   |           | | | | | | |   | `-BinaryOperator 0x1f020769ab8 <col:15, col:22> 'int' '&'
|   |           | | | | | | |   |   |-ImplicitCastExpr 0x1f020769aa0 <col:15, col:18> 'int' <IntegralCast>
|   |           | | | | | | |   |   | `-ImplicitCastExpr 0x1f020769a88 <col:15, col:18> 'unsigned char' <LValueToRValue>
|   |           | | | | | | |   |   |   `-ArraySubscriptExpr 0x1f020769a40 <col:15, col:18> 'const unsigned char' lvalue
|   |           | | | | | | |   |   |     |-ImplicitCastExpr 0x1f020769a28 <col:15> 'const unsigned char *' <LValueToRValue>
|   |           | | | | | | |   |   |     | `-DeclRefExpr 0x1f0207699e0 <col:15> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |           | | | | | | |   |   |     `-IntegerLiteral 0x1f020769a00 <col:17> 'int' 1
|   |           | | | | | | |   |   `-IntegerLiteral 0x1f020769a60 <col:22> 'int' 192
|   |           | | | | | | |   `-IntegerLiteral 0x1f020769af8 <col:31> 'int' 128
|   |           | | | | | | `-ParenExpr 0x1f020769cc0 <line:96:16, col:38> 'int'
|   |           | | | | | |   `-BinaryOperator 0x1f020769ca0 <col:17, col:34> 'int' '!='
|   |           | | | | | |     |-ParenExpr 0x1f020769c58 <col:17, col:29> 'int'
|   |           | | | | | |     | `-BinaryOperator 0x1f020769c38 <col:18, col:25> 'int' '&'
|   |           | | | | | |     |   |-ImplicitCastExpr 0x1f020769c20 <col:18, col:21> 'int' <IntegralCast>
|   |           | | | | | |     |   | `-ImplicitCastExpr 0x1f020769c08 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |           | | | | | |     |   |   `-ArraySubscriptExpr 0x1f020769bc0 <col:18, col:21> 'const unsigned char' lvalue
|   |           | | | | | |     |   |     |-ImplicitCastExpr 0x1f020769ba8 <col:18> 'const unsigned char *' <LValueToRValue>
|   |           | | | | | |     |   |     | `-DeclRefExpr 0x1f020769b60 <col:18> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |           | | | | | |     |   |     `-IntegerLiteral 0x1f020769b80 <col:20> 'int' 2
|   |           | | | | | |     |   `-IntegerLiteral 0x1f020769be0 <col:25> 'int' 192
|   |           | | | | | |     `-IntegerLiteral 0x1f020769c78 <col:34> 'int' 128
|   |           | | | | | `-ParenExpr 0x1f020769e60 <line:97:16, col:38> 'int'
|   |           | | | | |   `-BinaryOperator 0x1f020769e40 <col:17, col:34> 'int' '!='
|   |           | | | | |     |-ParenExpr 0x1f020769df8 <col:17, col:29> 'int'
|   |           | | | | |     | `-BinaryOperator 0x1f020769dd8 <col:18, col:25> 'int' '&'
|   |           | | | | |     |   |-ImplicitCastExpr 0x1f020769dc0 <col:18, col:21> 'int' <IntegralCast>
|   |           | | | | |     |   | `-ImplicitCastExpr 0x1f020769da8 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |           | | | | |     |   |   `-ArraySubscriptExpr 0x1f020769d60 <col:18, col:21> 'const unsigned char' lvalue
|   |           | | | | |     |   |     |-ImplicitCastExpr 0x1f020769d48 <col:18> 'const unsigned char *' <LValueToRValue>
|   |           | | | | |     |   |     | `-DeclRefExpr 0x1f020769d00 <col:18> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |           | | | | |     |   |     `-IntegerLiteral 0x1f020769d20 <col:20> 'int' 3
|   |           | | | | |     |   `-IntegerLiteral 0x1f020769d80 <col:25> 'int' 192
|   |           | | | | |     `-IntegerLiteral 0x1f020769e18 <col:34> 'int' 128
|   |           | | | | `-ParenExpr 0x1f02076a000 <line:98:16, col:38> 'int'
|   |           | | | |   `-BinaryOperator 0x1f020769fe0 <col:17, col:34> 'int' '!='
|   |           | | | |     |-ParenExpr 0x1f020769f98 <col:17, col:29> 'int'
|   |           | | | |     | `-BinaryOperator 0x1f020769f78 <col:18, col:25> 'int' '&'
|   |           | | | |     |   |-ImplicitCastExpr 0x1f020769f60 <col:18, col:21> 'int' <IntegralCast>
|   |           | | | |     |   | `-ImplicitCastExpr 0x1f020769f48 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |           | | | |     |   |   `-ArraySubscriptExpr 0x1f020769f00 <col:18, col:21> 'const unsigned char' lvalue
|   |           | | | |     |   |     |-ImplicitCastExpr 0x1f020769ee8 <col:18> 'const unsigned char *' <LValueToRValue>
|   |           | | | |     |   |     | `-DeclRefExpr 0x1f020769ea0 <col:18> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |           | | | |     |   |     `-IntegerLiteral 0x1f020769ec0 <col:20> 'int' 4
|   |           | | | |     |   `-IntegerLiteral 0x1f020769f20 <col:25> 'int' 192
|   |           | | | |     `-IntegerLiteral 0x1f020769fb8 <col:34> 'int' 128
|   |           | | | `-ParenExpr 0x1f02076a1c0 <line:99:16, col:38> 'int'
|   |           | | |   `-BinaryOperator 0x1f02076a1a0 <col:17, col:34> 'int' '!='
|   |           | | |     |-ParenExpr 0x1f02076a158 <col:17, col:29> 'int'
|   |           | | |     | `-BinaryOperator 0x1f02076a138 <col:18, col:25> 'int' '&'
|   |           | | |     |   |-ImplicitCastExpr 0x1f02076a120 <col:18, col:21> 'int' <IntegralCast>
|   |           | | |     |   | `-ImplicitCastExpr 0x1f02076a0e8 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |           | | |     |   |   `-ArraySubscriptExpr 0x1f02076a0a0 <col:18, col:21> 'const unsigned char' lvalue
|   |           | | |     |   |     |-ImplicitCastExpr 0x1f02076a088 <col:18> 'const unsigned char *' <LValueToRValue>
|   |           | | |     |   |     | `-DeclRefExpr 0x1f02076a040 <col:18> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |           | | |     |   |     `-IntegerLiteral 0x1f02076a060 <col:20> 'int' 5
|   |           | | |     |   `-IntegerLiteral 0x1f02076a0c0 <col:25> 'int' 192
|   |           | | |     `-IntegerLiteral 0x1f02076a178 <col:34> 'int' 128
|   |           | | `-ReturnStmt 0x1f02076a240 <line:100:13, col:21>
|   |           | |   `-UnaryOperator 0x1f02076a228 <col:20, col:21> 'int' prefix '-'
|   |           | |     `-IntegerLiteral 0x1f02076a200 <col:21> 'int' 3
|   |           | |-BinaryOperator 0x1f02076a438 <line:101:9, col:50> 'unsigned long' '='
|   |           | | |-DeclRefExpr 0x1f02076a268 <col:9> 'unsigned long' lvalue Var 0x1f020764b50 'value' 'unsigned long'
|   |           | | `-BinaryOperator 0x1f02076a418 <col:17, col:50> 'unsigned long' '<<'
|   |           | |   |-ParenExpr 0x1f02076a3d0 <col:17, col:45> 'unsigned long'
|   |           | |   | `-CStyleCastExpr 0x1f02076a3a8 <col:18, col:44> 'unsigned long' <IntegralCast>
|   |           | |   |   `-ParenExpr 0x1f02076a388 <col:33, col:44> 'int'
|   |           | |   |     `-BinaryOperator 0x1f02076a330 <col:34, col:41> 'int' '&'
|   |           | |   |       |-ImplicitCastExpr 0x1f02076a318 <col:34, col:36> 'int' <IntegralCast>
|   |           | |   |       | `-ImplicitCastExpr 0x1f02076a300 <col:34, col:36> 'unsigned char' <LValueToRValue>
|   |           | |   |       |   `-UnaryOperator 0x1f02076a2c0 <col:34, col:36> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |   |       |     `-UnaryOperator 0x1f02076a2a8 <col:35, col:36> 'const unsigned char *' postfix '++'
|   |           | |   |       |       `-DeclRefExpr 0x1f02076a288 <col:35> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |           | |   |       `-IntegerLiteral 0x1f02076a2d8 <col:41> 'int' 1
|   |           | |   `-IntegerLiteral 0x1f02076a3f0 <col:50> 'int' 30
|   |           | |-CompoundAssignOperator 0x1f02076a628 <line:102:9, col:52> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |           | | |-DeclRefExpr 0x1f02076a458 <col:9> 'unsigned long' lvalue Var 0x1f020764b50 'value' 'unsigned long'
|   |           | | `-BinaryOperator 0x1f02076a608 <col:18, col:52> 'unsigned long' '<<'
|   |           | |   |-ParenExpr 0x1f02076a5c0 <col:18, col:47> 'unsigned long'
|   |           | |   | `-CStyleCastExpr 0x1f02076a598 <col:19, col:46> 'unsigned long' <IntegralCast>
|   |           | |   |   `-ParenExpr 0x1f02076a578 <col:34, col:46> 'int'
|   |           | |   |     `-BinaryOperator 0x1f02076a520 <col:35, col:42> 'int' '&'
|   |           | |   |       |-ImplicitCastExpr 0x1f02076a508 <col:35, col:37> 'int' <IntegralCast>
|   |           | |   |       | `-ImplicitCastExpr 0x1f02076a4f0 <col:35, col:37> 'unsigned char' <LValueToRValue>
|   |           | |   |       |   `-UnaryOperator 0x1f02076a4b0 <col:35, col:37> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |   |       |     `-UnaryOperator 0x1f02076a498 <col:36, col:37> 'const unsigned char *' postfix '++'
|   |           | |   |       |       `-DeclRefExpr 0x1f02076a478 <col:36> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |           | |   |       `-IntegerLiteral 0x1f02076a4c8 <col:42> 'int' 63
|   |           | |   `-IntegerLiteral 0x1f02076a5e0 <col:52> 'int' 24
|   |           | |-CompoundAssignOperator 0x1f02076a828 <line:103:9, col:52> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |           | | |-DeclRefExpr 0x1f02076a658 <col:9> 'unsigned long' lvalue Var 0x1f020764b50 'value' 'unsigned long'
|   |           | | `-BinaryOperator 0x1f02076a808 <col:18, col:52> 'unsigned long' '<<'
|   |           | |   |-ParenExpr 0x1f02076a7c0 <col:18, col:47> 'unsigned long'
|   |           | |   | `-CStyleCastExpr 0x1f02076a798 <col:19, col:46> 'unsigned long' <IntegralCast>
|   |           | |   |   `-ParenExpr 0x1f02076a778 <col:34, col:46> 'int'
|   |           | |   |     `-BinaryOperator 0x1f02076a720 <col:35, col:42> 'int' '&'
|   |           | |   |       |-ImplicitCastExpr 0x1f02076a708 <col:35, col:37> 'int' <IntegralCast>
|   |           | |   |       | `-ImplicitCastExpr 0x1f02076a6f0 <col:35, col:37> 'unsigned char' <LValueToRValue>
|   |           | |   |       |   `-UnaryOperator 0x1f02076a6b0 <col:35, col:37> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |   |       |     `-UnaryOperator 0x1f02076a698 <col:36, col:37> 'const unsigned char *' postfix '++'
|   |           | |   |       |       `-DeclRefExpr 0x1f02076a678 <col:36> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |           | |   |       `-IntegerLiteral 0x1f02076a6c8 <col:42> 'int' 63
|   |           | |   `-IntegerLiteral 0x1f02076a7e0 <col:52> 'int' 18
|   |           | |-CompoundAssignOperator 0x1f02076aa28 <line:104:9, col:52> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |           | | |-DeclRefExpr 0x1f02076a858 <col:9> 'unsigned long' lvalue Var 0x1f020764b50 'value' 'unsigned long'
|   |           | | `-BinaryOperator 0x1f02076aa08 <col:18, col:52> 'unsigned long' '<<'
|   |           | |   |-ParenExpr 0x1f02076a9c0 <col:18, col:47> 'unsigned long'
|   |           | |   | `-CStyleCastExpr 0x1f02076a998 <col:19, col:46> 'unsigned long' <IntegralCast>
|   |           | |   |   `-ParenExpr 0x1f02076a978 <col:34, col:46> 'int'
|   |           | |   |     `-BinaryOperator 0x1f02076a920 <col:35, col:42> 'int' '&'
|   |           | |   |       |-ImplicitCastExpr 0x1f02076a908 <col:35, col:37> 'int' <IntegralCast>
|   |           | |   |       | `-ImplicitCastExpr 0x1f02076a8f0 <col:35, col:37> 'unsigned char' <LValueToRValue>
|   |           | |   |       |   `-UnaryOperator 0x1f02076a8b0 <col:35, col:37> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |   |       |     `-UnaryOperator 0x1f02076a898 <col:36, col:37> 'const unsigned char *' postfix '++'
|   |           | |   |       |       `-DeclRefExpr 0x1f02076a878 <col:36> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |           | |   |       `-IntegerLiteral 0x1f02076a8c8 <col:42> 'int' 63
|   |           | |   `-IntegerLiteral 0x1f02076a9e0 <col:52> 'int' 12
|   |           | |-CompoundAssignOperator 0x1f02076abc0 <line:105:9, col:35> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |           | | |-DeclRefExpr 0x1f02076aa58 <col:9> 'unsigned long' lvalue Var 0x1f020764b50 'value' 'unsigned long'
|   |           | | `-ImplicitCastExpr 0x1f02076aba8 <col:18, col:35> 'unsigned long' <IntegralCast>
|   |           | |   `-BinaryOperator 0x1f02076ab88 <col:18, col:35> 'int' '<<'
|   |           | |     |-ParenExpr 0x1f02076ab40 <col:18, col:30> 'int'
|   |           | |     | `-BinaryOperator 0x1f02076ab20 <col:19, col:26> 'int' '&'
|   |           | |     |   |-ImplicitCastExpr 0x1f02076ab08 <col:19, col:21> 'int' <IntegralCast>
|   |           | |     |   | `-ImplicitCastExpr 0x1f02076aaf0 <col:19, col:21> 'unsigned char' <LValueToRValue>
|   |           | |     |   |   `-UnaryOperator 0x1f02076aab0 <col:19, col:21> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |     |   |     `-UnaryOperator 0x1f02076aa98 <col:20, col:21> 'const unsigned char *' postfix '++'
|   |           | |     |   |       `-DeclRefExpr 0x1f02076aa78 <col:20> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |           | |     |   `-IntegerLiteral 0x1f02076aac8 <col:26> 'int' 63
|   |           | |     `-IntegerLiteral 0x1f02076ab60 <col:35> 'int' 6
|   |           | |-CompoundAssignOperator 0x1f02076acf0 <line:106:9, col:25> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |           | | |-DeclRefExpr 0x1f02076abf0 <col:9> 'unsigned long' lvalue Var 0x1f020764b50 'value' 'unsigned long'
|   |           | | `-ImplicitCastExpr 0x1f02076acd8 <col:18, col:25> 'unsigned long' <IntegralCast>
|   |           | |   `-BinaryOperator 0x1f02076acb8 <col:18, col:25> 'int' '&'
|   |           | |     |-ImplicitCastExpr 0x1f02076aca0 <col:18, col:20> 'int' <IntegralCast>
|   |           | |     | `-ImplicitCastExpr 0x1f02076ac88 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |           | |     |   `-UnaryOperator 0x1f02076ac48 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |     |     `-UnaryOperator 0x1f02076ac30 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |           | |     |       `-DeclRefExpr 0x1f02076ac10 <col:19> 'const unsigned char *' lvalue Var 0x1f020764ab8 'p' 'const unsigned char *'
|   |           | |     `-IntegerLiteral 0x1f02076ac60 <col:25> 'int' 63
|   |           | |-IfStmt 0x1f02076ae08 <line:107:9, line:108:21>
|   |           | | |-BinaryOperator 0x1f02076ad98 <line:107:13, col:21> 'int' '<'
|   |           | | | |-ImplicitCastExpr 0x1f02076ad68 <col:13> 'unsigned long' <LValueToRValue>
|   |           | | | | `-DeclRefExpr 0x1f02076ad20 <col:13> 'unsigned long' lvalue Var 0x1f020764b50 'value' 'unsigned long'
|   |           | | | `-ImplicitCastExpr 0x1f02076ad80 <col:21> 'unsigned long' <IntegralCast>
|   |           | | |   `-IntegerLiteral 0x1f02076ad40 <col:21> 'int' 67108864
|   |           | | `-ReturnStmt 0x1f02076adf8 <line:108:13, col:21>
|   |           | |   `-UnaryOperator 0x1f02076ade0 <col:20, col:21> 'int' prefix '-'
|   |           | |     `-IntegerLiteral 0x1f02076adb8 <col:21> 'int' 4
|   |           | `-BinaryOperator 0x1f02076ae68 <line:109:9, col:15> 'int' '='
|   |           |   |-DeclRefExpr 0x1f02076ae20 <col:9> 'int' lvalue Var 0x1f020764be8 'ret' 'int'
|   |           |   `-IntegerLiteral 0x1f02076ae40 <col:15> 'int' 6
|   |           `-ReturnStmt 0x1f02076af28 <line:111:9, col:17>
|   |             `-UnaryOperator 0x1f02076af10 <col:16, col:17> 'int' prefix '-'
|   |               `-IntegerLiteral 0x1f02076aee8 <col:17> 'int' 2
|   |-BinaryOperator 0x1f02076b0b0 <line:112:5, col:12> 'unsigned long' '='
|   | |-UnaryOperator 0x1f02076b060 <col:5, col:6> 'unsigned long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1f02076b048 <col:6> 'unsigned long *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f02076b028 <col:6> 'unsigned long *' lvalue ParmVar 0x1f0207648a0 'val' 'unsigned long *'
|   | `-ImplicitCastExpr 0x1f02076b098 <col:12> 'unsigned long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1f02076b078 <col:12> 'unsigned long' lvalue Var 0x1f020764b50 'value' 'unsigned long'
|   `-ReturnStmt 0x1f02076b108 <line:113:5, col:12>
|     `-ImplicitCastExpr 0x1f02076b0f0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1f02076b0d0 <col:12> 'int' lvalue Var 0x1f020764be8 'ret' 'int'
`-FunctionDecl 0x1f020776300 <line:124:1, line:188:1> line:124:5 UTF8_putc 'int (unsigned char *, int, unsigned long)'
  |-ParmVarDecl 0x1f0207760d0 <col:15, col:30> col:30 used str 'unsigned char *'
  |-ParmVarDecl 0x1f020776150 <col:35, col:39> col:39 used len 'int'
  |-ParmVarDecl 0x1f0207761d0 <col:44, col:58> col:58 used value 'unsigned long'
  `-CompoundStmt 0x1f02077b2b8 <line:125:1, line:188:1>
    |-IfStmt 0x1f020776570 <line:126:5, line:129:17> has_else
    | |-UnaryOperator 0x1f020776408 <line:126:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1f0207763f0 <col:10> 'unsigned char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1f0207763d0 <col:10> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    | |-BinaryOperator 0x1f020776468 <line:127:9, col:15> 'int' '='
    | | |-DeclRefExpr 0x1f020776420 <col:9> 'int' lvalue ParmVar 0x1f020776150 'len' 'int'
    | | `-IntegerLiteral 0x1f020776440 <col:15> 'int' 6
    | `-IfStmt 0x1f020776558 <line:128:10, line:129:17>
    |   |-BinaryOperator 0x1f0207764e8 <line:128:14, col:21> 'int' '<='
    |   | |-ImplicitCastExpr 0x1f0207764d0 <col:14> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1f020776488 <col:14> 'int' lvalue ParmVar 0x1f020776150 'len' 'int'
    |   | `-IntegerLiteral 0x1f0207764a8 <col:21> 'int' 0
    |   `-ReturnStmt 0x1f020776548 <line:129:9, col:17>
    |     `-UnaryOperator 0x1f020776530 <col:16, col:17> 'int' prefix '-'
    |       `-IntegerLiteral 0x1f020776508 <col:17> 'int' 1
    |-IfStmt 0x1f0207767c0 <line:130:5, line:134:5>
    | |-BinaryOperator 0x1f020776610 <line:130:9, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x1f0207765e0 <col:9> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1f020776598 <col:9> 'unsigned long' lvalue ParmVar 0x1f0207761d0 'value' 'unsigned long'
    | | `-ImplicitCastExpr 0x1f0207765f8 <col:17> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x1f0207765b8 <col:17> 'int' 128
    | `-CompoundStmt 0x1f0207767a0 <col:23, line:134:5>
    |   |-IfStmt 0x1f020776750 <line:131:9, line:132:35>
    |   | |-ImplicitCastExpr 0x1f020776650 <line:131:13> 'unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1f020776630 <col:13> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    |   | `-BinaryOperator 0x1f020776730 <line:132:13, col:35> 'unsigned char' '='
    |   |   |-UnaryOperator 0x1f0207766a0 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | `-ImplicitCastExpr 0x1f020776688 <col:14> 'unsigned char *' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x1f020776668 <col:14> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    |   |   `-CStyleCastExpr 0x1f020776708 <col:20, col:35> 'unsigned char' <IntegralCast>
    |   |     `-ImplicitCastExpr 0x1f0207766f0 <col:35> 'unsigned long' <LValueToRValue> part_of_explicit_cast
    |   |       `-DeclRefExpr 0x1f0207766b8 <col:35> 'unsigned long' lvalue ParmVar 0x1f0207761d0 'value' 'unsigned long'
    |   `-ReturnStmt 0x1f020776790 <line:133:9, col:16>
    |     `-IntegerLiteral 0x1f020776768 <col:16> 'int' 1
    |-IfStmt 0x1f020776ea0 <line:135:5, line:143:5>
    | |-BinaryOperator 0x1f020776850 <line:135:9, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x1f020776820 <col:9> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1f0207767d8 <col:9> 'unsigned long' lvalue ParmVar 0x1f0207761d0 'value' 'unsigned long'
    | | `-ImplicitCastExpr 0x1f020776838 <col:17> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x1f0207767f8 <col:17> 'int' 2048
    | `-CompoundStmt 0x1f020776e78 <col:24, line:143:5>
    |   |-IfStmt 0x1f020776940 <line:136:9, line:137:21>
    |   | |-BinaryOperator 0x1f0207768d0 <line:136:13, col:19> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1f0207768b8 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1f020776870 <col:13> 'int' lvalue ParmVar 0x1f020776150 'len' 'int'
    |   | | `-IntegerLiteral 0x1f020776890 <col:19> 'int' 2
    |   | `-ReturnStmt 0x1f020776930 <line:137:13, col:21>
    |   |   `-UnaryOperator 0x1f020776918 <col:20, col:21> 'int' prefix '-'
    |   |     `-IntegerLiteral 0x1f0207768f0 <col:21> 'int' 1
    |   |-IfStmt 0x1f020776e28 <line:138:9, line:141:9>
    |   | |-ImplicitCastExpr 0x1f020776978 <line:138:13> 'unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1f020776958 <col:13> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    |   | `-CompoundStmt 0x1f020776e08 <col:18, line:141:9>
    |   |   |-BinaryOperator 0x1f020776be0 <line:139:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1f0207769c8 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1f0207769b0 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1f020776990 <col:14> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1f020776bb8 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1f020776b98 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1f020776b40 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1f020776ae0 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1f020776ac0 <col:39, col:54> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1f020776a60 <col:39, col:50> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1f020776a40 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1f020776a28 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1f0207769e0 <col:40> 'unsigned long' lvalue ParmVar 0x1f0207761d0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1f020776a00 <col:49> 'int' 6
    |   |   |       |   `-ImplicitCastExpr 0x1f020776aa8 <col:54> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1f020776a80 <col:54> 'int' 31
    |   |   |       `-ImplicitCastExpr 0x1f020776b28 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1f020776b00 <col:62> 'int' 192
    |   |   `-BinaryOperator 0x1f020776de8 <line:140:13, col:57> 'unsigned char' '='
    |   |     |-UnaryOperator 0x1f020776c38 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |     | `-ImplicitCastExpr 0x1f020776c20 <col:14> 'unsigned char *' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x1f020776c00 <col:14> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    |   |     `-CStyleCastExpr 0x1f020776dc0 <col:20, col:57> 'unsigned char' <IntegralCast>
    |   |       `-ParenExpr 0x1f020776da0 <col:35, col:57> 'unsigned long'
    |   |         `-BinaryOperator 0x1f020776d48 <col:36, col:53> 'unsigned long' '|'
    |   |           |-ParenExpr 0x1f020776ce8 <col:36, col:49> 'unsigned long'
    |   |           | `-BinaryOperator 0x1f020776cc8 <col:37, col:45> 'unsigned long' '&'
    |   |           |   |-ImplicitCastExpr 0x1f020776c98 <col:37> 'unsigned long' <LValueToRValue>
    |   |           |   | `-DeclRefExpr 0x1f020776c50 <col:37> 'unsigned long' lvalue ParmVar 0x1f0207761d0 'value' 'unsigned long'
    |   |           |   `-ImplicitCastExpr 0x1f020776cb0 <col:45> 'unsigned long' <IntegralCast>
    |   |           |     `-IntegerLiteral 0x1f020776c70 <col:45> 'int' 63
    |   |           `-ImplicitCastExpr 0x1f020776d30 <col:53> 'unsigned long' <IntegralCast>
    |   |             `-IntegerLiteral 0x1f020776d08 <col:53> 'int' 128
    |   `-ReturnStmt 0x1f020776e68 <line:142:9, col:16>
    |     `-IntegerLiteral 0x1f020776e40 <col:16> 'int' 2
    |-IfStmt 0x1f020777810 <line:144:5, line:153:5>
    | |-BinaryOperator 0x1f020776f30 <line:144:9, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x1f020776f00 <col:9> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1f020776eb8 <col:9> 'unsigned long' lvalue ParmVar 0x1f0207761d0 'value' 'unsigned long'
    | | `-ImplicitCastExpr 0x1f020776f18 <col:17> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x1f020776ed8 <col:17> 'int' 65536
    | `-CompoundStmt 0x1f0207777e8 <col:26, line:153:5>
    |   |-IfStmt 0x1f020777020 <line:145:9, line:146:21>
    |   | |-BinaryOperator 0x1f020776fb0 <line:145:13, col:19> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1f020776f98 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1f020776f50 <col:13> 'int' lvalue ParmVar 0x1f020776150 'len' 'int'
    |   | | `-IntegerLiteral 0x1f020776f70 <col:19> 'int' 3
    |   | `-ReturnStmt 0x1f020777010 <line:146:13, col:21>
    |   |   `-UnaryOperator 0x1f020776ff8 <col:20, col:21> 'int' prefix '-'
    |   |     `-IntegerLiteral 0x1f020776fd0 <col:21> 'int' 1
    |   |-IfStmt 0x1f020777798 <line:147:9, line:151:9>
    |   | |-ImplicitCastExpr 0x1f020777070 <line:147:13> 'unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1f020777050 <col:13> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    |   | `-CompoundStmt 0x1f020777770 <col:18, line:151:9>
    |   |   |-BinaryOperator 0x1f0207772d8 <line:148:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1f0207770c0 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1f0207770a8 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1f020777088 <col:14> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1f0207772b0 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1f020777290 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1f020777238 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1f0207771d8 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1f0207771b8 <col:39, col:55> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1f020777158 <col:39, col:51> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1f020777138 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1f020777120 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1f0207770d8 <col:40> 'unsigned long' lvalue ParmVar 0x1f0207761d0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1f0207770f8 <col:49> 'int' 12
    |   |   |       |   `-ImplicitCastExpr 0x1f0207771a0 <col:55> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1f020777178 <col:55> 'int' 15
    |   |   |       `-ImplicitCastExpr 0x1f020777220 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1f0207771f8 <col:62> 'int' 224
    |   |   |-BinaryOperator 0x1f020777548 <line:149:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1f020777330 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1f020777318 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1f0207772f8 <col:14> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1f020777520 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1f020777500 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1f0207774a8 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1f020777448 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1f020777428 <col:39, col:54> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1f0207773c8 <col:39, col:50> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1f0207773a8 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1f020777390 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1f020777348 <col:40> 'unsigned long' lvalue ParmVar 0x1f0207761d0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1f020777368 <col:49> 'int' 6
    |   |   |       |   `-ImplicitCastExpr 0x1f020777410 <col:54> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1f0207773e8 <col:54> 'int' 63
    |   |   |       `-ImplicitCastExpr 0x1f020777490 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1f020777468 <col:62> 'int' 128
    |   |   `-BinaryOperator 0x1f020777750 <line:150:13, col:57> 'unsigned char' '='
    |   |     |-UnaryOperator 0x1f0207775a0 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |     | `-ImplicitCastExpr 0x1f020777588 <col:14> 'unsigned char *' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x1f020777568 <col:14> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    |   |     `-CStyleCastExpr 0x1f020777728 <col:20, col:57> 'unsigned char' <IntegralCast>
    |   |       `-ParenExpr 0x1f020777708 <col:35, col:57> 'unsigned long'
    |   |         `-BinaryOperator 0x1f0207776b0 <col:36, col:53> 'unsigned long' '|'
    |   |           |-ParenExpr 0x1f020777650 <col:36, col:49> 'unsigned long'
    |   |           | `-BinaryOperator 0x1f020777630 <col:37, col:45> 'unsigned long' '&'
    |   |           |   |-ImplicitCastExpr 0x1f020777600 <col:37> 'unsigned long' <LValueToRValue>
    |   |           |   | `-DeclRefExpr 0x1f0207775b8 <col:37> 'unsigned long' lvalue ParmVar 0x1f0207761d0 'value' 'unsigned long'
    |   |           |   `-ImplicitCastExpr 0x1f020777618 <col:45> 'unsigned long' <IntegralCast>
    |   |           |     `-IntegerLiteral 0x1f0207775d8 <col:45> 'int' 63
    |   |           `-ImplicitCastExpr 0x1f020777698 <col:53> 'unsigned long' <IntegralCast>
    |   |             `-IntegerLiteral 0x1f020777670 <col:53> 'int' 128
    |   `-ReturnStmt 0x1f0207777d8 <line:152:9, col:16>
    |     `-IntegerLiteral 0x1f0207777b0 <col:16> 'int' 3
    |-IfStmt 0x1f02077a430 <line:154:5, line:164:5>
    | |-BinaryOperator 0x1f0207778a0 <line:154:9, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x1f020777870 <col:9> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1f020777828 <col:9> 'unsigned long' lvalue ParmVar 0x1f0207761d0 'value' 'unsigned long'
    | | `-ImplicitCastExpr 0x1f020777888 <col:17> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x1f020777848 <col:17> 'int' 2097152
    | `-CompoundStmt 0x1f02077a408 <col:27, line:164:5>
    |   |-IfStmt 0x1f020777990 <line:155:9, line:156:21>
    |   | |-BinaryOperator 0x1f020777920 <line:155:13, col:19> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1f020777908 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1f0207778c0 <col:13> 'int' lvalue ParmVar 0x1f020776150 'len' 'int'
    |   | | `-IntegerLiteral 0x1f0207778e0 <col:19> 'int' 4
    |   | `-ReturnStmt 0x1f020777980 <line:156:13, col:21>
    |   |   `-UnaryOperator 0x1f020777968 <col:20, col:21> 'int' prefix '-'
    |   |     `-IntegerLiteral 0x1f020777940 <col:21> 'int' 1
    |   |-IfStmt 0x1f02077a3b8 <line:157:9, line:162:9>
    |   | |-ImplicitCastExpr 0x1f0207779c8 <line:157:13> 'unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1f0207779a8 <col:13> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    |   | `-CompoundStmt 0x1f02077a388 <col:18, line:162:9>
    |   |   |-BinaryOperator 0x1f020777c30 <line:158:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1f020777a18 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1f020777a00 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1f0207779e0 <col:14> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1f020777c08 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1f020777be8 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1f020777b90 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1f020777b30 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1f020777b10 <col:39, col:55> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1f020777ab0 <col:39, col:51> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1f020777a90 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1f020777a78 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1f020777a30 <col:40> 'unsigned long' lvalue ParmVar 0x1f0207761d0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1f020777a50 <col:49> 'int' 18
    |   |   |       |   `-ImplicitCastExpr 0x1f020777af8 <col:55> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1f020777ad0 <col:55> 'int' 7
    |   |   |       `-ImplicitCastExpr 0x1f020777b78 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1f020777b50 <col:62> 'int' 240
    |   |   |-BinaryOperator 0x1f020777ea0 <line:159:13, col:67> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1f020777c88 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1f020777c70 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1f020777c50 <col:14> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1f020777e78 <col:22, col:67> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1f020777e58 <col:37, col:67> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1f020777e00 <col:38, col:63> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1f020777da0 <col:38, col:59> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1f020777d80 <col:39, col:55> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1f020777d20 <col:39, col:51> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1f020777d00 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1f020777ce8 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1f020777ca0 <col:40> 'unsigned long' lvalue ParmVar 0x1f0207761d0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1f020777cc0 <col:49> 'int' 12
    |   |   |       |   `-ImplicitCastExpr 0x1f020777d68 <col:55> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1f020777d40 <col:55> 'int' 63
    |   |   |       `-ImplicitCastExpr 0x1f020777de8 <col:63> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1f020777dc0 <col:63> 'int' 128
    |   |   |-BinaryOperator 0x1f02077a160 <line:160:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1f020777ef8 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1f020777ee0 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1f020777ec0 <col:14> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1f02077a138 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1f02077a118 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1f02077a0c0 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1f020778010 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1f020777ff0 <col:39, col:54> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1f020777f90 <col:39, col:50> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1f020777f70 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1f020777f58 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1f020777f10 <col:40> 'unsigned long' lvalue ParmVar 0x1f0207761d0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1f020777f30 <col:49> 'int' 6
    |   |   |       |   `-ImplicitCastExpr 0x1f020777fd8 <col:54> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1f020777fb0 <col:54> 'int' 63
    |   |   |       `-ImplicitCastExpr 0x1f02077a0a8 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1f02077a080 <col:62> 'int' 128
    |   |   `-BinaryOperator 0x1f02077a368 <line:161:13, col:57> 'unsigned char' '='
    |   |     |-UnaryOperator 0x1f02077a1b8 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |     | `-ImplicitCastExpr 0x1f02077a1a0 <col:14> 'unsigned char *' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x1f02077a180 <col:14> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    |   |     `-CStyleCastExpr 0x1f02077a340 <col:20, col:57> 'unsigned char' <IntegralCast>
    |   |       `-ParenExpr 0x1f02077a320 <col:35, col:57> 'unsigned long'
    |   |         `-BinaryOperator 0x1f02077a2c8 <col:36, col:53> 'unsigned long' '|'
    |   |           |-ParenExpr 0x1f02077a268 <col:36, col:49> 'unsigned long'
    |   |           | `-BinaryOperator 0x1f02077a248 <col:37, col:45> 'unsigned long' '&'
    |   |           |   |-ImplicitCastExpr 0x1f02077a218 <col:37> 'unsigned long' <LValueToRValue>
    |   |           |   | `-DeclRefExpr 0x1f02077a1d0 <col:37> 'unsigned long' lvalue ParmVar 0x1f0207761d0 'value' 'unsigned long'
    |   |           |   `-ImplicitCastExpr 0x1f02077a230 <col:45> 'unsigned long' <IntegralCast>
    |   |           |     `-IntegerLiteral 0x1f02077a1f0 <col:45> 'int' 63
    |   |           `-ImplicitCastExpr 0x1f02077a2b0 <col:53> 'unsigned long' <IntegralCast>
    |   |             `-IntegerLiteral 0x1f02077a288 <col:53> 'int' 128
    |   `-ReturnStmt 0x1f02077a3f8 <line:163:9, col:16>
    |     `-IntegerLiteral 0x1f02077a3d0 <col:16> 'int' 4
    |-IfStmt 0x1f020779278 <line:165:5, line:176:5>
    | |-BinaryOperator 0x1f02077a4c0 <line:165:9, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x1f02077a490 <col:9> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1f02077a448 <col:9> 'unsigned long' lvalue ParmVar 0x1f0207761d0 'value' 'unsigned long'
    | | `-ImplicitCastExpr 0x1f02077a4a8 <col:17> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x1f02077a468 <col:17> 'int' 67108864
    | `-CompoundStmt 0x1f020779250 <col:28, line:176:5>
    |   |-IfStmt 0x1f02077a5b0 <line:166:9, line:167:21>
    |   | |-BinaryOperator 0x1f02077a540 <line:166:13, col:19> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1f02077a528 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1f02077a4e0 <col:13> 'int' lvalue ParmVar 0x1f020776150 'len' 'int'
    |   | | `-IntegerLiteral 0x1f02077a500 <col:19> 'int' 5
    |   | `-ReturnStmt 0x1f02077a5a0 <line:167:13, col:21>
    |   |   `-UnaryOperator 0x1f02077a588 <col:20, col:21> 'int' prefix '-'
    |   |     `-IntegerLiteral 0x1f02077a560 <col:21> 'int' 1
    |   |-IfStmt 0x1f020779200 <line:168:9, line:174:9>
    |   | |-ImplicitCastExpr 0x1f02077a5e8 <line:168:13> 'unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1f02077a5c8 <col:13> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    |   | `-CompoundStmt 0x1f0207791c8 <col:18, line:174:9>
    |   |   |-BinaryOperator 0x1f02077a850 <line:169:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1f02077a638 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1f02077a620 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1f02077a600 <col:14> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1f02077a828 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1f02077a808 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1f02077a7b0 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1f02077a750 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1f02077a730 <col:39, col:55> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1f02077a6d0 <col:39, col:51> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1f02077a6b0 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1f02077a698 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1f02077a650 <col:40> 'unsigned long' lvalue ParmVar 0x1f0207761d0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1f02077a670 <col:49> 'int' 24
    |   |   |       |   `-ImplicitCastExpr 0x1f02077a718 <col:55> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1f02077a6f0 <col:55> 'int' 3
    |   |   |       `-ImplicitCastExpr 0x1f02077a798 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1f02077a770 <col:62> 'int' 248
    |   |   |-BinaryOperator 0x1f02077aac0 <line:170:13, col:67> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1f02077a8a8 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1f02077a890 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1f02077a870 <col:14> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1f02077aa98 <col:22, col:67> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1f02077aa78 <col:37, col:67> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1f02077aa20 <col:38, col:63> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1f02077a9c0 <col:38, col:59> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1f02077a9a0 <col:39, col:55> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1f02077a940 <col:39, col:51> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1f02077a920 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1f02077a908 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1f02077a8c0 <col:40> 'unsigned long' lvalue ParmVar 0x1f0207761d0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1f02077a8e0 <col:49> 'int' 18
    |   |   |       |   `-ImplicitCastExpr 0x1f02077a988 <col:55> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1f02077a960 <col:55> 'int' 63
    |   |   |       `-ImplicitCastExpr 0x1f02077aa08 <col:63> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1f02077a9e0 <col:63> 'int' 128
    |   |   |-BinaryOperator 0x1f02077ad30 <line:171:13, col:67> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1f02077ab18 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1f02077ab00 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1f02077aae0 <col:14> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1f02077ad08 <col:22, col:67> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1f02077ace8 <col:37, col:67> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1f02077ac90 <col:38, col:63> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1f02077ac30 <col:38, col:59> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1f02077ac10 <col:39, col:55> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1f02077abb0 <col:39, col:51> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1f02077ab90 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1f02077ab78 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1f02077ab30 <col:40> 'unsigned long' lvalue ParmVar 0x1f0207761d0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1f02077ab50 <col:49> 'int' 12
    |   |   |       |   `-ImplicitCastExpr 0x1f02077abf8 <col:55> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1f02077abd0 <col:55> 'int' 63
    |   |   |       `-ImplicitCastExpr 0x1f02077ac78 <col:63> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1f02077ac50 <col:63> 'int' 128
    |   |   |-BinaryOperator 0x1f02077afa0 <line:172:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1f02077ad88 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1f02077ad70 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1f02077ad50 <col:14> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1f02077af78 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1f02077af58 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1f02077af00 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1f02077aea0 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1f02077ae80 <col:39, col:54> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1f02077ae20 <col:39, col:50> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1f02077ae00 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1f02077ade8 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1f02077ada0 <col:40> 'unsigned long' lvalue ParmVar 0x1f0207761d0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1f02077adc0 <col:49> 'int' 6
    |   |   |       |   `-ImplicitCastExpr 0x1f02077ae68 <col:54> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1f02077ae40 <col:54> 'int' 63
    |   |   |       `-ImplicitCastExpr 0x1f02077aee8 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1f02077aec0 <col:62> 'int' 128
    |   |   `-BinaryOperator 0x1f0207791a8 <line:173:13, col:57> 'unsigned char' '='
    |   |     |-UnaryOperator 0x1f02077aff8 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |     | `-ImplicitCastExpr 0x1f02077afe0 <col:14> 'unsigned char *' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x1f02077afc0 <col:14> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    |   |     `-CStyleCastExpr 0x1f020779180 <col:20, col:57> 'unsigned char' <IntegralCast>
    |   |       `-ParenExpr 0x1f020779160 <col:35, col:57> 'unsigned long'
    |   |         `-BinaryOperator 0x1f020779108 <col:36, col:53> 'unsigned long' '|'
    |   |           |-ParenExpr 0x1f0207790a8 <col:36, col:49> 'unsigned long'
    |   |           | `-BinaryOperator 0x1f020779088 <col:37, col:45> 'unsigned long' '&'
    |   |           |   |-ImplicitCastExpr 0x1f02077b058 <col:37> 'unsigned long' <LValueToRValue>
    |   |           |   | `-DeclRefExpr 0x1f02077b010 <col:37> 'unsigned long' lvalue ParmVar 0x1f0207761d0 'value' 'unsigned long'
    |   |           |   `-ImplicitCastExpr 0x1f020779070 <col:45> 'unsigned long' <IntegralCast>
    |   |           |     `-IntegerLiteral 0x1f02077b030 <col:45> 'int' 63
    |   |           `-ImplicitCastExpr 0x1f0207790f0 <col:53> 'unsigned long' <IntegralCast>
    |   |             `-IntegerLiteral 0x1f0207790c8 <col:53> 'int' 128
    |   `-ReturnStmt 0x1f020779240 <line:175:9, col:16>
    |     `-IntegerLiteral 0x1f020779218 <col:16> 'int' 5
    |-IfStmt 0x1f020779360 <line:177:5, line:178:17>
    | |-BinaryOperator 0x1f0207792f0 <line:177:9, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x1f0207792d8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1f020779290 <col:9> 'int' lvalue ParmVar 0x1f020776150 'len' 'int'
    | | `-IntegerLiteral 0x1f0207792b0 <col:15> 'int' 6
    | `-ReturnStmt 0x1f020779350 <line:178:9, col:17>
    |   `-UnaryOperator 0x1f020779338 <col:16, col:17> 'int' prefix '-'
    |     `-IntegerLiteral 0x1f020779310 <col:17> 'int' 1
    |-IfStmt 0x1f02077b268 <line:179:5, line:186:5>
    | |-ImplicitCastExpr 0x1f020779398 <line:179:9> 'unsigned char *' <LValueToRValue>
    | | `-DeclRefExpr 0x1f020779378 <col:9> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    | `-CompoundStmt 0x1f02077b228 <col:14, line:186:5>
    |   |-BinaryOperator 0x1f020779600 <line:180:9, col:62> 'unsigned char' '='
    |   | |-UnaryOperator 0x1f0207793e8 <col:9, col:13> 'unsigned char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x1f0207793d0 <col:10, col:13> 'unsigned char *' postfix '++'
    |   | |   `-DeclRefExpr 0x1f0207793b0 <col:10> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    |   | `-CStyleCastExpr 0x1f0207795d8 <col:18, col:62> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x1f0207795b8 <col:33, col:62> 'unsigned long'
    |   |     `-BinaryOperator 0x1f020779560 <col:34, col:58> 'unsigned long' '|'
    |   |       |-ParenExpr 0x1f020779500 <col:34, col:54> 'unsigned long'
    |   |       | `-BinaryOperator 0x1f0207794e0 <col:35, col:51> 'unsigned long' '&'
    |   |       |   |-ParenExpr 0x1f020779480 <col:35, col:47> 'unsigned long'
    |   |       |   | `-BinaryOperator 0x1f020779460 <col:36, col:45> 'unsigned long' '>>'
    |   |       |   |   |-ImplicitCastExpr 0x1f020779448 <col:36> 'unsigned long' <LValueToRValue>
    |   |       |   |   | `-DeclRefExpr 0x1f020779400 <col:36> 'unsigned long' lvalue ParmVar 0x1f0207761d0 'value' 'unsigned long'
    |   |       |   |   `-IntegerLiteral 0x1f020779420 <col:45> 'int' 30
    |   |       |   `-ImplicitCastExpr 0x1f0207794c8 <col:51> 'unsigned long' <IntegralCast>
    |   |       |     `-IntegerLiteral 0x1f0207794a0 <col:51> 'int' 1
    |   |       `-ImplicitCastExpr 0x1f020779548 <col:58> 'unsigned long' <IntegralCast>
    |   |         `-IntegerLiteral 0x1f020779520 <col:58> 'int' 252
    |   |-BinaryOperator 0x1f020779870 <line:181:9, col:63> 'unsigned char' '='
    |   | |-UnaryOperator 0x1f020779658 <col:9, col:13> 'unsigned char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x1f020779640 <col:10, col:13> 'unsigned char *' postfix '++'
    |   | |   `-DeclRefExpr 0x1f020779620 <col:10> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    |   | `-CStyleCastExpr 0x1f020779848 <col:18, col:63> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x1f020779828 <col:33, col:63> 'unsigned long'
    |   |     `-BinaryOperator 0x1f0207797d0 <col:34, col:59> 'unsigned long' '|'
    |   |       |-ParenExpr 0x1f020779770 <col:34, col:55> 'unsigned long'
    |   |       | `-BinaryOperator 0x1f020779750 <col:35, col:51> 'unsigned long' '&'
    |   |       |   |-ParenExpr 0x1f0207796f0 <col:35, col:47> 'unsigned long'
    |   |       |   | `-BinaryOperator 0x1f0207796d0 <col:36, col:45> 'unsigned long' '>>'
    |   |       |   |   |-ImplicitCastExpr 0x1f0207796b8 <col:36> 'unsigned long' <LValueToRValue>
    |   |       |   |   | `-DeclRefExpr 0x1f020779670 <col:36> 'unsigned long' lvalue ParmVar 0x1f0207761d0 'value' 'unsigned long'
    |   |       |   |   `-IntegerLiteral 0x1f020779690 <col:45> 'int' 24
    |   |       |   `-ImplicitCastExpr 0x1f020779738 <col:51> 'unsigned long' <IntegralCast>
    |   |       |     `-IntegerLiteral 0x1f020779710 <col:51> 'int' 63
    |   |       `-ImplicitCastExpr 0x1f0207797b8 <col:59> 'unsigned long' <IntegralCast>
    |   |         `-IntegerLiteral 0x1f020779790 <col:59> 'int' 128
    |   |-BinaryOperator 0x1f020779ae0 <line:182:9, col:63> 'unsigned char' '='
    |   | |-UnaryOperator 0x1f0207798c8 <col:9, col:13> 'unsigned char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x1f0207798b0 <col:10, col:13> 'unsigned char *' postfix '++'
    |   | |   `-DeclRefExpr 0x1f020779890 <col:10> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    |   | `-CStyleCastExpr 0x1f020779ab8 <col:18, col:63> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x1f020779a98 <col:33, col:63> 'unsigned long'
    |   |     `-BinaryOperator 0x1f020779a40 <col:34, col:59> 'unsigned long' '|'
    |   |       |-ParenExpr 0x1f0207799e0 <col:34, col:55> 'unsigned long'
    |   |       | `-BinaryOperator 0x1f0207799c0 <col:35, col:51> 'unsigned long' '&'
    |   |       |   |-ParenExpr 0x1f020779960 <col:35, col:47> 'unsigned long'
    |   |       |   | `-BinaryOperator 0x1f020779940 <col:36, col:45> 'unsigned long' '>>'
    |   |       |   |   |-ImplicitCastExpr 0x1f020779928 <col:36> 'unsigned long' <LValueToRValue>
    |   |       |   |   | `-DeclRefExpr 0x1f0207798e0 <col:36> 'unsigned long' lvalue ParmVar 0x1f0207761d0 'value' 'unsigned long'
    |   |       |   |   `-IntegerLiteral 0x1f020779900 <col:45> 'int' 18
    |   |       |   `-ImplicitCastExpr 0x1f0207799a8 <col:51> 'unsigned long' <IntegralCast>
    |   |       |     `-IntegerLiteral 0x1f020779980 <col:51> 'int' 63
    |   |       `-ImplicitCastExpr 0x1f020779a28 <col:59> 'unsigned long' <IntegralCast>
    |   |         `-IntegerLiteral 0x1f020779a00 <col:59> 'int' 128
    |   |-BinaryOperator 0x1f020779d50 <line:183:9, col:63> 'unsigned char' '='
    |   | |-UnaryOperator 0x1f020779b38 <col:9, col:13> 'unsigned char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x1f020779b20 <col:10, col:13> 'unsigned char *' postfix '++'
    |   | |   `-DeclRefExpr 0x1f020779b00 <col:10> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    |   | `-CStyleCastExpr 0x1f020779d28 <col:18, col:63> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x1f020779d08 <col:33, col:63> 'unsigned long'
    |   |     `-BinaryOperator 0x1f020779cb0 <col:34, col:59> 'unsigned long' '|'
    |   |       |-ParenExpr 0x1f020779c50 <col:34, col:55> 'unsigned long'
    |   |       | `-BinaryOperator 0x1f020779c30 <col:35, col:51> 'unsigned long' '&'
    |   |       |   |-ParenExpr 0x1f020779bd0 <col:35, col:47> 'unsigned long'
    |   |       |   | `-BinaryOperator 0x1f020779bb0 <col:36, col:45> 'unsigned long' '>>'
    |   |       |   |   |-ImplicitCastExpr 0x1f020779b98 <col:36> 'unsigned long' <LValueToRValue>
    |   |       |   |   | `-DeclRefExpr 0x1f020779b50 <col:36> 'unsigned long' lvalue ParmVar 0x1f0207761d0 'value' 'unsigned long'
    |   |       |   |   `-IntegerLiteral 0x1f020779b70 <col:45> 'int' 12
    |   |       |   `-ImplicitCastExpr 0x1f020779c18 <col:51> 'unsigned long' <IntegralCast>
    |   |       |     `-IntegerLiteral 0x1f020779bf0 <col:51> 'int' 63
    |   |       `-ImplicitCastExpr 0x1f020779c98 <col:59> 'unsigned long' <IntegralCast>
    |   |         `-IntegerLiteral 0x1f020779c70 <col:59> 'int' 128
    |   |-BinaryOperator 0x1f020779fc0 <line:184:9, col:62> 'unsigned char' '='
    |   | |-UnaryOperator 0x1f020779da8 <col:9, col:13> 'unsigned char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x1f020779d90 <col:10, col:13> 'unsigned char *' postfix '++'
    |   | |   `-DeclRefExpr 0x1f020779d70 <col:10> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    |   | `-CStyleCastExpr 0x1f020779f98 <col:18, col:62> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x1f020779f78 <col:33, col:62> 'unsigned long'
    |   |     `-BinaryOperator 0x1f020779f20 <col:34, col:58> 'unsigned long' '|'
    |   |       |-ParenExpr 0x1f020779ec0 <col:34, col:54> 'unsigned long'
    |   |       | `-BinaryOperator 0x1f020779ea0 <col:35, col:50> 'unsigned long' '&'
    |   |       |   |-ParenExpr 0x1f020779e40 <col:35, col:46> 'unsigned long'
    |   |       |   | `-BinaryOperator 0x1f020779e20 <col:36, col:45> 'unsigned long' '>>'
    |   |       |   |   |-ImplicitCastExpr 0x1f020779e08 <col:36> 'unsigned long' <LValueToRValue>
    |   |       |   |   | `-DeclRefExpr 0x1f020779dc0 <col:36> 'unsigned long' lvalue ParmVar 0x1f0207761d0 'value' 'unsigned long'
    |   |       |   |   `-IntegerLiteral 0x1f020779de0 <col:45> 'int' 6
    |   |       |   `-ImplicitCastExpr 0x1f020779e88 <col:50> 'unsigned long' <IntegralCast>
    |   |       |     `-IntegerLiteral 0x1f020779e60 <col:50> 'int' 63
    |   |       `-ImplicitCastExpr 0x1f020779f08 <col:58> 'unsigned long' <IntegralCast>
    |   |         `-IntegerLiteral 0x1f020779ee0 <col:58> 'int' 128
    |   `-BinaryOperator 0x1f02077b208 <line:185:9, col:53> 'unsigned char' '='
    |     |-UnaryOperator 0x1f02077a018 <col:9, col:10> 'unsigned char' lvalue prefix '*' cannot overflow
    |     | `-ImplicitCastExpr 0x1f02077a000 <col:10> 'unsigned char *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1f020779fe0 <col:10> 'unsigned char *' lvalue ParmVar 0x1f0207760d0 'str' 'unsigned char *'
    |     `-CStyleCastExpr 0x1f02077b1e0 <col:16, col:53> 'unsigned char' <IntegralCast>
    |       `-ParenExpr 0x1f02077b1c0 <col:31, col:53> 'unsigned long'
    |         `-BinaryOperator 0x1f02077b168 <col:32, col:49> 'unsigned long' '|'
    |           |-ParenExpr 0x1f02077b108 <col:32, col:45> 'unsigned long'
    |           | `-BinaryOperator 0x1f02077b0e8 <col:33, col:41> 'unsigned long' '&'
    |           |   |-ImplicitCastExpr 0x1f02077b0b8 <col:33> 'unsigned long' <LValueToRValue>
    |           |   | `-DeclRefExpr 0x1f02077a030 <col:33> 'unsigned long' lvalue ParmVar 0x1f0207761d0 'value' 'unsigned long'
    |           |   `-ImplicitCastExpr 0x1f02077b0d0 <col:41> 'unsigned long' <IntegralCast>
    |           |     `-IntegerLiteral 0x1f02077b090 <col:41> 'int' 63
    |           `-ImplicitCastExpr 0x1f02077b150 <col:49> 'unsigned long' <IntegralCast>
    |             `-IntegerLiteral 0x1f02077b128 <col:49> 'int' 128
    `-ReturnStmt 0x1f02077b2a8 <line:187:5, col:12>
      `-IntegerLiteral 0x1f02077b280 <col:12> 'int' 6
