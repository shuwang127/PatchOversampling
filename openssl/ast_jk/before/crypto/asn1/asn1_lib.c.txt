TranslationUnitDecl 0x20e45343868 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x20e45344100 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x20e45343e00 '__int128'
|-TypedefDecl 0x20e45344170 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x20e45343e20 'unsigned __int128'
|-TypedefDecl 0x20e453444a8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x20e45344260 'struct __NSConstantString_tag'
|   `-Record 0x20e453441c8 '__NSConstantString_tag'
|-TypedefDecl 0x20e45344518 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x20e45343a40 'unsigned long long'
|-TypedefDecl 0x20e453445b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x20e45344570 'char *'
|   `-BuiltinType 0x20e45343900 'char'
|-TypedefDecl 0x20e45344620 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x20e45344570 'char *'
|   `-BuiltinType 0x20e45343900 'char'
|-TypedefDecl 0x20e453446e0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x20e45343a40 'unsigned long long'
|-TypedefDecl 0x20e45344750 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x20e45344570 'char *'
|   `-BuiltinType 0x20e45343900 'char'
|-FunctionDecl 0x20e46eb83b0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x20e46eb8450 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x20e46eb84c0 <col:21> Implicit
|-FunctionDecl 0x20e46eb8518 prev 0x20e46eb83b0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x20e46eb8240 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x20e46eb8608 <col:21> Inherited Implicit
|-TypedefDecl 0x20e46eb8648 prev 0x20e45344518 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x20e45343a40 'unsigned long long'
|-TypedefDecl 0x20e46eb86f0 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x20e46eb86c0 'size_t' sugar
|   |-Typedef 0x20e46eb8648 'size_t'
|   `-BuiltinType 0x20e45343a40 'unsigned long long'
|-TypedefDecl 0x20e46eb8760 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x20e453439a0 'long long'
|-TypedefDecl 0x20e46eb87d0 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x20e453439a0 'long long'
|-TypedefDecl 0x20e46eb8840 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x20e453439e0 'unsigned short'
|-TypedefDecl 0x20e46eb88b0 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x20e453439e0 'unsigned short'
|-TypedefDecl 0x20e46eb8920 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x20e453439e0 'unsigned short'
|-TypedefDecl 0x20e46eb8990 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x20e45343960 'int'
|-TypedefDecl 0x20e46eb8a00 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x20e45343980 'long'
|-TypedefDecl 0x20e46eb8a70 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x20e453439a0 'long long'
|-TypedefDecl 0x20e46eb8b00 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x20e46eb8ad0 '__time64_t' sugar
|   |-Typedef 0x20e46eb8a70 '__time64_t'
|   `-BuiltinType 0x20e453439a0 'long long'
|-FunctionDecl 0x20e46eb8c78 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x20e46eb8e98 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x20e46efc180 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x20e46eb8fd8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x20e46eb9050 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x20e46eb90c8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x20e46eb9148 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x20e46efbf20 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x20e46efc260 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x20e46efc320 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x20e46efc490 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x20e46efc440 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x20e46efc3e0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x20e46efc300 'struct threadlocaleinfostruct'
|       `-Record 0x20e46f03fa0 'threadlocaleinfostruct'
|-TypedefDecl 0x20e46efc5a0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x20e46efc550 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x20e46efc4f0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x20e46efc3c0 'struct threadmbcinfostruct'
|       `-Record 0x20e46efc320 'threadmbcinfostruct'
|-RecordDecl 0x20e46efc5f8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x20e46efc6b0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x20e46efc770 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x20e46efc800 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x20e46efc890 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x20e46efc948 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x20e46efc8f0 'struct localeinfo_struct' sugar
|   `-RecordType 0x20e46efc750 'struct localeinfo_struct'
|     `-Record 0x20e46efc6b0 'localeinfo_struct'
|-TypedefDecl 0x20e46efca20 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x20e46efc9d0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x20e46efc8f0 'struct localeinfo_struct' sugar
|     `-RecordType 0x20e46efc750 'struct localeinfo_struct'
|       `-Record 0x20e46efc6b0 'localeinfo_struct'
|-RecordDecl 0x20e46efca98 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x20e46efcb50 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x20e46efcbc8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x20e46efcc88 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x20e46efcd20 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x20e46efcd90 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x20e46efce48 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x20e46efcdf0 'struct localerefcount' sugar
|   `-RecordType 0x20e46efcb30 'struct localerefcount'
|     `-Record 0x20e46efca98 'localerefcount'
|-RecordDecl 0x20e46f03fa0 prev 0x20e46efc260 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x20e46f04020 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x20e46f04098 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x20e46f04108 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x20e46f04178 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x20e46f041e8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x20e46f043a8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x20e46f04418 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x20e46f04488 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x20e46f044f8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x20e46f04568 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x20e46f045d8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x20e46f04630 parent 0x20e45343868 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x20e46f047c0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x20e46f04830 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x20e46f048a0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x20e46f04910 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x20e46f049b0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x20e46f04a20 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x20e46f04b30 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x20e46f04c68 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x20e46f04d18 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x20e46f04cc0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x20e46efc300 'struct threadlocaleinfostruct'
|     `-Record 0x20e46f03fa0 'threadlocaleinfostruct'
|-RecordDecl 0x20e46f04db0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x20e46f04e70 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x20e46f04ee8 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x20e46f05fc0 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x20e46f06030 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x20e46f060a0 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x20e46f06110 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x20e46f06180 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x20e46f061f0 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x20e46f06260 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x20e46f06310 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x20e46f062c0 'struct _iobuf' sugar
|   `-RecordType 0x20e46f04e50 'struct _iobuf'
|     `-Record 0x20e46f04db0 '_iobuf'
|-FunctionDecl 0x20e46f06548 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x20e46f06618 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x20e453439a0 'long long'
|-FunctionDecl 0x20e46f067f8 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e46f06680 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x20e46f06af0 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20e46f068d0 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x20e46f06948 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x20e46f06ea0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x20e46f06bd0 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x20e46f06c50 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x20e46f06cd0 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x20e46f0d1a0 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x20e46f0d030 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x20e46f0d3d0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x20e46f0d290 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x20e46f0d580 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e46f0d4a0 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x20e46f0d770 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20e46f0da68 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x20e46f0d840 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x20e46f0d8c0 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x20e46f0dc20 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e46f0db40 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x20e46f0ddd0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e46f0dcf0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x20e46f0df80 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e46f0dea0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x20e46f0e148 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e46f0e068 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x20e46f0e2d8 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20e46f0e640 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x20e46f0e3a0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x20e46f0e498 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x20e46f0e9f8 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x20e46f0e720 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x20e46f0e7a0 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x20e46f0e818 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x20e46f0ebb8 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e46f0ead8 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x20e46f0ee80 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x20e46f0ec90 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x20e46f0ed10 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x20e46f0f050 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20e46f0f448 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x20e46f0f4e8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x20e46f0f550 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x20e46f0f5c8 prev 0x20e46f0f448 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x20e46f0f220 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x20e46f0f2a0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x20e46f0f678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f0faf0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x20e46f0f820 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x20e46f0f8a0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x20e46f0f920 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x20e46f0fe10 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x20e46f0feb0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x20e46f0ff18 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x20e46f0ff90 <col:40> Implicit printf 2 3
|-FunctionDecl 0x20e46f07fe0 prev 0x20e46f0fe10 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x20e46f0fbd0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x20e46f0fc50 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x20e46f080d8 <col:40> Inherited printf 2 3
|-FunctionDecl 0x20e46f082a0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x20e46f08120 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x20e46f081a0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x20e46f084f8 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20e46f08380 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x20e46f083f8 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x20e46f08728 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20e46f085d8 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x20e46f08a20 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x20e46f08800 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x20e46f08878 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x20e46f08eb8 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x20e46f08f58 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x20e46f10060 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x20e46f100c8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x20e46f10130 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x20e46f101b8 prev 0x20e46f08eb8 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x20e46f08b00 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x20e46f08b78 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f08bf0 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e46f08c68 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x20e46f106c0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x20e46f102a8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x20e46f10320 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f10398 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f10410 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e46f10488 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x20e46f10b80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x20e46f108b0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x20e46f10930 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x20e46f109a8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x20e46f10c38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f09098 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x20e46f10d80 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x20e46f10e00 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x20e46f10e80 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x20e46f10ef8 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x20e46f09440 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x20e46f094e0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x20e46f09548 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x20e46f095c0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x20e46f09628 prev 0x20e46f09440 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x20e46f09278 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x20e46f092f8 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x20e46f09808 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x20e46f096d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f09c48 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f09948 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x20e46f099c8 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x20e46f09a60 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e46f09d00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f11070 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x20e46f09e40 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x20e46f09ec0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x20e46f11360 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f11148 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x20e46f111c8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x20e46f11240 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f116c0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x20e46f11440 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x20e46f11518 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x20e46f11a78 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x20e46f11798 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x20e46f11818 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x20e46f11898 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x20e46f11cd8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x20e46f11b58 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x20e46f0a048 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x20e46f11da8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x20e46f11e28 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x20e46f11ea8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x20e46f0a2a8 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x20e46f0a128 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x20e46f0a768 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x20e46f0a808 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x20e46f0a870 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x20e46f0a8d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x20e46f0a940 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x20e46f0a9c8 prev 0x20e46f0a768 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x20e46f0a3b0 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x20e46f0a428 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f0a4a0 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e46f0a518 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x20e46f0ab90 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e46f0aab0 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x20e46f0ad20 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20e46f0aea8 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20e46f13250 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x20e46f0af78 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x20e46f130a0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x20e46f13578 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x20e46f13430 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x20e46f13620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f13840 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e46f13760 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x20e46f13a60 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x20e46f13918 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x20e46f13c10 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e46f13b30 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x20e46f13e60 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x20e46f13ce8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x20e46f13d68 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x20e46f140a0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x20e46f14140 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x20e46f141b0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x20e46f14218 prev 0x20e46f140a0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x20e46f13f40 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x20e46f14308 <col:40> Inherited printf 1 2
|-FunctionDecl 0x20e46f14438 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20e46f14358 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x20e46f14688 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20e46f14510 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x20e46f14588 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x20e46f14848 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20e46f14768 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x20e46f14a68 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x20e46f14920 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x20e46f14cb8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20e46f14b40 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x20e46f14bb8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x20e46f14e78 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x20e46f14d98 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x20e46f65fe0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x20e46f14f50 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x20e46f14fd0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x20e46f661a0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x20e46f660c0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x20e46f66430 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x20e46f66350 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x20e46f664d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x20e46f666d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x20e46f665f8 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x20e46f66860 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20e46f66b08 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x20e46f66ba8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x20e46f66c18 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x20e46f66c80 prev 0x20e46f66b08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x20e46f669f0 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x20e46f66e58 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x20e46f66d28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f5f1b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f5ef78 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x20e46f5eff0 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e46f5f260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f5f488 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20e46f5f3a8 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x20e46f5f6d8 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f5f560 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x20e46f5f5d8 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f5fa98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x20e46f5f870 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x20e46f5f8f0 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x20e46f5fb48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f5fd70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20e46f5fc90 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x20e46f5fff8 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x20e46f5feb0 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x20e46f601e0 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x20e46f60630 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x20e46f602a8 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x20e46f60328 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x20e46f603a8 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x20e46f60420 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x20e46f60ab0 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x20e46f60720 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x20e46f60798 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f60810 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e46f60890 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x20e46f66f20 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20e46f60ba0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x20e46f60c18 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e46f60c98 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x20e46f670e8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20e46f67008 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x20e46f674c0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x20e46f67560 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20e46f675c8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x20e46f67640 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x20e46f676a8 prev 0x20e46f674c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x20e46f67280 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x20e46f67300 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x20e46f67888 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x20e46f67758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f67c78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f67998 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x20e46f67a18 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x20e46f67a90 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e46f67d30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f60fc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x20e46f67e78 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x20e46f60ec0 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x20e46f612b8 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f610a0 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x20e46f61120 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x20e46f61198 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f61748 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20e46f61460 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x20e46f614d8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f61558 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x20e46f61800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f61dd0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f61a40 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x20e46f61ab8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f61b38 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x20e46f61bb0 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e46f62ee0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f63240 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20e46f63028 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x20e46f630a0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e46f63120 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x20e46f635d8 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f63328 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x20e46f633a0 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f63420 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x20e46f63498 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f63838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x20e46f638d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f63b90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x20e46f63a20 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x20e46f67f30 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x20e46f63c68 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x20e46f63ce0 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x20e46f681b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x20e46f680d0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x20e46f68258 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f68518 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20e46f683a0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x20e46f68418 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x20e46f68930 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x20e46f689d0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x20e46f68a38 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x20e46f68aa0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20e46f68b20 <col:40> Implicit printf 2 0
|-FunctionDecl 0x20e46f68b88 prev 0x20e46f68930 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x20e46f685f0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x20e46f68670 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x20e46f686e8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20e46f68c88 <col:40> Inherited printf 2 0
|-FunctionDecl 0x20e46f68f40 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x20e46f68fe0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x20e46f69048 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20e46f690b0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20e46f69130 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x20e46f69198 prev 0x20e46f68f40 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x20e46f68cd0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x20e46f68d50 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x20e46f68dc8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20e46f69298 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x20e46f694f8 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x20e46f692e0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x20e46f69360 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x20e46f693d8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f697f0 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x20e46f695d8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x20e46f69658 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x20e46f696d0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f69b38 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x20e46f69bd8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x20e46f69c40 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20e46f69cb8 <col:40> Implicit printf 1 0
|-FunctionDecl 0x20e46f69d20 prev 0x20e46f69b38 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x20e46f698d8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x20e46f69950 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20e46f69e18 <col:40> Inherited printf 1 0
|-FunctionDecl 0x20e46f65038 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x20e46f650d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20e46f65140 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20e46f651b8 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x20e46f65220 prev 0x20e46f65038 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x20e46f69e68 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x20e46f64f00 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20e46f65318 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x20e46f654e0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x20e46f65368 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x20e46f653e0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f65738 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x20e46f655c0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x20e46f65638 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f65c98 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x20e46f65d38 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x20e46f65da0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x20e46f65e08 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x20e46f65e70 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20e46f61ed0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x20e46f61f38 prev 0x20e46f65c98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x20e46f658d8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x20e46f65950 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f659d0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x20e46f65a48 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x20e46f62128 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x20e46f61ff8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f62598 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20e46f62178 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x20e46f621f0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f62268 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f622e8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x20e46f62360 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f629d8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20e46f62690 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x20e46f62708 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f62780 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f62800 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x20e46f62878 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f62da8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20e46f62b90 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x20e46f62c08 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f62c88 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x20e46f62e60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f64360 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20e46f640b0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x20e46f64128 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f641a8 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x20e46f64220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x20e46f64420 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f64818 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20e46f64568 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x20e46f645e0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f64660 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x20e46f646d8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f64bd8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x20e46f64908 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x20e46f64988 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x20e46f64a00 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f6f040 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x20e46f6f0e0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x20e46f6f148 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x20e46f6f1c0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x20e46f6f228 prev 0x20e46f6f040 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x20e46f64d80 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x20e46f64e00 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x20e46f6f408 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x20e46f6f2d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f6f830 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x20e46f6f8d0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x20e46f6f938 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x20e46f6f9a0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20e46f6fa20 <col:94> Implicit printf 2 0
|-FunctionDecl 0x20e46f6fa88 prev 0x20e46f6f830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x20e46f6f518 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x20e46f6f598 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x20e46f6f610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x20e46f6fc70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x20e46f6fb40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f6ffb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x20e46f70050 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20e46f700b8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20e46f70120 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20e46f701a0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x20e46f70208 prev 0x20e46f6ffb0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x20e46f6fcc0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x20e46f6fd40 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x20e46f6fdb8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20e46f70308 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x20e46f704d0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x20e46f70358 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x20e46f703d0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f707c8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20e46f705b0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x20e46f70628 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e46f706a8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x20e46f70b60 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20e46f708b0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x20e46f70928 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f709a8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x20e46f70a20 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f70dc8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x20e46f70c48 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x20e46f70cc8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x20e46f6cf80 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20e46f70ea8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x20e46f6d270 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20e46f6d058 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x20e46f6d0d0 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e46f6d150 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x20e46f6d568 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x20e46f6d350 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x20e46f6d3d0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x20e46f6d448 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f6d7c8 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x20e46f6d650 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x20e46f6d6c8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f6db58 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20e46f6d8a8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x20e46f6d920 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f6d9a0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x20e46f6da18 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f6dd28 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20e46f6dc48 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x20e46f6df90 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x20e46f6de00 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x20e46f6de78 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f6e150 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20e46f6e070 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x20e46f6e2e0 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20e46f6e528 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f6e3b0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x20e46f6e428 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f6e780 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f6e608 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x20e46f6e680 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f6e9d8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f6e860 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x20e46f6e8d8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f6ed88 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f6eab8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x20e46f6eb30 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e46f6eba8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f710e0 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f6ee70 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x20e46f6eee8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e46f70fc0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f713d8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f711c8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x20e46f71240 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e46f712b8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f716d0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f714b8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x20e46f71538 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x20e46f715b0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f719c8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f717b0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x20e46f71830 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x20e46f718a8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f71cc0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f71aa8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x20e46f71b28 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x20e46f71ba0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f72130 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f71da0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x20e46f71e20 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x20e46f71e98 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e46f71f10 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f724c8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f72218 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x20e46f72298 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x20e46f72310 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e46f72388 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f72860 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f725b0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x20e46f72630 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x20e46f726a8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e46f72720 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f72cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f72a10 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x20e46f72a90 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x20e46f72b08 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e46f72db0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f6c280 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f72ef8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x20e46f6bf70 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f6bff0 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x20e46f6c068 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f6c620 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f6c370 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x20e46f6c3e8 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f6c468 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x20e46f6c4e0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f6cb70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f6c810 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x20e46f6c890 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x20e46f6c908 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20e46f6c980 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x20e46f6cc30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f6b198 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f6cd78 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x20e46f6cdf0 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f6ce70 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x20e46f6cee8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e46f6af60 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f6b5d8 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f6b290 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x20e46f6b308 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f6b388 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x20e46f6b400 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e46f6b478 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f6b848 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f6b6d0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x20e46f6b748 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f6baa0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f6b928 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x20e46f6b9a0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f6bd90 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f6bb80 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x20e46f6bbf8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e46f6bc70 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f75130 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f6be78 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x20e46f6bef0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e46f75010 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f75588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f752d8 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x20e46f75350 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f753d0 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x20e46f75448 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e46f75648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f75a40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f75790 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x20e46f75808 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f75888 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x20e46f75900 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f78030 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f75b30 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x20e46f75ba8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f75c20 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f75ca0 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x20e46f75d18 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f78570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f78228 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x20e46f782a0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f78320 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x20e46f78398 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20e46f78410 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x20e46f78638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f78ab8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f78788 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x20e46f78800 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f78880 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x20e46f788f8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e46f78970 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f790a0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f78bb0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x20e46f78c28 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f78ca0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f78d20 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x20e46f78d98 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e46f78e10 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f79460 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x20e46f79198 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x20e46f79210 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x20e46f79290 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x20e46f796d0 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x20e46f79560 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x20e46f798e8 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x20e46f79bc8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x20e46f799b0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x20e46f79a28 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x20e46f79e10 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x20e46f79ca0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x20e46f76010 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x20e46f79ee0 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x20e46f76198 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x20e46f763d0 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x20e46f76260 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x20e46f762d8 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x20e46f76580 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x20e46f764a8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x20e46f76828 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x20e46f76650 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20e46f766c8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x20e46f76bd0 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x20e46f76900 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x20e46f76980 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x20e46f769f8 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x20e46f76ed0 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x20e46f76cb0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x20e46f76d28 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x20e46f7a208 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x20e46f76fa8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x20e46f7a060 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x20e46f7a510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x20e46f7a3a0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x20e46f7a5b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f7a878 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x20e46f7a6f8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x20e46f7ab80 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e46f7a948 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x20e46f7a9c0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x20e46f7add0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e46f7ac58 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x20e46f7acd0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x20e46f72fe0 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20e46f7aea8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x20e46f73190 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20e46f730b0 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x20e46f73340 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20e46f73260 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x20e46f736d8 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e46f73410 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x20e46f73488 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f73500 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f739c8 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e46f737b8 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x20e46f73830 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f738a8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f73cb8 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e46f73aa8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x20e46f73b20 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f73b98 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f7b060 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e46f73d98 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x20e46f73e10 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f73e88 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f7b360 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e46f7b140 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f7b1b8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f7b5b0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e46f7b438 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f7b4b0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f7b800 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e46f7b688 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f7b700 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f7ba50 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e46f7b8d8 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f7b950 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f7be08 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e46f7bb28 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x20e46f7bba0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e46f7bc18 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x20e46f74200 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e46f7bee8 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x20e46f7bf60 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f7bfd8 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f73ff0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f745b8 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e46f742e8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20e46f74360 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f743d8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f748a8 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e46f74698 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x20e46f74710 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f74788 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f74b98 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e46f74988 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e46f74a00 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e46f74a78 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x20e46f74f20 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e46f74c78 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e46f74cf0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f74d68 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f74de0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f7c420 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e46f7c098 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e46f7c110 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f7c188 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e46f7c200 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x20e46f7c928 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e46f7c508 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e46f7c580 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f7c5f8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f7c670 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f7c6e8 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f7cce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e46f7cad8 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20e46f7cb50 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f7cbc8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x20e46f7cda0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f7d2b0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e46f7cfa0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20e46f7d080 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f7d0f8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e46f7d170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x20e46f7d370 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f7d628 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e46f7d4b0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x20e46f7d528 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x20e46f7d7e0 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20e46f7d700 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x20e46f7dac0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e46f7d8b0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x20e46f7d928 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f7d9a0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f7dd18 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e46f7dba0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f7dc18 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f86f40 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e46f7ddf0 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e46f7de68 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e46f7dee0 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x20e46f872c8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e46f87020 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e46f87098 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f87110 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f87188 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f87490 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20e46f873b0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x20e46f876d8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e46f87560 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f875d8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f879e0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f877b0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f87828 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f87c30 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f87ab8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f87b30 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f87e80 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f87d08 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f87d80 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f86228 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f85f58 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e46f85fd0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e46f86048 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f86518 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f86308 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e46f86380 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e46f863f8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f86808 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f865f8 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e46f86670 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e46f866e8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f86bc8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f868e8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x20e46f86960 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f869d8 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f83f10 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f86ca8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x20e46f86d20 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f86d98 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f84200 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f83ff0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x20e46f84068 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f840e0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f84650 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f842e0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x20e46f84358 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e46f843d0 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e46f84448 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f849e0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f84738 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x20e46f847b0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e46f84828 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e46f848a0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f84d70 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f84ac8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x20e46f84b40 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e46f84bb8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e46f84c30 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f88260 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f84e58 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e46f87f50 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f87fc8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f88040 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f885f0 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f88348 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e46f883c0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f88438 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f884b0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f88980 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f886d8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e46f88750 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f887c8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f88840 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f88e88 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f88a68 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e46f88ae0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f88b58 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e46f88bd0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e46f88c48 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f82258 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f81f18 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e46f81f90 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f82008 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e46f82080 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e46f820f8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f82688 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f82348 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e46f823c0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f82438 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e46f824b0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e46f82528 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f828f0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f82778 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f827f0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f82b40 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f829c8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f82a40 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f82e28 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f82c18 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e46f82c90 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e46f82d08 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f83298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f82ff0 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e46f83068 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f830e0 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e46f83158 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e46f83358 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f838c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f834a0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e46f83518 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f83590 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f83608 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f83680 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f83e00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f83ac0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e46f83b38 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f83bb0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e46f83c28 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20e46f83ca0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x20e46f84f20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f85530 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f85068 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e46f850e0 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f85158 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f851d0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e46f85248 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e46f852c0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f85a30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e46f857f8 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20e46f85870 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x20e46f85ae0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x20e46f85bf8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x20e46f81148 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e46f85eb0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20e46f80ef0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e46f80f68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x20e46f81200 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x20e46f81318 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x20e46f818b8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f815d8 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20e46f81650 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e46f816c8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x20e46f81970 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x20e46f81a90 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x20e46f8d1b0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f81d50 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20e46f81dc8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e46f81e40 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20e46f8cfa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x20e46f8d270 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x20e46f8d390 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x20e46f8d698 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x20e46f8d4b8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x20e46f8d530 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f8d5a8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x20e46f8b220 <line:37:1, line:44:1>
|   |-DeclStmt 0x20e46f8d7e0 <line:38:5, col:21>
|   | `-VarDecl 0x20e46f8d778 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x20e46f8d878 <line:39:5, col:13>
|   | `-VarDecl 0x20e46f8d810 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x20e46f8dbd0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x20e46f8dbb8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x20e46f8dad0 <col:34> '<builtin fn type>' Function 0x20e46f8d968 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x20e46f8db08 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x20e46f8d778 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x20e46f8db40 <col:29> 'const wchar_t *' lvalue ParmVar 0x20e46f8d5a8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x20e46f8de90 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x20e46f8dc00 <col:5> 'int' lvalue Var 0x20e46f8d810 '_Ret' 'int'
|   | `-CallExpr 0x20e46f8ddd0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x20e46f8ddb8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x20e46f8dc38 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x20e46f88e88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x20e46f8de18 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20e46f8dc58 <col:27> 'wchar_t *' lvalue ParmVar 0x20e46f8d4b8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x20e46f8de30 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20e46f8dc78 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x20e46f8d530 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x20e46f8de48 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20e46f8dc98 <col:44> 'const wchar_t *' lvalue ParmVar 0x20e46f8d5a8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x20e46f8de60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x20e46f8dd20 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x20e46f8dcf8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x20e46f8dcb8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x20e46f8de78 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x20e46f8dd40 <col:59> 'va_list':'char *' lvalue Var 0x20e46f8d778 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x20e46f8b1b0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x20e46f8b198 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x20e46f8b0e8 <col:34> '<builtin fn type>' Function 0x20e46f8af80 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x20e46f8b120 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x20e46f8d778 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x20e46f8b210 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x20e46f8b1f8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x20e46f8b1d8 <col:12> 'int' lvalue Var 0x20e46f8d810 '_Ret' 'int'
|-FunctionDecl 0x20e46f8d968 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x20e46f8da08 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x20e46f8da78 <col:34> Implicit
|-FunctionDecl 0x20e46f8af80 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x20e46f8b020 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x20e46f8b090 <col:34> Implicit
|-FunctionDecl 0x20e46f8b518 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x20e46f8b270 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x20e46f8b2e8 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f8b360 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e46f8b3d8 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x20e46f8b800 <line:50:1, line:52:1>
|   `-ReturnStmt 0x20e46f8b7f0 <line:51:5, col:62>
|     `-CallExpr 0x20e46f8b730 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x20e46f8b718 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x20e46f8b5f0 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x20e46f88e88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x20e46f8b778 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x20e46f8b610 <col:27> 'wchar_t *' lvalue ParmVar 0x20e46f8b270 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x20e46f8b790 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x20e46f8b630 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x20e46f8b2e8 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x20e46f8b7a8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x20e46f8b650 <col:44> 'const wchar_t *' lvalue ParmVar 0x20e46f8b360 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x20e46f8b7c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x20e46f8b6d8 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x20e46f8b6b0 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x20e46f8b670 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x20e46f8b7d8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x20e46f8b6f8 <col:59> 'va_list':'char *' lvalue ParmVar 0x20e46f8b3d8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x20e46f8baa0 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x20e46f8b828 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x20e46f8b8a0 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f8b918 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e46f8b990 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x20e46f8f068 <line:61:1, line:68:1>
|   |-DeclStmt 0x20e46f8bbf0 <line:62:5, col:21>
|   | `-VarDecl 0x20e46f8bb88 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x20e46f8bc88 <line:63:5, col:13>
|   | `-VarDecl 0x20e46f8bc20 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x20e46f8bd30 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x20e46f8bd18 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x20e46f8bca0 <col:34> '<builtin fn type>' Function 0x20e46f8d968 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x20e46f8bcc0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x20e46f8bb88 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x20e46f8bcf8 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x20e46f8b990 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x20e46f8bf30 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x20e46f8bd60 <col:5> 'int' lvalue Var 0x20e46f8bc20 '_Ret' 'int'
|   | `-CallExpr 0x20e46f8be70 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x20e46f8be58 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x20e46f8bd98 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x20e46f88e88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x20e46f8beb8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20e46f8bdb8 <col:27> 'wchar_t *' lvalue ParmVar 0x20e46f8b828 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x20e46f8bed0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20e46f8bdd8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x20e46f8b8a0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x20e46f8bee8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20e46f8bdf8 <col:44> 'const wchar_t *' lvalue ParmVar 0x20e46f8b918 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x20e46f8bf00 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20e46f8be18 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x20e46f8b990 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x20e46f8bf18 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x20e46f8be38 <col:64> 'va_list':'char *' lvalue Var 0x20e46f8bb88 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x20e46f8eff8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x20e46f8efe0 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x20e46f8bf50 <col:34> '<builtin fn type>' Function 0x20e46f8af80 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x20e46f8efc0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x20e46f8bb88 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x20e46f8f058 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x20e46f8f040 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x20e46f8f020 <col:12> 'int' lvalue Var 0x20e46f8bc20 '_Ret' 'int'
|-FunctionDecl 0x20e46f8f3f8 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x20e46f8f0b8 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x20e46f8f130 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f8f1a8 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e46f8f220 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20e46f8f298 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x20e46f8f680 <line:74:1, line:76:1>
|   `-ReturnStmt 0x20e46f8f670 <line:75:5, col:67>
|     `-CallExpr 0x20e46f8f5b0 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x20e46f8f598 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x20e46f8f4d8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x20e46f88e88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x20e46f8f5f8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x20e46f8f4f8 <col:27> 'wchar_t *' lvalue ParmVar 0x20e46f8f0b8 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x20e46f8f610 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x20e46f8f518 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x20e46f8f130 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x20e46f8f628 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x20e46f8f538 <col:44> 'const wchar_t *' lvalue ParmVar 0x20e46f8f1a8 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x20e46f8f640 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x20e46f8f558 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x20e46f8f220 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x20e46f8f658 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x20e46f8f578 <col:64> 'va_list':'char *' lvalue ParmVar 0x20e46f8f298 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x20e46f8f8c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20e46f8f6a8 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x20e46f8f720 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x20e46f8fb18 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e46f8f9a0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f8fa18 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f8fe00 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e46f8fbf0 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e46f8fc68 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e46f8fce0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e46f890d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e46f88f60 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x20e46f88fd8 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x20e46f89188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f89598 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f89388 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x20e46f89400 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e46f89478 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e46f89650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f89908 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e46f89790 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x20e46f89808 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x20e46f89bf0 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f899e0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x20e46f89a58 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f89ad0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f89fe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e46f89d90 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20e46f89e08 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x20e46f8a090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f8a568 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f8a290 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20e46f8a308 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e46f8a380 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e46f8a620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f8a8d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e46f8a760 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x20e46f8a7d8 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x20e46f8abc0 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f8a9b0 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20e46f8aa28 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f8aaa0 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f900b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e46f8ad60 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20e46f8add8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f8ae50 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x20e46f90170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f906f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f90370 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20e46f903e8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f90460 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e46f904d8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e46f907b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f90b00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e46f908f0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20e46f90968 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e46f909e0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x20e46f90e88 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f90be0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20e46f90c58 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f90cd0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f90d48 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f91190 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x20e46f910b0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x20e46f91238 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f915b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f91438 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e46f914b0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e46f91660 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f91880 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20e46f917a0 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x20e46f91ac8 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e46f91950 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e46f919c8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e46f91dc8 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x20e46f91ba8 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x20e46f91c20 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x20e46f8c138 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20e46f91f60 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x20e46f8bf90 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x20e46f8c1e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f8c5f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20e46f8c330 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x20e46f8c3a8 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x20e46f8c420 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x20e46f8ca50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x20e46f8c790 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x20e46f8c808 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x20e46f8c880 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x20e46f8cb08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f93048 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x20e46f8cc50 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x20e46f8ccc8 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x20e46f8cd40 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x20e46f8cdb8 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x20e46f932a0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x20e46f93130 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x20e46f934e0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20e46f93370 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x20e46f933e8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x20e46f93698 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x20e46f935b8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x20e46f93988 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x20e46f93768 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x20e46f937e0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x20e46f93bf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x20e46f93b20 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x20e46f93ca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e46f93eb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x20e46f93de0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x20e46f96128 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x20e46f93f88 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x20e46f96030 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x20e46f96370 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x20e46f96200 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20e46f96278 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x20e46f96520 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x20e46f96448 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x20e46f966c8 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x20e46f965f0 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x20e46f96878 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e46f96798 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x20e46f96a28 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e46f96948 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x20e46f96da0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x20e46f96b00 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x20e46f96b78 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f96bf0 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e46f96c68 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x20e46f921c0 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x20e46f96e90 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x20e46f96f08 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f96f80 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f91ff0 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e46f92068 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x20e46f924d0 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x20e46f922b0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x20e46f92330 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x20e46f923b0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x20e46f92690 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x20e46f925b0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x20e46f92980 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x20e46f92760 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x20e46f927e0 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x20e46f92860 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x20e46f92b40 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x20e46f92a60 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x20e46f92eb8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x20e46f92c18 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x20e46f92c90 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e46f92d08 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e46f92d80 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x20e46f9b1f8 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20e46f9b080 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x20e46f9b0f8 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x20e46f9b530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x20e46f9b3b0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x20e46f9b430 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x20e46f9b5e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x20e46f9b898 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x20e46f9b938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x20e46f9bc78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x20e46f9bb00 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x20e46f9bb80 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x20e46f9bd28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x20e46f99060 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x20e46f99100 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x20e46f993a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x20e46f992c0 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x20e46f99448 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x20e46f996c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x20e46f99768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x20e46f99a10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x20e46f99930 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x20e46f99ab8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x20e46f99d98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x20e46f99cb8 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x20e46f99e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x20e46f9a1e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20e46f9a070 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x20e46f9a0e8 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x20e46f9a298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x20e46f9a558 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x20e46f9a5f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x20e46f9aa20 <.//openssl//file_jk/before\crypto\asn1/asn1_locl.h:12:1, col:60> col:5 invalid asn1_utctime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x20e46f9a880 <col:24, col:35> col:35 tm 'struct tm *'
| `-ParmVarDecl 0x20e46f9a900 <col:39, col:59> col:59 invalid d 'const int *'
|-FunctionDecl 0x20e46f9adf0 <line:13:1, col:76> col:5 invalid asn1_generalizedtime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x20e46f9ac50 <col:32, col:43> col:43 tm 'struct tm *'
| `-ParmVarDecl 0x20e46f9acd0 <col:47, col:75> col:75 invalid d 'const int *'
|-RecordDecl 0x20e46f9aea0 <line:17:1, line:38:1> line:17:8 invalid struct asn1_sctx_st definition
| |-FieldDecl 0x20e46f9af78 <line:19:5, col:22> col:22 invalid it 'const int *'
| |-FieldDecl 0x20e46f9afe8 <line:21:5, col:26> col:26 invalid tt 'const int *'
| |-FieldDecl 0x20e46fae050 <line:23:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x20e46fae0c0 <line:25:5, col:9> col:9 skidx 'int'
| |-FieldDecl 0x20e46fae130 <line:27:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x20e46fae1a0 <line:29:5, col:17> col:17 sname 'const char *'
| |-FieldDecl 0x20e46fae210 <col:5, col:25> col:25 fname 'const char *'
| |-FieldDecl 0x20e46fae280 <line:31:5, col:9> col:9 prim_type 'int'
| |-FieldDecl 0x20e46fae328 <line:33:5, col:18> col:18 invalid field 'int **'
| |-FieldDecl 0x20e46fae4f8 <line:35:5, col:35> col:11 scan_cb 'int (*)(int *)'
| `-FieldDecl 0x20e46fae568 <line:37:5, col:11> col:11 app_data 'void *'
|-RecordDecl 0x20e46fae5c0 <line:40:9, col:16> col:16 struct mime_param_st
|-TypedefDecl 0x20e46fae6d8 <col:1, col:30> col:30 referenced MIME_PARAM 'struct mime_param_st':'struct mime_param_st'
| `-ElaboratedType 0x20e46fae680 'struct mime_param_st' sugar
|   `-RecordType 0x20e46fae660 'struct mime_param_st'
|     `-Record 0x20e46fae5c0 'mime_param_st'
|-FunctionDecl 0x20e46fae880 <line:41:1, col:27> col:1 DEFINE_STACK_OF 'int (MIME_PARAM)'
| `-ParmVarDecl 0x20e46fae780 <col:17> col:27 'MIME_PARAM':'struct mime_param_st'
|-RecordDecl 0x20e46fae940 <line:42:9, col:16> col:16 struct mime_header_st
|-TypedefDecl 0x20e46faea58 <col:1, col:31> col:31 referenced MIME_HEADER 'struct mime_header_st':'struct mime_header_st'
| `-ElaboratedType 0x20e46faea00 'struct mime_header_st' sugar
|   `-RecordType 0x20e46fae9e0 'struct mime_header_st'
|     `-Record 0x20e46fae940 'mime_header_st'
|-FunctionDecl 0x20e46faec00 <line:43:1, col:28> col:1 invalid DEFINE_STACK_OF 'int (MIME_HEADER)'
| `-ParmVarDecl 0x20e46faeb00 <col:17> col:28 'MIME_HEADER':'struct mime_header_st'
|-VarDecl 0x20e46faed50 <line:46:1, col:32> col:20 _asn1_mon 'const char *[12]' extern
|-FunctionDecl 0x20e46faef38 <line:48:1, col:54> col:6 invalid asn1_string_embed_free 'void (int *, int)'
| |-ParmVarDecl 0x20e46faede8 <col:29, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x20e46faee68 <col:45, col:49> col:49 embed 'int'
|-FunctionDecl 0x20e46fad1a0 <line:50:1, col:68> col:5 invalid asn1_get_choice_selector 'int (int **, const int *)'
| |-ParmVarDecl 0x20e46fad040 <col:30, col:43> col:43 invalid pval 'int **'
| `-ParmVarDecl 0x20e46fad0c0 <col:49, col:66> col:66 invalid it 'const int *'
|-FunctionDecl 0x20e46fad460 <line:51:1, line:52:49> line:51:5 invalid asn1_set_choice_selector 'int (int **, int, const int *)'
| |-ParmVarDecl 0x20e46fad270 <col:30, col:43> col:43 invalid pval 'int **'
| |-ParmVarDecl 0x20e46fad2f0 <col:49, col:53> col:53 value 'int'
| `-ParmVarDecl 0x20e46fad370 <line:52:30, col:47> col:47 invalid it 'const int *'
|-FunctionDecl 0x20e46fad698 <line:54:1, col:75> col:14 invalid asn1_get_field_ptr 'int **(int **, const int *)'
| |-ParmVarDecl 0x20e46fad538 <col:33, col:46> col:46 invalid pval 'int **'
| `-ParmVarDecl 0x20e46fad5b8 <col:52, col:73> col:73 invalid tt 'const int *'
|-FunctionDecl 0x20e46fad950 <line:56:1, line:57:45> line:56:22 invalid asn1_do_adb 'const int *(int **, const int *, int)'
| |-ParmVarDecl 0x20e46fad768 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x20e46fad7e8 <col:53, col:74> col:74 invalid tt 'const int *'
| `-ParmVarDecl 0x20e46fad868 <line:57:34, col:38> col:38 nullerr 'int'
|-FunctionDecl 0x20e46fadbd0 <line:59:1, col:64> col:5 invalid asn1_do_lock 'int (int **, int, const int *)'
| |-ParmVarDecl 0x20e46fada28 <col:18, col:31> col:31 invalid pval 'int **'
| |-ParmVarDecl 0x20e46fadaa8 <col:37, col:41> col:41 op 'int'
| `-ParmVarDecl 0x20e46fadb28 <col:45, col:62> col:62 invalid it 'const int *'
|-FunctionDecl 0x20e46faddf8 <line:61:1, col:58> col:6 invalid asn1_enc_init 'void (int **, const int *)'
| |-ParmVarDecl 0x20e46fadca8 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x20e46fadd28 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x20e46fab020 <line:62:1, col:58> col:6 invalid asn1_enc_free 'void (int **, const int *)'
| |-ParmVarDecl 0x20e46fadec8 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x20e46fadf48 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x20e46fab3d0 <line:63:1, line:64:41> line:63:5 invalid asn1_enc_restore 'int (int *, unsigned char **, int **, const int *)'
| |-ParmVarDecl 0x20e46fab0e8 <col:22, col:27> col:27 len 'int *'
| |-ParmVarDecl 0x20e46fab1c8 <col:32, col:48> col:48 out 'unsigned char **'
| |-ParmVarDecl 0x20e46fab250 <col:53, col:66> col:66 invalid pval 'int **'
| `-ParmVarDecl 0x20e46fab2d0 <line:64:22, col:39> col:39 invalid it 'const int *'
|-FunctionDecl 0x20e46fab730 <line:65:1, line:66:38> line:65:5 invalid asn1_enc_save 'int (int **, const unsigned char *, int, const int *)'
| |-ParmVarDecl 0x20e46fab4b0 <col:19, col:32> col:32 invalid pval 'int **'
| |-ParmVarDecl 0x20e46fab530 <col:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x20e46fab5b0 <col:63, col:67> col:67 inlen 'int'
| `-ParmVarDecl 0x20e46fab630 <line:66:19, col:36> col:36 invalid it 'const int *'
|-FunctionDecl 0x20e46fab9f8 <line:68:1, col:76> col:6 invalid asn1_item_embed_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x20e46fab810 <col:27, col:40> col:40 invalid pval 'int **'
| |-ParmVarDecl 0x20e46fab890 <col:46, col:63> col:63 invalid it 'const int *'
| `-ParmVarDecl 0x20e46fab910 <col:67, col:71> col:71 embed 'int'
|-FunctionDecl 0x20e46fabc70 <line:69:1, col:75> col:6 invalid asn1_primitive_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x20e46fabad0 <col:26, col:39> col:39 invalid pval 'int **'
| |-ParmVarDecl 0x20e46fabb50 <col:45, col:62> col:62 invalid it 'const int *'
| `-ParmVarDecl 0x20e46fabbd0 <col:66, col:70> col:70 embed 'int'
|-FunctionDecl 0x20e46fabe60 <line:70:1, col:67> col:6 invalid asn1_template_free 'void (int **, const int *)'
| |-ParmVarDecl 0x20e46fabd48 <col:25, col:38> col:38 invalid pval 'int **'
| `-ParmVarDecl 0x20e46fabdc8 <col:44, col:65> col:65 invalid tt 'const int *'
|-FunctionDecl 0x20e46fac1a0 <line:72:1, line:73:41> line:72:14 invalid c2i_ASN1_OBJECT 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x20e46fabf30 <col:30, col:44> col:44 invalid a 'int **'
| |-ParmVarDecl 0x20e46fac030 <col:47, col:69> col:69 pp 'const unsigned char **'
| `-ParmVarDecl 0x20e46fac0b0 <line:73:30, col:35> col:35 length 'long'
|-FunctionDecl 0x20e46fac3d0 <line:74:1, col:63> col:5 invalid i2c_ASN1_BIT_STRING 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x20e46fac270 <col:25, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x20e46fac2f8 <col:45, col:61> col:61 pp 'unsigned char **'
|-FunctionDecl 0x20e46fac650 <line:75:1, line:76:75> line:75:18 invalid c2i_ASN1_BIT_STRING 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x20e46fac4a0 <col:38, col:56> col:56 invalid a 'int **'
| |-ParmVarDecl 0x20e46fac528 <line:76:38, col:60> col:60 pp 'const unsigned char **'
| `-ParmVarDecl 0x20e46fac5a8 <col:64, col:69> col:69 length 'long'
|-FunctionDecl 0x20e46fac848 <line:77:1, col:57> col:5 invalid i2c_ASN1_INTEGER 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x20e46fac720 <col:22, col:36> col:36 invalid a 'int *'
| `-ParmVarDecl 0x20e46fac7a8 <col:39, col:55> col:55 pp 'unsigned char **'
|-FunctionDecl 0x20e46facac8 <line:78:1, line:79:43> line:78:15 invalid c2i_ASN1_INTEGER 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x20e46fac918 <col:32, col:47> col:47 invalid a 'int **'
| |-ParmVarDecl 0x20e46fac9a0 <col:50, col:72> col:72 pp 'const unsigned char **'
| `-ParmVarDecl 0x20e46faca20 <line:79:32, col:37> col:37 length 'long'
|-FunctionDecl 0x20e46face20 <line:82:1, col:79> col:5 invalid c2i_uint64_int 'int (int *, int *, const unsigned char **, long)'
| |-ParmVarDecl 0x20e46facb98 <col:20, col:30> col:30 invalid ret 'int *'
| |-ParmVarDecl 0x20e46facc18 <col:35, col:40> col:40 neg 'int *'
| |-ParmVarDecl 0x20e46facca0 <col:45, col:67> col:67 pp 'const unsigned char **'
| `-ParmVarDecl 0x20e46facd20 <col:71, col:76> col:76 len 'long'
|-FunctionDecl 0x20e46faf150 <line:83:1, col:57> col:5 invalid i2c_uint64_int 'int (unsigned char *, int, int)'
| |-ParmVarDecl 0x20e46facef8 <col:20, col:35> col:35 p 'unsigned char *'
| |-ParmVarDecl 0x20e46facf78 <col:38, col:47> col:47 invalid r 'int'
| `-ParmVarDecl 0x20e46faf060 <col:50, col:54> col:54 neg 'int'
|-FunctionDecl 0x20e46faf530 <.//openssl//file_jk/before\crypto\asn1\asn1_lib.c:16:1, line:17:36> line:16:12 used asn1_get_length 'int (const unsigned char **, int *, long *, long)' static
| |-ParmVarDecl 0x20e46faf228 <col:28, col:50> col:50 pp 'const unsigned char **'
| |-ParmVarDecl 0x20e46faf2a8 <col:54, col:59> col:59 inf 'int *'
| |-ParmVarDecl 0x20e46faf350 <col:64, col:70> col:70 rl 'long *'
| `-ParmVarDecl 0x20e46faf3d0 <line:17:28, col:33> col:33 max 'long'
|-FunctionDecl 0x20e46faf7a8 <line:18:1, col:59> col:13 used asn1_put_length 'void (unsigned char **, int)' static
| |-ParmVarDecl 0x20e46faf628 <col:29, col:45> col:45 pp 'unsigned char **'
| `-ParmVarDecl 0x20e46faf6a8 <col:49, col:53> col:53 length 'int'
|-FunctionDecl 0x20e46fafa20 <line:20:1, line:32:1> line:20:12 used _asn1_check_infinite_end 'int (const unsigned char **, long)' static
| |-ParmVarDecl 0x20e46faf890 <col:37, col:59> col:59 used p 'const unsigned char **'
| |-ParmVarDecl 0x20e46faf910 <col:62, col:67> col:67 used len 'long'
| `-CompoundStmt 0x20e46faa150 <line:21:1, line:32:1>
|   |-IfStmt 0x20e46faa0d0 <line:25:5, line:30:5> has_else
|   | |-BinaryOperator 0x20e46fafb60 <line:25:9, col:16> 'int' '<='
|   | | |-ImplicitCastExpr 0x20e46fafb30 <col:9> 'long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20e46fafae8 <col:9> 'long' lvalue ParmVar 0x20e46faf910 'len' 'long'
|   | | `-ImplicitCastExpr 0x20e46fafb48 <col:16> 'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x20e46fafb08 <col:16> 'int' 0
|   | |-ReturnStmt 0x20e46fafbc8 <line:26:9, col:18>
|   | | `-ParenExpr 0x20e46fafba8 <col:16, col:18> 'int'
|   | |   `-IntegerLiteral 0x20e46fafb80 <col:17> 'int' 1
|   | `-IfStmt 0x20e46faa0b8 <line:27:10, line:30:5>
|   |   |-BinaryOperator 0x20e46faffa8 <line:27:14, col:59> 'int' '&&'
|   |   | |-BinaryOperator 0x20e46fafe20 <col:14, col:41> 'int' '&&'
|   |   | | |-ParenExpr 0x20e46fafc70 <col:14, col:23> 'int'
|   |   | | | `-BinaryOperator 0x20e46fafc50 <col:15, col:22> 'int' '>='
|   |   | | |   |-ImplicitCastExpr 0x20e46fafc20 <col:15> 'long' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x20e46fafbd8 <col:15> 'long' lvalue ParmVar 0x20e46faf910 'len' 'long'
|   |   | | |   `-ImplicitCastExpr 0x20e46fafc38 <col:22> 'long' <IntegralCast>
|   |   | | |     `-IntegerLiteral 0x20e46fafbf8 <col:22> 'int' 2
|   |   | | `-ParenExpr 0x20e46fafe00 <col:28, col:41> 'int'
|   |   | |   `-BinaryOperator 0x20e46fafde0 <col:29, col:40> 'int' '=='
|   |   | |     |-ImplicitCastExpr 0x20e46fafdc8 <col:29, col:35> 'int' <IntegralCast>
|   |   | |     | `-ImplicitCastExpr 0x20e46fafdb0 <col:29, col:35> 'unsigned char' <LValueToRValue>
|   |   | |     |   `-ArraySubscriptExpr 0x20e46fafd68 <col:29, col:35> 'const unsigned char' lvalue
|   |   | |     |     |-ImplicitCastExpr 0x20e46fafd50 <col:29, col:32> 'const unsigned char *' <LValueToRValue>
|   |   | |     |     | `-ParenExpr 0x20e46fafd08 <col:29, col:32> 'const unsigned char *' lvalue
|   |   | |     |     |   `-UnaryOperator 0x20e46fafcf0 <col:30, col:31> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |   | |     |     |     `-ImplicitCastExpr 0x20e46fafcd8 <col:31> 'const unsigned char **' <LValueToRValue>
|   |   | |     |     |       `-DeclRefExpr 0x20e46fafcb8 <col:31> 'const unsigned char **' lvalue ParmVar 0x20e46faf890 'p' 'const unsigned char **'
|   |   | |     |     `-IntegerLiteral 0x20e46fafd28 <col:34> 'int' 0
|   |   | |     `-IntegerLiteral 0x20e46fafd88 <col:40> 'int' 0
|   |   | `-ParenExpr 0x20e46faff88 <col:46, col:59> 'int'
|   |   |   `-BinaryOperator 0x20e46faff68 <col:47, col:58> 'int' '=='
|   |   |     |-ImplicitCastExpr 0x20e46faff50 <col:47, col:53> 'int' <IntegralCast>
|   |   |     | `-ImplicitCastExpr 0x20e46faff38 <col:47, col:53> 'unsigned char' <LValueToRValue>
|   |   |     |   `-ArraySubscriptExpr 0x20e46fafef0 <col:47, col:53> 'const unsigned char' lvalue
|   |   |     |     |-ImplicitCastExpr 0x20e46fafed8 <col:47, col:50> 'const unsigned char *' <LValueToRValue>
|   |   |     |     | `-ParenExpr 0x20e46fafe90 <col:47, col:50> 'const unsigned char *' lvalue
|   |   |     |     |   `-UnaryOperator 0x20e46fafe78 <col:48, col:49> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |   |     |     |     `-ImplicitCastExpr 0x20e46fafe60 <col:49> 'const unsigned char **' <LValueToRValue>
|   |   |     |     |       `-DeclRefExpr 0x20e46fafe40 <col:49> 'const unsigned char **' lvalue ParmVar 0x20e46faf890 'p' 'const unsigned char **'
|   |   |     |     `-IntegerLiteral 0x20e46fafeb0 <col:52> 'int' 1
|   |   |     `-IntegerLiteral 0x20e46faff10 <col:58> 'int' 0
|   |   `-CompoundStmt 0x20e46faa098 <col:62, line:30:5>
|   |     |-CompoundAssignOperator 0x20e46faa010 <line:28:9, col:17> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |     | |-ParenExpr 0x20e46fb0018 <col:9, col:12> 'const unsigned char *' lvalue
|   |     | | `-UnaryOperator 0x20e46fb0000 <col:10, col:11> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |     | |   `-ImplicitCastExpr 0x20e46faffe8 <col:11> 'const unsigned char **' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x20e46faffc8 <col:11> 'const unsigned char **' lvalue ParmVar 0x20e46faf890 'p' 'const unsigned char **'
|   |     | `-IntegerLiteral 0x20e46fb0038 <col:17> 'int' 2
|   |     `-ReturnStmt 0x20e46faa088 <line:29:9, col:18>
|   |       `-ParenExpr 0x20e46faa068 <col:16, col:18> 'int'
|   |         `-IntegerLiteral 0x20e46faa040 <col:17> 'int' 1
|   `-ReturnStmt 0x20e46faa140 <line:31:5, col:14>
|     `-ParenExpr 0x20e46faa120 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x20e46faa0f8 <col:13> 'int' 0
|-FunctionDecl 0x20e46faa320 <line:34:1, line:37:1> line:34:5 ASN1_check_infinite_end 'int (unsigned char **, long)'
| |-ParmVarDecl 0x20e46faa190 <col:29, col:45> col:45 used p 'unsigned char **'
| |-ParmVarDecl 0x20e46faa210 <col:48, col:53> col:53 used len 'long'
| `-CompoundStmt 0x20e46faa548 <line:35:1, line:37:1>
|   `-ReturnStmt 0x20e46faa538 <line:36:5, col:67>
|     `-CallExpr 0x20e46faa4f0 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x20e46faa4d8 <col:12> 'int (*)(const unsigned char **, long)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x20e46faa3e8 <col:12> 'int (const unsigned char **, long)' Function 0x20e46fafa20 '_asn1_check_infinite_end' 'int (const unsigned char **, long)'
|       |-CStyleCastExpr 0x20e46faa460 <col:37, col:61> 'const unsigned char **' <NoOp>
|       | `-ImplicitCastExpr 0x20e46faa448 <col:61> 'unsigned char **' <LValueToRValue> part_of_explicit_cast
|       |   `-DeclRefExpr 0x20e46faa408 <col:61> 'unsigned char **' lvalue ParmVar 0x20e46faa190 'p' 'unsigned char **'
|       `-ImplicitCastExpr 0x20e46faa520 <col:64> 'long' <LValueToRValue>
|         `-DeclRefExpr 0x20e46faa488 <col:64> 'long' lvalue ParmVar 0x20e46faa210 'len' 'long'
|-FunctionDecl 0x20e46faa6d0 <line:39:1, line:42:1> line:39:5 ASN1_const_check_infinite_end 'int (const unsigned char **, long)'
| |-ParmVarDecl 0x20e46faa580 <col:35, col:57> col:57 used p 'const unsigned char **'
| |-ParmVarDecl 0x20e46faa600 <col:60, col:65> col:65 used len 'long'
| `-CompoundStmt 0x20e46faa880 <line:40:1, line:42:1>
|   `-ReturnStmt 0x20e46faa870 <line:41:5, col:43>
|     `-CallExpr 0x20e46faa810 <col:12, col:43> 'int'
|       |-ImplicitCastExpr 0x20e46faa7f8 <col:12> 'int (*)(const unsigned char **, long)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x20e46faa798 <col:12> 'int (const unsigned char **, long)' Function 0x20e46fafa20 '_asn1_check_infinite_end' 'int (const unsigned char **, long)'
|       |-ImplicitCastExpr 0x20e46faa840 <col:37> 'const unsigned char **' <LValueToRValue>
|       | `-DeclRefExpr 0x20e46faa7b8 <col:37> 'const unsigned char **' lvalue ParmVar 0x20e46faa580 'p' 'const unsigned char **'
|       `-ImplicitCastExpr 0x20e46faa858 <col:40> 'long' <LValueToRValue>
|         `-DeclRefExpr 0x20e46faa7d8 <col:40> 'long' lvalue ParmVar 0x20e46faa600 'len' 'long'
|-FunctionDecl 0x20e46faac40 <line:44:1, line:103:1> line:44:5 ASN1_get_object 'int (const unsigned char **, long *, int *, int *, long)'
| |-ParmVarDecl 0x20e46faa8b8 <col:21, col:43> col:43 used pp 'const unsigned char **'
| |-ParmVarDecl 0x20e46faa938 <col:47, col:53> col:53 used plength 'long *'
| |-ParmVarDecl 0x20e46faa9b8 <col:62, col:67> col:67 used ptag 'int *'
| |-ParmVarDecl 0x20e46faaa38 <line:45:21, col:26> col:26 used pclass 'int *'
| |-ParmVarDecl 0x20e46faaab8 <col:34, col:39> col:39 used omax 'long'
| `-CompoundStmt 0x20e46fa9b10 <line:46:1, line:103:1>
|   |-DeclStmt 0x20e46faae38 <line:47:5, col:15>
|   | |-VarDecl 0x20e46faad38 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x20e46faadb8 <col:5, col:12> col:12 used ret 'int'
|   |-DeclStmt 0x20e46faaed0 <line:48:5, col:11>
|   | `-VarDecl 0x20e46faae68 <col:5, col:10> col:10 used l 'long'
|   |-DeclStmt 0x20e46faafd0 <line:49:5, col:33>
|   | `-VarDecl 0x20e46faaf00 <col:5, col:31> col:26 used p 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x20e46faafb8 <col:30, col:31> 'const unsigned char *' <LValueToRValue>
|   |     `-UnaryOperator 0x20e46faafa0 <col:30, col:31> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x20e46faaf88 <col:31> 'const unsigned char **' <LValueToRValue>
|   |         `-DeclRefExpr 0x20e46faaf68 <col:31> 'const unsigned char **' lvalue ParmVar 0x20e46faa8b8 'pp' 'const unsigned char **'
|   |-DeclStmt 0x20e46fb01f8 <line:50:5, col:25>
|   | |-VarDecl 0x20e46fb0070 <col:5, col:9> col:9 used tag 'int'
|   | |-VarDecl 0x20e46fb00f0 <col:5, col:14> col:14 used xclass 'int'
|   | `-VarDecl 0x20e46fb0170 <col:5, col:22> col:22 used inf 'int'
|   |-DeclStmt 0x20e46fb02c8 <line:51:5, col:20>
|   | `-VarDecl 0x20e46fb0228 <col:5, col:16> col:10 used max 'long' cinit
|   |   `-ImplicitCastExpr 0x20e46fb02b0 <col:16> 'long' <LValueToRValue>
|   |     `-DeclRefExpr 0x20e46fb0290 <col:16> 'long' lvalue ParmVar 0x20e46faaab8 'omax' 'long'
|   |-IfStmt 0x20e46fb03b0 <line:53:5, line:54:14>
|   | |-UnaryOperator 0x20e46fb0330 <line:53:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x20e46fb0318 <col:10> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20e46fb02e0 <col:10> 'long' lvalue Var 0x20e46fb0228 'max' 'long'
|   | `-GotoStmt 0x20e46fb0398 <line:54:9, col:14> 'err' 0x20e46fb0348
|   |-IfStmt 0x20e46fa9140 <line:58:5, line:81:5> has_else
|   | |-OpaqueValueExpr 0x20e46fa9128 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x20e46fb0f90 <line:58:36, line:76:5>
|   | | |-UnaryOperator 0x20e46fb05b8 <line:59:9, col:10> 'const unsigned char *' postfix '++'
|   | | | `-DeclRefExpr 0x20e46fb0598 <col:9> 'const unsigned char *' lvalue Var 0x20e46faaf00 'p' 'const unsigned char *'
|   | | |-IfStmt 0x20e46fb0680 <line:60:9, line:61:18>
|   | | | |-BinaryOperator 0x20e46fb0648 <line:60:13, col:22> 'int' '=='
|   | | | | |-UnaryOperator 0x20e46fb05f0 <col:13, col:15> 'long' prefix '--'
|   | | | | | `-DeclRefExpr 0x20e46fb05d0 <col:15> 'long' lvalue Var 0x20e46fb0228 'max' 'long'
|   | | | | `-ImplicitCastExpr 0x20e46fb0630 <col:22> 'long' <IntegralCast>
|   | | | |   `-IntegerLiteral 0x20e46fb0608 <col:22> 'int' 0
|   | | | `-GotoStmt 0x20e46fb0668 <line:61:13, col:18> 'err' 0x20e46fb0348
|   | | |-BinaryOperator 0x20e46fb0710 <line:62:9, col:13> 'long' '='
|   | | | |-DeclRefExpr 0x20e46fb0698 <col:9> 'long' lvalue Var 0x20e46faae68 'l' 'long'
|   | | | `-ImplicitCastExpr 0x20e46fb06f8 <col:13> 'long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x20e46fb06d0 <col:13> 'int' 0
|   | | |-WhileStmt 0x20e46fb0c00 <line:63:9, line:70:9>
|   | | | |-BinaryOperator 0x20e46fb07d8 <line:63:16, col:21> 'int' '&'
|   | | | | |-ImplicitCastExpr 0x20e46fb07c0 <col:16, col:17> 'int' <IntegralCast>
|   | | | | | `-ImplicitCastExpr 0x20e46fb07a8 <col:16, col:17> 'unsigned char' <LValueToRValue>
|   | | | | |   `-UnaryOperator 0x20e46fb0768 <col:16, col:17> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | | | | |     `-ImplicitCastExpr 0x20e46fb0750 <col:17> 'const unsigned char *' <LValueToRValue>
|   | | | | |       `-DeclRefExpr 0x20e46fb0730 <col:17> 'const unsigned char *' lvalue Var 0x20e46faaf00 'p' 'const unsigned char *'
|   | | | | `-IntegerLiteral 0x20e46fb0780 <col:21> 'int' 128
|   | | | `-CompoundStmt 0x20e46fb0bd0 <col:27, line:70:9>
|   | | |   |-CompoundAssignOperator 0x20e46fb0858 <line:64:13, col:19> 'long' '<<=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | |   | |-DeclRefExpr 0x20e46fb07f8 <col:13> 'long' lvalue Var 0x20e46faae68 'l' 'long'
|   | | |   | `-IntegerLiteral 0x20e46fb0818 <col:19> 'long' 7
|   | | |   |-CompoundAssignOperator 0x20e46fb09a8 <line:65:13, col:27> 'long' '|=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | |   | |-DeclRefExpr 0x20e46fb0888 <col:13> 'long' lvalue Var 0x20e46faae68 'l' 'long'
|   | | |   | `-ImplicitCastExpr 0x20e46fb0990 <col:18, col:27> 'long' <IntegralCast>
|   | | |   |   `-BinaryOperator 0x20e46fb0970 <col:18, col:27> 'int' '&'
|   | | |   |     |-ImplicitCastExpr 0x20e46fb0958 <col:18, col:23> 'int' <IntegralCast>
|   | | |   |     | `-ImplicitCastExpr 0x20e46fb0940 <col:18, col:23> 'unsigned char' <LValueToRValue>
|   | | |   |     |   `-UnaryOperator 0x20e46fb0900 <col:18, col:23> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | | |   |     |     `-ParenExpr 0x20e46fb08e0 <col:19, col:23> 'const unsigned char *'
|   | | |   |     |       `-UnaryOperator 0x20e46fb08c8 <col:20, col:21> 'const unsigned char *' postfix '++'
|   | | |   |     |         `-DeclRefExpr 0x20e46fb08a8 <col:20> 'const unsigned char *' lvalue Var 0x20e46faaf00 'p' 'const unsigned char *'
|   | | |   |     `-IntegerLiteral 0x20e46fb0918 <col:27> 'int' 127
|   | | |   |-IfStmt 0x20e46fb0a88 <line:66:13, line:67:22>
|   | | |   | |-BinaryOperator 0x20e46fb0a50 <line:66:17, col:26> 'int' '=='
|   | | |   | | |-UnaryOperator 0x20e46fb09f8 <col:17, col:19> 'long' prefix '--'
|   | | |   | | | `-DeclRefExpr 0x20e46fb09d8 <col:19> 'long' lvalue Var 0x20e46fb0228 'max' 'long'
|   | | |   | | `-ImplicitCastExpr 0x20e46fb0a38 <col:26> 'long' <IntegralCast>
|   | | |   | |   `-IntegerLiteral 0x20e46fb0a10 <col:26> 'int' 0
|   | | |   | `-GotoStmt 0x20e46fb0a70 <line:67:17, col:22> 'err' 0x20e46fb0348
|   | | |   `-IfStmt 0x20e46fb0bb8 <line:68:13, line:69:22>
|   | | |     |-BinaryOperator 0x20e46fb0b80 <line:68:17, col:35> 'int' '>'
|   | | |     | |-ImplicitCastExpr 0x20e46fb0b50 <col:17> 'long' <LValueToRValue>
|   | | |     | | `-DeclRefExpr 0x20e46fb0aa0 <col:17> 'long' lvalue Var 0x20e46faae68 'l' 'long'
|   | | |     | `-ImplicitCastExpr 0x20e46fb0b68 <col:21, col:35> 'long' <IntegralCast>
|   | | |     |   `-ParenExpr 0x20e46fb0b30 <col:21, col:35> 'int'
|   | | |     |     `-BinaryOperator 0x20e46fb0b10 <<built-in>:30:21, .//openssl//file_jk/before\crypto\asn1\asn1_lib.c:68:33> 'int' '>>'
|   | | |     |       |-IntegerLiteral 0x20e46fb0ac0 <<built-in>:30:21> 'int' 2147483647
|   | | |     |       `-IntegerLiteral 0x20e46fb0ae8 <.//openssl//file_jk/before\crypto\asn1\asn1_lib.c:68:33> 'long' 7
|   | | |     `-GotoStmt 0x20e46fb0ba0 <line:69:17, col:22> 'err' 0x20e46fb0348
|   | | |-CompoundAssignOperator 0x20e46fb0c78 <line:71:9, col:15> 'long' '<<=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | | |-DeclRefExpr 0x20e46fb0c18 <col:9> 'long' lvalue Var 0x20e46faae68 'l' 'long'
|   | | | `-IntegerLiteral 0x20e46fb0c38 <col:15> 'long' 7
|   | | |-CompoundAssignOperator 0x20e46fb0dc8 <line:72:9, col:23> 'long' '|=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | | |-DeclRefExpr 0x20e46fb0ca8 <col:9> 'long' lvalue Var 0x20e46faae68 'l' 'long'
|   | | | `-ImplicitCastExpr 0x20e46fb0db0 <col:14, col:23> 'long' <IntegralCast>
|   | | |   `-BinaryOperator 0x20e46fb0d90 <col:14, col:23> 'int' '&'
|   | | |     |-ImplicitCastExpr 0x20e46fb0d78 <col:14, col:19> 'int' <IntegralCast>
|   | | |     | `-ImplicitCastExpr 0x20e46fb0d60 <col:14, col:19> 'unsigned char' <LValueToRValue>
|   | | |     |   `-UnaryOperator 0x20e46fb0d20 <col:14, col:19> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | | |     |     `-ParenExpr 0x20e46fb0d00 <col:15, col:19> 'const unsigned char *'
|   | | |     |       `-UnaryOperator 0x20e46fb0ce8 <col:16, col:17> 'const unsigned char *' postfix '++'
|   | | |     |         `-DeclRefExpr 0x20e46fb0cc8 <col:16> 'const unsigned char *' lvalue Var 0x20e46faaf00 'p' 'const unsigned char *'
|   | | |     `-IntegerLiteral 0x20e46fb0d38 <col:23> 'int' 127
|   | | |-BinaryOperator 0x20e46fb0ea8 <line:73:9, col:20> 'int' '='
|   | | | |-DeclRefExpr 0x20e46fb0df8 <col:9> 'int' lvalue Var 0x20e46fb0070 'tag' 'int'
|   | | | `-CStyleCastExpr 0x20e46fb0e80 <col:15, col:20> 'int' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x20e46fb0e68 <col:20> 'long' <LValueToRValue> part_of_explicit_cast
|   | | |     `-DeclRefExpr 0x20e46fb0e30 <col:20> 'long' lvalue Var 0x20e46faae68 'l' 'long'
|   | | `-IfStmt 0x20e46fb0f78 <line:74:9, line:75:18>
|   | |   |-BinaryOperator 0x20e46fb0f40 <line:74:13, col:22> 'int' '=='
|   | |   | |-UnaryOperator 0x20e46fb0ee8 <col:13, col:15> 'long' prefix '--'
|   | |   | | `-DeclRefExpr 0x20e46fb0ec8 <col:15> 'long' lvalue Var 0x20e46fb0228 'max' 'long'
|   | |   | `-ImplicitCastExpr 0x20e46fb0f28 <col:22> 'long' <IntegralCast>
|   | |   |   `-IntegerLiteral 0x20e46fb0f00 <col:22> 'int' 0
|   | |   `-GotoStmt 0x20e46fb0f60 <line:75:13, col:18> 'err' 0x20e46fb0348
|   | `-CompoundStmt 0x20e46fa9100 <line:76:12, line:81:5>
|   |   |-BinaryOperator 0x20e46fb1038 <line:77:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x20e46fb0fe0 <col:9> 'int' lvalue Var 0x20e46fb0070 'tag' 'int'
|   |   | `-ImplicitCastExpr 0x20e46fb1020 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x20e46fb1000 <col:15> 'int' lvalue Var 0x20e46faad38 'i' 'int'
|   |   |-UnaryOperator 0x20e46fa9020 <line:78:9, col:10> 'const unsigned char *' postfix '++'
|   |   | `-DeclRefExpr 0x20e46fa9000 <col:9> 'const unsigned char *' lvalue Var 0x20e46faaf00 'p' 'const unsigned char *'
|   |   `-IfStmt 0x20e46fa90e8 <line:79:9, line:80:18>
|   |     |-BinaryOperator 0x20e46fa90b0 <line:79:13, col:22> 'int' '=='
|   |     | |-UnaryOperator 0x20e46fa9058 <col:13, col:15> 'long' prefix '--'
|   |     | | `-DeclRefExpr 0x20e46fa9038 <col:15> 'long' lvalue Var 0x20e46fb0228 'max' 'long'
|   |     | `-ImplicitCastExpr 0x20e46fa9098 <col:22> 'long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x20e46fa9070 <col:22> 'int' 0
|   |     `-GotoStmt 0x20e46fa90d0 <line:80:13, col:18> 'err' 0x20e46fb0348
|   |-BinaryOperator 0x20e46fa91f0 <line:82:5, col:13> 'int' '='
|   | |-UnaryOperator 0x20e46fa91a0 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x20e46fa9188 <col:6> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20e46fa9168 <col:6> 'int *' lvalue ParmVar 0x20e46faa9b8 'ptag' 'int *'
|   | `-ImplicitCastExpr 0x20e46fa91d8 <col:13> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x20e46fa91b8 <col:13> 'int' lvalue Var 0x20e46fb0070 'tag' 'int'
|   |-BinaryOperator 0x20e46fa9298 <line:83:5, col:15> 'int' '='
|   | |-UnaryOperator 0x20e46fa9248 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x20e46fa9230 <col:6> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20e46fa9210 <col:6> 'int *' lvalue ParmVar 0x20e46faaa38 'pclass' 'int *'
|   | `-ImplicitCastExpr 0x20e46fa9280 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x20e46fa9260 <col:15> 'int' lvalue Var 0x20e46fb00f0 'xclass' 'int'
|   |-IfStmt 0x20e46fa9480 <line:84:5, line:85:14>
|   | |-UnaryOperator 0x20e46fa9450 <line:84:9, col:48> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x20e46fa93e0 <col:10, col:48> 'int'
|   | |   |-ImplicitCastExpr 0x20e46fa93c8 <col:10> 'int (*)(const unsigned char **, int *, long *, long)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x20e46fa92b8 <col:10> 'int (const unsigned char **, int *, long *, long)' Function 0x20e46faf530 'asn1_get_length' 'int (const unsigned char **, int *, long *, long)'
|   | |   |-UnaryOperator 0x20e46fa92f8 <col:26, col:27> 'const unsigned char **' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x20e46fa92d8 <col:27> 'const unsigned char *' lvalue Var 0x20e46faaf00 'p' 'const unsigned char *'
|   | |   |-UnaryOperator 0x20e46fa9348 <col:30, col:31> 'int *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x20e46fa9310 <col:31> 'int' lvalue Var 0x20e46fb0170 'inf' 'int'
|   | |   |-ImplicitCastExpr 0x20e46fa9420 <col:36> 'long *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x20e46fa9360 <col:36> 'long *' lvalue ParmVar 0x20e46faa938 'plength' 'long *'
|   | |   `-ImplicitCastExpr 0x20e46fa9438 <col:45> 'long' <LValueToRValue>
|   | |     `-DeclRefExpr 0x20e46fa9380 <col:45> 'long' lvalue Var 0x20e46fb0228 'max' 'long'
|   | `-GotoStmt 0x20e46fa9468 <line:85:9, col:14> 'err' 0x20e46fb0348
|   |-IfStmt 0x20e46fa9508 <line:87:5, line:88:14>
|   | |-OpaqueValueExpr 0x20e46fa94f0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x20e46fa94d8 <col:9, col:14> 'err' 0x20e46fb0348
|   |-IfStmt 0x20e46fa98f8 <line:90:5, line:97:5>
|   | |-BinaryOperator 0x20e46fa9710 <line:90:9, col:37> 'int' '>'
|   | | |-ImplicitCastExpr 0x20e46fa96f8 <col:9, col:10> 'long long' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x20e46fa96e0 <col:9, col:10> 'long' <LValueToRValue>
|   | | |   `-UnaryOperator 0x20e46fa9558 <col:9, col:10> 'long' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x20e46fa9540 <col:10> 'long *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x20e46fa9520 <col:10> 'long *' lvalue ParmVar 0x20e46faa938 'plength' 'long *'
|   | | `-ParenExpr 0x20e46fa96c0 <col:20, col:37> 'long long'
|   | |   `-BinaryOperator 0x20e46fa96a0 <col:21, col:36> 'long long' '-'
|   | |     |-ImplicitCastExpr 0x20e46fa9688 <col:21> 'long long' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x20e46fa9670 <col:21> 'long' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x20e46fa9570 <col:21> 'long' lvalue ParmVar 0x20e46faaab8 'omax' 'long'
|   | |     `-ParenExpr 0x20e46fa9650 <col:28, col:36> 'long long'
|   | |       `-BinaryOperator 0x20e46fa9630 <col:29, col:34> 'long long' '-'
|   | |         |-ImplicitCastExpr 0x20e46fa9600 <col:29> 'const unsigned char *' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x20e46fa9590 <col:29> 'const unsigned char *' lvalue Var 0x20e46faaf00 'p' 'const unsigned char *'
|   | |         `-ImplicitCastExpr 0x20e46fa9618 <col:33, col:34> 'const unsigned char *' <LValueToRValue>
|   | |           `-UnaryOperator 0x20e46fa95e8 <col:33, col:34> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | |             `-ImplicitCastExpr 0x20e46fa95d0 <col:34> 'const unsigned char **' <LValueToRValue>
|   | |               `-DeclRefExpr 0x20e46fa95b0 <col:34> 'const unsigned char **' lvalue ParmVar 0x20e46faa8b8 'pp' 'const unsigned char **'
|   | `-CompoundStmt 0x20e46fa98e0 <col:40, line:97:5>
|   |   `-CompoundAssignOperator 0x20e46fa98b0 <line:96:9, col:16> 'int' '|=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x20e46fa9868 <col:9> 'int' lvalue Var 0x20e46faadb8 'ret' 'int'
|   |     `-IntegerLiteral 0x20e46fa9888 <col:16> 'int' 128
|   |-BinaryOperator 0x20e46fa9998 <line:98:5, col:11> 'const unsigned char *' '='
|   | |-UnaryOperator 0x20e46fa9948 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x20e46fa9930 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20e46fa9910 <col:6> 'const unsigned char **' lvalue ParmVar 0x20e46faa8b8 'pp' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x20e46fa9980 <col:11> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x20e46fa9960 <col:11> 'const unsigned char *' lvalue Var 0x20e46faaf00 'p' 'const unsigned char *'
|   |-ReturnStmt 0x20e46fa9a68 <line:99:5, col:22>
|   | `-ParenExpr 0x20e46fa9a48 <col:12, col:22> 'int'
|   |   `-BinaryOperator 0x20e46fa9a28 <col:13, col:19> 'int' '|'
|   |     |-ImplicitCastExpr 0x20e46fa99f8 <col:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x20e46fa99b8 <col:13> 'int' lvalue Var 0x20e46faadb8 'ret' 'int'
|   |     `-ImplicitCastExpr 0x20e46fa9a10 <col:19> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x20e46fa99d8 <col:19> 'int' lvalue Var 0x20e46fb0170 'inf' 'int'
|   |-LabelStmt 0x20e46fa9aa0 <line:100:2, col:5> 'err'
|   | `-NullStmt 0x20e46fa9a98 <col:5>
|   `-ReturnStmt 0x20e46fa9b00 <line:102:5, col:17>
|     `-ParenExpr 0x20e46fa9ae0 <col:12, col:17> 'int'
|       `-IntegerLiteral 0x20e46fa9ab8 <col:13> 'int' 128
|-FunctionDecl 0x20e46fa9e50 prev 0x20e46faf530 <line:105:1, line:143:1> line:105:12 used asn1_get_length 'int (const unsigned char **, int *, long *, long)' static
| |-ParmVarDecl 0x20e46fa9bc0 <col:28, col:50> col:50 used pp 'const unsigned char **'
| |-ParmVarDecl 0x20e46fa9c40 <col:54, col:59> col:59 used inf 'int *'
| |-ParmVarDecl 0x20e46fa9cc0 <col:64, col:70> col:70 used rl 'long *'
| |-ParmVarDecl 0x20e46fa9d40 <line:106:28, col:33> col:33 used max 'long'
| `-CompoundStmt 0x20e46fb12b8 <line:107:1, line:143:1>
|   |-DeclStmt 0x20e46fb60d0 <line:108:5, col:33>
|   | `-VarDecl 0x20e46fa9f28 <col:5, col:31> col:26 used p 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x20e46fa9fe0 <col:30, col:31> 'const unsigned char *' <LValueToRValue>
|   |     `-UnaryOperator 0x20e46fa9fc8 <col:30, col:31> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x20e46fa9fb0 <col:31> 'const unsigned char **' <LValueToRValue>
|   |         `-DeclRefExpr 0x20e46fa9f90 <col:31> 'const unsigned char **' lvalue ParmVar 0x20e46fa9bc0 'pp' 'const unsigned char **'
|   |-DeclStmt 0x20e46fb61a8 <line:109:5, col:26>
|   | `-VarDecl 0x20e46fb6100 <col:5, col:25> col:19 used ret 'unsigned long' cinit
|   |   `-ImplicitCastExpr 0x20e46fb6190 <col:25> 'unsigned long' <IntegralCast>
|   |     `-IntegerLiteral 0x20e46fb6168 <col:25> 'int' 0
|   |-DeclStmt 0x20e46fb6240 <line:110:5, col:20>
|   | `-VarDecl 0x20e46fb61d8 <col:5, col:19> col:19 used i 'unsigned long'
|   |-IfStmt 0x20e46fb6328 <line:112:5, line:113:16>
|   | |-BinaryOperator 0x20e46fb62d0 <line:112:9, col:17> 'int' '<'
|   | | |-UnaryOperator 0x20e46fb6278 <col:9, col:12> 'long' postfix '--'
|   | | | `-DeclRefExpr 0x20e46fb6258 <col:9> 'long' lvalue ParmVar 0x20e46fa9d40 'max' 'long'
|   | | `-ImplicitCastExpr 0x20e46fb62b8 <col:17> 'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x20e46fb6290 <col:17> 'int' 1
|   | `-ReturnStmt 0x20e46fb6318 <line:113:9, col:16>
|   |   `-IntegerLiteral 0x20e46fb62f0 <col:16> 'int' 0
|   |-IfStmt 0x20e46fb7018 <line:114:5, line:137:5> has_else
|   | |-BinaryOperator 0x20e46fb6400 <line:114:9, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x20e46fb63e8 <col:9, col:10> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x20e46fb63d0 <col:9, col:10> 'unsigned char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x20e46fb6390 <col:9, col:10> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x20e46fb6378 <col:10> 'const unsigned char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x20e46fb6340 <col:10> 'const unsigned char *' lvalue Var 0x20e46fa9f28 'p' 'const unsigned char *'
|   | | `-IntegerLiteral 0x20e46fb63a8 <col:15> 'int' 128
|   | |-CompoundStmt 0x20e46fb6588 <col:21, line:118:5>
|   | | |-BinaryOperator 0x20e46fb6498 <line:115:9, col:16> 'int' '='
|   | | | |-UnaryOperator 0x20e46fb6458 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   | | | | `-ImplicitCastExpr 0x20e46fb6440 <col:10> 'int *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x20e46fb6420 <col:10> 'int *' lvalue ParmVar 0x20e46fa9c40 'inf' 'int *'
|   | | | `-IntegerLiteral 0x20e46fb6470 <col:16> 'int' 1
|   | | |-BinaryOperator 0x20e46fb6530 <line:116:9, col:15> 'unsigned long' '='
|   | | | |-DeclRefExpr 0x20e46fb64b8 <col:9> 'unsigned long' lvalue Var 0x20e46fb6100 'ret' 'unsigned long'
|   | | | `-ImplicitCastExpr 0x20e46fb6518 <col:15> 'unsigned long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x20e46fb64f0 <col:15> 'int' 0
|   | | `-UnaryOperator 0x20e46fb6570 <line:117:9, col:10> 'const unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x20e46fb6550 <col:9> 'const unsigned char *' lvalue Var 0x20e46fa9f28 'p' 'const unsigned char *'
|   | `-CompoundStmt 0x20e46fb6ff0 <line:118:12, line:137:5>
|   |   |-BinaryOperator 0x20e46fb6628 <line:119:9, col:16> 'int' '='
|   |   | |-UnaryOperator 0x20e46fb65e8 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x20e46fb65d0 <col:10> 'int *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x20e46fb65b0 <col:10> 'int *' lvalue ParmVar 0x20e46fa9c40 'inf' 'int *'
|   |   | `-IntegerLiteral 0x20e46fb6600 <col:16> 'int' 0
|   |   |-BinaryOperator 0x20e46fb6788 <line:120:9, col:18> 'unsigned long' '='
|   |   | |-DeclRefExpr 0x20e46fb6648 <col:9> 'unsigned long' lvalue Var 0x20e46fb61d8 'i' 'unsigned long'
|   |   | `-ImplicitCastExpr 0x20e46fb6770 <col:13, col:18> 'unsigned long' <IntegralCast>
|   |   |   `-BinaryOperator 0x20e46fb6750 <col:13, col:18> 'int' '&'
|   |   |     |-ImplicitCastExpr 0x20e46fb6738 <col:13, col:14> 'int' <IntegralCast>
|   |   |     | `-ImplicitCastExpr 0x20e46fb6720 <col:13, col:14> 'unsigned char' <LValueToRValue>
|   |   |     |   `-UnaryOperator 0x20e46fb66e0 <col:13, col:14> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     |     `-ImplicitCastExpr 0x20e46fb66c8 <col:14> 'const unsigned char *' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x20e46fb66a8 <col:14> 'const unsigned char *' lvalue Var 0x20e46fa9f28 'p' 'const unsigned char *'
|   |   |     `-IntegerLiteral 0x20e46fb66f8 <col:18> 'int' 127
|   |   `-IfStmt 0x20e46fb6fc8 <line:121:9, line:136:19> has_else
|   |     |-BinaryOperator 0x20e46fb6870 <line:121:13, col:22> 'int' '&'
|   |     | |-ImplicitCastExpr 0x20e46fb6858 <col:13, col:18> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x20e46fb6840 <col:13, col:18> 'unsigned char' <LValueToRValue>
|   |     | |   `-UnaryOperator 0x20e46fb6800 <col:13, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | |     `-ParenExpr 0x20e46fb67e0 <col:14, col:18> 'const unsigned char *'
|   |     | |       `-UnaryOperator 0x20e46fb67c8 <col:15, col:16> 'const unsigned char *' postfix '++'
|   |     | |         `-DeclRefExpr 0x20e46fb67a8 <col:15> 'const unsigned char *' lvalue Var 0x20e46fa9f28 'p' 'const unsigned char *'
|   |     | `-IntegerLiteral 0x20e46fb6818 <col:22> 'int' 128
|   |     |-CompoundStmt 0x20e46fb6f20 <col:28, line:135:9>
|   |     | |-IfStmt 0x20e46fb69f8 <line:122:13, line:123:24>
|   |     | | |-BinaryOperator 0x20e46fb69a0 <line:122:17, col:33> 'int' '<'
|   |     | | | |-ImplicitCastExpr 0x20e46fb6988 <col:17> 'long' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x20e46fb6890 <col:17> 'long' lvalue ParmVar 0x20e46fa9d40 'max' 'long'
|   |     | | | `-BinaryOperator 0x20e46fb6968 <col:23, col:33> 'long' '+'
|   |     | | |   |-CStyleCastExpr 0x20e46fb6900 <col:23, col:29> 'long' <IntegralCast>
|   |     | | |   | `-ImplicitCastExpr 0x20e46fb68e8 <col:29> 'unsigned long' <LValueToRValue> part_of_explicit_cast
|   |     | | |   |   `-DeclRefExpr 0x20e46fb68b0 <col:29> 'unsigned long' lvalue Var 0x20e46fb61d8 'i' 'unsigned long'
|   |     | | |   `-ImplicitCastExpr 0x20e46fb6950 <col:33> 'long' <IntegralCast>
|   |     | | |     `-IntegerLiteral 0x20e46fb6928 <col:33> 'int' 1
|   |     | | `-ReturnStmt 0x20e46fb69e8 <line:123:17, col:24>
|   |     | |   `-IntegerLiteral 0x20e46fb69c0 <col:24> 'int' 0
|   |     | |-WhileStmt 0x20e46fb6bc0 <line:125:13, line:128:13>
|   |     | | |-BinaryOperator 0x20e46fb6b10 <line:125:20, col:31> 'int' '&&'
|   |     | | | |-ImplicitCastExpr 0x20e46fb6af8 <col:20> 'unsigned long' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x20e46fb6a10 <col:20> 'unsigned long' lvalue Var 0x20e46fb61d8 'i' 'unsigned long'
|   |     | | | `-BinaryOperator 0x20e46fb6ad8 <col:25, col:31> 'int' '=='
|   |     | | |   |-ImplicitCastExpr 0x20e46fb6ac0 <col:25, col:26> 'int' <IntegralCast>
|   |     | | |   | `-ImplicitCastExpr 0x20e46fb6aa8 <col:25, col:26> 'unsigned char' <LValueToRValue>
|   |     | | |   |   `-UnaryOperator 0x20e46fb6a68 <col:25, col:26> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | | |   |     `-ImplicitCastExpr 0x20e46fb6a50 <col:26> 'const unsigned char *' <LValueToRValue>
|   |     | | |   |       `-DeclRefExpr 0x20e46fb6a30 <col:26> 'const unsigned char *' lvalue Var 0x20e46fa9f28 'p' 'const unsigned char *'
|   |     | | |   `-IntegerLiteral 0x20e46fb6a80 <col:31> 'int' 0
|   |     | | `-CompoundStmt 0x20e46fb6ba0 <col:34, line:128:13>
|   |     | |   |-UnaryOperator 0x20e46fb6b50 <line:126:17, col:18> 'const unsigned char *' postfix '++'
|   |     | |   | `-DeclRefExpr 0x20e46fb6b30 <col:17> 'const unsigned char *' lvalue Var 0x20e46fa9f28 'p' 'const unsigned char *'
|   |     | |   `-UnaryOperator 0x20e46fb6b88 <line:127:17, col:18> 'unsigned long' postfix '--'
|   |     | |     `-DeclRefExpr 0x20e46fb6b68 <col:17> 'unsigned long' lvalue Var 0x20e46fb61d8 'i' 'unsigned long'
|   |     | |-IfStmt 0x20e46fb6cb8 <line:129:13, line:130:24>
|   |     | | |-BinaryOperator 0x20e46fb6c60 <line:129:17, col:32> 'int' '>'
|   |     | | | |-ImplicitCastExpr 0x20e46fb6c48 <col:17> 'unsigned long long' <IntegralCast>
|   |     | | | | `-ImplicitCastExpr 0x20e46fb6c30 <col:17> 'unsigned long' <LValueToRValue>
|   |     | | | |   `-DeclRefExpr 0x20e46fb6bd8 <col:17> 'unsigned long' lvalue Var 0x20e46fb61d8 'i' 'unsigned long'
|   |     | | | `-UnaryExprOrTypeTraitExpr 0x20e46fb6c10 <col:21, col:32> 'unsigned long long' sizeof 'long'
|   |     | | `-ReturnStmt 0x20e46fb6ca8 <line:130:17, col:24>
|   |     | |   `-IntegerLiteral 0x20e46fb6c80 <col:24> 'int' 0
|   |     | `-WhileStmt 0x20e46fb6f08 <line:131:13, line:134:13>
|   |     |   |-BinaryOperator 0x20e46fb6d48 <line:131:20, col:26> 'int' '>'
|   |     |   | |-UnaryOperator 0x20e46fb6cf0 <col:20, col:21> 'unsigned long' postfix '--'
|   |     |   | | `-DeclRefExpr 0x20e46fb6cd0 <col:20> 'unsigned long' lvalue Var 0x20e46fb61d8 'i' 'unsigned long'
|   |     |   | `-ImplicitCastExpr 0x20e46fb6d30 <col:26> 'unsigned long' <IntegralCast>
|   |     |   |   `-IntegerLiteral 0x20e46fb6d08 <col:26> 'int' 0
|   |     |   `-CompoundStmt 0x20e46fb6ee8 <col:29, line:134:13>
|   |     |     |-CompoundAssignOperator 0x20e46fb6dc8 <line:132:17, col:25> 'unsigned long' '<<=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |     |     | |-DeclRefExpr 0x20e46fb6d68 <col:17> 'unsigned long' lvalue Var 0x20e46fb6100 'ret' 'unsigned long'
|   |     |     | `-IntegerLiteral 0x20e46fb6d88 <col:25> 'long' 8
|   |     |     `-CompoundAssignOperator 0x20e46fb6eb8 <line:133:17, col:29> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |     |       |-DeclRefExpr 0x20e46fb6df8 <col:17> 'unsigned long' lvalue Var 0x20e46fb6100 'ret' 'unsigned long'
|   |     |       `-ImplicitCastExpr 0x20e46fb6ea0 <col:24, col:29> 'unsigned long' <IntegralCast>
|   |     |         `-ImplicitCastExpr 0x20e46fb6e88 <col:24, col:29> 'unsigned char' <LValueToRValue>
|   |     |           `-UnaryOperator 0x20e46fb6e70 <col:24, col:29> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     |             `-ParenExpr 0x20e46fb6e50 <col:25, col:29> 'const unsigned char *'
|   |     |               `-UnaryOperator 0x20e46fb6e38 <col:26, col:27> 'const unsigned char *' postfix '++'
|   |     |                 `-DeclRefExpr 0x20e46fb6e18 <col:26> 'const unsigned char *' lvalue Var 0x20e46fa9f28 'p' 'const unsigned char *'
|   |     `-BinaryOperator 0x20e46fb6fa8 <line:136:13, col:19> 'unsigned long' '='
|   |       |-DeclRefExpr 0x20e46fb6f50 <col:13> 'unsigned long' lvalue Var 0x20e46fb6100 'ret' 'unsigned long'
|   |       `-ImplicitCastExpr 0x20e46fb6f90 <col:19> 'unsigned long' <LValueToRValue>
|   |         `-DeclRefExpr 0x20e46fb6f70 <col:19> 'unsigned long' lvalue Var 0x20e46fb61d8 'i' 'unsigned long'
|   |-IfStmt 0x20e46fb10d8 <line:138:5, line:139:16>
|   | |-BinaryOperator 0x20e46fb1080 <line:138:9, <built-in>:31:22> 'int' '>'
|   | | |-ImplicitCastExpr 0x20e46fb7088 <.//openssl//file_jk/before\crypto\asn1\asn1_lib.c:138:9> 'unsigned long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20e46fb7040 <col:9> 'unsigned long' lvalue Var 0x20e46fb6100 'ret' 'unsigned long'
|   | | `-ImplicitCastExpr 0x20e46fb70a0 <<built-in>:31:22> 'unsigned long' <IntegralCast>
|   | |   `-IntegerLiteral 0x20e46fb7060 <col:22> 'long' 2147483647
|   | `-ReturnStmt 0x20e46fb10c8 <.//openssl//file_jk/before\crypto\asn1\asn1_lib.c:139:9, col:16>
|   |   `-IntegerLiteral 0x20e46fb10a0 <col:16> 'int' 0
|   |-BinaryOperator 0x20e46fb1178 <line:140:5, col:11> 'const unsigned char *' '='
|   | |-UnaryOperator 0x20e46fb1128 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x20e46fb1110 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20e46fb10f0 <col:6> 'const unsigned char **' lvalue ParmVar 0x20e46fa9bc0 'pp' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x20e46fb1160 <col:11> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x20e46fb1140 <col:11> 'const unsigned char *' lvalue Var 0x20e46fa9f28 'p' 'const unsigned char *'
|   |-BinaryOperator 0x20e46fb1260 <line:141:5, col:17> 'long' '='
|   | |-UnaryOperator 0x20e46fb11d0 <col:5, col:6> 'long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x20e46fb11b8 <col:6> 'long *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20e46fb1198 <col:6> 'long *' lvalue ParmVar 0x20e46fa9cc0 'rl' 'long *'
|   | `-CStyleCastExpr 0x20e46fb1238 <col:11, col:17> 'long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x20e46fb1220 <col:17> 'unsigned long' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x20e46fb11e8 <col:17> 'unsigned long' lvalue Var 0x20e46fb6100 'ret' 'unsigned long'
|   `-ReturnStmt 0x20e46fb12a8 <line:142:5, col:12>
|     `-IntegerLiteral 0x20e46fb1280 <col:12> 'int' 1
|-FunctionDecl 0x20e46fb16a8 <line:148:1, line:176:1> line:148:6 ASN1_put_object 'void (unsigned char **, int, int, int, int)'
| |-ParmVarDecl 0x20e46fb1330 <col:22, col:38> col:38 used pp 'unsigned char **'
| |-ParmVarDecl 0x20e46fb13b0 <col:42, col:46> col:46 used constructed 'int'
| |-ParmVarDecl 0x20e46fb1430 <col:59, col:63> col:63 used length 'int'
| |-ParmVarDecl 0x20e46fb14b0 <col:71, col:75> col:75 used tag 'int'
| |-ParmVarDecl 0x20e46fb1530 <line:149:22, col:26> col:26 used xclass 'int'
| `-CompoundStmt 0x20e46fb7888 <line:150:1, line:176:1>
|   |-DeclStmt 0x20e46fb1870 <line:151:5, col:27>
|   | `-VarDecl 0x20e46fb17a0 <col:5, col:25> col:20 used p 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x20e46fb1858 <col:24, col:25> 'unsigned char *' <LValueToRValue>
|   |     `-UnaryOperator 0x20e46fb1840 <col:24, col:25> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x20e46fb1828 <col:25> 'unsigned char **' <LValueToRValue>
|   |         `-DeclRefExpr 0x20e46fb1808 <col:25> 'unsigned char **' lvalue ParmVar 0x20e46fb1330 'pp' 'unsigned char **'
|   |-DeclStmt 0x20e46fb19a0 <line:152:5, col:16>
|   | |-VarDecl 0x20e46fb18a0 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x20e46fb1920 <col:5, col:12> col:12 used ttag 'int'
|   |-IfStmt 0x20e46fb7540 <line:156:5, line:170:5> has_else
|   | |-BinaryOperator 0x20e46fb1af8 <line:156:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x20e46fb1ae0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20e46fb1a98 <col:9> 'int' lvalue ParmVar 0x20e46fb14b0 'tag' 'int'
|   | | `-IntegerLiteral 0x20e46fb1ab8 <col:15> 'int' 31
|   | |-NullStmt 0x20e46fb7538 <line:157:9>
|   | `-CompoundStmt 0x20e46fb7508 <line:158:10, line:170:5>
|   |   |-ForStmt 0x20e46fb1ed0 <line:160:9, line:161:22>
|   |   | |-BinaryOperator 0x20e46fb1d68 <line:160:14, col:28> 'int' ','
|   |   | | |-BinaryOperator 0x20e46fb1cb8 <col:14, col:18> 'int' '='
|   |   | | | |-DeclRefExpr 0x20e46fb1c70 <col:14> 'int' lvalue Var 0x20e46fb18a0 'i' 'int'
|   |   | | | `-IntegerLiteral 0x20e46fb1c90 <col:18> 'int' 0
|   |   | | `-BinaryOperator 0x20e46fb1d48 <col:21, col:28> 'int' '='
|   |   | |   |-DeclRefExpr 0x20e46fb1cd8 <col:21> 'int' lvalue Var 0x20e46fb1920 'ttag' 'int'
|   |   | |   `-ImplicitCastExpr 0x20e46fb1d30 <col:28> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x20e46fb1d10 <col:28> 'int' lvalue ParmVar 0x20e46fb14b0 'tag' 'int'
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x20e46fb1de8 <col:33, col:40> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x20e46fb1dd0 <col:33> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x20e46fb1d88 <col:33> 'int' lvalue Var 0x20e46fb1920 'ttag' 'int'
|   |   | | `-IntegerLiteral 0x20e46fb1da8 <col:40> 'int' 0
|   |   | |-UnaryOperator 0x20e46fb1e28 <col:43, col:44> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x20e46fb1e08 <col:43> 'int' lvalue Var 0x20e46fb18a0 'i' 'int'
|   |   | `-CompoundAssignOperator 0x20e46fb1ea0 <line:161:13, col:22> 'int' '>>=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |-DeclRefExpr 0x20e46fb1e40 <col:13> 'int' lvalue Var 0x20e46fb1920 'ttag' 'int'
|   |   |   `-IntegerLiteral 0x20e46fb1e60 <col:22> 'int' 7
|   |   |-BinaryOperator 0x20e46fb1f60 <line:162:9, col:16> 'int' '='
|   |   | |-DeclRefExpr 0x20e46fb1f08 <col:9> 'int' lvalue Var 0x20e46fb1920 'ttag' 'int'
|   |   | `-ImplicitCastExpr 0x20e46fb1f48 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x20e46fb1f28 <col:16> 'int' lvalue Var 0x20e46fb18a0 'i' 'int'
|   |   |-WhileStmt 0x20e46fb7468 <line:163:9, line:168:9>
|   |   | |-BinaryOperator 0x20e46fb1fe0 <line:163:16, col:22> 'int' '>'
|   |   | | |-UnaryOperator 0x20e46fb1fa0 <col:16, col:17> 'int' postfix '--'
|   |   | | | `-DeclRefExpr 0x20e46fb1f80 <col:16> 'int' lvalue Var 0x20e46fb18a0 'i' 'int'
|   |   | | `-IntegerLiteral 0x20e46fb1fb8 <col:22> 'int' 0
|   |   | `-CompoundStmt 0x20e46fb7440 <col:25, line:168:9>
|   |   |   |-BinaryOperator 0x20e46fb7198 <line:164:13, col:26> 'unsigned char' '='
|   |   |   | |-ArraySubscriptExpr 0x20e46fb70e0 <col:13, col:16> 'unsigned char' lvalue
|   |   |   | | |-ImplicitCastExpr 0x20e46fb2040 <col:13> 'unsigned char *' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x20e46fb2000 <col:13> 'unsigned char *' lvalue Var 0x20e46fb17a0 'p' 'unsigned char *'
|   |   |   | | `-ImplicitCastExpr 0x20e46fb2058 <col:15> 'int' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x20e46fb2020 <col:15> 'int' lvalue Var 0x20e46fb18a0 'i' 'int'
|   |   |   | `-ImplicitCastExpr 0x20e46fb7180 <col:20, col:26> 'unsigned char' <IntegralCast>
|   |   |   |   `-BinaryOperator 0x20e46fb7160 <col:20, col:26> 'int' '&'
|   |   |   |     |-ImplicitCastExpr 0x20e46fb7148 <col:20> 'int' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x20e46fb7100 <col:20> 'int' lvalue ParmVar 0x20e46fb14b0 'tag' 'int'
|   |   |   |     `-IntegerLiteral 0x20e46fb7120 <col:26> 'int' 127
|   |   |   |-IfStmt 0x20e46fb7398 <line:165:13, line:166:25>
|   |   |   | |-BinaryOperator 0x20e46fb7290 <line:165:17, col:31> 'int' '!='
|   |   |   | | |-ImplicitCastExpr 0x20e46fb7278 <col:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x20e46fb71b8 <col:17> 'int' lvalue Var 0x20e46fb18a0 'i' 'int'
|   |   |   | | `-ParenExpr 0x20e46fb7258 <col:22, col:31> 'int'
|   |   |   | |   `-BinaryOperator 0x20e46fb7238 <col:23, col:30> 'int' '-'
|   |   |   | |     |-ImplicitCastExpr 0x20e46fb7220 <col:23> 'int' <LValueToRValue>
|   |   |   | |     | `-DeclRefExpr 0x20e46fb71d8 <col:23> 'int' lvalue Var 0x20e46fb1920 'ttag' 'int'
|   |   |   | |     `-IntegerLiteral 0x20e46fb71f8 <col:30> 'int' 1
|   |   |   | `-CompoundAssignOperator 0x20e46fb7368 <line:166:17, col:25> 'unsigned char' '|=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |   |-ArraySubscriptExpr 0x20e46fb7320 <col:17, col:20> 'unsigned char' lvalue
|   |   |   |   | |-ImplicitCastExpr 0x20e46fb72f0 <col:17> 'unsigned char *' <LValueToRValue>
|   |   |   |   | | `-DeclRefExpr 0x20e46fb72b0 <col:17> 'unsigned char *' lvalue Var 0x20e46fb17a0 'p' 'unsigned char *'
|   |   |   |   | `-ImplicitCastExpr 0x20e46fb7308 <col:19> 'int' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x20e46fb72d0 <col:19> 'int' lvalue Var 0x20e46fb18a0 'i' 'int'
|   |   |   |   `-IntegerLiteral 0x20e46fb7340 <col:25> 'int' 128
|   |   |   `-CompoundAssignOperator 0x20e46fb7410 <line:167:13, col:21> 'int' '>>=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |-DeclRefExpr 0x20e46fb73b0 <col:13> 'int' lvalue ParmVar 0x20e46fb14b0 'tag' 'int'
|   |   |     `-IntegerLiteral 0x20e46fb73d0 <col:21> 'int' 7
|   |   `-CompoundAssignOperator 0x20e46fb74d8 <line:169:9, col:14> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |     |-DeclRefExpr 0x20e46fb7480 <col:9> 'unsigned char *' lvalue Var 0x20e46fb17a0 'p' 'unsigned char *'
|   |     `-ImplicitCastExpr 0x20e46fb74c0 <col:14> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x20e46fb74a0 <col:14> 'int' lvalue Var 0x20e46fb1920 'ttag' 'int'
|   |-IfStmt 0x20e46fb77b8 <line:171:5, line:174:35> has_else
|   | |-BinaryOperator 0x20e46fb75c8 <line:171:9, col:24> 'int' '=='
|   | | |-ImplicitCastExpr 0x20e46fb75b0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20e46fb7568 <col:9> 'int' lvalue ParmVar 0x20e46fb13b0 'constructed' 'int'
|   | | `-IntegerLiteral 0x20e46fb7588 <col:24> 'int' 2
|   | |-BinaryOperator 0x20e46fb7698 <line:172:9, col:18> 'unsigned char' '='
|   | | |-UnaryOperator 0x20e46fb7640 <col:9, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | | `-ParenExpr 0x20e46fb7620 <col:10, col:14> 'unsigned char *'
|   | | |   `-UnaryOperator 0x20e46fb7608 <col:11, col:12> 'unsigned char *' postfix '++'
|   | | |     `-DeclRefExpr 0x20e46fb75e8 <col:11> 'unsigned char *' lvalue Var 0x20e46fb17a0 'p' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x20e46fb7680 <col:18> 'unsigned char' <IntegralCast>
|   | |   `-IntegerLiteral 0x20e46fb7658 <col:18> 'int' 128
|   | `-CallExpr 0x20e46fb7770 <line:174:9, col:35> 'void'
|   |   |-ImplicitCastExpr 0x20e46fb7758 <col:9> 'void (*)(unsigned char **, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x20e46fb76b8 <col:9> 'void (unsigned char **, int)' Function 0x20e46faf7a8 'asn1_put_length' 'void (unsigned char **, int)'
|   |   |-UnaryOperator 0x20e46fb76f8 <col:25, col:26> 'unsigned char **' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x20e46fb76d8 <col:26> 'unsigned char *' lvalue Var 0x20e46fb17a0 'p' 'unsigned char *'
|   |   `-ImplicitCastExpr 0x20e46fb77a0 <col:29> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x20e46fb7710 <col:29> 'int' lvalue ParmVar 0x20e46fb1430 'length' 'int'
|   `-BinaryOperator 0x20e46fb7868 <line:175:5, col:11> 'unsigned char *' '='
|     |-UnaryOperator 0x20e46fb7818 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x20e46fb7800 <col:6> 'unsigned char **' <LValueToRValue>
|     |   `-DeclRefExpr 0x20e46fb77e0 <col:6> 'unsigned char **' lvalue ParmVar 0x20e46fb1330 'pp' 'unsigned char **'
|     `-ImplicitCastExpr 0x20e46fb7850 <col:11> 'unsigned char *' <LValueToRValue>
|       `-DeclRefExpr 0x20e46fb7830 <col:11> 'unsigned char *' lvalue Var 0x20e46fb17a0 'p' 'unsigned char *'
|-FunctionDecl 0x20e46fb79c0 <line:178:1, line:185:1> line:178:5 ASN1_put_eoc 'int (unsigned char **)'
| |-ParmVarDecl 0x20e46fb78e0 <col:18, col:34> col:34 used pp 'unsigned char **'
| `-CompoundStmt 0x20e46fb7dd8 <line:179:1, line:185:1>
|   |-DeclStmt 0x20e46fb7b68 <line:180:5, col:27>
|   | `-VarDecl 0x20e46fb7a98 <col:5, col:25> col:20 used p 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x20e46fb7b50 <col:24, col:25> 'unsigned char *' <LValueToRValue>
|   |     `-UnaryOperator 0x20e46fb7b38 <col:24, col:25> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x20e46fb7b20 <col:25> 'unsigned char **' <LValueToRValue>
|   |         `-DeclRefExpr 0x20e46fb7b00 <col:25> 'unsigned char **' lvalue ParmVar 0x20e46fb78e0 'pp' 'unsigned char **'
|   |-BinaryOperator 0x20e46fb7c28 <line:181:5, col:12> 'unsigned char' '='
|   | |-UnaryOperator 0x20e46fb7bd0 <col:5, col:7> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x20e46fb7bb8 <col:6, col:7> 'unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x20e46fb7b80 <col:6> 'unsigned char *' lvalue Var 0x20e46fb7a98 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x20e46fb7c10 <col:12> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x20e46fb7be8 <col:12> 'int' 0
|   |-BinaryOperator 0x20e46fb7cd8 <line:182:5, col:12> 'unsigned char' '='
|   | |-UnaryOperator 0x20e46fb7c80 <col:5, col:7> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x20e46fb7c68 <col:6, col:7> 'unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x20e46fb7c48 <col:6> 'unsigned char *' lvalue Var 0x20e46fb7a98 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x20e46fb7cc0 <col:12> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x20e46fb7c98 <col:12> 'int' 0
|   |-BinaryOperator 0x20e46fb7d80 <line:183:5, col:11> 'unsigned char *' '='
|   | |-UnaryOperator 0x20e46fb7d30 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x20e46fb7d18 <col:6> 'unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20e46fb7cf8 <col:6> 'unsigned char **' lvalue ParmVar 0x20e46fb78e0 'pp' 'unsigned char **'
|   | `-ImplicitCastExpr 0x20e46fb7d68 <col:11> 'unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x20e46fb7d48 <col:11> 'unsigned char *' lvalue Var 0x20e46fb7a98 'p' 'unsigned char *'
|   `-ReturnStmt 0x20e46fb7dc8 <line:184:5, col:12>
|     `-IntegerLiteral 0x20e46fb7da0 <col:12> 'int' 2
|-FunctionDecl 0x20e46fb7f78 prev 0x20e46faf7a8 <line:187:1, line:206:1> line:187:13 used asn1_put_length 'void (unsigned char **, int)' static
| |-ParmVarDecl 0x20e46fb7e30 <col:29, col:45> col:45 used pp 'unsigned char **'
| |-ParmVarDecl 0x20e46fb7eb0 <col:49, col:53> col:53 used length 'int'
| `-CompoundStmt 0x20e46fb8c60 <line:188:1, line:206:1>
|   |-DeclStmt 0x20e46fb8120 <line:189:5, col:27>
|   | `-VarDecl 0x20e46fb8040 <col:5, col:25> col:20 used p 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x20e46fb8108 <col:24, col:25> 'unsigned char *' <LValueToRValue>
|   |     `-UnaryOperator 0x20e46fb80f0 <col:24, col:25> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x20e46fb80c8 <col:25> 'unsigned char **' <LValueToRValue>
|   |         `-DeclRefExpr 0x20e46fb80a8 <col:25> 'unsigned char **' lvalue ParmVar 0x20e46fb7e30 'pp' 'unsigned char **'
|   |-DeclStmt 0x20e46fb8250 <line:190:5, col:13>
|   | |-VarDecl 0x20e46fb8150 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x20e46fb81d0 <col:5, col:12> col:12 used l 'int'
|   |-IfStmt 0x20e46fb8b90 <line:191:5, line:204:5> has_else
|   | |-BinaryOperator 0x20e46fb82c8 <line:191:9, col:19> 'int' '<='
|   | | |-ImplicitCastExpr 0x20e46fb82b0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20e46fb8268 <col:9> 'int' lvalue ParmVar 0x20e46fb7eb0 'length' 'int'
|   | | `-IntegerLiteral 0x20e46fb8288 <col:19> 'int' 127
|   | |-BinaryOperator 0x20e46fb83e8 <line:192:9, col:33> 'unsigned char' '='
|   | | |-UnaryOperator 0x20e46fb8358 <col:9, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | | `-ParenExpr 0x20e46fb8338 <col:10, col:14> 'unsigned char *'
|   | | |   `-UnaryOperator 0x20e46fb8320 <col:11, col:12> 'unsigned char *' postfix '++'
|   | | |     `-DeclRefExpr 0x20e46fb82e8 <col:11> 'unsigned char *' lvalue Var 0x20e46fb8040 'p' 'unsigned char *'
|   | | `-CStyleCastExpr 0x20e46fb83c0 <col:18, col:33> 'unsigned char' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x20e46fb83a8 <col:33> 'int' <LValueToRValue> part_of_explicit_cast
|   | |     `-DeclRefExpr 0x20e46fb8370 <col:33> 'int' lvalue ParmVar 0x20e46fb7eb0 'length' 'int'
|   | `-CompoundStmt 0x20e46fb8b50 <line:193:10, line:204:5>
|   |   |-BinaryOperator 0x20e46fb8478 <line:194:9, col:13> 'int' '='
|   |   | |-DeclRefExpr 0x20e46fb8408 <col:9> 'int' lvalue Var 0x20e46fb81d0 'l' 'int'
|   |   | `-ImplicitCastExpr 0x20e46fb8460 <col:13> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x20e46fb8440 <col:13> 'int' lvalue ParmVar 0x20e46fb7eb0 'length' 'int'
|   |   |-ForStmt 0x20e46fb8660 <line:195:9, line:196:19>
|   |   | |-BinaryOperator 0x20e46fb84f8 <line:195:14, col:18> 'int' '='
|   |   | | |-DeclRefExpr 0x20e46fb8498 <col:14> 'int' lvalue Var 0x20e46fb8150 'i' 'int'
|   |   | | `-IntegerLiteral 0x20e46fb84d0 <col:18> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x20e46fb8578 <col:21, col:25> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x20e46fb8560 <col:21> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x20e46fb8518 <col:21> 'int' lvalue Var 0x20e46fb81d0 'l' 'int'
|   |   | | `-IntegerLiteral 0x20e46fb8538 <col:25> 'int' 0
|   |   | |-UnaryOperator 0x20e46fb85b8 <col:28, col:29> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x20e46fb8598 <col:28> 'int' lvalue Var 0x20e46fb8150 'i' 'int'
|   |   | `-CompoundAssignOperator 0x20e46fb8630 <line:196:13, col:19> 'int' '>>=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |-DeclRefExpr 0x20e46fb85d0 <col:13> 'int' lvalue Var 0x20e46fb81d0 'l' 'int'
|   |   |   `-IntegerLiteral 0x20e46fb85f0 <col:19> 'int' 8
|   |   |-BinaryOperator 0x20e46fb87a0 <line:197:9, col:22> 'unsigned char' '='
|   |   | |-UnaryOperator 0x20e46fb86f0 <col:9, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   | | `-ParenExpr 0x20e46fb86d0 <col:10, col:14> 'unsigned char *'
|   |   | |   `-UnaryOperator 0x20e46fb86b8 <col:11, col:12> 'unsigned char *' postfix '++'
|   |   | |     `-DeclRefExpr 0x20e46fb8698 <col:11> 'unsigned char *' lvalue Var 0x20e46fb8040 'p' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x20e46fb8788 <col:18, col:22> 'unsigned char' <IntegralCast>
|   |   |   `-BinaryOperator 0x20e46fb8768 <col:18, col:22> 'int' '|'
|   |   |     |-ImplicitCastExpr 0x20e46fb8750 <col:18> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x20e46fb8708 <col:18> 'int' lvalue Var 0x20e46fb8150 'i' 'int'
|   |   |     `-IntegerLiteral 0x20e46fb8728 <col:22> 'int' 128
|   |   |-BinaryOperator 0x20e46fb8818 <line:198:9, col:13> 'int' '='
|   |   | |-DeclRefExpr 0x20e46fb87c0 <col:9> 'int' lvalue Var 0x20e46fb81d0 'l' 'int'
|   |   | `-ImplicitCastExpr 0x20e46fb8800 <col:13> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x20e46fb87e0 <col:13> 'int' lvalue Var 0x20e46fb8150 'i' 'int'
|   |   |-WhileStmt 0x20e46fb8ab0 <line:199:9, line:202:9>
|   |   | |-BinaryOperator 0x20e46fb8898 <line:199:16, col:22> 'int' '>'
|   |   | | |-UnaryOperator 0x20e46fb8858 <col:16, col:17> 'int' postfix '--'
|   |   | | | `-DeclRefExpr 0x20e46fb8838 <col:16> 'int' lvalue Var 0x20e46fb8150 'i' 'int'
|   |   | | `-IntegerLiteral 0x20e46fb8870 <col:22> 'int' 0
|   |   | `-CompoundStmt 0x20e46fb8a90 <col:25, line:202:9>
|   |   |   |-BinaryOperator 0x20e46fb89e0 <line:200:13, col:29> 'unsigned char' '='
|   |   |   | |-ArraySubscriptExpr 0x20e46fb8928 <col:13, col:16> 'unsigned char' lvalue
|   |   |   | | |-ImplicitCastExpr 0x20e46fb88f8 <col:13> 'unsigned char *' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x20e46fb88b8 <col:13> 'unsigned char *' lvalue Var 0x20e46fb8040 'p' 'unsigned char *'
|   |   |   | | `-ImplicitCastExpr 0x20e46fb8910 <col:15> 'int' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x20e46fb88d8 <col:15> 'int' lvalue Var 0x20e46fb8150 'i' 'int'
|   |   |   | `-ImplicitCastExpr 0x20e46fb89c8 <col:20, col:29> 'unsigned char' <IntegralCast>
|   |   |   |   `-BinaryOperator 0x20e46fb89a8 <col:20, col:29> 'int' '&'
|   |   |   |     |-ImplicitCastExpr 0x20e46fb8990 <col:20> 'int' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x20e46fb8948 <col:20> 'int' lvalue ParmVar 0x20e46fb7eb0 'length' 'int'
|   |   |   |     `-IntegerLiteral 0x20e46fb8968 <col:29> 'int' 255
|   |   |   `-CompoundAssignOperator 0x20e46fb8a60 <line:201:13, col:24> 'int' '>>=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |-DeclRefExpr 0x20e46fb8a00 <col:13> 'int' lvalue ParmVar 0x20e46fb7eb0 'length' 'int'
|   |   |     `-IntegerLiteral 0x20e46fb8a20 <col:24> 'int' 8
|   |   `-CompoundAssignOperator 0x20e46fb8b20 <line:203:9, col:14> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |     |-DeclRefExpr 0x20e46fb8ac8 <col:9> 'unsigned char *' lvalue Var 0x20e46fb8040 'p' 'unsigned char *'
|   |     `-ImplicitCastExpr 0x20e46fb8b08 <col:14> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x20e46fb8ae8 <col:14> 'int' lvalue Var 0x20e46fb81d0 'l' 'int'
|   `-BinaryOperator 0x20e46fb8c40 <line:205:5, col:11> 'unsigned char *' '='
|     |-UnaryOperator 0x20e46fb8bf0 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x20e46fb8bd8 <col:6> 'unsigned char **' <LValueToRValue>
|     |   `-DeclRefExpr 0x20e46fb8bb8 <col:6> 'unsigned char **' lvalue ParmVar 0x20e46fb7e30 'pp' 'unsigned char **'
|     `-ImplicitCastExpr 0x20e46fb8c28 <col:11> 'unsigned char *' <LValueToRValue>
|       `-DeclRefExpr 0x20e46fb8c08 <col:11> 'unsigned char *' lvalue Var 0x20e46fb8040 'p' 'unsigned char *'
|-FunctionDecl 0x20e46fb8ee0 <line:208:1, line:234:1> line:208:5 ASN1_object_size 'int (int, int, int)'
| |-ParmVarDecl 0x20e46fb8ca8 <col:22, col:26> col:26 used constructed 'int'
| |-ParmVarDecl 0x20e46fb8d28 <col:39, col:43> col:43 used length 'int'
| |-ParmVarDecl 0x20e46fb8da8 <col:51, col:55> col:55 used tag 'int'
| `-CompoundStmt 0x20e46fb29d0 <line:209:1, line:234:1>
|   |-DeclStmt 0x20e46fb9058 <line:210:5, col:16>
|   | `-VarDecl 0x20e46fb8fc8 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x20e46fb9030 <col:15> 'int' 1
|   |-IfStmt 0x20e46fb20e0 <line:211:5, line:212:17>
|   | |-BinaryOperator 0x20e46fb90d0 <line:211:9, col:18> 'int' '<'
|   | | |-ImplicitCastExpr 0x20e46fb90b8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20e46fb9070 <col:9> 'int' lvalue ParmVar 0x20e46fb8d28 'length' 'int'
|   | | `-IntegerLiteral 0x20e46fb9090 <col:18> 'int' 0
|   | `-ReturnStmt 0x20e46fb20d0 <line:212:9, col:17>
|   |   `-UnaryOperator 0x20e46fb20b8 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x20e46fb2090 <col:17> 'int' 1
|   |-IfStmt 0x20e46fb2328 <line:213:5, line:218:5>
|   | |-BinaryOperator 0x20e46fb2158 <line:213:9, col:16> 'int' '>='
|   | | |-ImplicitCastExpr 0x20e46fb2140 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20e46fb20f8 <col:9> 'int' lvalue ParmVar 0x20e46fb8da8 'tag' 'int'
|   | | `-IntegerLiteral 0x20e46fb2118 <col:16> 'int' 31
|   | `-CompoundStmt 0x20e46fb2310 <col:20, line:218:5>
|   |   `-WhileStmt 0x20e46fb22f8 <line:214:9, line:217:9>
|   |     |-BinaryOperator 0x20e46fb21d8 <line:214:16, col:22> 'int' '>'
|   |     | |-ImplicitCastExpr 0x20e46fb21c0 <col:16> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x20e46fb2178 <col:16> 'int' lvalue ParmVar 0x20e46fb8da8 'tag' 'int'
|   |     | `-IntegerLiteral 0x20e46fb2198 <col:22> 'int' 0
|   |     `-CompoundStmt 0x20e46fb22d8 <col:25, line:217:9>
|   |       |-CompoundAssignOperator 0x20e46fb2258 <line:215:13, col:21> 'int' '>>=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-DeclRefExpr 0x20e46fb21f8 <col:13> 'int' lvalue ParmVar 0x20e46fb8da8 'tag' 'int'
|   |       | `-IntegerLiteral 0x20e46fb2218 <col:21> 'int' 7
|   |       `-UnaryOperator 0x20e46fb22c0 <line:216:13, col:16> 'int' postfix '++'
|   |         `-DeclRefExpr 0x20e46fb2288 <col:13> 'int' lvalue Var 0x20e46fb8fc8 'ret' 'int'
|   |-IfStmt 0x20e46fb27c8 <line:219:5, line:230:5> has_else
|   | |-BinaryOperator 0x20e46fb23a0 <line:219:9, col:24> 'int' '=='
|   | | |-ImplicitCastExpr 0x20e46fb2388 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20e46fb2340 <col:9> 'int' lvalue ParmVar 0x20e46fb8ca8 'constructed' 'int'
|   | | `-IntegerLiteral 0x20e46fb2360 <col:24> 'int' 2
|   | |-CompoundStmt 0x20e46fb2438 <col:27, line:221:5>
|   | | `-CompoundAssignOperator 0x20e46fb2408 <line:220:9, col:16> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |   |-DeclRefExpr 0x20e46fb23c0 <col:9> 'int' lvalue Var 0x20e46fb8fc8 'ret' 'int'
|   | |   `-IntegerLiteral 0x20e46fb23e0 <col:16> 'int' 3
|   | `-CompoundStmt 0x20e46fb27a8 <line:221:12, line:230:5>
|   |   |-UnaryOperator 0x20e46fb2470 <line:222:9, col:12> 'int' postfix '++'
|   |   | `-DeclRefExpr 0x20e46fb2450 <col:9> 'int' lvalue Var 0x20e46fb8fc8 'ret' 'int'
|   |   `-IfStmt 0x20e46fb2790 <line:223:9, line:229:9>
|   |     |-BinaryOperator 0x20e46fb24e8 <line:223:13, col:22> 'int' '>'
|   |     | |-ImplicitCastExpr 0x20e46fb24d0 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x20e46fb2488 <col:13> 'int' lvalue ParmVar 0x20e46fb8d28 'length' 'int'
|   |     | `-IntegerLiteral 0x20e46fb24a8 <col:22> 'int' 127
|   |     `-CompoundStmt 0x20e46fb2770 <col:27, line:229:9>
|   |       |-DeclStmt 0x20e46fb25c0 <line:224:13, col:32>
|   |       | `-VarDecl 0x20e46fb2520 <col:13, col:26> col:17 used tmplen 'int' cinit
|   |       |   `-ImplicitCastExpr 0x20e46fb25a8 <col:26> 'int' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x20e46fb2588 <col:26> 'int' lvalue ParmVar 0x20e46fb8d28 'length' 'int'
|   |       `-WhileStmt 0x20e46fb2758 <line:225:13, line:228:13>
|   |         |-BinaryOperator 0x20e46fb2650 <line:225:20, col:29> 'int' '>'
|   |         | |-ImplicitCastExpr 0x20e46fb2638 <col:20> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x20e46fb25d8 <col:20> 'int' lvalue Var 0x20e46fb2520 'tmplen' 'int'
|   |         | `-IntegerLiteral 0x20e46fb2610 <col:29> 'int' 0
|   |         `-CompoundStmt 0x20e46fb2738 <col:32, line:228:13>
|   |           |-CompoundAssignOperator 0x20e46fb26d0 <line:226:17, col:28> 'int' '>>=' ComputeLHSTy='int' ComputeResultTy='int'
|   |           | |-DeclRefExpr 0x20e46fb2670 <col:17> 'int' lvalue Var 0x20e46fb2520 'tmplen' 'int'
|   |           | `-IntegerLiteral 0x20e46fb2690 <col:28> 'int' 8
|   |           `-UnaryOperator 0x20e46fb2720 <line:227:17, col:20> 'int' postfix '++'
|   |             `-DeclRefExpr 0x20e46fb2700 <col:17> 'int' lvalue Var 0x20e46fb8fc8 'ret' 'int'
|   |-IfStmt 0x20e46fb2918 <line:231:5, line:232:17>
|   | |-BinaryOperator 0x20e46fb28a8 <line:231:9, col:26> 'int' '>='
|   | | |-ImplicitCastExpr 0x20e46fb2890 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20e46fb27f0 <col:9> 'int' lvalue Var 0x20e46fb8fc8 'ret' 'int'
|   | | `-BinaryOperator 0x20e46fb2870 <<built-in>:30:21, .//openssl//file_jk/before\crypto\asn1\asn1_lib.c:231:26> 'int' '-'
|   | |   |-IntegerLiteral 0x20e46fb2810 <<built-in>:30:21> 'int' 2147483647
|   | |   `-ImplicitCastExpr 0x20e46fb2858 <.//openssl//file_jk/before\crypto\asn1\asn1_lib.c:231:26> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x20e46fb2838 <col:26> 'int' lvalue ParmVar 0x20e46fb8d28 'length' 'int'
|   | `-ReturnStmt 0x20e46fb2908 <line:232:9, col:17>
|   |   `-UnaryOperator 0x20e46fb28f0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x20e46fb28c8 <col:17> 'int' 1
|   `-ReturnStmt 0x20e46fb29c0 <line:233:5, col:18>
|     `-BinaryOperator 0x20e46fb29a0 <col:12, col:18> 'int' '+'
|       |-ImplicitCastExpr 0x20e46fb2970 <col:12> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x20e46fb2930 <col:12> 'int' lvalue Var 0x20e46fb8fc8 'ret' 'int'
|       `-ImplicitCastExpr 0x20e46fb2988 <col:18> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x20e46fb2950 <col:18> 'int' lvalue ParmVar 0x20e46fb8d28 'length' 'int'
|-FunctionDecl 0x20e46fb2b80 <line:236:1, line:247:1> line:236:5 invalid ASN1_STRING_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x20e46fb2a28 <col:22, col:35> col:35 invalid dst 'int *'
| |-ParmVarDecl 0x20e46fb2aa8 <col:40, col:59> col:59 invalid str 'const int *'
| `-CompoundStmt 0x20e46fb2ee8 <line:237:1, line:247:1>
|   |-IfStmt 0x20e46fb2d20 <line:238:5, line:239:16>
|   | |-OpaqueValueExpr 0x20e46fb2d08 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x20e46fb2cf8 <col:9, col:16>
|   |   `-IntegerLiteral 0x20e46fb2cd0 <col:16> 'int' 0
|   |-IfStmt 0x20e46fb2e98 <line:241:5, line:242:16>
|   | |-OpaqueValueExpr 0x20e46fb2e80 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x20e46fb2e70 <col:9, col:16>
|   |   `-IntegerLiteral 0x20e46fb2e48 <col:16> 'int' 0
|   `-ReturnStmt 0x20e46fb2ed8 <line:246:5, col:12>
|     `-IntegerLiteral 0x20e46fb2eb0 <col:12> 'int' 1
|-FunctionDecl 0x20e46fb2ff0 <line:249:1, line:262:1> line:249:14 invalid ASN1_STRING_dup 'int *(const int *)'
| |-ParmVarDecl 0x20e46fb2f28 <col:30, col:49> col:49 invalid str 'const int *'
| `-CompoundStmt 0x20e46fb96e0 <line:250:1, line:262:1>
|   |-IfStmt 0x20e46fb91e8 <line:252:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-OpaqueValueExpr 0x20e46fb91d0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x20e46fb91c0 <.//openssl//file_jk/before\crypto\asn1\asn1_lib.c:253:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x20e46fb91a8 <col:17, col:27> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x20e46fb9188 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x20e46fb9160 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x20e46fb9120 <col:26> 'int' 0
|   |-IfStmt 0x20e46fb94c0 <.//openssl//file_jk/before\crypto\asn1\asn1_lib.c:255:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-OpaqueValueExpr 0x20e46fb94a8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x20e46fb9498 <.//openssl//file_jk/before\crypto\asn1\asn1_lib.c:256:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x20e46fb9480 <col:17, col:27> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x20e46fb9460 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x20e46fb9438 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x20e46fb93f8 <col:26> 'int' 0
|   `-IfStmt 0x20e46fb96c8 <.//openssl//file_jk/before\crypto\asn1\asn1_lib.c:257:5, line:260:5>
|     |-OpaqueValueExpr 0x20e46fb96b0 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x20e46fb9698 <line:257:38, line:260:5>
|       `-ReturnStmt 0x20e46fb9688 <line:259:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|         `-ImplicitCastExpr 0x20e46fb9670 <col:17, col:27> 'int *' <NullToPointer>
|           `-ParenExpr 0x20e46fb9650 <col:17, col:27> 'void *'
|             `-CStyleCastExpr 0x20e46fb9628 <col:18, col:26> 'void *' <NullToPointer>
|               `-IntegerLiteral 0x20e46fb95e8 <col:26> 'int' 0
|-FunctionDecl 0x20e46fb9910 <.//openssl//file_jk/before\crypto\asn1\asn1_lib.c:264:1, line:291:1> line:264:5 invalid ASN1_STRING_set 'int (int *, const void *, int)'
| |-ParmVarDecl 0x20e46fb9720 <col:21, col:34> col:34 invalid str 'int *'
| |-ParmVarDecl 0x20e46fb97a0 <col:39, col:51> col:51 used _data 'const void *'
| |-ParmVarDecl 0x20e46fb9820 <col:58, col:62> col:62 used len 'int'
| `-CompoundStmt 0x20e46fb3930 <line:265:1, line:291:1>
|   |-DeclStmt 0x20e46fb9a60 <line:266:5, col:21>
|   | `-VarDecl 0x20e46fb99f8 <col:5, col:20> col:20 used c 'unsigned char *'
|   |-DeclStmt 0x20e46fb9b60 <line:267:5, col:29>
|   | `-VarDecl 0x20e46fb9a90 <col:5, col:24> col:17 used data 'const char *' cinit
|   |   `-ImplicitCastExpr 0x20e46fb9b48 <col:24> 'const char *' <BitCast>
|   |     `-ImplicitCastExpr 0x20e46fb9b30 <col:24> 'const void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x20e46fb9af8 <col:24> 'const void *' lvalue ParmVar 0x20e46fb97a0 '_data' 'const void *'
|   |-IfStmt 0x20e46fba048 <line:269:5, line:274:5>
|   | |-BinaryOperator 0x20e46fb9bf0 <line:269:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x20e46fb9bd8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20e46fb9b78 <col:9> 'int' lvalue ParmVar 0x20e46fb9820 'len' 'int'
|   | | `-IntegerLiteral 0x20e46fb9bb0 <col:15> 'int' 0
|   | `-CompoundStmt 0x20e46fba030 <col:18, line:274:5>
|   |   `-IfStmt 0x20e46fba008 <line:270:9, line:273:30> has_else
|   |     |-BinaryOperator 0x20e46fb9d00 <line:270:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |     | |-ImplicitCastExpr 0x20e46fb9cd0 <.//openssl//file_jk/before\crypto\asn1\asn1_lib.c:270:13> 'const char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x20e46fb9c10 <col:13> 'const char *' lvalue Var 0x20e46fb9a90 'data' 'const char *'
|   |     | `-ImplicitCastExpr 0x20e46fb9ce8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   |     |   `-ParenExpr 0x20e46fb9cb0 <col:17, col:27> 'void *'
|   |     |     `-CStyleCastExpr 0x20e46fb9c88 <col:18, col:26> 'void *' <NullToPointer>
|   |     |       `-IntegerLiteral 0x20e46fb9c48 <col:26> 'int' 0
|   |     |-ReturnStmt 0x20e46fb9d68 <.//openssl//file_jk/before\crypto\asn1\asn1_lib.c:271:13, col:22>
|   |     | `-ParenExpr 0x20e46fb9d48 <col:20, col:22> 'int'
|   |     |   `-IntegerLiteral 0x20e46fb9d20 <col:21> 'int' 0
|   |     `-BinaryOperator 0x20e46fb9fe8 <line:273:13, col:30> 'int' '='
|   |       |-DeclRefExpr 0x20e46fb9d78 <col:13> 'int' lvalue ParmVar 0x20e46fb9820 'len' 'int'
|   |       `-ImplicitCastExpr 0x20e46fb9fd0 <col:19, col:30> 'int' <IntegralCast>
|   |         `-CallExpr 0x20e46fb9f90 <col:19, col:30> 'unsigned long long'
|   |           |-ImplicitCastExpr 0x20e46fb9f78 <col:19> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |           | `-DeclRefExpr 0x20e46fb9ee0 <col:19> 'unsigned long long (const char *)' Function 0x20e46fb9dd0 'strlen' 'unsigned long long (const char *)'
|   |           `-ImplicitCastExpr 0x20e46fb9fb8 <col:26> 'const char *' <LValueToRValue>
|   |             `-DeclRefExpr 0x20e46fb9f18 <col:26> 'const char *' lvalue Var 0x20e46fb9a90 'data' 'const char *'
|   |-IfStmt 0x20e46fb34a0 <line:275:5, line:283:5>
|   | |-OpaqueValueExpr 0x20e46fb3488 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x20e46fb3470 <line:275:54, line:283:5>
|   |   `-IfStmt 0x20e46fb3458 <line:278:9, line:282:9>
|   |     |-OpaqueValueExpr 0x20e46fb3440 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x20e46fb3428 <line:278:32, line:282:9>
|   |       `-ReturnStmt 0x20e46fb3418 <line:281:13, col:22>
|   |         `-ParenExpr 0x20e46fb33f8 <col:20, col:22> 'int'
|   |           `-IntegerLiteral 0x20e46fb33d0 <col:21> 'int' 0
|   |-IfStmt 0x20e46fb38c0 <line:285:5, line:289:5>
|   | |-BinaryOperator 0x20e46fb35b0 <line:285:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x20e46fb3580 <.//openssl//file_jk/before\crypto\asn1\asn1_lib.c:285:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20e46fb34d8 <col:9> 'const char *' lvalue Var 0x20e46fb9a90 'data' 'const char *'
|   | | `-ImplicitCastExpr 0x20e46fb3598 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x20e46fb3560 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x20e46fb3538 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x20e46fb34f8 <col:26> 'int' 0
|   | `-CompoundStmt 0x20e46fb38b0 <.//openssl//file_jk/before\crypto\asn1\asn1_lib.c:285:23, line:289:5>
|   `-ReturnStmt 0x20e46fb3920 <line:290:5, col:14>
|     `-ParenExpr 0x20e46fb3900 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x20e46fb38d8 <col:13> 'int' 1
|-FunctionDecl 0x20e46fb9dd0 <line:273:19> col:19 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x20e46fb9e70 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x20e46fb3610 <line:286:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x20e46fb36b0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x20e46fb3718 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x20e46fb3780 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x20e46fb3b68 <line:293:1, line:298:1> line:293:6 invalid ASN1_STRING_set0 'void (int *, void *, int)'
| |-ParmVarDecl 0x20e46fb3988 <col:23, col:36> col:36 invalid str 'int *'
| |-ParmVarDecl 0x20e46fb3a08 <col:41, col:47> col:47 used data 'void *'
| |-ParmVarDecl 0x20e46fb3a88 <col:53, col:57> col:57 used len 'int'
| `-CompoundStmt 0x20e46fb3db8 <line:294:1, line:298:1>
|-FunctionDecl 0x20e46fb3e90 <line:300:1, line:303:1> line:300:14 invalid ASN1_STRING_new 'int *(void)'
| `-CompoundStmt 0x20e46fb4058 <line:301:1, line:303:1>
|-FunctionDecl 0x20e46fb4190 <line:305:1, line:316:1> line:305:14 invalid ASN1_STRING_type_new 'int *(int)'
| |-ParmVarDecl 0x20e46fb40b0 <col:35, col:39> col:39 used type 'int'
| `-CompoundStmt 0x20e46fb4540 <line:306:1, line:316:1>
|   `-IfStmt 0x20e46fb4508 <line:310:5, line:313:5>
|     |-OpaqueValueExpr 0x20e46fb44f0 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x20e46fb44d8 <line:310:22, line:313:5>
|       `-ReturnStmt 0x20e46fb44c8 <line:312:9, col:21>
|         `-ImplicitCastExpr 0x20e46fb44b0 <col:16, col:21> 'int *' <NullToPointer>
|           `-ParenExpr 0x20e46fb4490 <col:16, col:21> 'void *'
|             `-ParenExpr 0x20e46fb4470 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|               `-CStyleCastExpr 0x20e46fb4448 <col:18, col:26> 'void *' <NullToPointer>
|                 `-IntegerLiteral 0x20e46fb4408 <col:26> 'int' 0
|-FunctionDecl 0x20e46fb4688 <.//openssl//file_jk/before\crypto\asn1\asn1_lib.c:318:1, line:326:1> line:318:6 invalid asn1_string_embed_free 'void (int *, int)'
| |-ParmVarDecl 0x20e46fb4570 <col:29, col:42> col:42 invalid a 'int *'
| |-ParmVarDecl 0x20e46fb45f0 <col:45, col:49> col:49 used embed 'int'
| `-CompoundStmt 0x20e46fb48f0 <line:319:1, line:326:1>
|   `-IfStmt 0x20e46fb4800 <line:320:5, line:321:9>
|     |-OpaqueValueExpr 0x20e46fb47e8 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x20e46fb47d8 <col:9>
|-FunctionDecl 0x20e46fb49e8 <line:328:1, line:333:1> line:328:6 invalid ASN1_STRING_free 'void (int *)'
| |-ParmVarDecl 0x20e46fb4920 <col:23, col:36> col:36 invalid a 'int *'
| `-CompoundStmt 0x20e46fb4b70 <line:329:1, line:333:1>
|   `-IfStmt 0x20e46fb4b58 <line:330:5, line:331:9>
|     |-OpaqueValueExpr 0x20e46fb4b40 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x20e46fb4b30 <col:9>
|-FunctionDecl 0x20e46fb4c30 <line:335:1, line:342:1> line:335:6 invalid ASN1_STRING_clear_free 'void (int *)'
| |-ParmVarDecl 0x20e46fb4ba0 <col:29, col:42> col:42 invalid a 'int *'
| `-CompoundStmt 0x20e46fb4ec8 <line:336:1, line:342:1>
|   `-IfStmt 0x20e46fb4da0 <line:337:5, line:338:9>
|     |-OpaqueValueExpr 0x20e46fb4d88 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x20e46fb4d78 <col:9>
|-FunctionDecl 0x20e46fb50c0 <line:344:1, line:357:1> line:344:5 invalid ASN1_STRING_cmp 'int (const int *, const int *)'
| |-ParmVarDecl 0x20e46fb4ef8 <col:21, col:40> col:40 invalid a 'const int *'
| |-ParmVarDecl 0x20e46fb4f78 <col:43, col:62> col:62 invalid b 'const int *'
| `-CompoundStmt 0x20e46fb5728 <line:345:1, line:357:1>
|   |-DeclStmt 0x20e46fb5208 <line:346:5, col:10>
|   | `-VarDecl 0x20e46fb51a0 <col:5, col:9> col:9 used i 'int'
|   `-IfStmt 0x20e46fb5700 <line:349:5, line:356:18> has_else
|     |-BinaryOperator 0x20e46fb52b8 <line:349:9, col:14> 'int' '=='
|     | |-ImplicitCastExpr 0x20e46fb52a0 <col:9> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x20e46fb5258 <col:9> 'int' lvalue Var 0x20e46fb51a0 'i' 'int'
|     | `-IntegerLiteral 0x20e46fb5278 <col:14> 'int' 0
|     |-CompoundStmt 0x20e46fb5680 <col:17, line:355:5>
|     | `-IfStmt 0x20e46fb5658 <line:351:9, line:354:22> has_else
|     |   |-BinaryOperator 0x20e46fb55c8 <line:351:13, col:18> 'int' '=='
|     |   | |-ImplicitCastExpr 0x20e46fb55b0 <col:13> 'int' <LValueToRValue>
|     |   | | `-DeclRefExpr 0x20e46fb5568 <col:13> 'int' lvalue Var 0x20e46fb51a0 'i' 'int'
|     |   | `-IntegerLiteral 0x20e46fb5588 <col:18> 'int' 0
|     |   |-NullStmt 0x20e46fb5650 <line:352:13>
|     |   `-ReturnStmt 0x20e46fb5640 <line:354:13, col:22>
|     |     `-ImplicitCastExpr 0x20e46fb5628 <col:20, col:22> 'int' <LValueToRValue>
|     |       `-ParenExpr 0x20e46fb5608 <col:20, col:22> 'int' lvalue
|     |         `-DeclRefExpr 0x20e46fb55e8 <col:21> 'int' lvalue Var 0x20e46fb51a0 'i' 'int'
|     `-ReturnStmt 0x20e46fb56f0 <line:356:9, col:18>
|       `-ImplicitCastExpr 0x20e46fb56d8 <col:16, col:18> 'int' <LValueToRValue>
|         `-ParenExpr 0x20e46fb56b8 <col:16, col:18> 'int' lvalue
|           `-DeclRefExpr 0x20e46fb5698 <col:17> 'int' lvalue Var 0x20e46fb51a0 'i' 'int'
|-FunctionDecl 0x20e46fb5340 <line:350:13> col:13 implicit used memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x20e46fb53e0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x20e46fb5448 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x20e46fb54b0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x20e46fb5830 <line:359:1, line:362:1> line:359:5 invalid ASN1_STRING_length 'int (const int *)'
| |-ParmVarDecl 0x20e46fb5760 <col:24, col:43> col:43 invalid x 'const int *'
| `-CompoundStmt 0x20e46fb58f0 <line:360:1, line:362:1>
|-FunctionDecl 0x20e46fb5a30 <line:364:1, line:367:1> line:364:6 invalid ASN1_STRING_length_set 'void (int *, int)'
| |-ParmVarDecl 0x20e46fb5918 <col:29, col:42> col:42 invalid x 'int *'
| |-ParmVarDecl 0x20e46fb5998 <col:45, col:49> col:49 used len 'int'
| `-CompoundStmt 0x20e46fb5b30 <line:365:1, line:367:1>
|-FunctionDecl 0x20e46fb5bf0 <line:369:1, line:372:1> line:369:5 invalid ASN1_STRING_type 'int (const int *)'
| |-ParmVarDecl 0x20e46fb5b58 <col:22, col:41> col:41 invalid x 'const int *'
| `-CompoundStmt 0x20e46fb5cb0 <line:370:1, line:372:1>
|-FunctionDecl 0x20e46fb5da0 <line:374:1, line:377:1> line:374:22 invalid ASN1_STRING_get0_data 'const unsigned char *(const int *)'
| |-ParmVarDecl 0x20e46fb5cd8 <col:44, col:63> col:63 invalid x 'const int *'
| `-CompoundStmt 0x20e46fb5e60 <line:375:1, line:377:1>
`-FunctionDecl 0x20e46fb5f50 <line:380:1, line:383:1> line:380:16 invalid ASN1_STRING_data 'unsigned char *(int *)'
  |-ParmVarDecl 0x20e46fb5e88 <col:33, col:46> col:46 invalid x 'int *'
  `-CompoundStmt 0x20e46fb6010 <line:381:1, line:383:1>
