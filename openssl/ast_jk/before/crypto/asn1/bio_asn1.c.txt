TranslationUnitDecl 0x20605375fd8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x20605376870 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x20605376570 '__int128'
|-TypedefDecl 0x206053768e0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x20605376590 'unsigned __int128'
|-TypedefDecl 0x20605376c18 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x206053769d0 'struct __NSConstantString_tag'
|   `-Record 0x20605376938 '__NSConstantString_tag'
|-TypedefDecl 0x20605376c88 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x206053761b0 'unsigned long long'
|-TypedefDecl 0x20605376d20 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x20605376ce0 'char *'
|   `-BuiltinType 0x20605376070 'char'
|-TypedefDecl 0x20605376d90 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x20605376ce0 'char *'
|   `-BuiltinType 0x20605376070 'char'
|-TypedefDecl 0x20605376e50 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x206053761b0 'unsigned long long'
|-TypedefDecl 0x20605376ec0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x20605376ce0 'char *'
|   `-BuiltinType 0x20605376070 'char'
|-FunctionDecl 0x20606d31410 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x20606d314b0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x20606d31520 <col:21> Implicit
|-FunctionDecl 0x20606d31578 prev 0x20606d31410 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x20606d312a0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x20606d31668 <col:21> Inherited Implicit
|-TypedefDecl 0x20606d316a8 prev 0x20605376c88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x206053761b0 'unsigned long long'
|-TypedefDecl 0x20606d31750 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x20606d31720 'size_t' sugar
|   |-Typedef 0x20606d316a8 'size_t'
|   `-BuiltinType 0x206053761b0 'unsigned long long'
|-TypedefDecl 0x20606d317c0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x20605376110 'long long'
|-TypedefDecl 0x20606d31830 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x20605376110 'long long'
|-TypedefDecl 0x20606d318a0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x20605376150 'unsigned short'
|-TypedefDecl 0x20606d31910 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x20605376150 'unsigned short'
|-TypedefDecl 0x20606d31980 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x20605376150 'unsigned short'
|-TypedefDecl 0x20606d319f0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x206053760d0 'int'
|-TypedefDecl 0x20606d31a60 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x206053760f0 'long'
|-TypedefDecl 0x20606d31ad0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x20605376110 'long long'
|-TypedefDecl 0x20606d31b60 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x20606d31b30 '__time64_t' sugar
|   |-Typedef 0x20606d31ad0 '__time64_t'
|   `-BuiltinType 0x20605376110 'long long'
|-FunctionDecl 0x20606d31cd8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x20606d31ef8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x20606d6f5b0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x20606d32038 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x20606d320b0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x20606d32128 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x20606d321a8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x20606d6f350 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x20606d6f690 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x20606d6f750 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x20606d6f8c0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x20606d6f870 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x20606d6f810 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x20606d6f730 'struct threadlocaleinfostruct'
|       `-Record 0x20606d6d330 'threadlocaleinfostruct'
|-TypedefDecl 0x20606d6f9d0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x20606d6f980 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x20606d6f920 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x20606d6f7f0 'struct threadmbcinfostruct'
|       `-Record 0x20606d6f750 'threadmbcinfostruct'
|-RecordDecl 0x20606d6fa28 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x20606d6fae0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x20606d6fba0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x20606d6fc30 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x20606d6fcc0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x20606d6fd78 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x20606d6fd20 'struct localeinfo_struct' sugar
|   `-RecordType 0x20606d6fb80 'struct localeinfo_struct'
|     `-Record 0x20606d6fae0 'localeinfo_struct'
|-TypedefDecl 0x20606d6fe50 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x20606d6fe00 'struct localeinfo_struct *'
|   `-ElaboratedType 0x20606d6fd20 'struct localeinfo_struct' sugar
|     `-RecordType 0x20606d6fb80 'struct localeinfo_struct'
|       `-Record 0x20606d6fae0 'localeinfo_struct'
|-RecordDecl 0x20606d6fec8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x20606d6ff80 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x20606d6fff8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x20606d700b8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x20606d70150 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x20606d701c0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x20606d70278 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x20606d70220 'struct localerefcount' sugar
|   `-RecordType 0x20606d6ff60 'struct localerefcount'
|     `-Record 0x20606d6fec8 'localerefcount'
|-RecordDecl 0x20606d6d330 prev 0x20606d6f690 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x20606d6d3b0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x20606d6d428 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x20606d6d498 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x20606d6d508 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x20606d6d578 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x20606d6d738 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x20606d6d7a8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x20606d6d818 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x20606d6d888 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x20606d6d8f8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x20606d6d968 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x20606d6d9c0 parent 0x20605375fd8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x20606d6db50 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x20606d6dbc0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x20606d6dc30 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x20606d6dca0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x20606d6dd40 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x20606d6ddb0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x20606d6dec0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x20606d6dff8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x20606d6e0a8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x20606d6e050 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x20606d6f730 'struct threadlocaleinfostruct'
|     `-Record 0x20606d6d330 'threadlocaleinfostruct'
|-FunctionDecl 0x20606d765d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x20606d6e130 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x20606d6e1e0 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x20606d6e260 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x20606d763c0 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x20606d76998 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x20606d76a38 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x20606d76aa0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x20606d76b08 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x20606d76b88 prev 0x20606d76998 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x20606d766c0 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x20606d76740 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x20606d767b8 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x20606d76f48 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x20606d76c70 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x20606d76cf0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x20606d76d68 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x20606d7b460 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x20606d77030 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x20606d770b0 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x20606d77128 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20606d771c0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20606d7b768 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x20606d7b808 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x20606d7b870 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x20606d7b8d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x20606d7b958 prev 0x20606d7b768 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x20606d7b550 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x20606d7b5d0 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x20606d7b648 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x20606d7bd18 <line:55:17> col:17 implicit memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x20606d7bdb8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x20606d7be20 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x20606d7be88 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x20606d7bf08 prev 0x20606d7bd18 <col:1, col:127> col:17 memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x20606d7ba40 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x20606d7bac0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x20606d7bb38 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x20606d793f0 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x20606d7c018 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x20606d7c0b0 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x20606d7c130 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x20606d7c1a8 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x20606d797b8 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x20606d79858 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x20606d798c0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x20606d79928 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x20606d799a8 prev 0x20606d797b8 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x20606d794e0 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x20606d79560 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x20606d795d8 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x20606d79e28 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x20606d79ec8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x20606d79f30 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x20606d79f98 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x20606d7a000 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x20606d7a088 prev 0x20606d79e28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x20606d79b70 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x20606d79bf0 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x20606d79c70 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x20606d79ce8 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x20606d7a148 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x20606d7a598 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x20606d7a310 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x20606d7a400 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x20606d7a478 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x20606d7a650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x20606d7aa40 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x20606d7a778 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x20606d7a7f0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20606d7a870 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x20606d7ae10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x20606d7ac20 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x20606d7aca0 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x20606d7aec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20606d7b2d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x20606d7b008 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x20606d7b080 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x20606d7b100 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x20606d7c6e0 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x20606d7c780 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x20606d7c7e8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x20606d7c860 prev 0x20606d7c6e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x20606d7c4f8 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x20606d7c578 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x20606d7c910 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20606d7cc68 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x20606d7ca58 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x20606d7cad0 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x20606d7cb50 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x20606d7cf90 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x20606d7d030 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x20606d7d098 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x20606d7d110 prev 0x20606d7cf90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x20606d7ce10 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x20606d7ce90 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x20606d7d1c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20606d7d500 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x20606d7d5a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x20606d7d608 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x20606d7d680 prev 0x20606d7d500 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x20606d7d308 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x20606d7d388 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x20606d7d8d0 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x20606d7d970 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x20606d7d9e0 prev 0x20606d7d8d0 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x20606d7d760 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x20606d7dcd8 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x20606d7dab8 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x20606d7db30 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x20606d7df28 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x20606d7ddb8 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x20606d7de30 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x20606d7e258 <line:131:1, line:133:1>
|   `-ReturnStmt 0x20606d7e248 <line:132:5, col:51>
|     `-ConditionalOperator 0x20606d7e218 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x20606d7e088 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x20606d7e068 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x20606d7e038 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x20606d7dff0 <col:13> 'const char *' lvalue ParmVar 0x20606d7ddb8 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x20606d7e050 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x20606d7e010 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x20606d7e200 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x20606d7e0a8 <col:24> 'int' 0
|       `-CallExpr 0x20606d7e1a0 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x20606d7e188 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x20606d7e0d0 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x20606d7dcd8 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x20606d7e1d0 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x20606d7e0f0 <col:36> 'const char *' lvalue ParmVar 0x20606d7ddb8 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x20606d7e1e8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x20606d7e110 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x20606d7de30 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x20606d7e578 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x20606d7e288 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x20606d7e300 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x20606d7e380 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x20606d7e440 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x20606d7e880 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x20606d7e920 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x20606d7e988 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x20606d7e9f0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x20606d7ea70 prev 0x20606d7e880 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x20606d7e668 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x20606d7e6e8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x20606d7e760 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x20606d7eca8 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x20606d7eb58 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x20606d7ef70 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x20606d7f010 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x20606d7f078 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x20606d7f0f0 prev 0x20606d7ef70 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x20606d7ed80 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x20606d7ee00 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x20606d7f350 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x20606d7f1d0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x20606d7f250 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x20606d77550 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x20606d773d0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x20606d77450 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x20606d77908 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x20606d77630 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x20606d776b0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x20606d77728 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20606d77b70 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x20606d779f0 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x20606d77a70 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x20606d77e68 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x20606d77c50 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x20606d77cd0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x20606d77d48 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20606d780d0 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x20606d77f50 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x20606d77fd0 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x20606d7f450 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x20606d781b0 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x20606d78230 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x20606d782a8 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20606d7f808 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x20606d7f538 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x20606d7f5b8 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x20606d7f630 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x20606d7fc70 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x20606d7f8f0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x20606d7f970 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x20606d7f9e8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20606d7fa60 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20606d7ff78 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x20606d7fd60 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x20606d7fde0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x20606d7fe58 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x20606d80310 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x20606d80060 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x20606d800e0 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x20606d80158 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20606d801d0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20606d78608 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x20606d786a8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x20606d78710 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x20606d78788 prev 0x20606d78608 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x20606d783e0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x20606d78460 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x20606d78a40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x20606d78960 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x20606d78ae8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20606d78ec0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x20606d78c30 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x20606d78ca8 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20606d78d28 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x20606d791d8 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x20606d79278 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x20606d792e8 prev 0x20606d791d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x20606d790a0 <col:90> col:93 'int'
| `-DeprecatedAttr 0x20606d79390 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20606d81780 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x20606d81570 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x20606d815e8 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20606d81668 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x20606d81a88 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x20606d81868 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x20606d818e0 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x20606d81d78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x20606d81c28 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x20606d81e20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20606d82230 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x20606d81f68 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x20606d81fe0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20606d82058 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20606d84650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x20606d823d8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x20606d844a0 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20606d84700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20606d84bb8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x20606d84848 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x20606d848c0 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x20606d84940 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x20606d849b8 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x20606d85038 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x20606d850d8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x20606d85140 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x20606d851a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x20606d85228 prev 0x20606d85038 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x20606d84d68 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x20606d84de8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x20606d84e60 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x20606d852e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20606d83640 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x20606d836e0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x20606d83748 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x20606d837b0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x20606d83830 prev 0x20606d83640 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x20606d85428 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x20606d834a8 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x20606d83520 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x20606d83b30 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x20606d83918 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x20606d83998 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x20606d83a10 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x20606d83ec8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x20606d83c18 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x20606d83c98 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x20606d83d10 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20606d83d88 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20606d84260 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x20606d83fb8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x20606d84030 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x20606d840b0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x20606d84128 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x20606d805f8 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x20606d80698 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x20606d80700 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x20606d80768 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x20606d807e8 prev 0x20606d805f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x20606d84410 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x20606d80460 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x20606d804d8 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x20606d808a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20606d80d58 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x20606d809e8 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x20606d80a60 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20606d80ae0 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x20606d80b58 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x20606d811d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x20606d80f08 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x20606d80f88 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x20606d81000 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x20606d81290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20606d825f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x20606d82690 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x20606d826f8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x20606d82770 prev 0x20606d825f0 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x20606d813d8 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x20606d82480 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x20606d829d0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x20606d82a70 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x20606d82ad8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x20606d82b50 prev 0x20606d829d0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x20606d82850 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x20606d828d0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x20606d82d10 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x20606d82c30 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x20606d82f60 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x20606d83000 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x20606d83068 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x20606d830e0 prev 0x20606d82f60 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x20606d82de8 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x20606d82e68 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x20606d83340 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x20606d833e0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x20606dfdfe0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x20606dfe058 prev 0x20606d83340 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x20606d831c0 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x20606d83240 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x20606dfe378 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x20606dfe418 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x20606dfe480 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x20606dfe4f8 prev 0x20606dfe378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x20606dfe1f8 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x20606dfe278 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x20606dfe5a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20606dfe988 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x20606dfe6f0 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x20606dfe770 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x20606dfe7f0 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x20606dfebe0 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x20606dfea70 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x20606dfeae8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x20606dfee60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x20606dfed80 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x20606dfef08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20606dfc2c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x20606dfc0c0 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x20606dfc138 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20606dfc1b0 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20606dfc5e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x20606dfc470 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x20606dfc4e8 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20606dfc698 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20606dfcab0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x20606dfcb50 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x20606dfcbb8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x20606dfcc20 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x20606dfcca0 prev 0x20606dfcab0 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x20606dfc7e0 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x20606dfc860 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x20606dfc8d8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x20606df80b8 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x20606dfcd88 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x20606dfce08 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x20606dfce80 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20606dfcef8 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20606df8360 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x20606df8400 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x20606df8470 prev 0x20606df8360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x20606df8280 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x20606df8518 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x20606df8860 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x20606df86e0 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x20606df8760 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x20606df8910 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x20606df8c58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x20606df8ad8 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x20606df8b58 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x20606df8d08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x20606df9fd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x20606df8ed0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x20606dfa080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x20606dfa498 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x20606dfa280 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x20606dfa300 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x20606dfa378 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x20606dfa550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x20606dfa930 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x20606dfa718 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x20606dfa798 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x20606dfa810 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x20606dfa9e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x20606dfac90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x20606dfabb0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x20606dfad38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x20606e00100 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x20606dfaf00 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x20606e00000 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x20606e001b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x20606e00458 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x20606e00378 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x20606e00500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x20606e00790 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x20606e00620 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x20606e00b20 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x20606e00860 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x20606e008d8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x20606e00950 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x20606e00ed8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20606e00cc0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20606e00d38 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x20606e00f88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20606df92a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x20606df9348 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x20606df93b0 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x20606df9428 prev 0x20606df92a8 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x20606df9088 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x20606df9100 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x20606df9720 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x20606df97c0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x20606df9828 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x20606df98a0 prev 0x20606df9720 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x20606df9500 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x20606df9578 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x20606df9b80 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x20606df9978 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x20606df99f0 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x20606df9a68 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x20606df9e90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20606df9d20 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20606df9d98 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x20606df9f40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20606e01328 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20606e01108 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x20606e01180 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x20606e01570 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x20606e01610 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x20606e01680 prev 0x20606e01570 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x20606e01400 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x20606e01968 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x20606e01750 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x20606e017c8 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x20606e01bb0 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x20606e01a40 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x20606e01ab8 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x20606e01f48 <line:306:1, line:308:1>
|   `-ReturnStmt 0x20606e01f38 <line:307:5, col:56>
|     `-ConditionalOperator 0x20606e01f08 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x20606e01d70 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x20606e01d50 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x20606e01d20 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x20606e01c78 <col:13> 'const wchar_t *' lvalue ParmVar 0x20606e01a40 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x20606e01d38 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x20606e01d00 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x20606e01cd8 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x20606e01c98 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x20606e01ef0 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x20606e01d90 <col:29> 'int' 0
|       `-CallExpr 0x20606e01e90 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x20606e01e78 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x20606e01db8 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x20606e01968 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x20606e01ec0 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x20606e01dd8 <col:41> 'const wchar_t *' lvalue ParmVar 0x20606e01a40 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x20606e01ed8 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x20606e01df8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x20606e01ab8 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x20606e02318 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x20606e01f70 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x20606e02020 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x20606e02098 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x20606e02110 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x20606e02780 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x20606e024c0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20606e02538 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x20606e025b0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x20606e02838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20606e02c48 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x20606e02ce8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x20606e02d50 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x20606e02db8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x20606e02e38 prev 0x20606e02c48 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x20606e02978 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x20606e029f0 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x20606e02a68 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x20606dfb160 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x20606e02f18 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x20606e02f90 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x20606dfafb0 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x20606dfb028 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x20606dfb510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x20606dfb308 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20606dfb380 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x20606dfb3f8 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x20606dfb5c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20606dfb928 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20606dfb708 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x20606dfb780 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x20606dfbb70 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x20606dfba00 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x20606dfba78 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x20606dfbdb8 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20606dfbc48 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x20606dfbcc0 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x20606e03090 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20606dfbe90 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x20606dfbf08 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x20606e03398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20606e03228 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x20606e032a0 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x20606e03448 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20606e038b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x20606e03588 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x20606e03600 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x20606e036e0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x20606e03bd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x20606e03a58 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x20606e03c78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20606dfd040 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x20606e03db8 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x20606e03e30 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20606e03eb0 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x20606dfd2f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x20606dfd218 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x20606dfd398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20606dfd760 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x20606dfd4d8 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x20606dfd550 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20606dfd5c8 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x20606dfd9b8 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20606dfd840 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x20606dfd8b8 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x20606dfdd58 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x20606dfda90 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x20606dfdb08 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x20606dfdb80 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20606e08108 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x20606dfde38 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x20606dfdeb0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x20606dfdf28 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x20606e08560 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x20606e081e8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x20606e08260 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x20606e082d8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20606e08350 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20606e089b8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x20606e08648 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x20606e086c0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20606e08738 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x20606e087b0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x20606e08e20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x20606e08b60 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x20606e08bd8 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x20606e08c50 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x20606e08ed8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20606e091a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x20606e09018 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x20606e09530 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x20606e09270 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x20606e092e8 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20606e09360 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x20606e098e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x20606e096d0 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x20606e09748 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x20606e09998 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20606e09cf8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x20606e09ad8 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x20606e09b50 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x20606e09f68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x20606e09e90 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x20606e0a010 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20606e0a460 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x20606e0a198 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x20606e0a210 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20606e0a288 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20606e0a818 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x20606e0a600 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x20606e0a678 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20606e0a8c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20606e0ab78 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x20606e0aa08 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x20606e0aa80 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x20606e0ade8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x20606e0ad10 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x20606e0ae90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20606e061f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x20606e0afd0 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x20606e06060 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20606e060d8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20606e06500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x20606e06390 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x20606e06408 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20606e065b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20606e069b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x20606e066f0 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x20606e06768 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x20606e067e0 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x20606e06df8 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x20606e06a90 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x20606e06b08 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20606e06b80 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20606e06bf8 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20606e0b0b0 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20606e06ee0 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x20606e06f58 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x20606e0b398 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x20606e0b188 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x20606e0b200 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x20606e0b278 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20606e0b5f0 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20606e0b478 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x20606e0b4f0 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x20606e0b8d8 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x20606e0b6c8 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x20606e0b740 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x20606e0b7b8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20606e0bbc8 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x20606e0b9b8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x20606e0ba30 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x20606e0baa8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x20606e0bf50 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x20606e0bca8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x20606e0bd20 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x20606e0bd98 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20606e0be10 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20606e07208 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x20606e0c038 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x20606e07070 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x20606e070e8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x20606e07590 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x20606e072e8 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x20606e07360 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x20606e073d8 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20606e07450 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20606e077f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x20606e07718 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x20606e07898 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x20606e07bd0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20606e07a58 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x20606e07ad0 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x20606e07c80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x20606e05050 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x20606e07e40 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x20606e07eb8 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x20606e07f30 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x20606e05108 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x20606e054d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x20606e052c8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x20606e05340 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x20606e053b8 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x20606e05588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x20606e05820 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x20606e05748 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x20606e058c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x20606e05bf8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x20606e05a88 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x20606e05b00 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x20606e05ca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x20606e05f40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x20606e05e68 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x20606e05fe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x20606e0f340 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x20606e0f268 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x20606e0f3e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x20606e0f720 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20606e0f5a8 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x20606e0f620 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x20606e0f7d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-EnumDecl 0x20606e0f8e0 <.//openssl//file_jk/before\crypto\asn1\bio_asn1.c:23:9, line:31:1> line:23:9
| |-EnumConstantDecl 0x20606e0f9c0 <line:24:5> col:5 referenced ASN1_STATE_START 'int'
| |-EnumConstantDecl 0x20606e0fa18 <line:25:5> col:5 referenced ASN1_STATE_PRE_COPY 'int'
| |-EnumConstantDecl 0x20606e0fa70 <line:26:5> col:5 referenced ASN1_STATE_HEADER 'int'
| |-EnumConstantDecl 0x20606e0fac8 <line:27:5> col:5 referenced ASN1_STATE_HEADER_COPY 'int'
| |-EnumConstantDecl 0x20606e0fb20 <line:28:5> col:5 referenced ASN1_STATE_DATA_COPY 'int'
| |-EnumConstantDecl 0x20606e0fb78 <line:29:5> col:5 referenced ASN1_STATE_POST_COPY 'int'
| `-EnumConstantDecl 0x20606e0fbd0 <line:30:5> col:5 referenced ASN1_STATE_DONE 'int'
|-TypedefDecl 0x20606e0fc88 <line:23:1, line:31:3> col:3 referenced asn1_bio_state_t 'enum asn1_bio_state_t':'asn1_bio_state_t'
| `-ElaboratedType 0x20606e0fc30 'enum asn1_bio_state_t' sugar
|   `-EnumType 0x20606e0f9a0 'asn1_bio_state_t'
|     `-Enum 0x20606e0f8e0 ''
|-RecordDecl 0x20606e0fcf8 <line:33:9, line:36:1> line:33:16 invalid struct BIO_ASN1_EX_FUNCS_st definition
| |-FieldDecl 0x20606e0fdc8 <line:34:5, col:19> col:19 invalid ex_func 'int *'
| `-FieldDecl 0x20606e0fe38 <line:35:5, col:19> col:19 invalid ex_free_func 'int *'
|-TypedefDecl 0x20606e0fee8 <line:33:1, line:36:3> col:3 referenced BIO_ASN1_EX_FUNCS 'struct BIO_ASN1_EX_FUNCS_st':'struct BIO_ASN1_EX_FUNCS_st'
| `-ElaboratedType 0x20606e0fe90 'struct BIO_ASN1_EX_FUNCS_st' sugar
|   `-RecordType 0x20606e0fd90 'struct BIO_ASN1_EX_FUNCS_st'
|     `-Record 0x20606e0fcf8 'BIO_ASN1_EX_FUNCS_st'
|-RecordDecl 0x20606e0ff58 <line:38:9, line:59:1> line:38:16 invalid struct BIO_ASN1_BUF_CTX_t definition
| |-FieldDecl 0x20606e10040 <line:40:5, col:22> col:22 referenced state 'asn1_bio_state_t':'asn1_bio_state_t'
| |-FieldDecl 0x20606e0d0d0 <line:42:5, col:20> col:20 referenced buf 'unsigned char *'
| |-FieldDecl 0x20606e0d140 <line:44:5, col:9> col:9 referenced bufsize 'int'
| |-FieldDecl 0x20606e0d1b0 <line:46:5, col:9> col:9 referenced bufpos 'int'
| |-FieldDecl 0x20606e0d220 <line:48:5, col:9> col:9 referenced buflen 'int'
| |-FieldDecl 0x20606e0d290 <line:50:5, col:9> col:9 referenced copylen 'int'
| |-FieldDecl 0x20606e0d300 <line:52:5, col:9> col:9 referenced asn1_class 'int'
| |-FieldDecl 0x20606e0d370 <col:5, col:21> col:21 referenced asn1_tag 'int'
| |-FieldDecl 0x20606e0d3e0 <line:53:5, col:19> col:19 invalid prefix 'int *'
| |-FieldDecl 0x20606e0d450 <col:5, col:28> col:28 invalid prefix_free 'int *'
| |-FieldDecl 0x20606e0d4c0 <col:5, col:42> col:42 invalid suffix 'int *'
| |-FieldDecl 0x20606e0d530 <col:5, col:51> col:51 invalid suffix_free 'int *'
| |-FieldDecl 0x20606e0d5a0 <line:55:5, col:20> col:20 referenced ex_buf 'unsigned char *'
| |-FieldDecl 0x20606e0d610 <line:56:5, col:9> col:9 referenced ex_len 'int'
| |-FieldDecl 0x20606e0d680 <line:57:5, col:9> col:9 referenced ex_pos 'int'
| `-FieldDecl 0x20606e0d6f0 <line:58:5, col:11> col:11 referenced ex_arg 'void *'
|-TypedefDecl 0x20606e0d7a8 <line:38:1, line:59:3> col:3 referenced BIO_ASN1_BUF_CTX 'struct BIO_ASN1_BUF_CTX_t':'struct BIO_ASN1_BUF_CTX_t'
| `-ElaboratedType 0x20606e0d750 'struct BIO_ASN1_BUF_CTX_t' sugar
|   `-RecordType 0x20606e0fff0 'struct BIO_ASN1_BUF_CTX_t'
|     `-Record 0x20606e0ff58 'BIO_ASN1_BUF_CTX_t'
|-FunctionDecl 0x20606e0da20 <line:61:1, col:59> col:12 invalid asn1_bio_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x20606e0d830 <col:27, col:32> col:32 invalid h 'int *'
| |-ParmVarDecl 0x20606e0d8b0 <col:35, col:47> col:47 buf 'const char *'
| `-ParmVarDecl 0x20606e0d930 <col:52, col:56> col:56 num 'int'
|-FunctionDecl 0x20606e0dce0 <line:62:1, col:53> col:12 invalid asn1_bio_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x20606e0daf0 <col:26, col:31> col:31 invalid h 'int *'
| |-ParmVarDecl 0x20606e0db70 <col:34, col:40> col:40 buf 'char *'
| `-ParmVarDecl 0x20606e0dbf0 <col:45, col:49> col:49 size 'int'
|-FunctionDecl 0x20606e0df10 <line:63:1, col:49> col:12 invalid asn1_bio_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x20606e0ddb0 <col:26, col:31> col:31 invalid h 'int *'
| `-ParmVarDecl 0x20606e0de30 <col:34, col:46> col:46 str 'const char *'
|-FunctionDecl 0x20606e121e0 <line:64:1, col:53> col:12 invalid asn1_bio_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x20606e0dfd8 <col:26, col:31> col:31 invalid h 'int *'
| |-ParmVarDecl 0x20606e0e058 <col:34, col:40> col:40 str 'char *'
| `-ParmVarDecl 0x20606e12138 <col:45, col:49> col:49 size 'int'
|-FunctionDecl 0x20606e12530 <line:65:1, col:65> col:13 invalid asn1_bio_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x20606e122b0 <col:27, col:32> col:32 invalid h 'int *'
| |-ParmVarDecl 0x20606e12330 <col:35, col:39> col:39 cmd 'int'
| |-ParmVarDecl 0x20606e123b0 <col:44, col:49> col:49 arg1 'long'
| `-ParmVarDecl 0x20606e12430 <col:55, col:61> col:61 arg2 'void *'
|-FunctionDecl 0x20606e126d0 <line:66:1, col:31> col:12 invalid asn1_bio_new 'int (int *)' static
| `-ParmVarDecl 0x20606e12608 <col:25, col:30> col:30 invalid h 'int *'
|-FunctionDecl 0x20606e12828 <line:67:1, col:35> col:12 invalid asn1_bio_free 'int (int *)' static
| `-ParmVarDecl 0x20606e12790 <col:26, col:31> col:31 invalid data 'int *'
|-FunctionDecl 0x20606e12ad0 <line:68:1, col:68> col:13 invalid asn1_bio_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x20606e128e8 <col:36, col:41> col:41 invalid h 'int *'
| |-ParmVarDecl 0x20606e12968 <col:44, col:48> col:48 cmd 'int'
| `-ParmVarDecl 0x20606e129e8 <col:53, col:66> col:66 invalid fp 'int *'
|-FunctionDecl 0x20606e12de0 <line:70:1, col:57> col:12 used asn1_bio_init 'int (BIO_ASN1_BUF_CTX *, int)' static
| |-ParmVarDecl 0x20606e12c18 <col:26, col:44> col:44 ctx 'BIO_ASN1_BUF_CTX *'
| `-ParmVarDecl 0x20606e12c98 <col:49, col:53> col:53 size 'int'
|-FunctionDecl 0x20606e0e170 <line:71:1, line:72:74> line:71:12 invalid asn1_bio_flush_ex 'int (int *, BIO_ASN1_BUF_CTX *, int *, asn1_bio_state_t)' static
| |-ParmVarDecl 0x20606e12ec0 <col:30, col:35> col:35 invalid b 'int *'
| |-ParmVarDecl 0x20606e12f38 <col:38, col:56> col:56 ctx 'BIO_ASN1_BUF_CTX *'
| |-ParmVarDecl 0x20606e12fb8 <line:72:30, col:44> col:44 invalid cleanup 'int *'
| `-ParmVarDecl 0x20606e13030 <col:53, col:70> col:70 next 'asn1_bio_state_t':'asn1_bio_state_t'
|-FunctionDecl 0x20606e0e590 <line:73:1, line:76:58> line:73:12 invalid asn1_bio_setup_ex 'int (int *, BIO_ASN1_BUF_CTX *, int *, asn1_bio_state_t, asn1_bio_state_t)' static
| |-ParmVarDecl 0x20606e0e248 <col:30, col:35> col:35 invalid b 'int *'
| |-ParmVarDecl 0x20606e0e2c0 <col:38, col:56> col:56 ctx 'BIO_ASN1_BUF_CTX *'
| |-ParmVarDecl 0x20606e0e340 <line:74:30, col:44> col:44 invalid setup 'int *'
| |-ParmVarDecl 0x20606e0e3b8 <line:75:30, col:47> col:47 ex_state 'asn1_bio_state_t':'asn1_bio_state_t'
| `-ParmVarDecl 0x20606e0e430 <line:76:30, col:47> col:47 other_state 'asn1_bio_state_t':'asn1_bio_state_t'
|-VarDecl 0x20606e0e670 <line:78:1, col:25> col:25 invalid methods_asn1 'const int' static
|-FunctionDecl 0x20606e0e800 <line:91:1, line:94:1> line:91:19 invalid BIO_f_asn1 'const int *(void)'
| `-CompoundStmt 0x20606e0e8b8 <line:92:1, line:94:1>
|-FunctionDecl 0x20606e0e978 <line:96:1, line:110:1> line:96:12 invalid asn1_bio_new 'int (int *)' static
| |-ParmVarDecl 0x20606e0e8e0 <col:25, col:30> col:30 invalid b 'int *'
| `-CompoundStmt 0x20606e154b8 <line:97:1, line:110:1>
|   |-DeclStmt 0x20606e0ed00 <line:98:5, col:57>
|   | `-VarDecl 0x20606e0ea48 <col:5, col:56> col:23 used ctx 'BIO_ASN1_BUF_CTX *' cinit
|   |   `-ImplicitCastExpr 0x20606e0ece8 <col:29, col:56> 'BIO_ASN1_BUF_CTX *' <IntegralToPointer>
|   |     `-CallExpr 0x20606e0ecc0 <col:29, col:56> 'int'
|   |       |-ImplicitCastExpr 0x20606e0eca8 <col:29> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x20606e0ebc8 <col:29> 'int ()' Function 0x20606e0eb00 'OPENSSL_zalloc' 'int ()'
|   |       `-UnaryExprOrTypeTraitExpr 0x20606e0ec58 <col:44, col:55> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x20606e0ec38 <col:50, col:55> 'BIO_ASN1_BUF_CTX':'struct BIO_ASN1_BUF_CTX_t' lvalue
|   |           `-UnaryOperator 0x20606e0ec20 <col:51, col:52> 'BIO_ASN1_BUF_CTX':'struct BIO_ASN1_BUF_CTX_t' lvalue prefix '*' cannot overflow
|   |             `-ImplicitCastExpr 0x20606e0ec08 <col:52> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |               `-DeclRefExpr 0x20606e0ebe8 <col:52> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606e0ea48 'ctx' 'BIO_ASN1_BUF_CTX *' non_odr_use_unevaluated
|   |-IfStmt 0x20606e0ee60 <line:100:5, line:101:16>
|   | |-BinaryOperator 0x20606e0ee08 <line:100:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x20606e0edd8 <.//openssl//file_jk/before\crypto\asn1\bio_asn1.c:100:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20606e0ed18 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606e0ea48 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-ImplicitCastExpr 0x20606e0edf0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'BIO_ASN1_BUF_CTX *' <BitCast>
|   | |   `-ParenExpr 0x20606e0edb8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x20606e0ed90 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x20606e0ed50 <col:26> 'int' 0
|   | `-ReturnStmt 0x20606e0ee50 <.//openssl//file_jk/before\crypto\asn1\bio_asn1.c:101:9, col:16>
|   |   `-IntegerLiteral 0x20606e0ee28 <col:16> 'int' 0
|   |-IfStmt 0x20606e15200 <line:102:5, line:105:5>
|   | |-UnaryOperator 0x20606e0ef98 <line:102:9, col:50> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x20606e0ef50 <col:10, col:50> 'int'
|   | |   |-ImplicitCastExpr 0x20606e0ef38 <col:10> 'int (*)(BIO_ASN1_BUF_CTX *, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x20606e0ee78 <col:10> 'int (BIO_ASN1_BUF_CTX *, int)' Function 0x20606e12de0 'asn1_bio_init' 'int (BIO_ASN1_BUF_CTX *, int)'
|   | |   |-ImplicitCastExpr 0x20606e0ef80 <col:24> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x20606e0ee98 <col:24> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606e0ea48 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | |   `-IntegerLiteral 0x20606e0eeb8 <line:21:31> 'int' 20
|   | `-CompoundStmt 0x20606e151e0 <line:102:53, line:105:5>
|   |   |-CallExpr 0x20606e15168 <line:103:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x20606e15150 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x20606e0f0a0 <col:9> 'int ()' Function 0x20606e0efd8 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x20606e15190 <col:22> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x20606e0f0c0 <col:22> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606e0ea48 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   `-ReturnStmt 0x20606e151d0 <line:104:9, col:16>
|   |     `-IntegerLiteral 0x20606e151a8 <col:16> 'int' 0
|   `-ReturnStmt 0x20606e154a8 <line:109:5, col:12>
|     `-IntegerLiteral 0x20606e15480 <col:12> 'int' 1
|-FunctionDecl 0x20606e15648 prev 0x20606e12de0 <line:112:1, line:122:1> line:112:12 used asn1_bio_init 'int (BIO_ASN1_BUF_CTX *, int)' static
| |-ParmVarDecl 0x20606e154f8 <col:26, col:44> col:44 used ctx 'BIO_ASN1_BUF_CTX *'
| |-ParmVarDecl 0x20606e15578 <col:49, col:53> col:53 used size 'int'
| `-CompoundStmt 0x20606e15d38 <line:113:1, line:122:1>
|   |-BinaryOperator 0x20606e15900 <line:114:5, col:35> 'unsigned char *' '='
|   | |-MemberExpr 0x20606e15730 <col:5, col:10> 'unsigned char *' lvalue ->buf 0x20606e0d0d0
|   | | `-ImplicitCastExpr 0x20606e15718 <col:5> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20606e156f8 <col:5> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x20606e154f8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | `-ImplicitCastExpr 0x20606e158e8 <col:16, col:35> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x20606e158a8 <col:16, col:35> 'int'
|   |     |-ImplicitCastExpr 0x20606e15890 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x20606e15850 <col:16> 'int ()' Function 0x20606e15788 'OPENSSL_malloc' 'int ()'
|   |     `-ImplicitCastExpr 0x20606e158d0 <col:31> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x20606e15870 <col:31> 'int' lvalue ParmVar 0x20606e15578 'size' 'int'
|   |-IfStmt 0x20606e15a98 <line:115:5, line:116:16>
|   | |-BinaryOperator 0x20606e15a40 <line:115:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x20606e15a10 <.//openssl//file_jk/before\crypto\asn1\bio_asn1.c:115:9, col:14> 'unsigned char *' <LValueToRValue>
|   | | | `-MemberExpr 0x20606e15958 <col:9, col:14> 'unsigned char *' lvalue ->buf 0x20606e0d0d0
|   | | |   `-ImplicitCastExpr 0x20606e15940 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x20606e15920 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x20606e154f8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-ImplicitCastExpr 0x20606e15a28 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x20606e159f0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x20606e159c8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x20606e15988 <col:26> 'int' 0
|   | `-ReturnStmt 0x20606e15a88 <.//openssl//file_jk/before\crypto\asn1\bio_asn1.c:116:9, col:16>
|   |   `-IntegerLiteral 0x20606e15a60 <col:16> 'int' 0
|   |-BinaryOperator 0x20606e15b50 <line:117:5, col:20> 'int' '='
|   | |-MemberExpr 0x20606e15ae8 <col:5, col:10> 'int' lvalue ->bufsize 0x20606e0d140
|   | | `-ImplicitCastExpr 0x20606e15ad0 <col:5> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20606e15ab0 <col:5> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x20606e154f8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | `-ImplicitCastExpr 0x20606e15b38 <col:20> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x20606e15b18 <col:20> 'int' lvalue ParmVar 0x20606e15578 'size' 'int'
|   |-BinaryOperator 0x20606e15ce0 <line:120:5, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   | |-MemberExpr 0x20606e15c78 <col:5, col:10> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x20606e10040
|   | | `-ImplicitCastExpr 0x20606e15c60 <col:5> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20606e15c40 <col:5> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x20606e154f8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | `-ImplicitCastExpr 0x20606e15cc8 <col:18> 'asn1_bio_state_t':'asn1_bio_state_t' <IntegralCast>
|   |   `-DeclRefExpr 0x20606e15ca8 <col:18> 'int' EnumConstant 0x20606e0f9c0 'ASN1_STATE_START' 'int'
|   `-ReturnStmt 0x20606e15d28 <line:121:5, col:12>
|     `-IntegerLiteral 0x20606e15d00 <col:12> 'int' 1
|-FunctionDecl 0x20606e15e20 <line:124:1, line:141:1> line:124:12 invalid asn1_bio_free 'int (int *)' static
| |-ParmVarDecl 0x20606e15d88 <col:26, col:31> col:31 invalid b 'int *'
| `-CompoundStmt 0x20606e16630 <line:125:1, line:141:1>
|   |-DeclStmt 0x20606e15f58 <line:126:5, col:26>
|   | `-VarDecl 0x20606e15ef0 <col:5, col:23> col:23 used ctx 'BIO_ASN1_BUF_CTX *'
|   |-IfStmt 0x20606e16048 <line:128:5, line:129:16>
|   | |-OpaqueValueExpr 0x20606e16030 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x20606e16020 <col:9, col:16>
|   |   `-IntegerLiteral 0x20606e15ff8 <col:16> 'int' 0
|   |-IfStmt 0x20606e16378 <line:132:5, line:133:16>
|   | |-BinaryOperator 0x20606e16320 <line:132:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x20606e162f0 <.//openssl//file_jk/before\crypto\asn1\bio_asn1.c:132:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20606e16248 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606e15ef0 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-ImplicitCastExpr 0x20606e16308 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'BIO_ASN1_BUF_CTX *' <BitCast>
|   | |   `-ParenExpr 0x20606e162d0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x20606e162a8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x20606e16268 <col:26> 'int' 0
|   | `-ReturnStmt 0x20606e16368 <.//openssl//file_jk/before\crypto\asn1\bio_asn1.c:133:9, col:16>
|   |   `-IntegerLiteral 0x20606e16340 <col:16> 'int' 0
|   |-CallExpr 0x20606e16430 <line:135:5, col:26> 'int'
|   | |-ImplicitCastExpr 0x20606e16418 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x20606e16390 <col:5> 'int ()' Function 0x20606e0efd8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x20606e16458 <col:18, col:23> 'unsigned char *' <LValueToRValue>
|   |   `-MemberExpr 0x20606e163e8 <col:18, col:23> 'unsigned char *' lvalue ->buf 0x20606e0d0d0
|   |     `-ImplicitCastExpr 0x20606e163d0 <col:18> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x20606e163b0 <col:18> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606e15ef0 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |-CallExpr 0x20606e164c8 <line:136:5, col:21> 'int'
|   | |-ImplicitCastExpr 0x20606e164b0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x20606e16470 <col:5> 'int ()' Function 0x20606e0efd8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x20606e164f0 <col:18> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   `-DeclRefExpr 0x20606e16490 <col:18> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606e15ef0 'ctx' 'BIO_ASN1_BUF_CTX *'
|   `-ReturnStmt 0x20606e16620 <line:140:5, col:12>
|     `-IntegerLiteral 0x20606e165f8 <col:12> 'int' 1
|-FunctionDecl 0x20606e16830 <line:143:1, line:240:1> line:143:12 invalid asn1_bio_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x20606e16688 <col:27, col:32> col:32 invalid b 'int *'
| |-ParmVarDecl 0x20606e16708 <col:35, col:47> col:47 used in 'const char *'
| |-ParmVarDecl 0x20606e16788 <col:51, col:55> col:55 used inl 'int'
| `-CompoundStmt 0x20606dbe620 <line:144:1, line:240:1>
|   |-DeclStmt 0x20606e16978 <line:145:5, col:26>
|   | `-VarDecl 0x20606e16910 <col:5, col:23> col:23 used ctx 'BIO_ASN1_BUF_CTX *'
|   |-DeclStmt 0x20606e16b30 <line:146:5, col:26>
|   | |-VarDecl 0x20606e169a8 <col:5, col:9> col:9 used wrmax 'int'
|   | |-VarDecl 0x20606e16a28 <col:5, col:16> col:16 used wrlen 'int'
|   | `-VarDecl 0x20606e16aa8 <col:5, col:23> col:23 used ret 'int'
|   |-DeclStmt 0x20606e16bc8 <line:147:5, col:21>
|   | `-VarDecl 0x20606e16b60 <col:5, col:20> col:20 used p 'unsigned char *'
|   |-IfStmt 0x20606e17100 <line:152:5, line:153:16>
|   | |-OpaqueValueExpr 0x20606e170e8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x20606e170d8 <col:9, col:16>
|   |   `-IntegerLiteral 0x20606e170b0 <col:16> 'int' 0
|   |-BinaryOperator 0x20606e11138 <line:155:5, col:13> 'int' '='
|   | |-DeclRefExpr 0x20606e17118 <col:5> 'int' lvalue Var 0x20606e16a28 'wrlen' 'int'
|   | `-IntegerLiteral 0x20606e11110 <col:13> 'int' 0
|   |-BinaryOperator 0x20606e111d0 <line:156:5, col:12> 'int' '='
|   | |-DeclRefExpr 0x20606e11158 <col:5> 'int' lvalue Var 0x20606e16aa8 'ret' 'int'
|   | `-UnaryOperator 0x20606e111b8 <col:11, col:12> 'int' prefix '-'
|   |   `-IntegerLiteral 0x20606e11190 <col:12> 'int' 1
|   |-ForStmt 0x20606dbe348 <line:158:5, line:232:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x20606dbe330 <line:158:14, line:232:5>
|   |   `-SwitchStmt 0x20606e11288 <line:159:9, line:230:9>
|   |     |-ImplicitCastExpr 0x20606e11270 <line:159:17, col:22> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x20606e11258 <col:17, col:22> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   |     |   `-MemberExpr 0x20606e11228 <col:17, col:22> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x20606e10040
|   |     |     `-ImplicitCastExpr 0x20606e11210 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x20606e111f0 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606e16910 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |     `-CompoundStmt 0x20606dbe240 <col:29, line:230:9>
|   |       |-CaseStmt 0x20606e112e0 <line:162:9, line:165:24>
|   |       | |-ConstantExpr 0x20606e112c8 <line:162:14> 'int'
|   |       | | `-DeclRefExpr 0x20606e112a8 <col:14> 'int' EnumConstant 0x20606e0f9c0 'ASN1_STATE_START' 'int'
|   |       | `-IfStmt 0x20606e113f0 <line:163:13, line:165:24>
|   |       |   |-OpaqueValueExpr 0x20606e113d8 <<invalid sloc>> '_Bool'
|   |       |   `-ReturnStmt 0x20606e113c8 <col:17, col:24>
|   |       |     `-IntegerLiteral 0x20606e113a0 <col:24> 'int' 0
|   |       |-BreakStmt 0x20606e11408 <line:166:13>
|   |       |-CaseStmt 0x20606e11448 <line:169:9, <invalid sloc>>
|   |       | |-ConstantExpr 0x20606e11430 <col:14> 'int'
|   |       | | `-DeclRefExpr 0x20606e11410 <col:14> 'int' EnumConstant 0x20606e0fa18 'ASN1_STATE_PRE_COPY' 'int'
|   |       | `-NullStmt 0x20606e11508 <<invalid sloc>>
|   |       |-IfStmt 0x20606e115f8 <line:174:13, line:175:22>
|   |       | |-BinaryOperator 0x20606e11570 <line:174:17, col:24> 'int' '<='
|   |       | | |-ImplicitCastExpr 0x20606e11558 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x20606e11510 <col:17> 'int' lvalue Var 0x20606e16aa8 'ret' 'int'
|   |       | | `-IntegerLiteral 0x20606e11530 <col:24> 'int' 0
|   |       | `-GotoStmt 0x20606e115e0 <line:175:17, col:22> 'done' 0x20606e11590
|   |       |-BreakStmt 0x20606e11610 <line:177:13>
|   |       |-CaseStmt 0x20606e11650 <line:179:9, line:180:69>
|   |       | |-ConstantExpr 0x20606e11638 <line:179:14> 'int'
|   |       | | `-DeclRefExpr 0x20606e11618 <col:14> 'int' EnumConstant 0x20606e0fa70 'ASN1_STATE_HEADER' 'int'
|   |       | `-BinaryOperator 0x20606e11978 <line:180:13, col:69> 'int' '='
|   |       |   |-MemberExpr 0x20606e116b0 <col:13, col:18> 'int' lvalue ->buflen 0x20606e0d220
|   |       |   | `-ImplicitCastExpr 0x20606e11698 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x20606e11678 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606e16910 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |   `-BinaryOperator 0x20606e11958 <col:27, col:69> 'int' '-'
|   |       |     |-CallExpr 0x20606e118b8 <col:27, col:65> 'int'
|   |       |     | |-ImplicitCastExpr 0x20606e118a0 <col:27> 'int (*)()' <FunctionToPointerDecay>
|   |       |     | | `-DeclRefExpr 0x20606e117d0 <col:27> 'int ()' Function 0x20606e11708 'ASN1_object_size' 'int ()'
|   |       |     | |-IntegerLiteral 0x20606e117f0 <col:44> 'int' 0
|   |       |     | |-ImplicitCastExpr 0x20606e118f0 <col:47> 'int' <LValueToRValue>
|   |       |     | | `-DeclRefExpr 0x20606e11818 <col:47> 'int' lvalue ParmVar 0x20606e16788 'inl' 'int'
|   |       |     | `-ImplicitCastExpr 0x20606e11908 <col:52, col:57> 'int' <LValueToRValue>
|   |       |     |   `-MemberExpr 0x20606e11870 <col:52, col:57> 'int' lvalue ->asn1_tag 0x20606e0d370
|   |       |     |     `-ImplicitCastExpr 0x20606e11858 <col:52> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |     |       `-DeclRefExpr 0x20606e11838 <col:52> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606e16910 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |     `-ImplicitCastExpr 0x20606e11940 <col:69> 'int' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x20606e11920 <col:69> 'int' lvalue ParmVar 0x20606e16788 'inl' 'int'
|   |       |-CallExpr 0x20606e11be0 <line:181:13, col:55> 'int'
|   |       | |-ImplicitCastExpr 0x20606e11bc8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x20606e11a88 <col:13> 'int ()' Function 0x20606e119c0 'OPENSSL_assert' 'int ()'
|   |       | `-BinaryOperator 0x20606e11ba8 <col:28, col:48> 'int' '<='
|   |       |   |-ImplicitCastExpr 0x20606e11b78 <col:28, col:33> 'int' <LValueToRValue>
|   |       |   | `-MemberExpr 0x20606e11ae0 <col:28, col:33> 'int' lvalue ->buflen 0x20606e0d220
|   |       |   |   `-ImplicitCastExpr 0x20606e11ac8 <col:28> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |   |     `-DeclRefExpr 0x20606e11aa8 <col:28> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606e16910 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |   `-ImplicitCastExpr 0x20606e11b90 <col:43, col:48> 'int' <LValueToRValue>
|   |       |     `-MemberExpr 0x20606e11b48 <col:43, col:48> 'int' lvalue ->bufsize 0x20606e0d140
|   |       |       `-ImplicitCastExpr 0x20606e11b30 <col:43> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |         `-DeclRefExpr 0x20606e11b10 <col:43> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606e16910 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |-BinaryOperator 0x20606e11cc0 <line:182:13, col:22> 'unsigned char *' '='
|   |       | |-DeclRefExpr 0x20606e11c08 <col:13> 'unsigned char *' lvalue Var 0x20606e16b60 'p' 'unsigned char *'
|   |       | `-ImplicitCastExpr 0x20606e11ca8 <col:17, col:22> 'unsigned char *' <LValueToRValue>
|   |       |   `-MemberExpr 0x20606e11c78 <col:17, col:22> 'unsigned char *' lvalue ->buf 0x20606e0d0d0
|   |       |     `-ImplicitCastExpr 0x20606e11c60 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x20606e11c40 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606e16910 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |-CallExpr 0x20606e11f80 <line:183:13, col:71> 'int'
|   |       | |-ImplicitCastExpr 0x20606e11f68 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x20606e11dd0 <col:13> 'int ()' Function 0x20606e11d08 'ASN1_put_object' 'int ()'
|   |       | |-UnaryOperator 0x20606e11e38 <col:29, col:30> 'unsigned char **' prefix '&' cannot overflow
|   |       | | `-DeclRefExpr 0x20606e11df0 <col:30> 'unsigned char *' lvalue Var 0x20606e16b60 'p' 'unsigned char *'
|   |       | |-IntegerLiteral 0x20606e11e50 <col:33> 'int' 0
|   |       | |-ImplicitCastExpr 0x20606e11fc8 <col:36> 'int' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x20606e11e78 <col:36> 'int' lvalue ParmVar 0x20606e16788 'inl' 'int'
|   |       | |-ImplicitCastExpr 0x20606e11fe0 <col:41, col:46> 'int' <LValueToRValue>
|   |       | | `-MemberExpr 0x20606e11ed0 <col:41, col:46> 'int' lvalue ->asn1_tag 0x20606e0d370
|   |       | |   `-ImplicitCastExpr 0x20606e11eb8 <col:41> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |     `-DeclRefExpr 0x20606e11e98 <col:41> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606e16910 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-ImplicitCastExpr 0x20606e11ff8 <col:56, col:61> 'int' <LValueToRValue>
|   |       |   `-MemberExpr 0x20606e11f38 <col:56, col:61> 'int' lvalue ->asn1_class 0x20606e0d300
|   |       |     `-ImplicitCastExpr 0x20606e11f20 <col:56> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x20606e11f00 <col:56> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606e16910 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |-BinaryOperator 0x20606e120b0 <line:184:13, col:28> 'int' '='
|   |       | |-MemberExpr 0x20606e12048 <col:13, col:18> 'int' lvalue ->copylen 0x20606e0d290
|   |       | | `-ImplicitCastExpr 0x20606e12030 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x20606e12010 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606e16910 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-ImplicitCastExpr 0x20606e12098 <col:28> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x20606e12078 <col:28> 'int' lvalue ParmVar 0x20606e16788 'inl' 'int'
|   |       |-BinaryOperator 0x20606e13198 <line:185:13, col:26> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   |       | |-MemberExpr 0x20606e13130 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x20606e10040
|   |       | | `-ImplicitCastExpr 0x20606e120f0 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x20606e120d0 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606e16910 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-ImplicitCastExpr 0x20606e13180 <col:26> 'asn1_bio_state_t':'asn1_bio_state_t' <IntegralCast>
|   |       |   `-DeclRefExpr 0x20606e13160 <col:26> 'int' EnumConstant 0x20606e0fac8 'ASN1_STATE_HEADER_COPY' 'int'
|   |       |-BreakStmt 0x20606e131b8 <line:187:13>
|   |       |-CaseStmt 0x20606e131f8 <line:189:9, <invalid sloc>>
|   |       | |-ConstantExpr 0x20606e131e0 <col:14> 'int'
|   |       | | `-DeclRefExpr 0x20606e131c0 <col:14> 'int' EnumConstant 0x20606e0fac8 'ASN1_STATE_HEADER_COPY' 'int'
|   |       | `-NullStmt 0x20606e134d8 <<invalid sloc>>
|   |       |-IfStmt 0x20606e13578 <line:191:13, line:192:22>
|   |       | |-BinaryOperator 0x20606e13540 <line:191:17, col:24> 'int' '<='
|   |       | | |-ImplicitCastExpr 0x20606e13528 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x20606e134e0 <col:17> 'int' lvalue Var 0x20606e16aa8 'ret' 'int'
|   |       | | `-IntegerLiteral 0x20606e13500 <col:24> 'int' 0
|   |       | `-GotoStmt 0x20606e13560 <line:192:17, col:22> 'done' 0x20606e11590
|   |       |-CompoundAssignOperator 0x20606e13630 <line:194:13, col:28> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-MemberExpr 0x20606e135c8 <col:13, col:18> 'int' lvalue ->buflen 0x20606e0d220
|   |       | | `-ImplicitCastExpr 0x20606e135b0 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x20606e13590 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606e16910 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-ImplicitCastExpr 0x20606e13618 <col:28> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x20606e135f8 <col:28> 'int' lvalue Var 0x20606e16aa8 'ret' 'int'
|   |       |-IfStmt 0x20606e13940 <line:195:13, line:200:13> has_else
|   |       | |-ImplicitCastExpr 0x20606e136c8 <line:195:17, col:22> 'int' <LValueToRValue>
|   |       | | `-MemberExpr 0x20606e13698 <col:17, col:22> 'int' lvalue ->buflen 0x20606e0d220
|   |       | |   `-ImplicitCastExpr 0x20606e13680 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |     `-DeclRefExpr 0x20606e13660 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606e16910 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | |-CompoundAssignOperator 0x20606e13780 <line:196:17, col:32> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | | |-MemberExpr 0x20606e13718 <col:17, col:22> 'int' lvalue ->bufpos 0x20606e0d1b0
|   |       | | | `-ImplicitCastExpr 0x20606e13700 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x20606e136e0 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606e16910 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | | `-ImplicitCastExpr 0x20606e13768 <col:32> 'int' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x20606e13748 <col:32> 'int' lvalue Var 0x20606e16aa8 'ret' 'int'
|   |       | `-CompoundStmt 0x20606e13920 <line:197:18, line:200:13>
|   |       |   |-BinaryOperator 0x20606e13840 <line:198:17, col:31> 'int' '='
|   |       |   | |-MemberExpr 0x20606e137e8 <col:17, col:22> 'int' lvalue ->bufpos 0x20606e0d1b0
|   |       |   | | `-ImplicitCastExpr 0x20606e137d0 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |   | |   `-DeclRefExpr 0x20606e137b0 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606e16910 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |   | `-IntegerLiteral 0x20606e13818 <col:31> 'int' 0
|   |       |   `-BinaryOperator 0x20606e13900 <line:199:17, col:30> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   |       |     |-MemberExpr 0x20606e13898 <col:17, col:22> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x20606e10040
|   |       |     | `-ImplicitCastExpr 0x20606e13880 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |     |   `-DeclRefExpr 0x20606e13860 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606e16910 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |     `-ImplicitCastExpr 0x20606e138e8 <col:30> 'asn1_bio_state_t':'asn1_bio_state_t' <IntegralCast>
|   |       |       `-DeclRefExpr 0x20606e138c8 <col:30> 'int' EnumConstant 0x20606e0fb20 'ASN1_STATE_DATA_COPY' 'int'
|   |       |-BreakStmt 0x20606e13968 <line:202:13>
|   |       |-CaseStmt 0x20606e139a8 <line:204:9, line:209:25>
|   |       | |-ConstantExpr 0x20606e13990 <line:204:14> 'int'
|   |       | | `-DeclRefExpr 0x20606e13970 <col:14> 'int' EnumConstant 0x20606e0fb20 'ASN1_STATE_DATA_COPY' 'int'
|   |       | `-IfStmt 0x20606e13bf8 <line:206:13, line:209:25> has_else
|   |       |   |-BinaryOperator 0x20606e13a88 <line:206:17, col:28> 'int' '>'
|   |       |   | |-ImplicitCastExpr 0x20606e13a58 <col:17> 'int' <LValueToRValue>
|   |       |   | | `-DeclRefExpr 0x20606e139d0 <col:17> 'int' lvalue ParmVar 0x20606e16788 'inl' 'int'
|   |       |   | `-ImplicitCastExpr 0x20606e13a70 <col:23, col:28> 'int' <LValueToRValue>
|   |       |   |   `-MemberExpr 0x20606e13a28 <col:23, col:28> 'int' lvalue ->copylen 0x20606e0d290
|   |       |   |     `-ImplicitCastExpr 0x20606e13a10 <col:23> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |   |       `-DeclRefExpr 0x20606e139f0 <col:23> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606e16910 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |   |-BinaryOperator 0x20606e13b60 <line:207:17, col:30> 'int' '='
|   |       |   | |-DeclRefExpr 0x20606e13aa8 <col:17> 'int' lvalue Var 0x20606e169a8 'wrmax' 'int'
|   |       |   | `-ImplicitCastExpr 0x20606e13b48 <col:25, col:30> 'int' <LValueToRValue>
|   |       |   |   `-MemberExpr 0x20606e13b18 <col:25, col:30> 'int' lvalue ->copylen 0x20606e0d290
|   |       |   |     `-ImplicitCastExpr 0x20606e13b00 <col:25> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |   |       `-DeclRefExpr 0x20606e13ae0 <col:25> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606e16910 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |   `-BinaryOperator 0x20606e13bd8 <line:209:17, col:25> 'int' '='
|   |       |     |-DeclRefExpr 0x20606e13b80 <col:17> 'int' lvalue Var 0x20606e169a8 'wrmax' 'int'
|   |       |     `-ImplicitCastExpr 0x20606e13bc0 <col:25> 'int' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x20606e13ba0 <col:25> 'int' lvalue ParmVar 0x20606e16788 'inl' 'int'
|   |       |-IfStmt 0x20606e13d38 <line:211:13, line:212:22>
|   |       | |-BinaryOperator 0x20606e13d00 <line:211:17, col:24> 'int' '<='
|   |       | | |-ImplicitCastExpr 0x20606e13ce8 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x20606e13ca0 <col:17> 'int' lvalue Var 0x20606e16aa8 'ret' 'int'
|   |       | | `-IntegerLiteral 0x20606e13cc0 <col:24> 'int' 0
|   |       | `-GotoStmt 0x20606e13d20 <line:212:17, col:22> 'done' 0x20606e11590
|   |       |-CompoundAssignOperator 0x20606e13da8 <line:213:13, col:22> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-DeclRefExpr 0x20606e13d50 <col:13> 'int' lvalue Var 0x20606e16a28 'wrlen' 'int'
|   |       | `-ImplicitCastExpr 0x20606e13d90 <col:22> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x20606e13d70 <col:22> 'int' lvalue Var 0x20606e16aa8 'ret' 'int'
|   |       |-CompoundAssignOperator 0x20606e13e78 <line:214:13, col:29> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-MemberExpr 0x20606e13e10 <col:13, col:18> 'int' lvalue ->copylen 0x20606e0d290
|   |       | | `-ImplicitCastExpr 0x20606e13df8 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x20606e13dd8 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606e16910 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-ImplicitCastExpr 0x20606e13e60 <col:29> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x20606e13e40 <col:29> 'int' lvalue Var 0x20606e16aa8 'ret' 'int'
|   |       |-CompoundAssignOperator 0x20606e13f00 <line:215:13, col:19> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |       | |-DeclRefExpr 0x20606e13ea8 <col:13> 'const char *' lvalue ParmVar 0x20606e16708 'in' 'const char *'
|   |       | `-ImplicitCastExpr 0x20606e13ee8 <col:19> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x20606e13ec8 <col:19> 'int' lvalue Var 0x20606e16aa8 'ret' 'int'
|   |       |-CompoundAssignOperator 0x20606e13f88 <line:216:13, col:20> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-DeclRefExpr 0x20606e13f30 <col:13> 'int' lvalue ParmVar 0x20606e16788 'inl' 'int'
|   |       | `-ImplicitCastExpr 0x20606e13f70 <col:20> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x20606e13f50 <col:20> 'int' lvalue Var 0x20606e16aa8 'ret' 'int'
|   |       |-IfStmt 0x20606dbe000 <line:218:13, line:219:30>
|   |       | |-BinaryOperator 0x20606e14060 <line:218:17, col:33> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x20606e14048 <col:17, col:22> 'int' <LValueToRValue>
|   |       | | | `-MemberExpr 0x20606e13ff0 <col:17, col:22> 'int' lvalue ->copylen 0x20606e0d290
|   |       | | |   `-ImplicitCastExpr 0x20606e13fd8 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | | |     `-DeclRefExpr 0x20606e13fb8 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606e16910 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | | `-IntegerLiteral 0x20606e14020 <col:33> 'int' 0
|   |       | `-BinaryOperator 0x20606dbdfe0 <line:219:17, col:30> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   |       |   |-MemberExpr 0x20606e140b8 <col:17, col:22> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x20606e10040
|   |       |   | `-ImplicitCastExpr 0x20606e140a0 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x20606e14080 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606e16910 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |   `-ImplicitCastExpr 0x20606e14108 <col:30> 'asn1_bio_state_t':'asn1_bio_state_t' <IntegralCast>
|   |       |     `-DeclRefExpr 0x20606e140e8 <col:30> 'int' EnumConstant 0x20606e0fa70 'ASN1_STATE_HEADER' 'int'
|   |       |-IfStmt 0x20606dbe0b0 <line:221:13, line:222:22>
|   |       | |-BinaryOperator 0x20606dbe078 <line:221:17, col:24> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x20606dbe060 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x20606dbe018 <col:17> 'int' lvalue ParmVar 0x20606e16788 'inl' 'int'
|   |       | | `-IntegerLiteral 0x20606dbe038 <col:24> 'int' 0
|   |       | `-GotoStmt 0x20606dbe098 <line:222:17, col:22> 'done' 0x20606e11590
|   |       |-BreakStmt 0x20606dbe0c8 <line:224:13>
|   |       |-DefaultStmt 0x20606dbe1e8 <line:226:9, col:16>
|   |       | `-NullStmt 0x20606dbe1e0 <col:16>
|   |       `-ReturnStmt 0x20606dbe230 <line:228:13, col:20>
|   |         `-IntegerLiteral 0x20606dbe208 <col:20> 'int' 0
|   |-LabelStmt 0x20606dbe3a8 <line:234:2, col:6> 'done'
|   | `-NullStmt 0x20606dbe3a0 <col:6>
|   `-ReturnStmt 0x20606dbe610 <line:238:5, col:34>
|     `-ConditionalOperator 0x20606dbe5e0 <col:12, col:34> 'int'
|       |-ParenExpr 0x20606dbe550 <col:12, col:22> 'int'
|       | `-BinaryOperator 0x20606dbe530 <col:13, col:21> 'int' '>'
|       |   |-ImplicitCastExpr 0x20606dbe518 <col:13> 'int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x20606dbe4d0 <col:13> 'int' lvalue Var 0x20606e16a28 'wrlen' 'int'
|       |   `-IntegerLiteral 0x20606dbe4f0 <col:21> 'int' 0
|       |-ImplicitCastExpr 0x20606dbe5b0 <col:26> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x20606dbe570 <col:26> 'int' lvalue Var 0x20606e16a28 'wrlen' 'int'
|       `-ImplicitCastExpr 0x20606dbe5c8 <col:34> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x20606dbe590 <col:34> 'int' lvalue Var 0x20606e16aa8 'ret' 'int'
|-FunctionDecl 0x20606dbe8b0 <line:242:1, line:265:1> line:242:12 invalid asn1_bio_flush_ex 'int (int *, BIO_ASN1_BUF_CTX *, int *, asn1_bio_state_t)' static
| |-ParmVarDecl 0x20606dbe690 <col:30, col:35> col:35 invalid b 'int *'
| |-ParmVarDecl 0x20606dbe708 <col:38, col:56> col:56 used ctx 'BIO_ASN1_BUF_CTX *'
| |-ParmVarDecl 0x20606dbe788 <line:243:30, col:44> col:44 invalid cleanup 'int *'
| |-ParmVarDecl 0x20606dbe800 <col:53, col:70> col:70 used next 'asn1_bio_state_t':'asn1_bio_state_t'
| `-CompoundStmt 0x20606dbc488 <line:244:1, line:265:1>
|   |-DeclStmt 0x20606dbea08 <line:245:5, col:12>
|   | `-VarDecl 0x20606dbe9a0 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x20606dbeb38 <line:247:5, line:248:16>
|   | |-BinaryOperator 0x20606dbeae0 <line:247:9, col:24> 'int' '<='
|   | | |-ImplicitCastExpr 0x20606dbeac8 <col:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x20606dbea70 <col:9, col:14> 'int' lvalue ->ex_len 0x20606e0d610
|   | | |   `-ImplicitCastExpr 0x20606dbea58 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x20606dbea20 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x20606dbe708 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-IntegerLiteral 0x20606dbeaa0 <col:24> 'int' 0
|   | `-ReturnStmt 0x20606dbeb28 <line:248:9, col:16>
|   |   `-IntegerLiteral 0x20606dbeb00 <col:16> 'int' 1
|   |-ForStmt 0x20606dbc408 <line:249:5, line:263:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x20606dbc3e0 <line:249:14, line:263:5>
|   |   |-IfStmt 0x20606dbedd8 <line:251:9, line:252:13>
|   |   | |-BinaryOperator 0x20606dbedb0 <line:251:13, col:20> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x20606dbed98 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x20606dbed50 <col:13> 'int' lvalue Var 0x20606dbe9a0 'ret' 'int'
|   |   | | `-IntegerLiteral 0x20606dbed70 <col:20> 'int' 0
|   |   | `-BreakStmt 0x20606dbedd0 <line:252:13>
|   |   |-CompoundAssignOperator 0x20606dbee90 <line:253:9, col:24> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x20606dbee28 <col:9, col:14> 'int' lvalue ->ex_len 0x20606e0d610
|   |   | | `-ImplicitCastExpr 0x20606dbee10 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x20606dbedf0 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x20606dbe708 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   | `-ImplicitCastExpr 0x20606dbee78 <col:24> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x20606dbee58 <col:24> 'int' lvalue Var 0x20606dbe9a0 'ret' 'int'
|   |   `-IfStmt 0x20606dbc3b8 <line:254:9, line:262:9> has_else
|   |     |-BinaryOperator 0x20606dbef68 <line:254:13, col:27> 'int' '>'
|   |     | |-ImplicitCastExpr 0x20606dbef50 <col:13, col:18> 'int' <LValueToRValue>
|   |     | | `-MemberExpr 0x20606dbeef8 <col:13, col:18> 'int' lvalue ->ex_len 0x20606e0d610
|   |     | |   `-ImplicitCastExpr 0x20606dbeee0 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x20606dbeec0 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x20606dbe708 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |     | `-IntegerLiteral 0x20606dbef28 <col:27> 'int' 0
|   |     |-CompoundAssignOperator 0x20606dbc028 <line:255:13, col:28> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     | |-MemberExpr 0x20606dbbfc0 <col:13, col:18> 'int' lvalue ->ex_pos 0x20606e0d680
|   |     | | `-ImplicitCastExpr 0x20606dbefa8 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x20606dbef88 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x20606dbe708 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |     | `-ImplicitCastExpr 0x20606dbc010 <col:28> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x20606dbbff0 <col:28> 'int' lvalue Var 0x20606dbe9a0 'ret' 'int'
|   |     `-CompoundStmt 0x20606dbc390 <line:256:14, line:262:9>
|   |       |-BinaryOperator 0x20606dbc2b8 <line:259:13, col:26> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   |       | |-MemberExpr 0x20606dbc238 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x20606e10040
|   |       | | `-ImplicitCastExpr 0x20606dbc220 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x20606dbc200 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x20606dbe708 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-ImplicitCastExpr 0x20606dbc2a0 <col:26> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x20606dbc268 <col:26> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ParmVar 0x20606dbe800 'next' 'asn1_bio_state_t':'asn1_bio_state_t'
|   |       |-BinaryOperator 0x20606dbc368 <line:260:13, col:27> 'int' '='
|   |       | |-MemberExpr 0x20606dbc310 <col:13, col:18> 'int' lvalue ->ex_pos 0x20606e0d680
|   |       | | `-ImplicitCastExpr 0x20606dbc2f8 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x20606dbc2d8 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x20606dbe708 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-IntegerLiteral 0x20606dbc340 <col:27> 'int' 0
|   |       `-BreakStmt 0x20606dbc388 <line:261:13>
|   `-ReturnStmt 0x20606dbc478 <line:264:5, col:12>
|     `-ImplicitCastExpr 0x20606dbc460 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x20606dbc440 <col:12> 'int' lvalue Var 0x20606dbe9a0 'ret' 'int'
|-FunctionDecl 0x20606dbc770 <line:267:1, line:281:1> line:267:12 invalid asn1_bio_setup_ex 'int (int *, BIO_ASN1_BUF_CTX *, int *, asn1_bio_state_t, asn1_bio_state_t)' static
| |-ParmVarDecl 0x20606dbc4d0 <col:30, col:35> col:35 invalid b 'int *'
| |-ParmVarDecl 0x20606dbc548 <col:38, col:56> col:56 used ctx 'BIO_ASN1_BUF_CTX *'
| |-ParmVarDecl 0x20606dbc5c8 <line:268:30, col:44> col:44 invalid setup 'int *'
| |-ParmVarDecl 0x20606dbc640 <line:269:30, col:47> col:47 used ex_state 'asn1_bio_state_t':'asn1_bio_state_t'
| |-ParmVarDecl 0x20606dbc6b8 <line:270:30, col:47> col:47 used other_state 'asn1_bio_state_t':'asn1_bio_state_t'
| `-CompoundStmt 0x20606dbcd60 <line:271:1, line:281:1>
|   |-IfStmt 0x20606dbca70 <line:272:5, line:275:5>
|   | |-OpaqueValueExpr 0x20606dbca58 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x20606dbca40 <line:272:71, line:275:5>
|   |   `-ReturnStmt 0x20606dbca30 <line:274:9, col:16>
|   |     `-IntegerLiteral 0x20606dbca08 <col:16> 'int' 0
|   |-IfStmt 0x20606dbcd00 <line:276:5, line:279:22> has_else
|   | |-BinaryOperator 0x20606dbcb30 <line:276:9, col:23> 'int' '>'
|   | | |-ImplicitCastExpr 0x20606dbcb18 <col:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x20606dbcac0 <col:9, col:14> 'int' lvalue ->ex_len 0x20606e0d610
|   | | |   `-ImplicitCastExpr 0x20606dbcaa8 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x20606dbca88 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x20606dbc548 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-IntegerLiteral 0x20606dbcaf0 <col:23> 'int' 0
|   | |-BinaryOperator 0x20606dbcc08 <line:277:9, col:22> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   | | |-MemberExpr 0x20606dbcb88 <col:9, col:14> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x20606e10040
|   | | | `-ImplicitCastExpr 0x20606dbcb70 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x20606dbcb50 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x20606dbc548 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-ImplicitCastExpr 0x20606dbcbf0 <col:22> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20606dbcbb8 <col:22> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ParmVar 0x20606dbc640 'ex_state' 'asn1_bio_state_t':'asn1_bio_state_t'
|   | `-BinaryOperator 0x20606dbcce0 <line:279:9, col:22> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   |   |-MemberExpr 0x20606dbcc60 <col:9, col:14> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x20606e10040
|   |   | `-ImplicitCastExpr 0x20606dbcc48 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x20606dbcc28 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x20606dbc548 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   `-ImplicitCastExpr 0x20606dbccc8 <col:22> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   |     `-DeclRefExpr 0x20606dbcc90 <col:22> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ParmVar 0x20606dbc6b8 'other_state' 'asn1_bio_state_t':'asn1_bio_state_t'
|   `-ReturnStmt 0x20606dbcd50 <line:280:5, col:12>
|     `-IntegerLiteral 0x20606dbcd28 <col:12> 'int' 1
|-FunctionDecl 0x20606dbcfd0 <line:283:1, line:289:1> line:283:12 invalid asn1_bio_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x20606dbcda0 <col:26, col:31> col:31 invalid b 'int *'
| |-ParmVarDecl 0x20606dbce20 <col:34, col:40> col:40 used in 'char *'
| |-ParmVarDecl 0x20606dbcea0 <col:44, col:48> col:48 used inl 'int'
| `-CompoundStmt 0x20606dbd330 <line:284:1, line:289:1>
|   `-IfStmt 0x20606dbd198 <line:286:5, line:287:16>
|     |-OpaqueValueExpr 0x20606dbd180 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x20606dbd170 <col:9, col:16>
|       `-IntegerLiteral 0x20606dbd148 <col:16> 'int' 0
|-FunctionDecl 0x20606dbd480 <line:291:1, line:294:1> line:291:12 invalid asn1_bio_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x20606dbd360 <col:26, col:31> col:31 invalid b 'int *'
| |-ParmVarDecl 0x20606dbd3e0 <col:34, col:46> col:46 used str 'const char *'
| `-CompoundStmt 0x20606dbd660 <line:292:1, line:294:1>
|-FunctionDecl 0x20606dbd830 <line:296:1, line:302:1> line:296:12 invalid asn1_bio_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x20606dbd688 <col:26, col:31> col:31 invalid b 'int *'
| |-ParmVarDecl 0x20606dbd708 <col:34, col:40> col:40 used str 'char *'
| |-ParmVarDecl 0x20606dbd788 <col:45, col:49> col:49 used size 'int'
| `-CompoundStmt 0x20606dbdb90 <line:297:1, line:302:1>
|   `-IfStmt 0x20606dbd9f8 <line:299:5, line:300:16>
|     |-OpaqueValueExpr 0x20606dbd9e0 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x20606dbd9d0 <col:9, col:16>
|       `-IntegerLiteral 0x20606dbd9a8 <col:16> 'int' 0
|-FunctionDecl 0x20606dbdd68 <line:304:1, line:310:1> line:304:13 invalid asn1_bio_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x20606dbdbc0 <col:36, col:41> col:41 invalid b 'int *'
| |-ParmVarDecl 0x20606dbdc40 <col:44, col:48> col:48 used cmd 'int'
| |-ParmVarDecl 0x20606dbdcc0 <col:53, col:66> col:66 invalid fp 'int *'
| `-CompoundStmt 0x20606dc5170 <line:305:1, line:310:1>
|   `-IfStmt 0x20606dbdf48 <line:307:5, line:308:16>
|     |-OpaqueValueExpr 0x20606dbdf30 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x20606dbdf20 <col:9, col:16>
|       `-ImplicitCastExpr 0x20606dbdf08 <col:16> 'long' <IntegralCast>
|         `-IntegerLiteral 0x20606dbdee0 <col:16> 'int' 0
|-FunctionDecl 0x20606dc53d0 <line:312:1, line:390:1> line:312:13 invalid asn1_bio_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x20606dc51a0 <col:27, col:32> col:32 invalid b 'int *'
| |-ParmVarDecl 0x20606dc5220 <col:35, col:39> col:39 used cmd 'int'
| |-ParmVarDecl 0x20606dc52a0 <col:44, col:49> col:49 used arg1 'long'
| |-ParmVarDecl 0x20606dc5320 <col:55, col:61> col:61 used arg2 'void *'
| `-CompoundStmt 0x20606dc1cc0 <line:313:1, line:390:1>
|   |-DeclStmt 0x20606dc5520 <line:314:5, col:26>
|   | `-VarDecl 0x20606dc54b8 <col:5, col:23> col:23 used ctx 'BIO_ASN1_BUF_CTX *'
|   |-DeclStmt 0x20606dc5630 <line:315:5, col:31>
|   | `-VarDecl 0x20606dc55c8 <col:5, col:24> col:24 used ex_func 'BIO_ASN1_EX_FUNCS *'
|   |-DeclStmt 0x20606dc5708 <line:316:5, col:17>
|   | `-VarDecl 0x20606dc5660 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x20606dc56f0 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x20606dc56c8 <col:16> 'int' 1
|   |-IfStmt 0x20606dc58c0 <line:320:5, line:321:16>
|   | |-BinaryOperator 0x20606dc5850 <line:320:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x20606dc5820 <.//openssl//file_jk/before\crypto\asn1\bio_asn1.c:320:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20606dc5778 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606dc54b8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-ImplicitCastExpr 0x20606dc5838 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'BIO_ASN1_BUF_CTX *' <BitCast>
|   | |   `-ParenExpr 0x20606dc5800 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x20606dc57d8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x20606dc5798 <col:26> 'int' 0
|   | `-ReturnStmt 0x20606dc58b0 <.//openssl//file_jk/before\crypto\asn1\bio_asn1.c:321:9, col:16>
|   |   `-ImplicitCastExpr 0x20606dc5898 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x20606dc5870 <col:16> 'int' 0
|   |-SwitchStmt 0x20606dc5948 <line:323:5, line:387:5>
|   | |-ImplicitCastExpr 0x20606dc5930 <line:323:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x20606dc58f8 <col:13> 'int' lvalue ParmVar 0x20606dc5220 'cmd' 'int'
|   | `-CompoundStmt 0x20606dc1be0 <col:18, line:387:5>
|   |   |-BinaryOperator 0x20606dc5a08 <line:326:9, col:19> 'BIO_ASN1_EX_FUNCS *' '='
|   |   | |-DeclRefExpr 0x20606dc5968 <col:9> 'BIO_ASN1_EX_FUNCS *' lvalue Var 0x20606dc55c8 'ex_func' 'BIO_ASN1_EX_FUNCS *'
|   |   | `-ImplicitCastExpr 0x20606dc59f0 <col:19> 'BIO_ASN1_EX_FUNCS *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x20606dc59d8 <col:19> 'void *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x20606dc59a0 <col:19> 'void *' lvalue ParmVar 0x20606dc5320 'arg2' 'void *'
|   |   |-BreakStmt 0x20606dc5b08 <line:329:9>
|   |   |-BinaryOperator 0x20606dc5b80 <line:332:9, col:19> 'BIO_ASN1_EX_FUNCS *' '='
|   |   | |-DeclRefExpr 0x20606dc5b10 <col:9> 'BIO_ASN1_EX_FUNCS *' lvalue Var 0x20606dc55c8 'ex_func' 'BIO_ASN1_EX_FUNCS *'
|   |   | `-ImplicitCastExpr 0x20606dc5b68 <col:19> 'BIO_ASN1_EX_FUNCS *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x20606dc5b50 <col:19> 'void *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x20606dc5b30 <col:19> 'void *' lvalue ParmVar 0x20606dc5320 'arg2' 'void *'
|   |   |-BreakStmt 0x20606dc5c80 <line:335:9>
|   |   |-BinaryOperator 0x20606dc5cf8 <line:338:9, col:19> 'BIO_ASN1_EX_FUNCS *' '='
|   |   | |-DeclRefExpr 0x20606dc5c88 <col:9> 'BIO_ASN1_EX_FUNCS *' lvalue Var 0x20606dc55c8 'ex_func' 'BIO_ASN1_EX_FUNCS *'
|   |   | `-ImplicitCastExpr 0x20606dc5ce0 <col:19> 'BIO_ASN1_EX_FUNCS *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x20606dc5cc8 <col:19> 'void *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x20606dc5ca8 <col:19> 'void *' lvalue ParmVar 0x20606dc5320 'arg2' 'void *'
|   |   |-BreakStmt 0x20606dc5df8 <line:341:9>
|   |   |-BinaryOperator 0x20606dc5e70 <line:344:9, col:19> 'BIO_ASN1_EX_FUNCS *' '='
|   |   | |-DeclRefExpr 0x20606dc5e00 <col:9> 'BIO_ASN1_EX_FUNCS *' lvalue Var 0x20606dc55c8 'ex_func' 'BIO_ASN1_EX_FUNCS *'
|   |   | `-ImplicitCastExpr 0x20606dc5e58 <col:19> 'BIO_ASN1_EX_FUNCS *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x20606dc5e40 <col:19> 'void *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x20606dc5e20 <col:19> 'void *' lvalue ParmVar 0x20606dc5320 'arg2' 'void *'
|   |   |-BreakStmt 0x20606dc5f70 <line:347:9>
|   |   |-BinaryOperator 0x20606dc6018 <line:350:9, col:23> 'void *' '='
|   |   | |-MemberExpr 0x20606dc5fb0 <col:9, col:14> 'void *' lvalue ->ex_arg 0x20606e0d6f0
|   |   | | `-ImplicitCastExpr 0x20606dc5f98 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x20606dc5f78 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606dc54b8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   | `-ImplicitCastExpr 0x20606dc6000 <col:23> 'void *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x20606dc5fe0 <col:23> 'void *' lvalue ParmVar 0x20606dc5320 'arg2' 'void *'
|   |   |-BreakStmt 0x20606dc6038 <line:351:9>
|   |   |-BinaryOperator 0x20606dc1120 <line:354:9, col:31> 'void *' '='
|   |   | |-UnaryOperator 0x20606dc1088 <col:9, col:19> 'void *' lvalue prefix '*' cannot overflow
|   |   | | `-CStyleCastExpr 0x20606dc1060 <col:10, col:19> 'void **' <BitCast>
|   |   | |   `-ImplicitCastExpr 0x20606dc1048 <col:19> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   | |     `-DeclRefExpr 0x20606dc1010 <col:19> 'void *' lvalue ParmVar 0x20606dc5320 'arg2' 'void *'
|   |   | `-ImplicitCastExpr 0x20606dc1108 <col:26, col:31> 'void *' <LValueToRValue>
|   |   |   `-MemberExpr 0x20606dc10d8 <col:26, col:31> 'void *' lvalue ->ex_arg 0x20606e0d6f0
|   |   |     `-ImplicitCastExpr 0x20606dc10c0 <col:26> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x20606dc10a0 <col:26> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606dc54b8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   |-BreakStmt 0x20606dc1140 <line:355:9>
|   |   |-IfStmt 0x20606dc1238 <line:358:9, line:359:20>
|   |   | |-OpaqueValueExpr 0x20606dc1220 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x20606dc1210 <col:13, col:20>
|   |   |   `-ImplicitCastExpr 0x20606dc11f8 <col:20> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x20606dc11d0 <col:20> 'int' 0
|   |   |-IfStmt 0x20606dc1458 <line:362:9, line:366:9>
|   |   | |-BinaryOperator 0x20606dc1308 <line:362:13, col:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x20606dc12f0 <col:13, col:18> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x20606dc12d8 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   |   | | |   `-MemberExpr 0x20606dc1288 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x20606e10040
|   |   | | |     `-ImplicitCastExpr 0x20606dc1270 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x20606dc1250 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606dc54b8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   | | `-DeclRefExpr 0x20606dc12b8 <col:27> 'int' EnumConstant 0x20606e0fa70 'ASN1_STATE_HEADER' 'int'
|   |   | `-CompoundStmt 0x20606dc1440 <col:46, line:366:9>
|   |   |   `-IfStmt 0x20606dc1428 <line:363:13, line:365:24>
|   |   |     |-OpaqueValueExpr 0x20606dc1410 <<invalid sloc>> '_Bool'
|   |   |     `-ReturnStmt 0x20606dc1400 <col:17, col:24>
|   |   |       `-ImplicitCastExpr 0x20606dc13e8 <col:24> 'long' <IntegralCast>
|   |   |         `-IntegerLiteral 0x20606dc13c0 <col:24> 'int' 0
|   |   |-IfStmt 0x20606dc1708 <line:368:9, line:373:9>
|   |   | |-BinaryOperator 0x20606dc1528 <line:368:13, col:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x20606dc1510 <col:13, col:18> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x20606dc14f8 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   |   | | |   `-MemberExpr 0x20606dc14a8 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x20606e10040
|   |   | | |     `-ImplicitCastExpr 0x20606dc1490 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x20606dc1470 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606dc54b8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   | | `-DeclRefExpr 0x20606dc14d8 <col:27> 'int' EnumConstant 0x20606e0fb78 'ASN1_STATE_POST_COPY' 'int'
|   |   | `-CompoundStmt 0x20606dc16f0 <col:49, line:373:9>
|   |   |   `-IfStmt 0x20606dc16d8 <line:371:13, line:372:24>
|   |   |     |-BinaryOperator 0x20606dc1670 <line:371:17, col:24> 'int' '<='
|   |   |     | |-ImplicitCastExpr 0x20606dc1640 <col:17> 'long' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x20606dc15f8 <col:17> 'long' lvalue Var 0x20606dc5660 'ret' 'long'
|   |   |     | `-ImplicitCastExpr 0x20606dc1658 <col:24> 'long' <IntegralCast>
|   |   |     |   `-IntegerLiteral 0x20606dc1618 <col:24> 'int' 0
|   |   |     `-ReturnStmt 0x20606dc16c8 <line:372:17, col:24>
|   |   |       `-ImplicitCastExpr 0x20606dc16b0 <col:24> 'long' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x20606dc1690 <col:24> 'long' lvalue Var 0x20606dc5660 'ret' 'long'
|   |   |-IfStmt 0x20606dc1a10 <line:375:9, line:380:9> has_else
|   |   | |-BinaryOperator 0x20606dc17d8 <line:375:13, col:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x20606dc17c0 <col:13, col:18> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x20606dc17a8 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   |   | | |   `-MemberExpr 0x20606dc1758 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x20606e10040
|   |   | | |     `-ImplicitCastExpr 0x20606dc1740 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x20606dc1720 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x20606dc54b8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   | | `-DeclRefExpr 0x20606dc1788 <col:27> 'int' EnumConstant 0x20606e0fbd0 'ASN1_STATE_DONE' 'int'
|   |   | |-NullStmt 0x20606dc1a08 <line:376:13>
|   |   | `-CompoundStmt 0x20606dc19f0 <line:377:14, line:380:9>
|   |   |   `-ReturnStmt 0x20606dc19e0 <line:379:13, col:20>
|   |   |     `-ImplicitCastExpr 0x20606dc19c8 <col:20> 'long' <IntegralCast>
|   |   |       `-IntegerLiteral 0x20606dc19a0 <col:20> 'int' 0
|   |   `-DefaultStmt 0x20606dc1b40 <line:382:5, line:384:20>
|   |     `-IfStmt 0x20606dc1b28 <line:383:9, line:384:20>
|   |       |-OpaqueValueExpr 0x20606dc1b10 <<invalid sloc>> '_Bool'
|   |       `-ReturnStmt 0x20606dc1b00 <col:13, col:20>
|   |         `-ImplicitCastExpr 0x20606dc1ae8 <col:20> 'long' <IntegralCast>
|   |           `-IntegerLiteral 0x20606dc1ac0 <col:20> 'int' 0
|   `-ReturnStmt 0x20606dc1cb0 <line:389:5, col:12>
|     `-ImplicitCastExpr 0x20606dc1c98 <col:12> 'long' <LValueToRValue>
|       `-DeclRefExpr 0x20606dc1c78 <col:12> 'long' lvalue Var 0x20606dc5660 'ret' 'long'
|-FunctionDecl 0x20606dc6060 <line:392:1, line:399:1> line:392:12 invalid asn1_bio_set_ex 'int (int *, int, int *, int *)' static
| |-ParmVarDecl 0x20606dc1d18 <col:28, col:33> col:33 invalid b 'int *'
| |-ParmVarDecl 0x20606dc1d98 <col:36, col:40> col:40 used cmd 'int'
| |-ParmVarDecl 0x20606dc1e18 <line:393:28, col:42> col:42 invalid ex_func 'int *'
| |-ParmVarDecl 0x20606dc1e98 <col:51, col:65> col:65 invalid ex_free_func 'int *'
| `-CompoundStmt 0x20606dc62d8 <line:394:1, line:399:1>
|   `-DeclStmt 0x20606dc61b0 <line:395:5, col:28>
|     `-VarDecl 0x20606dc6148 <col:5, col:23> col:23 used extmp 'BIO_ASN1_EX_FUNCS':'struct BIO_ASN1_EX_FUNCS_st'
|-FunctionDecl 0x20606dc65c0 <line:401:1, line:413:1> line:401:12 invalid asn1_bio_get_ex 'int (int *, int, int **, int **)' static
| |-ParmVarDecl 0x20606dc6308 <col:28, col:33> col:33 invalid b 'int *'
| |-ParmVarDecl 0x20606dc6388 <col:36, col:40> col:40 used cmd 'int'
| |-ParmVarDecl 0x20606dc6438 <line:402:28, col:43> col:43 invalid ex_func 'int **'
| |-ParmVarDecl 0x20606dc64c0 <line:403:28, col:43> col:43 invalid ex_free_func 'int **'
| `-CompoundStmt 0x20606dc69f8 <line:404:1, line:413:1>
|   |-DeclStmt 0x20606dc6710 <line:405:5, col:28>
|   | `-VarDecl 0x20606dc66a8 <col:5, col:23> col:23 used extmp 'BIO_ASN1_EX_FUNCS':'struct BIO_ASN1_EX_FUNCS_st'
|   |-DeclStmt 0x20606dc67a8 <line:406:5, col:12>
|   | `-VarDecl 0x20606dc6740 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x20606dc6998 <line:408:5, line:411:5>
|   | |-BinaryOperator 0x20606dc6928 <line:408:9, col:15> 'int' '>'
|   | | |-ImplicitCastExpr 0x20606dc6910 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20606dc68c8 <col:9> 'int' lvalue Var 0x20606dc6740 'ret' 'int'
|   | | `-IntegerLiteral 0x20606dc68e8 <col:15> 'int' 0
|   | `-CompoundStmt 0x20606dc6988 <col:18, line:411:5>
|   `-ReturnStmt 0x20606dc69e8 <line:412:5, col:12>
|     `-ImplicitCastExpr 0x20606dc69d0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x20606dc69b0 <col:12> 'int' lvalue Var 0x20606dc6740 'ret' 'int'
|-FunctionDecl 0x20606dc6c30 <line:415:1, line:419:1> line:415:5 invalid BIO_asn1_set_prefix 'int (int *, int *, int *)'
| |-ParmVarDecl 0x20606dc6a40 <col:25, col:30> col:30 invalid b 'int *'
| |-ParmVarDecl 0x20606dc6ac0 <col:33, col:47> col:47 invalid prefix 'int *'
| |-ParmVarDecl 0x20606dc6b40 <line:416:25, col:39> col:39 invalid prefix_free 'int *'
| `-CompoundStmt 0x20606dc6d00 <line:417:1, line:419:1>
|-FunctionDecl 0x20606dc6f20 <line:421:1, line:425:1> line:421:5 invalid BIO_asn1_get_prefix 'int (int *, int **, int **)'
| |-ParmVarDecl 0x20606dc6d28 <col:25, col:30> col:30 invalid b 'int *'
| |-ParmVarDecl 0x20606dc6db0 <col:33, col:48> col:48 invalid pprefix 'int **'
| |-ParmVarDecl 0x20606dc6e38 <line:422:25, col:40> col:40 invalid pprefix_free 'int **'
| `-CompoundStmt 0x20606dc6ff0 <line:423:1, line:425:1>
|-FunctionDecl 0x20606dc41e8 <line:427:1, line:431:1> line:427:5 invalid BIO_asn1_set_suffix 'int (int *, int *, int *)'
| |-ParmVarDecl 0x20606dc4040 <col:25, col:30> col:30 invalid b 'int *'
| |-ParmVarDecl 0x20606dc40c0 <col:33, col:47> col:47 invalid suffix 'int *'
| |-ParmVarDecl 0x20606dc4140 <line:428:25, col:39> col:39 invalid suffix_free 'int *'
| `-CompoundStmt 0x20606dc42b8 <line:429:1, line:431:1>
`-FunctionDecl 0x20606dc4498 <line:433:1, line:437:1> line:433:5 invalid BIO_asn1_get_suffix 'int (int *, int **, int **)'
  |-ParmVarDecl 0x20606dc42e0 <col:25, col:30> col:30 invalid b 'int *'
  |-ParmVarDecl 0x20606dc4368 <col:33, col:48> col:48 invalid psuffix 'int **'
  |-ParmVarDecl 0x20606dc43f0 <line:434:25, col:40> col:40 invalid psuffix_free 'int **'
  `-CompoundStmt 0x20606dc4568 <line:435:1, line:437:1>
