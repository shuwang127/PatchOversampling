TranslationUnitDecl 0x1e09c2b72e8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1e09c2b7b80 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1e09c2b7880 '__int128'
|-TypedefDecl 0x1e09c2b7bf0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1e09c2b78a0 'unsigned __int128'
|-TypedefDecl 0x1e09c2b7f28 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1e09c2b7ce0 'struct __NSConstantString_tag'
|   `-Record 0x1e09c2b7c48 '__NSConstantString_tag'
|-TypedefDecl 0x1e09c2b7f98 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1e09c2b74c0 'unsigned long long'
|-TypedefDecl 0x1e09c2b8030 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1e09c2b7ff0 'char *'
|   `-BuiltinType 0x1e09c2b7380 'char'
|-TypedefDecl 0x1e09c2b80a0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1e09c2b7ff0 'char *'
|   `-BuiltinType 0x1e09c2b7380 'char'
|-TypedefDecl 0x1e09c2b8160 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1e09c2b74c0 'unsigned long long'
|-TypedefDecl 0x1e09c2b81d0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1e09c2b7ff0 'char *'
|   `-BuiltinType 0x1e09c2b7380 'char'
|-FunctionDecl 0x1e09dde6460 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1e09dde6500 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1e09dde6570 <col:21> Implicit
|-FunctionDecl 0x1e09dde65c8 prev 0x1e09dde6460 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1e09dde62f0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1e09dde66b8 <col:21> Inherited Implicit
|-TypedefDecl 0x1e09dde66f8 prev 0x1e09c2b7f98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1e09c2b74c0 'unsigned long long'
|-TypedefDecl 0x1e09dde67a0 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1e09dde6770 'size_t' sugar
|   |-Typedef 0x1e09dde66f8 'size_t'
|   `-BuiltinType 0x1e09c2b74c0 'unsigned long long'
|-TypedefDecl 0x1e09dde6810 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1e09c2b7420 'long long'
|-TypedefDecl 0x1e09dde6880 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1e09c2b7420 'long long'
|-TypedefDecl 0x1e09dde68f0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1e09c2b7460 'unsigned short'
|-TypedefDecl 0x1e09dde6960 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x1e09c2b7460 'unsigned short'
|-TypedefDecl 0x1e09dde69d0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1e09c2b7460 'unsigned short'
|-TypedefDecl 0x1e09dde6a40 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1e09c2b73e0 'int'
|-TypedefDecl 0x1e09dde6ab0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1e09c2b7400 'long'
|-TypedefDecl 0x1e09dde6b20 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1e09c2b7420 'long long'
|-TypedefDecl 0x1e09dde6bb0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1e09dde6b80 '__time64_t' sugar
|   |-Typedef 0x1e09dde6b20 '__time64_t'
|   `-BuiltinType 0x1e09c2b7420 'long long'
|-FunctionDecl 0x1e09dde6d28 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1e09dde6f48 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1e09de1fce0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1e09dde7088 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1e09dde7100 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1e09dde7178 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1e09dde71f8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1e09de1fa80 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1e09de1fdc0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1e09de1fe80 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1e09de1fff0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1e09de1ffa0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1e09de1ff40 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1e09de1fe60 'struct threadlocaleinfostruct'
|       `-Record 0x1e09de21aa0 'threadlocaleinfostruct'
|-TypedefDecl 0x1e09de20100 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1e09de200b0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1e09de20050 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1e09de1ff20 'struct threadmbcinfostruct'
|       `-Record 0x1e09de1fe80 'threadmbcinfostruct'
|-RecordDecl 0x1e09de20158 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1e09de20210 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1e09de202d0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1e09de20360 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1e09de203f0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1e09de204a8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1e09de20450 'struct localeinfo_struct' sugar
|   `-RecordType 0x1e09de202b0 'struct localeinfo_struct'
|     `-Record 0x1e09de20210 'localeinfo_struct'
|-TypedefDecl 0x1e09de20580 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1e09de20530 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1e09de20450 'struct localeinfo_struct' sugar
|     `-RecordType 0x1e09de202b0 'struct localeinfo_struct'
|       `-Record 0x1e09de20210 'localeinfo_struct'
|-RecordDecl 0x1e09de205f8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1e09de206b0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1e09de20728 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1e09de207e8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1e09de20880 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1e09de208f0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1e09de209a8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1e09de20950 'struct localerefcount' sugar
|   `-RecordType 0x1e09de20690 'struct localerefcount'
|     `-Record 0x1e09de205f8 'localerefcount'
|-RecordDecl 0x1e09de21aa0 prev 0x1e09de1fdc0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1e09de21b20 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1e09de21b98 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1e09de21c08 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1e09de21c78 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1e09de21ce8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1e09de21ea8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1e09de21f18 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1e09de21f88 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1e09de21ff8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1e09de22068 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1e09de220d8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1e09de22130 parent 0x1e09c2b72e8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1e09de222c0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1e09de22330 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1e09de223a0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1e09de22410 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1e09de224b0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1e09de22520 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1e09de22630 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1e09de22768 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1e09de22818 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1e09de227c0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1e09de1fe60 'struct threadlocaleinfostruct'
|     `-Record 0x1e09de21aa0 'threadlocaleinfostruct'
|-FunctionDecl 0x1e09de22cc0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x1e09de228a0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x1e09de22950 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x1e09de229d0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x1e09de22ab0 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e09de23088 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1e09de23128 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1e09de23190 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1e09de231f8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e09de23278 prev 0x1e09de23088 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1e09de22db0 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x1e09de22e30 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x1e09de22ea8 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e09de23638 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1e09de23360 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x1e09de233e0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x1e09de23458 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1e09de2bb90 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e09de23720 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x1e09de237a0 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x1e09de23818 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e09de238b0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e09de2be98 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1e09de2bf38 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1e09de2bfa0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1e09de2c008 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e09de2c088 prev 0x1e09de2be98 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1e09de2bc80 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x1e09de2bd00 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x1e09de2bd78 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1e09de2c448 <line:55:17> col:17 implicit memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1e09de2c4e8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1e09de2c550 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1e09de2c5b8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e09de2c638 prev 0x1e09de2c448 <col:1, col:127> col:17 memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1e09de2c170 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x1e09de2c1f0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x1e09de2c268 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1e09de2fb80 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1e09de2c748 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x1e09de2c7e0 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1e09de2c860 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1e09de2c8d8 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1e09de2ff48 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1e09de2ffe8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1e09de30050 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1e09de300b8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e09de30138 prev 0x1e09de2ff48 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x1e09de2fc70 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x1e09de2fcf0 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x1e09de2fd68 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1e09de305b8 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1e09de30658 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1e09de306c0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1e09de30728 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1e09de30790 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e09de30818 prev 0x1e09de305b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1e09de30300 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x1e09de30380 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x1e09de30400 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x1e09de30478 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e09de308d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x1e09de2acc8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1e09de30aa0 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x1e09de2ab30 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x1e09de2aba8 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e09de2ad80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x1e09de2b170 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1e09de2aea8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1e09de2af20 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e09de2afa0 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x1e09de2b540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1e09de2b350 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x1e09de2b3d0 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x1e09de2b5f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e09de2ba00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1e09de2b738 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1e09de2b7b0 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1e09de2b830 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x1e09de2ee30 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1e09de2eed0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1e09de2ef38 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e09de2efb0 prev 0x1e09de2ee30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x1e09de2ec48 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x1e09de2ecc8 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x1e09de2f060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e09de2f3b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1e09de2f1a8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1e09de2f220 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1e09de2f2a0 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x1e09de2f6e0 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1e09de2f780 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1e09de2f7e8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e09de2f860 prev 0x1e09de2f6e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x1e09de2f560 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x1e09de2f5e0 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x1e09de2f910 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e09de30c60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1e09de30d00 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e09de30d68 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e09de30de0 prev 0x1e09de30c60 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x1e09de2fa58 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x1e09de2fad8 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x1e09de31030 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1e09de310d0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e09de31140 prev 0x1e09de31030 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x1e09de30ec0 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x1e09de31438 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1e09de31218 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1e09de31290 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e09de31688 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x1e09de31518 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x1e09de31590 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1e09de319b8 <line:131:1, line:133:1>
|   `-ReturnStmt 0x1e09de319a8 <line:132:5, col:51>
|     `-ConditionalOperator 0x1e09de31978 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x1e09de317e8 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x1e09de317c8 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x1e09de31798 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1e09de31750 <col:13> 'const char *' lvalue ParmVar 0x1e09de31518 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x1e09de317b0 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x1e09de31770 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x1e09de31960 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1e09de31808 <col:24> 'int' 0
|       `-CallExpr 0x1e09de31900 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1e09de318e8 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1e09de31830 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x1e09de31438 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x1e09de31930 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1e09de31850 <col:36> 'const char *' lvalue ParmVar 0x1e09de31518 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x1e09de31948 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1e09de31870 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x1e09de31590 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1e09de2dc98 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1e09de319e8 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x1e09de31a60 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1e09de31ae0 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x1e09de2db60 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1e09de2dfa0 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1e09de2e040 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1e09de2e0a8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1e09de2e110 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e09de2e190 prev 0x1e09de2dfa0 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1e09de2dd88 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x1e09de2de08 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1e09de2de80 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1e09de2e3c8 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x1e09de2e278 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x1e09de2e690 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1e09de2e730 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e09de2e798 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1e09de2e810 prev 0x1e09de2e690 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1e09de2e4a0 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x1e09de2e520 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x1e09de2ea70 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1e09de2e8f0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1e09de2e970 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1e09de29ca0 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1e09de29b20 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1e09de29ba0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1e09de2a058 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1e09de29d80 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1e09de29e00 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1e09de29e78 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e09de2a2c0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1e09de2a140 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x1e09de2a1c0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1e09de2a5b8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1e09de2a3a0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1e09de2a420 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1e09de2a498 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e09de2a820 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1e09de2a6a0 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x1e09de2a720 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x1e09de36bf0 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1e09de2a900 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x1e09de2a980 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x1e09de2a9f8 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e09de36fa8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1e09de36cd8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1e09de36d58 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1e09de36dd0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e09de37410 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e09de37090 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1e09de37110 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1e09de37188 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e09de37200 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e09de37718 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1e09de37500 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1e09de37580 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1e09de375f8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e09de37ab0 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e09de37800 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x1e09de37880 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x1e09de378f8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e09de37970 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e09de34df8 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1e09de34e98 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e09de34f00 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e09de34f78 prev 0x1e09de34df8 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1e09de34bd0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1e09de34c50 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x1e09de35230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1e09de35150 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x1e09de352d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e09de356b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x1e09de35420 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x1e09de35498 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e09de35518 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x1e09de359c8 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x1e09de35a68 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1e09de35ad8 prev 0x1e09de359c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x1e09de35890 <col:90> col:93 'int'
| `-DeprecatedAttr 0x1e09de35b80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e09de32ec0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1e09de32cb0 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x1e09de32d28 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e09de32da8 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x1e09de331c8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1e09de32fa8 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1e09de33020 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1e09de334b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1e09de33368 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1e09de33560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e09de33970 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e09de336a8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1e09de33720 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e09de33798 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e09de35d90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1e09de33b18 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1e09de35be0 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1e09de35e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e09de362f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1e09de35f88 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x1e09de36000 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1e09de36080 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x1e09de360f8 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1e09de36778 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1e09de36818 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1e09de36880 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e09de368e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e09de36968 prev 0x1e09de36778 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1e09de364a8 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x1e09de36528 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x1e09de365a0 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e09de36a20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e09de37db0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1e09de37e50 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1e09de37eb8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e09de37f20 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e09de37fa0 prev 0x1e09de37db0 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1e09de36b68 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x1e09de37c18 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x1e09de37c90 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e09de382a0 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1e09de38088 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x1e09de38108 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x1e09de38180 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e09de38638 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e09de38388 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1e09de38408 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1e09de38480 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e09de384f8 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e09de389d0 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1e09de38728 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1e09de387a0 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1e09de38820 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x1e09de38898 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1e09de31d38 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1e09de31dd8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1e09de31e40 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e09de31ea8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e09de31f28 prev 0x1e09de31d38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1e09de38b80 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x1e09de31ba0 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x1e09de31c18 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e09de31fe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e09de32498 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x1e09de32128 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x1e09de321a0 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e09de32220 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x1e09de32298 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e09de32918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1e09de32648 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x1e09de326c8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x1e09de32740 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e09de329d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e09de33d30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1e09de33dd0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e09de33e38 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e09de33eb0 prev 0x1e09de33d30 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1e09de32b18 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1e09de33bc0 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x1e09de34110 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1e09de341b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e09de34218 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1e09de34290 prev 0x1e09de34110 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1e09de33f90 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1e09de34010 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x1e09de34450 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x1e09de34370 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x1e09de346a0 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1e09de34740 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e09de347a8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e09de34820 prev 0x1e09de346a0 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1e09de34528 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x1e09de345a8 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x1e09de34a80 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1e09de34b20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e09deb1fa0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e09deb2018 prev 0x1e09de34a80 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1e09de34900 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x1e09de34980 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x1e09deb2338 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1e09deb23d8 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1e09deb2440 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e09deb24b8 prev 0x1e09deb2338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x1e09deb21b8 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x1e09deb2238 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x1e09deb2568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e09deb2948 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x1e09deb26b0 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x1e09deb2730 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x1e09deb27b0 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x1e09deb2ba0 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1e09deb2a30 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1e09deb2aa8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1e09deb2e20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1e09deb2d40 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1e09deb2ec8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e09deb32b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e09deb30b0 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1e09deb3128 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e09deb31a0 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e09deb35d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1e09deb3460 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1e09deb34d8 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1e09deb3688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e09deb3aa0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1e09deb3b40 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1e09deb3ba8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e09deb3c10 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e09deb3c90 prev 0x1e09deb3aa0 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1e09deb37d0 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1e09deb3850 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x1e09deb38c8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e09deae098 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e09deb3d78 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1e09deb3df8 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x1e09deb3e70 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e09deb3ee8 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e09deae340 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x1e09deae3e0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e09deae450 prev 0x1e09deae340 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x1e09deae260 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x1e09deae4f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x1e09deae840 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1e09deae6c0 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1e09deae740 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1e09deae8f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x1e09deaec38 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1e09deaeab8 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1e09deaeb38 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1e09deaece8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x1e09deabf78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1e09deaeeb0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1e09deac020 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x1e09deac438 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1e09deac220 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x1e09deac2a0 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x1e09deac318 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e09deac4f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x1e09deac8d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1e09deac6b8 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x1e09deac738 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x1e09deac7b0 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e09deac988 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x1e09deacc30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1e09deacb50 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1e09deaccd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x1e09deaf070 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1e09deacea0 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x1e09deaef70 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x1e09deaf120 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x1e09deaf3c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1e09deaf2e8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1e09deaf470 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x1e09deaf700 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x1e09deaf590 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x1e09deafa90 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1e09deaf7d0 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1e09deaf848 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1e09deaf8c0 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x1e09deafe48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e09deafc30 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1e09deafca8 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1e09deafef8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e09deb0298 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x1e09deb0338 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1e09deb03a0 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x1e09deb0418 prev 0x1e09deb0298 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x1e09deb0078 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1e09deb00f0 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1e09deb0710 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x1e09deb07b0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1e09deb0818 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1e09deb0890 prev 0x1e09deb0710 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x1e09deb04f0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1e09deb0568 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x1e09deb0b70 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1e09deb0968 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1e09deb09e0 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1e09deb0a58 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x1e09deb0e80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e09deb0d10 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1e09deb0d88 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1e09deb0f30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e09deb12a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e09deb1088 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1e09deb1100 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x1e09deb14f0 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x1e09deb1590 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1e09deb1600 prev 0x1e09deb14f0 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x1e09deb1380 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x1e09deb18e8 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x1e09deb16d0 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1e09deb1748 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e09deb1b30 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x1e09deb19c0 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x1e09deb1a38 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1e09deb1ec8 <line:306:1, line:308:1>
|   `-ReturnStmt 0x1e09deb1eb8 <line:307:5, col:56>
|     `-ConditionalOperator 0x1e09deb1e88 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x1e09deb1cf0 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x1e09deb1cd0 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x1e09deb1ca0 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1e09deb1bf8 <col:13> 'const wchar_t *' lvalue ParmVar 0x1e09deb19c0 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x1e09deb1cb8 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x1e09deb1c80 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x1e09deb1c58 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x1e09deb1c18 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x1e09deb1e70 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1e09deb1d10 <col:29> 'int' 0
|       `-CallExpr 0x1e09deb1e10 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1e09deb1df8 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1e09deb1d38 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x1e09deb18e8 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x1e09deb1e40 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x1e09deb1d58 <col:41> 'const wchar_t *' lvalue ParmVar 0x1e09deb19c0 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x1e09deb1e58 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1e09deb1d78 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1e09deb1a38 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1e09dead248 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1e09deb1ef0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1e09deacf50 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1e09deacfc8 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1e09dead040 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1e09dead6b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1e09dead3f0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1e09dead468 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1e09dead4e0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e09dead768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e09deadb78 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x1e09deadc18 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x1e09deadc80 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1e09deadce8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e09deadd68 prev 0x1e09deadb78 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x1e09dead8a8 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e09dead920 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1e09dead998 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e09deb91c0 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1e09deade48 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1e09deadec0 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1e09deb9010 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1e09deb9088 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1e09deb9570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1e09deb9368 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1e09deb93e0 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1e09deb9458 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e09deb9628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e09deb9988 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e09deb9768 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1e09deb97e0 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x1e09deb9bd0 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1e09deb9a60 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1e09deb9ad8 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1e09deb9e18 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e09deb9ca8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1e09deb9d20 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x1e09deba080 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e09deb9ef0 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1e09deb9f68 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x1e09deba388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e09deba218 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1e09deba290 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x1e09deba438 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e09deba8a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1e09deba578 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x1e09deba5f0 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x1e09deba6d0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x1e09debabc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x1e09debaa48 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x1e09debac68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e09debb0a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1e09debada8 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1e09debae20 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e09debaea0 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x1e09debb350 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1e09debb278 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1e09debb3f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e09debb7c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1e09debb538 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1e09debb5b0 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e09debb628 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1e09debba18 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e09debb8a0 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1e09debb918 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x1e09debbdb8 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1e09debbaf0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e09debbb68 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1e09debbbe0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e09debc0c8 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1e09debbe98 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e09debbf10 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1e09debbf88 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e09debc520 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e09debc1a8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e09debc220 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1e09debc298 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e09debc310 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e09debc978 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x1e09debc608 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1e09debc680 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e09debc6f8 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1e09debc770 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e09debcde0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1e09debcb20 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x1e09debcb98 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1e09debcc10 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e09debce98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e09deb50e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x1e09debcfd8 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x1e09deb5470 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x1e09deb51b0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1e09deb5228 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e09deb52a0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x1e09deb5828 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1e09deb5610 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x1e09deb5688 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1e09deb58d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e09deb5c38 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1e09deb5a18 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x1e09deb5a90 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1e09deb5ea8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1e09deb5dd0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1e09deb5f50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e09deb63a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e09deb60d8 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x1e09deb6150 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e09deb61c8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e09deb6758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1e09deb6540 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1e09deb65b8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1e09deb6808 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e09deb6ab8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1e09deb6948 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x1e09deb69c0 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1e09deb6d28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1e09deb6c50 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1e09deb6dd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e09deb7180 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e09deb6f10 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x1e09deb6ff0 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e09deb7068 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e09deb7490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1e09deb7320 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1e09deb7398 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1e09deb7540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e09deb7940 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1e09deb7680 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1e09deb76f8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1e09deb7770 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e09deb7d88 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e09deb7a20 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1e09deb7a98 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1e09deb7b10 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e09deb7b88 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e09dec30b0 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e09deb7e70 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1e09deb7ee8 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x1e09dec3398 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1e09dec3188 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e09dec3200 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1e09dec3278 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e09dec35f0 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e09dec3478 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1e09dec34f0 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x1e09dec38d8 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1e09dec36c8 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e09dec3740 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1e09dec37b8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e09dec3bc8 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1e09dec39b8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e09dec3a30 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1e09dec3aa8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e09dec3f50 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e09dec3ca8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e09dec3d20 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1e09dec3d98 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e09dec3e10 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e09debf208 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1e09dec4038 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e09debf070 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1e09debf0e8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e09debf590 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e09debf2e8 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e09debf360 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1e09debf3d8 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e09debf450 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e09debf7f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1e09debf718 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1e09debf898 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x1e09debfbd0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e09debfa58 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e09debfad0 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1e09debfc80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x1e09dec20a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1e09debfe40 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e09debfeb8 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1e09debff30 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e09dec2158 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x1e09dec2520 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1e09dec2318 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1e09dec2390 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1e09dec2408 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e09dec25d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x1e09dec2870 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1e09dec2798 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1e09dec2918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x1e09dec2c48 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1e09dec2ad8 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x1e09dec2b50 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1e09dec2cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x1e09dec2f90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1e09dec2eb8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1e09dec3038 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x1e09dec4310 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1e09dec4238 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1e09dec43b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x1e09dec46f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e09dec4578 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e09dec45f0 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1e09dec47a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-EnumDecl 0x1e09dec48b0 <.//openssl//file_jk/before\crypto\asn1\bio_asn1.c:23:9, line:31:1> line:23:9
| |-EnumConstantDecl 0x1e09dec4990 <line:24:5> col:5 referenced ASN1_STATE_START 'int'
| |-EnumConstantDecl 0x1e09dec49e8 <line:25:5> col:5 referenced ASN1_STATE_PRE_COPY 'int'
| |-EnumConstantDecl 0x1e09dec4a40 <line:26:5> col:5 referenced ASN1_STATE_HEADER 'int'
| |-EnumConstantDecl 0x1e09dec4a98 <line:27:5> col:5 referenced ASN1_STATE_HEADER_COPY 'int'
| |-EnumConstantDecl 0x1e09dec4af0 <line:28:5> col:5 referenced ASN1_STATE_DATA_COPY 'int'
| |-EnumConstantDecl 0x1e09dec4b48 <line:29:5> col:5 referenced ASN1_STATE_POST_COPY 'int'
| `-EnumConstantDecl 0x1e09dec4ba0 <line:30:5> col:5 referenced ASN1_STATE_DONE 'int'
|-TypedefDecl 0x1e09dec4c58 <line:23:1, line:31:3> col:3 referenced asn1_bio_state_t 'enum asn1_bio_state_t':'asn1_bio_state_t'
| `-ElaboratedType 0x1e09dec4c00 'enum asn1_bio_state_t' sugar
|   `-EnumType 0x1e09dec4970 'asn1_bio_state_t'
|     `-Enum 0x1e09dec48b0 ''
|-RecordDecl 0x1e09dec4cc8 <line:33:9, line:36:1> line:33:16 invalid struct BIO_ASN1_EX_FUNCS_st definition
| |-FieldDecl 0x1e09dec4d98 <line:34:5, col:19> col:19 invalid ex_func 'int *'
| `-FieldDecl 0x1e09dec4e08 <line:35:5, col:19> col:19 invalid ex_free_func 'int *'
|-TypedefDecl 0x1e09dec4eb8 <line:33:1, line:36:3> col:3 referenced BIO_ASN1_EX_FUNCS 'struct BIO_ASN1_EX_FUNCS_st':'struct BIO_ASN1_EX_FUNCS_st'
| `-ElaboratedType 0x1e09dec4e60 'struct BIO_ASN1_EX_FUNCS_st' sugar
|   `-RecordType 0x1e09dec4d60 'struct BIO_ASN1_EX_FUNCS_st'
|     `-Record 0x1e09dec4cc8 'BIO_ASN1_EX_FUNCS_st'
|-RecordDecl 0x1e09dec4f28 <line:38:9, line:59:1> line:38:16 invalid struct BIO_ASN1_BUF_CTX_t definition
| |-FieldDecl 0x1e09dec5010 <line:40:5, col:22> col:22 referenced state 'asn1_bio_state_t':'asn1_bio_state_t'
| |-FieldDecl 0x1e09dec0080 <line:42:5, col:20> col:20 referenced buf 'unsigned char *'
| |-FieldDecl 0x1e09dec00f0 <line:44:5, col:9> col:9 referenced bufsize 'int'
| |-FieldDecl 0x1e09dec0160 <line:46:5, col:9> col:9 referenced bufpos 'int'
| |-FieldDecl 0x1e09dec01d0 <line:48:5, col:9> col:9 referenced buflen 'int'
| |-FieldDecl 0x1e09dec0240 <line:50:5, col:9> col:9 referenced copylen 'int'
| |-FieldDecl 0x1e09dec02b0 <line:52:5, col:9> col:9 referenced asn1_class 'int'
| |-FieldDecl 0x1e09dec0320 <col:5, col:21> col:21 referenced asn1_tag 'int'
| |-FieldDecl 0x1e09dec0390 <line:53:5, col:19> col:19 invalid prefix 'int *'
| |-FieldDecl 0x1e09dec0400 <col:5, col:28> col:28 invalid prefix_free 'int *'
| |-FieldDecl 0x1e09dec0470 <col:5, col:42> col:42 invalid suffix 'int *'
| |-FieldDecl 0x1e09dec04e0 <col:5, col:51> col:51 invalid suffix_free 'int *'
| |-FieldDecl 0x1e09dec0550 <line:55:5, col:20> col:20 referenced ex_buf 'unsigned char *'
| |-FieldDecl 0x1e09dec05c0 <line:56:5, col:9> col:9 referenced ex_len 'int'
| |-FieldDecl 0x1e09dec0630 <line:57:5, col:9> col:9 referenced ex_pos 'int'
| `-FieldDecl 0x1e09dec06a0 <line:58:5, col:11> col:11 referenced ex_arg 'void *'
|-TypedefDecl 0x1e09dec0758 <line:38:1, line:59:3> col:3 referenced BIO_ASN1_BUF_CTX 'struct BIO_ASN1_BUF_CTX_t':'struct BIO_ASN1_BUF_CTX_t'
| `-ElaboratedType 0x1e09dec0700 'struct BIO_ASN1_BUF_CTX_t' sugar
|   `-RecordType 0x1e09dec4fc0 'struct BIO_ASN1_BUF_CTX_t'
|     `-Record 0x1e09dec4f28 'BIO_ASN1_BUF_CTX_t'
|-FunctionDecl 0x1e09dec09d0 <line:61:1, col:59> col:12 invalid asn1_bio_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x1e09dec07e0 <col:27, col:32> col:32 invalid h 'int *'
| |-ParmVarDecl 0x1e09dec0860 <col:35, col:47> col:47 buf 'const char *'
| `-ParmVarDecl 0x1e09dec08e0 <col:52, col:56> col:56 num 'int'
|-FunctionDecl 0x1e09dec0c90 <line:62:1, col:53> col:12 invalid asn1_bio_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1e09dec0aa0 <col:26, col:31> col:31 invalid h 'int *'
| |-ParmVarDecl 0x1e09dec0b20 <col:34, col:40> col:40 buf 'char *'
| `-ParmVarDecl 0x1e09dec0ba0 <col:45, col:49> col:49 size 'int'
|-FunctionDecl 0x1e09dec0ec0 <line:63:1, col:49> col:12 invalid asn1_bio_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x1e09dec0d60 <col:26, col:31> col:31 invalid h 'int *'
| `-ParmVarDecl 0x1e09dec0de0 <col:34, col:46> col:46 str 'const char *'
|-FunctionDecl 0x1e09debd110 <line:64:1, col:53> col:12 invalid asn1_bio_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1e09dec0f88 <col:26, col:31> col:31 invalid h 'int *'
| |-ParmVarDecl 0x1e09dec1008 <col:34, col:40> col:40 str 'char *'
| `-ParmVarDecl 0x1e09debd068 <col:45, col:49> col:49 size 'int'
|-FunctionDecl 0x1e09debd460 <line:65:1, col:65> col:13 invalid asn1_bio_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x1e09debd1e0 <col:27, col:32> col:32 invalid h 'int *'
| |-ParmVarDecl 0x1e09debd260 <col:35, col:39> col:39 cmd 'int'
| |-ParmVarDecl 0x1e09debd2e0 <col:44, col:49> col:49 arg1 'long'
| `-ParmVarDecl 0x1e09debd360 <col:55, col:61> col:61 arg2 'void *'
|-FunctionDecl 0x1e09debd600 <line:66:1, col:31> col:12 invalid asn1_bio_new 'int (int *)' static
| `-ParmVarDecl 0x1e09debd538 <col:25, col:30> col:30 invalid h 'int *'
|-FunctionDecl 0x1e09debd758 <line:67:1, col:35> col:12 invalid asn1_bio_free 'int (int *)' static
| `-ParmVarDecl 0x1e09debd6c0 <col:26, col:31> col:31 invalid data 'int *'
|-FunctionDecl 0x1e09debda00 <line:68:1, col:68> col:13 invalid asn1_bio_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x1e09debd818 <col:36, col:41> col:41 invalid h 'int *'
| |-ParmVarDecl 0x1e09debd898 <col:44, col:48> col:48 cmd 'int'
| `-ParmVarDecl 0x1e09debd918 <col:53, col:66> col:66 invalid fp 'int *'
|-FunctionDecl 0x1e09debdd10 <line:70:1, col:57> col:12 used asn1_bio_init 'int (BIO_ASN1_BUF_CTX *, int)' static
| |-ParmVarDecl 0x1e09debdb48 <col:26, col:44> col:44 ctx 'BIO_ASN1_BUF_CTX *'
| `-ParmVarDecl 0x1e09debdbc8 <col:49, col:53> col:53 size 'int'
|-FunctionDecl 0x1e09dec7180 <line:71:1, line:72:74> line:71:12 invalid asn1_bio_flush_ex 'int (int *, BIO_ASN1_BUF_CTX *, int *, asn1_bio_state_t)' static
| |-ParmVarDecl 0x1e09debddf0 <col:30, col:35> col:35 invalid b 'int *'
| |-ParmVarDecl 0x1e09debde68 <col:38, col:56> col:56 ctx 'BIO_ASN1_BUF_CTX *'
| |-ParmVarDecl 0x1e09debdee8 <line:72:30, col:44> col:44 invalid cleanup 'int *'
| `-ParmVarDecl 0x1e09debdf60 <col:53, col:70> col:70 next 'asn1_bio_state_t':'asn1_bio_state_t'
|-FunctionDecl 0x1e09dec75a0 <line:73:1, line:76:58> line:73:12 invalid asn1_bio_setup_ex 'int (int *, BIO_ASN1_BUF_CTX *, int *, asn1_bio_state_t, asn1_bio_state_t)' static
| |-ParmVarDecl 0x1e09dec7258 <col:30, col:35> col:35 invalid b 'int *'
| |-ParmVarDecl 0x1e09dec72d0 <col:38, col:56> col:56 ctx 'BIO_ASN1_BUF_CTX *'
| |-ParmVarDecl 0x1e09dec7350 <line:74:30, col:44> col:44 invalid setup 'int *'
| |-ParmVarDecl 0x1e09dec73c8 <line:75:30, col:47> col:47 ex_state 'asn1_bio_state_t':'asn1_bio_state_t'
| `-ParmVarDecl 0x1e09dec7440 <line:76:30, col:47> col:47 other_state 'asn1_bio_state_t':'asn1_bio_state_t'
|-VarDecl 0x1e09dec7680 <line:78:1, col:25> col:25 invalid methods_asn1 'const int' static
|-FunctionDecl 0x1e09dec7810 <line:91:1, line:94:1> line:91:19 invalid BIO_f_asn1 'const int *(void)'
| `-CompoundStmt 0x1e09dec78c8 <line:92:1, line:94:1>
|-FunctionDecl 0x1e09dec7988 <line:96:1, line:110:1> line:96:12 invalid asn1_bio_new 'int (int *)' static
| |-ParmVarDecl 0x1e09dec78f0 <col:25, col:30> col:30 invalid b 'int *'
| `-CompoundStmt 0x1e09dec8468 <line:97:1, line:110:1>
|   |-DeclStmt 0x1e09dec7d10 <line:98:5, col:57>
|   | `-VarDecl 0x1e09dec7a58 <col:5, col:56> col:23 used ctx 'BIO_ASN1_BUF_CTX *' cinit
|   |   `-ImplicitCastExpr 0x1e09dec7cf8 <col:29, col:56> 'BIO_ASN1_BUF_CTX *' <IntegralToPointer>
|   |     `-CallExpr 0x1e09dec7cd0 <col:29, col:56> 'int'
|   |       |-ImplicitCastExpr 0x1e09dec7cb8 <col:29> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1e09dec7bd8 <col:29> 'int ()' Function 0x1e09dec7b10 'OPENSSL_zalloc' 'int ()'
|   |       `-UnaryExprOrTypeTraitExpr 0x1e09dec7c68 <col:44, col:55> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x1e09dec7c48 <col:50, col:55> 'BIO_ASN1_BUF_CTX':'struct BIO_ASN1_BUF_CTX_t' lvalue
|   |           `-UnaryOperator 0x1e09dec7c30 <col:51, col:52> 'BIO_ASN1_BUF_CTX':'struct BIO_ASN1_BUF_CTX_t' lvalue prefix '*' cannot overflow
|   |             `-ImplicitCastExpr 0x1e09dec7c18 <col:52> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |               `-DeclRefExpr 0x1e09dec7bf8 <col:52> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09dec7a58 'ctx' 'BIO_ASN1_BUF_CTX *' non_odr_use_unevaluated
|   |-IfStmt 0x1e09dec7e70 <line:100:5, line:101:16>
|   | |-BinaryOperator 0x1e09dec7e18 <line:100:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1e09dec7de8 <.//openssl//file_jk/before\crypto\asn1\bio_asn1.c:100:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1e09dec7d28 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09dec7a58 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-ImplicitCastExpr 0x1e09dec7e00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'BIO_ASN1_BUF_CTX *' <BitCast>
|   | |   `-ParenExpr 0x1e09dec7dc8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1e09dec7da0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1e09dec7d60 <col:26> 'int' 0
|   | `-ReturnStmt 0x1e09dec7e60 <.//openssl//file_jk/before\crypto\asn1\bio_asn1.c:101:9, col:16>
|   |   `-IntegerLiteral 0x1e09dec7e38 <col:16> 'int' 0
|   |-IfStmt 0x1e09dec81b0 <line:102:5, line:105:5>
|   | |-UnaryOperator 0x1e09dec7fa8 <line:102:9, col:50> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x1e09dec7f60 <col:10, col:50> 'int'
|   | |   |-ImplicitCastExpr 0x1e09dec7f48 <col:10> 'int (*)(BIO_ASN1_BUF_CTX *, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1e09dec7e88 <col:10> 'int (BIO_ASN1_BUF_CTX *, int)' Function 0x1e09debdd10 'asn1_bio_init' 'int (BIO_ASN1_BUF_CTX *, int)'
|   | |   |-ImplicitCastExpr 0x1e09dec7f90 <col:24> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1e09dec7ea8 <col:24> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09dec7a58 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | |   `-IntegerLiteral 0x1e09dec7ec8 <line:21:31> 'int' 20
|   | `-CompoundStmt 0x1e09dec8190 <line:102:53, line:105:5>
|   |   |-CallExpr 0x1e09dec8118 <line:103:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x1e09dec8100 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1e09dec80b0 <col:9> 'int ()' Function 0x1e09dec7fe8 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x1e09dec8140 <col:22> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1e09dec80d0 <col:22> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09dec7a58 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   `-ReturnStmt 0x1e09dec8180 <line:104:9, col:16>
|   |     `-IntegerLiteral 0x1e09dec8158 <col:16> 'int' 0
|   `-ReturnStmt 0x1e09dec8458 <line:109:5, col:12>
|     `-IntegerLiteral 0x1e09dec8430 <col:12> 'int' 1
|-FunctionDecl 0x1e09dec85f8 prev 0x1e09debdd10 <line:112:1, line:122:1> line:112:12 used asn1_bio_init 'int (BIO_ASN1_BUF_CTX *, int)' static
| |-ParmVarDecl 0x1e09dec84a8 <col:26, col:44> col:44 used ctx 'BIO_ASN1_BUF_CTX *'
| |-ParmVarDecl 0x1e09dec8528 <col:49, col:53> col:53 used size 'int'
| `-CompoundStmt 0x1e09dec8ce8 <line:113:1, line:122:1>
|   |-BinaryOperator 0x1e09dec88b0 <line:114:5, col:35> 'unsigned char *' '='
|   | |-MemberExpr 0x1e09dec86e0 <col:5, col:10> 'unsigned char *' lvalue ->buf 0x1e09dec0080
|   | | `-ImplicitCastExpr 0x1e09dec86c8 <col:5> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e09dec86a8 <col:5> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x1e09dec84a8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | `-ImplicitCastExpr 0x1e09dec8898 <col:16, col:35> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x1e09dec8858 <col:16, col:35> 'int'
|   |     |-ImplicitCastExpr 0x1e09dec8840 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1e09dec8800 <col:16> 'int ()' Function 0x1e09dec8738 'OPENSSL_malloc' 'int ()'
|   |     `-ImplicitCastExpr 0x1e09dec8880 <col:31> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1e09dec8820 <col:31> 'int' lvalue ParmVar 0x1e09dec8528 'size' 'int'
|   |-IfStmt 0x1e09dec8a48 <line:115:5, line:116:16>
|   | |-BinaryOperator 0x1e09dec89f0 <line:115:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1e09dec89c0 <.//openssl//file_jk/before\crypto\asn1\bio_asn1.c:115:9, col:14> 'unsigned char *' <LValueToRValue>
|   | | | `-MemberExpr 0x1e09dec8908 <col:9, col:14> 'unsigned char *' lvalue ->buf 0x1e09dec0080
|   | | |   `-ImplicitCastExpr 0x1e09dec88f0 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1e09dec88d0 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x1e09dec84a8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-ImplicitCastExpr 0x1e09dec89d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x1e09dec89a0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1e09dec8978 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1e09dec8938 <col:26> 'int' 0
|   | `-ReturnStmt 0x1e09dec8a38 <.//openssl//file_jk/before\crypto\asn1\bio_asn1.c:116:9, col:16>
|   |   `-IntegerLiteral 0x1e09dec8a10 <col:16> 'int' 0
|   |-BinaryOperator 0x1e09dec8b00 <line:117:5, col:20> 'int' '='
|   | |-MemberExpr 0x1e09dec8a98 <col:5, col:10> 'int' lvalue ->bufsize 0x1e09dec00f0
|   | | `-ImplicitCastExpr 0x1e09dec8a80 <col:5> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e09dec8a60 <col:5> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x1e09dec84a8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | `-ImplicitCastExpr 0x1e09dec8ae8 <col:20> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1e09dec8ac8 <col:20> 'int' lvalue ParmVar 0x1e09dec8528 'size' 'int'
|   |-BinaryOperator 0x1e09dec8c90 <line:120:5, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   | |-MemberExpr 0x1e09dec8c28 <col:5, col:10> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x1e09dec5010
|   | | `-ImplicitCastExpr 0x1e09dec8c10 <col:5> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e09dec8bf0 <col:5> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x1e09dec84a8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | `-ImplicitCastExpr 0x1e09dec8c78 <col:18> 'asn1_bio_state_t':'asn1_bio_state_t' <IntegralCast>
|   |   `-DeclRefExpr 0x1e09dec8c58 <col:18> 'int' EnumConstant 0x1e09dec4990 'ASN1_STATE_START' 'int'
|   `-ReturnStmt 0x1e09dec8cd8 <line:121:5, col:12>
|     `-IntegerLiteral 0x1e09dec8cb0 <col:12> 'int' 1
|-FunctionDecl 0x1e09dec8dd0 <line:124:1, line:141:1> line:124:12 invalid asn1_bio_free 'int (int *)' static
| |-ParmVarDecl 0x1e09dec8d38 <col:26, col:31> col:31 invalid b 'int *'
| `-CompoundStmt 0x1e09dec65b0 <line:125:1, line:141:1>
|   |-DeclStmt 0x1e09dec8f08 <line:126:5, col:26>
|   | `-VarDecl 0x1e09dec8ea0 <col:5, col:23> col:23 used ctx 'BIO_ASN1_BUF_CTX *'
|   |-IfStmt 0x1e09dec8ff8 <line:128:5, line:129:16>
|   | |-OpaqueValueExpr 0x1e09dec8fe0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1e09dec8fd0 <col:9, col:16>
|   |   `-IntegerLiteral 0x1e09dec8fa8 <col:16> 'int' 0
|   |-IfStmt 0x1e09dec62f8 <line:132:5, line:133:16>
|   | |-BinaryOperator 0x1e09dec62a0 <line:132:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1e09dec6270 <.//openssl//file_jk/before\crypto\asn1\bio_asn1.c:132:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1e09dec61c8 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09dec8ea0 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-ImplicitCastExpr 0x1e09dec6288 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'BIO_ASN1_BUF_CTX *' <BitCast>
|   | |   `-ParenExpr 0x1e09dec6250 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1e09dec6228 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1e09dec61e8 <col:26> 'int' 0
|   | `-ReturnStmt 0x1e09dec62e8 <.//openssl//file_jk/before\crypto\asn1\bio_asn1.c:133:9, col:16>
|   |   `-IntegerLiteral 0x1e09dec62c0 <col:16> 'int' 0
|   |-CallExpr 0x1e09dec63b0 <line:135:5, col:26> 'int'
|   | |-ImplicitCastExpr 0x1e09dec6398 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e09dec6310 <col:5> 'int ()' Function 0x1e09dec7fe8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1e09dec63d8 <col:18, col:23> 'unsigned char *' <LValueToRValue>
|   |   `-MemberExpr 0x1e09dec6368 <col:18, col:23> 'unsigned char *' lvalue ->buf 0x1e09dec0080
|   |     `-ImplicitCastExpr 0x1e09dec6350 <col:18> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1e09dec6330 <col:18> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09dec8ea0 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |-CallExpr 0x1e09dec6448 <line:136:5, col:21> 'int'
|   | |-ImplicitCastExpr 0x1e09dec6430 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e09dec63f0 <col:5> 'int ()' Function 0x1e09dec7fe8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1e09dec6470 <col:18> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1e09dec6410 <col:18> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09dec8ea0 'ctx' 'BIO_ASN1_BUF_CTX *'
|   `-ReturnStmt 0x1e09dec65a0 <line:140:5, col:12>
|     `-IntegerLiteral 0x1e09dec6578 <col:12> 'int' 1
|-FunctionDecl 0x1e09dec67b0 <line:143:1, line:240:1> line:143:12 invalid asn1_bio_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x1e09dec6608 <col:27, col:32> col:32 invalid b 'int *'
| |-ParmVarDecl 0x1e09dec6688 <col:35, col:47> col:47 used in 'const char *'
| |-ParmVarDecl 0x1e09dec6708 <col:51, col:55> col:55 used inl 'int'
| `-CompoundStmt 0x1e09de74600 <line:144:1, line:240:1>
|   |-DeclStmt 0x1e09dec68f8 <line:145:5, col:26>
|   | `-VarDecl 0x1e09dec6890 <col:5, col:23> col:23 used ctx 'BIO_ASN1_BUF_CTX *'
|   |-DeclStmt 0x1e09dec6ab0 <line:146:5, col:26>
|   | |-VarDecl 0x1e09dec6928 <col:5, col:9> col:9 used wrmax 'int'
|   | |-VarDecl 0x1e09dec69a8 <col:5, col:16> col:16 used wrlen 'int'
|   | `-VarDecl 0x1e09dec6a28 <col:5, col:23> col:23 used ret 'int'
|   |-DeclStmt 0x1e09dec6b48 <line:147:5, col:21>
|   | `-VarDecl 0x1e09dec6ae0 <col:5, col:20> col:20 used p 'unsigned char *'
|   |-IfStmt 0x1e09dec7080 <line:152:5, line:153:16>
|   | |-OpaqueValueExpr 0x1e09dec7068 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1e09dec7058 <col:9, col:16>
|   |   `-IntegerLiteral 0x1e09dec7030 <col:16> 'int' 0
|   |-BinaryOperator 0x1e09dec9138 <line:155:5, col:13> 'int' '='
|   | |-DeclRefExpr 0x1e09dec7098 <col:5> 'int' lvalue Var 0x1e09dec69a8 'wrlen' 'int'
|   | `-IntegerLiteral 0x1e09dec9110 <col:13> 'int' 0
|   |-BinaryOperator 0x1e09dec91d0 <line:156:5, col:12> 'int' '='
|   | |-DeclRefExpr 0x1e09dec9158 <col:5> 'int' lvalue Var 0x1e09dec6a28 'ret' 'int'
|   | `-UnaryOperator 0x1e09dec91b8 <col:11, col:12> 'int' prefix '-'
|   |   `-IntegerLiteral 0x1e09dec9190 <col:12> 'int' 1
|   |-ForStmt 0x1e09de74328 <line:158:5, line:232:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x1e09de74310 <line:158:14, line:232:5>
|   |   `-SwitchStmt 0x1e09dec9288 <line:159:9, line:230:9>
|   |     |-ImplicitCastExpr 0x1e09dec9270 <line:159:17, col:22> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x1e09dec9258 <col:17, col:22> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   |     |   `-MemberExpr 0x1e09dec9228 <col:17, col:22> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x1e09dec5010
|   |     |     `-ImplicitCastExpr 0x1e09dec9210 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x1e09dec91f0 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09dec6890 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |     `-CompoundStmt 0x1e09de74220 <col:29, line:230:9>
|   |       |-CaseStmt 0x1e09dec92e0 <line:162:9, line:165:24>
|   |       | |-ConstantExpr 0x1e09dec92c8 <line:162:14> 'int'
|   |       | | `-DeclRefExpr 0x1e09dec92a8 <col:14> 'int' EnumConstant 0x1e09dec4990 'ASN1_STATE_START' 'int'
|   |       | `-IfStmt 0x1e09dec93f0 <line:163:13, line:165:24>
|   |       |   |-OpaqueValueExpr 0x1e09dec93d8 <<invalid sloc>> '_Bool'
|   |       |   `-ReturnStmt 0x1e09dec93c8 <col:17, col:24>
|   |       |     `-IntegerLiteral 0x1e09dec93a0 <col:24> 'int' 0
|   |       |-BreakStmt 0x1e09dec9408 <line:166:13>
|   |       |-CaseStmt 0x1e09dec9448 <line:169:9, <invalid sloc>>
|   |       | |-ConstantExpr 0x1e09dec9430 <col:14> 'int'
|   |       | | `-DeclRefExpr 0x1e09dec9410 <col:14> 'int' EnumConstant 0x1e09dec49e8 'ASN1_STATE_PRE_COPY' 'int'
|   |       | `-NullStmt 0x1e09dec9508 <<invalid sloc>>
|   |       |-IfStmt 0x1e09dec95f8 <line:174:13, line:175:22>
|   |       | |-BinaryOperator 0x1e09dec9570 <line:174:17, col:24> 'int' '<='
|   |       | | |-ImplicitCastExpr 0x1e09dec9558 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x1e09dec9510 <col:17> 'int' lvalue Var 0x1e09dec6a28 'ret' 'int'
|   |       | | `-IntegerLiteral 0x1e09dec9530 <col:24> 'int' 0
|   |       | `-GotoStmt 0x1e09dec95e0 <line:175:17, col:22> 'done' 0x1e09dec9590
|   |       |-BreakStmt 0x1e09dec9610 <line:177:13>
|   |       |-CaseStmt 0x1e09dec9650 <line:179:9, line:180:69>
|   |       | |-ConstantExpr 0x1e09dec9638 <line:179:14> 'int'
|   |       | | `-DeclRefExpr 0x1e09dec9618 <col:14> 'int' EnumConstant 0x1e09dec4a40 'ASN1_STATE_HEADER' 'int'
|   |       | `-BinaryOperator 0x1e09dec9978 <line:180:13, col:69> 'int' '='
|   |       |   |-MemberExpr 0x1e09dec96b0 <col:13, col:18> 'int' lvalue ->buflen 0x1e09dec01d0
|   |       |   | `-ImplicitCastExpr 0x1e09dec9698 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x1e09dec9678 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09dec6890 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |   `-BinaryOperator 0x1e09dec9958 <col:27, col:69> 'int' '-'
|   |       |     |-CallExpr 0x1e09dec98b8 <col:27, col:65> 'int'
|   |       |     | |-ImplicitCastExpr 0x1e09dec98a0 <col:27> 'int (*)()' <FunctionToPointerDecay>
|   |       |     | | `-DeclRefExpr 0x1e09dec97d0 <col:27> 'int ()' Function 0x1e09dec9708 'ASN1_object_size' 'int ()'
|   |       |     | |-IntegerLiteral 0x1e09dec97f0 <col:44> 'int' 0
|   |       |     | |-ImplicitCastExpr 0x1e09dec98f0 <col:47> 'int' <LValueToRValue>
|   |       |     | | `-DeclRefExpr 0x1e09dec9818 <col:47> 'int' lvalue ParmVar 0x1e09dec6708 'inl' 'int'
|   |       |     | `-ImplicitCastExpr 0x1e09dec9908 <col:52, col:57> 'int' <LValueToRValue>
|   |       |     |   `-MemberExpr 0x1e09dec9870 <col:52, col:57> 'int' lvalue ->asn1_tag 0x1e09dec0320
|   |       |     |     `-ImplicitCastExpr 0x1e09dec9858 <col:52> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |     |       `-DeclRefExpr 0x1e09dec9838 <col:52> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09dec6890 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |     `-ImplicitCastExpr 0x1e09dec9940 <col:69> 'int' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x1e09dec9920 <col:69> 'int' lvalue ParmVar 0x1e09dec6708 'inl' 'int'
|   |       |-CallExpr 0x1e09dec9be0 <line:181:13, col:55> 'int'
|   |       | |-ImplicitCastExpr 0x1e09dec9bc8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x1e09dec9a88 <col:13> 'int ()' Function 0x1e09dec99c0 'OPENSSL_assert' 'int ()'
|   |       | `-BinaryOperator 0x1e09dec9ba8 <col:28, col:48> 'int' '<='
|   |       |   |-ImplicitCastExpr 0x1e09dec9b78 <col:28, col:33> 'int' <LValueToRValue>
|   |       |   | `-MemberExpr 0x1e09dec9ae0 <col:28, col:33> 'int' lvalue ->buflen 0x1e09dec01d0
|   |       |   |   `-ImplicitCastExpr 0x1e09dec9ac8 <col:28> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |   |     `-DeclRefExpr 0x1e09dec9aa8 <col:28> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09dec6890 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |   `-ImplicitCastExpr 0x1e09dec9b90 <col:43, col:48> 'int' <LValueToRValue>
|   |       |     `-MemberExpr 0x1e09dec9b48 <col:43, col:48> 'int' lvalue ->bufsize 0x1e09dec00f0
|   |       |       `-ImplicitCastExpr 0x1e09dec9b30 <col:43> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |         `-DeclRefExpr 0x1e09dec9b10 <col:43> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09dec6890 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |-BinaryOperator 0x1e09dec9cc0 <line:182:13, col:22> 'unsigned char *' '='
|   |       | |-DeclRefExpr 0x1e09dec9c08 <col:13> 'unsigned char *' lvalue Var 0x1e09dec6ae0 'p' 'unsigned char *'
|   |       | `-ImplicitCastExpr 0x1e09dec9ca8 <col:17, col:22> 'unsigned char *' <LValueToRValue>
|   |       |   `-MemberExpr 0x1e09dec9c78 <col:17, col:22> 'unsigned char *' lvalue ->buf 0x1e09dec0080
|   |       |     `-ImplicitCastExpr 0x1e09dec9c60 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x1e09dec9c40 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09dec6890 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |-CallExpr 0x1e09dec9f80 <line:183:13, col:71> 'int'
|   |       | |-ImplicitCastExpr 0x1e09dec9f68 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x1e09dec9dd0 <col:13> 'int ()' Function 0x1e09dec9d08 'ASN1_put_object' 'int ()'
|   |       | |-UnaryOperator 0x1e09dec9e38 <col:29, col:30> 'unsigned char **' prefix '&' cannot overflow
|   |       | | `-DeclRefExpr 0x1e09dec9df0 <col:30> 'unsigned char *' lvalue Var 0x1e09dec6ae0 'p' 'unsigned char *'
|   |       | |-IntegerLiteral 0x1e09dec9e50 <col:33> 'int' 0
|   |       | |-ImplicitCastExpr 0x1e09dec9fc8 <col:36> 'int' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x1e09dec9e78 <col:36> 'int' lvalue ParmVar 0x1e09dec6708 'inl' 'int'
|   |       | |-ImplicitCastExpr 0x1e09dec9fe0 <col:41, col:46> 'int' <LValueToRValue>
|   |       | | `-MemberExpr 0x1e09dec9ed0 <col:41, col:46> 'int' lvalue ->asn1_tag 0x1e09dec0320
|   |       | |   `-ImplicitCastExpr 0x1e09dec9eb8 <col:41> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |     `-DeclRefExpr 0x1e09dec9e98 <col:41> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09dec6890 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-ImplicitCastExpr 0x1e09dec9ff8 <col:56, col:61> 'int' <LValueToRValue>
|   |       |   `-MemberExpr 0x1e09dec9f38 <col:56, col:61> 'int' lvalue ->asn1_class 0x1e09dec02b0
|   |       |     `-ImplicitCastExpr 0x1e09dec9f20 <col:56> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x1e09dec9f00 <col:56> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09dec6890 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |-BinaryOperator 0x1e09deca0b0 <line:184:13, col:28> 'int' '='
|   |       | |-MemberExpr 0x1e09deca048 <col:13, col:18> 'int' lvalue ->copylen 0x1e09dec0240
|   |       | | `-ImplicitCastExpr 0x1e09deca030 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1e09deca010 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09dec6890 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-ImplicitCastExpr 0x1e09deca098 <col:28> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1e09deca078 <col:28> 'int' lvalue ParmVar 0x1e09dec6708 'inl' 'int'
|   |       |-BinaryOperator 0x1e09deca188 <line:185:13, col:26> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   |       | |-MemberExpr 0x1e09deca120 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x1e09dec5010
|   |       | | `-ImplicitCastExpr 0x1e09deca0f0 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1e09deca0d0 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09dec6890 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-ImplicitCastExpr 0x1e09deca170 <col:26> 'asn1_bio_state_t':'asn1_bio_state_t' <IntegralCast>
|   |       |   `-DeclRefExpr 0x1e09deca150 <col:26> 'int' EnumConstant 0x1e09dec4a98 'ASN1_STATE_HEADER_COPY' 'int'
|   |       |-BreakStmt 0x1e09deca1a8 <line:187:13>
|   |       |-CaseStmt 0x1e09deca1e8 <line:189:9, <invalid sloc>>
|   |       | |-ConstantExpr 0x1e09deca1d0 <col:14> 'int'
|   |       | | `-DeclRefExpr 0x1e09deca1b0 <col:14> 'int' EnumConstant 0x1e09dec4a98 'ASN1_STATE_HEADER_COPY' 'int'
|   |       | `-NullStmt 0x1e09deca4c8 <<invalid sloc>>
|   |       |-IfStmt 0x1e09deca568 <line:191:13, line:192:22>
|   |       | |-BinaryOperator 0x1e09deca530 <line:191:17, col:24> 'int' '<='
|   |       | | |-ImplicitCastExpr 0x1e09deca518 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x1e09deca4d0 <col:17> 'int' lvalue Var 0x1e09dec6a28 'ret' 'int'
|   |       | | `-IntegerLiteral 0x1e09deca4f0 <col:24> 'int' 0
|   |       | `-GotoStmt 0x1e09deca550 <line:192:17, col:22> 'done' 0x1e09dec9590
|   |       |-CompoundAssignOperator 0x1e09deca620 <line:194:13, col:28> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-MemberExpr 0x1e09deca5b8 <col:13, col:18> 'int' lvalue ->buflen 0x1e09dec01d0
|   |       | | `-ImplicitCastExpr 0x1e09deca5a0 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1e09deca580 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09dec6890 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-ImplicitCastExpr 0x1e09deca608 <col:28> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1e09deca5e8 <col:28> 'int' lvalue Var 0x1e09dec6a28 'ret' 'int'
|   |       |-IfStmt 0x1e09deca930 <line:195:13, line:200:13> has_else
|   |       | |-ImplicitCastExpr 0x1e09deca6b8 <line:195:17, col:22> 'int' <LValueToRValue>
|   |       | | `-MemberExpr 0x1e09deca688 <col:17, col:22> 'int' lvalue ->buflen 0x1e09dec01d0
|   |       | |   `-ImplicitCastExpr 0x1e09deca670 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |     `-DeclRefExpr 0x1e09deca650 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09dec6890 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | |-CompoundAssignOperator 0x1e09deca770 <line:196:17, col:32> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | | |-MemberExpr 0x1e09deca708 <col:17, col:22> 'int' lvalue ->bufpos 0x1e09dec0160
|   |       | | | `-ImplicitCastExpr 0x1e09deca6f0 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x1e09deca6d0 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09dec6890 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | | `-ImplicitCastExpr 0x1e09deca758 <col:32> 'int' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1e09deca738 <col:32> 'int' lvalue Var 0x1e09dec6a28 'ret' 'int'
|   |       | `-CompoundStmt 0x1e09deca910 <line:197:18, line:200:13>
|   |       |   |-BinaryOperator 0x1e09deca830 <line:198:17, col:31> 'int' '='
|   |       |   | |-MemberExpr 0x1e09deca7d8 <col:17, col:22> 'int' lvalue ->bufpos 0x1e09dec0160
|   |       |   | | `-ImplicitCastExpr 0x1e09deca7c0 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |   | |   `-DeclRefExpr 0x1e09deca7a0 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09dec6890 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |   | `-IntegerLiteral 0x1e09deca808 <col:31> 'int' 0
|   |       |   `-BinaryOperator 0x1e09deca8f0 <line:199:17, col:30> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   |       |     |-MemberExpr 0x1e09deca888 <col:17, col:22> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x1e09dec5010
|   |       |     | `-ImplicitCastExpr 0x1e09deca870 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |     |   `-DeclRefExpr 0x1e09deca850 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09dec6890 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |     `-ImplicitCastExpr 0x1e09deca8d8 <col:30> 'asn1_bio_state_t':'asn1_bio_state_t' <IntegralCast>
|   |       |       `-DeclRefExpr 0x1e09deca8b8 <col:30> 'int' EnumConstant 0x1e09dec4af0 'ASN1_STATE_DATA_COPY' 'int'
|   |       |-BreakStmt 0x1e09deca958 <line:202:13>
|   |       |-CaseStmt 0x1e09deca998 <line:204:9, line:209:25>
|   |       | |-ConstantExpr 0x1e09deca980 <line:204:14> 'int'
|   |       | | `-DeclRefExpr 0x1e09deca960 <col:14> 'int' EnumConstant 0x1e09dec4af0 'ASN1_STATE_DATA_COPY' 'int'
|   |       | `-IfStmt 0x1e09decabe8 <line:206:13, line:209:25> has_else
|   |       |   |-BinaryOperator 0x1e09decaa78 <line:206:17, col:28> 'int' '>'
|   |       |   | |-ImplicitCastExpr 0x1e09decaa48 <col:17> 'int' <LValueToRValue>
|   |       |   | | `-DeclRefExpr 0x1e09deca9c0 <col:17> 'int' lvalue ParmVar 0x1e09dec6708 'inl' 'int'
|   |       |   | `-ImplicitCastExpr 0x1e09decaa60 <col:23, col:28> 'int' <LValueToRValue>
|   |       |   |   `-MemberExpr 0x1e09decaa18 <col:23, col:28> 'int' lvalue ->copylen 0x1e09dec0240
|   |       |   |     `-ImplicitCastExpr 0x1e09decaa00 <col:23> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |   |       `-DeclRefExpr 0x1e09deca9e0 <col:23> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09dec6890 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |   |-BinaryOperator 0x1e09decab50 <line:207:17, col:30> 'int' '='
|   |       |   | |-DeclRefExpr 0x1e09decaa98 <col:17> 'int' lvalue Var 0x1e09dec6928 'wrmax' 'int'
|   |       |   | `-ImplicitCastExpr 0x1e09decab38 <col:25, col:30> 'int' <LValueToRValue>
|   |       |   |   `-MemberExpr 0x1e09decab08 <col:25, col:30> 'int' lvalue ->copylen 0x1e09dec0240
|   |       |   |     `-ImplicitCastExpr 0x1e09decaaf0 <col:25> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |   |       `-DeclRefExpr 0x1e09decaad0 <col:25> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09dec6890 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |   `-BinaryOperator 0x1e09decabc8 <line:209:17, col:25> 'int' '='
|   |       |     |-DeclRefExpr 0x1e09decab70 <col:17> 'int' lvalue Var 0x1e09dec6928 'wrmax' 'int'
|   |       |     `-ImplicitCastExpr 0x1e09decabb0 <col:25> 'int' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x1e09decab90 <col:25> 'int' lvalue ParmVar 0x1e09dec6708 'inl' 'int'
|   |       |-IfStmt 0x1e09decad28 <line:211:13, line:212:22>
|   |       | |-BinaryOperator 0x1e09decacf0 <line:211:17, col:24> 'int' '<='
|   |       | | |-ImplicitCastExpr 0x1e09decacd8 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x1e09decac90 <col:17> 'int' lvalue Var 0x1e09dec6a28 'ret' 'int'
|   |       | | `-IntegerLiteral 0x1e09decacb0 <col:24> 'int' 0
|   |       | `-GotoStmt 0x1e09decad10 <line:212:17, col:22> 'done' 0x1e09dec9590
|   |       |-CompoundAssignOperator 0x1e09decad98 <line:213:13, col:22> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-DeclRefExpr 0x1e09decad40 <col:13> 'int' lvalue Var 0x1e09dec69a8 'wrlen' 'int'
|   |       | `-ImplicitCastExpr 0x1e09decad80 <col:22> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1e09decad60 <col:22> 'int' lvalue Var 0x1e09dec6a28 'ret' 'int'
|   |       |-CompoundAssignOperator 0x1e09decae68 <line:214:13, col:29> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-MemberExpr 0x1e09decae00 <col:13, col:18> 'int' lvalue ->copylen 0x1e09dec0240
|   |       | | `-ImplicitCastExpr 0x1e09decade8 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1e09decadc8 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09dec6890 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-ImplicitCastExpr 0x1e09decae50 <col:29> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1e09decae30 <col:29> 'int' lvalue Var 0x1e09dec6a28 'ret' 'int'
|   |       |-CompoundAssignOperator 0x1e09decaef0 <line:215:13, col:19> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |       | |-DeclRefExpr 0x1e09decae98 <col:13> 'const char *' lvalue ParmVar 0x1e09dec6688 'in' 'const char *'
|   |       | `-ImplicitCastExpr 0x1e09decaed8 <col:19> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1e09decaeb8 <col:19> 'int' lvalue Var 0x1e09dec6a28 'ret' 'int'
|   |       |-CompoundAssignOperator 0x1e09decaf78 <line:216:13, col:20> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-DeclRefExpr 0x1e09decaf20 <col:13> 'int' lvalue ParmVar 0x1e09dec6708 'inl' 'int'
|   |       | `-ImplicitCastExpr 0x1e09decaf60 <col:20> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1e09decaf40 <col:20> 'int' lvalue Var 0x1e09dec6a28 'ret' 'int'
|   |       |-IfStmt 0x1e09de73fe0 <line:218:13, line:219:30>
|   |       | |-BinaryOperator 0x1e09decb050 <line:218:17, col:33> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x1e09decb038 <col:17, col:22> 'int' <LValueToRValue>
|   |       | | | `-MemberExpr 0x1e09decafe0 <col:17, col:22> 'int' lvalue ->copylen 0x1e09dec0240
|   |       | | |   `-ImplicitCastExpr 0x1e09decafc8 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | | |     `-DeclRefExpr 0x1e09decafa8 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09dec6890 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | | `-IntegerLiteral 0x1e09decb010 <col:33> 'int' 0
|   |       | `-BinaryOperator 0x1e09de73fc0 <line:219:17, col:30> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   |       |   |-MemberExpr 0x1e09decb0a8 <col:17, col:22> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x1e09dec5010
|   |       |   | `-ImplicitCastExpr 0x1e09decb090 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x1e09decb070 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09dec6890 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |   `-ImplicitCastExpr 0x1e09decb0f8 <col:30> 'asn1_bio_state_t':'asn1_bio_state_t' <IntegralCast>
|   |       |     `-DeclRefExpr 0x1e09decb0d8 <col:30> 'int' EnumConstant 0x1e09dec4a40 'ASN1_STATE_HEADER' 'int'
|   |       |-IfStmt 0x1e09de74090 <line:221:13, line:222:22>
|   |       | |-BinaryOperator 0x1e09de74058 <line:221:17, col:24> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x1e09de74040 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x1e09de73ff8 <col:17> 'int' lvalue ParmVar 0x1e09dec6708 'inl' 'int'
|   |       | | `-IntegerLiteral 0x1e09de74018 <col:24> 'int' 0
|   |       | `-GotoStmt 0x1e09de74078 <line:222:17, col:22> 'done' 0x1e09dec9590
|   |       |-BreakStmt 0x1e09de740a8 <line:224:13>
|   |       |-DefaultStmt 0x1e09de741c8 <line:226:9, col:16>
|   |       | `-NullStmt 0x1e09de741c0 <col:16>
|   |       `-ReturnStmt 0x1e09de74210 <line:228:13, col:20>
|   |         `-IntegerLiteral 0x1e09de741e8 <col:20> 'int' 0
|   |-LabelStmt 0x1e09de74388 <line:234:2, col:6> 'done'
|   | `-NullStmt 0x1e09de74380 <col:6>
|   `-ReturnStmt 0x1e09de745f0 <line:238:5, col:34>
|     `-ConditionalOperator 0x1e09de745c0 <col:12, col:34> 'int'
|       |-ParenExpr 0x1e09de74530 <col:12, col:22> 'int'
|       | `-BinaryOperator 0x1e09de74510 <col:13, col:21> 'int' '>'
|       |   |-ImplicitCastExpr 0x1e09de744f8 <col:13> 'int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1e09de744b0 <col:13> 'int' lvalue Var 0x1e09dec69a8 'wrlen' 'int'
|       |   `-IntegerLiteral 0x1e09de744d0 <col:21> 'int' 0
|       |-ImplicitCastExpr 0x1e09de74590 <col:26> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x1e09de74550 <col:26> 'int' lvalue Var 0x1e09dec69a8 'wrlen' 'int'
|       `-ImplicitCastExpr 0x1e09de745a8 <col:34> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x1e09de74570 <col:34> 'int' lvalue Var 0x1e09dec6a28 'ret' 'int'
|-FunctionDecl 0x1e09de74890 <line:242:1, line:265:1> line:242:12 invalid asn1_bio_flush_ex 'int (int *, BIO_ASN1_BUF_CTX *, int *, asn1_bio_state_t)' static
| |-ParmVarDecl 0x1e09de74670 <col:30, col:35> col:35 invalid b 'int *'
| |-ParmVarDecl 0x1e09de746e8 <col:38, col:56> col:56 used ctx 'BIO_ASN1_BUF_CTX *'
| |-ParmVarDecl 0x1e09de74768 <line:243:30, col:44> col:44 invalid cleanup 'int *'
| |-ParmVarDecl 0x1e09de747e0 <col:53, col:70> col:70 used next 'asn1_bio_state_t':'asn1_bio_state_t'
| `-CompoundStmt 0x1e09de774b8 <line:244:1, line:265:1>
|   |-DeclStmt 0x1e09de749e8 <line:245:5, col:12>
|   | `-VarDecl 0x1e09de74980 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x1e09de74b18 <line:247:5, line:248:16>
|   | |-BinaryOperator 0x1e09de74ac0 <line:247:9, col:24> 'int' '<='
|   | | |-ImplicitCastExpr 0x1e09de74aa8 <col:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x1e09de74a50 <col:9, col:14> 'int' lvalue ->ex_len 0x1e09dec05c0
|   | | |   `-ImplicitCastExpr 0x1e09de74a38 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1e09de74a00 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x1e09de746e8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-IntegerLiteral 0x1e09de74a80 <col:24> 'int' 0
|   | `-ReturnStmt 0x1e09de74b08 <line:248:9, col:16>
|   |   `-IntegerLiteral 0x1e09de74ae0 <col:16> 'int' 1
|   |-ForStmt 0x1e09de77438 <line:249:5, line:263:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x1e09de77410 <line:249:14, line:263:5>
|   |   |-IfStmt 0x1e09de74db8 <line:251:9, line:252:13>
|   |   | |-BinaryOperator 0x1e09de74d90 <line:251:13, col:20> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x1e09de74d78 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1e09de74d30 <col:13> 'int' lvalue Var 0x1e09de74980 'ret' 'int'
|   |   | | `-IntegerLiteral 0x1e09de74d50 <col:20> 'int' 0
|   |   | `-BreakStmt 0x1e09de74db0 <line:252:13>
|   |   |-CompoundAssignOperator 0x1e09de74e70 <line:253:9, col:24> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x1e09de74e08 <col:9, col:14> 'int' lvalue ->ex_len 0x1e09dec05c0
|   |   | | `-ImplicitCastExpr 0x1e09de74df0 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1e09de74dd0 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x1e09de746e8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   | `-ImplicitCastExpr 0x1e09de74e58 <col:24> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1e09de74e38 <col:24> 'int' lvalue Var 0x1e09de74980 'ret' 'int'
|   |   `-IfStmt 0x1e09de773e8 <line:254:9, line:262:9> has_else
|   |     |-BinaryOperator 0x1e09de74f48 <line:254:13, col:27> 'int' '>'
|   |     | |-ImplicitCastExpr 0x1e09de74f30 <col:13, col:18> 'int' <LValueToRValue>
|   |     | | `-MemberExpr 0x1e09de74ed8 <col:13, col:18> 'int' lvalue ->ex_len 0x1e09dec05c0
|   |     | |   `-ImplicitCastExpr 0x1e09de74ec0 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x1e09de74ea0 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x1e09de746e8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |     | `-IntegerLiteral 0x1e09de74f08 <col:27> 'int' 0
|   |     |-CompoundAssignOperator 0x1e09de77058 <line:255:13, col:28> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     | |-MemberExpr 0x1e09de76ff0 <col:13, col:18> 'int' lvalue ->ex_pos 0x1e09dec0630
|   |     | | `-ImplicitCastExpr 0x1e09de74f88 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x1e09de74f68 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x1e09de746e8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |     | `-ImplicitCastExpr 0x1e09de77040 <col:28> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1e09de77020 <col:28> 'int' lvalue Var 0x1e09de74980 'ret' 'int'
|   |     `-CompoundStmt 0x1e09de773c0 <line:256:14, line:262:9>
|   |       |-BinaryOperator 0x1e09de772e8 <line:259:13, col:26> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   |       | |-MemberExpr 0x1e09de77268 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x1e09dec5010
|   |       | | `-ImplicitCastExpr 0x1e09de77250 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1e09de77230 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x1e09de746e8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-ImplicitCastExpr 0x1e09de772d0 <col:26> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1e09de77298 <col:26> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ParmVar 0x1e09de747e0 'next' 'asn1_bio_state_t':'asn1_bio_state_t'
|   |       |-BinaryOperator 0x1e09de77398 <line:260:13, col:27> 'int' '='
|   |       | |-MemberExpr 0x1e09de77340 <col:13, col:18> 'int' lvalue ->ex_pos 0x1e09dec0630
|   |       | | `-ImplicitCastExpr 0x1e09de77328 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1e09de77308 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x1e09de746e8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-IntegerLiteral 0x1e09de77370 <col:27> 'int' 0
|   |       `-BreakStmt 0x1e09de773b8 <line:261:13>
|   `-ReturnStmt 0x1e09de774a8 <line:264:5, col:12>
|     `-ImplicitCastExpr 0x1e09de77490 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1e09de77470 <col:12> 'int' lvalue Var 0x1e09de74980 'ret' 'int'
|-FunctionDecl 0x1e09de777a0 <line:267:1, line:281:1> line:267:12 invalid asn1_bio_setup_ex 'int (int *, BIO_ASN1_BUF_CTX *, int *, asn1_bio_state_t, asn1_bio_state_t)' static
| |-ParmVarDecl 0x1e09de77500 <col:30, col:35> col:35 invalid b 'int *'
| |-ParmVarDecl 0x1e09de77578 <col:38, col:56> col:56 used ctx 'BIO_ASN1_BUF_CTX *'
| |-ParmVarDecl 0x1e09de775f8 <line:268:30, col:44> col:44 invalid setup 'int *'
| |-ParmVarDecl 0x1e09de77670 <line:269:30, col:47> col:47 used ex_state 'asn1_bio_state_t':'asn1_bio_state_t'
| |-ParmVarDecl 0x1e09de776e8 <line:270:30, col:47> col:47 used other_state 'asn1_bio_state_t':'asn1_bio_state_t'
| `-CompoundStmt 0x1e09de77d90 <line:271:1, line:281:1>
|   |-IfStmt 0x1e09de77aa0 <line:272:5, line:275:5>
|   | |-OpaqueValueExpr 0x1e09de77a88 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1e09de77a70 <line:272:71, line:275:5>
|   |   `-ReturnStmt 0x1e09de77a60 <line:274:9, col:16>
|   |     `-IntegerLiteral 0x1e09de77a38 <col:16> 'int' 0
|   |-IfStmt 0x1e09de77d30 <line:276:5, line:279:22> has_else
|   | |-BinaryOperator 0x1e09de77b60 <line:276:9, col:23> 'int' '>'
|   | | |-ImplicitCastExpr 0x1e09de77b48 <col:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x1e09de77af0 <col:9, col:14> 'int' lvalue ->ex_len 0x1e09dec05c0
|   | | |   `-ImplicitCastExpr 0x1e09de77ad8 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1e09de77ab8 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x1e09de77578 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-IntegerLiteral 0x1e09de77b20 <col:23> 'int' 0
|   | |-BinaryOperator 0x1e09de77c38 <line:277:9, col:22> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   | | |-MemberExpr 0x1e09de77bb8 <col:9, col:14> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x1e09dec5010
|   | | | `-ImplicitCastExpr 0x1e09de77ba0 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1e09de77b80 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x1e09de77578 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-ImplicitCastExpr 0x1e09de77c20 <col:22> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e09de77be8 <col:22> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ParmVar 0x1e09de77670 'ex_state' 'asn1_bio_state_t':'asn1_bio_state_t'
|   | `-BinaryOperator 0x1e09de77d10 <line:279:9, col:22> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   |   |-MemberExpr 0x1e09de77c90 <col:9, col:14> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x1e09dec5010
|   |   | `-ImplicitCastExpr 0x1e09de77c78 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1e09de77c58 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x1e09de77578 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   `-ImplicitCastExpr 0x1e09de77cf8 <col:22> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   |     `-DeclRefExpr 0x1e09de77cc0 <col:22> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ParmVar 0x1e09de776e8 'other_state' 'asn1_bio_state_t':'asn1_bio_state_t'
|   `-ReturnStmt 0x1e09de77d80 <line:280:5, col:12>
|     `-IntegerLiteral 0x1e09de77d58 <col:12> 'int' 1
|-FunctionDecl 0x1e09de74fd0 <line:283:1, line:289:1> line:283:12 invalid asn1_bio_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1e09de77dd0 <col:26, col:31> col:31 invalid b 'int *'
| |-ParmVarDecl 0x1e09de77e50 <col:34, col:40> col:40 used in 'char *'
| |-ParmVarDecl 0x1e09de77ed0 <col:44, col:48> col:48 used inl 'int'
| `-CompoundStmt 0x1e09de75330 <line:284:1, line:289:1>
|   `-IfStmt 0x1e09de75198 <line:286:5, line:287:16>
|     |-OpaqueValueExpr 0x1e09de75180 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x1e09de75170 <col:9, col:16>
|       `-IntegerLiteral 0x1e09de75148 <col:16> 'int' 0
|-FunctionDecl 0x1e09de75480 <line:291:1, line:294:1> line:291:12 invalid asn1_bio_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x1e09de75360 <col:26, col:31> col:31 invalid b 'int *'
| |-ParmVarDecl 0x1e09de753e0 <col:34, col:46> col:46 used str 'const char *'
| `-CompoundStmt 0x1e09de75660 <line:292:1, line:294:1>
|-FunctionDecl 0x1e09de75830 <line:296:1, line:302:1> line:296:12 invalid asn1_bio_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1e09de75688 <col:26, col:31> col:31 invalid b 'int *'
| |-ParmVarDecl 0x1e09de75708 <col:34, col:40> col:40 used str 'char *'
| |-ParmVarDecl 0x1e09de75788 <col:45, col:49> col:49 used size 'int'
| `-CompoundStmt 0x1e09de75b90 <line:297:1, line:302:1>
|   `-IfStmt 0x1e09de759f8 <line:299:5, line:300:16>
|     |-OpaqueValueExpr 0x1e09de759e0 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x1e09de759d0 <col:9, col:16>
|       `-IntegerLiteral 0x1e09de759a8 <col:16> 'int' 0
|-FunctionDecl 0x1e09de75d68 <line:304:1, line:310:1> line:304:13 invalid asn1_bio_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x1e09de75bc0 <col:36, col:41> col:41 invalid b 'int *'
| |-ParmVarDecl 0x1e09de75c40 <col:44, col:48> col:48 used cmd 'int'
| |-ParmVarDecl 0x1e09de75cc0 <col:53, col:66> col:66 invalid fp 'int *'
| `-CompoundStmt 0x1e09de730d0 <line:305:1, line:310:1>
|   `-IfStmt 0x1e09de75f48 <line:307:5, line:308:16>
|     |-OpaqueValueExpr 0x1e09de75f30 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x1e09de75f20 <col:9, col:16>
|       `-ImplicitCastExpr 0x1e09de75f08 <col:16> 'long' <IntegralCast>
|         `-IntegerLiteral 0x1e09de75ee0 <col:16> 'int' 0
|-FunctionDecl 0x1e09de73330 <line:312:1, line:390:1> line:312:13 invalid asn1_bio_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x1e09de73100 <col:27, col:32> col:32 invalid b 'int *'
| |-ParmVarDecl 0x1e09de73180 <col:35, col:39> col:39 used cmd 'int'
| |-ParmVarDecl 0x1e09de73200 <col:44, col:49> col:49 used arg1 'long'
| |-ParmVarDecl 0x1e09de73280 <col:55, col:61> col:61 used arg2 'void *'
| `-CompoundStmt 0x1e09de72c50 <line:313:1, line:390:1>
|   |-DeclStmt 0x1e09de73480 <line:314:5, col:26>
|   | `-VarDecl 0x1e09de73418 <col:5, col:23> col:23 used ctx 'BIO_ASN1_BUF_CTX *'
|   |-DeclStmt 0x1e09de73590 <line:315:5, col:31>
|   | `-VarDecl 0x1e09de73528 <col:5, col:24> col:24 used ex_func 'BIO_ASN1_EX_FUNCS *'
|   |-DeclStmt 0x1e09de73668 <line:316:5, col:17>
|   | `-VarDecl 0x1e09de735c0 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x1e09de73650 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1e09de73628 <col:16> 'int' 1
|   |-IfStmt 0x1e09de73820 <line:320:5, line:321:16>
|   | |-BinaryOperator 0x1e09de737b0 <line:320:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1e09de73780 <.//openssl//file_jk/before\crypto\asn1\bio_asn1.c:320:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1e09de736d8 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09de73418 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-ImplicitCastExpr 0x1e09de73798 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'BIO_ASN1_BUF_CTX *' <BitCast>
|   | |   `-ParenExpr 0x1e09de73760 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1e09de73738 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1e09de736f8 <col:26> 'int' 0
|   | `-ReturnStmt 0x1e09de73810 <.//openssl//file_jk/before\crypto\asn1\bio_asn1.c:321:9, col:16>
|   |   `-ImplicitCastExpr 0x1e09de737f8 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1e09de737d0 <col:16> 'int' 0
|   |-SwitchStmt 0x1e09de738a8 <line:323:5, line:387:5>
|   | |-ImplicitCastExpr 0x1e09de73890 <line:323:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1e09de73858 <col:13> 'int' lvalue ParmVar 0x1e09de73180 'cmd' 'int'
|   | `-CompoundStmt 0x1e09de72b70 <col:18, line:387:5>
|   |   |-BinaryOperator 0x1e09de73968 <line:326:9, col:19> 'BIO_ASN1_EX_FUNCS *' '='
|   |   | |-DeclRefExpr 0x1e09de738c8 <col:9> 'BIO_ASN1_EX_FUNCS *' lvalue Var 0x1e09de73528 'ex_func' 'BIO_ASN1_EX_FUNCS *'
|   |   | `-ImplicitCastExpr 0x1e09de73950 <col:19> 'BIO_ASN1_EX_FUNCS *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x1e09de73938 <col:19> 'void *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1e09de73900 <col:19> 'void *' lvalue ParmVar 0x1e09de73280 'arg2' 'void *'
|   |   |-BreakStmt 0x1e09de73a68 <line:329:9>
|   |   |-BinaryOperator 0x1e09de73ae0 <line:332:9, col:19> 'BIO_ASN1_EX_FUNCS *' '='
|   |   | |-DeclRefExpr 0x1e09de73a70 <col:9> 'BIO_ASN1_EX_FUNCS *' lvalue Var 0x1e09de73528 'ex_func' 'BIO_ASN1_EX_FUNCS *'
|   |   | `-ImplicitCastExpr 0x1e09de73ac8 <col:19> 'BIO_ASN1_EX_FUNCS *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x1e09de73ab0 <col:19> 'void *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1e09de73a90 <col:19> 'void *' lvalue ParmVar 0x1e09de73280 'arg2' 'void *'
|   |   |-BreakStmt 0x1e09de73be0 <line:335:9>
|   |   |-BinaryOperator 0x1e09de73c58 <line:338:9, col:19> 'BIO_ASN1_EX_FUNCS *' '='
|   |   | |-DeclRefExpr 0x1e09de73be8 <col:9> 'BIO_ASN1_EX_FUNCS *' lvalue Var 0x1e09de73528 'ex_func' 'BIO_ASN1_EX_FUNCS *'
|   |   | `-ImplicitCastExpr 0x1e09de73c40 <col:19> 'BIO_ASN1_EX_FUNCS *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x1e09de73c28 <col:19> 'void *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1e09de73c08 <col:19> 'void *' lvalue ParmVar 0x1e09de73280 'arg2' 'void *'
|   |   |-BreakStmt 0x1e09de73d58 <line:341:9>
|   |   |-BinaryOperator 0x1e09de73dd0 <line:344:9, col:19> 'BIO_ASN1_EX_FUNCS *' '='
|   |   | |-DeclRefExpr 0x1e09de73d60 <col:9> 'BIO_ASN1_EX_FUNCS *' lvalue Var 0x1e09de73528 'ex_func' 'BIO_ASN1_EX_FUNCS *'
|   |   | `-ImplicitCastExpr 0x1e09de73db8 <col:19> 'BIO_ASN1_EX_FUNCS *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x1e09de73da0 <col:19> 'void *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1e09de73d80 <col:19> 'void *' lvalue ParmVar 0x1e09de73280 'arg2' 'void *'
|   |   |-BreakStmt 0x1e09de73ed0 <line:347:9>
|   |   |-BinaryOperator 0x1e09de73f78 <line:350:9, col:23> 'void *' '='
|   |   | |-MemberExpr 0x1e09de73f10 <col:9, col:14> 'void *' lvalue ->ex_arg 0x1e09dec06a0
|   |   | | `-ImplicitCastExpr 0x1e09de73ef8 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1e09de73ed8 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09de73418 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   | `-ImplicitCastExpr 0x1e09de73f60 <col:23> 'void *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1e09de73f40 <col:23> 'void *' lvalue ParmVar 0x1e09de73280 'arg2' 'void *'
|   |   |-BreakStmt 0x1e09de73f98 <line:351:9>
|   |   |-BinaryOperator 0x1e09de720b0 <line:354:9, col:31> 'void *' '='
|   |   | |-UnaryOperator 0x1e09de72018 <col:9, col:19> 'void *' lvalue prefix '*' cannot overflow
|   |   | | `-CStyleCastExpr 0x1e09de71ff0 <col:10, col:19> 'void **' <BitCast>
|   |   | |   `-ImplicitCastExpr 0x1e09de71fd8 <col:19> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   | |     `-DeclRefExpr 0x1e09de71fa0 <col:19> 'void *' lvalue ParmVar 0x1e09de73280 'arg2' 'void *'
|   |   | `-ImplicitCastExpr 0x1e09de72098 <col:26, col:31> 'void *' <LValueToRValue>
|   |   |   `-MemberExpr 0x1e09de72068 <col:26, col:31> 'void *' lvalue ->ex_arg 0x1e09dec06a0
|   |   |     `-ImplicitCastExpr 0x1e09de72050 <col:26> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1e09de72030 <col:26> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09de73418 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   |-BreakStmt 0x1e09de720d0 <line:355:9>
|   |   |-IfStmt 0x1e09de721c8 <line:358:9, line:359:20>
|   |   | |-OpaqueValueExpr 0x1e09de721b0 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x1e09de721a0 <col:13, col:20>
|   |   |   `-ImplicitCastExpr 0x1e09de72188 <col:20> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x1e09de72160 <col:20> 'int' 0
|   |   |-IfStmt 0x1e09de723e8 <line:362:9, line:366:9>
|   |   | |-BinaryOperator 0x1e09de72298 <line:362:13, col:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1e09de72280 <col:13, col:18> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x1e09de72268 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   |   | | |   `-MemberExpr 0x1e09de72218 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x1e09dec5010
|   |   | | |     `-ImplicitCastExpr 0x1e09de72200 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x1e09de721e0 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09de73418 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   | | `-DeclRefExpr 0x1e09de72248 <col:27> 'int' EnumConstant 0x1e09dec4a40 'ASN1_STATE_HEADER' 'int'
|   |   | `-CompoundStmt 0x1e09de723d0 <col:46, line:366:9>
|   |   |   `-IfStmt 0x1e09de723b8 <line:363:13, line:365:24>
|   |   |     |-OpaqueValueExpr 0x1e09de723a0 <<invalid sloc>> '_Bool'
|   |   |     `-ReturnStmt 0x1e09de72390 <col:17, col:24>
|   |   |       `-ImplicitCastExpr 0x1e09de72378 <col:24> 'long' <IntegralCast>
|   |   |         `-IntegerLiteral 0x1e09de72350 <col:24> 'int' 0
|   |   |-IfStmt 0x1e09de72698 <line:368:9, line:373:9>
|   |   | |-BinaryOperator 0x1e09de724b8 <line:368:13, col:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1e09de724a0 <col:13, col:18> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x1e09de72488 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   |   | | |   `-MemberExpr 0x1e09de72438 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x1e09dec5010
|   |   | | |     `-ImplicitCastExpr 0x1e09de72420 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x1e09de72400 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09de73418 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   | | `-DeclRefExpr 0x1e09de72468 <col:27> 'int' EnumConstant 0x1e09dec4b48 'ASN1_STATE_POST_COPY' 'int'
|   |   | `-CompoundStmt 0x1e09de72680 <col:49, line:373:9>
|   |   |   `-IfStmt 0x1e09de72668 <line:371:13, line:372:24>
|   |   |     |-BinaryOperator 0x1e09de72600 <line:371:17, col:24> 'int' '<='
|   |   |     | |-ImplicitCastExpr 0x1e09de725d0 <col:17> 'long' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x1e09de72588 <col:17> 'long' lvalue Var 0x1e09de735c0 'ret' 'long'
|   |   |     | `-ImplicitCastExpr 0x1e09de725e8 <col:24> 'long' <IntegralCast>
|   |   |     |   `-IntegerLiteral 0x1e09de725a8 <col:24> 'int' 0
|   |   |     `-ReturnStmt 0x1e09de72658 <line:372:17, col:24>
|   |   |       `-ImplicitCastExpr 0x1e09de72640 <col:24> 'long' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1e09de72620 <col:24> 'long' lvalue Var 0x1e09de735c0 'ret' 'long'
|   |   |-IfStmt 0x1e09de729a0 <line:375:9, line:380:9> has_else
|   |   | |-BinaryOperator 0x1e09de72768 <line:375:13, col:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1e09de72750 <col:13, col:18> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x1e09de72738 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   |   | | |   `-MemberExpr 0x1e09de726e8 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x1e09dec5010
|   |   | | |     `-ImplicitCastExpr 0x1e09de726d0 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x1e09de726b0 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x1e09de73418 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   | | `-DeclRefExpr 0x1e09de72718 <col:27> 'int' EnumConstant 0x1e09dec4ba0 'ASN1_STATE_DONE' 'int'
|   |   | |-NullStmt 0x1e09de72998 <line:376:13>
|   |   | `-CompoundStmt 0x1e09de72980 <line:377:14, line:380:9>
|   |   |   `-ReturnStmt 0x1e09de72970 <line:379:13, col:20>
|   |   |     `-ImplicitCastExpr 0x1e09de72958 <col:20> 'long' <IntegralCast>
|   |   |       `-IntegerLiteral 0x1e09de72930 <col:20> 'int' 0
|   |   `-DefaultStmt 0x1e09de72ad0 <line:382:5, line:384:20>
|   |     `-IfStmt 0x1e09de72ab8 <line:383:9, line:384:20>
|   |       |-OpaqueValueExpr 0x1e09de72aa0 <<invalid sloc>> '_Bool'
|   |       `-ReturnStmt 0x1e09de72a90 <col:13, col:20>
|   |         `-ImplicitCastExpr 0x1e09de72a78 <col:20> 'long' <IntegralCast>
|   |           `-IntegerLiteral 0x1e09de72a50 <col:20> 'int' 0
|   `-ReturnStmt 0x1e09de72c40 <line:389:5, col:12>
|     `-ImplicitCastExpr 0x1e09de72c28 <col:12> 'long' <LValueToRValue>
|       `-DeclRefExpr 0x1e09de72c08 <col:12> 'long' lvalue Var 0x1e09de735c0 'ret' 'long'
|-FunctionDecl 0x1e09de6ff80 <line:392:1, line:399:1> line:392:12 invalid asn1_bio_set_ex 'int (int *, int, int *, int *)' static
| |-ParmVarDecl 0x1e09de72ca8 <col:28, col:33> col:33 invalid b 'int *'
| |-ParmVarDecl 0x1e09de72d28 <col:36, col:40> col:40 used cmd 'int'
| |-ParmVarDecl 0x1e09de72da8 <line:393:28, col:42> col:42 invalid ex_func 'int *'
| |-ParmVarDecl 0x1e09de72e28 <col:51, col:65> col:65 invalid ex_free_func 'int *'
| `-CompoundStmt 0x1e09de701f8 <line:394:1, line:399:1>
|   `-DeclStmt 0x1e09de700d0 <line:395:5, col:28>
|     `-VarDecl 0x1e09de70068 <col:5, col:23> col:23 used extmp 'BIO_ASN1_EX_FUNCS':'struct BIO_ASN1_EX_FUNCS_st'
|-FunctionDecl 0x1e09de704e0 <line:401:1, line:413:1> line:401:12 invalid asn1_bio_get_ex 'int (int *, int, int **, int **)' static
| |-ParmVarDecl 0x1e09de70228 <col:28, col:33> col:33 invalid b 'int *'
| |-ParmVarDecl 0x1e09de702a8 <col:36, col:40> col:40 used cmd 'int'
| |-ParmVarDecl 0x1e09de70358 <line:402:28, col:43> col:43 invalid ex_func 'int **'
| |-ParmVarDecl 0x1e09de703e0 <line:403:28, col:43> col:43 invalid ex_free_func 'int **'
| `-CompoundStmt 0x1e09de70918 <line:404:1, line:413:1>
|   |-DeclStmt 0x1e09de70630 <line:405:5, col:28>
|   | `-VarDecl 0x1e09de705c8 <col:5, col:23> col:23 used extmp 'BIO_ASN1_EX_FUNCS':'struct BIO_ASN1_EX_FUNCS_st'
|   |-DeclStmt 0x1e09de706c8 <line:406:5, col:12>
|   | `-VarDecl 0x1e09de70660 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x1e09de708b8 <line:408:5, line:411:5>
|   | |-BinaryOperator 0x1e09de70848 <line:408:9, col:15> 'int' '>'
|   | | |-ImplicitCastExpr 0x1e09de70830 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1e09de707e8 <col:9> 'int' lvalue Var 0x1e09de70660 'ret' 'int'
|   | | `-IntegerLiteral 0x1e09de70808 <col:15> 'int' 0
|   | `-CompoundStmt 0x1e09de708a8 <col:18, line:411:5>
|   `-ReturnStmt 0x1e09de70908 <line:412:5, col:12>
|     `-ImplicitCastExpr 0x1e09de708f0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1e09de708d0 <col:12> 'int' lvalue Var 0x1e09de70660 'ret' 'int'
|-FunctionDecl 0x1e09de70b50 <line:415:1, line:419:1> line:415:5 invalid BIO_asn1_set_prefix 'int (int *, int *, int *)'
| |-ParmVarDecl 0x1e09de70960 <col:25, col:30> col:30 invalid b 'int *'
| |-ParmVarDecl 0x1e09de709e0 <col:33, col:47> col:47 invalid prefix 'int *'
| |-ParmVarDecl 0x1e09de70a60 <line:416:25, col:39> col:39 invalid prefix_free 'int *'
| `-CompoundStmt 0x1e09de70c20 <line:417:1, line:419:1>
|-FunctionDecl 0x1e09de70e40 <line:421:1, line:425:1> line:421:5 invalid BIO_asn1_get_prefix 'int (int *, int **, int **)'
| |-ParmVarDecl 0x1e09de70c48 <col:25, col:30> col:30 invalid b 'int *'
| |-ParmVarDecl 0x1e09de70cd0 <col:33, col:48> col:48 invalid pprefix 'int **'
| |-ParmVarDecl 0x1e09de70d58 <line:422:25, col:40> col:40 invalid pprefix_free 'int **'
| `-CompoundStmt 0x1e09de70f10 <line:423:1, line:425:1>
|-FunctionDecl 0x1e09de781a8 <line:427:1, line:431:1> line:427:5 invalid BIO_asn1_set_suffix 'int (int *, int *, int *)'
| |-ParmVarDecl 0x1e09de78000 <col:25, col:30> col:30 invalid b 'int *'
| |-ParmVarDecl 0x1e09de78080 <col:33, col:47> col:47 invalid suffix 'int *'
| |-ParmVarDecl 0x1e09de78100 <line:428:25, col:39> col:39 invalid suffix_free 'int *'
| `-CompoundStmt 0x1e09de78278 <line:429:1, line:431:1>
`-FunctionDecl 0x1e09de78458 <line:433:1, line:437:1> line:433:5 invalid BIO_asn1_get_suffix 'int (int *, int **, int **)'
  |-ParmVarDecl 0x1e09de782a0 <col:25, col:30> col:30 invalid b 'int *'
  |-ParmVarDecl 0x1e09de78328 <col:33, col:48> col:48 invalid psuffix 'int **'
  |-ParmVarDecl 0x1e09de783b0 <line:434:25, col:40> col:40 invalid psuffix_free 'int **'
  `-CompoundStmt 0x1e09de78528 <line:435:1, line:437:1>
