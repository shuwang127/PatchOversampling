TranslationUnitDecl 0x21809eb22b8 <<invalid sloc>> <invalid sloc> <undeserialized declarations>
|-TypedefDecl 0x21809eb2b50 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x21809eb2850 '__int128'
|-TypedefDecl 0x21809eb2bc0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x21809eb2870 'unsigned __int128'
|-TypedefDecl 0x21809eb2ef8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x21809eb2cb0 'struct __NSConstantString_tag'
|   `-Record 0x21809eb2c18 '__NSConstantString_tag'
|-TypedefDecl 0x21809eb2f68 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x21809eb2490 'unsigned long long'
|-TypedefDecl 0x21809eb3000 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x21809eb2fc0 'char *'
|   `-BuiltinType 0x21809eb2350 'char'
|-TypedefDecl 0x21809eb3070 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x21809eb2fc0 'char *'
|   `-BuiltinType 0x21809eb2350 'char'
|-TypedefDecl 0x21809eb30e0 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:35:1, col:26> col:26 ptrdiff_t 'long long'
| `-BuiltinType 0x21809eb23f0 'long long'
|-TypedefDecl 0x21809eb3150 prev 0x21809eb2f68 <line:46:1, col:23> col:23 size_t 'unsigned long long'
| `-BuiltinType 0x21809eb2490 'unsigned long long'
|-TypedefDecl 0x21809eb31d8 <line:60:1, col:23> col:23 rsize_t 'unsigned long long'
| `-BuiltinType 0x21809eb2490 'unsigned long long'
|-TypedefDecl 0x21809eb3248 <line:74:1, col:24> col:24 wchar_t 'unsigned short'
| `-BuiltinType 0x21809eb2430 'unsigned short'
|-ImportDecl 0x2180b7d4bd0 <line:102:1> col:1 implicit _Builtin_stddef_max_align_t
|-TypedefDecl 0x2180b7d4c78 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x21809eb2490 'unsigned long long'
|-TypedefDecl 0x2180b7d4ce8 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x21809eb2fc0 'char *'
|   `-BuiltinType 0x21809eb2350 'char'
|-FunctionDecl 0x2180b7d4f30 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2180b7d4fd0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x2180b7d5040 <col:21> Implicit
|-FunctionDecl 0x2180b7d5098 prev 0x2180b7d4f30 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2180b7d4dc8 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x2180b7d5188 <col:21> Inherited Implicit
|-TypedefDecl 0x2180b7d5240 prev 0x2180b7d51b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x21809eb2490 'unsigned long long'
|-TypedefDecl 0x2180b7d52d0 prev 0x21809eb31d8 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x2180b7d52a0 'size_t' sugar
|   |-Typedef 0x2180b7d5240 'size_t'
|   `-BuiltinType 0x21809eb2490 'unsigned long long'
|-TypedefDecl 0x2180b7d5358 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x21809eb23f0 'long long'
|-TypedefDecl 0x2180b7d53c8 prev 0x21809eb30e0 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x21809eb23f0 'long long'
|-TypedefDecl 0x2180b7d5450 prev 0x21809eb3248 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x21809eb2430 'unsigned short'
|-TypedefDecl 0x2180b7d54d8 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x21809eb2430 'unsigned short'
|-TypedefDecl 0x2180b7d5548 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x21809eb2430 'unsigned short'
|-TypedefDecl 0x2180b7d55b8 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x21809eb23b0 'int'
|-TypedefDecl 0x2180b7d5628 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x21809eb23d0 'long'
|-TypedefDecl 0x2180b7d5698 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x21809eb23f0 'long long'
|-TypedefDecl 0x2180b7d5720 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x2180b7d56f0 '__time64_t' sugar
|   |-Typedef 0x2180b7d5698 '__time64_t'
|   `-BuiltinType 0x21809eb23f0 'long long'
|-FunctionDecl 0x2180b7d5898 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x2180b7d5ab8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x2180b96c950 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x2180b96c4e8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x2180b96c560 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x2180b96c5d8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x2180b96c658 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x2180b96c6f0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x2180b96ca30 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x2180b96caf0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x2180b96cc60 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x2180b96cc10 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x2180b96cbb0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x2180b96cad0 'struct threadlocaleinfostruct'
|       `-Record 0x2180b974708 'threadlocaleinfostruct'
|-TypedefDecl 0x2180b96cd70 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x2180b96cd20 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x2180b96ccc0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x2180b96cb90 'struct threadmbcinfostruct'
|       `-Record 0x2180b96caf0 'threadmbcinfostruct'
|-RecordDecl 0x2180b96cdc8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x2180b96ce80 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x2180b96cf40 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2180b96cfd0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x2180b96d060 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x2180b96d118 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x2180b96d0c0 'struct localeinfo_struct' sugar
|   `-RecordType 0x2180b96cf20 'struct localeinfo_struct'
|     `-Record 0x2180b96ce80 'localeinfo_struct'
|-TypedefDecl 0x2180b96d1f0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x2180b96d1a0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x2180b96d0c0 'struct localeinfo_struct' sugar
|     `-RecordType 0x2180b96cf20 'struct localeinfo_struct'
|       `-Record 0x2180b96ce80 'localeinfo_struct'
|-RecordDecl 0x2180b96d268 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x2180b96d320 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2180b96d398 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x2180b96d458 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x2180b974570 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x2180b9745e0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x2180b974698 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x2180b974640 'struct localerefcount' sugar
|   `-RecordType 0x2180b96d300 'struct localerefcount'
|     `-Record 0x2180b96d268 'localerefcount'
|-RecordDecl 0x2180b974708 prev 0x2180b96ca30 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x2180b974788 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2180b974800 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x2180b974870 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x2180b9748e0 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x2180b974950 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x2180b974b18 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x2180b974b88 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x2180b974bf8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x2180b974c68 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x2180b974cd8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x2180b974d48 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x2180b974da0 parent 0x21809eb22b8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x2180b974f30 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x2180b974fa0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x2180b975010 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x2180b975080 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x2180b975120 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x2180b975190 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x2180b9752a0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x2180b9753d8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x2180b975488 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x2180b975430 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x2180b96cad0 'struct threadlocaleinfostruct'
|     `-Record 0x2180b974708 'threadlocaleinfostruct'
|-FunctionDecl 0x2180b979930 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x2180b979580 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x2180b979630 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x2180b9796b0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x2180b979728 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2180b979cf8 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x2180b979d98 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2180b979e00 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x2180b979e68 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2180b979ee8 prev 0x2180b979cf8 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x2180b979a20 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x2180b979aa0 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x2180b979b18 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2180b97a2a8 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x2180b979fd0 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x2180b97a050 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x2180b97a0c8 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2180b973730 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x2180b97a390 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x2180b97a410 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x2180b97a488 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2180b973520 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2180b973a38 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2180b973ad8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2180b973b40 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2180b973ba8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2180b973c28 prev 0x2180b973a38 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x2180b973820 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x2180b9738a0 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x2180b973918 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2180b973fe8 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2180b974088 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2180b9740f0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2180b974158 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2180b9741d8 prev 0x2180b973fe8 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x2180b973d10 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x2180b973d90 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x2180b973e08 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2180b97d728 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x2180b9742e8 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x2180b974380 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2180b974400 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x2180b974478 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2180b97dae8 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x2180b97db88 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2180b97dbf0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x2180b97dc58 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2180b97dcd8 prev 0x2180b97dae8 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x2180b97d818 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x2180b97d898 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x2180b97d910 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2180b97e158 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x2180b97e1f8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2180b97e260 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2180b97e2c8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x2180b97e330 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2180b97e3b8 prev 0x2180b97e158 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x2180b97dea0 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x2180b97df20 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x2180b97dfa0 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x2180b97e018 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2180b97e478 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x2180b9818d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x2180b9816b8 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x2180b981738 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x2180b9817b0 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2180b981988 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x2180b981d80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x2180b981ab0 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x2180b981b28 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2180b981ba8 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x2180b982150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x2180b981f60 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x2180b981fe0 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x2180b982200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2180b982650 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x2180b982348 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x2180b9823c0 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2180b982440 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x2180b982a20 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x2180b982ac0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x2180b982b28 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2180b982ba0 prev 0x2180b982a20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x2180b982830 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x2180b9828b0 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x2180b982c50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2180b982fa8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x2180b982d98 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x2180b982e10 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2180b982e90 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x2180b9832d0 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x2180b983370 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x2180b9833d8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2180b983450 prev 0x2180b9832d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x2180b983150 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x2180b9831d0 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x2180b983500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2180b97b7f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x2180b97b890 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2180b97b8f8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2180b97b970 prev 0x2180b97b7f0 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x2180b97b600 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x2180b97b680 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x2180b97bbc0 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x2180b97bc60 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2180b97bcd0 prev 0x2180b97bbc0 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x2180b97ba50 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x2180b97bfc8 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x2180b97bda8 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x2180b97be20 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2180b97c218 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x2180b97c0a8 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x2180b97c120 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x2180b97c548 <line:131:1, line:133:1>
|   `-ReturnStmt 0x2180b97c538 <line:132:5, col:51>
|     `-ConditionalOperator 0x2180b97c508 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x2180b97c378 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x2180b97c358 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x2180b97c328 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x2180b97c2e0 <col:13> 'const char *' lvalue ParmVar 0x2180b97c0a8 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x2180b97c340 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x2180b97c300 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x2180b97c4f0 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x2180b97c398 <col:24> 'int' 0
|       `-CallExpr 0x2180b97c490 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x2180b97c478 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x2180b97c3c0 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x2180b97bfc8 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x2180b97c4c0 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x2180b97c3e0 <col:36> 'const char *' lvalue ParmVar 0x2180b97c0a8 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x2180b97c4d8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x2180b97c400 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x2180b97c120 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x2180b97f888 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x2180b97f5e0 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x2180b97f658 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2180b97f6d8 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x2180b97f750 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2180b97fb90 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2180b97fc30 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2180b97fc98 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2180b97fd00 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2180b97fd80 prev 0x2180b97fb90 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x2180b97f978 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x2180b97f9f8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x2180b97fa70 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2180b97ffb8 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x2180b97fe68 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x2180b980280 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x2180b980320 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2180b980388 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2180b980400 prev 0x2180b980280 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x2180b980090 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x2180b980110 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x2180b97e650 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2180b9804e0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x2180b980560 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x2180b97e8b0 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2180b97e730 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x2180b97e7b0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x2180b97ec68 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x2180b97e990 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x2180b97ea10 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x2180b97ea88 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2180b97eed0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2180b97ed50 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x2180b97edd0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x2180b97f1c8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x2180b97efb0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x2180b97f030 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x2180b97f0a8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2180b97f430 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2180b97f2b0 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x2180b97f330 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x2180b9837b8 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x2180b97f510 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x2180b983620 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x2180b983698 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2180b983b78 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2180b9838a0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2180b983920 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x2180b983998 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2180b983fe0 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2180b983c60 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2180b983ce0 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x2180b983d58 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2180b983dd0 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2180b9842e8 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2180b9840d0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2180b984150 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x2180b9841c8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2180b980668 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2180b9843d0 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x2180b984450 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x2180b9844c8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2180b984540 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2180b980978 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x2180b980a18 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2180b980a80 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2180b980af8 prev 0x2180b980978 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x2180b980758 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x2180b9807d8 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x2180b980db0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x2180b980cd0 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x2180b980e58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2180b981230 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x2180b980fa0 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x2180b981018 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2180b981098 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x2180b981548 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x2180b97c5b0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2180b97c620 prev 0x2180b981548 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x2180b981410 <col:90> col:93 'int'
| `-DeprecatedAttr 0x2180b97c6c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2180b97ca20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x2180b97c810 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x2180b97c888 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2180b97c908 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x2180b97cd28 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x2180b97cb08 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x2180b97cb80 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2180b97d018 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2180b97cec8 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x2180b97d0c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2180b97d4d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2180b97d208 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x2180b97d280 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2180b97d2f8 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2180b9fb0b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x2180b9fae88 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x2180b9faf00 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2180b9fb160 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2180b9fb618 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x2180b9fb2a8 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x2180b9fb320 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2180b9fb3a0 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x2180b9fb418 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2180b9fba98 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2180b9fbb38 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2180b9fbba0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2180b9fbc08 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2180b9fbc88 prev 0x2180b9fba98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2180b9fb7c8 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x2180b9fb848 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x2180b9fb8c0 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2180b9fbd40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2180b9f90a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2180b9f9148 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2180b9f91b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2180b9f9218 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2180b9f9298 prev 0x2180b9f90a8 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2180b9f8e90 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x2180b9f8f10 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x2180b9f8f88 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2180b9f9598 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2180b9f9380 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x2180b9f9400 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x2180b9f9478 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2180b9f9930 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2180b9f9680 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2180b9f9700 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x2180b9f9778 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2180b9f97f0 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2180b9f9cc8 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x2180b9f9a20 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x2180b9f9a98 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2180b9f9b18 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x2180b9f9b90 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2180b9fe0e8 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2180b9fe188 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2180b9fe1f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2180b9fe258 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2180b9fe2d8 prev 0x2180b9fe0e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2180b9fded0 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x2180b9fdf50 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x2180b9fdfc8 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2180b9fe390 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2180b9fe848 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x2180b9fe4d8 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x2180b9fe550 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2180b9fe5d0 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x2180b9fe648 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2180b9fecc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x2180b9fe9f8 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x2180b9fea78 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x2180b9feaf0 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2180b9fed80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2180b9fc0b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x2180b9fc150 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2180b9fc1b8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2180b9fc230 prev 0x2180b9fc0b0 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x2180b9fbec0 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x2180b9fbf40 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x2180b9fc490 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x2180b9fc530 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2180b9fc598 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2180b9fc610 prev 0x2180b9fc490 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x2180b9fc310 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x2180b9fc390 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x2180b9fc7d0 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x2180b9fc6f0 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x2180b9fca20 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x2180b9fcac0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2180b9fcb28 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2180b9fcba0 prev 0x2180b9fca20 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x2180b9fc8a8 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x2180b9fc928 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x2180b9fce10 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x2180b9fceb0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2180b9fcf18 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2180b9fcf90 prev 0x2180b9fce10 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x2180b9fcc80 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x2180b9fcd00 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x2180b9fd2b0 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x2180b9fd350 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x2180b9fd3b8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2180b9fd430 prev 0x2180b9fd2b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x2180b9fd130 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x2180b9fd1b0 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x2180b9fd4e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2180b9fd8c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x2180b9fd628 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x2180b9fd6a8 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x2180b9fd728 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x2180b9fdb20 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x2180b9fd9b0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x2180b9fda28 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2180b9fedf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2180b9fdcc0 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x2180b9fee98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2180b9ff1e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2180b9fefe0 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x2180b9ff058 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2180b9ff0d0 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2180b9ff508 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x2180b9ff390 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x2180b9ff408 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2180b9ff5b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2180b9ff9d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2180b9ffa70 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2180b9ffad8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2180b9ffb40 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2180b9ffbc0 prev 0x2180b9ff9d0 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2180b9ff700 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x2180b9ff780 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x2180b9ff7f8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2180b9f7ff8 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2180b9ffca8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x2180b9ffd28 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x2180b9f7d80 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2180b9f7df8 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2180b9f82a0 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x2180b9f8340 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2180b9f83b0 prev 0x2180b9f82a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x2180b9f81c0 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x2180b9f8458 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x2180b9f87a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2180b9f8620 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x2180b9f86a0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x2180b9f8850 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x2180b9f8b98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2180b9f8a18 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x2180b9f8a98 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x2180b9f8c48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x2180b9fff98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2180b9ffeb8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x2180ba00040 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x2180ba00458 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2180ba00240 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x2180ba002c0 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x2180ba00338 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2180ba00510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x2180ba008f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x2180ba006d8 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x2180ba00758 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x2180ba007d0 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2180ba009a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x2180ba00c50 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2180ba00b70 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x2180ba00cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x2180ba01060 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x2180ba00ee0 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x2180ba00f60 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x2180ba01110 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x2180ba013b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2180ba012d8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x2180ba01460 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x2180ba016f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x2180ba01580 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x2180ba01a80 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x2180ba017c0 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2180ba01838 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2180ba018b0 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x2180b9f9dd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2180ba01c20 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2180ba01c98 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x2180b9f9e88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2180b9fa1e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x2180b9fa288 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2180b9fa2f0 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x2180b9fa368 prev 0x2180b9fa1e8 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x2180b9f9fc8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2180b9fa040 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2180b9fa660 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x2180b9fa700 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2180b9fa768 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x2180b9fa7e0 prev 0x2180b9fa660 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x2180b9fa440 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2180b9fa4b8 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x2180b9faac0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x2180b9fa8b8 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2180b9fa930 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2180b9fa9a8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x2180ba05e98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2180b9fac60 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2180b9facd8 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x2180ba05f48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2180ba062a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2180ba06088 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2180ba06100 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x2180ba064f0 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x2180ba06590 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x2180ba06600 prev 0x2180ba064f0 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x2180ba06380 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x2180ba068e8 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x2180ba066d0 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2180ba06748 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2180ba06b30 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x2180ba069c0 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x2180ba06a38 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x2180ba02ea0 <line:306:1, line:308:1>
|   `-ReturnStmt 0x2180ba02e90 <line:307:5, col:56>
|     `-ConditionalOperator 0x2180ba02e60 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x2180ba06cf0 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x2180ba06cd0 <col:13, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'int' '=='
|       |   |-ImplicitCastExpr 0x2180ba06ca0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x2180ba06bf8 <col:13> 'const wchar_t *' lvalue ParmVar 0x2180ba069c0 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x2180ba06cb8 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x2180ba06c80 <col:16, col:25> 'void *'
|       |       `-CStyleCastExpr 0x2180ba06c58 <col:17, col:24> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x2180ba06c18 <col:24> 'int' 0
|       |-ImplicitCastExpr 0x2180ba02e48 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x2180ba06d10 <col:29> 'int' 0
|       `-CallExpr 0x2180ba06e10 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x2180ba06df8 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x2180ba06d38 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x2180ba068e8 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x2180ba06e40 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x2180ba06d58 <col:41> 'const wchar_t *' lvalue ParmVar 0x2180ba069c0 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x2180ba02e30 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x2180ba06d78 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x2180ba06a38 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x2180ba03238 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x2180ba02ec8 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2180ba02f40 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2180ba02fb8 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2180ba03030 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2180ba036a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2180ba033e0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2180ba03458 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x2180ba034d0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2180ba03758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2180ba03b68 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x2180ba03c08 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x2180ba03c70 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2180ba03cd8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2180ba03d58 prev 0x2180ba03b68 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x2180ba03898 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2180ba03910 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2180ba03988 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2180ba05100 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x2180ba04e60 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2180ba04ed8 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2180ba04f50 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2180ba04fc8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2180ba054b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2180ba052a8 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2180ba05320 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x2180ba05398 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2180ba05568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2180ba058c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2180ba056a8 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2180ba05720 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x2180ba05b10 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x2180ba059a0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2180ba05a18 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2180ba05d58 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2180ba05be8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2180ba05c60 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x2180ba06fe0 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2180ba06e70 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2180ba06ee8 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x2180ba072e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2180ba07178 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x2180ba071f0 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x2180ba07398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2180ba07800 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x2180ba074d8 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x2180ba07550 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x2180ba07630 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x2180ba07b20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x2180ba079a8 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x2180ba07bc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2180ba07ff0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x2180ba07d08 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x2180ba07d80 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2180ba07e00 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x2180ba082a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x2180ba081c8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x2180ba08348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2180ba08710 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x2180ba08488 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x2180ba08500 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2180ba08578 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x2180ba08968 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2180ba087f0 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2180ba08868 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x2180ba08d08 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2180ba08a40 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2180ba08ab8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2180ba08b30 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2180ba0a038 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2180ba08de8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2180ba09ea0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2180ba09f18 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2180ba0a490 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2180ba0a118 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2180ba0a190 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2180ba0a208 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2180ba0a280 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2180ba0a8e8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x2180ba0a578 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2180ba0a5f0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2180ba0a668 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2180ba0a6e0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2180ba0ad50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x2180ba0aa90 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x2180ba0ab08 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x2180ba0ab80 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2180ba0ae08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2180ba0b120 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x2180ba0afa8 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x2180ba0b4b0 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x2180ba0b1f0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2180ba0b268 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2180ba0b2e0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x2180ba0b868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x2180ba0b650 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x2180ba0b6c8 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x2180ba0b918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2180ba0bc78 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2180ba0ba58 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x2180ba0bad0 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2180ba03e98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2180ba0be10 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x2180ba03f40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2180ba04340 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2180ba04080 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x2180ba040f8 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2180ba04170 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2180ba046f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2180ba044e0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x2180ba04558 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2180ba047a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2180ba04a58 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2180ba048e8 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x2180ba04960 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2180ba04cc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2180ba04bf0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x2180ba04d70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2180ba10200 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2180ba0fff8 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x2180ba10070 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2180ba100e8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2180ba10510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2180ba103a0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x2180ba10418 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2180ba105c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2180ba109c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2180ba10700 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2180ba10778 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2180ba107f0 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2180ba10e08 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2180ba10aa0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2180ba10b18 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2180ba10b90 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2180ba10c08 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2180ba130a8 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2180ba12f30 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2180ba12fa8 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x2180ba13390 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2180ba13180 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2180ba131f8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2180ba13270 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2180ba135e8 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2180ba13470 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2180ba134e8 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x2180ba138d0 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2180ba136c0 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2180ba13738 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2180ba137b0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2180ba13bc0 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2180ba139b0 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2180ba13a28 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2180ba13aa0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2180ba0bf10 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2180ba13ca0 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2180ba13d18 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2180ba13d90 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2180ba13e08 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2180ba0c208 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2180ba0bff8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2180ba0c070 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2180ba0c0e8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2180ba0c590 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2180ba0c2e8 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2180ba0c360 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2180ba0c3d8 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2180ba0c450 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2180ba0c7f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x2180ba0c718 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x2180ba0c898 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x2180ba0cbd0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2180ba0ca58 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2180ba0cad0 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x2180ba0cc80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x2180ba0d068 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2180ba0ce40 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2180ba0ced0 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2180ba0cf48 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2180ba0d120 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x2180ba0d4e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x2180ba0d2e0 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x2180ba0d358 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x2180ba0d3d0 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2180ba0d5a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x2180ba0d838 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2180ba0d760 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x2180ba0d8e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x2180ba0dc10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x2180ba0daa0 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x2180ba0db18 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x2180ba0dcc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x2180ba14018 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2180ba13f40 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x2180ba140c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x2180ba14358 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2180ba14280 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x2180ba14400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x2180ba14738 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2180ba145c0 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2180ba14638 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x2180ba147e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x2180ba14c10 <.//openssl//file_jk/before\crypto\asn1/asn1_locl.h:12:1, col:60> col:5 invalid asn1_utctime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x2180ba14a70 <col:24, col:35> col:35 tm 'struct tm *'
| `-ParmVarDecl 0x2180ba14af0 <col:39, col:59> col:59 invalid d 'const int *'
|-FunctionDecl 0x2180ba0df90 <line:13:1, col:76> col:5 invalid asn1_generalizedtime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x2180ba14e40 <col:32, col:43> col:43 tm 'struct tm *'
| `-ParmVarDecl 0x2180ba14ec0 <col:47, col:75> col:75 invalid d 'const int *'
|-RecordDecl 0x2180ba0e040 <line:17:1, line:38:1> line:17:8 invalid struct asn1_sctx_st definition
| |-FieldDecl 0x2180ba0e118 <line:19:5, col:22> col:22 invalid it 'const int *'
| |-FieldDecl 0x2180ba0e188 <line:21:5, col:26> col:26 invalid tt 'const int *'
| |-FieldDecl 0x2180ba0e1f8 <line:23:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x2180ba0e268 <line:25:5, col:9> col:9 skidx 'int'
| |-FieldDecl 0x2180ba0e2d8 <line:27:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x2180ba0e348 <line:29:5, col:17> col:17 sname 'const char *'
| |-FieldDecl 0x2180ba0e3b8 <col:5, col:25> col:25 fname 'const char *'
| |-FieldDecl 0x2180ba0e428 <line:31:5, col:9> col:9 prim_type 'int'
| |-FieldDecl 0x2180ba0e4c8 <line:33:5, col:18> col:18 invalid field 'int **'
| |-FieldDecl 0x2180ba0e698 <line:35:5, col:35> col:11 scan_cb 'int (*)(int *)'
| `-FieldDecl 0x2180ba0e708 <line:37:5, col:11> col:11 app_data 'void *'
|-RecordDecl 0x2180ba0e760 <line:40:9, col:16> col:16 struct mime_param_st
|-TypedefDecl 0x2180ba0e878 <col:1, col:30> col:30 referenced MIME_PARAM 'struct mime_param_st':'struct mime_param_st'
| `-ElaboratedType 0x2180ba0e820 'struct mime_param_st' sugar
|   `-RecordType 0x2180ba0e800 'struct mime_param_st'
|     `-Record 0x2180ba0e760 'mime_param_st'
|-FunctionDecl 0x2180ba0ea20 <line:41:1, col:27> col:1 DEFINE_STACK_OF 'int (MIME_PARAM)'
| `-ParmVarDecl 0x2180ba0e920 <col:17> col:27 'MIME_PARAM':'struct mime_param_st'
|-RecordDecl 0x2180ba0eae0 <line:42:9, col:16> col:16 struct mime_header_st
|-TypedefDecl 0x2180ba0ebf8 <col:1, col:31> col:31 referenced MIME_HEADER 'struct mime_header_st':'struct mime_header_st'
| `-ElaboratedType 0x2180ba0eba0 'struct mime_header_st' sugar
|   `-RecordType 0x2180ba0eb80 'struct mime_header_st'
|     `-Record 0x2180ba0eae0 'mime_header_st'
|-FunctionDecl 0x2180ba0eda0 <line:43:1, col:28> col:1 invalid DEFINE_STACK_OF 'int (MIME_HEADER)'
| `-ParmVarDecl 0x2180ba0eca0 <col:17> col:28 'MIME_HEADER':'struct mime_header_st'
|-VarDecl 0x2180ba10f38 <line:46:1, col:32> col:20 _asn1_mon 'const char *[12]' extern
|-FunctionDecl 0x2180ba11128 <line:48:1, col:54> col:6 invalid asn1_string_embed_free 'void (int *, int)'
| |-ParmVarDecl 0x2180ba10fd0 <col:29, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x2180ba11050 <col:45, col:49> col:49 embed 'int'
|-FunctionDecl 0x2180ba11350 <line:50:1, col:68> col:5 invalid asn1_get_choice_selector 'int (int **, const int *)'
| |-ParmVarDecl 0x2180ba111f8 <col:30, col:43> col:43 invalid pval 'int **'
| `-ParmVarDecl 0x2180ba11278 <col:49, col:66> col:66 invalid it 'const int *'
|-FunctionDecl 0x2180ba11610 <line:51:1, line:52:49> line:51:5 invalid asn1_set_choice_selector 'int (int **, int, const int *)'
| |-ParmVarDecl 0x2180ba11420 <col:30, col:43> col:43 invalid pval 'int **'
| |-ParmVarDecl 0x2180ba114a0 <col:49, col:53> col:53 value 'int'
| `-ParmVarDecl 0x2180ba11520 <line:52:30, col:47> col:47 invalid it 'const int *'
|-FunctionDecl 0x2180ba11848 <line:54:1, col:75> col:14 invalid asn1_get_field_ptr 'int **(int **, const int *)'
| |-ParmVarDecl 0x2180ba116e8 <col:33, col:46> col:46 invalid pval 'int **'
| `-ParmVarDecl 0x2180ba11768 <col:52, col:73> col:73 invalid tt 'const int *'
|-FunctionDecl 0x2180ba11b00 <line:56:1, line:57:45> line:56:22 invalid asn1_do_adb 'const int *(int **, const int *, int)'
| |-ParmVarDecl 0x2180ba11918 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x2180ba11998 <col:53, col:74> col:74 invalid tt 'const int *'
| `-ParmVarDecl 0x2180ba11a18 <line:57:34, col:38> col:38 nullerr 'int'
|-FunctionDecl 0x2180ba11d80 <line:59:1, col:64> col:5 invalid asn1_do_lock 'int (int **, int, const int *)'
| |-ParmVarDecl 0x2180ba11bd8 <col:18, col:31> col:31 invalid pval 'int **'
| |-ParmVarDecl 0x2180ba11c58 <col:37, col:41> col:41 op 'int'
| `-ParmVarDecl 0x2180ba11cd8 <col:45, col:62> col:62 invalid it 'const int *'
|-FunctionDecl 0x2180ba11ff8 <line:61:1, col:58> col:6 invalid asn1_enc_init 'void (int **, const int *)'
| |-ParmVarDecl 0x2180ba11e58 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x2180ba11f20 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x2180ba121e0 <line:62:1, col:58> col:6 invalid asn1_enc_free 'void (int **, const int *)'
| |-ParmVarDecl 0x2180ba120c8 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x2180ba12148 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x2180ba12590 <line:63:1, line:64:41> line:63:5 invalid asn1_enc_restore 'int (int *, unsigned char **, int **, const int *)'
| |-ParmVarDecl 0x2180ba122a8 <col:22, col:27> col:27 len 'int *'
| |-ParmVarDecl 0x2180ba12388 <col:32, col:48> col:48 out 'unsigned char **'
| |-ParmVarDecl 0x2180ba12410 <col:53, col:66> col:66 invalid pval 'int **'
| `-ParmVarDecl 0x2180ba12490 <line:64:22, col:39> col:39 invalid it 'const int *'
|-FunctionDecl 0x2180ba128f0 <line:65:1, line:66:38> line:65:5 invalid asn1_enc_save 'int (int **, const unsigned char *, int, const int *)'
| |-ParmVarDecl 0x2180ba12670 <col:19, col:32> col:32 invalid pval 'int **'
| |-ParmVarDecl 0x2180ba126f0 <col:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x2180ba12770 <col:63, col:67> col:67 inlen 'int'
| `-ParmVarDecl 0x2180ba127f0 <line:66:19, col:36> col:36 invalid it 'const int *'
|-FunctionDecl 0x2180ba12bb8 <line:68:1, col:76> col:6 invalid asn1_item_embed_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x2180ba129d0 <col:27, col:40> col:40 invalid pval 'int **'
| |-ParmVarDecl 0x2180ba12a50 <col:46, col:63> col:63 invalid it 'const int *'
| `-ParmVarDecl 0x2180ba12ad0 <col:67, col:71> col:71 embed 'int'
|-FunctionDecl 0x2180ba12e30 <line:69:1, col:75> col:6 invalid asn1_primitive_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x2180ba12c90 <col:26, col:39> col:39 invalid pval 'int **'
| |-ParmVarDecl 0x2180ba12d10 <col:45, col:62> col:62 invalid it 'const int *'
| `-ParmVarDecl 0x2180ba12d90 <col:66, col:70> col:70 embed 'int'
|-FunctionDecl 0x2180b9d0ec8 <line:70:1, col:67> col:6 invalid asn1_template_free 'void (int **, const int *)'
| |-ParmVarDecl 0x2180b9d0db0 <col:25, col:38> col:38 invalid pval 'int **'
| `-ParmVarDecl 0x2180b9d0e30 <col:44, col:65> col:65 invalid tt 'const int *'
|-FunctionDecl 0x2180b9d11b0 <line:72:1, line:73:41> line:72:14 invalid c2i_ASN1_OBJECT 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x2180b9d0f98 <col:30, col:44> col:44 invalid a 'int **'
| |-ParmVarDecl 0x2180b9d1048 <col:47, col:69> col:69 pp 'const unsigned char **'
| `-ParmVarDecl 0x2180b9d10c8 <line:73:30, col:35> col:35 length 'long'
|-FunctionDecl 0x2180b9d13e0 <line:74:1, col:63> col:5 invalid i2c_ASN1_BIT_STRING 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x2180b9d1280 <col:25, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x2180b9d1308 <col:45, col:61> col:61 pp 'unsigned char **'
|-FunctionDecl 0x2180b9d1660 <line:75:1, line:76:75> line:75:18 invalid c2i_ASN1_BIT_STRING 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x2180b9d14b0 <col:38, col:56> col:56 invalid a 'int **'
| |-ParmVarDecl 0x2180b9d1538 <line:76:38, col:60> col:60 pp 'const unsigned char **'
| `-ParmVarDecl 0x2180b9d15b8 <col:64, col:69> col:69 length 'long'
|-FunctionDecl 0x2180b9d1858 <line:77:1, col:57> col:5 invalid i2c_ASN1_INTEGER 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x2180b9d1730 <col:22, col:36> col:36 invalid a 'int *'
| `-ParmVarDecl 0x2180b9d17b8 <col:39, col:55> col:55 pp 'unsigned char **'
|-FunctionDecl 0x2180b9d1ad8 <line:78:1, line:79:43> line:78:15 invalid c2i_ASN1_INTEGER 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x2180b9d1928 <col:32, col:47> col:47 invalid a 'int **'
| |-ParmVarDecl 0x2180b9d19b0 <col:50, col:72> col:72 pp 'const unsigned char **'
| `-ParmVarDecl 0x2180b9d1a30 <line:79:32, col:37> col:37 length 'long'
|-FunctionDecl 0x2180b9d2e60 <line:82:1, col:79> col:5 invalid c2i_uint64_int 'int (int *, int *, const unsigned char **, long)'
| |-ParmVarDecl 0x2180b9d1ba8 <col:20, col:30> col:30 invalid ret 'int *'
| |-ParmVarDecl 0x2180b9d1c28 <col:35, col:40> col:40 neg 'int *'
| |-ParmVarDecl 0x2180b9d1cb0 <col:45, col:67> col:67 pp 'const unsigned char **'
| `-ParmVarDecl 0x2180b9d1d30 <col:71, col:76> col:76 len 'long'
|-FunctionDecl 0x2180b9d3120 <line:83:1, col:57> col:5 invalid i2c_uint64_int 'int (unsigned char *, int, int)'
| |-ParmVarDecl 0x2180b9d2f38 <col:20, col:35> col:35 p 'unsigned char *'
| |-ParmVarDecl 0x2180b9d2fb8 <col:38, col:47> col:47 invalid r 'int'
| `-ParmVarDecl 0x2180b9d3038 <col:50, col:54> col:54 neg 'int'
|-FunctionDecl 0x2180b9d3740 <.//openssl//file_jk/before\crypto\asn1\tasn_dec.c:28:1, line:31:41> line:28:12 invalid asn1_item_embed_d2i 'int (int **, const unsigned char **, long, const int *, int, int, char, int *, int)' static
| |-ParmVarDecl 0x2180b9d31f8 <col:32, col:45> col:45 invalid pval 'int **'
| |-ParmVarDecl 0x2180b9d3280 <col:51, col:73> col:73 in 'const unsigned char **'
| |-ParmVarDecl 0x2180b9d3300 <line:29:32, col:37> col:37 len 'long'
| |-ParmVarDecl 0x2180b9d3380 <col:42, col:59> col:59 invalid it 'const int *'
| |-ParmVarDecl 0x2180b9d3400 <line:30:32, col:36> col:36 tag 'int'
| |-ParmVarDecl 0x2180b9d3480 <col:41, col:45> col:45 aclass 'int'
| |-ParmVarDecl 0x2180b9d34f8 <col:53, col:58> col:58 opt 'char'
| |-ParmVarDecl 0x2180b9d3578 <col:63, col:73> col:73 invalid ctx 'int *'
| `-ParmVarDecl 0x2180b9d35f8 <line:31:32, col:36> col:36 depth 'int'
|-FunctionDecl 0x2180b9d39d0 <line:33:1, col:61> col:12 used asn1_check_eoc 'int (const unsigned char **, long)' static
| |-ParmVarDecl 0x2180b9d3848 <col:27, col:49> col:49 in 'const unsigned char **'
| `-ParmVarDecl 0x2180b9d38c8 <col:53, col:58> col:58 len 'long'
|-FunctionDecl 0x2180b9d3ce0 <line:34:1, col:70> col:12 used asn1_find_end 'int (const unsigned char **, long, char)' static
| |-ParmVarDecl 0x2180b9d3ab8 <col:26, col:48> col:48 in 'const unsigned char **'
| |-ParmVarDecl 0x2180b9d3b38 <col:52, col:57> col:57 len 'long'
| `-ParmVarDecl 0x2180b9d3bb0 <col:62, col:67> col:67 inf 'char'
|-FunctionDecl 0x2180b9cf1c0 <line:36:1, line:37:65> line:36:12 invalid asn1_collect 'int (int *, const unsigned char **, long, char, int, int, int)' static
| |-ParmVarDecl 0x2180b9ced90 <col:25, col:34> col:34 invalid buf 'int *'
| |-ParmVarDecl 0x2180b9cee18 <col:39, col:61> col:61 in 'const unsigned char **'
| |-ParmVarDecl 0x2180b9cee98 <col:65, col:70> col:70 len 'long'
| |-ParmVarDecl 0x2180b9cef10 <line:37:25, col:30> col:30 inf 'char'
| |-ParmVarDecl 0x2180b9cef90 <col:35, col:39> col:39 tag 'int'
| |-ParmVarDecl 0x2180b9cf010 <col:44, col:48> col:48 aclass 'int'
| `-ParmVarDecl 0x2180b9cf090 <col:56, col:60> col:60 depth 'int'
|-FunctionDecl 0x2180b9cf4a0 <line:39:1, col:73> col:12 invalid collect_data 'int (int *, const unsigned char **, long)' static
| |-ParmVarDecl 0x2180b9cf2b0 <col:25, col:34> col:34 invalid buf 'int *'
| |-ParmVarDecl 0x2180b9cf338 <col:39, col:61> col:61 p 'const unsigned char **'
| `-ParmVarDecl 0x2180b9cf3b8 <col:64, col:69> col:69 plen 'long'
|-FunctionDecl 0x2180b9cfc10 <line:41:1, line:44:77> line:41:12 invalid asn1_check_tlen 'int (long *, int *, unsigned char *, char *, char *, const unsigned char **, long, int, int, char, int *)' static
| |-ParmVarDecl 0x2180b9cf5a0 <col:28, col:34> col:34 olen 'long *'
| |-ParmVarDecl 0x2180b9cf620 <col:40, col:45> col:45 otag 'int *'
| |-ParmVarDecl 0x2180b9cf6a0 <col:51, col:66> col:66 oclass 'unsigned char *'
| |-ParmVarDecl 0x2180b9cf720 <line:42:28, col:34> col:34 inf 'char *'
| |-ParmVarDecl 0x2180b9cf7a0 <col:39, col:45> col:45 cst 'char *'
| |-ParmVarDecl 0x2180b9cf828 <line:43:28, col:50> col:50 in 'const unsigned char **'
| |-ParmVarDecl 0x2180b9cf8a8 <col:54, col:59> col:59 len 'long'
| |-ParmVarDecl 0x2180b9cf928 <line:44:28, col:32> col:32 exptag 'int'
| |-ParmVarDecl 0x2180b9cf9a8 <col:40, col:44> col:44 expclass 'int'
| |-ParmVarDecl 0x2180b9cfa20 <col:54, col:59> col:59 opt 'char'
| `-ParmVarDecl 0x2180b9cfaa0 <col:64, col:74> col:74 invalid ctx 'int *'
|-FunctionDecl 0x2180b9d41a0 <line:46:1, line:49:57> line:46:12 invalid asn1_template_ex_d2i 'int (int **, const unsigned char **, long, const int *, char, int *, int)' static
| |-ParmVarDecl 0x2180b9cfd28 <col:33, col:46> col:46 invalid pval 'int **'
| |-ParmVarDecl 0x2180b9d3e00 <line:47:33, col:55> col:55 in 'const unsigned char **'
| |-ParmVarDecl 0x2180b9d3e80 <col:59, col:64> col:64 len 'long'
| |-ParmVarDecl 0x2180b9d3f00 <line:48:33, col:54> col:54 invalid tt 'const int *'
| |-ParmVarDecl 0x2180b9d3f78 <col:58, col:63> col:63 opt 'char'
| |-ParmVarDecl 0x2180b9d3ff8 <line:49:33, col:43> col:43 invalid ctx 'int *'
| `-ParmVarDecl 0x2180b9d4078 <col:48, col:52> col:52 depth 'int'
|-FunctionDecl 0x2180b9d4660 <line:50:1, line:53:60> line:50:12 invalid asn1_template_noexp_d2i 'int (int **, const unsigned char **, long, const int *, char, int *, int)' static
| |-ParmVarDecl 0x2180b9d4298 <col:36, col:49> col:49 invalid val 'int **'
| |-ParmVarDecl 0x2180b9d4320 <line:51:36, col:58> col:58 in 'const unsigned char **'
| |-ParmVarDecl 0x2180b9d43a0 <col:62, col:67> col:67 len 'long'
| |-ParmVarDecl 0x2180b9d4420 <line:52:36, col:57> col:57 invalid tt 'const int *'
| |-ParmVarDecl 0x2180b9d4498 <col:61, col:66> col:66 opt 'char'
| |-ParmVarDecl 0x2180b9d4518 <line:53:36, col:46> col:46 invalid ctx 'int *'
| `-ParmVarDecl 0x2180b9d4598 <col:51, col:55> col:55 depth 'int'
|-FunctionDecl 0x2180b9d4c10 <line:54:1, line:58:47> line:54:12 invalid asn1_d2i_ex_primitive 'int (int **, const unsigned char **, long, const int *, int, int, char, int *)' static
| |-ParmVarDecl 0x2180b9d4758 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x2180b9d47e0 <line:55:34, col:56> col:56 in 'const unsigned char **'
| |-ParmVarDecl 0x2180b9d4860 <col:60, col:65> col:65 len 'long'
| |-ParmVarDecl 0x2180b9d48e0 <line:56:34, col:51> col:51 invalid it 'const int *'
| |-ParmVarDecl 0x2180b9d4960 <line:57:34, col:38> col:38 tag 'int'
| |-ParmVarDecl 0x2180b9d49e0 <col:43, col:47> col:47 aclass 'int'
| |-ParmVarDecl 0x2180b9d4a58 <col:55, col:60> col:60 opt 'char'
| `-ParmVarDecl 0x2180b9d4ad8 <line:58:34, col:44> col:44 invalid ctx 'int *'
|-FunctionDecl 0x2180b9d00c0 <line:59:1, line:60:71> line:59:12 invalid asn1_ex_c2i 'int (int **, const unsigned char *, int, int, char *, const int *)' static
| |-ParmVarDecl 0x2180b9d4d10 <col:24, col:37> col:37 invalid pval 'int **'
| |-ParmVarDecl 0x2180b9cfda0 <col:43, col:64> col:64 cont 'const unsigned char *'
| |-ParmVarDecl 0x2180b9cfe20 <col:70, col:74> col:74 len 'int'
| |-ParmVarDecl 0x2180b9cfea0 <line:60:24, col:28> col:28 utype 'int'
| |-ParmVarDecl 0x2180b9cff20 <col:35, col:41> col:41 free_cont 'char *'
| `-ParmVarDecl 0x2180b9cffa0 <col:52, col:69> col:69 invalid it 'const int *'
|-VarDecl 0x2180b9d0270 <line:63:1, col:38> col:28 used tag2bit 'const unsigned long [32]' static
|-FunctionDecl 0x2180b9d04e0 <line:84:1, line:89:1> line:84:15 used ASN1_tag2bit 'unsigned long (int)'
| |-ParmVarDecl 0x2180b9d03f8 <col:28, col:32> col:32 used tag 'int'
| `-CompoundStmt 0x2180b9d0850 <line:85:1, line:89:1>
|   |-IfStmt 0x2180b9d0750 <line:86:5, line:87:16>
|   | |-BinaryOperator 0x2180b9d06e0 <line:86:9, col:31> 'int' '||'
|   | | |-ParenExpr 0x2180b9d0620 <col:9, col:17> 'int'
|   | | | `-BinaryOperator 0x2180b9d0600 <col:10, col:16> 'int' '<'
|   | | |   |-ImplicitCastExpr 0x2180b9d05e8 <col:10> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x2180b9d05a0 <col:10> 'int' lvalue ParmVar 0x2180b9d03f8 'tag' 'int'
|   | | |   `-IntegerLiteral 0x2180b9d05c0 <col:16> 'int' 0
|   | | `-ParenExpr 0x2180b9d06c0 <col:22, col:31> 'int'
|   | |   `-BinaryOperator 0x2180b9d06a0 <col:23, col:29> 'int' '>'
|   | |     |-ImplicitCastExpr 0x2180b9d0688 <col:23> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x2180b9d0640 <col:23> 'int' lvalue ParmVar 0x2180b9d03f8 'tag' 'int'
|   | |     `-IntegerLiteral 0x2180b9d0660 <col:29> 'int' 30
|   | `-ReturnStmt 0x2180b9d0740 <line:87:9, col:16>
|   |   `-ImplicitCastExpr 0x2180b9d0728 <col:16> 'unsigned long' <IntegralCast>
|   |     `-IntegerLiteral 0x2180b9d0700 <col:16> 'int' 0
|   `-ReturnStmt 0x2180b9d0840 <line:88:5, col:23>
|     `-ImplicitCastExpr 0x2180b9d0828 <col:12, col:23> 'unsigned long' <LValueToRValue>
|       `-ArraySubscriptExpr 0x2180b9d0808 <col:12, col:23> 'const unsigned long' lvalue
|         |-ImplicitCastExpr 0x2180b9d07d8 <col:12> 'const unsigned long *' <ArrayToPointerDecay>
|         | `-DeclRefExpr 0x2180b9d0768 <col:12> 'const unsigned long [32]' lvalue Var 0x2180b9d0270 'tag2bit' 'const unsigned long [32]'
|         `-ImplicitCastExpr 0x2180b9d07f0 <col:20> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x2180b9d0788 <col:20> 'int' lvalue ParmVar 0x2180b9d03f8 'tag' 'int'
|-FunctionDecl 0x2180b9d0b10 <line:104:1, line:116:1> line:104:13 invalid ASN1_item_d2i 'int *(int **, const unsigned char **, long, const int *)'
| |-ParmVarDecl 0x2180b9d0890 <col:27, col:40> col:40 invalid pval 'int **'
| |-ParmVarDecl 0x2180b9d0918 <line:105:27, col:49> col:49 used in 'const unsigned char **'
| |-ParmVarDecl 0x2180b9d0998 <col:53, col:58> col:58 used len 'long'
| |-ParmVarDecl 0x2180b9d0a18 <line:106:27, col:44> col:44 invalid it 'const int *'
| `-CompoundStmt 0x2180b9d8030 <line:107:1, line:116:1>
|   `-ReturnStmt 0x2180b9d8020 <line:115:5, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25>
|     `-ImplicitCastExpr 0x2180b9d8008 <col:16, col:25> 'int *' <NullToPointer>
|       `-ParenExpr 0x2180b9d7fe8 <col:16, col:25> 'void *'
|         `-CStyleCastExpr 0x2180b9d7fc0 <col:17, col:24> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x2180b9d7f80 <col:24> 'int' 0
|-FunctionDecl 0x2180b9d84b8 <.//openssl//file_jk/before\crypto\asn1\tasn_dec.c:118:1, line:127:1> line:118:5 invalid ASN1_item_ex_d2i 'int (int **, const unsigned char **, long, const int *, int, int, char, int *)'
| |-ParmVarDecl 0x2180b9d8068 <col:22, col:35> col:35 invalid pval 'int **'
| |-ParmVarDecl 0x2180b9d80f0 <col:41, col:63> col:63 used in 'const unsigned char **'
| |-ParmVarDecl 0x2180b9d8170 <col:67, col:72> col:72 used len 'long'
| |-ParmVarDecl 0x2180b9d81f0 <line:119:22, col:39> col:39 invalid it 'const int *'
| |-ParmVarDecl 0x2180b9d8270 <line:120:22, col:26> col:26 used tag 'int'
| |-ParmVarDecl 0x2180b9d82f0 <col:31, col:35> col:35 used aclass 'int'
| |-ParmVarDecl 0x2180b9d8368 <col:43, col:48> col:48 used opt 'char'
| |-ParmVarDecl 0x2180b9d83e8 <col:53, col:63> col:63 invalid ctx 'int *'
| `-CompoundStmt 0x2180b9d8998 <line:121:1, line:127:1>
|   |-DeclStmt 0x2180b9d8630 <line:122:5, col:11>
|   | `-VarDecl 0x2180b9d85c8 <col:5, col:9> col:9 used rv 'int'
|   `-ReturnStmt 0x2180b9d8988 <line:126:5, col:12>
|     `-ImplicitCastExpr 0x2180b9d8970 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2180b9d8950 <col:12> 'int' lvalue Var 0x2180b9d85c8 'rv' 'int'
|-FunctionDecl 0x2180b9d8f08 <line:134:1, line:429:1> line:134:12 invalid asn1_item_embed_d2i 'int (int **, const unsigned char **, long, const int *, int, int, char, int *, int)' static
| |-ParmVarDecl 0x2180b9d89d8 <col:32, col:45> col:45 invalid pval 'int **'
| |-ParmVarDecl 0x2180b9d8a60 <col:51, col:73> col:73 used in 'const unsigned char **'
| |-ParmVarDecl 0x2180b9d8ae0 <line:135:32, col:37> col:37 used len 'long'
| |-ParmVarDecl 0x2180b9d8b60 <col:42, col:59> col:59 invalid it 'const int *'
| |-ParmVarDecl 0x2180b9d8be0 <line:136:32, col:36> col:36 used tag 'int'
| |-ParmVarDecl 0x2180b9d8c60 <col:41, col:45> col:45 used aclass 'int'
| |-ParmVarDecl 0x2180b9d8cd8 <col:53, col:58> col:58 used opt 'char'
| |-ParmVarDecl 0x2180b9d8d58 <col:63, col:73> col:73 invalid ctx 'int *'
| |-ParmVarDecl 0x2180b9d8e30 <line:137:32, col:36> col:36 used depth 'int'
| `-CompoundStmt 0x2180b9dfea0 <line:138:1, line:429:1>
|   |-DeclStmt 0x2180b9d9088 <line:139:5, col:37>
|   | `-VarDecl 0x2180b9d9020 <col:5, col:26> col:26 invalid tt 'const int *'
|   |-DeclStmt 0x2180b9d9120 <line:140:5, col:32>
|   | `-VarDecl 0x2180b9d90b8 <col:5, col:30> col:30 invalid ef 'const int *'
|   |-DeclStmt 0x2180b9d91b8 <line:141:5, col:36>
|   | `-VarDecl 0x2180b9d9150 <col:5, col:21> col:21 invalid aux 'const int *'
|   |-DeclStmt 0x2180b9d9388 <line:143:5, col:38>
|   | |-VarDecl 0x2180b9d91e8 <col:5, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> .//openssl//file_jk/before\crypto\asn1\tasn_dec.c:143:26 used p 'const unsigned char *' cinit
|   | | `-ImplicitCastExpr 0x2180b9d92d8 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const unsigned char *' <NullToPointer>
|   | |   `-ParenExpr 0x2180b9d92b8 <col:16, col:25> 'void *'
|   | |     `-CStyleCastExpr 0x2180b9d9290 <col:17, col:24> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2180b9d9250 <col:24> 'int' 0
|   | `-VarDecl 0x2180b9d9308 <.//openssl//file_jk/before\crypto\asn1\tasn_dec.c:143:5, col:37> col:37 used q 'const unsigned char *'
|   |-DeclStmt 0x2180b9d9420 <line:144:5, col:25>
|   | `-VarDecl 0x2180b9d93b8 <col:5, col:19> col:19 used oclass 'unsigned char'
|   |-DeclStmt 0x2180b9d9640 <line:145:5, col:40>
|   | |-VarDecl 0x2180b9d9448 <col:5, col:10> col:10 used seq_eoc 'char'
|   | |-VarDecl 0x2180b9d94c0 <col:5, col:19> col:19 used seq_nolen 'char'
|   | |-VarDecl 0x2180b9d9538 <col:5, col:30> col:30 used cst 'char'
|   | `-VarDecl 0x2180b9d95b0 <col:5, col:35> col:35 used isopt 'char'
|   |-DeclStmt 0x2180b9d96d8 <line:146:5, col:16>
|   | `-VarDecl 0x2180b9d9670 <col:5, col:10> col:10 used tmplen 'long'
|   |-DeclStmt 0x2180b9d9770 <line:147:5, col:10>
|   | `-VarDecl 0x2180b9d9708 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x2180b9d9808 <line:148:5, col:13>
|   | `-VarDecl 0x2180b9d97a0 <col:5, col:9> col:9 used otag 'int'
|   |-DeclStmt 0x2180b9d98c8 <line:149:5, col:16>
|   | `-VarDecl 0x2180b9d9838 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x2180b9d98a0 <col:15> 'int' 0
|   |-IfStmt 0x2180b9d9930 <line:151:5, line:152:16>
|   | |-OpaqueValueExpr 0x2180b9d9918 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2180b9d9908 <col:9, col:16>
|   |   `-IntegerLiteral 0x2180b9d98e0 <col:16> 'int' 0
|   |-IfStmt 0x2180b9d9b98 <line:158:5, line:161:5>
|   | |-BinaryOperator 0x2180b9d99e8 <line:158:9, line:26:35> 'int' '>'
|   | | |-UnaryOperator 0x2180b9d99a8 <line:158:9, col:11> 'int' prefix '++'
|   | | | `-DeclRefExpr 0x2180b9d9970 <col:11> 'int' lvalue ParmVar 0x2180b9d8e30 'depth' 'int'
|   | | `-IntegerLiteral 0x2180b9d99c0 <line:26:35> 'int' 30
|   | `-CompoundStmt 0x2180b9d9b80 <line:158:46, line:161:5>
|   |   `-GotoStmt 0x2180b9d9b68 <line:160:9, col:14> 'err' 0x2180b9d9b18
|   |-LabelStmt 0x2180b9e2ba0 <line:420:2, col:8> 'auxerr'
|   | `-NullStmt 0x2180b9e2b98 <col:8>
|   |-LabelStmt 0x2180b9e2e50 <line:422:2, col:5> 'err'
|   | `-NullStmt 0x2180b9e2e48 <col:5>
|   `-ReturnStmt 0x2180b9e2e90 <line:428:5, col:12>
|     `-IntegerLiteral 0x2180b9e2e68 <col:12> 'int' 0
|-FunctionDecl 0x2180b9e0310 <line:436:1, line:505:1> line:436:12 invalid asn1_template_ex_d2i 'int (int **, const unsigned char **, long, const int *, char, int *, int)' static
| |-ParmVarDecl 0x2180b9dff48 <col:33, col:46> col:46 invalid val 'int **'
| |-ParmVarDecl 0x2180b9dffd0 <line:437:33, col:55> col:55 used in 'const unsigned char **'
| |-ParmVarDecl 0x2180b9e0050 <col:59, col:64> col:64 used inlen 'long'
| |-ParmVarDecl 0x2180b9e00d0 <line:438:33, col:54> col:54 invalid tt 'const int *'
| |-ParmVarDecl 0x2180b9e0148 <col:58, col:63> col:63 used opt 'char'
| |-ParmVarDecl 0x2180b9e01c8 <line:439:33, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x2180b9e0248 <col:48, col:52> col:52 used depth 'int'
| `-CompoundStmt 0x2180b9db848 <line:440:1, line:505:1>
|   |-DeclStmt 0x2180b9e0518 <line:441:5, col:22>
|   | |-VarDecl 0x2180b9e0418 <col:5, col:9> col:9 used flags 'int'
|   | `-VarDecl 0x2180b9e0498 <col:5, col:16> col:16 used aclass 'int'
|   |-DeclStmt 0x2180b9e05b0 <line:442:5, col:12>
|   | `-VarDecl 0x2180b9e0548 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x2180b9e0648 <line:443:5, col:13>
|   | `-VarDecl 0x2180b9e05e0 <col:5, col:10> col:10 used len 'long'
|   |-DeclStmt 0x2180b9e0778 <line:444:5, col:31>
|   | |-VarDecl 0x2180b9e0678 <col:5, col:26> col:26 used p 'const unsigned char *'
|   | `-VarDecl 0x2180b9e06f8 <col:5, col:30> col:30 used q 'const unsigned char *'
|   |-DeclStmt 0x2180b9e0808 <line:445:5, col:17>
|   | `-VarDecl 0x2180b9e07a0 <col:5, col:10> col:10 used exp_eoc 'char'
|   |-IfStmt 0x2180b9e0870 <line:446:5, line:447:16>
|   | |-OpaqueValueExpr 0x2180b9e0858 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2180b9e0848 <col:9, col:16>
|   |   `-IntegerLiteral 0x2180b9e0820 <col:16> 'int' 0
|   |-BinaryOperator 0x2180b9e09d0 <line:451:5, col:10> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x2180b9e0918 <col:5> 'const unsigned char *' lvalue Var 0x2180b9e0678 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x2180b9e09b8 <col:9, col:10> 'const unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x2180b9e09a0 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x2180b9e0988 <col:10> 'const unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x2180b9e0950 <col:10> 'const unsigned char **' lvalue ParmVar 0x2180b9dffd0 'in' 'const unsigned char **'
|   |-IfStmt 0x2180b9db6f0 <line:454:5, line:498:9> has_else
|   | |-OpaqueValueExpr 0x2180b9db6d8 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x2180b9db608 <line:454:35, line:497:5>
|   | | |-DeclStmt 0x2180b9e0a88 <line:455:9, col:17>
|   | | | `-VarDecl 0x2180b9e0a20 <col:9, col:14> col:14 used cst 'char'
|   | | |-BinaryOperator 0x2180b9e0e10 <line:462:9, col:13> 'const unsigned char *' '='
|   | | | |-DeclRefExpr 0x2180b9e0da0 <col:9> 'const unsigned char *' lvalue Var 0x2180b9e06f8 'q' 'const unsigned char *'
|   | | | `-ImplicitCastExpr 0x2180b9e0df8 <col:13> 'const unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2180b9e0dd8 <col:13> 'const unsigned char *' lvalue Var 0x2180b9e0678 'p' 'const unsigned char *'
|   | | |-IfStmt 0x2180b9dafa0 <line:463:9, line:467:21> has_else
|   | | | |-UnaryOperator 0x2180b9e0e68 <line:463:13, col:14> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x2180b9e0e50 <col:14> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x2180b9e0e30 <col:14> 'int' lvalue Var 0x2180b9e0548 'ret' 'int'
|   | | | |-CompoundStmt 0x2180b9dae88 <col:19, line:466:9>
|   | | | | `-ReturnStmt 0x2180b9dae78 <line:465:13, col:20>
|   | | | |   `-IntegerLiteral 0x2180b9dae50 <col:20> 'int' 0
|   | | | `-IfStmt 0x2180b9daf88 <line:466:16, line:467:21>
|   | | |   |-BinaryOperator 0x2180b9daf18 <line:466:20, col:28> 'int' '=='
|   | | |   | |-ImplicitCastExpr 0x2180b9daf00 <col:20> 'int' <LValueToRValue>
|   | | |   | | `-DeclRefExpr 0x2180b9daea0 <col:20> 'int' lvalue Var 0x2180b9e0548 'ret' 'int'
|   | | |   | `-UnaryOperator 0x2180b9daee8 <col:27, col:28> 'int' prefix '-'
|   | | |   |   `-IntegerLiteral 0x2180b9daec0 <col:28> 'int' 1
|   | | |   `-ReturnStmt 0x2180b9daf78 <line:467:13, col:21>
|   | | |     `-UnaryOperator 0x2180b9daf60 <col:20, col:21> 'int' prefix '-'
|   | | |       `-IntegerLiteral 0x2180b9daf38 <col:21> 'int' 1
|   | | |-IfStmt 0x2180b9db088 <line:468:9, line:472:9>
|   | | | |-UnaryOperator 0x2180b9db000 <line:468:13, col:14> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x2180b9dafe8 <col:14> 'char' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x2180b9dafc8 <col:14> 'char' lvalue Var 0x2180b9e0a20 'cst' 'char'
|   | | | `-CompoundStmt 0x2180b9db070 <col:19, line:472:9>
|   | | |   `-ReturnStmt 0x2180b9db060 <line:471:13, col:20>
|   | | |     `-IntegerLiteral 0x2180b9db038 <col:20> 'int' 0
|   | | |-IfStmt 0x2180b9db238 <line:475:9, line:478:9>
|   | | | |-UnaryOperator 0x2180b9db1b0 <line:475:13, col:14> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x2180b9db198 <col:14> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x2180b9db178 <col:14> 'int' lvalue Var 0x2180b9e0548 'ret' 'int'
|   | | | `-CompoundStmt 0x2180b9db220 <col:19, line:478:9>
|   | | |   `-ReturnStmt 0x2180b9db210 <line:477:13, col:20>
|   | | |     `-IntegerLiteral 0x2180b9db1e8 <col:20> 'int' 0
|   | | |-CompoundAssignOperator 0x2180b9db300 <line:480:9, col:20> 'long' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | | | |-DeclRefExpr 0x2180b9db250 <col:9> 'long' lvalue Var 0x2180b9e05e0 'len' 'long'
|   | | | `-BinaryOperator 0x2180b9db2e0 <col:16, col:20> 'long long' '-'
|   | | |   |-ImplicitCastExpr 0x2180b9db2b0 <col:16> 'const unsigned char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x2180b9db270 <col:16> 'const unsigned char *' lvalue Var 0x2180b9e0678 'p' 'const unsigned char *'
|   | | |   `-ImplicitCastExpr 0x2180b9db2c8 <col:20> 'const unsigned char *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x2180b9db290 <col:20> 'const unsigned char *' lvalue Var 0x2180b9e06f8 'q' 'const unsigned char *'
|   | | `-IfStmt 0x2180b9db5e0 <line:481:9, line:496:9> has_else
|   | |   |-ImplicitCastExpr 0x2180b9db350 <line:481:13> 'char' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x2180b9db330 <col:13> 'char' lvalue Var 0x2180b9e07a0 'exp_eoc' 'char'
|   | |   |-CompoundStmt 0x2180b9db510 <col:22, line:487:9>
|   | |   | `-IfStmt 0x2180b9db4f8 <line:483:13, line:486:13>
|   | |   |   |-UnaryOperator 0x2180b9db440 <line:483:17, col:40> 'int' prefix '!' cannot overflow
|   | |   |   | `-CallExpr 0x2180b9db3f8 <col:18, col:40> 'int'
|   | |   |   |   |-ImplicitCastExpr 0x2180b9db3e0 <col:18> 'int (*)(const unsigned char **, long)' <FunctionToPointerDecay>
|   | |   |   |   | `-DeclRefExpr 0x2180b9db368 <col:18> 'int (const unsigned char **, long)' Function 0x2180b9d39d0 'asn1_check_eoc' 'int (const unsigned char **, long)'
|   | |   |   |   |-UnaryOperator 0x2180b9db3a8 <col:33, col:34> 'const unsigned char **' prefix '&' cannot overflow
|   | |   |   |   | `-DeclRefExpr 0x2180b9db388 <col:34> 'const unsigned char *' lvalue Var 0x2180b9e0678 'p' 'const unsigned char *'
|   | |   |   |   `-ImplicitCastExpr 0x2180b9db428 <col:37> 'long' <LValueToRValue>
|   | |   |   |     `-DeclRefExpr 0x2180b9db3c0 <col:37> 'long' lvalue Var 0x2180b9e05e0 'len' 'long'
|   | |   |   `-CompoundStmt 0x2180b9db4e0 <col:43, line:486:13>
|   | |   |     `-GotoStmt 0x2180b9db4c8 <line:485:17, col:22> 'err' 0x2180b9db478
|   | |   `-CompoundStmt 0x2180b9db5c8 <line:487:16, line:496:9>
|   | |     `-IfStmt 0x2180b9db5b0 <line:491:13, line:495:13>
|   | |       |-ImplicitCastExpr 0x2180b9db548 <line:491:17> 'long' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x2180b9db528 <col:17> 'long' lvalue Var 0x2180b9e05e0 'len' 'long'
|   | |       `-CompoundStmt 0x2180b9db598 <col:22, line:495:13>
|   | |         `-GotoStmt 0x2180b9db580 <line:494:17, col:22> 'err' 0x2180b9db478
|   | `-NullStmt 0x2180b9db6d0 <line:498:9>
|   |-BinaryOperator 0x2180b9db7a0 <line:500:5, col:11> 'const unsigned char *' '='
|   | |-UnaryOperator 0x2180b9db750 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x2180b9db738 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2180b9db718 <col:6> 'const unsigned char **' lvalue ParmVar 0x2180b9dffd0 'in' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x2180b9db788 <col:11> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2180b9db768 <col:11> 'const unsigned char *' lvalue Var 0x2180b9e0678 'p' 'const unsigned char *'
|   |-ReturnStmt 0x2180b9db7e8 <line:501:5, col:12>
|   | `-IntegerLiteral 0x2180b9db7c0 <col:12> 'int' 1
|   `-LabelStmt 0x2180b9db830 <line:503:2, line:504:12> 'err'
|     `-ReturnStmt 0x2180b9db820 <col:5, col:12>
|       `-IntegerLiteral 0x2180b9db7f8 <col:12> 'int' 0
|-FunctionDecl 0x2180b9dbc98 <line:507:1, line:637:1> line:507:12 invalid asn1_template_noexp_d2i 'int (int **, const unsigned char **, long, const int *, char, int *, int)' static
| |-ParmVarDecl 0x2180b9db8d0 <col:36, col:49> col:49 invalid val 'int **'
| |-ParmVarDecl 0x2180b9db958 <line:508:36, col:58> col:58 used in 'const unsigned char **'
| |-ParmVarDecl 0x2180b9db9d8 <col:62, col:67> col:67 used len 'long'
| |-ParmVarDecl 0x2180b9dba58 <line:509:36, col:57> col:57 invalid tt 'const int *'
| |-ParmVarDecl 0x2180b9dbad0 <col:61, col:66> col:66 used opt 'char'
| |-ParmVarDecl 0x2180b9dbb50 <line:510:36, col:46> col:46 invalid ctx 'int *'
| |-ParmVarDecl 0x2180b9dbbd0 <col:51, col:55> col:55 used depth 'int'
| `-CompoundStmt 0x2180b9e4648 <line:511:1, line:637:1>
|   |-DeclStmt 0x2180b9dbee0 <line:512:5, col:22>
|   | |-VarDecl 0x2180b9dbda0 <col:5, col:9> col:9 used flags 'int'
|   | `-VarDecl 0x2180b9dbe60 <col:5, col:16> col:16 used aclass 'int'
|   |-DeclStmt 0x2180b9dbf78 <line:513:5, col:12>
|   | `-VarDecl 0x2180b9dbf10 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x2180b9dc0a8 <line:515:5, col:31>
|   | |-VarDecl 0x2180b9dbfa8 <col:5, col:26> col:26 used p 'const unsigned char *'
|   | `-VarDecl 0x2180b9dc028 <col:5, col:30> col:30 used q 'const unsigned char *'
|   |-IfStmt 0x2180b9dc110 <line:516:5, line:517:16>
|   | |-OpaqueValueExpr 0x2180b9dc0f8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2180b9dc0e8 <col:9, col:16>
|   |   `-IntegerLiteral 0x2180b9dc0c0 <col:16> 'int' 0
|   |-BinaryOperator 0x2180b9dc270 <line:521:5, col:10> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x2180b9dc1b8 <col:5> 'const unsigned char *' lvalue Var 0x2180b9dbfa8 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x2180b9dc258 <col:9, col:10> 'const unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x2180b9dc240 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x2180b9dc228 <col:10> 'const unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x2180b9dc1f0 <col:10> 'const unsigned char **' lvalue ParmVar 0x2180b9db958 'in' 'const unsigned char **'
|   |-BinaryOperator 0x2180b9dc300 <line:522:5, col:9> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x2180b9dc290 <col:5> 'const unsigned char *' lvalue Var 0x2180b9dc028 'q' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x2180b9dc2e8 <col:9> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2180b9dc2c8 <col:9> 'const unsigned char *' lvalue Var 0x2180b9dbfa8 'p' 'const unsigned char *'
|   |-IfStmt 0x2180b9dc348 <line:528:5, line:531:5>
|   | |-OpaqueValueExpr 0x2180b9dc330 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2180b9dc320 <line:528:38, line:531:5>
|   |-IfStmt 0x2180b9e44f0 <line:533:5, line:630:5> has_else
|   | |-OpaqueValueExpr 0x2180b9e44d8 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x2180b9e3e18 <line:533:36, line:611:5>
|   | | |-DeclStmt 0x2180b9dc498 <line:535:9, col:28>
|   | | | |-VarDecl 0x2180b9dc398 <col:9, col:13> col:13 used sktag 'int'
|   | | | `-VarDecl 0x2180b9dc418 <col:9, col:20> col:20 used skaclass 'int'
|   | | |-DeclStmt 0x2180b9dc528 <line:536:9, col:20>
|   | | | `-VarDecl 0x2180b9dc4c0 <col:9, col:14> col:14 used sk_eoc 'char'
|   | | |-IfStmt 0x2180b9dc6e8 <line:538:9, line:547:9> has_else
|   | | | |-OpaqueValueExpr 0x2180b9dc6d0 <<invalid sloc>> '_Bool'
|   | | | |-CompoundStmt 0x2180b9dc628 <line:538:39, line:541:9>
|   | | | | `-BinaryOperator 0x2180b9dc608 <line:540:13, col:24> 'int' '='
|   | | | |   |-DeclRefExpr 0x2180b9dc598 <col:13> 'int' lvalue Var 0x2180b9dc418 'skaclass' 'int'
|   | | | |   `-ImplicitCastExpr 0x2180b9dc5f0 <col:24> 'int' <LValueToRValue>
|   | | | |     `-DeclRefExpr 0x2180b9dc5d0 <col:24> 'int' lvalue Var 0x2180b9dbe60 'aclass' 'int'
|   | | | `-CompoundStmt 0x2180b9dc6c0 <line:541:16, line:547:9>
|   | | |-IfStmt 0x2180b9dcc10 <line:551:9, line:555:21> has_else
|   | | | |-UnaryOperator 0x2180b9dca88 <line:551:13, col:14> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x2180b9dca70 <col:14> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x2180b9dca50 <col:14> 'int' lvalue Var 0x2180b9dbf10 'ret' 'int'
|   | | | |-CompoundStmt 0x2180b9dcaf8 <col:19, line:554:9>
|   | | | | `-ReturnStmt 0x2180b9dcae8 <line:553:13, col:20>
|   | | | |   `-IntegerLiteral 0x2180b9dcac0 <col:20> 'int' 0
|   | | | `-IfStmt 0x2180b9dcbf8 <line:554:16, line:555:21>
|   | | |   |-BinaryOperator 0x2180b9dcb88 <line:554:20, col:28> 'int' '=='
|   | | |   | |-ImplicitCastExpr 0x2180b9dcb70 <col:20> 'int' <LValueToRValue>
|   | | |   | | `-DeclRefExpr 0x2180b9dcb10 <col:20> 'int' lvalue Var 0x2180b9dbf10 'ret' 'int'
|   | | |   | `-UnaryOperator 0x2180b9dcb58 <col:27, col:28> 'int' prefix '-'
|   | | |   |   `-IntegerLiteral 0x2180b9dcb30 <col:28> 'int' 1
|   | | |   `-ReturnStmt 0x2180b9dcbe8 <line:555:13, col:21>
|   | | |     `-UnaryOperator 0x2180b9dcbd0 <col:20, col:21> 'int' prefix '-'
|   | | |       `-IntegerLiteral 0x2180b9dcba8 <col:21> 'int' 1
|   | | |-IfStmt 0x2180b9e3198 <line:556:9, line:568:9> has_else
|   | | | |-OpaqueValueExpr 0x2180b9e3180 <<invalid sloc>> '_Bool'
|   | | | |-NullStmt 0x2180b9e3178 <line:557:13>
|   | | | `-CompoundStmt 0x2180b9e3168 <line:558:14, line:568:9>
|   | | |-IfStmt 0x2180b9e3278 <line:570:9, line:573:9>
|   | | | |-OpaqueValueExpr 0x2180b9e3260 <<invalid sloc>> '_Bool'
|   | | | `-CompoundStmt 0x2180b9e3248 <line:570:20, line:573:9>
|   | | |   `-GotoStmt 0x2180b9e3230 <line:572:13, col:18> 'err' 0x2180b9e31e0
|   | | |-WhileStmt 0x2180b9e3d60 <line:576:9, line:606:9>
|   | | | |-BinaryOperator 0x2180b9e3308 <line:576:16, col:22> 'int' '>'
|   | | | | |-ImplicitCastExpr 0x2180b9e32d8 <col:16> 'long' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x2180b9e3290 <col:16> 'long' lvalue ParmVar 0x2180b9db9d8 'len' 'long'
|   | | | | `-ImplicitCastExpr 0x2180b9e32f0 <col:22> 'long' <IntegralCast>
|   | | | |   `-IntegerLiteral 0x2180b9e32b0 <col:22> 'int' 0
|   | | | `-CompoundStmt 0x2180b9e3d28 <col:25, line:606:9>
|   | | |   |-BinaryOperator 0x2180b9e3380 <line:578:13, col:17> 'const unsigned char *' '='
|   | | |   | |-DeclRefExpr 0x2180b9e3328 <col:13> 'const unsigned char *' lvalue Var 0x2180b9dc028 'q' 'const unsigned char *'
|   | | |   | `-ImplicitCastExpr 0x2180b9e3368 <col:17> 'const unsigned char *' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x2180b9e3348 <col:17> 'const unsigned char *' lvalue Var 0x2180b9dbfa8 'p' 'const unsigned char *'
|   | | |   |-IfStmt 0x2180b9e36c8 <line:580:13, line:589:13>
|   | | |   | |-CallExpr 0x2180b9e3430 <line:580:17, col:39> 'int'
|   | | |   | | |-ImplicitCastExpr 0x2180b9e3418 <col:17> 'int (*)(const unsigned char **, long)' <FunctionToPointerDecay>
|   | | |   | | | `-DeclRefExpr 0x2180b9e33a0 <col:17> 'int (const unsigned char **, long)' Function 0x2180b9d39d0 'asn1_check_eoc' 'int (const unsigned char **, long)'
|   | | |   | | |-UnaryOperator 0x2180b9e33e0 <col:32, col:33> 'const unsigned char **' prefix '&' cannot overflow
|   | | |   | | | `-DeclRefExpr 0x2180b9e33c0 <col:33> 'const unsigned char *' lvalue Var 0x2180b9dbfa8 'p' 'const unsigned char *'
|   | | |   | | `-ImplicitCastExpr 0x2180b9e3460 <col:36> 'long' <LValueToRValue>
|   | | |   | |   `-DeclRefExpr 0x2180b9e33f8 <col:36> 'long' lvalue ParmVar 0x2180b9db9d8 'len' 'long'
|   | | |   | `-CompoundStmt 0x2180b9e3698 <col:42, line:589:13>
|   | | |   |   |-IfStmt 0x2180b9e3518 <line:581:17, line:585:17>
|   | | |   |   | |-UnaryOperator 0x2180b9e34b0 <line:581:21, col:22> 'int' prefix '!' cannot overflow
|   | | |   |   | | `-ImplicitCastExpr 0x2180b9e3498 <col:22> 'char' <LValueToRValue>
|   | | |   |   | |   `-DeclRefExpr 0x2180b9e3478 <col:22> 'char' lvalue Var 0x2180b9dc4c0 'sk_eoc' 'char'
|   | | |   |   | `-CompoundStmt 0x2180b9e3500 <col:30, line:585:17>
|   | | |   |   |   `-GotoStmt 0x2180b9e34e8 <line:584:21, col:26> 'err' 0x2180b9e31e0
|   | | |   |   |-CompoundAssignOperator 0x2180b9e35e0 <line:586:17, col:28> 'long' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | | |   |   | |-DeclRefExpr 0x2180b9e3530 <col:17> 'long' lvalue ParmVar 0x2180b9db9d8 'len' 'long'
|   | | |   |   | `-BinaryOperator 0x2180b9e35c0 <col:24, col:28> 'long long' '-'
|   | | |   |   |   |-ImplicitCastExpr 0x2180b9e3590 <col:24> 'const unsigned char *' <LValueToRValue>
|   | | |   |   |   | `-DeclRefExpr 0x2180b9e3550 <col:24> 'const unsigned char *' lvalue Var 0x2180b9dbfa8 'p' 'const unsigned char *'
|   | | |   |   |   `-ImplicitCastExpr 0x2180b9e35a8 <col:28> 'const unsigned char *' <LValueToRValue>
|   | | |   |   |     `-DeclRefExpr 0x2180b9e3570 <col:28> 'const unsigned char *' lvalue Var 0x2180b9dc028 'q' 'const unsigned char *'
|   | | |   |   |-BinaryOperator 0x2180b9e3670 <line:587:17, col:26> 'char' '='
|   | | |   |   | |-DeclRefExpr 0x2180b9e3610 <col:17> 'char' lvalue Var 0x2180b9dc4c0 'sk_eoc' 'char'
|   | | |   |   | `-ImplicitCastExpr 0x2180b9e3658 <col:26> 'char' <IntegralCast>
|   | | |   |   |   `-IntegerLiteral 0x2180b9e3630 <col:26> 'int' 0
|   | | |   |   `-BreakStmt 0x2180b9e3690 <line:588:17>
|   | | |   |-IfStmt 0x2180b9e3a40 <line:591:13, line:599:13>
|   | | |   | |-OpaqueValueExpr 0x2180b9e3a28 <<invalid sloc>> '_Bool'
|   | | |   | `-CompoundStmt 0x2180b9e3a10 <line:593:46, line:599:13>
|   | | |   |   `-GotoStmt 0x2180b9e39f8 <line:598:17, col:22> 'err' 0x2180b9e31e0
|   | | |   |-CompoundAssignOperator 0x2180b9e3b08 <line:600:13, col:24> 'long' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | | |   | |-DeclRefExpr 0x2180b9e3a58 <col:13> 'long' lvalue ParmVar 0x2180b9db9d8 'len' 'long'
|   | | |   | `-BinaryOperator 0x2180b9e3ae8 <col:20, col:24> 'long long' '-'
|   | | |   |   |-ImplicitCastExpr 0x2180b9e3ab8 <col:20> 'const unsigned char *' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x2180b9e3a78 <col:20> 'const unsigned char *' lvalue Var 0x2180b9dbfa8 'p' 'const unsigned char *'
|   | | |   |   `-ImplicitCastExpr 0x2180b9e3ad0 <col:24> 'const unsigned char *' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x2180b9e3a98 <col:24> 'const unsigned char *' lvalue Var 0x2180b9dc028 'q' 'const unsigned char *'
|   | | |   `-IfStmt 0x2180b9e3d10 <line:601:13, line:605:13>
|   | | |     |-OpaqueValueExpr 0x2180b9e3cf8 <<invalid sloc>> '_Bool'
|   | | |     `-CompoundStmt 0x2180b9e3ce0 <line:601:77, line:605:13>
|   | | |       `-GotoStmt 0x2180b9e3cc8 <line:604:17, col:22> 'err' 0x2180b9e31e0
|   | | `-IfStmt 0x2180b9e3e00 <line:607:9, line:610:9>
|   | |   |-ImplicitCastExpr 0x2180b9e3d98 <line:607:13> 'char' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x2180b9e3d78 <col:13> 'char' lvalue Var 0x2180b9dc4c0 'sk_eoc' 'char'
|   | |   `-CompoundStmt 0x2180b9e3de8 <col:21, line:610:9>
|   | |     `-GotoStmt 0x2180b9e3dd0 <line:609:13, col:18> 'err' 0x2180b9e31e0
|   | `-IfStmt 0x2180b9e44b0 <line:611:12, line:630:5> has_else
|   |   |-OpaqueValueExpr 0x2180b9e4498 <<invalid sloc>> '_Bool'
|   |   |-CompoundStmt 0x2180b9e4160 <line:611:42, line:621:5>
|   |   | `-IfStmt 0x2180b9e4138 <line:616:9, line:620:21> has_else
|   |   |   |-UnaryOperator 0x2180b9e3fd0 <line:616:13, col:14> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x2180b9e3fb8 <col:14> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x2180b9e3f98 <col:14> 'int' lvalue Var 0x2180b9dbf10 'ret' 'int'
|   |   |   |-CompoundStmt 0x2180b9e4020 <col:19, line:619:9>
|   |   |   | `-GotoStmt 0x2180b9e4008 <line:618:13, col:18> 'err' 0x2180b9e31e0
|   |   |   `-IfStmt 0x2180b9e4120 <line:619:16, line:620:21>
|   |   |     |-BinaryOperator 0x2180b9e40b0 <line:619:20, col:28> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x2180b9e4098 <col:20> 'int' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x2180b9e4038 <col:20> 'int' lvalue Var 0x2180b9dbf10 'ret' 'int'
|   |   |     | `-UnaryOperator 0x2180b9e4080 <col:27, col:28> 'int' prefix '-'
|   |   |     |   `-IntegerLiteral 0x2180b9e4058 <col:28> 'int' 1
|   |   |     `-ReturnStmt 0x2180b9e4110 <line:620:13, col:21>
|   |   |       `-UnaryOperator 0x2180b9e40f8 <col:20, col:21> 'int' prefix '-'
|   |   |         `-IntegerLiteral 0x2180b9e40d0 <col:21> 'int' 1
|   |   `-CompoundStmt 0x2180b9e4480 <line:621:12, line:630:5>
|   |     `-IfStmt 0x2180b9e4458 <line:625:9, line:629:21> has_else
|   |       |-UnaryOperator 0x2180b9e42f0 <line:625:13, col:14> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x2180b9e42d8 <col:14> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x2180b9e42b8 <col:14> 'int' lvalue Var 0x2180b9dbf10 'ret' 'int'
|   |       |-CompoundStmt 0x2180b9e4340 <col:19, line:628:9>
|   |       | `-GotoStmt 0x2180b9e4328 <line:627:13, col:18> 'err' 0x2180b9e31e0
|   |       `-IfStmt 0x2180b9e4440 <line:628:16, line:629:21>
|   |         |-BinaryOperator 0x2180b9e43d0 <line:628:20, col:28> 'int' '=='
|   |         | |-ImplicitCastExpr 0x2180b9e43b8 <col:20> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x2180b9e4358 <col:20> 'int' lvalue Var 0x2180b9dbf10 'ret' 'int'
|   |         | `-UnaryOperator 0x2180b9e43a0 <col:27, col:28> 'int' prefix '-'
|   |         |   `-IntegerLiteral 0x2180b9e4378 <col:28> 'int' 1
|   |         `-ReturnStmt 0x2180b9e4430 <line:629:13, col:21>
|   |           `-UnaryOperator 0x2180b9e4418 <col:20, col:21> 'int' prefix '-'
|   |             `-IntegerLiteral 0x2180b9e43f0 <col:21> 'int' 1
|   |-BinaryOperator 0x2180b9e45a0 <line:632:5, col:11> 'const unsigned char *' '='
|   | |-UnaryOperator 0x2180b9e4550 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x2180b9e4538 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2180b9e4518 <col:6> 'const unsigned char **' lvalue ParmVar 0x2180b9db958 'in' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x2180b9e4588 <col:11> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2180b9e4568 <col:11> 'const unsigned char *' lvalue Var 0x2180b9dbfa8 'p' 'const unsigned char *'
|   |-ReturnStmt 0x2180b9e45e8 <line:633:5, col:12>
|   | `-IntegerLiteral 0x2180b9e45c0 <col:12> 'int' 1
|   `-LabelStmt 0x2180b9e4630 <line:635:2, line:636:12> 'err'
|     `-ReturnStmt 0x2180b9e4620 <col:5, col:12>
|       `-IntegerLiteral 0x2180b9e45f8 <col:12> 'int' 0
|-FunctionDecl 0x2180b9e4b20 <line:639:1, line:769:1> line:639:12 invalid asn1_d2i_ex_primitive 'int (int **, const unsigned char **, long, const int *, int, int, char, int *)' static
| |-ParmVarDecl 0x2180b9e46d0 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x2180b9e4758 <line:640:34, col:56> col:56 used in 'const unsigned char **'
| |-ParmVarDecl 0x2180b9e47d8 <col:60, col:65> col:65 used inlen 'long'
| |-ParmVarDecl 0x2180b9e4858 <line:641:34, col:51> col:51 invalid it 'const int *'
| |-ParmVarDecl 0x2180b9e48d8 <line:642:34, col:38> col:38 used tag 'int'
| |-ParmVarDecl 0x2180b9e4958 <col:43, col:47> col:47 used aclass 'int'
| |-ParmVarDecl 0x2180b9e49d0 <col:55, col:60> col:60 used opt 'char'
| |-ParmVarDecl 0x2180b9e4a50 <col:65, col:75> col:75 invalid ctx 'int *'
| `-CompoundStmt 0x2180b9e5898 <line:643:1, line:769:1>
|   |-DeclStmt 0x2180b9e4d58 <line:644:5, col:23>
|   | |-VarDecl 0x2180b9e4c30 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x2180b9e4c98 <col:15> 'int' 0
|   | `-VarDecl 0x2180b9e4cd8 <col:5, col:18> col:18 used utype 'int'
|   |-DeclStmt 0x2180b9e4df0 <line:645:5, col:14>
|   | `-VarDecl 0x2180b9e4d88 <col:5, col:10> col:10 used plen 'long'
|   |-DeclStmt 0x2180b9dcfb0 <line:646:5, col:33>
|   | |-VarDecl 0x2180b9e4e18 <col:5, col:10> col:10 used cst 'char'
|   | |-VarDecl 0x2180b9dce70 <col:5, col:15> col:15 used inf 'char'
|   | `-VarDecl 0x2180b9dcee8 <col:5, col:32> col:20 used free_cont 'char' cinit
|   |   `-ImplicitCastExpr 0x2180b9dcf78 <col:32> 'char' <IntegralCast>
|   |     `-IntegerLiteral 0x2180b9dcf50 <col:32> 'int' 0
|   |-DeclStmt 0x2180b9dd048 <line:647:5, col:27>
|   | `-VarDecl 0x2180b9dcfe0 <col:5, col:26> col:26 used p 'const unsigned char *'
|   |-DeclStmt 0x2180b9dd180 <line:649:5, col:37>
|   | `-VarDecl 0x2180b9dd078 <col:5, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> .//openssl//file_jk/before\crypto\asn1\tasn_dec.c:649:26 used cont 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x2180b9dd168 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x2180b9dd148 <col:16, col:25> 'void *'
|   |       `-CStyleCastExpr 0x2180b9dd120 <col:17, col:24> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x2180b9dd0e0 <col:24> 'int' 0
|   |-DeclStmt 0x2180b9dd218 <.//openssl//file_jk/before\crypto\asn1\tasn_dec.c:650:5, col:13>
|   | `-VarDecl 0x2180b9dd1b0 <col:5, col:10> col:10 used len 'long'
|   |-IfStmt 0x2180b9dd2b8 <line:651:5, line:654:5>
|   | |-OpaqueValueExpr 0x2180b9dd2a0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2180b9dd288 <line:651:16, line:654:5>
|   |   `-ReturnStmt 0x2180b9dd278 <line:653:9, col:16>
|   |     `-IntegerLiteral 0x2180b9dd250 <col:16> 'int' 0
|   |-IfStmt 0x2180b9dd458 <line:656:5, line:660:9> has_else
|   | |-OpaqueValueExpr 0x2180b9dd440 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x2180b9dd3f8 <line:656:42, line:659:5>
|   | | |-BinaryOperator 0x2180b9dd358 <line:657:9, col:17> 'int' '='
|   | | | |-DeclRefExpr 0x2180b9dd2d0 <col:9> 'int' lvalue Var 0x2180b9e4cd8 'utype' 'int'
|   | | | `-ImplicitCastExpr 0x2180b9dd340 <col:17> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2180b9dd308 <col:17> 'int' lvalue ParmVar 0x2180b9e48d8 'tag' 'int'
|   | | `-BinaryOperator 0x2180b9dd3d8 <line:658:9, col:16> 'int' '='
|   | |   |-DeclRefExpr 0x2180b9dd378 <col:9> 'int' lvalue ParmVar 0x2180b9e48d8 'tag' 'int'
|   | |   `-UnaryOperator 0x2180b9dd3c0 <col:15, col:16> 'int' prefix '-'
|   | |     `-IntegerLiteral 0x2180b9dd398 <col:16> 'int' 1
|   | `-NullStmt 0x2180b9dd438 <line:660:9>
|   |-IfStmt 0x2180b9ddcb0 <line:662:5, line:683:5>
|   | |-OpaqueValueExpr 0x2180b9ddc98 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2180b9ddc60 <line:662:30, line:683:5>
|   |   |-DeclStmt 0x2180b9dd520 <line:664:9, col:29>
|   |   | `-VarDecl 0x2180b9dd4b8 <col:9, col:23> col:23 used oclass 'unsigned char'
|   |   |-IfStmt 0x2180b9dd628 <line:665:9, line:668:9>
|   |   | |-BinaryOperator 0x2180b9dd598 <line:665:13, col:20> 'int' '>='
|   |   | | |-ImplicitCastExpr 0x2180b9dd580 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2180b9dd538 <col:13> 'int' lvalue ParmVar 0x2180b9e48d8 'tag' 'int'
|   |   | | `-IntegerLiteral 0x2180b9dd558 <col:20> 'int' 0
|   |   | `-CompoundStmt 0x2180b9dd610 <col:23, line:668:9>
|   |   |   `-ReturnStmt 0x2180b9dd600 <line:667:13, col:20>
|   |   |     `-IntegerLiteral 0x2180b9dd5d8 <col:20> 'int' 0
|   |   |-IfStmt 0x2180b9dd700 <line:669:9, line:673:9>
|   |   | |-ImplicitCastExpr 0x2180b9dd678 <line:669:13> 'char' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2180b9dd640 <col:13> 'char' lvalue ParmVar 0x2180b9e49d0 'opt' 'char'
|   |   | `-CompoundStmt 0x2180b9dd6e8 <col:18, line:673:9>
|   |   |   `-ReturnStmt 0x2180b9dd6d8 <line:672:13, col:20>
|   |   |     `-IntegerLiteral 0x2180b9dd6b0 <col:20> 'int' 0
|   |   |-BinaryOperator 0x2180b9dd7d0 <line:674:9, col:14> 'const unsigned char *' '='
|   |   | |-DeclRefExpr 0x2180b9dd718 <col:9> 'const unsigned char *' lvalue Var 0x2180b9dcfe0 'p' 'const unsigned char *'
|   |   | `-ImplicitCastExpr 0x2180b9dd7b8 <col:13, col:14> 'const unsigned char *' <LValueToRValue>
|   |   |   `-UnaryOperator 0x2180b9dd7a0 <col:13, col:14> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |   |     `-ImplicitCastExpr 0x2180b9dd788 <col:14> 'const unsigned char **' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x2180b9dd750 <col:14> 'const unsigned char **' lvalue ParmVar 0x2180b9e4758 'in' 'const unsigned char **'
|   |   `-IfStmt 0x2180b9ddc08 <line:677:9, line:680:9>
|   |     |-UnaryOperator 0x2180b9ddb80 <line:677:13, col:14> 'int' prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x2180b9ddb68 <col:14> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2180b9ddb48 <col:14> 'int' lvalue Var 0x2180b9e4c30 'ret' 'int'
|   |     `-CompoundStmt 0x2180b9ddbf0 <col:19, line:680:9>
|   |       `-ReturnStmt 0x2180b9ddbe0 <line:679:13, col:20>
|   |         `-IntegerLiteral 0x2180b9ddbb8 <col:20> 'int' 0
|   |-IfStmt 0x2180b9dde28 <line:684:5, line:687:5>
|   | |-BinaryOperator 0x2180b9ddd40 <line:684:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x2180b9ddd28 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2180b9ddcc8 <col:9> 'int' lvalue ParmVar 0x2180b9e48d8 'tag' 'int'
|   | | `-UnaryOperator 0x2180b9ddd10 <col:16, col:17> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x2180b9ddce8 <col:17> 'int' 1
|   | `-CompoundStmt 0x2180b9dde10 <col:20, line:687:5>
|   |   `-BinaryOperator 0x2180b9dddb8 <line:685:9, col:15> 'int' '='
|   |     |-DeclRefExpr 0x2180b9ddd60 <col:9> 'int' lvalue ParmVar 0x2180b9e48d8 'tag' 'int'
|   |     `-ImplicitCastExpr 0x2180b9ddda0 <col:15> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x2180b9ddd80 <col:15> 'int' lvalue Var 0x2180b9e4cd8 'utype' 'int'
|   |-BinaryOperator 0x2180b9e0f18 <line:688:5, col:10> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x2180b9dde40 <col:5> 'const unsigned char *' lvalue Var 0x2180b9dcfe0 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x2180b9e0f00 <col:9, col:10> 'const unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x2180b9e0ee8 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x2180b9e0ed0 <col:10> 'const unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x2180b9e0eb0 <col:10> 'const unsigned char **' lvalue ParmVar 0x2180b9e4758 'in' 'const unsigned char **'
|   |-IfStmt 0x2180b9e13d0 <line:692:5, line:696:17> has_else
|   | |-UnaryOperator 0x2180b9e1248 <line:692:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x2180b9e1230 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2180b9e1210 <col:10> 'int' lvalue Var 0x2180b9e4c30 'ret' 'int'
|   | |-CompoundStmt 0x2180b9e12b8 <col:15, line:695:5>
|   | | `-ReturnStmt 0x2180b9e12a8 <line:694:9, col:16>
|   | |   `-IntegerLiteral 0x2180b9e1280 <col:16> 'int' 0
|   | `-IfStmt 0x2180b9e13b8 <line:695:12, line:696:17>
|   |   |-BinaryOperator 0x2180b9e1348 <line:695:16, col:24> 'int' '=='
|   |   | |-ImplicitCastExpr 0x2180b9e1330 <col:16> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2180b9e12d0 <col:16> 'int' lvalue Var 0x2180b9e4c30 'ret' 'int'
|   |   | `-UnaryOperator 0x2180b9e1318 <col:23, col:24> 'int' prefix '-'
|   |   |   `-IntegerLiteral 0x2180b9e12f0 <col:24> 'int' 1
|   |   `-ReturnStmt 0x2180b9e13a8 <line:696:9, col:17>
|   |     `-UnaryOperator 0x2180b9e1390 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x2180b9e1368 <col:17> 'int' 1
|   |-BinaryOperator 0x2180b9e1440 <line:697:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x2180b9e13f8 <col:5> 'int' lvalue Var 0x2180b9e4c30 'ret' 'int'
|   | `-IntegerLiteral 0x2180b9e1418 <col:11> 'int' 0
|   |-IfStmt 0x2180b9e54d0 <line:699:5, line:756:5> has_else
|   | |-OpaqueValueExpr 0x2180b9e54b8 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x2180b9e1c48 <line:700:62, line:725:5>
|   | | |-IfStmt 0x2180b9e1608 <line:705:9, line:713:9> has_else
|   | | | |-OpaqueValueExpr 0x2180b9e15f0 <<invalid sloc>> '_Bool'
|   | | | |-CompoundStmt 0x2180b9e1508 <line:705:36, line:707:9>
|   | | | `-IfStmt 0x2180b9e15d8 <line:709:14, line:713:9>
|   | | |   |-UnaryOperator 0x2180b9e1550 <line:709:18, col:19> 'int' prefix '!' cannot overflow
|   | | |   | `-ImplicitCastExpr 0x2180b9e1538 <col:19> 'char' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x2180b9e1518 <col:19> 'char' lvalue Var 0x2180b9e4e18 'cst' 'char'
|   | | |   `-CompoundStmt 0x2180b9e15c0 <col:24, line:713:9>
|   | | |     `-ReturnStmt 0x2180b9e15b0 <line:712:13, col:20>
|   | | |       `-IntegerLiteral 0x2180b9e1588 <col:20> 'int' 0
|   | | |-BinaryOperator 0x2180b9e16d0 <line:715:9, col:17> 'const unsigned char *' '='
|   | | | |-DeclRefExpr 0x2180b9e1630 <col:9> 'const unsigned char *' lvalue Var 0x2180b9dd078 'cont' 'const unsigned char *'
|   | | | `-ImplicitCastExpr 0x2180b9e16b8 <col:16, col:17> 'const unsigned char *' <LValueToRValue>
|   | | |   `-UnaryOperator 0x2180b9e16a0 <col:16, col:17> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x2180b9e1688 <col:17> 'const unsigned char **' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x2180b9e1668 <col:17> 'const unsigned char **' lvalue ParmVar 0x2180b9e4758 'in' 'const unsigned char **'
|   | | `-IfStmt 0x2180b9e1c20 <line:717:9, line:724:9> has_else
|   | |   |-ImplicitCastExpr 0x2180b9e1710 <line:717:13> 'char' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x2180b9e16f0 <col:13> 'char' lvalue Var 0x2180b9dce70 'inf' 'char'
|   | |   |-CompoundStmt 0x2180b9e1a00 <col:18, line:721:9>
|   | |   | |-IfStmt 0x2180b9e18e8 <line:718:13, line:719:22>
|   | |   | | |-UnaryOperator 0x2180b9e1868 <line:718:17, col:45> 'int' prefix '!' cannot overflow
|   | |   | | | `-CallExpr 0x2180b9e1800 <col:18, col:45> 'int'
|   | |   | | |   |-ImplicitCastExpr 0x2180b9e17e8 <col:18> 'int (*)(const unsigned char **, long, char)' <FunctionToPointerDecay>
|   | |   | | |   | `-DeclRefExpr 0x2180b9e1728 <col:18> 'int (const unsigned char **, long, char)' Function 0x2180b9d3ce0 'asn1_find_end' 'int (const unsigned char **, long, char)'
|   | |   | | |   |-UnaryOperator 0x2180b9e1768 <col:32, col:33> 'const unsigned char **' prefix '&' cannot overflow
|   | |   | | |   | `-DeclRefExpr 0x2180b9e1748 <col:33> 'const unsigned char *' lvalue Var 0x2180b9dcfe0 'p' 'const unsigned char *'
|   | |   | | |   |-ImplicitCastExpr 0x2180b9e1838 <col:36> 'long' <LValueToRValue>
|   | |   | | |   | `-DeclRefExpr 0x2180b9e1780 <col:36> 'long' lvalue Var 0x2180b9e4d88 'plen' 'long'
|   | |   | | |   `-ImplicitCastExpr 0x2180b9e1850 <col:42> 'char' <LValueToRValue>
|   | |   | | |     `-DeclRefExpr 0x2180b9e17a0 <col:42> 'char' lvalue Var 0x2180b9dce70 'inf' 'char'
|   | |   | | `-GotoStmt 0x2180b9e18d0 <line:719:17, col:22> 'err' 0x2180b9e1880
|   | |   | `-BinaryOperator 0x2180b9e19e0 <line:720:13, col:23> 'long' '='
|   | |   |   |-DeclRefExpr 0x2180b9e1900 <col:13> 'long' lvalue Var 0x2180b9dd1b0 'len' 'long'
|   | |   |   `-ImplicitCastExpr 0x2180b9e19c8 <col:19, col:23> 'long' <IntegralCast>
|   | |   |     `-BinaryOperator 0x2180b9e19a8 <col:19, col:23> 'long long' '-'
|   | |   |       |-ImplicitCastExpr 0x2180b9e1978 <col:19> 'const unsigned char *' <LValueToRValue>
|   | |   |       | `-DeclRefExpr 0x2180b9e1938 <col:19> 'const unsigned char *' lvalue Var 0x2180b9dcfe0 'p' 'const unsigned char *'
|   | |   |       `-ImplicitCastExpr 0x2180b9e1990 <col:23> 'const unsigned char *' <LValueToRValue>
|   | |   |         `-DeclRefExpr 0x2180b9e1958 <col:23> 'const unsigned char *' lvalue Var 0x2180b9dd078 'cont' 'const unsigned char *'
|   | |   `-CompoundStmt 0x2180b9e1c00 <line:721:16, line:724:9>
|   | |     |-BinaryOperator 0x2180b9e1b58 <line:722:13, col:30> 'long' '='
|   | |     | |-DeclRefExpr 0x2180b9e1a20 <col:13> 'long' lvalue Var 0x2180b9dd1b0 'len' 'long'
|   | |     | `-ImplicitCastExpr 0x2180b9e1b40 <col:19, col:30> 'long' <IntegralCast>
|   | |     |   `-BinaryOperator 0x2180b9e1b20 <col:19, col:30> 'long long' '+'
|   | |     |     |-BinaryOperator 0x2180b9e1ab0 <col:19, col:23> 'long long' '-'
|   | |     |     | |-ImplicitCastExpr 0x2180b9e1a80 <col:19> 'const unsigned char *' <LValueToRValue>
|   | |     |     | | `-DeclRefExpr 0x2180b9e1a40 <col:19> 'const unsigned char *' lvalue Var 0x2180b9dcfe0 'p' 'const unsigned char *'
|   | |     |     | `-ImplicitCastExpr 0x2180b9e1a98 <col:23> 'const unsigned char *' <LValueToRValue>
|   | |     |     |   `-DeclRefExpr 0x2180b9e1a60 <col:23> 'const unsigned char *' lvalue Var 0x2180b9dd078 'cont' 'const unsigned char *'
|   | |     |     `-ImplicitCastExpr 0x2180b9e1b08 <col:30> 'long long' <IntegralCast>
|   | |     |       `-ImplicitCastExpr 0x2180b9e1af0 <col:30> 'long' <LValueToRValue>
|   | |     |         `-DeclRefExpr 0x2180b9e1ad0 <col:30> 'long' lvalue Var 0x2180b9e4d88 'plen' 'long'
|   | |     `-CompoundAssignOperator 0x2180b9e1bd0 <line:723:13, col:18> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | |       |-DeclRefExpr 0x2180b9e1b78 <col:13> 'const unsigned char *' lvalue Var 0x2180b9dcfe0 'p' 'const unsigned char *'
|   | |       `-ImplicitCastExpr 0x2180b9e1bb8 <col:18> 'long' <LValueToRValue>
|   | |         `-DeclRefExpr 0x2180b9e1b98 <col:18> 'long' lvalue Var 0x2180b9e4d88 'plen' 'long'
|   | `-IfStmt 0x2180b9e5490 <line:725:12, line:756:5> has_else
|   |   |-ImplicitCastExpr 0x2180b9e1c90 <line:725:16> 'char' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2180b9e1c70 <col:16> 'char' lvalue Var 0x2180b9e4e18 'cst' 'char'
|   |   |-CompoundStmt 0x2180b9e52c0 <col:21, line:752:5>
|   |   | |-IfStmt 0x2180b9e1dd0 <line:726:9, line:731:9>
|   |   | | |-OpaqueValueExpr 0x2180b9e1db8 <<invalid sloc>> '_Bool'
|   |   | | `-CompoundStmt 0x2180b9e1da0 <line:728:44, line:731:9>
|   |   | |   `-ReturnStmt 0x2180b9e1d90 <line:730:13, col:20>
|   |   | |     `-IntegerLiteral 0x2180b9e1d68 <col:20> 'int' 0
|   |   | |-BinaryOperator 0x2180b9e1e60 <line:734:9, col:21> 'char' '='
|   |   | | |-DeclRefExpr 0x2180b9e1de8 <col:9> 'char' lvalue Var 0x2180b9dcee8 'free_cont' 'char'
|   |   | | `-ImplicitCastExpr 0x2180b9e1e48 <col:21> 'char' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x2180b9e1e20 <col:21> 'int' 1
|   |   | |-IfStmt 0x2180b9e4ff8 <line:741:9, line:743:9>
|   |   | | |-OpaqueValueExpr 0x2180b9e4fe0 <<invalid sloc>> '_Bool'
|   |   | | `-CompoundStmt 0x2180b9e4fc8 <line:741:74, line:743:9>
|   |   | |   `-GotoStmt 0x2180b9e4fb0 <line:742:13, col:18> 'err' 0x2180b9e1880
|   |   | `-IfStmt 0x2180b9e5240 <line:746:9, line:749:9>
|   |   |   |-OpaqueValueExpr 0x2180b9e5228 <<invalid sloc>> '_Bool'
|   |   |   `-CompoundStmt 0x2180b9e5210 <line:746:49, line:749:9>
|   |   |     `-GotoStmt 0x2180b9e51f8 <line:748:13, col:18> 'err' 0x2180b9e1880
|   |   `-CompoundStmt 0x2180b9e5468 <line:752:12, line:756:5>
|   |     |-BinaryOperator 0x2180b9e5348 <line:753:9, col:16> 'const unsigned char *' '='
|   |     | |-DeclRefExpr 0x2180b9e52f0 <col:9> 'const unsigned char *' lvalue Var 0x2180b9dd078 'cont' 'const unsigned char *'
|   |     | `-ImplicitCastExpr 0x2180b9e5330 <col:16> 'const unsigned char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2180b9e5310 <col:16> 'const unsigned char *' lvalue Var 0x2180b9dcfe0 'p' 'const unsigned char *'
|   |     |-BinaryOperator 0x2180b9e53c0 <line:754:9, col:15> 'long' '='
|   |     | |-DeclRefExpr 0x2180b9e5368 <col:9> 'long' lvalue Var 0x2180b9dd1b0 'len' 'long'
|   |     | `-ImplicitCastExpr 0x2180b9e53a8 <col:15> 'long' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2180b9e5388 <col:15> 'long' lvalue Var 0x2180b9e4d88 'plen' 'long'
|   |     `-CompoundAssignOperator 0x2180b9e5438 <line:755:9, col:14> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |       |-DeclRefExpr 0x2180b9e53e0 <col:9> 'const unsigned char *' lvalue Var 0x2180b9dcfe0 'p' 'const unsigned char *'
|   |       `-ImplicitCastExpr 0x2180b9e5420 <col:14> 'long' <LValueToRValue>
|   |         `-DeclRefExpr 0x2180b9e5400 <col:14> 'long' lvalue Var 0x2180b9e4d88 'plen' 'long'
|   |-IfStmt 0x2180b9e55c0 <line:760:5, line:761:14>
|   | |-OpaqueValueExpr 0x2180b9e55a8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2180b9e5590 <col:9, col:14> 'err' 0x2180b9e1880
|   |-BinaryOperator 0x2180b9e5660 <line:763:5, col:11> 'const unsigned char *' '='
|   | |-UnaryOperator 0x2180b9e5610 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x2180b9e55f8 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2180b9e55d8 <col:6> 'const unsigned char **' lvalue ParmVar 0x2180b9e4758 'in' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x2180b9e5648 <col:11> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2180b9e5628 <col:11> 'const unsigned char *' lvalue Var 0x2180b9dcfe0 'p' 'const unsigned char *'
|   |-BinaryOperator 0x2180b9e56c8 <line:764:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x2180b9e5680 <col:5> 'int' lvalue Var 0x2180b9e4c30 'ret' 'int'
|   | `-IntegerLiteral 0x2180b9e56a0 <col:11> 'int' 1
|   |-LabelStmt 0x2180b9e5838 <line:765:2, col:5> 'err'
|   | `-NullStmt 0x2180b9e5830 <col:5>
|   `-ReturnStmt 0x2180b9e5888 <line:768:5, col:12>
|     `-ImplicitCastExpr 0x2180b9e5870 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2180b9e5850 <col:12> 'int' lvalue Var 0x2180b9e4c30 'ret' 'int'
|-FunctionDecl 0x2180b9e5ca0 <line:773:1, line:907:1> line:773:12 invalid asn1_ex_c2i 'int (int **, const unsigned char *, int, int, char *, const int *)' static
| |-ParmVarDecl 0x2180b9e5960 <col:24, col:37> col:37 invalid pval 'int **'
| |-ParmVarDecl 0x2180b9e59e0 <col:43, col:64> col:64 used cont 'const unsigned char *'
| |-ParmVarDecl 0x2180b9e5a60 <col:70, col:74> col:74 used len 'int'
| |-ParmVarDecl 0x2180b9e5ae0 <line:774:24, col:28> col:28 used utype 'int'
| |-ParmVarDecl 0x2180b9e5b60 <col:35, col:41> col:41 used free_cont 'char *'
| |-ParmVarDecl 0x2180b9e5be0 <col:52, col:69> col:69 invalid it 'const int *'
| `-CompoundStmt 0x2180b9e8a40 <line:775:1, line:907:1>
|   |-DeclStmt 0x2180b9ddf10 <line:779:5, col:16>
|   | `-VarDecl 0x2180b9dde80 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x2180b9ddee8 <col:15> 'int' 0
|   |-DeclStmt 0x2180b9ddfa8 <line:780:5, col:35>
|   | `-VarDecl 0x2180b9ddf40 <col:5, col:33> col:33 invalid pf 'const int *'
|   |-IfStmt 0x2180b9de598 <line:787:5, line:800:5>
|   | |-OpaqueValueExpr 0x2180b9de580 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2180b9de568 <line:787:34, line:800:5>
|   |   `-IfStmt 0x2180b9de368 <line:788:9, line:794:13> has_else
|   |     |-OpaqueValueExpr 0x2180b9de350 <<invalid sloc>> '_Bool'
|   |     |-CompoundStmt 0x2180b9de330 <line:788:21, line:793:9>
|   |     | `-IfStmt 0x2180b9de318 <line:790:13, line:791:22>
|   |     |   |-OpaqueValueExpr 0x2180b9de300 <<invalid sloc>> '_Bool'
|   |     |   `-GotoStmt 0x2180b9de2e8 <col:17, col:22> 'err' 0x2180b9de298
|   |     `-NullStmt 0x2180b9de348 <line:794:13>
|   |-SwitchStmt 0x2180b9de5e8 <line:801:5, line:894:5>
|   | |-ImplicitCastExpr 0x2180b9de5d0 <line:801:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x2180b9de5b0 <col:13> 'int' lvalue ParmVar 0x2180b9e5ae0 'utype' 'int'
|   | `-CompoundStmt 0x2180b9e8620 <col:20, line:894:5>
|   |   |-IfStmt 0x2180b9de690 <line:803:9, line:804:18>
|   |   | |-OpaqueValueExpr 0x2180b9de678 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x2180b9de660 <col:13, col:18> 'err' 0x2180b9de298
|   |   |-BreakStmt 0x2180b9de6a8 <line:805:9>
|   |   |-IfStmt 0x2180b9de738 <line:808:9, line:811:9>
|   |   | |-ImplicitCastExpr 0x2180b9de6d0 <line:808:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2180b9de6b0 <col:13> 'int' lvalue ParmVar 0x2180b9e5a60 'len' 'int'
|   |   | `-CompoundStmt 0x2180b9de720 <col:18, line:811:9>
|   |   |   `-GotoStmt 0x2180b9de708 <line:810:13, col:18> 'err' 0x2180b9de298
|   |   |-BreakStmt 0x2180b9de750 <line:813:9>
|   |   |-IfStmt 0x2180b9de888 <line:816:9, line:823:9> has_else
|   |   | |-BinaryOperator 0x2180b9de7b8 <line:816:13, col:20> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x2180b9de7a0 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2180b9de758 <col:13> 'int' lvalue ParmVar 0x2180b9e5a60 'len' 'int'
|   |   | | `-IntegerLiteral 0x2180b9de778 <col:20> 'int' 1
|   |   | |-CompoundStmt 0x2180b9de810 <col:23, line:819:9>
|   |   | | `-GotoStmt 0x2180b9de7f8 <line:818:13, col:18> 'err' 0x2180b9de298
|   |   | `-CompoundStmt 0x2180b9de878 <line:819:16, line:823:9>
|   |   |-BreakStmt 0x2180b9de8b0 <line:824:9>
|   |   |-IfStmt 0x2180b9de940 <line:827:9, line:828:18>
|   |   | |-OpaqueValueExpr 0x2180b9de928 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x2180b9de910 <col:13, col:18> 'err' 0x2180b9de298
|   |   |-BreakStmt 0x2180b9de958 <line:829:9>
|   |   |-IfStmt 0x2180b9de9e8 <line:834:9, line:835:18>
|   |   | |-OpaqueValueExpr 0x2180b9de9d0 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x2180b9de9b8 <col:13, col:18> 'err' 0x2180b9de298
|   |   |-BreakStmt 0x2180b9dea20 <line:838:9>
|   |   |-DefaultStmt 0x2180b9deb68 <line:857:5, line:861:9>
|   |   | `-IfStmt 0x2180b9deb50 <line:858:9, line:861:9>
|   |   |   |-OpaqueValueExpr 0x2180b9deb38 <<invalid sloc>> '_Bool'
|   |   |   `-CompoundStmt 0x2180b9deb20 <line:858:53, line:861:9>
|   |   |     `-GotoStmt 0x2180b9deb08 <line:860:13, col:18> 'err' 0x2180b9de298
|   |   |-IfStmt 0x2180b9decb0 <line:862:9, line:866:9>
|   |   | |-OpaqueValueExpr 0x2180b9dec98 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x2180b9dec80 <line:862:59, line:866:9>
|   |   |   `-GotoStmt 0x2180b9dec68 <line:865:13, col:18> 'err' 0x2180b9de298
|   |   |-IfStmt 0x2180b9e8060 <line:868:9, line:878:9> has_else
|   |   | |-OpaqueValueExpr 0x2180b9e8048 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x2180b9e8000 <line:868:21, line:875:9>
|   |   | | `-IfStmt 0x2180b9e7fe8 <line:870:13, line:873:13>
|   |   | |   |-OpaqueValueExpr 0x2180b9e7fd0 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x2180b9e7fb8 <line:870:31, line:873:13>
|   |   | |     `-GotoStmt 0x2180b9e7fa0 <line:872:17, col:22> 'err' 0x2180b9de298
|   |   | `-CompoundStmt 0x2180b9e8038 <line:875:16, line:878:9>
|   |   |-IfStmt 0x2180b9e85f0 <line:880:9, line:892:9> has_else
|   |   | |-ImplicitCastExpr 0x2180b9e80d8 <line:880:13, col:14> 'char' <LValueToRValue>
|   |   | | `-UnaryOperator 0x2180b9e80c0 <col:13, col:14> 'char' lvalue prefix '*' cannot overflow
|   |   | |   `-ImplicitCastExpr 0x2180b9e80a8 <col:14> 'char *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x2180b9e8088 <col:14> 'char *' lvalue ParmVar 0x2180b9e5b60 'free_cont' 'char *'
|   |   | |-CompoundStmt 0x2180b9e8258 <col:25, line:885:9>
|   |   | | `-BinaryOperator 0x2180b9e8238 <line:884:13, col:26> 'char' '='
|   |   | |   |-UnaryOperator 0x2180b9e81e0 <col:13, col:14> 'char' lvalue prefix '*' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x2180b9e81c8 <col:14> 'char *' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x2180b9e81a8 <col:14> 'char *' lvalue ParmVar 0x2180b9e5b60 'free_cont' 'char *'
|   |   | |   `-ImplicitCastExpr 0x2180b9e8220 <col:26> 'char' <IntegralCast>
|   |   | |     `-IntegerLiteral 0x2180b9e81f8 <col:26> 'int' 0
|   |   | `-CompoundStmt 0x2180b9e85d8 <line:885:16, line:892:9>
|   |   |   `-IfStmt 0x2180b9e85c0 <line:886:13, line:891:13>
|   |   |     |-OpaqueValueExpr 0x2180b9e85a8 <<invalid sloc>> '_Bool'
|   |   |     `-CompoundStmt 0x2180b9e8590 <line:886:52, line:891:13>
|   |   |       `-GotoStmt 0x2180b9e8578 <line:890:17, col:22> 'err' 0x2180b9de298
|   |   `-BreakStmt 0x2180b9e8618 <line:893:9>
|   |-BinaryOperator 0x2180b9e87b0 <line:899:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x2180b9e8750 <col:5> 'int' lvalue Var 0x2180b9dde80 'ret' 'int'
|   | `-IntegerLiteral 0x2180b9e8788 <col:11> 'int' 1
|   |-LabelStmt 0x2180b9e89e0 <line:900:2, line:905:5> 'err'
|   | `-IfStmt 0x2180b9e89c8 <line:901:5, line:905:5>
|   |   |-UnaryOperator 0x2180b9e8808 <line:901:9, col:10> 'int' prefix '!' cannot overflow
|   |   | `-ImplicitCastExpr 0x2180b9e87f0 <col:10> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2180b9e87d0 <col:10> 'int' lvalue Var 0x2180b9dde80 'ret' 'int'
|   |   `-CompoundStmt 0x2180b9e89b8 <col:15, line:905:5>
|   `-ReturnStmt 0x2180b9e8a30 <line:906:5, col:12>
|     `-ImplicitCastExpr 0x2180b9e8a18 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2180b9e89f8 <col:12> 'int' lvalue Var 0x2180b9dde80 'ret' 'int'
|-FunctionDecl 0x2180b9e8c90 prev 0x2180b9d3ce0 <line:916:1, line:965:1> line:916:12 used asn1_find_end 'int (const unsigned char **, long, char)' static
| |-ParmVarDecl 0x2180b9e8aa8 <col:26, col:48> col:48 used in 'const unsigned char **'
| |-ParmVarDecl 0x2180b9e8b28 <col:52, col:57> col:57 used len 'long'
| |-ParmVarDecl 0x2180b9e8ba0 <col:62, col:67> col:67 used inf 'char'
| `-CompoundStmt 0x2180b9eada8 <line:917:1, line:965:1>
|   |-DeclStmt 0x2180b9e8dc8 <line:919:5, col:14>
|   | `-VarDecl 0x2180b9e8d60 <col:5, col:10> col:10 used plen 'long'
|   |-DeclStmt 0x2180b9e9fc0 <line:920:5, col:37>
|   | |-VarDecl 0x2180b9e8df8 <col:5, col:31> col:26 used p 'const unsigned char *' cinit
|   | | `-ImplicitCastExpr 0x2180b9e8eb0 <col:30, col:31> 'const unsigned char *' <LValueToRValue>
|   | |   `-UnaryOperator 0x2180b9e8e98 <col:30, col:31> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x2180b9e8e80 <col:31> 'const unsigned char **' <LValueToRValue>
|   | |       `-DeclRefExpr 0x2180b9e8e60 <col:31> 'const unsigned char **' lvalue ParmVar 0x2180b9e8aa8 'in' 'const unsigned char **'
|   | `-VarDecl 0x2180b9e9f40 <col:5, col:36> col:36 used q 'const unsigned char *'
|   |-IfStmt 0x2180b9ea180 <line:922:5, line:925:5>
|   | |-BinaryOperator 0x2180b9ea050 <line:922:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x2180b9ea038 <col:9> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x2180b9ea020 <col:9> 'char' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2180b9e9fd8 <col:9> 'char' lvalue ParmVar 0x2180b9e8ba0 'inf' 'char'
|   | | `-IntegerLiteral 0x2180b9e9ff8 <col:16> 'int' 0
|   | `-CompoundStmt 0x2180b9ea160 <col:19, line:925:5>
|   |   |-CompoundAssignOperator 0x2180b9ea0f8 <line:923:9, col:16> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   | |-UnaryOperator 0x2180b9ea0a8 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x2180b9ea090 <col:10> 'const unsigned char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2180b9ea070 <col:10> 'const unsigned char **' lvalue ParmVar 0x2180b9e8aa8 'in' 'const unsigned char **'
|   |   | `-ImplicitCastExpr 0x2180b9ea0e0 <col:16> 'long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2180b9ea0c0 <col:16> 'long' lvalue ParmVar 0x2180b9e8b28 'len' 'long'
|   |   `-ReturnStmt 0x2180b9ea150 <line:924:9, col:16>
|   |     `-IntegerLiteral 0x2180b9ea128 <col:16> 'int' 1
|   |-WhileStmt 0x2180b9eac10 <line:933:5, line:958:5>
|   | |-BinaryOperator 0x2180b9ea238 <line:933:12, col:18> 'int' '>'
|   | | |-ImplicitCastExpr 0x2180b9ea208 <col:12> 'long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2180b9ea1c0 <col:12> 'long' lvalue ParmVar 0x2180b9e8b28 'len' 'long'
|   | | `-ImplicitCastExpr 0x2180b9ea220 <col:18> 'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x2180b9ea1e0 <col:18> 'int' 0
|   | `-CompoundStmt 0x2180b9eabd8 <col:21, line:958:5>
|   |   |-IfStmt 0x2180b9ea468 <line:934:9, line:940:9>
|   |   | |-CallExpr 0x2180b9ea300 <line:934:13, col:35> 'int'
|   |   | | |-ImplicitCastExpr 0x2180b9ea2e8 <col:13> 'int (*)(const unsigned char **, long)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x2180b9ea258 <col:13> 'int (const unsigned char **, long)' Function 0x2180b9d39d0 'asn1_check_eoc' 'int (const unsigned char **, long)'
|   |   | | |-UnaryOperator 0x2180b9ea2b0 <col:28, col:29> 'const unsigned char **' prefix '&' cannot overflow
|   |   | | | `-DeclRefExpr 0x2180b9ea278 <col:29> 'const unsigned char *' lvalue Var 0x2180b9e8df8 'p' 'const unsigned char *'
|   |   | | `-ImplicitCastExpr 0x2180b9ea330 <col:32> 'long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2180b9ea2c8 <col:32> 'long' lvalue ParmVar 0x2180b9e8b28 'len' 'long'
|   |   | `-CompoundStmt 0x2180b9ea440 <col:38, line:940:9>
|   |   |   |-IfStmt 0x2180b9ea390 <line:936:13, line:937:17>
|   |   |   | |-OpaqueValueExpr 0x2180b9ea378 <<invalid sloc>> '_Bool'
|   |   |   | `-BreakStmt 0x2180b9ea370 <col:17>
|   |   |   |-CompoundAssignOperator 0x2180b9ea408 <line:938:13, col:20> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   |   |   | |-DeclRefExpr 0x2180b9ea3a8 <col:13> 'long' lvalue ParmVar 0x2180b9e8b28 'len' 'long'
|   |   |   | `-ImplicitCastExpr 0x2180b9ea3f0 <col:20> 'long' <IntegralCast>
|   |   |   |   `-IntegerLiteral 0x2180b9ea3c8 <col:20> 'int' 2
|   |   |   `-ContinueStmt 0x2180b9ea438 <line:939:13>
|   |   |-BinaryOperator 0x2180b9ea4f0 <line:941:9, col:13> 'const unsigned char *' '='
|   |   | |-DeclRefExpr 0x2180b9ea480 <col:9> 'const unsigned char *' lvalue Var 0x2180b9e9f40 'q' 'const unsigned char *'
|   |   | `-ImplicitCastExpr 0x2180b9ea4d8 <col:13> 'const unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2180b9ea4b8 <col:13> 'const unsigned char *' lvalue Var 0x2180b9e8df8 'p' 'const unsigned char *'
|   |   |-IfStmt 0x2180b9ea928 <line:943:9, line:947:9>
|   |   | |-OpaqueValueExpr 0x2180b9ea910 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x2180b9ea8f8 <line:944:47, line:947:9>
|   |   |   `-ReturnStmt 0x2180b9ea8e8 <line:946:13, col:20>
|   |   |     `-IntegerLiteral 0x2180b9ea8c0 <col:20> 'int' 0
|   |   |-IfStmt 0x2180b9eaad0 <line:948:9, line:956:9> has_else
|   |   | |-ImplicitCastExpr 0x2180b9ea960 <line:948:13> 'char' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2180b9ea940 <col:13> 'char' lvalue ParmVar 0x2180b9e8ba0 'inf' 'char'
|   |   | |-CompoundStmt 0x2180b9eaa18 <col:18, line:954:9>
|   |   | | `-IfStmt 0x2180b9eaa00 <line:949:13, line:952:13>
|   |   | |   |-OpaqueValueExpr 0x2180b9ea9e8 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x2180b9ea9d0 <line:949:45, line:952:13>
|   |   | |     `-ReturnStmt 0x2180b9ea9c0 <line:951:17, col:24>
|   |   | |       `-IntegerLiteral 0x2180b9ea998 <col:24> 'int' 0
|   |   | `-CompoundStmt 0x2180b9eaab8 <line:954:16, line:956:9>
|   |   |   `-CompoundAssignOperator 0x2180b9eaa88 <line:955:13, col:18> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   |     |-DeclRefExpr 0x2180b9eaa30 <col:13> 'const unsigned char *' lvalue Var 0x2180b9e8df8 'p' 'const unsigned char *'
|   |   |     `-ImplicitCastExpr 0x2180b9eaa70 <col:18> 'long' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x2180b9eaa50 <col:18> 'long' lvalue Var 0x2180b9e8d60 'plen' 'long'
|   |   `-CompoundAssignOperator 0x2180b9eaba8 <line:957:9, col:20> 'long' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   |     |-DeclRefExpr 0x2180b9eaaf8 <col:9> 'long' lvalue ParmVar 0x2180b9e8b28 'len' 'long'
|   |     `-BinaryOperator 0x2180b9eab88 <col:16, col:20> 'long long' '-'
|   |       |-ImplicitCastExpr 0x2180b9eab58 <col:16> 'const unsigned char *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x2180b9eab18 <col:16> 'const unsigned char *' lvalue Var 0x2180b9e8df8 'p' 'const unsigned char *'
|   |       `-ImplicitCastExpr 0x2180b9eab70 <col:20> 'const unsigned char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x2180b9eab38 <col:20> 'const unsigned char *' lvalue Var 0x2180b9e9f40 'q' 'const unsigned char *'
|   |-IfStmt 0x2180b9eacb0 <line:959:5, line:962:5>
|   | |-OpaqueValueExpr 0x2180b9eac98 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2180b9eac80 <line:959:23, line:962:5>
|   |   `-ReturnStmt 0x2180b9eac70 <line:961:9, col:16>
|   |     `-IntegerLiteral 0x2180b9eac48 <col:16> 'int' 0
|   |-BinaryOperator 0x2180b9ead50 <line:963:5, col:11> 'const unsigned char *' '='
|   | |-UnaryOperator 0x2180b9ead00 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x2180b9eace8 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2180b9eacc8 <col:6> 'const unsigned char **' lvalue ParmVar 0x2180b9e8aa8 'in' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x2180b9ead38 <col:11> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2180b9ead18 <col:11> 'const unsigned char *' lvalue Var 0x2180b9e8df8 'p' 'const unsigned char *'
|   `-ReturnStmt 0x2180b9ead98 <line:964:5, col:12>
|     `-IntegerLiteral 0x2180b9ead70 <col:12> 'int' 1
|-FunctionDecl 0x2180b9e91f0 <line:983:1, line:1038:1> line:983:12 invalid asn1_collect 'int (int *, const unsigned char **, long, char, int, int, int)' static
| |-ParmVarDecl 0x2180b9eae08 <col:25, col:34> col:34 invalid buf 'int *'
| |-ParmVarDecl 0x2180b9eae90 <col:39, col:61> col:61 used in 'const unsigned char **'
| |-ParmVarDecl 0x2180b9e8f30 <col:65, col:70> col:70 used len 'long'
| |-ParmVarDecl 0x2180b9e8fa8 <line:984:25, col:30> col:30 used inf 'char'
| |-ParmVarDecl 0x2180b9e9028 <col:35, col:39> col:39 used tag 'int'
| |-ParmVarDecl 0x2180b9e90a8 <col:44, col:48> col:48 used aclass 'int'
| |-ParmVarDecl 0x2180b9e9128 <col:56, col:60> col:60 used depth 'int'
| `-CompoundStmt 0x2180b9eb7a8 <line:985:1, line:1038:1>
|   |-DeclStmt 0x2180b9e93f8 <line:986:5, col:31>
|   | |-VarDecl 0x2180b9e92f8 <col:5, col:26> col:26 used p 'const unsigned char *'
|   | `-VarDecl 0x2180b9e9378 <col:5, col:30> col:30 used q 'const unsigned char *'
|   |-DeclStmt 0x2180b9e9490 <line:987:5, col:14>
|   | `-VarDecl 0x2180b9e9428 <col:5, col:10> col:10 used plen 'long'
|   |-DeclStmt 0x2180b9e95b0 <line:988:5, col:20>
|   | |-VarDecl 0x2180b9e94b8 <col:5, col:10> col:10 used cst 'char'
|   | `-VarDecl 0x2180b9e9530 <col:5, col:15> col:15 used ininf 'char'
|   |-BinaryOperator 0x2180b9e9680 <line:989:5, col:10> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x2180b9e95c8 <col:5> 'const unsigned char *' lvalue Var 0x2180b9e92f8 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x2180b9e9668 <col:9, col:10> 'const unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x2180b9e9650 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x2180b9e9638 <col:10> 'const unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x2180b9e9600 <col:10> 'const unsigned char **' lvalue ParmVar 0x2180b9eae90 'in' 'const unsigned char **'
|   |-CompoundAssignOperator 0x2180b9e9700 <line:990:5, col:12> 'char' '&=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x2180b9e96a0 <col:5> 'char' lvalue ParmVar 0x2180b9e8fa8 'inf' 'char'
|   | `-IntegerLiteral 0x2180b9e96d8 <col:12> 'int' 1
|   |-IfStmt 0x2180b9e98c0 <line:995:5, line:998:5>
|   | |-OpaqueValueExpr 0x2180b9e98a8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2180b9e9888 <line:995:23, line:998:5>
|   |   |-CompoundAssignOperator 0x2180b9e9820 <line:996:9, col:16> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   | |-UnaryOperator 0x2180b9e97b8 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x2180b9e97a0 <col:10> 'const unsigned char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2180b9e9780 <col:10> 'const unsigned char **' lvalue ParmVar 0x2180b9eae90 'in' 'const unsigned char **'
|   |   | `-ImplicitCastExpr 0x2180b9e9808 <col:16> 'long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2180b9e97d0 <col:16> 'long' lvalue ParmVar 0x2180b9e8f30 'len' 'long'
|   |   `-ReturnStmt 0x2180b9e9878 <line:997:9, col:16>
|   |     `-IntegerLiteral 0x2180b9e9850 <col:16> 'int' 1
|   |-WhileStmt 0x2180b9eb5f0 <line:999:5, line:1031:5>
|   | |-BinaryOperator 0x2180b9e9950 <line:999:12, col:18> 'int' '>'
|   | | |-ImplicitCastExpr 0x2180b9e9920 <col:12> 'long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2180b9e98d8 <col:12> 'long' lvalue ParmVar 0x2180b9e8f30 'len' 'long'
|   | | `-ImplicitCastExpr 0x2180b9e9938 <col:18> 'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x2180b9e98f8 <col:18> 'int' 0
|   | `-CompoundStmt 0x2180b9eb5b8 <col:21, line:1031:5>
|   |   |-BinaryOperator 0x2180b9e99e0 <line:1000:9, col:13> 'const unsigned char *' '='
|   |   | |-DeclRefExpr 0x2180b9e9970 <col:9> 'const unsigned char *' lvalue Var 0x2180b9e9378 'q' 'const unsigned char *'
|   |   | `-ImplicitCastExpr 0x2180b9e99c8 <col:13> 'const unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2180b9e99a8 <col:13> 'const unsigned char *' lvalue Var 0x2180b9e92f8 'p' 'const unsigned char *'
|   |   |-IfStmt 0x2180b9e9c60 <line:1002:9, line:1012:9>
|   |   | |-CallExpr 0x2180b9e9a90 <line:1002:13, col:35> 'int'
|   |   | | |-ImplicitCastExpr 0x2180b9e9a78 <col:13> 'int (*)(const unsigned char **, long)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x2180b9e9a00 <col:13> 'int (const unsigned char **, long)' Function 0x2180b9d39d0 'asn1_check_eoc' 'int (const unsigned char **, long)'
|   |   | | |-UnaryOperator 0x2180b9e9a40 <col:28, col:29> 'const unsigned char **' prefix '&' cannot overflow
|   |   | | | `-DeclRefExpr 0x2180b9e9a20 <col:29> 'const unsigned char *' lvalue Var 0x2180b9e92f8 'p' 'const unsigned char *'
|   |   | | `-ImplicitCastExpr 0x2180b9e9ac0 <col:32> 'long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2180b9e9a58 <col:32> 'long' lvalue ParmVar 0x2180b9e8f30 'len' 'long'
|   |   | `-CompoundStmt 0x2180b9e9c38 <col:38, line:1012:9>
|   |   |   |-IfStmt 0x2180b9e9b98 <line:1006:13, line:1009:13>
|   |   |   | |-UnaryOperator 0x2180b9e9b10 <line:1006:17, col:18> 'int' prefix '!' cannot overflow
|   |   |   | | `-ImplicitCastExpr 0x2180b9e9af8 <col:18> 'char' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x2180b9e9ad8 <col:18> 'char' lvalue ParmVar 0x2180b9e8fa8 'inf' 'char'
|   |   |   | `-CompoundStmt 0x2180b9e9b80 <col:23, line:1009:13>
|   |   |   |   `-ReturnStmt 0x2180b9e9b70 <line:1008:17, col:24>
|   |   |   |     `-IntegerLiteral 0x2180b9e9b48 <col:24> 'int' 0
|   |   |   |-BinaryOperator 0x2180b9e9c10 <line:1010:13, col:19> 'char' '='
|   |   |   | |-DeclRefExpr 0x2180b9e9bb0 <col:13> 'char' lvalue ParmVar 0x2180b9e8fa8 'inf' 'char'
|   |   |   | `-ImplicitCastExpr 0x2180b9e9bf8 <col:19> 'char' <IntegralCast>
|   |   |   |   `-IntegerLiteral 0x2180b9e9bd0 <col:19> 'int' 0
|   |   |   `-BreakStmt 0x2180b9e9c30 <line:1011:13>
|   |   |-IfStmt 0x2180b9eb0a0 <line:1014:9, line:1018:9>
|   |   | |-OpaqueValueExpr 0x2180b9eb088 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x2180b9eb070 <line:1015:58, line:1018:9>
|   |   |   `-ReturnStmt 0x2180b9eb060 <line:1017:13, col:20>
|   |   |     `-IntegerLiteral 0x2180b9eb038 <col:20> 'int' 0
|   |   |-IfStmt 0x2180b9eb4b0 <line:1021:9, line:1029:20> has_else
|   |   | |-ImplicitCastExpr 0x2180b9eb0d8 <line:1021:13> 'char' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2180b9eb0b8 <col:13> 'char' lvalue Var 0x2180b9e94b8 'cst' 'char'
|   |   | |-CompoundStmt 0x2180b9eb3b0 <col:18, line:1028:9>
|   |   | | |-IfStmt 0x2180b9eb1f8 <line:1022:13, line:1025:13>
|   |   | | | |-BinaryOperator 0x2180b9eb168 <line:1022:17, line:980:31> 'int' '>='
|   |   | | | | |-ImplicitCastExpr 0x2180b9eb150 <line:1022:17> 'int' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x2180b9eb0f0 <col:17> 'int' lvalue ParmVar 0x2180b9e9128 'depth' 'int'
|   |   | | | | `-IntegerLiteral 0x2180b9eb128 <line:980:31> 'int' 5
|   |   | | | `-CompoundStmt 0x2180b9eb1e0 <line:1022:48, line:1025:13>
|   |   | | |   `-ReturnStmt 0x2180b9eb1d0 <line:1024:17, col:24>
|   |   | | |     `-IntegerLiteral 0x2180b9eb1a8 <col:24> 'int' 0
|   |   | | `-IfStmt 0x2180b9eb398 <line:1026:13, line:1027:24>
|   |   | |   |-OpaqueValueExpr 0x2180b9eb380 <<invalid sloc>> '_Bool'
|   |   | |   `-ReturnStmt 0x2180b9eb370 <col:17, col:24>
|   |   | |     `-IntegerLiteral 0x2180b9eb348 <col:24> 'int' 0
|   |   | `-IfStmt 0x2180b9eb498 <line:1028:16, line:1029:20>
|   |   |   |-OpaqueValueExpr 0x2180b9eb480 <<invalid sloc>> '_Bool'
|   |   |   `-ReturnStmt 0x2180b9eb470 <col:13, col:20>
|   |   |     `-IntegerLiteral 0x2180b9eb448 <col:20> 'int' 0
|   |   `-CompoundAssignOperator 0x2180b9eb588 <line:1030:9, col:20> 'long' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   |     |-DeclRefExpr 0x2180b9eb4d8 <col:9> 'long' lvalue ParmVar 0x2180b9e8f30 'len' 'long'
|   |     `-BinaryOperator 0x2180b9eb568 <col:16, col:20> 'long long' '-'
|   |       |-ImplicitCastExpr 0x2180b9eb538 <col:16> 'const unsigned char *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x2180b9eb4f8 <col:16> 'const unsigned char *' lvalue Var 0x2180b9e92f8 'p' 'const unsigned char *'
|   |       `-ImplicitCastExpr 0x2180b9eb550 <col:20> 'const unsigned char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x2180b9eb518 <col:20> 'const unsigned char *' lvalue Var 0x2180b9e9378 'q' 'const unsigned char *'
|   |-IfStmt 0x2180b9eb6b0 <line:1032:5, line:1035:5>
|   | |-ImplicitCastExpr 0x2180b9eb628 <line:1032:9> 'char' <LValueToRValue>
|   | | `-DeclRefExpr 0x2180b9eb608 <col:9> 'char' lvalue ParmVar 0x2180b9e8fa8 'inf' 'char'
|   | `-CompoundStmt 0x2180b9eb698 <col:14, line:1035:5>
|   |   `-ReturnStmt 0x2180b9eb688 <line:1034:9, col:16>
|   |     `-IntegerLiteral 0x2180b9eb660 <col:16> 'int' 0
|   |-BinaryOperator 0x2180b9eb750 <line:1036:5, col:11> 'const unsigned char *' '='
|   | |-UnaryOperator 0x2180b9eb700 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x2180b9eb6e8 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2180b9eb6c8 <col:6> 'const unsigned char **' lvalue ParmVar 0x2180b9eae90 'in' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x2180b9eb738 <col:11> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2180b9eb718 <col:11> 'const unsigned char *' lvalue Var 0x2180b9e92f8 'p' 'const unsigned char *'
|   `-ReturnStmt 0x2180b9eb798 <line:1037:5, col:12>
|     `-IntegerLiteral 0x2180b9eb770 <col:12> 'int' 1
|-FunctionDecl 0x2180b9eb9d0 <line:1040:1, line:1053:1> line:1040:12 invalid collect_data 'int (int *, const unsigned char **, long)' static
| |-ParmVarDecl 0x2180b9eb820 <col:25, col:34> col:34 invalid buf 'int *'
| |-ParmVarDecl 0x2180b9eb8a8 <col:39, col:61> col:61 used p 'const unsigned char **'
| |-ParmVarDecl 0x2180b9eb928 <col:64, col:69> col:69 used plen 'long'
| `-CompoundStmt 0x2180b9ebef0 <line:1041:1, line:1053:1>
|   |-DeclStmt 0x2180b9ebb20 <line:1042:5, col:12>
|   | `-VarDecl 0x2180b9ebab8 <col:5, col:9> col:9 used len 'int'
|   |-IfStmt 0x2180b9ebde8 <line:1043:5, line:1050:5>
|   | |-OpaqueValueExpr 0x2180b9ebdd0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2180b9ebdb8 <line:1043:14, line:1050:5>
|   |   `-IfStmt 0x2180b9ebcd8 <line:1045:9, line:1048:9>
|   |     |-OpaqueValueExpr 0x2180b9ebcc0 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x2180b9ebca8 <line:1045:51, line:1048:9>
|   |       `-ReturnStmt 0x2180b9ebc98 <line:1047:13, col:20>
|   |         `-IntegerLiteral 0x2180b9ebc70 <col:20> 'int' 0
|   |-CompoundAssignOperator 0x2180b9ebe88 <line:1051:5, col:11> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | |-UnaryOperator 0x2180b9ebe38 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x2180b9ebe20 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2180b9ebe00 <col:6> 'const unsigned char **' lvalue ParmVar 0x2180b9eb8a8 'p' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x2180b9ebe70 <col:11> 'long' <LValueToRValue>
|   |   `-DeclRefExpr 0x2180b9ebe50 <col:11> 'long' lvalue ParmVar 0x2180b9eb928 'plen' 'long'
|   `-ReturnStmt 0x2180b9ebee0 <line:1052:5, col:12>
|     `-IntegerLiteral 0x2180b9ebeb8 <col:12> 'int' 1
|-FunctionDecl 0x2180b9e6050 prev 0x2180b9d39d0 <line:1057:1, line:1068:1> line:1057:12 used asn1_check_eoc 'int (const unsigned char **, long)' static
| |-ParmVarDecl 0x2180b9e5f00 <col:27, col:49> col:49 used in 'const unsigned char **'
| |-ParmVarDecl 0x2180b9e5f80 <col:53, col:58> col:58 used len 'long'
| `-CompoundStmt 0x2180b9e6610 <line:1058:1, line:1068:1>
|   |-DeclStmt 0x2180b9e6180 <line:1059:5, col:27>
|   | `-VarDecl 0x2180b9e6118 <col:5, col:26> col:26 used p 'const unsigned char *'
|   |-IfStmt 0x2180b9e6268 <line:1060:5, line:1061:16>
|   | |-BinaryOperator 0x2180b9e6210 <line:1060:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x2180b9e61e0 <col:9> 'long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2180b9e6198 <col:9> 'long' lvalue ParmVar 0x2180b9e5f80 'len' 'long'
|   | | `-ImplicitCastExpr 0x2180b9e61f8 <col:15> 'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x2180b9e61b8 <col:15> 'int' 2
|   | `-ReturnStmt 0x2180b9e6258 <line:1061:9, col:16>
|   |   `-IntegerLiteral 0x2180b9e6230 <col:16> 'int' 0
|   |-BinaryOperator 0x2180b9e6320 <line:1062:5, col:10> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x2180b9e6280 <col:5> 'const unsigned char *' lvalue Var 0x2180b9e6118 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x2180b9e6308 <col:9, col:10> 'const unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x2180b9e62f0 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x2180b9e62d8 <col:10> 'const unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x2180b9e62b8 <col:10> 'const unsigned char **' lvalue ParmVar 0x2180b9e5f00 'in' 'const unsigned char **'
|   |-IfStmt 0x2180b9e65c0 <line:1063:5, line:1066:5>
|   | |-BinaryOperator 0x2180b9e64a0 <line:1063:9, col:22> 'int' '&&'
|   | | |-UnaryOperator 0x2180b9e63d8 <col:9, col:13> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x2180b9e63c0 <col:10, col:13> 'unsigned char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x2180b9e63a0 <col:10, col:13> 'const unsigned char' lvalue
|   | | |     |-ImplicitCastExpr 0x2180b9e6388 <col:10> 'const unsigned char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x2180b9e6340 <col:10> 'const unsigned char *' lvalue Var 0x2180b9e6118 'p' 'const unsigned char *'
|   | | |     `-IntegerLiteral 0x2180b9e6360 <col:12> 'int' 0
|   | | `-UnaryOperator 0x2180b9e6488 <col:18, col:22> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x2180b9e6470 <col:19, col:22> 'unsigned char' <LValueToRValue>
|   | |     `-ArraySubscriptExpr 0x2180b9e6450 <col:19, col:22> 'const unsigned char' lvalue
|   | |       |-ImplicitCastExpr 0x2180b9e6438 <col:19> 'const unsigned char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x2180b9e63f0 <col:19> 'const unsigned char *' lvalue Var 0x2180b9e6118 'p' 'const unsigned char *'
|   | |       `-IntegerLiteral 0x2180b9e6410 <col:21> 'int' 1
|   | `-CompoundStmt 0x2180b9e65a0 <col:25, line:1066:5>
|   |   |-CompoundAssignOperator 0x2180b9e6538 <line:1064:9, col:16> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   | |-UnaryOperator 0x2180b9e64f8 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x2180b9e64e0 <col:10> 'const unsigned char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2180b9e64c0 <col:10> 'const unsigned char **' lvalue ParmVar 0x2180b9e5f00 'in' 'const unsigned char **'
|   |   | `-IntegerLiteral 0x2180b9e6510 <col:16> 'int' 2
|   |   `-ReturnStmt 0x2180b9e6590 <line:1065:9, col:16>
|   |     `-IntegerLiteral 0x2180b9e6568 <col:16> 'int' 1
|   `-ReturnStmt 0x2180b9e6600 <line:1067:5, col:12>
|     `-IntegerLiteral 0x2180b9e65d8 <col:12> 'int' 0
`-FunctionDecl 0x2180b9e6c48 <line:1077:1, line:1159:1> line:1077:12 invalid asn1_check_tlen 'int (long *, int *, unsigned char *, char *, char *, const unsigned char **, long, int, int, char, int *)' static
  |-ParmVarDecl 0x2180b9e6660 <col:28, col:34> col:34 used olen 'long *'
  |-ParmVarDecl 0x2180b9e66e0 <col:40, col:45> col:45 used otag 'int *'
  |-ParmVarDecl 0x2180b9e6760 <col:51, col:66> col:66 used oclass 'unsigned char *'
  |-ParmVarDecl 0x2180b9e67e0 <line:1078:28, col:34> col:34 used inf 'char *'
  |-ParmVarDecl 0x2180b9e6860 <col:39, col:45> col:45 used cst 'char *'
  |-ParmVarDecl 0x2180b9e68e8 <line:1079:28, col:50> col:50 used in 'const unsigned char **'
  |-ParmVarDecl 0x2180b9e6968 <col:54, col:59> col:59 used len 'long'
  |-ParmVarDecl 0x2180b9e69e8 <line:1080:28, col:32> col:32 used exptag 'int'
  |-ParmVarDecl 0x2180b9e6a68 <col:40, col:44> col:44 used expclass 'int'
  |-ParmVarDecl 0x2180b9e6ae0 <col:54, col:59> col:59 used opt 'char'
  |-ParmVarDecl 0x2180b9e6b60 <col:64, col:74> col:74 invalid ctx 'int *'
  `-CompoundStmt 0x2180b9ed7f0 <line:1081:1, line:1159:1>
    |-DeclStmt 0x2180b9e6dd8 <line:1082:5, col:10>
    | `-VarDecl 0x2180b9e6d70 <col:5, col:9> col:9 used i 'int'
    |-DeclStmt 0x2180b9ebf78 <line:1083:5, col:21>
    | |-VarDecl 0x2180b9e6e08 <col:5, col:9> col:9 used ptag 'int'
    | `-VarDecl 0x2180b9e6e88 <col:5, col:15> col:15 used pclass 'int'
    |-DeclStmt 0x2180b9ec010 <line:1084:5, col:14>
    | `-VarDecl 0x2180b9ebfa8 <col:5, col:10> col:10 used plen 'long'
    |-DeclStmt 0x2180b9ec140 <line:1085:5, col:31>
    | |-VarDecl 0x2180b9ec040 <col:5, col:26> col:26 used p 'const unsigned char *'
    | `-VarDecl 0x2180b9ec0c0 <col:5, col:30> col:30 used q 'const unsigned char *'
    |-BinaryOperator 0x2180b9ec210 <line:1086:5, col:10> 'const unsigned char *' '='
    | |-DeclRefExpr 0x2180b9ec158 <col:5> 'const unsigned char *' lvalue Var 0x2180b9ec040 'p' 'const unsigned char *'
    | `-ImplicitCastExpr 0x2180b9ec1f8 <col:9, col:10> 'const unsigned char *' <LValueToRValue>
    |   `-UnaryOperator 0x2180b9ec1e0 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x2180b9ec1c8 <col:10> 'const unsigned char **' <LValueToRValue>
    |       `-DeclRefExpr 0x2180b9ec190 <col:10> 'const unsigned char **' lvalue ParmVar 0x2180b9e68e8 'in' 'const unsigned char **'
    |-BinaryOperator 0x2180b9ec2a0 <line:1087:5, col:9> 'const unsigned char *' '='
    | |-DeclRefExpr 0x2180b9ec230 <col:5> 'const unsigned char *' lvalue Var 0x2180b9ec0c0 'q' 'const unsigned char *'
    | `-ImplicitCastExpr 0x2180b9ec288 <col:9> 'const unsigned char *' <LValueToRValue>
    |   `-DeclRefExpr 0x2180b9ec268 <col:9> 'const unsigned char *' lvalue Var 0x2180b9ec040 'p' 'const unsigned char *'
    |-IfStmt 0x2180b9eca28 <line:1089:5, line:1114:5> has_else
    | |-OpaqueValueExpr 0x2180b9eca10 <<invalid sloc>> '_Bool'
    | |-CompoundStmt 0x2180b9ec3c0 <line:1089:28, line:1095:5>
    | `-CompoundStmt 0x2180b9ec9f0 <col:12, line:1114:5>
    |   |-BinaryOperator 0x2180b9ec690 <line:1096:9, col:59> 'int' '='
    |   | |-DeclRefExpr 0x2180b9ec3d0 <col:9> 'int' lvalue Var 0x2180b9e6d70 'i' 'int'
    |   | `-CallExpr 0x2180b9ec630 <col:13, col:59> 'int'
    |   |   |-ImplicitCastExpr 0x2180b9ec618 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x2180b9ec4e0 <col:13> 'int ()' Function 0x2180b9ec418 'ASN1_get_object' 'int ()'
    |   |   |-UnaryOperator 0x2180b9ec520 <col:29, col:30> 'const unsigned char **' prefix '&' cannot overflow
    |   |   | `-DeclRefExpr 0x2180b9ec500 <col:30> 'const unsigned char *' lvalue Var 0x2180b9ec040 'p' 'const unsigned char *'
    |   |   |-UnaryOperator 0x2180b9ec558 <col:33, col:34> 'long *' prefix '&' cannot overflow
    |   |   | `-DeclRefExpr 0x2180b9ec538 <col:34> 'long' lvalue Var 0x2180b9ebfa8 'plen' 'long'
    |   |   |-UnaryOperator 0x2180b9ec590 <col:40, col:41> 'int *' prefix '&' cannot overflow
    |   |   | `-DeclRefExpr 0x2180b9ec570 <col:41> 'int' lvalue Var 0x2180b9e6e08 'ptag' 'int'
    |   |   |-UnaryOperator 0x2180b9ec5c8 <col:47, col:48> 'int *' prefix '&' cannot overflow
    |   |   | `-DeclRefExpr 0x2180b9ec5a8 <col:48> 'int' lvalue Var 0x2180b9e6e88 'pclass' 'int'
    |   |   `-ImplicitCastExpr 0x2180b9ec678 <col:56> 'long' <LValueToRValue>
    |   |     `-DeclRefExpr 0x2180b9ec5e0 <col:56> 'long' lvalue ParmVar 0x2180b9e6968 'len' 'long'
    |   `-IfStmt 0x2180b9ec9d8 <line:1097:9, line:1113:9>
    |     |-OpaqueValueExpr 0x2180b9ec9c0 <<invalid sloc>> '_Bool'
    |     `-CompoundStmt 0x2180b9ec9a8 <line:1097:18, line:1113:9>
    |       `-IfStmt 0x2180b9ec990 <line:1108:13, line:1112:13>
    |         |-OpaqueValueExpr 0x2180b9ec978 <<invalid sloc>> '_Bool'
    |         `-CompoundStmt 0x2180b9ec960 <line:1108:62, line:1112:13>
    |           `-ReturnStmt 0x2180b9ec950 <line:1111:17, col:24>
    |             `-IntegerLiteral 0x2180b9ec928 <col:24> 'int' 0
    |-IfStmt 0x2180b9ecb68 <line:1116:5, line:1120:5>
    | |-BinaryOperator 0x2180b9ecab0 <line:1116:9, col:13> 'int' '&'
    | | |-ImplicitCastExpr 0x2180b9eca98 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x2180b9eca50 <col:9> 'int' lvalue Var 0x2180b9e6d70 'i' 'int'
    | | `-IntegerLiteral 0x2180b9eca70 <col:13> 'int' 128
    | `-CompoundStmt 0x2180b9ecb50 <col:19, line:1120:5>
    |   `-ReturnStmt 0x2180b9ecb40 <line:1119:9, col:16>
    |     `-IntegerLiteral 0x2180b9ecb18 <col:16> 'int' 0
    |-IfStmt 0x2180b9ecf70 <line:1121:5, line:1137:5>
    | |-BinaryOperator 0x2180b9ecbf8 <line:1121:9, col:19> 'int' '>='
    | | |-ImplicitCastExpr 0x2180b9ecbe0 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x2180b9ecb80 <col:9> 'int' lvalue ParmVar 0x2180b9e69e8 'exptag' 'int'
    | | `-IntegerLiteral 0x2180b9ecbb8 <col:19> 'int' 0
    | `-CompoundStmt 0x2180b9ecf48 <col:22, line:1137:5>
    |   `-IfStmt 0x2180b9ecf08 <line:1122:9, line:1131:9>
    |     |-BinaryOperator 0x2180b9ecd90 <line:1122:13, col:52> 'int' '||'
    |     | |-ParenExpr 0x2180b9ecca8 <col:13, col:28> 'int'
    |     | | `-BinaryOperator 0x2180b9ecc88 <col:14, col:24> 'int' '!='
    |     | |   |-ImplicitCastExpr 0x2180b9ecc58 <col:14> 'int' <LValueToRValue>
    |     | |   | `-DeclRefExpr 0x2180b9ecc18 <col:14> 'int' lvalue ParmVar 0x2180b9e69e8 'exptag' 'int'
    |     | |   `-ImplicitCastExpr 0x2180b9ecc70 <col:24> 'int' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x2180b9ecc38 <col:24> 'int' lvalue Var 0x2180b9e6e08 'ptag' 'int'
    |     | `-ParenExpr 0x2180b9ecd70 <col:33, col:52> 'int'
    |     |   `-BinaryOperator 0x2180b9ecd50 <col:34, col:46> 'int' '!='
    |     |     |-ImplicitCastExpr 0x2180b9ecd20 <col:34> 'int' <LValueToRValue>
    |     |     | `-DeclRefExpr 0x2180b9eccc8 <col:34> 'int' lvalue ParmVar 0x2180b9e6a68 'expclass' 'int'
    |     |     `-ImplicitCastExpr 0x2180b9ecd38 <col:46> 'int' <LValueToRValue>
    |     |       `-DeclRefExpr 0x2180b9ecd00 <col:46> 'int' lvalue Var 0x2180b9e6e88 'pclass' 'int'
    |     `-CompoundStmt 0x2180b9ecee8 <col:55, line:1131:9>
    |       |-IfStmt 0x2180b9ece50 <line:1126:13, line:1127:25>
    |       | |-ImplicitCastExpr 0x2180b9ecde8 <line:1126:17> 'char' <LValueToRValue>
    |       | | `-DeclRefExpr 0x2180b9ecdb0 <col:17> 'char' lvalue ParmVar 0x2180b9e6ae0 'opt' 'char'
    |       | `-ReturnStmt 0x2180b9ece40 <line:1127:17, col:25>
    |       |   `-UnaryOperator 0x2180b9ece28 <col:24, col:25> 'int' prefix '-'
    |       |     `-IntegerLiteral 0x2180b9ece00 <col:25> 'int' 1
    |       `-ReturnStmt 0x2180b9eced8 <line:1130:13, col:20>
    |         `-IntegerLiteral 0x2180b9eceb0 <col:20> 'int' 0
    |-IfStmt 0x2180b9ed180 <line:1139:5, line:1140:28>
    | |-BinaryOperator 0x2180b9ecfe8 <line:1139:9, col:13> 'int' '&'
    | | |-ImplicitCastExpr 0x2180b9ecfd0 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x2180b9ecf88 <col:9> 'int' lvalue Var 0x2180b9e6d70 'i' 'int'
    | | `-IntegerLiteral 0x2180b9ecfa8 <col:13> 'int' 1
    | `-BinaryOperator 0x2180b9ed160 <line:1140:9, col:28> 'long' '='
    |   |-DeclRefExpr 0x2180b9ed008 <col:9> 'long' lvalue Var 0x2180b9ebfa8 'plen' 'long'
    |   `-ImplicitCastExpr 0x2180b9ed148 <col:16, col:28> 'long' <IntegralCast>
    |     `-BinaryOperator 0x2180b9ed128 <col:16, col:28> 'long long' '-'
    |       |-ImplicitCastExpr 0x2180b9ed110 <col:16> 'long long' <IntegralCast>
    |       | `-ImplicitCastExpr 0x2180b9ed0f8 <col:16> 'long' <LValueToRValue>
    |       |   `-DeclRefExpr 0x2180b9ed028 <col:16> 'long' lvalue ParmVar 0x2180b9e6968 'len' 'long'
    |       `-ParenExpr 0x2180b9ed0d8 <col:22, col:28> 'long long'
    |         `-BinaryOperator 0x2180b9ed0b8 <col:23, col:27> 'long long' '-'
    |           |-ImplicitCastExpr 0x2180b9ed088 <col:23> 'const unsigned char *' <LValueToRValue>
    |           | `-DeclRefExpr 0x2180b9ed048 <col:23> 'const unsigned char *' lvalue Var 0x2180b9ec040 'p' 'const unsigned char *'
    |           `-ImplicitCastExpr 0x2180b9ed0a0 <col:27> 'const unsigned char *' <LValueToRValue>
    |             `-DeclRefExpr 0x2180b9ed068 <col:27> 'const unsigned char *' lvalue Var 0x2180b9ec0c0 'q' 'const unsigned char *'
    |-IfStmt 0x2180b9ed2f0 <line:1142:5, line:1143:20>
    | |-ImplicitCastExpr 0x2180b9ed1d0 <line:1142:9> 'char *' <LValueToRValue>
    | | `-DeclRefExpr 0x2180b9ed198 <col:9> 'char *' lvalue ParmVar 0x2180b9e67e0 'inf' 'char *'
    | `-BinaryOperator 0x2180b9ed2d0 <line:1143:9, col:20> 'char' '='
    |   |-UnaryOperator 0x2180b9ed220 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x2180b9ed208 <col:10> 'char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x2180b9ed1e8 <col:10> 'char *' lvalue ParmVar 0x2180b9e67e0 'inf' 'char *'
    |   `-ImplicitCastExpr 0x2180b9ed2b8 <col:16, col:20> 'char' <IntegralCast>
    |     `-BinaryOperator 0x2180b9ed298 <col:16, col:20> 'int' '&'
    |       |-ImplicitCastExpr 0x2180b9ed280 <col:16> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x2180b9ed238 <col:16> 'int' lvalue Var 0x2180b9e6d70 'i' 'int'
    |       `-IntegerLiteral 0x2180b9ed258 <col:20> 'int' 1
    |-IfStmt 0x2180b9ed4c0 <line:1148:5, line:1149:17>
    | |-ImplicitCastExpr 0x2180b9ed400 <line:1148:9> 'long *' <LValueToRValue>
    | | `-DeclRefExpr 0x2180b9ed3c8 <col:9> 'long *' lvalue ParmVar 0x2180b9e6660 'olen' 'long *'
    | `-BinaryOperator 0x2180b9ed4a0 <line:1149:9, col:17> 'long' '='
    |   |-UnaryOperator 0x2180b9ed450 <col:9, col:10> 'long' lvalue prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x2180b9ed438 <col:10> 'long *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x2180b9ed418 <col:10> 'long *' lvalue ParmVar 0x2180b9e6660 'olen' 'long *'
    |   `-ImplicitCastExpr 0x2180b9ed488 <col:17> 'long' <LValueToRValue>
    |     `-DeclRefExpr 0x2180b9ed468 <col:17> 'long' lvalue Var 0x2180b9ebfa8 'plen' 'long'
    |-IfStmt 0x2180b9ed5e8 <line:1151:5, line:1152:19>
    | |-ImplicitCastExpr 0x2180b9ed510 <line:1151:9> 'unsigned char *' <LValueToRValue>
    | | `-DeclRefExpr 0x2180b9ed4d8 <col:9> 'unsigned char *' lvalue ParmVar 0x2180b9e6760 'oclass' 'unsigned char *'
    | `-BinaryOperator 0x2180b9ed5c8 <line:1152:9, col:19> 'unsigned char' '='
    |   |-UnaryOperator 0x2180b9ed560 <col:9, col:10> 'unsigned char' lvalue prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x2180b9ed548 <col:10> 'unsigned char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x2180b9ed528 <col:10> 'unsigned char *' lvalue ParmVar 0x2180b9e6760 'oclass' 'unsigned char *'
    |   `-ImplicitCastExpr 0x2180b9ed5b0 <col:19> 'unsigned char' <IntegralCast>
    |     `-ImplicitCastExpr 0x2180b9ed598 <col:19> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x2180b9ed578 <col:19> 'int' lvalue Var 0x2180b9e6e88 'pclass' 'int'
    |-IfStmt 0x2180b9ed6f8 <line:1154:5, line:1155:17>
    | |-ImplicitCastExpr 0x2180b9ed638 <line:1154:9> 'int *' <LValueToRValue>
    | | `-DeclRefExpr 0x2180b9ed600 <col:9> 'int *' lvalue ParmVar 0x2180b9e66e0 'otag' 'int *'
    | `-BinaryOperator 0x2180b9ed6d8 <line:1155:9, col:17> 'int' '='
    |   |-UnaryOperator 0x2180b9ed688 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x2180b9ed670 <col:10> 'int *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x2180b9ed650 <col:10> 'int *' lvalue ParmVar 0x2180b9e66e0 'otag' 'int *'
    |   `-ImplicitCastExpr 0x2180b9ed6c0 <col:17> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x2180b9ed6a0 <col:17> 'int' lvalue Var 0x2180b9e6e08 'ptag' 'int'
    |-BinaryOperator 0x2180b9ed798 <line:1157:5, col:11> 'const unsigned char *' '='
    | |-UnaryOperator 0x2180b9ed748 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x2180b9ed730 <col:6> 'const unsigned char **' <LValueToRValue>
    | |   `-DeclRefExpr 0x2180b9ed710 <col:6> 'const unsigned char **' lvalue ParmVar 0x2180b9e68e8 'in' 'const unsigned char **'
    | `-ImplicitCastExpr 0x2180b9ed780 <col:11> 'const unsigned char *' <LValueToRValue>
    |   `-DeclRefExpr 0x2180b9ed760 <col:11> 'const unsigned char *' lvalue Var 0x2180b9ec040 'p' 'const unsigned char *'
    `-ReturnStmt 0x2180b9ed7e0 <line:1158:5, col:12>
      `-IntegerLiteral 0x2180b9ed7b8 <col:12> 'int' 1
