TranslationUnitDecl 0x24bfa6da6e8 <<invalid sloc>> <invalid sloc> <undeserialized declarations>
|-TypedefDecl 0x24bfa6daf80 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x24bfa6dac80 '__int128'
|-TypedefDecl 0x24bfa6daff0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x24bfa6daca0 'unsigned __int128'
|-TypedefDecl 0x24bfa6db328 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x24bfa6db0e0 'struct __NSConstantString_tag'
|   `-Record 0x24bfa6db048 '__NSConstantString_tag'
|-TypedefDecl 0x24bfa6db398 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x24bfa6da8c0 'unsigned long long'
|-TypedefDecl 0x24bfa6db430 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x24bfa6db3f0 'char *'
|   `-BuiltinType 0x24bfa6da780 'char'
|-TypedefDecl 0x24bfa6db4a0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x24bfa6db3f0 'char *'
|   `-BuiltinType 0x24bfa6da780 'char'
|-TypedefDecl 0x24bfa6db510 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:35:1, col:26> col:26 ptrdiff_t 'long long'
| `-BuiltinType 0x24bfa6da820 'long long'
|-TypedefDecl 0x24bfa6db580 prev 0x24bfa6db398 <line:46:1, col:23> col:23 size_t 'unsigned long long'
| `-BuiltinType 0x24bfa6da8c0 'unsigned long long'
|-TypedefDecl 0x24bfa6db608 <line:60:1, col:23> col:23 rsize_t 'unsigned long long'
| `-BuiltinType 0x24bfa6da8c0 'unsigned long long'
|-TypedefDecl 0x24bfa6db678 <line:74:1, col:24> col:24 wchar_t 'unsigned short'
| `-BuiltinType 0x24bfa6da860 'unsigned short'
|-ImportDecl 0x24bfc0efe70 <line:102:1> col:1 implicit _Builtin_stddef_max_align_t
|-TypedefDecl 0x24bfc0eff18 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x24bfa6da8c0 'unsigned long long'
|-TypedefDecl 0x24bfc0eff88 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x24bfa6db3f0 'char *'
|   `-BuiltinType 0x24bfa6da780 'char'
|-FunctionDecl 0x24bfc0f01d0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x24bfc0f0270 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x24bfc0f02e0 <col:21> Implicit
|-FunctionDecl 0x24bfc0f0338 prev 0x24bfc0f01d0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x24bfc0f0068 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x24bfc0f0428 <col:21> Inherited Implicit
|-TypedefDecl 0x24bfc0f04e0 prev 0x24bfc0f0458 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x24bfa6da8c0 'unsigned long long'
|-TypedefDecl 0x24bfc0f0570 prev 0x24bfa6db608 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x24bfc0f0540 'size_t' sugar
|   |-Typedef 0x24bfc0f04e0 'size_t'
|   `-BuiltinType 0x24bfa6da8c0 'unsigned long long'
|-TypedefDecl 0x24bfc0f05f8 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x24bfa6da820 'long long'
|-TypedefDecl 0x24bfc0f0668 prev 0x24bfa6db510 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x24bfa6da820 'long long'
|-TypedefDecl 0x24bfc0f06f0 prev 0x24bfa6db678 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x24bfa6da860 'unsigned short'
|-TypedefDecl 0x24bfc0f0778 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x24bfa6da860 'unsigned short'
|-TypedefDecl 0x24bfc0f07e8 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x24bfa6da860 'unsigned short'
|-TypedefDecl 0x24bfc0f0858 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x24bfa6da7e0 'int'
|-TypedefDecl 0x24bfc0f08c8 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x24bfa6da800 'long'
|-TypedefDecl 0x24bfc0f0938 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x24bfa6da820 'long long'
|-TypedefDecl 0x24bfc0f09c0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x24bfc0f0990 '__time64_t' sugar
|   |-Typedef 0x24bfc0f0938 '__time64_t'
|   `-BuiltinType 0x24bfa6da820 'long long'
|-FunctionDecl 0x24bfc0f0b38 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x24bfc0f0d58 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x24bfc211570 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x24bfc211108 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x24bfc211180 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x24bfc2111f8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x24bfc211278 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x24bfc211310 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x24bfc211650 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x24bfc211710 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x24bfc211880 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x24bfc211830 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x24bfc2117d0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x24bfc2116f0 'struct threadlocaleinfostruct'
|       `-Record 0x24bfc2223b8 'threadlocaleinfostruct'
|-TypedefDecl 0x24bfc211990 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x24bfc211940 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x24bfc2118e0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x24bfc2117b0 'struct threadmbcinfostruct'
|       `-Record 0x24bfc211710 'threadmbcinfostruct'
|-RecordDecl 0x24bfc2119e8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x24bfc211aa0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x24bfc211b60 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x24bfc211bf0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x24bfc211c80 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x24bfc211d38 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x24bfc211ce0 'struct localeinfo_struct' sugar
|   `-RecordType 0x24bfc211b40 'struct localeinfo_struct'
|     `-Record 0x24bfc211aa0 'localeinfo_struct'
|-TypedefDecl 0x24bfc211e10 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x24bfc211dc0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x24bfc211ce0 'struct localeinfo_struct' sugar
|     `-RecordType 0x24bfc211b40 'struct localeinfo_struct'
|       `-Record 0x24bfc211aa0 'localeinfo_struct'
|-RecordDecl 0x24bfc211e88 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x24bfc211f40 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x24bfc211fb8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x24bfc212078 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x24bfc222220 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x24bfc222290 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x24bfc222348 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x24bfc2222f0 'struct localerefcount' sugar
|   `-RecordType 0x24bfc211f20 'struct localerefcount'
|     `-Record 0x24bfc211e88 'localerefcount'
|-RecordDecl 0x24bfc2223b8 prev 0x24bfc211650 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x24bfc222438 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x24bfc2224b0 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x24bfc222520 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x24bfc222590 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x24bfc222600 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x24bfc2227c8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x24bfc222838 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x24bfc2228a8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x24bfc222918 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x24bfc222988 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x24bfc2229f8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x24bfc222a50 parent 0x24bfa6da6e8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x24bfc222be0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x24bfc222c50 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x24bfc222cc0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x24bfc222d30 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x24bfc222dd0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x24bfc222e40 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x24bfc222f50 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x24bfc223088 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x24bfc223138 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x24bfc2230e0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x24bfc2116f0 'struct threadlocaleinfostruct'
|     `-Record 0x24bfc2223b8 'threadlocaleinfostruct'
|-FunctionDecl 0x24bfc21d540 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x24bfc21d190 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x24bfc21d240 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x24bfc21d2c0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x24bfc21d338 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24bfc21d908 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x24bfc21d9a8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x24bfc21da10 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x24bfc21da78 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24bfc21daf8 prev 0x24bfc21d908 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x24bfc21d630 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x24bfc21d6b0 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x24bfc21d728 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24bfc21deb8 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x24bfc21dbe0 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x24bfc21dc60 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x24bfc21dcd8 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x24bfc225420 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x24bfc21dfa0 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x24bfc21e020 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x24bfc21e098 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24bfc225210 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24bfc225728 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x24bfc2257c8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x24bfc225830 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x24bfc225898 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24bfc225918 prev 0x24bfc225728 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x24bfc225510 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x24bfc225590 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x24bfc225608 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x24bfc225cd8 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x24bfc225d78 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x24bfc225de0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x24bfc225e48 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24bfc225ec8 prev 0x24bfc225cd8 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x24bfc225a00 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x24bfc225a80 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x24bfc225af8 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x24bfc21e308 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x24bfc225fd8 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x24bfc226070 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x24bfc2260f0 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x24bfc226168 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x24bfc21e6c8 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x24bfc21e768 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x24bfc21e7d0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x24bfc21e838 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24bfc21e8b8 prev 0x24bfc21e6c8 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x24bfc21e3f8 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x24bfc21e478 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x24bfc21e4f0 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x24bfc21ed38 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x24bfc21edd8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x24bfc21ee40 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x24bfc21eea8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x24bfc21ef10 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24bfc21ef98 prev 0x24bfc21ed38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x24bfc21ea80 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x24bfc21eb00 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x24bfc21eb80 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x24bfc21ebf8 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24bfc21f058 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x24bfc228510 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x24bfc2282f8 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x24bfc228378 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x24bfc2283f0 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24bfc2285c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x24bfc2289c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x24bfc2286f0 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x24bfc228768 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24bfc2287e8 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x24bfc228d90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x24bfc228ba0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x24bfc228c20 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x24bfc228e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24bfc229290 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x24bfc228f88 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x24bfc229000 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x24bfc229080 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x24bfc229660 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x24bfc229700 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x24bfc229768 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24bfc2297e0 prev 0x24bfc229660 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x24bfc229470 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x24bfc2294f0 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x24bfc229890 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24bfc229be8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x24bfc2299d8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x24bfc229a50 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x24bfc229ad0 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x24bfc229f10 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x24bfc229fb0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x24bfc22a018 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24bfc22a090 prev 0x24bfc229f10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x24bfc229d90 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x24bfc229e10 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x24bfc22a140 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24bfc22d4e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x24bfc22d580 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24bfc22d5e8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24bfc22d660 prev 0x24bfc22d4e0 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x24bfc22d2f0 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x24bfc22d370 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x24bfc22d8b0 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x24bfc22d950 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24bfc22d9c0 prev 0x24bfc22d8b0 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x24bfc22d740 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x24bfc22dcb8 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x24bfc22da98 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x24bfc22db10 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24bfc22df08 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x24bfc22dd98 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x24bfc22de10 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x24bfc22e238 <line:131:1, line:133:1>
|   `-ReturnStmt 0x24bfc22e228 <line:132:5, col:51>
|     `-ConditionalOperator 0x24bfc22e1f8 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x24bfc22e068 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x24bfc22e048 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x24bfc22e018 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x24bfc22dfd0 <col:13> 'const char *' lvalue ParmVar 0x24bfc22dd98 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x24bfc22e030 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x24bfc22dff0 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x24bfc22e1e0 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x24bfc22e088 <col:24> 'int' 0
|       `-CallExpr 0x24bfc22e180 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x24bfc22e168 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x24bfc22e0b0 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x24bfc22dcb8 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x24bfc22e1b0 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x24bfc22e0d0 <col:36> 'const char *' lvalue ParmVar 0x24bfc22dd98 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x24bfc22e1c8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x24bfc22e0f0 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x24bfc22de10 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x24bfc2264c8 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x24bfc226220 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x24bfc226298 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x24bfc226318 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x24bfc226390 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x24bfc2267d0 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x24bfc226870 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x24bfc2268d8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x24bfc226940 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24bfc2269c0 prev 0x24bfc2267d0 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x24bfc2265b8 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x24bfc226638 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x24bfc2266b0 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x24bfc226bf8 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x24bfc226aa8 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x24bfc226ec0 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x24bfc226f60 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24bfc226fc8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x24bfc227040 prev 0x24bfc226ec0 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x24bfc226cd0 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x24bfc226d50 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x24bfc22a2e0 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x24bfc227120 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x24bfc2271a0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x24bfc22a540 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x24bfc22a3c0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x24bfc22a440 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x24bfc22a8f8 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x24bfc22a620 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x24bfc22a6a0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x24bfc22a718 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24bfc22ab60 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x24bfc22a9e0 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x24bfc22aa60 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x24bfc22ae58 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x24bfc22ac40 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x24bfc22acc0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x24bfc22ad38 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24bfc22b0c0 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x24bfc22af40 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x24bfc22afc0 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x24bfc2273c8 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x24bfc22b1a0 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x24bfc227230 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x24bfc2272a8 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24bfc227788 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x24bfc2274b0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x24bfc227530 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x24bfc2275a8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24bfc227bf0 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x24bfc227870 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x24bfc2278f0 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x24bfc227968 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24bfc2279e0 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24bfc227ef8 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x24bfc227ce0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x24bfc227d60 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x24bfc227dd8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24bfc22b2e8 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x24bfc227fe0 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x24bfc228060 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x24bfc2280d8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24bfc228150 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24bfc22b5f8 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x24bfc22b698 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24bfc22b700 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24bfc22b778 prev 0x24bfc22b5f8 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x24bfc22b3d8 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x24bfc22b458 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x24bfc22ba30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x24bfc22b950 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x24bfc22bad8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24bfc22beb0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x24bfc22bc20 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x24bfc22bc98 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24bfc22bd18 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x24bfc22c1c8 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x24bfc22c280 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x24bfc22c2f0 prev 0x24bfc22c1c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x24bfc22c090 <col:90> col:93 'int'
| `-DeprecatedAttr 0x24bfc22c398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24bfc22c6f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x24bfc22c4e0 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x24bfc22c558 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24bfc22c5d8 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x24bfc22c9f8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x24bfc22c7d8 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x24bfc22c850 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x24bfc22cce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x24bfc22cb98 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x24bfc22cd90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24bfc22d1a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x24bfc22ced8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x24bfc22cf50 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24bfc22cfc8 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24bfc25b220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x24bfc25aff8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x24bfc25b070 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x24bfc25b2d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24bfc25b788 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x24bfc25b418 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x24bfc25b490 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x24bfc25b510 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x24bfc25b588 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x24bfc25bc08 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x24bfc25bca8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x24bfc25bd10 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24bfc25bd78 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24bfc25bdf8 prev 0x24bfc25bc08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x24bfc25b938 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x24bfc25b9b8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x24bfc25ba30 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24bfc25beb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24bfc2571f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x24bfc257298 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x24bfc257300 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24bfc257368 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24bfc2573e8 prev 0x24bfc2571f8 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x24bfc256fe0 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x24bfc257060 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x24bfc2570d8 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24bfc2576e8 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x24bfc2574d0 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x24bfc257550 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x24bfc2575c8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24bfc257a80 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x24bfc2577d0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x24bfc257850 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x24bfc2578c8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24bfc257940 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24bfc257e18 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x24bfc257b70 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x24bfc257be8 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x24bfc257c68 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x24bfc257ce0 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x24bfc259208 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x24bfc2592a8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x24bfc259310 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24bfc259378 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24bfc2593f8 prev 0x24bfc259208 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x24bfc258ff0 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x24bfc259070 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x24bfc2590e8 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24bfc2594b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24bfc259968 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x24bfc2595f8 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x24bfc259670 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24bfc2596f0 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x24bfc259768 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24bfc259de8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x24bfc259b18 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x24bfc259b98 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x24bfc259c10 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24bfc259ea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24bfc2561c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x24bfc256260 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24bfc2562c8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24bfc256340 prev 0x24bfc2561c0 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x24bfc255fd0 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x24bfc256050 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x24bfc2565a0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x24bfc256640 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24bfc2566a8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x24bfc256720 prev 0x24bfc2565a0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x24bfc256420 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x24bfc2564a0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x24bfc2568e0 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x24bfc256800 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x24bfc256b30 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x24bfc256bd0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24bfc256c38 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24bfc256cb0 prev 0x24bfc256b30 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x24bfc2569b8 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x24bfc256a38 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x24bfc257f30 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x24bfc257fd0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24bfc258038 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24bfc2580b0 prev 0x24bfc257f30 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x24bfc256d90 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x24bfc256e10 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x24bfc2583d0 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x24bfc258470 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x24bfc2584d8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24bfc258550 prev 0x24bfc2583d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x24bfc258250 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x24bfc2582d0 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x24bfc258600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24bfc2589e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x24bfc258748 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x24bfc2587c8 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x24bfc258848 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x24bfc258c40 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x24bfc258ad0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x24bfc258b48 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x24bfc25bf30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x24bfc258de0 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x24bfc25bfd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24bfc25c328 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x24bfc25c120 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x24bfc25c198 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24bfc25c210 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24bfc25c648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x24bfc25c4d0 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x24bfc25c548 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x24bfc25c6f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24bfc25cb10 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x24bfc25cbb0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x24bfc25cc18 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24bfc25cc80 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24bfc25cd00 prev 0x24bfc25cb10 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x24bfc25c840 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x24bfc25c8c0 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x24bfc25c938 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24bfc255138 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x24bfc25cde8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x24bfc25ce68 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x24bfc254ec0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24bfc254f38 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24bfc2553e0 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x24bfc255480 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24bfc2554f0 prev 0x24bfc2553e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x24bfc255300 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x24bfc255598 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x24bfc2558e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x24bfc255760 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x24bfc2557e0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x24bfc255990 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x24bfc255cd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x24bfc255b58 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x24bfc255bd8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x24bfc255d88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x24bfc264148 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x24bfc264068 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x24bfc2641f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x24bfc264608 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x24bfc2643f0 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x24bfc264470 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x24bfc2644e8 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24bfc2646c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x24bfc264aa0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x24bfc264888 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x24bfc264908 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x24bfc264980 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24bfc264b58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x24bfc264e00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x24bfc264d20 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x24bfc264ea8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x24bfc25e1a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x24bfc25e020 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x24bfc25e0a0 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x24bfc25e250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x24bfc25e4f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x24bfc25e418 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x24bfc25e5a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x24bfc25e830 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x24bfc25e6c0 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x24bfc25ebc0 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x24bfc25e900 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x24bfc25e978 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x24bfc25e9f0 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x24bfc25ffa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24bfc25ed60 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x24bfc25edd8 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x24bfc260058 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24bfc2603b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x24bfc260458 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x24bfc2604c0 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x24bfc260538 prev 0x24bfc2603b8 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x24bfc260198 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x24bfc260210 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x24bfc260830 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x24bfc2608d0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x24bfc260938 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x24bfc2609b0 prev 0x24bfc260830 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x24bfc260610 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x24bfc260688 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x24bfc260c90 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x24bfc260a88 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x24bfc260b00 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x24bfc260b78 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x24bfc264ff8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24bfc260e30 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x24bfc260ea8 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x24bfc2650a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24bfc265408 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24bfc2651e8 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x24bfc265260 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x24bfc265650 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x24bfc2656f0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x24bfc265760 prev 0x24bfc265650 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x24bfc2654e0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x24bfc265a48 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x24bfc265830 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x24bfc2658a8 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24bfc265c90 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x24bfc265b20 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x24bfc265b98 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x24bfc266040 <line:306:1, line:308:1>
|   `-ReturnStmt 0x24bfc266030 <line:307:5, col:56>
|     `-ConditionalOperator 0x24bfc266000 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x24bfc265e50 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x24bfc265e30 <col:13, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'int' '=='
|       |   |-ImplicitCastExpr 0x24bfc265e00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x24bfc265d58 <col:13> 'const wchar_t *' lvalue ParmVar 0x24bfc265b20 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x24bfc265e18 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x24bfc265de0 <col:16, col:25> 'void *'
|       |       `-CStyleCastExpr 0x24bfc265db8 <col:17, col:24> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x24bfc265d78 <col:24> 'int' 0
|       |-ImplicitCastExpr 0x24bfc265fe8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x24bfc265e70 <col:29> 'int' 0
|       `-CallExpr 0x24bfc265f70 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x24bfc265f58 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x24bfc265e98 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x24bfc265a48 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x24bfc265fa0 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x24bfc265eb8 <col:41> 'const wchar_t *' lvalue ParmVar 0x24bfc265b20 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x24bfc265fd0 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x24bfc265ed8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x24bfc265b98 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x24bfc2663d8 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x24bfc266068 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x24bfc2660e0 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x24bfc266158 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x24bfc2661d0 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x24bfc266840 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x24bfc266580 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x24bfc2665f8 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x24bfc266670 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24bfc2668f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24bfc266d08 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x24bfc266da8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x24bfc266e10 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x24bfc266e78 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24bfc266ef8 prev 0x24bfc266d08 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x24bfc266a38 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24bfc266ab0 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x24bfc266b28 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24bfc267290 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x24bfc266ff0 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x24bfc267068 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x24bfc2670e0 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x24bfc267158 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x24bfc267640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x24bfc267438 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x24bfc2674b0 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x24bfc267528 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24bfc2676f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24bfc267a58 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24bfc267838 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x24bfc2678b0 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x24bfc267ca0 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x24bfc267b30 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x24bfc267ba8 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x24bfc267ee8 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24bfc267d78 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x24bfc267df0 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x24bfc2610f0 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24bfc260f80 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x24bfc260ff8 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x24bfc2613f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24bfc261288 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x24bfc261300 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x24bfc2614a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24bfc261910 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x24bfc2615e8 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x24bfc261660 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x24bfc261740 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x24bfc261c30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x24bfc261ab8 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x24bfc261cd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24bfc268160 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x24bfc261e18 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x24bfc261e90 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24bfc261f10 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x24bfc268410 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x24bfc268338 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x24bfc2684b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24bfc268880 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x24bfc2685f8 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x24bfc268670 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24bfc2686e8 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x24bfc268ad8 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24bfc268960 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x24bfc2689d8 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x24bfc268e78 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x24bfc268bb0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24bfc268c28 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x24bfc268ca0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24bfc263138 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x24bfc268f58 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24bfc262fa0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x24bfc263018 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24bfc263590 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x24bfc263218 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24bfc263290 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x24bfc263308 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24bfc263380 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24bfc2639e8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x24bfc263678 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x24bfc2636f0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24bfc263768 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x24bfc2637e0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24bfc263e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x24bfc263b90 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x24bfc263c08 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x24bfc263c80 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24bfc263f08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24bfc269270 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x24bfc2690f8 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x24bfc269600 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x24bfc269340 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x24bfc2693b8 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24bfc269430 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x24bfc2699b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x24bfc2697a0 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x24bfc269818 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x24bfc269a68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24bfc269dc8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x24bfc269ba8 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x24bfc269c20 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x24bfc261fe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x24bfc269f60 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x24bfc262090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24bfc262490 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x24bfc2621d0 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x24bfc262248 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24bfc2622c0 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24bfc262848 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x24bfc262630 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x24bfc2626a8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x24bfc2628f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24bfc262ba8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x24bfc262a38 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x24bfc262ab0 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x24bfc262e18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x24bfc262d40 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x24bfc262ec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24bfc271380 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x24bfc271178 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x24bfc2711f0 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24bfc271268 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24bfc271690 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x24bfc271520 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x24bfc271598 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x24bfc271740 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24bfc271b40 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x24bfc271880 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x24bfc2718f8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x24bfc271970 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24bfc271f88 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x24bfc271c20 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x24bfc271c98 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x24bfc271d10 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24bfc271d88 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24bfc26a188 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24bfc26a010 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x24bfc26a088 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x24bfc26a470 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x24bfc26a260 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24bfc26a2d8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x24bfc26a350 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24bfc26a6c8 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24bfc26a550 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x24bfc26a5c8 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x24bfc26a9b0 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x24bfc26a7a0 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24bfc26a818 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x24bfc26a890 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24bfc26aca0 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x24bfc26aa90 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24bfc26ab08 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x24bfc26ab80 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24bfc2700c0 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x24bfc26ad80 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24bfc26adf8 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x24bfc26ae70 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24bfc26aee8 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24bfc2703b8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x24bfc2701a8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24bfc270220 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x24bfc270298 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24bfc270740 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x24bfc270498 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24bfc270510 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x24bfc270588 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24bfc270600 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24bfc2709a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x24bfc2708c8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x24bfc270a48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x24bfc270d80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24bfc270c08 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24bfc270c80 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x24bfc270e30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x24bfc26e1e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x24bfc270ff0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24bfc26e050 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x24bfc26e0c8 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24bfc26e2a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x24bfc26e668 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x24bfc26e460 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x24bfc26e4d8 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x24bfc26e550 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24bfc26e720 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x24bfc26e9b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x24bfc26e8e0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x24bfc26ea60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x24bfc26ed90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x24bfc26ec20 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x24bfc26ec98 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x24bfc26ee40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x24bfc26c108 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x24bfc26c030 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x24bfc26c1b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x24bfc26c448 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x24bfc26c370 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x24bfc26c4f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x24bfc26c828 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24bfc26c6b0 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24bfc26c728 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x24bfc26c8d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x24bfc26cd00 <.//openssl//file_jk/before\crypto\asn1/asn1_locl.h:12:1, col:60> col:5 invalid asn1_utctime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x24bfc26cb60 <col:24, col:35> col:35 tm 'struct tm *'
| `-ParmVarDecl 0x24bfc26cbe0 <col:39, col:59> col:59 invalid d 'const int *'
|-FunctionDecl 0x24bfc26d0f0 <line:13:1, col:76> col:5 invalid asn1_generalizedtime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x24bfc26cf30 <col:32, col:43> col:43 tm 'struct tm *'
| `-ParmVarDecl 0x24bfc26cfb0 <col:47, col:75> col:75 invalid d 'const int *'
|-RecordDecl 0x24bfc26d1a0 <line:17:1, line:38:1> line:17:8 invalid struct asn1_sctx_st definition
| |-FieldDecl 0x24bfc26d278 <line:19:5, col:22> col:22 invalid it 'const int *'
| |-FieldDecl 0x24bfc26d2e8 <line:21:5, col:26> col:26 invalid tt 'const int *'
| |-FieldDecl 0x24bfc26d358 <line:23:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x24bfc26d3c8 <line:25:5, col:9> col:9 skidx 'int'
| |-FieldDecl 0x24bfc26d438 <line:27:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x24bfc26d4a8 <line:29:5, col:17> col:17 sname 'const char *'
| |-FieldDecl 0x24bfc26d518 <col:5, col:25> col:25 fname 'const char *'
| |-FieldDecl 0x24bfc26d588 <line:31:5, col:9> col:9 prim_type 'int'
| |-FieldDecl 0x24bfc26d628 <line:33:5, col:18> col:18 invalid field 'int **'
| |-FieldDecl 0x24bfc26d7f8 <line:35:5, col:35> col:11 scan_cb 'int (*)(int *)'
| `-FieldDecl 0x24bfc26d868 <line:37:5, col:11> col:11 app_data 'void *'
|-RecordDecl 0x24bfc26d8c0 <line:40:9, col:16> col:16 struct mime_param_st
|-TypedefDecl 0x24bfc26d9d8 <col:1, col:30> col:30 referenced MIME_PARAM 'struct mime_param_st':'struct mime_param_st'
| `-ElaboratedType 0x24bfc26d980 'struct mime_param_st' sugar
|   `-RecordType 0x24bfc26d960 'struct mime_param_st'
|     `-Record 0x24bfc26d8c0 'mime_param_st'
|-FunctionDecl 0x24bfc26db80 <line:41:1, col:27> col:1 DEFINE_STACK_OF 'int (MIME_PARAM)'
| `-ParmVarDecl 0x24bfc26da80 <col:17> col:27 'MIME_PARAM':'struct mime_param_st'
|-RecordDecl 0x24bfc26dc40 <line:42:9, col:16> col:16 struct mime_header_st
|-TypedefDecl 0x24bfc26dd58 <col:1, col:31> col:31 referenced MIME_HEADER 'struct mime_header_st':'struct mime_header_st'
| `-ElaboratedType 0x24bfc26dd00 'struct mime_header_st' sugar
|   `-RecordType 0x24bfc26dce0 'struct mime_header_st'
|     `-Record 0x24bfc26dc40 'mime_header_st'
|-FunctionDecl 0x24bfc26df00 <line:43:1, col:28> col:1 invalid DEFINE_STACK_OF 'int (MIME_HEADER)'
| `-ParmVarDecl 0x24bfc26de00 <col:17> col:28 'MIME_HEADER':'struct mime_header_st'
|-VarDecl 0x24bfc2720b8 <line:46:1, col:32> col:20 _asn1_mon 'const char *[12]' extern
|-FunctionDecl 0x24bfc2722a8 <line:48:1, col:54> col:6 invalid asn1_string_embed_free 'void (int *, int)'
| |-ParmVarDecl 0x24bfc272150 <col:29, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x24bfc2721d0 <col:45, col:49> col:49 embed 'int'
|-FunctionDecl 0x24bfc2724d0 <line:50:1, col:68> col:5 invalid asn1_get_choice_selector 'int (int **, const int *)'
| |-ParmVarDecl 0x24bfc272378 <col:30, col:43> col:43 invalid pval 'int **'
| `-ParmVarDecl 0x24bfc2723f8 <col:49, col:66> col:66 invalid it 'const int *'
|-FunctionDecl 0x24bfc272790 <line:51:1, line:52:49> line:51:5 invalid asn1_set_choice_selector 'int (int **, int, const int *)'
| |-ParmVarDecl 0x24bfc2725a0 <col:30, col:43> col:43 invalid pval 'int **'
| |-ParmVarDecl 0x24bfc272620 <col:49, col:53> col:53 value 'int'
| `-ParmVarDecl 0x24bfc2726a0 <line:52:30, col:47> col:47 invalid it 'const int *'
|-FunctionDecl 0x24bfc2729c8 <line:54:1, col:75> col:14 invalid asn1_get_field_ptr 'int **(int **, const int *)'
| |-ParmVarDecl 0x24bfc272868 <col:33, col:46> col:46 invalid pval 'int **'
| `-ParmVarDecl 0x24bfc2728e8 <col:52, col:73> col:73 invalid tt 'const int *'
|-FunctionDecl 0x24bfc272c80 <line:56:1, line:57:45> line:56:22 invalid asn1_do_adb 'const int *(int **, const int *, int)'
| |-ParmVarDecl 0x24bfc272a98 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x24bfc272b18 <col:53, col:74> col:74 invalid tt 'const int *'
| `-ParmVarDecl 0x24bfc272b98 <line:57:34, col:38> col:38 nullerr 'int'
|-FunctionDecl 0x24bfc272f00 <line:59:1, col:64> col:5 invalid asn1_do_lock 'int (int **, int, const int *)'
| |-ParmVarDecl 0x24bfc272d58 <col:18, col:31> col:31 invalid pval 'int **'
| |-ParmVarDecl 0x24bfc272dd8 <col:37, col:41> col:41 op 'int'
| `-ParmVarDecl 0x24bfc272e58 <col:45, col:62> col:62 invalid it 'const int *'
|-FunctionDecl 0x24bfc273178 <line:61:1, col:58> col:6 invalid asn1_enc_init 'void (int **, const int *)'
| |-ParmVarDecl 0x24bfc272fd8 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x24bfc2730a0 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x24bfc273360 <line:62:1, col:58> col:6 invalid asn1_enc_free 'void (int **, const int *)'
| |-ParmVarDecl 0x24bfc273248 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x24bfc2732c8 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x24bfc273710 <line:63:1, line:64:41> line:63:5 invalid asn1_enc_restore 'int (int *, unsigned char **, int **, const int *)'
| |-ParmVarDecl 0x24bfc273428 <col:22, col:27> col:27 len 'int *'
| |-ParmVarDecl 0x24bfc273508 <col:32, col:48> col:48 out 'unsigned char **'
| |-ParmVarDecl 0x24bfc273590 <col:53, col:66> col:66 invalid pval 'int **'
| `-ParmVarDecl 0x24bfc273610 <line:64:22, col:39> col:39 invalid it 'const int *'
|-FunctionDecl 0x24bfc273a70 <line:65:1, line:66:38> line:65:5 invalid asn1_enc_save 'int (int **, const unsigned char *, int, const int *)'
| |-ParmVarDecl 0x24bfc2737f0 <col:19, col:32> col:32 invalid pval 'int **'
| |-ParmVarDecl 0x24bfc273870 <col:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x24bfc2738f0 <col:63, col:67> col:67 inlen 'int'
| `-ParmVarDecl 0x24bfc273970 <line:66:19, col:36> col:36 invalid it 'const int *'
|-FunctionDecl 0x24bfc273d38 <line:68:1, col:76> col:6 invalid asn1_item_embed_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x24bfc273b50 <col:27, col:40> col:40 invalid pval 'int **'
| |-ParmVarDecl 0x24bfc273bd0 <col:46, col:63> col:63 invalid it 'const int *'
| `-ParmVarDecl 0x24bfc273c50 <col:67, col:71> col:71 embed 'int'
|-FunctionDecl 0x24bfc273fb0 <line:69:1, col:75> col:6 invalid asn1_primitive_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x24bfc273e10 <col:26, col:39> col:39 invalid pval 'int **'
| |-ParmVarDecl 0x24bfc273e90 <col:45, col:62> col:62 invalid it 'const int *'
| `-ParmVarDecl 0x24bfc273f10 <col:66, col:70> col:70 embed 'int'
|-FunctionDecl 0x24bfc2802b8 <line:70:1, col:67> col:6 invalid asn1_template_free 'void (int **, const int *)'
| |-ParmVarDecl 0x24bfc2801a0 <col:25, col:38> col:38 invalid pval 'int **'
| `-ParmVarDecl 0x24bfc280220 <col:44, col:65> col:65 invalid tt 'const int *'
|-FunctionDecl 0x24bfc2805a0 <line:72:1, line:73:41> line:72:14 invalid c2i_ASN1_OBJECT 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x24bfc280388 <col:30, col:44> col:44 invalid a 'int **'
| |-ParmVarDecl 0x24bfc280438 <col:47, col:69> col:69 pp 'const unsigned char **'
| `-ParmVarDecl 0x24bfc2804b8 <line:73:30, col:35> col:35 length 'long'
|-FunctionDecl 0x24bfc2807d0 <line:74:1, col:63> col:5 invalid i2c_ASN1_BIT_STRING 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x24bfc280670 <col:25, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x24bfc2806f8 <col:45, col:61> col:61 pp 'unsigned char **'
|-FunctionDecl 0x24bfc280a50 <line:75:1, line:76:75> line:75:18 invalid c2i_ASN1_BIT_STRING 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x24bfc2808a0 <col:38, col:56> col:56 invalid a 'int **'
| |-ParmVarDecl 0x24bfc280928 <line:76:38, col:60> col:60 pp 'const unsigned char **'
| `-ParmVarDecl 0x24bfc2809a8 <col:64, col:69> col:69 length 'long'
|-FunctionDecl 0x24bfc280c48 <line:77:1, col:57> col:5 invalid i2c_ASN1_INTEGER 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x24bfc280b20 <col:22, col:36> col:36 invalid a 'int *'
| `-ParmVarDecl 0x24bfc280ba8 <col:39, col:55> col:55 pp 'unsigned char **'
|-FunctionDecl 0x24bfc280ec8 <line:78:1, line:79:43> line:78:15 invalid c2i_ASN1_INTEGER 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x24bfc280d18 <col:32, col:47> col:47 invalid a 'int **'
| |-ParmVarDecl 0x24bfc280da0 <col:50, col:72> col:72 pp 'const unsigned char **'
| `-ParmVarDecl 0x24bfc280e20 <line:79:32, col:37> col:37 length 'long'
|-FunctionDecl 0x24bfc27c1f0 <line:82:1, col:79> col:5 invalid c2i_uint64_int 'int (int *, int *, const unsigned char **, long)'
| |-ParmVarDecl 0x24bfc280f98 <col:20, col:30> col:30 invalid ret 'int *'
| |-ParmVarDecl 0x24bfc281018 <col:35, col:40> col:40 neg 'int *'
| |-ParmVarDecl 0x24bfc2810a0 <col:45, col:67> col:67 pp 'const unsigned char **'
| `-ParmVarDecl 0x24bfc281120 <col:71, col:76> col:76 len 'long'
|-FunctionDecl 0x24bfc27c4b0 <line:83:1, col:57> col:5 invalid i2c_uint64_int 'int (unsigned char *, int, int)'
| |-ParmVarDecl 0x24bfc27c2c8 <col:20, col:35> col:35 p 'unsigned char *'
| |-ParmVarDecl 0x24bfc27c348 <col:38, col:47> col:47 invalid r 'int'
| `-ParmVarDecl 0x24bfc27c3c8 <col:50, col:54> col:54 neg 'int'
|-FunctionDecl 0x24bfc27cad0 <.//openssl//file_jk/before\crypto\asn1\tasn_dec.c:28:1, line:31:41> line:28:12 invalid asn1_item_embed_d2i 'int (int **, const unsigned char **, long, const int *, int, int, char, int *, int)' static
| |-ParmVarDecl 0x24bfc27c588 <col:32, col:45> col:45 invalid pval 'int **'
| |-ParmVarDecl 0x24bfc27c610 <col:51, col:73> col:73 in 'const unsigned char **'
| |-ParmVarDecl 0x24bfc27c690 <line:29:32, col:37> col:37 len 'long'
| |-ParmVarDecl 0x24bfc27c710 <col:42, col:59> col:59 invalid it 'const int *'
| |-ParmVarDecl 0x24bfc27c790 <line:30:32, col:36> col:36 tag 'int'
| |-ParmVarDecl 0x24bfc27c810 <col:41, col:45> col:45 aclass 'int'
| |-ParmVarDecl 0x24bfc27c888 <col:53, col:58> col:58 opt 'char'
| |-ParmVarDecl 0x24bfc27c908 <col:63, col:73> col:73 invalid ctx 'int *'
| `-ParmVarDecl 0x24bfc27c988 <line:31:32, col:36> col:36 depth 'int'
|-FunctionDecl 0x24bfc27cd60 <line:33:1, col:61> col:12 used asn1_check_eoc 'int (const unsigned char **, long)' static
| |-ParmVarDecl 0x24bfc27cbd8 <col:27, col:49> col:49 in 'const unsigned char **'
| `-ParmVarDecl 0x24bfc27cc58 <col:53, col:58> col:58 len 'long'
|-FunctionDecl 0x24bfc27d070 <line:34:1, col:70> col:12 used asn1_find_end 'int (const unsigned char **, long, char)' static
| |-ParmVarDecl 0x24bfc27ce48 <col:26, col:48> col:48 in 'const unsigned char **'
| |-ParmVarDecl 0x24bfc27cec8 <col:52, col:57> col:57 len 'long'
| `-ParmVarDecl 0x24bfc27cf40 <col:62, col:67> col:67 inf 'char'
|-FunctionDecl 0x24bfc27f5c0 <line:36:1, line:37:65> line:36:12 invalid asn1_collect 'int (int *, const unsigned char **, long, char, int, int, int)' static
| |-ParmVarDecl 0x24bfc27f190 <col:25, col:34> col:34 invalid buf 'int *'
| |-ParmVarDecl 0x24bfc27f218 <col:39, col:61> col:61 in 'const unsigned char **'
| |-ParmVarDecl 0x24bfc27f298 <col:65, col:70> col:70 len 'long'
| |-ParmVarDecl 0x24bfc27f310 <line:37:25, col:30> col:30 inf 'char'
| |-ParmVarDecl 0x24bfc27f390 <col:35, col:39> col:39 tag 'int'
| |-ParmVarDecl 0x24bfc27f410 <col:44, col:48> col:48 aclass 'int'
| `-ParmVarDecl 0x24bfc27f490 <col:56, col:60> col:60 depth 'int'
|-FunctionDecl 0x24bfc27f8a0 <line:39:1, col:73> col:12 invalid collect_data 'int (int *, const unsigned char **, long)' static
| |-ParmVarDecl 0x24bfc27f6b0 <col:25, col:34> col:34 invalid buf 'int *'
| |-ParmVarDecl 0x24bfc27f738 <col:39, col:61> col:61 p 'const unsigned char **'
| `-ParmVarDecl 0x24bfc27f7b8 <col:64, col:69> col:69 plen 'long'
|-FunctionDecl 0x24bfc280010 <line:41:1, line:44:77> line:41:12 invalid asn1_check_tlen 'int (long *, int *, unsigned char *, char *, char *, const unsigned char **, long, int, int, char, int *)' static
| |-ParmVarDecl 0x24bfc27f9a0 <col:28, col:34> col:34 olen 'long *'
| |-ParmVarDecl 0x24bfc27fa20 <col:40, col:45> col:45 otag 'int *'
| |-ParmVarDecl 0x24bfc27faa0 <col:51, col:66> col:66 oclass 'unsigned char *'
| |-ParmVarDecl 0x24bfc27fb20 <line:42:28, col:34> col:34 inf 'char *'
| |-ParmVarDecl 0x24bfc27fba0 <col:39, col:45> col:45 cst 'char *'
| |-ParmVarDecl 0x24bfc27fc28 <line:43:28, col:50> col:50 in 'const unsigned char **'
| |-ParmVarDecl 0x24bfc27fca8 <col:54, col:59> col:59 len 'long'
| |-ParmVarDecl 0x24bfc27fd28 <line:44:28, col:32> col:32 exptag 'int'
| |-ParmVarDecl 0x24bfc27fda8 <col:40, col:44> col:44 expclass 'int'
| |-ParmVarDecl 0x24bfc27fe20 <col:54, col:59> col:59 opt 'char'
| `-ParmVarDecl 0x24bfc27fea0 <col:64, col:74> col:74 invalid ctx 'int *'
|-FunctionDecl 0x24bfc2845a0 <line:46:1, line:49:57> line:46:12 invalid asn1_template_ex_d2i 'int (int **, const unsigned char **, long, const int *, char, int *, int)' static
| |-ParmVarDecl 0x24bfc280128 <col:33, col:46> col:46 invalid pval 'int **'
| |-ParmVarDecl 0x24bfc284200 <line:47:33, col:55> col:55 in 'const unsigned char **'
| |-ParmVarDecl 0x24bfc284280 <col:59, col:64> col:64 len 'long'
| |-ParmVarDecl 0x24bfc284300 <line:48:33, col:54> col:54 invalid tt 'const int *'
| |-ParmVarDecl 0x24bfc284378 <col:58, col:63> col:63 opt 'char'
| |-ParmVarDecl 0x24bfc2843f8 <line:49:33, col:43> col:43 invalid ctx 'int *'
| `-ParmVarDecl 0x24bfc284478 <col:48, col:52> col:52 depth 'int'
|-FunctionDecl 0x24bfc284a60 <line:50:1, line:53:60> line:50:12 invalid asn1_template_noexp_d2i 'int (int **, const unsigned char **, long, const int *, char, int *, int)' static
| |-ParmVarDecl 0x24bfc284698 <col:36, col:49> col:49 invalid val 'int **'
| |-ParmVarDecl 0x24bfc284720 <line:51:36, col:58> col:58 in 'const unsigned char **'
| |-ParmVarDecl 0x24bfc2847a0 <col:62, col:67> col:67 len 'long'
| |-ParmVarDecl 0x24bfc284820 <line:52:36, col:57> col:57 invalid tt 'const int *'
| |-ParmVarDecl 0x24bfc284898 <col:61, col:66> col:66 opt 'char'
| |-ParmVarDecl 0x24bfc284918 <line:53:36, col:46> col:46 invalid ctx 'int *'
| `-ParmVarDecl 0x24bfc284998 <col:51, col:55> col:55 depth 'int'
|-FunctionDecl 0x24bfc285010 <line:54:1, line:58:47> line:54:12 invalid asn1_d2i_ex_primitive 'int (int **, const unsigned char **, long, const int *, int, int, char, int *)' static
| |-ParmVarDecl 0x24bfc284b58 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x24bfc284be0 <line:55:34, col:56> col:56 in 'const unsigned char **'
| |-ParmVarDecl 0x24bfc284c60 <col:60, col:65> col:65 len 'long'
| |-ParmVarDecl 0x24bfc284ce0 <line:56:34, col:51> col:51 invalid it 'const int *'
| |-ParmVarDecl 0x24bfc284d60 <line:57:34, col:38> col:38 tag 'int'
| |-ParmVarDecl 0x24bfc284de0 <col:43, col:47> col:47 aclass 'int'
| |-ParmVarDecl 0x24bfc284e58 <col:55, col:60> col:60 opt 'char'
| `-ParmVarDecl 0x24bfc284ed8 <line:58:34, col:44> col:44 invalid ctx 'int *'
|-FunctionDecl 0x24bfc2814d0 <line:59:1, line:60:71> line:59:12 invalid asn1_ex_c2i 'int (int **, const unsigned char *, int, int, char *, const int *)' static
| |-ParmVarDecl 0x24bfc285110 <col:24, col:37> col:37 invalid pval 'int **'
| |-ParmVarDecl 0x24bfc2811b0 <col:43, col:64> col:64 cont 'const unsigned char *'
| |-ParmVarDecl 0x24bfc281230 <col:70, col:74> col:74 len 'int'
| |-ParmVarDecl 0x24bfc2812b0 <line:60:24, col:28> col:28 utype 'int'
| |-ParmVarDecl 0x24bfc281330 <col:35, col:41> col:41 free_cont 'char *'
| `-ParmVarDecl 0x24bfc2813b0 <col:52, col:69> col:69 invalid it 'const int *'
|-VarDecl 0x24bfc281680 <line:63:1, col:38> col:28 used tag2bit 'const unsigned long [32]' static
|-FunctionDecl 0x24bfc2818f0 <line:84:1, line:89:1> line:84:15 used ASN1_tag2bit 'unsigned long (int)'
| |-ParmVarDecl 0x24bfc281808 <col:28, col:32> col:32 used tag 'int'
| `-CompoundStmt 0x24bfc281c60 <line:85:1, line:89:1>
|   |-IfStmt 0x24bfc281b60 <line:86:5, line:87:16>
|   | |-BinaryOperator 0x24bfc281af0 <line:86:9, col:31> 'int' '||'
|   | | |-ParenExpr 0x24bfc281a30 <col:9, col:17> 'int'
|   | | | `-BinaryOperator 0x24bfc281a10 <col:10, col:16> 'int' '<'
|   | | |   |-ImplicitCastExpr 0x24bfc2819f8 <col:10> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x24bfc2819b0 <col:10> 'int' lvalue ParmVar 0x24bfc281808 'tag' 'int'
|   | | |   `-IntegerLiteral 0x24bfc2819d0 <col:16> 'int' 0
|   | | `-ParenExpr 0x24bfc281ad0 <col:22, col:31> 'int'
|   | |   `-BinaryOperator 0x24bfc281ab0 <col:23, col:29> 'int' '>'
|   | |     |-ImplicitCastExpr 0x24bfc281a98 <col:23> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x24bfc281a50 <col:23> 'int' lvalue ParmVar 0x24bfc281808 'tag' 'int'
|   | |     `-IntegerLiteral 0x24bfc281a70 <col:29> 'int' 30
|   | `-ReturnStmt 0x24bfc281b50 <line:87:9, col:16>
|   |   `-ImplicitCastExpr 0x24bfc281b38 <col:16> 'unsigned long' <IntegralCast>
|   |     `-IntegerLiteral 0x24bfc281b10 <col:16> 'int' 0
|   `-ReturnStmt 0x24bfc281c50 <line:88:5, col:23>
|     `-ImplicitCastExpr 0x24bfc281c38 <col:12, col:23> 'unsigned long' <LValueToRValue>
|       `-ArraySubscriptExpr 0x24bfc281c18 <col:12, col:23> 'const unsigned long' lvalue
|         |-ImplicitCastExpr 0x24bfc281be8 <col:12> 'const unsigned long *' <ArrayToPointerDecay>
|         | `-DeclRefExpr 0x24bfc281b78 <col:12> 'const unsigned long [32]' lvalue Var 0x24bfc281680 'tag2bit' 'const unsigned long [32]'
|         `-ImplicitCastExpr 0x24bfc281c00 <col:20> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x24bfc281b98 <col:20> 'int' lvalue ParmVar 0x24bfc281808 'tag' 'int'
|-FunctionDecl 0x24bfc281f20 <line:104:1, line:116:1> line:104:13 invalid ASN1_item_d2i 'int *(int **, const unsigned char **, long, const int *)'
| |-ParmVarDecl 0x24bfc281ca0 <col:27, col:40> col:40 invalid pval 'int **'
| |-ParmVarDecl 0x24bfc281d28 <line:105:27, col:49> col:49 used in 'const unsigned char **'
| |-ParmVarDecl 0x24bfc281da8 <col:53, col:58> col:58 used len 'long'
| |-ParmVarDecl 0x24bfc281e28 <line:106:27, col:44> col:44 invalid it 'const int *'
| `-CompoundStmt 0x24bfc285400 <line:107:1, line:116:1>
|   `-ReturnStmt 0x24bfc2853f0 <line:115:5, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25>
|     `-ImplicitCastExpr 0x24bfc2853d8 <col:16, col:25> 'int *' <NullToPointer>
|       `-ParenExpr 0x24bfc2853b8 <col:16, col:25> 'void *'
|         `-CStyleCastExpr 0x24bfc285390 <col:17, col:24> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x24bfc285350 <col:24> 'int' 0
|-FunctionDecl 0x24bfc285888 <.//openssl//file_jk/before\crypto\asn1\tasn_dec.c:118:1, line:127:1> line:118:5 invalid ASN1_item_ex_d2i 'int (int **, const unsigned char **, long, const int *, int, int, char, int *)'
| |-ParmVarDecl 0x24bfc285438 <col:22, col:35> col:35 invalid pval 'int **'
| |-ParmVarDecl 0x24bfc2854c0 <col:41, col:63> col:63 used in 'const unsigned char **'
| |-ParmVarDecl 0x24bfc285540 <col:67, col:72> col:72 used len 'long'
| |-ParmVarDecl 0x24bfc2855c0 <line:119:22, col:39> col:39 invalid it 'const int *'
| |-ParmVarDecl 0x24bfc285640 <line:120:22, col:26> col:26 used tag 'int'
| |-ParmVarDecl 0x24bfc2856c0 <col:31, col:35> col:35 used aclass 'int'
| |-ParmVarDecl 0x24bfc285738 <col:43, col:48> col:48 used opt 'char'
| |-ParmVarDecl 0x24bfc2857b8 <col:53, col:63> col:63 invalid ctx 'int *'
| `-CompoundStmt 0x24bfc285d68 <line:121:1, line:127:1>
|   |-DeclStmt 0x24bfc285a00 <line:122:5, col:11>
|   | `-VarDecl 0x24bfc285998 <col:5, col:9> col:9 used rv 'int'
|   `-ReturnStmt 0x24bfc285d58 <line:126:5, col:12>
|     `-ImplicitCastExpr 0x24bfc285d40 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x24bfc285d20 <col:12> 'int' lvalue Var 0x24bfc285998 'rv' 'int'
|-FunctionDecl 0x24bfc282298 <line:134:1, line:429:1> line:134:12 invalid asn1_item_embed_d2i 'int (int **, const unsigned char **, long, const int *, int, int, char, int *, int)' static
| |-ParmVarDecl 0x24bfc285da8 <col:32, col:45> col:45 invalid pval 'int **'
| |-ParmVarDecl 0x24bfc285e30 <col:51, col:73> col:73 used in 'const unsigned char **'
| |-ParmVarDecl 0x24bfc285eb0 <line:135:32, col:37> col:37 used len 'long'
| |-ParmVarDecl 0x24bfc285f30 <col:42, col:59> col:59 invalid it 'const int *'
| |-ParmVarDecl 0x24bfc285fb0 <line:136:32, col:36> col:36 used tag 'int'
| |-ParmVarDecl 0x24bfc286030 <col:41, col:45> col:45 used aclass 'int'
| |-ParmVarDecl 0x24bfc2860a8 <col:53, col:58> col:58 used opt 'char'
| |-ParmVarDecl 0x24bfc286128 <col:63, col:73> col:73 invalid ctx 'int *'
| |-ParmVarDecl 0x24bfc2821c0 <line:137:32, col:36> col:36 used depth 'int'
| `-CompoundStmt 0x24bfc28a240 <line:138:1, line:429:1>
|   |-DeclStmt 0x24bfc282418 <line:139:5, col:37>
|   | `-VarDecl 0x24bfc2823b0 <col:5, col:26> col:26 invalid tt 'const int *'
|   |-DeclStmt 0x24bfc2824b0 <line:140:5, col:32>
|   | `-VarDecl 0x24bfc282448 <col:5, col:30> col:30 invalid ef 'const int *'
|   |-DeclStmt 0x24bfc282548 <line:141:5, col:36>
|   | `-VarDecl 0x24bfc2824e0 <col:5, col:21> col:21 invalid aux 'const int *'
|   |-DeclStmt 0x24bfc282718 <line:143:5, col:38>
|   | |-VarDecl 0x24bfc282578 <col:5, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> .//openssl//file_jk/before\crypto\asn1\tasn_dec.c:143:26 used p 'const unsigned char *' cinit
|   | | `-ImplicitCastExpr 0x24bfc282668 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const unsigned char *' <NullToPointer>
|   | |   `-ParenExpr 0x24bfc282648 <col:16, col:25> 'void *'
|   | |     `-CStyleCastExpr 0x24bfc282620 <col:17, col:24> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x24bfc2825e0 <col:24> 'int' 0
|   | `-VarDecl 0x24bfc282698 <.//openssl//file_jk/before\crypto\asn1\tasn_dec.c:143:5, col:37> col:37 used q 'const unsigned char *'
|   |-DeclStmt 0x24bfc2827b0 <line:144:5, col:25>
|   | `-VarDecl 0x24bfc282748 <col:5, col:19> col:19 used oclass 'unsigned char'
|   |-DeclStmt 0x24bfc2829d0 <line:145:5, col:40>
|   | |-VarDecl 0x24bfc2827d8 <col:5, col:10> col:10 used seq_eoc 'char'
|   | |-VarDecl 0x24bfc282850 <col:5, col:19> col:19 used seq_nolen 'char'
|   | |-VarDecl 0x24bfc2828c8 <col:5, col:30> col:30 used cst 'char'
|   | `-VarDecl 0x24bfc282940 <col:5, col:35> col:35 used isopt 'char'
|   |-DeclStmt 0x24bfc282a68 <line:146:5, col:16>
|   | `-VarDecl 0x24bfc282a00 <col:5, col:10> col:10 used tmplen 'long'
|   |-DeclStmt 0x24bfc282b00 <line:147:5, col:10>
|   | `-VarDecl 0x24bfc282a98 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x24bfc282b98 <line:148:5, col:13>
|   | `-VarDecl 0x24bfc282b30 <col:5, col:9> col:9 used otag 'int'
|   |-DeclStmt 0x24bfc282c58 <line:149:5, col:16>
|   | `-VarDecl 0x24bfc282bc8 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x24bfc282c30 <col:15> 'int' 0
|   |-IfStmt 0x24bfc282cc0 <line:151:5, line:152:16>
|   | |-OpaqueValueExpr 0x24bfc282ca8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x24bfc282c98 <col:9, col:16>
|   |   `-IntegerLiteral 0x24bfc282c70 <col:16> 'int' 0
|   |-IfStmt 0x24bfc282f28 <line:158:5, line:161:5>
|   | |-BinaryOperator 0x24bfc282d78 <line:158:9, line:26:35> 'int' '>'
|   | | |-UnaryOperator 0x24bfc282d38 <line:158:9, col:11> 'int' prefix '++'
|   | | | `-DeclRefExpr 0x24bfc282d00 <col:11> 'int' lvalue ParmVar 0x24bfc2821c0 'depth' 'int'
|   | | `-IntegerLiteral 0x24bfc282d50 <line:26:35> 'int' 30
|   | `-CompoundStmt 0x24bfc282f10 <line:158:46, line:161:5>
|   |   `-GotoStmt 0x24bfc282ef8 <line:160:9, col:14> 'err' 0x24bfc282ea8
|   |-LabelStmt 0x24bfc289f10 <line:420:2, col:8> 'auxerr'
|   | `-NullStmt 0x24bfc289f08 <col:8>
|   |-LabelStmt 0x24bfc28a1c0 <line:422:2, col:5> 'err'
|   | `-NullStmt 0x24bfc28a1b8 <col:5>
|   `-ReturnStmt 0x24bfc28a200 <line:428:5, col:12>
|     `-IntegerLiteral 0x24bfc28a1d8 <col:12> 'int' 0
|-FunctionDecl 0x24bfc28a6b0 <line:436:1, line:505:1> line:436:12 invalid asn1_template_ex_d2i 'int (int **, const unsigned char **, long, const int *, char, int *, int)' static
| |-ParmVarDecl 0x24bfc28a2e8 <col:33, col:46> col:46 invalid val 'int **'
| |-ParmVarDecl 0x24bfc28a370 <line:437:33, col:55> col:55 used in 'const unsigned char **'
| |-ParmVarDecl 0x24bfc28a3f0 <col:59, col:64> col:64 used inlen 'long'
| |-ParmVarDecl 0x24bfc28a470 <line:438:33, col:54> col:54 invalid tt 'const int *'
| |-ParmVarDecl 0x24bfc28a4e8 <col:58, col:63> col:63 used opt 'char'
| |-ParmVarDecl 0x24bfc28a568 <line:439:33, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x24bfc28a5e8 <col:48, col:52> col:52 used depth 'int'
| `-CompoundStmt 0x24bfc28ec78 <line:440:1, line:505:1>
|   |-DeclStmt 0x24bfc28a8b8 <line:441:5, col:22>
|   | |-VarDecl 0x24bfc28a7b8 <col:5, col:9> col:9 used flags 'int'
|   | `-VarDecl 0x24bfc28a838 <col:5, col:16> col:16 used aclass 'int'
|   |-DeclStmt 0x24bfc28a950 <line:442:5, col:12>
|   | `-VarDecl 0x24bfc28a8e8 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x24bfc28a9e8 <line:443:5, col:13>
|   | `-VarDecl 0x24bfc28a980 <col:5, col:10> col:10 used len 'long'
|   |-DeclStmt 0x24bfc28ab18 <line:444:5, col:31>
|   | |-VarDecl 0x24bfc28aa18 <col:5, col:26> col:26 used p 'const unsigned char *'
|   | `-VarDecl 0x24bfc28aa98 <col:5, col:30> col:30 used q 'const unsigned char *'
|   |-DeclStmt 0x24bfc28aba8 <line:445:5, col:17>
|   | `-VarDecl 0x24bfc28ab40 <col:5, col:10> col:10 used exp_eoc 'char'
|   |-IfStmt 0x24bfc28ac10 <line:446:5, line:447:16>
|   | |-OpaqueValueExpr 0x24bfc28abf8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x24bfc28abe8 <col:9, col:16>
|   |   `-IntegerLiteral 0x24bfc28abc0 <col:16> 'int' 0
|   |-BinaryOperator 0x24bfc28ad70 <line:451:5, col:10> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x24bfc28acb8 <col:5> 'const unsigned char *' lvalue Var 0x24bfc28aa18 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x24bfc28ad58 <col:9, col:10> 'const unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x24bfc28ad40 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x24bfc28ad28 <col:10> 'const unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x24bfc28acf0 <col:10> 'const unsigned char **' lvalue ParmVar 0x24bfc28a370 'in' 'const unsigned char **'
|   |-IfStmt 0x24bfc28eb20 <line:454:5, line:498:9> has_else
|   | |-OpaqueValueExpr 0x24bfc28eb08 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x24bfc28ea38 <line:454:35, line:497:5>
|   | | |-DeclStmt 0x24bfc28ae28 <line:455:9, col:17>
|   | | | `-VarDecl 0x24bfc28adc0 <col:9, col:14> col:14 used cst 'char'
|   | | |-BinaryOperator 0x24bfc28b1b0 <line:462:9, col:13> 'const unsigned char *' '='
|   | | | |-DeclRefExpr 0x24bfc28b140 <col:9> 'const unsigned char *' lvalue Var 0x24bfc28aa98 'q' 'const unsigned char *'
|   | | | `-ImplicitCastExpr 0x24bfc28b198 <col:13> 'const unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x24bfc28b178 <col:13> 'const unsigned char *' lvalue Var 0x24bfc28aa18 'p' 'const unsigned char *'
|   | | |-IfStmt 0x24bfc28e3d0 <line:463:9, line:467:21> has_else
|   | | | |-UnaryOperator 0x24bfc28b208 <line:463:13, col:14> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x24bfc28b1f0 <col:14> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x24bfc28b1d0 <col:14> 'int' lvalue Var 0x24bfc28a8e8 'ret' 'int'
|   | | | |-CompoundStmt 0x24bfc28e2b8 <col:19, line:466:9>
|   | | | | `-ReturnStmt 0x24bfc28e2a8 <line:465:13, col:20>
|   | | | |   `-IntegerLiteral 0x24bfc28e280 <col:20> 'int' 0
|   | | | `-IfStmt 0x24bfc28e3b8 <line:466:16, line:467:21>
|   | | |   |-BinaryOperator 0x24bfc28e348 <line:466:20, col:28> 'int' '=='
|   | | |   | |-ImplicitCastExpr 0x24bfc28e330 <col:20> 'int' <LValueToRValue>
|   | | |   | | `-DeclRefExpr 0x24bfc28e2d0 <col:20> 'int' lvalue Var 0x24bfc28a8e8 'ret' 'int'
|   | | |   | `-UnaryOperator 0x24bfc28e318 <col:27, col:28> 'int' prefix '-'
|   | | |   |   `-IntegerLiteral 0x24bfc28e2f0 <col:28> 'int' 1
|   | | |   `-ReturnStmt 0x24bfc28e3a8 <line:467:13, col:21>
|   | | |     `-UnaryOperator 0x24bfc28e390 <col:20, col:21> 'int' prefix '-'
|   | | |       `-IntegerLiteral 0x24bfc28e368 <col:21> 'int' 1
|   | | |-IfStmt 0x24bfc28e4b8 <line:468:9, line:472:9>
|   | | | |-UnaryOperator 0x24bfc28e430 <line:468:13, col:14> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x24bfc28e418 <col:14> 'char' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x24bfc28e3f8 <col:14> 'char' lvalue Var 0x24bfc28adc0 'cst' 'char'
|   | | | `-CompoundStmt 0x24bfc28e4a0 <col:19, line:472:9>
|   | | |   `-ReturnStmt 0x24bfc28e490 <line:471:13, col:20>
|   | | |     `-IntegerLiteral 0x24bfc28e468 <col:20> 'int' 0
|   | | |-IfStmt 0x24bfc28e668 <line:475:9, line:478:9>
|   | | | |-UnaryOperator 0x24bfc28e5e0 <line:475:13, col:14> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x24bfc28e5c8 <col:14> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x24bfc28e5a8 <col:14> 'int' lvalue Var 0x24bfc28a8e8 'ret' 'int'
|   | | | `-CompoundStmt 0x24bfc28e650 <col:19, line:478:9>
|   | | |   `-ReturnStmt 0x24bfc28e640 <line:477:13, col:20>
|   | | |     `-IntegerLiteral 0x24bfc28e618 <col:20> 'int' 0
|   | | |-CompoundAssignOperator 0x24bfc28e730 <line:480:9, col:20> 'long' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | | | |-DeclRefExpr 0x24bfc28e680 <col:9> 'long' lvalue Var 0x24bfc28a980 'len' 'long'
|   | | | `-BinaryOperator 0x24bfc28e710 <col:16, col:20> 'long long' '-'
|   | | |   |-ImplicitCastExpr 0x24bfc28e6e0 <col:16> 'const unsigned char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x24bfc28e6a0 <col:16> 'const unsigned char *' lvalue Var 0x24bfc28aa18 'p' 'const unsigned char *'
|   | | |   `-ImplicitCastExpr 0x24bfc28e6f8 <col:20> 'const unsigned char *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x24bfc28e6c0 <col:20> 'const unsigned char *' lvalue Var 0x24bfc28aa98 'q' 'const unsigned char *'
|   | | `-IfStmt 0x24bfc28ea10 <line:481:9, line:496:9> has_else
|   | |   |-ImplicitCastExpr 0x24bfc28e780 <line:481:13> 'char' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x24bfc28e760 <col:13> 'char' lvalue Var 0x24bfc28ab40 'exp_eoc' 'char'
|   | |   |-CompoundStmt 0x24bfc28e940 <col:22, line:487:9>
|   | |   | `-IfStmt 0x24bfc28e928 <line:483:13, line:486:13>
|   | |   |   |-UnaryOperator 0x24bfc28e870 <line:483:17, col:40> 'int' prefix '!' cannot overflow
|   | |   |   | `-CallExpr 0x24bfc28e828 <col:18, col:40> 'int'
|   | |   |   |   |-ImplicitCastExpr 0x24bfc28e810 <col:18> 'int (*)(const unsigned char **, long)' <FunctionToPointerDecay>
|   | |   |   |   | `-DeclRefExpr 0x24bfc28e798 <col:18> 'int (const unsigned char **, long)' Function 0x24bfc27cd60 'asn1_check_eoc' 'int (const unsigned char **, long)'
|   | |   |   |   |-UnaryOperator 0x24bfc28e7d8 <col:33, col:34> 'const unsigned char **' prefix '&' cannot overflow
|   | |   |   |   | `-DeclRefExpr 0x24bfc28e7b8 <col:34> 'const unsigned char *' lvalue Var 0x24bfc28aa18 'p' 'const unsigned char *'
|   | |   |   |   `-ImplicitCastExpr 0x24bfc28e858 <col:37> 'long' <LValueToRValue>
|   | |   |   |     `-DeclRefExpr 0x24bfc28e7f0 <col:37> 'long' lvalue Var 0x24bfc28a980 'len' 'long'
|   | |   |   `-CompoundStmt 0x24bfc28e910 <col:43, line:486:13>
|   | |   |     `-GotoStmt 0x24bfc28e8f8 <line:485:17, col:22> 'err' 0x24bfc28e8a8
|   | |   `-CompoundStmt 0x24bfc28e9f8 <line:487:16, line:496:9>
|   | |     `-IfStmt 0x24bfc28e9e0 <line:491:13, line:495:13>
|   | |       |-ImplicitCastExpr 0x24bfc28e978 <line:491:17> 'long' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x24bfc28e958 <col:17> 'long' lvalue Var 0x24bfc28a980 'len' 'long'
|   | |       `-CompoundStmt 0x24bfc28e9c8 <col:22, line:495:13>
|   | |         `-GotoStmt 0x24bfc28e9b0 <line:494:17, col:22> 'err' 0x24bfc28e8a8
|   | `-NullStmt 0x24bfc28eb00 <line:498:9>
|   |-BinaryOperator 0x24bfc28ebd0 <line:500:5, col:11> 'const unsigned char *' '='
|   | |-UnaryOperator 0x24bfc28eb80 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x24bfc28eb68 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x24bfc28eb48 <col:6> 'const unsigned char **' lvalue ParmVar 0x24bfc28a370 'in' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x24bfc28ebb8 <col:11> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x24bfc28eb98 <col:11> 'const unsigned char *' lvalue Var 0x24bfc28aa18 'p' 'const unsigned char *'
|   |-ReturnStmt 0x24bfc28ec18 <line:501:5, col:12>
|   | `-IntegerLiteral 0x24bfc28ebf0 <col:12> 'int' 1
|   `-LabelStmt 0x24bfc28ec60 <line:503:2, line:504:12> 'err'
|     `-ReturnStmt 0x24bfc28ec50 <col:5, col:12>
|       `-IntegerLiteral 0x24bfc28ec28 <col:12> 'int' 0
|-FunctionDecl 0x24bfc28f0c8 <line:507:1, line:637:1> line:507:12 invalid asn1_template_noexp_d2i 'int (int **, const unsigned char **, long, const int *, char, int *, int)' static
| |-ParmVarDecl 0x24bfc28ed00 <col:36, col:49> col:49 invalid val 'int **'
| |-ParmVarDecl 0x24bfc28ed88 <line:508:36, col:58> col:58 used in 'const unsigned char **'
| |-ParmVarDecl 0x24bfc28ee08 <col:62, col:67> col:67 used len 'long'
| |-ParmVarDecl 0x24bfc28ee88 <line:509:36, col:57> col:57 invalid tt 'const int *'
| |-ParmVarDecl 0x24bfc28ef00 <col:61, col:66> col:66 used opt 'char'
| |-ParmVarDecl 0x24bfc28ef80 <line:510:36, col:46> col:46 invalid ctx 'int *'
| |-ParmVarDecl 0x24bfc28f000 <col:51, col:55> col:55 used depth 'int'
| `-CompoundStmt 0x24bfc28f9f8 <line:511:1, line:637:1>
|   |-DeclStmt 0x24bfc28b2d0 <line:512:5, col:22>
|   | |-VarDecl 0x24bfc28f1d0 <col:5, col:9> col:9 used flags 'int'
|   | `-VarDecl 0x24bfc28b250 <col:5, col:16> col:16 used aclass 'int'
|   |-DeclStmt 0x24bfc28b368 <line:513:5, col:12>
|   | `-VarDecl 0x24bfc28b300 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x24bfc28b498 <line:515:5, col:31>
|   | |-VarDecl 0x24bfc28b398 <col:5, col:26> col:26 used p 'const unsigned char *'
|   | `-VarDecl 0x24bfc28b418 <col:5, col:30> col:30 used q 'const unsigned char *'
|   |-IfStmt 0x24bfc28b500 <line:516:5, line:517:16>
|   | |-OpaqueValueExpr 0x24bfc28b4e8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x24bfc28b4d8 <col:9, col:16>
|   |   `-IntegerLiteral 0x24bfc28b4b0 <col:16> 'int' 0
|   |-BinaryOperator 0x24bfc28b660 <line:521:5, col:10> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x24bfc28b5a8 <col:5> 'const unsigned char *' lvalue Var 0x24bfc28b398 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x24bfc28b648 <col:9, col:10> 'const unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x24bfc28b630 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x24bfc28b618 <col:10> 'const unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x24bfc28b5e0 <col:10> 'const unsigned char **' lvalue ParmVar 0x24bfc28ed88 'in' 'const unsigned char **'
|   |-BinaryOperator 0x24bfc28b6f0 <line:522:5, col:9> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x24bfc28b680 <col:5> 'const unsigned char *' lvalue Var 0x24bfc28b418 'q' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x24bfc28b6d8 <col:9> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x24bfc28b6b8 <col:9> 'const unsigned char *' lvalue Var 0x24bfc28b398 'p' 'const unsigned char *'
|   |-IfStmt 0x24bfc28b738 <line:528:5, line:531:5>
|   | |-OpaqueValueExpr 0x24bfc28b720 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x24bfc28b710 <line:528:38, line:531:5>
|   |-IfStmt 0x24bfc28f8a0 <line:533:5, line:630:5> has_else
|   | |-OpaqueValueExpr 0x24bfc28f888 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x24bfc288158 <line:533:36, line:611:5>
|   | | |-DeclStmt 0x24bfc28b888 <line:535:9, col:28>
|   | | | |-VarDecl 0x24bfc28b788 <col:9, col:13> col:13 used sktag 'int'
|   | | | `-VarDecl 0x24bfc28b808 <col:9, col:20> col:20 used skaclass 'int'
|   | | |-DeclStmt 0x24bfc28b918 <line:536:9, col:20>
|   | | | `-VarDecl 0x24bfc28b8b0 <col:9, col:14> col:14 used sk_eoc 'char'
|   | | |-IfStmt 0x24bfc28bad8 <line:538:9, line:547:9> has_else
|   | | | |-OpaqueValueExpr 0x24bfc28bac0 <<invalid sloc>> '_Bool'
|   | | | |-CompoundStmt 0x24bfc28ba18 <line:538:39, line:541:9>
|   | | | | `-BinaryOperator 0x24bfc28b9f8 <line:540:13, col:24> 'int' '='
|   | | | |   |-DeclRefExpr 0x24bfc28b988 <col:13> 'int' lvalue Var 0x24bfc28b808 'skaclass' 'int'
|   | | | |   `-ImplicitCastExpr 0x24bfc28b9e0 <col:24> 'int' <LValueToRValue>
|   | | | |     `-DeclRefExpr 0x24bfc28b9c0 <col:24> 'int' lvalue Var 0x24bfc28b250 'aclass' 'int'
|   | | | `-CompoundStmt 0x24bfc28bab0 <line:541:16, line:547:9>
|   | | |-IfStmt 0x24bfc28c000 <line:551:9, line:555:21> has_else
|   | | | |-UnaryOperator 0x24bfc28be78 <line:551:13, col:14> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x24bfc28be60 <col:14> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x24bfc28be40 <col:14> 'int' lvalue Var 0x24bfc28b300 'ret' 'int'
|   | | | |-CompoundStmt 0x24bfc28bee8 <col:19, line:554:9>
|   | | | | `-ReturnStmt 0x24bfc28bed8 <line:553:13, col:20>
|   | | | |   `-IntegerLiteral 0x24bfc28beb0 <col:20> 'int' 0
|   | | | `-IfStmt 0x24bfc28bfe8 <line:554:16, line:555:21>
|   | | |   |-BinaryOperator 0x24bfc28bf78 <line:554:20, col:28> 'int' '=='
|   | | |   | |-ImplicitCastExpr 0x24bfc28bf60 <col:20> 'int' <LValueToRValue>
|   | | |   | | `-DeclRefExpr 0x24bfc28bf00 <col:20> 'int' lvalue Var 0x24bfc28b300 'ret' 'int'
|   | | |   | `-UnaryOperator 0x24bfc28bf48 <col:27, col:28> 'int' prefix '-'
|   | | |   |   `-IntegerLiteral 0x24bfc28bf20 <col:28> 'int' 1
|   | | |   `-ReturnStmt 0x24bfc28bfd8 <line:555:13, col:21>
|   | | |     `-UnaryOperator 0x24bfc28bfc0 <col:20, col:21> 'int' prefix '-'
|   | | |       `-IntegerLiteral 0x24bfc28bf98 <col:21> 'int' 1
|   | | |-IfStmt 0x24bfc2874d8 <line:556:9, line:568:9> has_else
|   | | | |-OpaqueValueExpr 0x24bfc2874c0 <<invalid sloc>> '_Bool'
|   | | | |-NullStmt 0x24bfc2874b8 <line:557:13>
|   | | | `-CompoundStmt 0x24bfc2874a8 <line:558:14, line:568:9>
|   | | |-IfStmt 0x24bfc2875b8 <line:570:9, line:573:9>
|   | | | |-OpaqueValueExpr 0x24bfc2875a0 <<invalid sloc>> '_Bool'
|   | | | `-CompoundStmt 0x24bfc287588 <line:570:20, line:573:9>
|   | | |   `-GotoStmt 0x24bfc287570 <line:572:13, col:18> 'err' 0x24bfc287520
|   | | |-WhileStmt 0x24bfc2880a0 <line:576:9, line:606:9>
|   | | | |-BinaryOperator 0x24bfc287648 <line:576:16, col:22> 'int' '>'
|   | | | | |-ImplicitCastExpr 0x24bfc287618 <col:16> 'long' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x24bfc2875d0 <col:16> 'long' lvalue ParmVar 0x24bfc28ee08 'len' 'long'
|   | | | | `-ImplicitCastExpr 0x24bfc287630 <col:22> 'long' <IntegralCast>
|   | | | |   `-IntegerLiteral 0x24bfc2875f0 <col:22> 'int' 0
|   | | | `-CompoundStmt 0x24bfc288068 <col:25, line:606:9>
|   | | |   |-BinaryOperator 0x24bfc2876c0 <line:578:13, col:17> 'const unsigned char *' '='
|   | | |   | |-DeclRefExpr 0x24bfc287668 <col:13> 'const unsigned char *' lvalue Var 0x24bfc28b418 'q' 'const unsigned char *'
|   | | |   | `-ImplicitCastExpr 0x24bfc2876a8 <col:17> 'const unsigned char *' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x24bfc287688 <col:17> 'const unsigned char *' lvalue Var 0x24bfc28b398 'p' 'const unsigned char *'
|   | | |   |-IfStmt 0x24bfc287a08 <line:580:13, line:589:13>
|   | | |   | |-CallExpr 0x24bfc287770 <line:580:17, col:39> 'int'
|   | | |   | | |-ImplicitCastExpr 0x24bfc287758 <col:17> 'int (*)(const unsigned char **, long)' <FunctionToPointerDecay>
|   | | |   | | | `-DeclRefExpr 0x24bfc2876e0 <col:17> 'int (const unsigned char **, long)' Function 0x24bfc27cd60 'asn1_check_eoc' 'int (const unsigned char **, long)'
|   | | |   | | |-UnaryOperator 0x24bfc287720 <col:32, col:33> 'const unsigned char **' prefix '&' cannot overflow
|   | | |   | | | `-DeclRefExpr 0x24bfc287700 <col:33> 'const unsigned char *' lvalue Var 0x24bfc28b398 'p' 'const unsigned char *'
|   | | |   | | `-ImplicitCastExpr 0x24bfc2877a0 <col:36> 'long' <LValueToRValue>
|   | | |   | |   `-DeclRefExpr 0x24bfc287738 <col:36> 'long' lvalue ParmVar 0x24bfc28ee08 'len' 'long'
|   | | |   | `-CompoundStmt 0x24bfc2879d8 <col:42, line:589:13>
|   | | |   |   |-IfStmt 0x24bfc287858 <line:581:17, line:585:17>
|   | | |   |   | |-UnaryOperator 0x24bfc2877f0 <line:581:21, col:22> 'int' prefix '!' cannot overflow
|   | | |   |   | | `-ImplicitCastExpr 0x24bfc2877d8 <col:22> 'char' <LValueToRValue>
|   | | |   |   | |   `-DeclRefExpr 0x24bfc2877b8 <col:22> 'char' lvalue Var 0x24bfc28b8b0 'sk_eoc' 'char'
|   | | |   |   | `-CompoundStmt 0x24bfc287840 <col:30, line:585:17>
|   | | |   |   |   `-GotoStmt 0x24bfc287828 <line:584:21, col:26> 'err' 0x24bfc287520
|   | | |   |   |-CompoundAssignOperator 0x24bfc287920 <line:586:17, col:28> 'long' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | | |   |   | |-DeclRefExpr 0x24bfc287870 <col:17> 'long' lvalue ParmVar 0x24bfc28ee08 'len' 'long'
|   | | |   |   | `-BinaryOperator 0x24bfc287900 <col:24, col:28> 'long long' '-'
|   | | |   |   |   |-ImplicitCastExpr 0x24bfc2878d0 <col:24> 'const unsigned char *' <LValueToRValue>
|   | | |   |   |   | `-DeclRefExpr 0x24bfc287890 <col:24> 'const unsigned char *' lvalue Var 0x24bfc28b398 'p' 'const unsigned char *'
|   | | |   |   |   `-ImplicitCastExpr 0x24bfc2878e8 <col:28> 'const unsigned char *' <LValueToRValue>
|   | | |   |   |     `-DeclRefExpr 0x24bfc2878b0 <col:28> 'const unsigned char *' lvalue Var 0x24bfc28b418 'q' 'const unsigned char *'
|   | | |   |   |-BinaryOperator 0x24bfc2879b0 <line:587:17, col:26> 'char' '='
|   | | |   |   | |-DeclRefExpr 0x24bfc287950 <col:17> 'char' lvalue Var 0x24bfc28b8b0 'sk_eoc' 'char'
|   | | |   |   | `-ImplicitCastExpr 0x24bfc287998 <col:26> 'char' <IntegralCast>
|   | | |   |   |   `-IntegerLiteral 0x24bfc287970 <col:26> 'int' 0
|   | | |   |   `-BreakStmt 0x24bfc2879d0 <line:588:17>
|   | | |   |-IfStmt 0x24bfc287d80 <line:591:13, line:599:13>
|   | | |   | |-OpaqueValueExpr 0x24bfc287d68 <<invalid sloc>> '_Bool'
|   | | |   | `-CompoundStmt 0x24bfc287d50 <line:593:46, line:599:13>
|   | | |   |   `-GotoStmt 0x24bfc287d38 <line:598:17, col:22> 'err' 0x24bfc287520
|   | | |   |-CompoundAssignOperator 0x24bfc287e48 <line:600:13, col:24> 'long' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | | |   | |-DeclRefExpr 0x24bfc287d98 <col:13> 'long' lvalue ParmVar 0x24bfc28ee08 'len' 'long'
|   | | |   | `-BinaryOperator 0x24bfc287e28 <col:20, col:24> 'long long' '-'
|   | | |   |   |-ImplicitCastExpr 0x24bfc287df8 <col:20> 'const unsigned char *' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x24bfc287db8 <col:20> 'const unsigned char *' lvalue Var 0x24bfc28b398 'p' 'const unsigned char *'
|   | | |   |   `-ImplicitCastExpr 0x24bfc287e10 <col:24> 'const unsigned char *' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x24bfc287dd8 <col:24> 'const unsigned char *' lvalue Var 0x24bfc28b418 'q' 'const unsigned char *'
|   | | |   `-IfStmt 0x24bfc288050 <line:601:13, line:605:13>
|   | | |     |-OpaqueValueExpr 0x24bfc288038 <<invalid sloc>> '_Bool'
|   | | |     `-CompoundStmt 0x24bfc288020 <line:601:77, line:605:13>
|   | | |       `-GotoStmt 0x24bfc288008 <line:604:17, col:22> 'err' 0x24bfc287520
|   | | `-IfStmt 0x24bfc288140 <line:607:9, line:610:9>
|   | |   |-ImplicitCastExpr 0x24bfc2880d8 <line:607:13> 'char' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x24bfc2880b8 <col:13> 'char' lvalue Var 0x24bfc28b8b0 'sk_eoc' 'char'
|   | |   `-CompoundStmt 0x24bfc288128 <col:21, line:610:9>
|   | |     `-GotoStmt 0x24bfc288110 <line:609:13, col:18> 'err' 0x24bfc287520
|   | `-IfStmt 0x24bfc28f860 <line:611:12, line:630:5> has_else
|   |   |-OpaqueValueExpr 0x24bfc28f848 <<invalid sloc>> '_Bool'
|   |   |-CompoundStmt 0x24bfc28f510 <line:611:42, line:621:5>
|   |   | `-IfStmt 0x24bfc28f4e8 <line:616:9, line:620:21> has_else
|   |   |   |-UnaryOperator 0x24bfc28f380 <line:616:13, col:14> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x24bfc28f368 <col:14> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x24bfc28f348 <col:14> 'int' lvalue Var 0x24bfc28b300 'ret' 'int'
|   |   |   |-CompoundStmt 0x24bfc28f3d0 <col:19, line:619:9>
|   |   |   | `-GotoStmt 0x24bfc28f3b8 <line:618:13, col:18> 'err' 0x24bfc287520
|   |   |   `-IfStmt 0x24bfc28f4d0 <line:619:16, line:620:21>
|   |   |     |-BinaryOperator 0x24bfc28f460 <line:619:20, col:28> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x24bfc28f448 <col:20> 'int' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x24bfc28f3e8 <col:20> 'int' lvalue Var 0x24bfc28b300 'ret' 'int'
|   |   |     | `-UnaryOperator 0x24bfc28f430 <col:27, col:28> 'int' prefix '-'
|   |   |     |   `-IntegerLiteral 0x24bfc28f408 <col:28> 'int' 1
|   |   |     `-ReturnStmt 0x24bfc28f4c0 <line:620:13, col:21>
|   |   |       `-UnaryOperator 0x24bfc28f4a8 <col:20, col:21> 'int' prefix '-'
|   |   |         `-IntegerLiteral 0x24bfc28f480 <col:21> 'int' 1
|   |   `-CompoundStmt 0x24bfc28f830 <line:621:12, line:630:5>
|   |     `-IfStmt 0x24bfc28f808 <line:625:9, line:629:21> has_else
|   |       |-UnaryOperator 0x24bfc28f6a0 <line:625:13, col:14> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x24bfc28f688 <col:14> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x24bfc28f668 <col:14> 'int' lvalue Var 0x24bfc28b300 'ret' 'int'
|   |       |-CompoundStmt 0x24bfc28f6f0 <col:19, line:628:9>
|   |       | `-GotoStmt 0x24bfc28f6d8 <line:627:13, col:18> 'err' 0x24bfc287520
|   |       `-IfStmt 0x24bfc28f7f0 <line:628:16, line:629:21>
|   |         |-BinaryOperator 0x24bfc28f780 <line:628:20, col:28> 'int' '=='
|   |         | |-ImplicitCastExpr 0x24bfc28f768 <col:20> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x24bfc28f708 <col:20> 'int' lvalue Var 0x24bfc28b300 'ret' 'int'
|   |         | `-UnaryOperator 0x24bfc28f750 <col:27, col:28> 'int' prefix '-'
|   |         |   `-IntegerLiteral 0x24bfc28f728 <col:28> 'int' 1
|   |         `-ReturnStmt 0x24bfc28f7e0 <line:629:13, col:21>
|   |           `-UnaryOperator 0x24bfc28f7c8 <col:20, col:21> 'int' prefix '-'
|   |             `-IntegerLiteral 0x24bfc28f7a0 <col:21> 'int' 1
|   |-BinaryOperator 0x24bfc28f950 <line:632:5, col:11> 'const unsigned char *' '='
|   | |-UnaryOperator 0x24bfc28f900 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x24bfc28f8e8 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x24bfc28f8c8 <col:6> 'const unsigned char **' lvalue ParmVar 0x24bfc28ed88 'in' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x24bfc28f938 <col:11> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x24bfc28f918 <col:11> 'const unsigned char *' lvalue Var 0x24bfc28b398 'p' 'const unsigned char *'
|   |-ReturnStmt 0x24bfc28f998 <line:633:5, col:12>
|   | `-IntegerLiteral 0x24bfc28f970 <col:12> 'int' 1
|   `-LabelStmt 0x24bfc28f9e0 <line:635:2, line:636:12> 'err'
|     `-ReturnStmt 0x24bfc28f9d0 <col:5, col:12>
|       `-IntegerLiteral 0x24bfc28f9a8 <col:12> 'int' 0
|-FunctionDecl 0x24bfc28fed0 <line:639:1, line:769:1> line:639:12 invalid asn1_d2i_ex_primitive 'int (int **, const unsigned char **, long, const int *, int, int, char, int *)' static
| |-ParmVarDecl 0x24bfc28fa80 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x24bfc28fb08 <line:640:34, col:56> col:56 used in 'const unsigned char **'
| |-ParmVarDecl 0x24bfc28fb88 <col:60, col:65> col:65 used inlen 'long'
| |-ParmVarDecl 0x24bfc28fc08 <line:641:34, col:51> col:51 invalid it 'const int *'
| |-ParmVarDecl 0x24bfc28fc88 <line:642:34, col:38> col:38 used tag 'int'
| |-ParmVarDecl 0x24bfc28fd08 <col:43, col:47> col:47 used aclass 'int'
| |-ParmVarDecl 0x24bfc28fd80 <col:55, col:60> col:60 used opt 'char'
| |-ParmVarDecl 0x24bfc28fe00 <col:65, col:75> col:75 invalid ctx 'int *'
| `-CompoundStmt 0x24bfc297cb8 <line:643:1, line:769:1>
|   |-DeclStmt 0x24bfc290108 <line:644:5, col:23>
|   | |-VarDecl 0x24bfc28ffe0 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x24bfc290048 <col:15> 'int' 0
|   | `-VarDecl 0x24bfc290088 <col:5, col:18> col:18 used utype 'int'
|   |-DeclStmt 0x24bfc2901a0 <line:645:5, col:14>
|   | `-VarDecl 0x24bfc290138 <col:5, col:10> col:10 used plen 'long'
|   |-DeclStmt 0x24bfc288360 <line:646:5, col:33>
|   | |-VarDecl 0x24bfc2901c8 <col:5, col:10> col:10 used cst 'char'
|   | |-VarDecl 0x24bfc288220 <col:5, col:15> col:15 used inf 'char'
|   | `-VarDecl 0x24bfc288298 <col:5, col:32> col:20 used free_cont 'char' cinit
|   |   `-ImplicitCastExpr 0x24bfc288328 <col:32> 'char' <IntegralCast>
|   |     `-IntegerLiteral 0x24bfc288300 <col:32> 'int' 0
|   |-DeclStmt 0x24bfc2883f8 <line:647:5, col:27>
|   | `-VarDecl 0x24bfc288390 <col:5, col:26> col:26 used p 'const unsigned char *'
|   |-DeclStmt 0x24bfc288530 <line:649:5, col:37>
|   | `-VarDecl 0x24bfc288428 <col:5, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> .//openssl//file_jk/before\crypto\asn1\tasn_dec.c:649:26 used cont 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x24bfc288518 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x24bfc2884f8 <col:16, col:25> 'void *'
|   |       `-CStyleCastExpr 0x24bfc2884d0 <col:17, col:24> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x24bfc288490 <col:24> 'int' 0
|   |-DeclStmt 0x24bfc2885c8 <.//openssl//file_jk/before\crypto\asn1\tasn_dec.c:650:5, col:13>
|   | `-VarDecl 0x24bfc288560 <col:5, col:10> col:10 used len 'long'
|   |-IfStmt 0x24bfc288668 <line:651:5, line:654:5>
|   | |-OpaqueValueExpr 0x24bfc288650 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x24bfc288638 <line:651:16, line:654:5>
|   |   `-ReturnStmt 0x24bfc288628 <line:653:9, col:16>
|   |     `-IntegerLiteral 0x24bfc288600 <col:16> 'int' 0
|   |-IfStmt 0x24bfc288808 <line:656:5, line:660:9> has_else
|   | |-OpaqueValueExpr 0x24bfc2887f0 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x24bfc2887a8 <line:656:42, line:659:5>
|   | | |-BinaryOperator 0x24bfc288708 <line:657:9, col:17> 'int' '='
|   | | | |-DeclRefExpr 0x24bfc288680 <col:9> 'int' lvalue Var 0x24bfc290088 'utype' 'int'
|   | | | `-ImplicitCastExpr 0x24bfc2886f0 <col:17> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x24bfc2886b8 <col:17> 'int' lvalue ParmVar 0x24bfc28fc88 'tag' 'int'
|   | | `-BinaryOperator 0x24bfc288788 <line:658:9, col:16> 'int' '='
|   | |   |-DeclRefExpr 0x24bfc288728 <col:9> 'int' lvalue ParmVar 0x24bfc28fc88 'tag' 'int'
|   | |   `-UnaryOperator 0x24bfc288770 <col:15, col:16> 'int' prefix '-'
|   | |     `-IntegerLiteral 0x24bfc288748 <col:16> 'int' 1
|   | `-NullStmt 0x24bfc2887e8 <line:660:9>
|   |-IfStmt 0x24bfc289060 <line:662:5, line:683:5>
|   | |-OpaqueValueExpr 0x24bfc289048 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x24bfc289010 <line:662:30, line:683:5>
|   |   |-DeclStmt 0x24bfc2888d0 <line:664:9, col:29>
|   |   | `-VarDecl 0x24bfc288868 <col:9, col:23> col:23 used oclass 'unsigned char'
|   |   |-IfStmt 0x24bfc2889d8 <line:665:9, line:668:9>
|   |   | |-BinaryOperator 0x24bfc288948 <line:665:13, col:20> 'int' '>='
|   |   | | |-ImplicitCastExpr 0x24bfc288930 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x24bfc2888e8 <col:13> 'int' lvalue ParmVar 0x24bfc28fc88 'tag' 'int'
|   |   | | `-IntegerLiteral 0x24bfc288908 <col:20> 'int' 0
|   |   | `-CompoundStmt 0x24bfc2889c0 <col:23, line:668:9>
|   |   |   `-ReturnStmt 0x24bfc2889b0 <line:667:13, col:20>
|   |   |     `-IntegerLiteral 0x24bfc288988 <col:20> 'int' 0
|   |   |-IfStmt 0x24bfc288ab0 <line:669:9, line:673:9>
|   |   | |-ImplicitCastExpr 0x24bfc288a28 <line:669:13> 'char' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x24bfc2889f0 <col:13> 'char' lvalue ParmVar 0x24bfc28fd80 'opt' 'char'
|   |   | `-CompoundStmt 0x24bfc288a98 <col:18, line:673:9>
|   |   |   `-ReturnStmt 0x24bfc288a88 <line:672:13, col:20>
|   |   |     `-IntegerLiteral 0x24bfc288a60 <col:20> 'int' 0
|   |   |-BinaryOperator 0x24bfc288b80 <line:674:9, col:14> 'const unsigned char *' '='
|   |   | |-DeclRefExpr 0x24bfc288ac8 <col:9> 'const unsigned char *' lvalue Var 0x24bfc288390 'p' 'const unsigned char *'
|   |   | `-ImplicitCastExpr 0x24bfc288b68 <col:13, col:14> 'const unsigned char *' <LValueToRValue>
|   |   |   `-UnaryOperator 0x24bfc288b50 <col:13, col:14> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |   |     `-ImplicitCastExpr 0x24bfc288b38 <col:14> 'const unsigned char **' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x24bfc288b00 <col:14> 'const unsigned char **' lvalue ParmVar 0x24bfc28fb08 'in' 'const unsigned char **'
|   |   `-IfStmt 0x24bfc288fb8 <line:677:9, line:680:9>
|   |     |-UnaryOperator 0x24bfc288f30 <line:677:13, col:14> 'int' prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x24bfc288f18 <col:14> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x24bfc288ef8 <col:14> 'int' lvalue Var 0x24bfc28ffe0 'ret' 'int'
|   |     `-CompoundStmt 0x24bfc288fa0 <col:19, line:680:9>
|   |       `-ReturnStmt 0x24bfc288f90 <line:679:13, col:20>
|   |         `-IntegerLiteral 0x24bfc288f68 <col:20> 'int' 0
|   |-IfStmt 0x24bfc2891d8 <line:684:5, line:687:5>
|   | |-BinaryOperator 0x24bfc2890f0 <line:684:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x24bfc2890d8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x24bfc289078 <col:9> 'int' lvalue ParmVar 0x24bfc28fc88 'tag' 'int'
|   | | `-UnaryOperator 0x24bfc2890c0 <col:16, col:17> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x24bfc289098 <col:17> 'int' 1
|   | `-CompoundStmt 0x24bfc2891c0 <col:20, line:687:5>
|   |   `-BinaryOperator 0x24bfc289168 <line:685:9, col:15> 'int' '='
|   |     |-DeclRefExpr 0x24bfc289110 <col:9> 'int' lvalue ParmVar 0x24bfc28fc88 'tag' 'int'
|   |     `-ImplicitCastExpr 0x24bfc289150 <col:15> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x24bfc289130 <col:15> 'int' lvalue Var 0x24bfc290088 'utype' 'int'
|   |-BinaryOperator 0x24bfc291318 <line:688:5, col:10> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x24bfc2891f0 <col:5> 'const unsigned char *' lvalue Var 0x24bfc288390 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x24bfc291300 <col:9, col:10> 'const unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x24bfc2912e8 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x24bfc2912d0 <col:10> 'const unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x24bfc2912b0 <col:10> 'const unsigned char **' lvalue ParmVar 0x24bfc28fb08 'in' 'const unsigned char **'
|   |-IfStmt 0x24bfc2917d0 <line:692:5, line:696:17> has_else
|   | |-UnaryOperator 0x24bfc291648 <line:692:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x24bfc291630 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x24bfc291610 <col:10> 'int' lvalue Var 0x24bfc28ffe0 'ret' 'int'
|   | |-CompoundStmt 0x24bfc2916b8 <col:15, line:695:5>
|   | | `-ReturnStmt 0x24bfc2916a8 <line:694:9, col:16>
|   | |   `-IntegerLiteral 0x24bfc291680 <col:16> 'int' 0
|   | `-IfStmt 0x24bfc2917b8 <line:695:12, line:696:17>
|   |   |-BinaryOperator 0x24bfc291748 <line:695:16, col:24> 'int' '=='
|   |   | |-ImplicitCastExpr 0x24bfc291730 <col:16> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x24bfc2916d0 <col:16> 'int' lvalue Var 0x24bfc28ffe0 'ret' 'int'
|   |   | `-UnaryOperator 0x24bfc291718 <col:23, col:24> 'int' prefix '-'
|   |   |   `-IntegerLiteral 0x24bfc2916f0 <col:24> 'int' 1
|   |   `-ReturnStmt 0x24bfc2917a8 <line:696:9, col:17>
|   |     `-UnaryOperator 0x24bfc291790 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x24bfc291768 <col:17> 'int' 1
|   |-BinaryOperator 0x24bfc291840 <line:697:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x24bfc2917f8 <col:5> 'int' lvalue Var 0x24bfc28ffe0 'ret' 'int'
|   | `-IntegerLiteral 0x24bfc291818 <col:11> 'int' 0
|   |-IfStmt 0x24bfc2978f0 <line:699:5, line:756:5> has_else
|   | |-OpaqueValueExpr 0x24bfc2978d8 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x24bfc292048 <line:700:62, line:725:5>
|   | | |-IfStmt 0x24bfc291a08 <line:705:9, line:713:9> has_else
|   | | | |-OpaqueValueExpr 0x24bfc2919f0 <<invalid sloc>> '_Bool'
|   | | | |-CompoundStmt 0x24bfc291908 <line:705:36, line:707:9>
|   | | | `-IfStmt 0x24bfc2919d8 <line:709:14, line:713:9>
|   | | |   |-UnaryOperator 0x24bfc291950 <line:709:18, col:19> 'int' prefix '!' cannot overflow
|   | | |   | `-ImplicitCastExpr 0x24bfc291938 <col:19> 'char' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x24bfc291918 <col:19> 'char' lvalue Var 0x24bfc2901c8 'cst' 'char'
|   | | |   `-CompoundStmt 0x24bfc2919c0 <col:24, line:713:9>
|   | | |     `-ReturnStmt 0x24bfc2919b0 <line:712:13, col:20>
|   | | |       `-IntegerLiteral 0x24bfc291988 <col:20> 'int' 0
|   | | |-BinaryOperator 0x24bfc291ad0 <line:715:9, col:17> 'const unsigned char *' '='
|   | | | |-DeclRefExpr 0x24bfc291a30 <col:9> 'const unsigned char *' lvalue Var 0x24bfc288428 'cont' 'const unsigned char *'
|   | | | `-ImplicitCastExpr 0x24bfc291ab8 <col:16, col:17> 'const unsigned char *' <LValueToRValue>
|   | | |   `-UnaryOperator 0x24bfc291aa0 <col:16, col:17> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x24bfc291a88 <col:17> 'const unsigned char **' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x24bfc291a68 <col:17> 'const unsigned char **' lvalue ParmVar 0x24bfc28fb08 'in' 'const unsigned char **'
|   | | `-IfStmt 0x24bfc292020 <line:717:9, line:724:9> has_else
|   | |   |-ImplicitCastExpr 0x24bfc291b10 <line:717:13> 'char' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x24bfc291af0 <col:13> 'char' lvalue Var 0x24bfc288220 'inf' 'char'
|   | |   |-CompoundStmt 0x24bfc291e00 <col:18, line:721:9>
|   | |   | |-IfStmt 0x24bfc291ce8 <line:718:13, line:719:22>
|   | |   | | |-UnaryOperator 0x24bfc291c68 <line:718:17, col:45> 'int' prefix '!' cannot overflow
|   | |   | | | `-CallExpr 0x24bfc291c00 <col:18, col:45> 'int'
|   | |   | | |   |-ImplicitCastExpr 0x24bfc291be8 <col:18> 'int (*)(const unsigned char **, long, char)' <FunctionToPointerDecay>
|   | |   | | |   | `-DeclRefExpr 0x24bfc291b28 <col:18> 'int (const unsigned char **, long, char)' Function 0x24bfc27d070 'asn1_find_end' 'int (const unsigned char **, long, char)'
|   | |   | | |   |-UnaryOperator 0x24bfc291b68 <col:32, col:33> 'const unsigned char **' prefix '&' cannot overflow
|   | |   | | |   | `-DeclRefExpr 0x24bfc291b48 <col:33> 'const unsigned char *' lvalue Var 0x24bfc288390 'p' 'const unsigned char *'
|   | |   | | |   |-ImplicitCastExpr 0x24bfc291c38 <col:36> 'long' <LValueToRValue>
|   | |   | | |   | `-DeclRefExpr 0x24bfc291b80 <col:36> 'long' lvalue Var 0x24bfc290138 'plen' 'long'
|   | |   | | |   `-ImplicitCastExpr 0x24bfc291c50 <col:42> 'char' <LValueToRValue>
|   | |   | | |     `-DeclRefExpr 0x24bfc291ba0 <col:42> 'char' lvalue Var 0x24bfc288220 'inf' 'char'
|   | |   | | `-GotoStmt 0x24bfc291cd0 <line:719:17, col:22> 'err' 0x24bfc291c80
|   | |   | `-BinaryOperator 0x24bfc291de0 <line:720:13, col:23> 'long' '='
|   | |   |   |-DeclRefExpr 0x24bfc291d00 <col:13> 'long' lvalue Var 0x24bfc288560 'len' 'long'
|   | |   |   `-ImplicitCastExpr 0x24bfc291dc8 <col:19, col:23> 'long' <IntegralCast>
|   | |   |     `-BinaryOperator 0x24bfc291da8 <col:19, col:23> 'long long' '-'
|   | |   |       |-ImplicitCastExpr 0x24bfc291d78 <col:19> 'const unsigned char *' <LValueToRValue>
|   | |   |       | `-DeclRefExpr 0x24bfc291d38 <col:19> 'const unsigned char *' lvalue Var 0x24bfc288390 'p' 'const unsigned char *'
|   | |   |       `-ImplicitCastExpr 0x24bfc291d90 <col:23> 'const unsigned char *' <LValueToRValue>
|   | |   |         `-DeclRefExpr 0x24bfc291d58 <col:23> 'const unsigned char *' lvalue Var 0x24bfc288428 'cont' 'const unsigned char *'
|   | |   `-CompoundStmt 0x24bfc292000 <line:721:16, line:724:9>
|   | |     |-BinaryOperator 0x24bfc291f58 <line:722:13, col:30> 'long' '='
|   | |     | |-DeclRefExpr 0x24bfc291e20 <col:13> 'long' lvalue Var 0x24bfc288560 'len' 'long'
|   | |     | `-ImplicitCastExpr 0x24bfc291f40 <col:19, col:30> 'long' <IntegralCast>
|   | |     |   `-BinaryOperator 0x24bfc291f20 <col:19, col:30> 'long long' '+'
|   | |     |     |-BinaryOperator 0x24bfc291eb0 <col:19, col:23> 'long long' '-'
|   | |     |     | |-ImplicitCastExpr 0x24bfc291e80 <col:19> 'const unsigned char *' <LValueToRValue>
|   | |     |     | | `-DeclRefExpr 0x24bfc291e40 <col:19> 'const unsigned char *' lvalue Var 0x24bfc288390 'p' 'const unsigned char *'
|   | |     |     | `-ImplicitCastExpr 0x24bfc291e98 <col:23> 'const unsigned char *' <LValueToRValue>
|   | |     |     |   `-DeclRefExpr 0x24bfc291e60 <col:23> 'const unsigned char *' lvalue Var 0x24bfc288428 'cont' 'const unsigned char *'
|   | |     |     `-ImplicitCastExpr 0x24bfc291f08 <col:30> 'long long' <IntegralCast>
|   | |     |       `-ImplicitCastExpr 0x24bfc291ef0 <col:30> 'long' <LValueToRValue>
|   | |     |         `-DeclRefExpr 0x24bfc291ed0 <col:30> 'long' lvalue Var 0x24bfc290138 'plen' 'long'
|   | |     `-CompoundAssignOperator 0x24bfc291fd0 <line:723:13, col:18> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | |       |-DeclRefExpr 0x24bfc291f78 <col:13> 'const unsigned char *' lvalue Var 0x24bfc288390 'p' 'const unsigned char *'
|   | |       `-ImplicitCastExpr 0x24bfc291fb8 <col:18> 'long' <LValueToRValue>
|   | |         `-DeclRefExpr 0x24bfc291f98 <col:18> 'long' lvalue Var 0x24bfc290138 'plen' 'long'
|   | `-IfStmt 0x24bfc2978b0 <line:725:12, line:756:5> has_else
|   |   |-ImplicitCastExpr 0x24bfc292090 <line:725:16> 'char' <LValueToRValue>
|   |   | `-DeclRefExpr 0x24bfc292070 <col:16> 'char' lvalue Var 0x24bfc2901c8 'cst' 'char'
|   |   |-CompoundStmt 0x24bfc2976e0 <col:21, line:752:5>
|   |   | |-IfStmt 0x24bfc2921d0 <line:726:9, line:731:9>
|   |   | | |-OpaqueValueExpr 0x24bfc2921b8 <<invalid sloc>> '_Bool'
|   |   | | `-CompoundStmt 0x24bfc2921a0 <line:728:44, line:731:9>
|   |   | |   `-ReturnStmt 0x24bfc292190 <line:730:13, col:20>
|   |   | |     `-IntegerLiteral 0x24bfc292168 <col:20> 'int' 0
|   |   | |-BinaryOperator 0x24bfc292260 <line:734:9, col:21> 'char' '='
|   |   | | |-DeclRefExpr 0x24bfc2921e8 <col:9> 'char' lvalue Var 0x24bfc288298 'free_cont' 'char'
|   |   | | `-ImplicitCastExpr 0x24bfc292248 <col:21> 'char' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x24bfc292220 <col:21> 'int' 1
|   |   | |-IfStmt 0x24bfc297418 <line:741:9, line:743:9>
|   |   | | |-OpaqueValueExpr 0x24bfc297400 <<invalid sloc>> '_Bool'
|   |   | | `-CompoundStmt 0x24bfc2973e8 <line:741:74, line:743:9>
|   |   | |   `-GotoStmt 0x24bfc2973d0 <line:742:13, col:18> 'err' 0x24bfc291c80
|   |   | `-IfStmt 0x24bfc297660 <line:746:9, line:749:9>
|   |   |   |-OpaqueValueExpr 0x24bfc297648 <<invalid sloc>> '_Bool'
|   |   |   `-CompoundStmt 0x24bfc297630 <line:746:49, line:749:9>
|   |   |     `-GotoStmt 0x24bfc297618 <line:748:13, col:18> 'err' 0x24bfc291c80
|   |   `-CompoundStmt 0x24bfc297888 <line:752:12, line:756:5>
|   |     |-BinaryOperator 0x24bfc297768 <line:753:9, col:16> 'const unsigned char *' '='
|   |     | |-DeclRefExpr 0x24bfc297710 <col:9> 'const unsigned char *' lvalue Var 0x24bfc288428 'cont' 'const unsigned char *'
|   |     | `-ImplicitCastExpr 0x24bfc297750 <col:16> 'const unsigned char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x24bfc297730 <col:16> 'const unsigned char *' lvalue Var 0x24bfc288390 'p' 'const unsigned char *'
|   |     |-BinaryOperator 0x24bfc2977e0 <line:754:9, col:15> 'long' '='
|   |     | |-DeclRefExpr 0x24bfc297788 <col:9> 'long' lvalue Var 0x24bfc288560 'len' 'long'
|   |     | `-ImplicitCastExpr 0x24bfc2977c8 <col:15> 'long' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x24bfc2977a8 <col:15> 'long' lvalue Var 0x24bfc290138 'plen' 'long'
|   |     `-CompoundAssignOperator 0x24bfc297858 <line:755:9, col:14> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |       |-DeclRefExpr 0x24bfc297800 <col:9> 'const unsigned char *' lvalue Var 0x24bfc288390 'p' 'const unsigned char *'
|   |       `-ImplicitCastExpr 0x24bfc297840 <col:14> 'long' <LValueToRValue>
|   |         `-DeclRefExpr 0x24bfc297820 <col:14> 'long' lvalue Var 0x24bfc290138 'plen' 'long'
|   |-IfStmt 0x24bfc2979e0 <line:760:5, line:761:14>
|   | |-OpaqueValueExpr 0x24bfc2979c8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x24bfc2979b0 <col:9, col:14> 'err' 0x24bfc291c80
|   |-BinaryOperator 0x24bfc297a80 <line:763:5, col:11> 'const unsigned char *' '='
|   | |-UnaryOperator 0x24bfc297a30 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x24bfc297a18 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x24bfc2979f8 <col:6> 'const unsigned char **' lvalue ParmVar 0x24bfc28fb08 'in' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x24bfc297a68 <col:11> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x24bfc297a48 <col:11> 'const unsigned char *' lvalue Var 0x24bfc288390 'p' 'const unsigned char *'
|   |-BinaryOperator 0x24bfc297ae8 <line:764:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x24bfc297aa0 <col:5> 'int' lvalue Var 0x24bfc28ffe0 'ret' 'int'
|   | `-IntegerLiteral 0x24bfc297ac0 <col:11> 'int' 1
|   |-LabelStmt 0x24bfc297c58 <line:765:2, col:5> 'err'
|   | `-NullStmt 0x24bfc297c50 <col:5>
|   `-ReturnStmt 0x24bfc297ca8 <line:768:5, col:12>
|     `-ImplicitCastExpr 0x24bfc297c90 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x24bfc297c70 <col:12> 'int' lvalue Var 0x24bfc28ffe0 'ret' 'int'
|-FunctionDecl 0x24bfc2980c0 <line:773:1, line:907:1> line:773:12 invalid asn1_ex_c2i 'int (int **, const unsigned char *, int, int, char *, const int *)' static
| |-ParmVarDecl 0x24bfc297d80 <col:24, col:37> col:37 invalid pval 'int **'
| |-ParmVarDecl 0x24bfc297e00 <col:43, col:64> col:64 used cont 'const unsigned char *'
| |-ParmVarDecl 0x24bfc297e80 <col:70, col:74> col:74 used len 'int'
| |-ParmVarDecl 0x24bfc297f00 <line:774:24, col:28> col:28 used utype 'int'
| |-ParmVarDecl 0x24bfc297f80 <col:35, col:41> col:41 used free_cont 'char *'
| |-ParmVarDecl 0x24bfc298000 <col:52, col:69> col:69 invalid it 'const int *'
| `-CompoundStmt 0x24bfc294e00 <line:775:1, line:907:1>
|   |-DeclStmt 0x24bfc293360 <line:779:5, col:16>
|   | `-VarDecl 0x24bfc2932d0 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x24bfc293338 <col:15> 'int' 0
|   |-DeclStmt 0x24bfc2933f8 <line:780:5, col:35>
|   | `-VarDecl 0x24bfc293390 <col:5, col:33> col:33 invalid pf 'const int *'
|   |-IfStmt 0x24bfc2939e8 <line:787:5, line:800:5>
|   | |-OpaqueValueExpr 0x24bfc2939d0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x24bfc2939b8 <line:787:34, line:800:5>
|   |   `-IfStmt 0x24bfc2937b8 <line:788:9, line:794:13> has_else
|   |     |-OpaqueValueExpr 0x24bfc2937a0 <<invalid sloc>> '_Bool'
|   |     |-CompoundStmt 0x24bfc293780 <line:788:21, line:793:9>
|   |     | `-IfStmt 0x24bfc293768 <line:790:13, line:791:22>
|   |     |   |-OpaqueValueExpr 0x24bfc293750 <<invalid sloc>> '_Bool'
|   |     |   `-GotoStmt 0x24bfc293738 <col:17, col:22> 'err' 0x24bfc2936e8
|   |     `-NullStmt 0x24bfc293798 <line:794:13>
|   |-SwitchStmt 0x24bfc293a38 <line:801:5, line:894:5>
|   | |-ImplicitCastExpr 0x24bfc293a20 <line:801:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x24bfc293a00 <col:13> 'int' lvalue ParmVar 0x24bfc297f00 'utype' 'int'
|   | `-CompoundStmt 0x24bfc2949e0 <col:20, line:894:5>
|   |   |-IfStmt 0x24bfc293ae0 <line:803:9, line:804:18>
|   |   | |-OpaqueValueExpr 0x24bfc293ac8 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x24bfc293ab0 <col:13, col:18> 'err' 0x24bfc2936e8
|   |   |-BreakStmt 0x24bfc293af8 <line:805:9>
|   |   |-IfStmt 0x24bfc293b88 <line:808:9, line:811:9>
|   |   | |-ImplicitCastExpr 0x24bfc293b20 <line:808:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x24bfc293b00 <col:13> 'int' lvalue ParmVar 0x24bfc297e80 'len' 'int'
|   |   | `-CompoundStmt 0x24bfc293b70 <col:18, line:811:9>
|   |   |   `-GotoStmt 0x24bfc293b58 <line:810:13, col:18> 'err' 0x24bfc2936e8
|   |   |-BreakStmt 0x24bfc293ba0 <line:813:9>
|   |   |-IfStmt 0x24bfc293cd8 <line:816:9, line:823:9> has_else
|   |   | |-BinaryOperator 0x24bfc293c08 <line:816:13, col:20> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x24bfc293bf0 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x24bfc293ba8 <col:13> 'int' lvalue ParmVar 0x24bfc297e80 'len' 'int'
|   |   | | `-IntegerLiteral 0x24bfc293bc8 <col:20> 'int' 1
|   |   | |-CompoundStmt 0x24bfc293c60 <col:23, line:819:9>
|   |   | | `-GotoStmt 0x24bfc293c48 <line:818:13, col:18> 'err' 0x24bfc2936e8
|   |   | `-CompoundStmt 0x24bfc293cc8 <line:819:16, line:823:9>
|   |   |-BreakStmt 0x24bfc293d00 <line:824:9>
|   |   |-IfStmt 0x24bfc293d90 <line:827:9, line:828:18>
|   |   | |-OpaqueValueExpr 0x24bfc293d78 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x24bfc293d60 <col:13, col:18> 'err' 0x24bfc2936e8
|   |   |-BreakStmt 0x24bfc293da8 <line:829:9>
|   |   |-IfStmt 0x24bfc293e38 <line:834:9, line:835:18>
|   |   | |-OpaqueValueExpr 0x24bfc293e20 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x24bfc293e08 <col:13, col:18> 'err' 0x24bfc2936e8
|   |   |-BreakStmt 0x24bfc293e70 <line:838:9>
|   |   |-DefaultStmt 0x24bfc293fb8 <line:857:5, line:861:9>
|   |   | `-IfStmt 0x24bfc293fa0 <line:858:9, line:861:9>
|   |   |   |-OpaqueValueExpr 0x24bfc293f88 <<invalid sloc>> '_Bool'
|   |   |   `-CompoundStmt 0x24bfc293f70 <line:858:53, line:861:9>
|   |   |     `-GotoStmt 0x24bfc293f58 <line:860:13, col:18> 'err' 0x24bfc2936e8
|   |   |-IfStmt 0x24bfc294100 <line:862:9, line:866:9>
|   |   | |-OpaqueValueExpr 0x24bfc2940e8 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x24bfc2940d0 <line:862:59, line:866:9>
|   |   |   `-GotoStmt 0x24bfc2940b8 <line:865:13, col:18> 'err' 0x24bfc2936e8
|   |   |-IfStmt 0x24bfc294420 <line:868:9, line:878:9> has_else
|   |   | |-OpaqueValueExpr 0x24bfc294408 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x24bfc2943c0 <line:868:21, line:875:9>
|   |   | | `-IfStmt 0x24bfc2943a8 <line:870:13, line:873:13>
|   |   | |   |-OpaqueValueExpr 0x24bfc294390 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x24bfc294378 <line:870:31, line:873:13>
|   |   | |     `-GotoStmt 0x24bfc294360 <line:872:17, col:22> 'err' 0x24bfc2936e8
|   |   | `-CompoundStmt 0x24bfc2943f8 <line:875:16, line:878:9>
|   |   |-IfStmt 0x24bfc2949b0 <line:880:9, line:892:9> has_else
|   |   | |-ImplicitCastExpr 0x24bfc294498 <line:880:13, col:14> 'char' <LValueToRValue>
|   |   | | `-UnaryOperator 0x24bfc294480 <col:13, col:14> 'char' lvalue prefix '*' cannot overflow
|   |   | |   `-ImplicitCastExpr 0x24bfc294468 <col:14> 'char *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x24bfc294448 <col:14> 'char *' lvalue ParmVar 0x24bfc297f80 'free_cont' 'char *'
|   |   | |-CompoundStmt 0x24bfc294618 <col:25, line:885:9>
|   |   | | `-BinaryOperator 0x24bfc2945f8 <line:884:13, col:26> 'char' '='
|   |   | |   |-UnaryOperator 0x24bfc2945a0 <col:13, col:14> 'char' lvalue prefix '*' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x24bfc294588 <col:14> 'char *' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x24bfc294568 <col:14> 'char *' lvalue ParmVar 0x24bfc297f80 'free_cont' 'char *'
|   |   | |   `-ImplicitCastExpr 0x24bfc2945e0 <col:26> 'char' <IntegralCast>
|   |   | |     `-IntegerLiteral 0x24bfc2945b8 <col:26> 'int' 0
|   |   | `-CompoundStmt 0x24bfc294998 <line:885:16, line:892:9>
|   |   |   `-IfStmt 0x24bfc294980 <line:886:13, line:891:13>
|   |   |     |-OpaqueValueExpr 0x24bfc294968 <<invalid sloc>> '_Bool'
|   |   |     `-CompoundStmt 0x24bfc294950 <line:886:52, line:891:13>
|   |   |       `-GotoStmt 0x24bfc294938 <line:890:17, col:22> 'err' 0x24bfc2936e8
|   |   `-BreakStmt 0x24bfc2949d8 <line:893:9>
|   |-BinaryOperator 0x24bfc294b70 <line:899:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x24bfc294b10 <col:5> 'int' lvalue Var 0x24bfc2932d0 'ret' 'int'
|   | `-IntegerLiteral 0x24bfc294b48 <col:11> 'int' 1
|   |-LabelStmt 0x24bfc294da0 <line:900:2, line:905:5> 'err'
|   | `-IfStmt 0x24bfc294d88 <line:901:5, line:905:5>
|   |   |-UnaryOperator 0x24bfc294bc8 <line:901:9, col:10> 'int' prefix '!' cannot overflow
|   |   | `-ImplicitCastExpr 0x24bfc294bb0 <col:10> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x24bfc294b90 <col:10> 'int' lvalue Var 0x24bfc2932d0 'ret' 'int'
|   |   `-CompoundStmt 0x24bfc294d78 <col:15, line:905:5>
|   `-ReturnStmt 0x24bfc294df0 <line:906:5, col:12>
|     `-ImplicitCastExpr 0x24bfc294dd8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x24bfc294db8 <col:12> 'int' lvalue Var 0x24bfc2932d0 'ret' 'int'
|-FunctionDecl 0x24bfc295050 prev 0x24bfc27d070 <line:916:1, line:965:1> line:916:12 used asn1_find_end 'int (const unsigned char **, long, char)' static
| |-ParmVarDecl 0x24bfc294e68 <col:26, col:48> col:48 used in 'const unsigned char **'
| |-ParmVarDecl 0x24bfc294ee8 <col:52, col:57> col:57 used len 'long'
| |-ParmVarDecl 0x24bfc294f60 <col:62, col:67> col:67 used inf 'char'
| `-CompoundStmt 0x24bfc297168 <line:917:1, line:965:1>
|   |-DeclStmt 0x24bfc295188 <line:919:5, col:14>
|   | `-VarDecl 0x24bfc295120 <col:5, col:10> col:10 used plen 'long'
|   |-DeclStmt 0x24bfc296380 <line:920:5, col:37>
|   | |-VarDecl 0x24bfc2951b8 <col:5, col:31> col:26 used p 'const unsigned char *' cinit
|   | | `-ImplicitCastExpr 0x24bfc295270 <col:30, col:31> 'const unsigned char *' <LValueToRValue>
|   | |   `-UnaryOperator 0x24bfc295258 <col:30, col:31> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x24bfc295240 <col:31> 'const unsigned char **' <LValueToRValue>
|   | |       `-DeclRefExpr 0x24bfc295220 <col:31> 'const unsigned char **' lvalue ParmVar 0x24bfc294e68 'in' 'const unsigned char **'
|   | `-VarDecl 0x24bfc296300 <col:5, col:36> col:36 used q 'const unsigned char *'
|   |-IfStmt 0x24bfc296540 <line:922:5, line:925:5>
|   | |-BinaryOperator 0x24bfc296410 <line:922:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x24bfc2963f8 <col:9> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x24bfc2963e0 <col:9> 'char' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x24bfc296398 <col:9> 'char' lvalue ParmVar 0x24bfc294f60 'inf' 'char'
|   | | `-IntegerLiteral 0x24bfc2963b8 <col:16> 'int' 0
|   | `-CompoundStmt 0x24bfc296520 <col:19, line:925:5>
|   |   |-CompoundAssignOperator 0x24bfc2964b8 <line:923:9, col:16> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   | |-UnaryOperator 0x24bfc296468 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x24bfc296450 <col:10> 'const unsigned char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x24bfc296430 <col:10> 'const unsigned char **' lvalue ParmVar 0x24bfc294e68 'in' 'const unsigned char **'
|   |   | `-ImplicitCastExpr 0x24bfc2964a0 <col:16> 'long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x24bfc296480 <col:16> 'long' lvalue ParmVar 0x24bfc294ee8 'len' 'long'
|   |   `-ReturnStmt 0x24bfc296510 <line:924:9, col:16>
|   |     `-IntegerLiteral 0x24bfc2964e8 <col:16> 'int' 1
|   |-WhileStmt 0x24bfc296fd0 <line:933:5, line:958:5>
|   | |-BinaryOperator 0x24bfc2965f8 <line:933:12, col:18> 'int' '>'
|   | | |-ImplicitCastExpr 0x24bfc2965c8 <col:12> 'long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x24bfc296580 <col:12> 'long' lvalue ParmVar 0x24bfc294ee8 'len' 'long'
|   | | `-ImplicitCastExpr 0x24bfc2965e0 <col:18> 'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x24bfc2965a0 <col:18> 'int' 0
|   | `-CompoundStmt 0x24bfc296f98 <col:21, line:958:5>
|   |   |-IfStmt 0x24bfc296828 <line:934:9, line:940:9>
|   |   | |-CallExpr 0x24bfc2966c0 <line:934:13, col:35> 'int'
|   |   | | |-ImplicitCastExpr 0x24bfc2966a8 <col:13> 'int (*)(const unsigned char **, long)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x24bfc296618 <col:13> 'int (const unsigned char **, long)' Function 0x24bfc27cd60 'asn1_check_eoc' 'int (const unsigned char **, long)'
|   |   | | |-UnaryOperator 0x24bfc296670 <col:28, col:29> 'const unsigned char **' prefix '&' cannot overflow
|   |   | | | `-DeclRefExpr 0x24bfc296638 <col:29> 'const unsigned char *' lvalue Var 0x24bfc2951b8 'p' 'const unsigned char *'
|   |   | | `-ImplicitCastExpr 0x24bfc2966f0 <col:32> 'long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x24bfc296688 <col:32> 'long' lvalue ParmVar 0x24bfc294ee8 'len' 'long'
|   |   | `-CompoundStmt 0x24bfc296800 <col:38, line:940:9>
|   |   |   |-IfStmt 0x24bfc296750 <line:936:13, line:937:17>
|   |   |   | |-OpaqueValueExpr 0x24bfc296738 <<invalid sloc>> '_Bool'
|   |   |   | `-BreakStmt 0x24bfc296730 <col:17>
|   |   |   |-CompoundAssignOperator 0x24bfc2967c8 <line:938:13, col:20> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   |   |   | |-DeclRefExpr 0x24bfc296768 <col:13> 'long' lvalue ParmVar 0x24bfc294ee8 'len' 'long'
|   |   |   | `-ImplicitCastExpr 0x24bfc2967b0 <col:20> 'long' <IntegralCast>
|   |   |   |   `-IntegerLiteral 0x24bfc296788 <col:20> 'int' 2
|   |   |   `-ContinueStmt 0x24bfc2967f8 <line:939:13>
|   |   |-BinaryOperator 0x24bfc2968b0 <line:941:9, col:13> 'const unsigned char *' '='
|   |   | |-DeclRefExpr 0x24bfc296840 <col:9> 'const unsigned char *' lvalue Var 0x24bfc296300 'q' 'const unsigned char *'
|   |   | `-ImplicitCastExpr 0x24bfc296898 <col:13> 'const unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x24bfc296878 <col:13> 'const unsigned char *' lvalue Var 0x24bfc2951b8 'p' 'const unsigned char *'
|   |   |-IfStmt 0x24bfc296ce8 <line:943:9, line:947:9>
|   |   | |-OpaqueValueExpr 0x24bfc296cd0 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x24bfc296cb8 <line:944:47, line:947:9>
|   |   |   `-ReturnStmt 0x24bfc296ca8 <line:946:13, col:20>
|   |   |     `-IntegerLiteral 0x24bfc296c80 <col:20> 'int' 0
|   |   |-IfStmt 0x24bfc296e90 <line:948:9, line:956:9> has_else
|   |   | |-ImplicitCastExpr 0x24bfc296d20 <line:948:13> 'char' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x24bfc296d00 <col:13> 'char' lvalue ParmVar 0x24bfc294f60 'inf' 'char'
|   |   | |-CompoundStmt 0x24bfc296dd8 <col:18, line:954:9>
|   |   | | `-IfStmt 0x24bfc296dc0 <line:949:13, line:952:13>
|   |   | |   |-OpaqueValueExpr 0x24bfc296da8 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x24bfc296d90 <line:949:45, line:952:13>
|   |   | |     `-ReturnStmt 0x24bfc296d80 <line:951:17, col:24>
|   |   | |       `-IntegerLiteral 0x24bfc296d58 <col:24> 'int' 0
|   |   | `-CompoundStmt 0x24bfc296e78 <line:954:16, line:956:9>
|   |   |   `-CompoundAssignOperator 0x24bfc296e48 <line:955:13, col:18> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   |     |-DeclRefExpr 0x24bfc296df0 <col:13> 'const unsigned char *' lvalue Var 0x24bfc2951b8 'p' 'const unsigned char *'
|   |   |     `-ImplicitCastExpr 0x24bfc296e30 <col:18> 'long' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x24bfc296e10 <col:18> 'long' lvalue Var 0x24bfc295120 'plen' 'long'
|   |   `-CompoundAssignOperator 0x24bfc296f68 <line:957:9, col:20> 'long' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   |     |-DeclRefExpr 0x24bfc296eb8 <col:9> 'long' lvalue ParmVar 0x24bfc294ee8 'len' 'long'
|   |     `-BinaryOperator 0x24bfc296f48 <col:16, col:20> 'long long' '-'
|   |       |-ImplicitCastExpr 0x24bfc296f18 <col:16> 'const unsigned char *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x24bfc296ed8 <col:16> 'const unsigned char *' lvalue Var 0x24bfc2951b8 'p' 'const unsigned char *'
|   |       `-ImplicitCastExpr 0x24bfc296f30 <col:20> 'const unsigned char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x24bfc296ef8 <col:20> 'const unsigned char *' lvalue Var 0x24bfc296300 'q' 'const unsigned char *'
|   |-IfStmt 0x24bfc297070 <line:959:5, line:962:5>
|   | |-OpaqueValueExpr 0x24bfc297058 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x24bfc297040 <line:959:23, line:962:5>
|   |   `-ReturnStmt 0x24bfc297030 <line:961:9, col:16>
|   |     `-IntegerLiteral 0x24bfc297008 <col:16> 'int' 0
|   |-BinaryOperator 0x24bfc297110 <line:963:5, col:11> 'const unsigned char *' '='
|   | |-UnaryOperator 0x24bfc2970c0 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x24bfc2970a8 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x24bfc297088 <col:6> 'const unsigned char **' lvalue ParmVar 0x24bfc294e68 'in' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x24bfc2970f8 <col:11> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x24bfc2970d8 <col:11> 'const unsigned char *' lvalue Var 0x24bfc2951b8 'p' 'const unsigned char *'
|   `-ReturnStmt 0x24bfc297158 <line:964:5, col:12>
|     `-IntegerLiteral 0x24bfc297130 <col:12> 'int' 1
|-FunctionDecl 0x24bfc2985e0 <line:983:1, line:1038:1> line:983:12 invalid asn1_collect 'int (int *, const unsigned char **, long, char, int, int, int)' static
| |-ParmVarDecl 0x24bfc2971c8 <col:25, col:34> col:34 invalid buf 'int *'
| |-ParmVarDecl 0x24bfc297250 <col:39, col:61> col:61 used in 'const unsigned char **'
| |-ParmVarDecl 0x24bfc298320 <col:65, col:70> col:70 used len 'long'
| |-ParmVarDecl 0x24bfc298398 <line:984:25, col:30> col:30 used inf 'char'
| |-ParmVarDecl 0x24bfc298418 <col:35, col:39> col:39 used tag 'int'
| |-ParmVarDecl 0x24bfc298498 <col:44, col:48> col:48 used aclass 'int'
| |-ParmVarDecl 0x24bfc298518 <col:56, col:60> col:60 used depth 'int'
| `-CompoundStmt 0x24bfc299b88 <line:985:1, line:1038:1>
|   |-DeclStmt 0x24bfc2987e8 <line:986:5, col:31>
|   | |-VarDecl 0x24bfc2986e8 <col:5, col:26> col:26 used p 'const unsigned char *'
|   | `-VarDecl 0x24bfc298768 <col:5, col:30> col:30 used q 'const unsigned char *'
|   |-DeclStmt 0x24bfc298880 <line:987:5, col:14>
|   | `-VarDecl 0x24bfc298818 <col:5, col:10> col:10 used plen 'long'
|   |-DeclStmt 0x24bfc2989a0 <line:988:5, col:20>
|   | |-VarDecl 0x24bfc2988a8 <col:5, col:10> col:10 used cst 'char'
|   | `-VarDecl 0x24bfc298920 <col:5, col:15> col:15 used ininf 'char'
|   |-BinaryOperator 0x24bfc298a70 <line:989:5, col:10> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x24bfc2989b8 <col:5> 'const unsigned char *' lvalue Var 0x24bfc2986e8 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x24bfc298a58 <col:9, col:10> 'const unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x24bfc298a40 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x24bfc298a28 <col:10> 'const unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x24bfc2989f0 <col:10> 'const unsigned char **' lvalue ParmVar 0x24bfc297250 'in' 'const unsigned char **'
|   |-CompoundAssignOperator 0x24bfc298af0 <line:990:5, col:12> 'char' '&=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x24bfc298a90 <col:5> 'char' lvalue ParmVar 0x24bfc298398 'inf' 'char'
|   | `-IntegerLiteral 0x24bfc298ac8 <col:12> 'int' 1
|   |-IfStmt 0x24bfc298cb0 <line:995:5, line:998:5>
|   | |-OpaqueValueExpr 0x24bfc298c98 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x24bfc298c78 <line:995:23, line:998:5>
|   |   |-CompoundAssignOperator 0x24bfc298c10 <line:996:9, col:16> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   | |-UnaryOperator 0x24bfc298ba8 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x24bfc298b90 <col:10> 'const unsigned char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x24bfc298b70 <col:10> 'const unsigned char **' lvalue ParmVar 0x24bfc297250 'in' 'const unsigned char **'
|   |   | `-ImplicitCastExpr 0x24bfc298bf8 <col:16> 'long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x24bfc298bc0 <col:16> 'long' lvalue ParmVar 0x24bfc298320 'len' 'long'
|   |   `-ReturnStmt 0x24bfc298c68 <line:997:9, col:16>
|   |     `-IntegerLiteral 0x24bfc298c40 <col:16> 'int' 1
|   |-WhileStmt 0x24bfc2999d0 <line:999:5, line:1031:5>
|   | |-BinaryOperator 0x24bfc298d40 <line:999:12, col:18> 'int' '>'
|   | | |-ImplicitCastExpr 0x24bfc298d10 <col:12> 'long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x24bfc298cc8 <col:12> 'long' lvalue ParmVar 0x24bfc298320 'len' 'long'
|   | | `-ImplicitCastExpr 0x24bfc298d28 <col:18> 'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x24bfc298ce8 <col:18> 'int' 0
|   | `-CompoundStmt 0x24bfc299998 <col:21, line:1031:5>
|   |   |-BinaryOperator 0x24bfc298dd0 <line:1000:9, col:13> 'const unsigned char *' '='
|   |   | |-DeclRefExpr 0x24bfc298d60 <col:9> 'const unsigned char *' lvalue Var 0x24bfc298768 'q' 'const unsigned char *'
|   |   | `-ImplicitCastExpr 0x24bfc298db8 <col:13> 'const unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x24bfc298d98 <col:13> 'const unsigned char *' lvalue Var 0x24bfc2986e8 'p' 'const unsigned char *'
|   |   |-IfStmt 0x24bfc299050 <line:1002:9, line:1012:9>
|   |   | |-CallExpr 0x24bfc298e80 <line:1002:13, col:35> 'int'
|   |   | | |-ImplicitCastExpr 0x24bfc298e68 <col:13> 'int (*)(const unsigned char **, long)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x24bfc298df0 <col:13> 'int (const unsigned char **, long)' Function 0x24bfc27cd60 'asn1_check_eoc' 'int (const unsigned char **, long)'
|   |   | | |-UnaryOperator 0x24bfc298e30 <col:28, col:29> 'const unsigned char **' prefix '&' cannot overflow
|   |   | | | `-DeclRefExpr 0x24bfc298e10 <col:29> 'const unsigned char *' lvalue Var 0x24bfc2986e8 'p' 'const unsigned char *'
|   |   | | `-ImplicitCastExpr 0x24bfc298eb0 <col:32> 'long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x24bfc298e48 <col:32> 'long' lvalue ParmVar 0x24bfc298320 'len' 'long'
|   |   | `-CompoundStmt 0x24bfc299028 <col:38, line:1012:9>
|   |   |   |-IfStmt 0x24bfc298f88 <line:1006:13, line:1009:13>
|   |   |   | |-UnaryOperator 0x24bfc298f00 <line:1006:17, col:18> 'int' prefix '!' cannot overflow
|   |   |   | | `-ImplicitCastExpr 0x24bfc298ee8 <col:18> 'char' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x24bfc298ec8 <col:18> 'char' lvalue ParmVar 0x24bfc298398 'inf' 'char'
|   |   |   | `-CompoundStmt 0x24bfc298f70 <col:23, line:1009:13>
|   |   |   |   `-ReturnStmt 0x24bfc298f60 <line:1008:17, col:24>
|   |   |   |     `-IntegerLiteral 0x24bfc298f38 <col:24> 'int' 0
|   |   |   |-BinaryOperator 0x24bfc299000 <line:1010:13, col:19> 'char' '='
|   |   |   | |-DeclRefExpr 0x24bfc298fa0 <col:13> 'char' lvalue ParmVar 0x24bfc298398 'inf' 'char'
|   |   |   | `-ImplicitCastExpr 0x24bfc298fe8 <col:19> 'char' <IntegralCast>
|   |   |   |   `-IntegerLiteral 0x24bfc298fc0 <col:19> 'int' 0
|   |   |   `-BreakStmt 0x24bfc299020 <line:1011:13>
|   |   |-IfStmt 0x24bfc299480 <line:1014:9, line:1018:9>
|   |   | |-OpaqueValueExpr 0x24bfc299468 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x24bfc299450 <line:1015:58, line:1018:9>
|   |   |   `-ReturnStmt 0x24bfc299440 <line:1017:13, col:20>
|   |   |     `-IntegerLiteral 0x24bfc299418 <col:20> 'int' 0
|   |   |-IfStmt 0x24bfc299890 <line:1021:9, line:1029:20> has_else
|   |   | |-ImplicitCastExpr 0x24bfc2994b8 <line:1021:13> 'char' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x24bfc299498 <col:13> 'char' lvalue Var 0x24bfc2988a8 'cst' 'char'
|   |   | |-CompoundStmt 0x24bfc299790 <col:18, line:1028:9>
|   |   | | |-IfStmt 0x24bfc2995d8 <line:1022:13, line:1025:13>
|   |   | | | |-BinaryOperator 0x24bfc299548 <line:1022:17, line:980:31> 'int' '>='
|   |   | | | | |-ImplicitCastExpr 0x24bfc299530 <line:1022:17> 'int' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x24bfc2994d0 <col:17> 'int' lvalue ParmVar 0x24bfc298518 'depth' 'int'
|   |   | | | | `-IntegerLiteral 0x24bfc299508 <line:980:31> 'int' 5
|   |   | | | `-CompoundStmt 0x24bfc2995c0 <line:1022:48, line:1025:13>
|   |   | | |   `-ReturnStmt 0x24bfc2995b0 <line:1024:17, col:24>
|   |   | | |     `-IntegerLiteral 0x24bfc299588 <col:24> 'int' 0
|   |   | | `-IfStmt 0x24bfc299778 <line:1026:13, line:1027:24>
|   |   | |   |-OpaqueValueExpr 0x24bfc299760 <<invalid sloc>> '_Bool'
|   |   | |   `-ReturnStmt 0x24bfc299750 <col:17, col:24>
|   |   | |     `-IntegerLiteral 0x24bfc299728 <col:24> 'int' 0
|   |   | `-IfStmt 0x24bfc299878 <line:1028:16, line:1029:20>
|   |   |   |-OpaqueValueExpr 0x24bfc299860 <<invalid sloc>> '_Bool'
|   |   |   `-ReturnStmt 0x24bfc299850 <col:13, col:20>
|   |   |     `-IntegerLiteral 0x24bfc299828 <col:20> 'int' 0
|   |   `-CompoundAssignOperator 0x24bfc299968 <line:1030:9, col:20> 'long' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   |     |-DeclRefExpr 0x24bfc2998b8 <col:9> 'long' lvalue ParmVar 0x24bfc298320 'len' 'long'
|   |     `-BinaryOperator 0x24bfc299948 <col:16, col:20> 'long long' '-'
|   |       |-ImplicitCastExpr 0x24bfc299918 <col:16> 'const unsigned char *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x24bfc2998d8 <col:16> 'const unsigned char *' lvalue Var 0x24bfc2986e8 'p' 'const unsigned char *'
|   |       `-ImplicitCastExpr 0x24bfc299930 <col:20> 'const unsigned char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x24bfc2998f8 <col:20> 'const unsigned char *' lvalue Var 0x24bfc298768 'q' 'const unsigned char *'
|   |-IfStmt 0x24bfc299a90 <line:1032:5, line:1035:5>
|   | |-ImplicitCastExpr 0x24bfc299a08 <line:1032:9> 'char' <LValueToRValue>
|   | | `-DeclRefExpr 0x24bfc2999e8 <col:9> 'char' lvalue ParmVar 0x24bfc298398 'inf' 'char'
|   | `-CompoundStmt 0x24bfc299a78 <col:14, line:1035:5>
|   |   `-ReturnStmt 0x24bfc299a68 <line:1034:9, col:16>
|   |     `-IntegerLiteral 0x24bfc299a40 <col:16> 'int' 0
|   |-BinaryOperator 0x24bfc299b30 <line:1036:5, col:11> 'const unsigned char *' '='
|   | |-UnaryOperator 0x24bfc299ae0 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x24bfc299ac8 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x24bfc299aa8 <col:6> 'const unsigned char **' lvalue ParmVar 0x24bfc297250 'in' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x24bfc299b18 <col:11> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x24bfc299af8 <col:11> 'const unsigned char *' lvalue Var 0x24bfc2986e8 'p' 'const unsigned char *'
|   `-ReturnStmt 0x24bfc299b78 <line:1037:5, col:12>
|     `-IntegerLiteral 0x24bfc299b50 <col:12> 'int' 1
|-FunctionDecl 0x24bfc299db0 <line:1040:1, line:1053:1> line:1040:12 invalid collect_data 'int (int *, const unsigned char **, long)' static
| |-ParmVarDecl 0x24bfc299c00 <col:25, col:34> col:34 invalid buf 'int *'
| |-ParmVarDecl 0x24bfc299c88 <col:39, col:61> col:61 used p 'const unsigned char **'
| |-ParmVarDecl 0x24bfc299d08 <col:64, col:69> col:69 used plen 'long'
| `-CompoundStmt 0x24bfc29a2d0 <line:1041:1, line:1053:1>
|   |-DeclStmt 0x24bfc299f00 <line:1042:5, col:12>
|   | `-VarDecl 0x24bfc299e98 <col:5, col:9> col:9 used len 'int'
|   |-IfStmt 0x24bfc29a1c8 <line:1043:5, line:1050:5>
|   | |-OpaqueValueExpr 0x24bfc29a1b0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x24bfc29a198 <line:1043:14, line:1050:5>
|   |   `-IfStmt 0x24bfc29a0b8 <line:1045:9, line:1048:9>
|   |     |-OpaqueValueExpr 0x24bfc29a0a0 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x24bfc29a088 <line:1045:51, line:1048:9>
|   |       `-ReturnStmt 0x24bfc29a078 <line:1047:13, col:20>
|   |         `-IntegerLiteral 0x24bfc29a050 <col:20> 'int' 0
|   |-CompoundAssignOperator 0x24bfc29a268 <line:1051:5, col:11> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | |-UnaryOperator 0x24bfc29a218 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x24bfc29a200 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x24bfc29a1e0 <col:6> 'const unsigned char **' lvalue ParmVar 0x24bfc299c88 'p' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x24bfc29a250 <col:11> 'long' <LValueToRValue>
|   |   `-DeclRefExpr 0x24bfc29a230 <col:11> 'long' lvalue ParmVar 0x24bfc299d08 'plen' 'long'
|   `-ReturnStmt 0x24bfc29a2c0 <line:1052:5, col:12>
|     `-IntegerLiteral 0x24bfc29a298 <col:12> 'int' 1
|-FunctionDecl 0x24bfc292410 prev 0x24bfc27cd60 <line:1057:1, line:1068:1> line:1057:12 used asn1_check_eoc 'int (const unsigned char **, long)' static
| |-ParmVarDecl 0x24bfc2922c0 <col:27, col:49> col:49 used in 'const unsigned char **'
| |-ParmVarDecl 0x24bfc292340 <col:53, col:58> col:58 used len 'long'
| `-CompoundStmt 0x24bfc2929d0 <line:1058:1, line:1068:1>
|   |-DeclStmt 0x24bfc292540 <line:1059:5, col:27>
|   | `-VarDecl 0x24bfc2924d8 <col:5, col:26> col:26 used p 'const unsigned char *'
|   |-IfStmt 0x24bfc292628 <line:1060:5, line:1061:16>
|   | |-BinaryOperator 0x24bfc2925d0 <line:1060:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x24bfc2925a0 <col:9> 'long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x24bfc292558 <col:9> 'long' lvalue ParmVar 0x24bfc292340 'len' 'long'
|   | | `-ImplicitCastExpr 0x24bfc2925b8 <col:15> 'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x24bfc292578 <col:15> 'int' 2
|   | `-ReturnStmt 0x24bfc292618 <line:1061:9, col:16>
|   |   `-IntegerLiteral 0x24bfc2925f0 <col:16> 'int' 0
|   |-BinaryOperator 0x24bfc2926e0 <line:1062:5, col:10> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x24bfc292640 <col:5> 'const unsigned char *' lvalue Var 0x24bfc2924d8 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x24bfc2926c8 <col:9, col:10> 'const unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x24bfc2926b0 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x24bfc292698 <col:10> 'const unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x24bfc292678 <col:10> 'const unsigned char **' lvalue ParmVar 0x24bfc2922c0 'in' 'const unsigned char **'
|   |-IfStmt 0x24bfc292980 <line:1063:5, line:1066:5>
|   | |-BinaryOperator 0x24bfc292860 <line:1063:9, col:22> 'int' '&&'
|   | | |-UnaryOperator 0x24bfc292798 <col:9, col:13> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x24bfc292780 <col:10, col:13> 'unsigned char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x24bfc292760 <col:10, col:13> 'const unsigned char' lvalue
|   | | |     |-ImplicitCastExpr 0x24bfc292748 <col:10> 'const unsigned char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x24bfc292700 <col:10> 'const unsigned char *' lvalue Var 0x24bfc2924d8 'p' 'const unsigned char *'
|   | | |     `-IntegerLiteral 0x24bfc292720 <col:12> 'int' 0
|   | | `-UnaryOperator 0x24bfc292848 <col:18, col:22> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x24bfc292830 <col:19, col:22> 'unsigned char' <LValueToRValue>
|   | |     `-ArraySubscriptExpr 0x24bfc292810 <col:19, col:22> 'const unsigned char' lvalue
|   | |       |-ImplicitCastExpr 0x24bfc2927f8 <col:19> 'const unsigned char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x24bfc2927b0 <col:19> 'const unsigned char *' lvalue Var 0x24bfc2924d8 'p' 'const unsigned char *'
|   | |       `-IntegerLiteral 0x24bfc2927d0 <col:21> 'int' 1
|   | `-CompoundStmt 0x24bfc292960 <col:25, line:1066:5>
|   |   |-CompoundAssignOperator 0x24bfc2928f8 <line:1064:9, col:16> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   | |-UnaryOperator 0x24bfc2928b8 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x24bfc2928a0 <col:10> 'const unsigned char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x24bfc292880 <col:10> 'const unsigned char **' lvalue ParmVar 0x24bfc2922c0 'in' 'const unsigned char **'
|   |   | `-IntegerLiteral 0x24bfc2928d0 <col:16> 'int' 2
|   |   `-ReturnStmt 0x24bfc292950 <line:1065:9, col:16>
|   |     `-IntegerLiteral 0x24bfc292928 <col:16> 'int' 1
|   `-ReturnStmt 0x24bfc2929c0 <line:1067:5, col:12>
|     `-IntegerLiteral 0x24bfc292998 <col:12> 'int' 0
`-FunctionDecl 0x24bfc293008 <line:1077:1, line:1159:1> line:1077:12 invalid asn1_check_tlen 'int (long *, int *, unsigned char *, char *, char *, const unsigned char **, long, int, int, char, int *)' static
  |-ParmVarDecl 0x24bfc292a20 <col:28, col:34> col:34 used olen 'long *'
  |-ParmVarDecl 0x24bfc292aa0 <col:40, col:45> col:45 used otag 'int *'
  |-ParmVarDecl 0x24bfc292b20 <col:51, col:66> col:66 used oclass 'unsigned char *'
  |-ParmVarDecl 0x24bfc292ba0 <line:1078:28, col:34> col:34 used inf 'char *'
  |-ParmVarDecl 0x24bfc292c20 <col:39, col:45> col:45 used cst 'char *'
  |-ParmVarDecl 0x24bfc292ca8 <line:1079:28, col:50> col:50 used in 'const unsigned char **'
  |-ParmVarDecl 0x24bfc292d28 <col:54, col:59> col:59 used len 'long'
  |-ParmVarDecl 0x24bfc292da8 <line:1080:28, col:32> col:32 used exptag 'int'
  |-ParmVarDecl 0x24bfc292e28 <col:40, col:44> col:44 used expclass 'int'
  |-ParmVarDecl 0x24bfc292ea0 <col:54, col:59> col:59 used opt 'char'
  |-ParmVarDecl 0x24bfc292f20 <col:64, col:74> col:74 invalid ctx 'int *'
  `-CompoundStmt 0x24bfc29abc0 <line:1081:1, line:1159:1>
    |-DeclStmt 0x24bfc293198 <line:1082:5, col:10>
    | `-VarDecl 0x24bfc293130 <col:5, col:9> col:9 used i 'int'
    |-DeclStmt 0x24bfc295308 <line:1083:5, col:21>
    | |-VarDecl 0x24bfc2931c8 <col:5, col:9> col:9 used ptag 'int'
    | `-VarDecl 0x24bfc293248 <col:5, col:15> col:15 used pclass 'int'
    |-DeclStmt 0x24bfc2953a0 <line:1084:5, col:14>
    | `-VarDecl 0x24bfc295338 <col:5, col:10> col:10 used plen 'long'
    |-DeclStmt 0x24bfc2954d0 <line:1085:5, col:31>
    | |-VarDecl 0x24bfc2953d0 <col:5, col:26> col:26 used p 'const unsigned char *'
    | `-VarDecl 0x24bfc295450 <col:5, col:30> col:30 used q 'const unsigned char *'
    |-BinaryOperator 0x24bfc2955a0 <line:1086:5, col:10> 'const unsigned char *' '='
    | |-DeclRefExpr 0x24bfc2954e8 <col:5> 'const unsigned char *' lvalue Var 0x24bfc2953d0 'p' 'const unsigned char *'
    | `-ImplicitCastExpr 0x24bfc295588 <col:9, col:10> 'const unsigned char *' <LValueToRValue>
    |   `-UnaryOperator 0x24bfc295570 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x24bfc295558 <col:10> 'const unsigned char **' <LValueToRValue>
    |       `-DeclRefExpr 0x24bfc295520 <col:10> 'const unsigned char **' lvalue ParmVar 0x24bfc292ca8 'in' 'const unsigned char **'
    |-BinaryOperator 0x24bfc295630 <line:1087:5, col:9> 'const unsigned char *' '='
    | |-DeclRefExpr 0x24bfc2955c0 <col:5> 'const unsigned char *' lvalue Var 0x24bfc295450 'q' 'const unsigned char *'
    | `-ImplicitCastExpr 0x24bfc295618 <col:9> 'const unsigned char *' <LValueToRValue>
    |   `-DeclRefExpr 0x24bfc2955f8 <col:9> 'const unsigned char *' lvalue Var 0x24bfc2953d0 'p' 'const unsigned char *'
    |-IfStmt 0x24bfc295db8 <line:1089:5, line:1114:5> has_else
    | |-OpaqueValueExpr 0x24bfc295da0 <<invalid sloc>> '_Bool'
    | |-CompoundStmt 0x24bfc295750 <line:1089:28, line:1095:5>
    | `-CompoundStmt 0x24bfc295d80 <col:12, line:1114:5>
    |   |-BinaryOperator 0x24bfc295a20 <line:1096:9, col:59> 'int' '='
    |   | |-DeclRefExpr 0x24bfc295760 <col:9> 'int' lvalue Var 0x24bfc293130 'i' 'int'
    |   | `-CallExpr 0x24bfc2959c0 <col:13, col:59> 'int'
    |   |   |-ImplicitCastExpr 0x24bfc2959a8 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x24bfc295870 <col:13> 'int ()' Function 0x24bfc2957a8 'ASN1_get_object' 'int ()'
    |   |   |-UnaryOperator 0x24bfc2958b0 <col:29, col:30> 'const unsigned char **' prefix '&' cannot overflow
    |   |   | `-DeclRefExpr 0x24bfc295890 <col:30> 'const unsigned char *' lvalue Var 0x24bfc2953d0 'p' 'const unsigned char *'
    |   |   |-UnaryOperator 0x24bfc2958e8 <col:33, col:34> 'long *' prefix '&' cannot overflow
    |   |   | `-DeclRefExpr 0x24bfc2958c8 <col:34> 'long' lvalue Var 0x24bfc295338 'plen' 'long'
    |   |   |-UnaryOperator 0x24bfc295920 <col:40, col:41> 'int *' prefix '&' cannot overflow
    |   |   | `-DeclRefExpr 0x24bfc295900 <col:41> 'int' lvalue Var 0x24bfc2931c8 'ptag' 'int'
    |   |   |-UnaryOperator 0x24bfc295958 <col:47, col:48> 'int *' prefix '&' cannot overflow
    |   |   | `-DeclRefExpr 0x24bfc295938 <col:48> 'int' lvalue Var 0x24bfc293248 'pclass' 'int'
    |   |   `-ImplicitCastExpr 0x24bfc295a08 <col:56> 'long' <LValueToRValue>
    |   |     `-DeclRefExpr 0x24bfc295970 <col:56> 'long' lvalue ParmVar 0x24bfc292d28 'len' 'long'
    |   `-IfStmt 0x24bfc295d68 <line:1097:9, line:1113:9>
    |     |-OpaqueValueExpr 0x24bfc295d50 <<invalid sloc>> '_Bool'
    |     `-CompoundStmt 0x24bfc295d38 <line:1097:18, line:1113:9>
    |       `-IfStmt 0x24bfc295d20 <line:1108:13, line:1112:13>
    |         |-OpaqueValueExpr 0x24bfc295d08 <<invalid sloc>> '_Bool'
    |         `-CompoundStmt 0x24bfc295cf0 <line:1108:62, line:1112:13>
    |           `-ReturnStmt 0x24bfc295ce0 <line:1111:17, col:24>
    |             `-IntegerLiteral 0x24bfc295cb8 <col:24> 'int' 0
    |-IfStmt 0x24bfc295ef8 <line:1116:5, line:1120:5>
    | |-BinaryOperator 0x24bfc295e40 <line:1116:9, col:13> 'int' '&'
    | | |-ImplicitCastExpr 0x24bfc295e28 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x24bfc295de0 <col:9> 'int' lvalue Var 0x24bfc293130 'i' 'int'
    | | `-IntegerLiteral 0x24bfc295e00 <col:13> 'int' 128
    | `-CompoundStmt 0x24bfc295ee0 <col:19, line:1120:5>
    |   `-ReturnStmt 0x24bfc295ed0 <line:1119:9, col:16>
    |     `-IntegerLiteral 0x24bfc295ea8 <col:16> 'int' 0
    |-IfStmt 0x24bfc29a340 <line:1121:5, line:1137:5>
    | |-BinaryOperator 0x24bfc295f88 <line:1121:9, col:19> 'int' '>='
    | | |-ImplicitCastExpr 0x24bfc295f70 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x24bfc295f10 <col:9> 'int' lvalue ParmVar 0x24bfc292da8 'exptag' 'int'
    | | `-IntegerLiteral 0x24bfc295f48 <col:19> 'int' 0
    | `-CompoundStmt 0x24bfc2962d8 <col:22, line:1137:5>
    |   `-IfStmt 0x24bfc296298 <line:1122:9, line:1131:9>
    |     |-BinaryOperator 0x24bfc296120 <line:1122:13, col:52> 'int' '||'
    |     | |-ParenExpr 0x24bfc296038 <col:13, col:28> 'int'
    |     | | `-BinaryOperator 0x24bfc296018 <col:14, col:24> 'int' '!='
    |     | |   |-ImplicitCastExpr 0x24bfc295fe8 <col:14> 'int' <LValueToRValue>
    |     | |   | `-DeclRefExpr 0x24bfc295fa8 <col:14> 'int' lvalue ParmVar 0x24bfc292da8 'exptag' 'int'
    |     | |   `-ImplicitCastExpr 0x24bfc296000 <col:24> 'int' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x24bfc295fc8 <col:24> 'int' lvalue Var 0x24bfc2931c8 'ptag' 'int'
    |     | `-ParenExpr 0x24bfc296100 <col:33, col:52> 'int'
    |     |   `-BinaryOperator 0x24bfc2960e0 <col:34, col:46> 'int' '!='
    |     |     |-ImplicitCastExpr 0x24bfc2960b0 <col:34> 'int' <LValueToRValue>
    |     |     | `-DeclRefExpr 0x24bfc296058 <col:34> 'int' lvalue ParmVar 0x24bfc292e28 'expclass' 'int'
    |     |     `-ImplicitCastExpr 0x24bfc2960c8 <col:46> 'int' <LValueToRValue>
    |     |       `-DeclRefExpr 0x24bfc296090 <col:46> 'int' lvalue Var 0x24bfc293248 'pclass' 'int'
    |     `-CompoundStmt 0x24bfc296278 <col:55, line:1131:9>
    |       |-IfStmt 0x24bfc2961e0 <line:1126:13, line:1127:25>
    |       | |-ImplicitCastExpr 0x24bfc296178 <line:1126:17> 'char' <LValueToRValue>
    |       | | `-DeclRefExpr 0x24bfc296140 <col:17> 'char' lvalue ParmVar 0x24bfc292ea0 'opt' 'char'
    |       | `-ReturnStmt 0x24bfc2961d0 <line:1127:17, col:25>
    |       |   `-UnaryOperator 0x24bfc2961b8 <col:24, col:25> 'int' prefix '-'
    |       |     `-IntegerLiteral 0x24bfc296190 <col:25> 'int' 1
    |       `-ReturnStmt 0x24bfc296268 <line:1130:13, col:20>
    |         `-IntegerLiteral 0x24bfc296240 <col:20> 'int' 0
    |-IfStmt 0x24bfc29a550 <line:1139:5, line:1140:28>
    | |-BinaryOperator 0x24bfc29a3b8 <line:1139:9, col:13> 'int' '&'
    | | |-ImplicitCastExpr 0x24bfc29a3a0 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x24bfc29a358 <col:9> 'int' lvalue Var 0x24bfc293130 'i' 'int'
    | | `-IntegerLiteral 0x24bfc29a378 <col:13> 'int' 1
    | `-BinaryOperator 0x24bfc29a530 <line:1140:9, col:28> 'long' '='
    |   |-DeclRefExpr 0x24bfc29a3d8 <col:9> 'long' lvalue Var 0x24bfc295338 'plen' 'long'
    |   `-ImplicitCastExpr 0x24bfc29a518 <col:16, col:28> 'long' <IntegralCast>
    |     `-BinaryOperator 0x24bfc29a4f8 <col:16, col:28> 'long long' '-'
    |       |-ImplicitCastExpr 0x24bfc29a4e0 <col:16> 'long long' <IntegralCast>
    |       | `-ImplicitCastExpr 0x24bfc29a4c8 <col:16> 'long' <LValueToRValue>
    |       |   `-DeclRefExpr 0x24bfc29a3f8 <col:16> 'long' lvalue ParmVar 0x24bfc292d28 'len' 'long'
    |       `-ParenExpr 0x24bfc29a4a8 <col:22, col:28> 'long long'
    |         `-BinaryOperator 0x24bfc29a488 <col:23, col:27> 'long long' '-'
    |           |-ImplicitCastExpr 0x24bfc29a458 <col:23> 'const unsigned char *' <LValueToRValue>
    |           | `-DeclRefExpr 0x24bfc29a418 <col:23> 'const unsigned char *' lvalue Var 0x24bfc2953d0 'p' 'const unsigned char *'
    |           `-ImplicitCastExpr 0x24bfc29a470 <col:27> 'const unsigned char *' <LValueToRValue>
    |             `-DeclRefExpr 0x24bfc29a438 <col:27> 'const unsigned char *' lvalue Var 0x24bfc295450 'q' 'const unsigned char *'
    |-IfStmt 0x24bfc29a6c0 <line:1142:5, line:1143:20>
    | |-ImplicitCastExpr 0x24bfc29a5a0 <line:1142:9> 'char *' <LValueToRValue>
    | | `-DeclRefExpr 0x24bfc29a568 <col:9> 'char *' lvalue ParmVar 0x24bfc292ba0 'inf' 'char *'
    | `-BinaryOperator 0x24bfc29a6a0 <line:1143:9, col:20> 'char' '='
    |   |-UnaryOperator 0x24bfc29a5f0 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x24bfc29a5d8 <col:10> 'char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x24bfc29a5b8 <col:10> 'char *' lvalue ParmVar 0x24bfc292ba0 'inf' 'char *'
    |   `-ImplicitCastExpr 0x24bfc29a688 <col:16, col:20> 'char' <IntegralCast>
    |     `-BinaryOperator 0x24bfc29a668 <col:16, col:20> 'int' '&'
    |       |-ImplicitCastExpr 0x24bfc29a650 <col:16> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x24bfc29a608 <col:16> 'int' lvalue Var 0x24bfc293130 'i' 'int'
    |       `-IntegerLiteral 0x24bfc29a628 <col:20> 'int' 1
    |-IfStmt 0x24bfc29a890 <line:1148:5, line:1149:17>
    | |-ImplicitCastExpr 0x24bfc29a7d0 <line:1148:9> 'long *' <LValueToRValue>
    | | `-DeclRefExpr 0x24bfc29a798 <col:9> 'long *' lvalue ParmVar 0x24bfc292a20 'olen' 'long *'
    | `-BinaryOperator 0x24bfc29a870 <line:1149:9, col:17> 'long' '='
    |   |-UnaryOperator 0x24bfc29a820 <col:9, col:10> 'long' lvalue prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x24bfc29a808 <col:10> 'long *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x24bfc29a7e8 <col:10> 'long *' lvalue ParmVar 0x24bfc292a20 'olen' 'long *'
    |   `-ImplicitCastExpr 0x24bfc29a858 <col:17> 'long' <LValueToRValue>
    |     `-DeclRefExpr 0x24bfc29a838 <col:17> 'long' lvalue Var 0x24bfc295338 'plen' 'long'
    |-IfStmt 0x24bfc29a9b8 <line:1151:5, line:1152:19>
    | |-ImplicitCastExpr 0x24bfc29a8e0 <line:1151:9> 'unsigned char *' <LValueToRValue>
    | | `-DeclRefExpr 0x24bfc29a8a8 <col:9> 'unsigned char *' lvalue ParmVar 0x24bfc292b20 'oclass' 'unsigned char *'
    | `-BinaryOperator 0x24bfc29a998 <line:1152:9, col:19> 'unsigned char' '='
    |   |-UnaryOperator 0x24bfc29a930 <col:9, col:10> 'unsigned char' lvalue prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x24bfc29a918 <col:10> 'unsigned char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x24bfc29a8f8 <col:10> 'unsigned char *' lvalue ParmVar 0x24bfc292b20 'oclass' 'unsigned char *'
    |   `-ImplicitCastExpr 0x24bfc29a980 <col:19> 'unsigned char' <IntegralCast>
    |     `-ImplicitCastExpr 0x24bfc29a968 <col:19> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x24bfc29a948 <col:19> 'int' lvalue Var 0x24bfc293248 'pclass' 'int'
    |-IfStmt 0x24bfc29aac8 <line:1154:5, line:1155:17>
    | |-ImplicitCastExpr 0x24bfc29aa08 <line:1154:9> 'int *' <LValueToRValue>
    | | `-DeclRefExpr 0x24bfc29a9d0 <col:9> 'int *' lvalue ParmVar 0x24bfc292aa0 'otag' 'int *'
    | `-BinaryOperator 0x24bfc29aaa8 <line:1155:9, col:17> 'int' '='
    |   |-UnaryOperator 0x24bfc29aa58 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x24bfc29aa40 <col:10> 'int *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x24bfc29aa20 <col:10> 'int *' lvalue ParmVar 0x24bfc292aa0 'otag' 'int *'
    |   `-ImplicitCastExpr 0x24bfc29aa90 <col:17> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x24bfc29aa70 <col:17> 'int' lvalue Var 0x24bfc2931c8 'ptag' 'int'
    |-BinaryOperator 0x24bfc29ab68 <line:1157:5, col:11> 'const unsigned char *' '='
    | |-UnaryOperator 0x24bfc29ab18 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x24bfc29ab00 <col:6> 'const unsigned char **' <LValueToRValue>
    | |   `-DeclRefExpr 0x24bfc29aae0 <col:6> 'const unsigned char **' lvalue ParmVar 0x24bfc292ca8 'in' 'const unsigned char **'
    | `-ImplicitCastExpr 0x24bfc29ab50 <col:11> 'const unsigned char *' <LValueToRValue>
    |   `-DeclRefExpr 0x24bfc29ab30 <col:11> 'const unsigned char *' lvalue Var 0x24bfc2953d0 'p' 'const unsigned char *'
    `-ReturnStmt 0x24bfc29abb0 <line:1158:5, col:12>
      `-IntegerLiteral 0x24bfc29ab88 <col:12> 'int' 1
