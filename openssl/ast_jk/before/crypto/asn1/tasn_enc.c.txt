TranslationUnitDecl 0x299eae71e28 <<invalid sloc>> <invalid sloc> <undeserialized declarations>
|-TypedefDecl 0x299eae726c0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x299eae723c0 '__int128'
|-TypedefDecl 0x299eae72730 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x299eae723e0 'unsigned __int128'
|-TypedefDecl 0x299eae72a68 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x299eae72820 'struct __NSConstantString_tag'
|   `-Record 0x299eae72788 '__NSConstantString_tag'
|-TypedefDecl 0x299eae72ad8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x299eae72000 'unsigned long long'
|-TypedefDecl 0x299eae72b70 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x299eae72b30 'char *'
|   `-BuiltinType 0x299eae71ec0 'char'
|-TypedefDecl 0x299eae72be0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x299eae72b30 'char *'
|   `-BuiltinType 0x299eae71ec0 'char'
|-TypedefDecl 0x299eae72c50 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:35:1, col:26> col:26 ptrdiff_t 'long long'
| `-BuiltinType 0x299eae71f60 'long long'
|-TypedefDecl 0x299eae72cc0 prev 0x299eae72ad8 <line:46:1, col:23> col:23 size_t 'unsigned long long'
| `-BuiltinType 0x299eae72000 'unsigned long long'
|-TypedefDecl 0x299eae72d48 <line:60:1, col:23> col:23 rsize_t 'unsigned long long'
| `-BuiltinType 0x299eae72000 'unsigned long long'
|-TypedefDecl 0x299eae72db8 <line:74:1, col:24> col:24 wchar_t 'unsigned short'
| `-BuiltinType 0x299eae71fa0 'unsigned short'
|-ImportDecl 0x299ec76b790 <line:102:1> col:1 implicit _Builtin_stddef_max_align_t
|-TypedefDecl 0x299ec76b838 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x299eae72000 'unsigned long long'
|-TypedefDecl 0x299ec76b8a8 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x299eae72b30 'char *'
|   `-BuiltinType 0x299eae71ec0 'char'
|-FunctionDecl 0x299ec76baf0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x299ec76bb90 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x299ec76bc00 <col:21> Implicit
|-FunctionDecl 0x299ec76bc58 prev 0x299ec76baf0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x299ec76b988 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x299ec76bd48 <col:21> Inherited Implicit
|-TypedefDecl 0x299ec76be00 prev 0x299ec76bd78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x299eae72000 'unsigned long long'
|-TypedefDecl 0x299ec76be90 prev 0x299eae72d48 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x299ec76be60 'size_t' sugar
|   |-Typedef 0x299ec76be00 'size_t'
|   `-BuiltinType 0x299eae72000 'unsigned long long'
|-TypedefDecl 0x299ec76bf18 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x299eae71f60 'long long'
|-TypedefDecl 0x299ec76bf88 prev 0x299eae72c50 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x299eae71f60 'long long'
|-TypedefDecl 0x299ec76c010 prev 0x299eae72db8 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x299eae71fa0 'unsigned short'
|-TypedefDecl 0x299ec76c098 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x299eae71fa0 'unsigned short'
|-TypedefDecl 0x299ec76c108 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x299eae71fa0 'unsigned short'
|-TypedefDecl 0x299ec76c178 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x299eae71f20 'int'
|-TypedefDecl 0x299ec76c1e8 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x299eae71f40 'long'
|-TypedefDecl 0x299ec76c258 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x299eae71f60 'long long'
|-TypedefDecl 0x299ec76c2e0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x299ec76c2b0 '__time64_t' sugar
|   |-Typedef 0x299ec76c258 '__time64_t'
|   `-BuiltinType 0x299eae71f60 'long long'
|-FunctionDecl 0x299ec76c458 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x299ec76c678 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x299ec887050 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x299ec886be8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x299ec886c60 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x299ec886cd8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x299ec886d58 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x299ec886df0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x299ec887130 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x299ec8871f0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x299ec887360 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x299ec887310 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x299ec8872b0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x299ec8871d0 'struct threadlocaleinfostruct'
|       `-Record 0x299ec891e38 'threadlocaleinfostruct'
|-TypedefDecl 0x299ec887470 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x299ec887420 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x299ec8873c0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x299ec887290 'struct threadmbcinfostruct'
|       `-Record 0x299ec8871f0 'threadmbcinfostruct'
|-RecordDecl 0x299ec8874c8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x299ec887580 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x299ec887640 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x299ec8876d0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x299ec887760 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x299ec887818 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x299ec8877c0 'struct localeinfo_struct' sugar
|   `-RecordType 0x299ec887620 'struct localeinfo_struct'
|     `-Record 0x299ec887580 'localeinfo_struct'
|-TypedefDecl 0x299ec8878f0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x299ec8878a0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x299ec8877c0 'struct localeinfo_struct' sugar
|     `-RecordType 0x299ec887620 'struct localeinfo_struct'
|       `-Record 0x299ec887580 'localeinfo_struct'
|-RecordDecl 0x299ec887968 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x299ec887a20 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x299ec887a98 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x299ec887b58 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x299ec891ca0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x299ec891d10 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x299ec891dc8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x299ec891d70 'struct localerefcount' sugar
|   `-RecordType 0x299ec887a00 'struct localerefcount'
|     `-Record 0x299ec887968 'localerefcount'
|-RecordDecl 0x299ec891e38 prev 0x299ec887130 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x299ec891eb8 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x299ec891f30 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x299ec891fa0 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x299ec892010 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x299ec892080 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x299ec892248 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x299ec8922b8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x299ec892328 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x299ec892398 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x299ec892408 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x299ec892478 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x299ec8924d0 parent 0x299eae71e28 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x299ec892660 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x299ec8926d0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x299ec892740 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x299ec8927b0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x299ec892850 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x299ec8928c0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x299ec8929d0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x299ec892b08 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x299ec892bb8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x299ec892b60 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x299ec8871d0 'struct threadlocaleinfostruct'
|     `-Record 0x299ec891e38 'threadlocaleinfostruct'
|-FunctionDecl 0x299ec89b0a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x299ec89acf0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x299ec89ada0 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x299ec89ae20 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x299ec89ae98 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ec89b468 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x299ec89b508 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x299ec89b570 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x299ec89b5d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x299ec89b658 prev 0x299ec89b468 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x299ec89b190 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x299ec89b210 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x299ec89b288 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ec89ba18 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x299ec89b740 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x299ec89b7c0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x299ec89b838 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x299ec89bf10 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x299ec89bb00 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x299ec89bb80 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x299ec89bbf8 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ec89bd00 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ec89c218 <line:51:32> col:32 implicit used memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x299ec89c2b8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x299ec89c320 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x299ec89c388 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x299ec89c408 prev 0x299ec89c218 <col:16, col:144> col:32 used memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x299ec89c000 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x299ec89c080 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x299ec89c0f8 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x299ec89c7c8 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x299ec89c868 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x299ec89c8d0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x299ec89c938 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x299ec89c9b8 prev 0x299ec89c7c8 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x299ec89c4f0 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x299ec89c570 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x299ec89c5e8 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x299ec89ce78 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x299ec89cac8 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x299ec89cb60 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x299ec89cbe0 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x299ec89cc58 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x299ec89d238 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x299ec89d2d8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x299ec89d340 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x299ec89d3a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x299ec89d428 prev 0x299ec89d238 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x299ec89cf68 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x299ec89cfe8 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x299ec89d060 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x299ec89d8a8 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x299ec89d948 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x299ec89d9b0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x299ec89da18 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x299ec89da80 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x299ec89db08 prev 0x299ec89d8a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x299ec89d5f0 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x299ec89d670 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x299ec89d6f0 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x299ec89d768 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x299ec89dbc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x299ec89dff0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x299ec89ddd8 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x299ec89de58 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x299ec89ded0 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x299ec89e0a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x299ec89e4a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x299ec89e1d0 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x299ec89e248 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ec89e2c8 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x299ec89e870 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x299ec89e680 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x299ec89e700 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x299ec89e920 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ec89fd80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x299ec89ea68 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x299ec89eae0 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x299ec89eb60 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x299ec8a0150 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x299ec8a01f0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x299ec8a0258 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x299ec8a02d0 prev 0x299ec8a0150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x299ec89ff60 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x299ec89ffe0 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x299ec8a0380 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ec8a06d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x299ec8a04c8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x299ec8a0540 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x299ec8a05c0 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x299ec8a0a00 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x299ec8a0aa0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x299ec8a0b08 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x299ec8a0b80 prev 0x299ec8a0a00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x299ec8a0880 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x299ec8a0900 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x299ec8a0c30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ec8a0fa0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x299ec8a1040 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x299ec8a10a8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x299ec8a1120 prev 0x299ec8a0fa0 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x299ec8a0db0 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x299ec8a0e30 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x299ec8a1370 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x299ec8a1410 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x299ec8a1480 prev 0x299ec8a1370 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x299ec8a1200 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x299ec8a1778 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x299ec8a1558 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x299ec8a15d0 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ec8a19c8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x299ec8a1858 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x299ec8a18d0 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x299ec8a1cf8 <line:131:1, line:133:1>
|   `-ReturnStmt 0x299ec8a1ce8 <line:132:5, col:51>
|     `-ConditionalOperator 0x299ec8a1cb8 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x299ec8a1b28 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x299ec8a1b08 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x299ec8a1ad8 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x299ec8a1a90 <col:13> 'const char *' lvalue ParmVar 0x299ec8a1858 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x299ec8a1af0 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x299ec8a1ab0 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x299ec8a1ca0 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x299ec8a1b48 <col:24> 'int' 0
|       `-CallExpr 0x299ec8a1c40 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x299ec8a1c28 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x299ec8a1b70 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x299ec8a1778 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x299ec8a1c70 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x299ec8a1b90 <col:36> 'const char *' lvalue ParmVar 0x299ec8a1858 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x299ec8a1c88 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x299ec8a1bb0 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x299ec8a18d0 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x299ec899f88 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x299ec899ce0 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x299ec899d58 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x299ec899dd8 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x299ec899e50 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x299ec89a290 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x299ec89a330 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x299ec89a398 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x299ec89a400 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x299ec89a480 prev 0x299ec89a290 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x299ec89a078 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x299ec89a0f8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x299ec89a170 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x299ec89a6b8 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x299ec89a568 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x299ec89a980 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x299ec89aa20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x299ec89aa88 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x299ec89ab00 prev 0x299ec89a980 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x299ec89a790 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x299ec89a810 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x299ec8a1de0 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x299ec89abe0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x299ec89ac60 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x299ec8a2040 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x299ec8a1ec0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x299ec8a1f40 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x299ec8a23f8 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x299ec8a2120 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x299ec8a21a0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x299ec8a2218 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ec8a2660 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x299ec8a24e0 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x299ec8a2560 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x299ec8a2958 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x299ec8a2740 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x299ec8a27c0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x299ec8a2838 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ec8a2bc0 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x299ec8a2a40 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x299ec8a2ac0 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x299ec8a2f08 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x299ec8a2ca0 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x299ec8a2d70 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x299ec8a2de8 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ec8a32c8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x299ec8a2ff0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x299ec8a3070 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x299ec8a30e8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ec8a3730 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x299ec8a33b0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x299ec8a3430 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x299ec8a34a8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ec8a3520 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ec8a3a38 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x299ec8a3820 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x299ec8a38a0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x299ec8a3918 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ec8a4e08 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x299ec8a3b20 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x299ec8a3ba0 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x299ec8a3c18 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ec8a3c90 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ec8a5118 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x299ec8a51b8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x299ec8a5220 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x299ec8a5298 prev 0x299ec8a5118 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x299ec8a4ef8 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x299ec8a4f78 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x299ec8a5550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x299ec8a5470 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x299ec8a55f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ec8a59d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x299ec8a5740 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x299ec8a57b8 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ec8a5838 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x299ec8a5ce8 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x299ec8a3d80 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x299ec8a3df0 prev 0x299ec8a5ce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x299ec8a5bb0 <col:90> col:93 'int'
| `-DeprecatedAttr 0x299ec8a3e98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ec8a41f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x299ec8a3fe0 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x299ec8a4058 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ec8a40d8 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x299ec8a44f8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x299ec8a42d8 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x299ec8a4350 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x299ec8a47e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x299ec8a4698 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x299ec8a4890 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ec8a4ca0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x299ec8a49d8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x299ec8a4a50 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ec8a4ac8 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ec91c250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x299ec91c028 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x299ec91c0a0 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x299ec91c300 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ec91c7b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x299ec91c448 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x299ec91c4c0 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x299ec91c540 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x299ec91c5b8 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x299ec91cc38 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x299ec91ccd8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x299ec91cd40 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x299ec91cda8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x299ec91ce28 prev 0x299ec91cc38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x299ec91c968 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x299ec91c9e8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x299ec91ca60 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x299ec91cee0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ec91b258 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x299ec91b2f8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x299ec91b360 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x299ec91b3c8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x299ec91b448 prev 0x299ec91b258 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x299ec91b040 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x299ec91b0c0 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x299ec91b138 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ec91b748 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x299ec91b530 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x299ec91b5b0 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x299ec91b628 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ec91bae0 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x299ec91b830 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x299ec91b8b0 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x299ec91b928 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ec91b9a0 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ec91be78 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x299ec91bbd0 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x299ec91bc48 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x299ec91bcc8 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x299ec91bd40 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x299ec91a238 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x299ec91a2d8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x299ec91a340 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x299ec91a3a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x299ec91a428 prev 0x299ec91a238 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x299ec91a020 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x299ec91a0a0 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x299ec91a118 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x299ec91a4e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ec91a998 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x299ec91a628 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x299ec91a6a0 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x299ec91a720 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x299ec91a798 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ec91ae18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x299ec91ab48 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x299ec91abc8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x299ec91ac40 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x299ec91aed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ec919210 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x299ec9192b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x299ec919318 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x299ec919390 prev 0x299ec919210 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x299ec919020 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x299ec9190a0 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x299ec9195f0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x299ec919690 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x299ec9196f8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x299ec919770 prev 0x299ec9195f0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x299ec919470 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x299ec9194f0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x299ec919930 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x299ec919850 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x299ec919b80 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x299ec919c20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x299ec919c88 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x299ec919d00 prev 0x299ec919b80 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x299ec919a08 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x299ec919a88 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x299ec91cfa0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x299ec91d040 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x299ec91d0a8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x299ec91d120 prev 0x299ec91cfa0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x299ec919de0 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x299ec919e60 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x299ec91d440 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x299ec91d4e0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x299ec91d548 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x299ec91d5c0 prev 0x299ec91d440 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x299ec91d2c0 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x299ec91d340 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x299ec91d670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ec91da58 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x299ec91d7b8 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x299ec91d838 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x299ec91d8b8 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x299ec91dcb0 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x299ec91db40 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x299ec91dbb8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x299ec916f00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x299ec91de50 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x299ec916fa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ec9172f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x299ec9170f0 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x299ec917168 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ec9171e0 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ec917618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x299ec9174a0 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x299ec917518 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x299ec9176c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ec917ae0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x299ec917b80 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x299ec917be8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x299ec917c50 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x299ec917cd0 prev 0x299ec917ae0 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x299ec917810 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x299ec917890 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x299ec917908 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ec91f1f8 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x299ec917db8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x299ec917e38 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x299ec91ef80 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ec91eff8 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ec91f4a0 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x299ec91f540 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x299ec91f5b0 prev 0x299ec91f4a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x299ec91f3c0 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x299ec91f658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x299ec91f9a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x299ec91f820 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x299ec91f8a0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x299ec91fa50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x299ec91fd98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x299ec91fc18 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x299ec91fc98 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x299ec91fe48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x299ec9180a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x299ec917fc8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x299ec918150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x299ec918568 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x299ec918350 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x299ec9183d0 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x299ec918448 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x299ec918620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x299ec918a00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x299ec9187e8 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x299ec918868 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x299ec9188e0 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x299ec918ab8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x299ec918d60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x299ec918c80 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x299ec918e08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x299ec9201e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x299ec920060 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x299ec9200e0 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x299ec920290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x299ec920538 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x299ec920458 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x299ec9205e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x299ec920870 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x299ec920700 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x299ec920c00 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x299ec920940 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x299ec9209b8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x299ec920a30 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x299ec925018 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x299ec920da0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x299ec920e18 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x299ec9250c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ec925428 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x299ec9254c8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x299ec925530 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x299ec9255a8 prev 0x299ec925428 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x299ec925208 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x299ec925280 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x299ec9258a0 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x299ec925940 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x299ec9259a8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x299ec925a20 prev 0x299ec9258a0 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x299ec925680 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x299ec9256f8 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x299ec925d00 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x299ec925af8 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x299ec925b70 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x299ec925be8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x299ec924008 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x299ec925ea0 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x299ec925f18 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x299ec9240b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ec924418 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x299ec9241f8 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x299ec924270 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x299ec924660 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x299ec924700 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x299ec924770 prev 0x299ec924660 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x299ec9244f0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x299ec924a58 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x299ec924840 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x299ec9248b8 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ec924ca0 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x299ec924b30 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x299ec924ba8 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x299ec927070 <line:306:1, line:308:1>
|   `-ReturnStmt 0x299ec927060 <line:307:5, col:56>
|     `-ConditionalOperator 0x299ec927030 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x299ec924e60 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x299ec924e40 <col:13, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'int' '=='
|       |   |-ImplicitCastExpr 0x299ec924e10 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x299ec924d68 <col:13> 'const wchar_t *' lvalue ParmVar 0x299ec924b30 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x299ec924e28 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x299ec924df0 <col:16, col:25> 'void *'
|       |       `-CStyleCastExpr 0x299ec924dc8 <col:17, col:24> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x299ec924d88 <col:24> 'int' 0
|       |-ImplicitCastExpr 0x299ec927018 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x299ec924e80 <col:29> 'int' 0
|       `-CallExpr 0x299ec924f80 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x299ec924f68 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x299ec924ea8 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x299ec924a58 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x299ec924fb0 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x299ec924ec8 <col:41> 'const wchar_t *' lvalue ParmVar 0x299ec924b30 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x299ec927000 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x299ec924ee8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x299ec924ba8 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x299ec927408 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x299ec927098 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x299ec927110 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x299ec927188 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x299ec927200 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x299ec927870 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x299ec9275b0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x299ec927628 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x299ec9276a0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x299ec927928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ec927d38 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x299ec927dd8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x299ec927e40 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x299ec927ea8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x299ec927f28 prev 0x299ec927d38 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x299ec927a68 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x299ec927ae0 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x299ec927b58 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ec9282c0 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x299ec928020 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x299ec928098 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x299ec928110 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x299ec928188 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x299ec928670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x299ec928468 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x299ec9284e0 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x299ec928558 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x299ec928728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ec928a88 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x299ec928868 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x299ec9288e0 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x299ec928cd0 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x299ec928b60 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x299ec928bd8 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x299ec928f18 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x299ec928da8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x299ec928e20 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x299ec921110 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x299ec920fa0 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x299ec921018 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x299ec921418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x299ec9212a8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x299ec921320 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x299ec9214c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ec921930 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x299ec921608 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x299ec921680 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x299ec921760 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x299ec921c50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x299ec921ad8 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x299ec921cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ec929190 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x299ec921e38 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x299ec921eb0 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ec921f30 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x299ec929440 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x299ec929368 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x299ec9294e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ec9298b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x299ec929628 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x299ec9296a0 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ec929718 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x299ec929b08 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x299ec929990 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x299ec929a08 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x299ec929ea8 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x299ec929be0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x299ec929c58 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x299ec929cd0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ec922148 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x299ec929f88 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x299ec921fb0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x299ec922028 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ec9225a0 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x299ec922228 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x299ec9222a0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x299ec922318 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ec922390 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ec9229f8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x299ec922688 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x299ec922700 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x299ec922778 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x299ec9227f0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ec922e60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x299ec922ba0 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x299ec922c18 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x299ec922c90 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x299ec922f18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ec92b2b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x299ec92b138 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x299ec92b640 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x299ec92b380 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x299ec92b3f8 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ec92b470 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x299ec92b9f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x299ec92b7e0 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x299ec92b858 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x299ec92baa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ec92be08 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x299ec92bbe8 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x299ec92bc60 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x299ec92f0d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x299ec92bfa0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x299ec92f180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ec92f580 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x299ec92f2c0 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x299ec92f338 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ec92f3b0 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ec92f938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x299ec92f720 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x299ec92f798 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x299ec92f9e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ec92fc98 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x299ec92fb28 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x299ec92fba0 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x299ec92ff08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x299ec92fe30 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x299ec92ffb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ec92d360 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x299ec92d158 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x299ec92d1d0 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ec92d248 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ec92d670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x299ec92d500 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x299ec92d578 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x299ec92d720 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ec92db20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x299ec92d860 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x299ec92d8d8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x299ec92d950 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ec92df68 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x299ec92dc00 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x299ec92dc78 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x299ec92dcf0 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ec92dd68 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ec931218 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x299ec9310a0 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x299ec931118 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x299ec931500 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x299ec9312f0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x299ec931368 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x299ec9313e0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ec931758 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x299ec9315e0 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x299ec931658 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x299ec931a40 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x299ec931830 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x299ec9318a8 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x299ec931920 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ec931d30 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x299ec931b20 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x299ec931b98 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x299ec931c10 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ec9300e0 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x299ec931e10 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x299ec931e88 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x299ec931f00 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ec931f78 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ec9303d8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x299ec9301c8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x299ec930240 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x299ec9302b8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ec930760 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x299ec9304b8 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x299ec930530 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x299ec9305a8 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ec930620 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ec9309c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x299ec9308e8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x299ec930a68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x299ec930da0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x299ec930c28 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x299ec930ca0 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x299ec930e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x299ec92a1c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x299ec931010 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x299ec92a030 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x299ec92a0a8 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x299ec92a280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x299ec92a648 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x299ec92a440 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x299ec92a4b8 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x299ec92a530 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x299ec92a700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x299ec92a998 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x299ec92a8c0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x299ec92aa40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x299ec92ad70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x299ec92ac00 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x299ec92ac78 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x299ec92ae20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x299ec933198 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x299ec9330c0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x299ec933240 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x299ec9334d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x299ec933400 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x299ec933580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x299ec9338b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x299ec933740 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x299ec9337b8 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x299ec933968 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x299ec933d90 <.//openssl//file_jk/before\crypto\asn1/asn1_locl.h:12:1, col:60> col:5 invalid asn1_utctime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x299ec933bf0 <col:24, col:35> col:35 tm 'struct tm *'
| `-ParmVarDecl 0x299ec933c70 <col:39, col:59> col:59 invalid d 'const int *'
|-FunctionDecl 0x299ec92c100 <line:13:1, col:76> col:5 invalid asn1_generalizedtime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x299ec933fc0 <col:32, col:43> col:43 tm 'struct tm *'
| `-ParmVarDecl 0x299ec934040 <col:47, col:75> col:75 invalid d 'const int *'
|-RecordDecl 0x299ec92c1b0 <line:17:1, line:38:1> line:17:8 invalid struct asn1_sctx_st definition
| |-FieldDecl 0x299ec92c288 <line:19:5, col:22> col:22 invalid it 'const int *'
| |-FieldDecl 0x299ec92c2f8 <line:21:5, col:26> col:26 invalid tt 'const int *'
| |-FieldDecl 0x299ec92c368 <line:23:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x299ec92c3d8 <line:25:5, col:9> col:9 skidx 'int'
| |-FieldDecl 0x299ec92c448 <line:27:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x299ec92c4b8 <line:29:5, col:17> col:17 sname 'const char *'
| |-FieldDecl 0x299ec92c528 <col:5, col:25> col:25 fname 'const char *'
| |-FieldDecl 0x299ec92c598 <line:31:5, col:9> col:9 prim_type 'int'
| |-FieldDecl 0x299ec92c638 <line:33:5, col:18> col:18 invalid field 'int **'
| |-FieldDecl 0x299ec92c808 <line:35:5, col:35> col:11 scan_cb 'int (*)(int *)'
| `-FieldDecl 0x299ec92c878 <line:37:5, col:11> col:11 app_data 'void *'
|-RecordDecl 0x299ec92c8d0 <line:40:9, col:16> col:16 struct mime_param_st
|-TypedefDecl 0x299ec92c9e8 <col:1, col:30> col:30 referenced MIME_PARAM 'struct mime_param_st':'struct mime_param_st'
| `-ElaboratedType 0x299ec92c990 'struct mime_param_st' sugar
|   `-RecordType 0x299ec92c970 'struct mime_param_st'
|     `-Record 0x299ec92c8d0 'mime_param_st'
|-FunctionDecl 0x299ec92cb90 <line:41:1, col:27> col:1 DEFINE_STACK_OF 'int (MIME_PARAM)'
| `-ParmVarDecl 0x299ec92ca90 <col:17> col:27 'MIME_PARAM':'struct mime_param_st'
|-RecordDecl 0x299ec92cc50 <line:42:9, col:16> col:16 struct mime_header_st
|-TypedefDecl 0x299ec92cd68 <col:1, col:31> col:31 referenced MIME_HEADER 'struct mime_header_st':'struct mime_header_st'
| `-ElaboratedType 0x299ec92cd10 'struct mime_header_st' sugar
|   `-RecordType 0x299ec92ccf0 'struct mime_header_st'
|     `-Record 0x299ec92cc50 'mime_header_st'
|-FunctionDecl 0x299ec92cf10 <line:43:1, col:28> col:1 invalid DEFINE_STACK_OF 'int (MIME_HEADER)'
| `-ParmVarDecl 0x299ec92ce10 <col:17> col:28 'MIME_HEADER':'struct mime_header_st'
|-VarDecl 0x299ec935108 <line:46:1, col:32> col:20 _asn1_mon 'const char *[12]' extern
|-FunctionDecl 0x299ec9352f8 <line:48:1, col:54> col:6 invalid asn1_string_embed_free 'void (int *, int)'
| |-ParmVarDecl 0x299ec9351a0 <col:29, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x299ec935220 <col:45, col:49> col:49 embed 'int'
|-FunctionDecl 0x299ec935520 <line:50:1, col:68> col:5 invalid asn1_get_choice_selector 'int (int **, const int *)'
| |-ParmVarDecl 0x299ec9353c8 <col:30, col:43> col:43 invalid pval 'int **'
| `-ParmVarDecl 0x299ec935448 <col:49, col:66> col:66 invalid it 'const int *'
|-FunctionDecl 0x299ec9357e0 <line:51:1, line:52:49> line:51:5 invalid asn1_set_choice_selector 'int (int **, int, const int *)'
| |-ParmVarDecl 0x299ec9355f0 <col:30, col:43> col:43 invalid pval 'int **'
| |-ParmVarDecl 0x299ec935670 <col:49, col:53> col:53 value 'int'
| `-ParmVarDecl 0x299ec9356f0 <line:52:30, col:47> col:47 invalid it 'const int *'
|-FunctionDecl 0x299ec935a18 <line:54:1, col:75> col:14 invalid asn1_get_field_ptr 'int **(int **, const int *)'
| |-ParmVarDecl 0x299ec9358b8 <col:33, col:46> col:46 invalid pval 'int **'
| `-ParmVarDecl 0x299ec935938 <col:52, col:73> col:73 invalid tt 'const int *'
|-FunctionDecl 0x299ec935cd0 <line:56:1, line:57:45> line:56:22 invalid asn1_do_adb 'const int *(int **, const int *, int)'
| |-ParmVarDecl 0x299ec935ae8 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x299ec935b68 <col:53, col:74> col:74 invalid tt 'const int *'
| `-ParmVarDecl 0x299ec935be8 <line:57:34, col:38> col:38 nullerr 'int'
|-FunctionDecl 0x299ec935f50 <line:59:1, col:64> col:5 invalid asn1_do_lock 'int (int **, int, const int *)'
| |-ParmVarDecl 0x299ec935da8 <col:18, col:31> col:31 invalid pval 'int **'
| |-ParmVarDecl 0x299ec935e28 <col:37, col:41> col:41 op 'int'
| `-ParmVarDecl 0x299ec935ea8 <col:45, col:62> col:62 invalid it 'const int *'
|-FunctionDecl 0x299ec8d6088 <line:61:1, col:58> col:6 invalid asn1_enc_init 'void (int **, const int *)'
| |-ParmVarDecl 0x299ec936028 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x299ec8d5fb0 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x299ec8d6270 <line:62:1, col:58> col:6 invalid asn1_enc_free 'void (int **, const int *)'
| |-ParmVarDecl 0x299ec8d6158 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x299ec8d61d8 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x299ec8d6620 <line:63:1, line:64:41> line:63:5 invalid asn1_enc_restore 'int (int *, unsigned char **, int **, const int *)'
| |-ParmVarDecl 0x299ec8d6338 <col:22, col:27> col:27 len 'int *'
| |-ParmVarDecl 0x299ec8d6418 <col:32, col:48> col:48 out 'unsigned char **'
| |-ParmVarDecl 0x299ec8d64a0 <col:53, col:66> col:66 invalid pval 'int **'
| `-ParmVarDecl 0x299ec8d6520 <line:64:22, col:39> col:39 invalid it 'const int *'
|-FunctionDecl 0x299ec8d6980 <line:65:1, line:66:38> line:65:5 invalid asn1_enc_save 'int (int **, const unsigned char *, int, const int *)'
| |-ParmVarDecl 0x299ec8d6700 <col:19, col:32> col:32 invalid pval 'int **'
| |-ParmVarDecl 0x299ec8d6780 <col:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x299ec8d6800 <col:63, col:67> col:67 inlen 'int'
| `-ParmVarDecl 0x299ec8d6880 <line:66:19, col:36> col:36 invalid it 'const int *'
|-FunctionDecl 0x299ec8d6c48 <line:68:1, col:76> col:6 invalid asn1_item_embed_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x299ec8d6a60 <col:27, col:40> col:40 invalid pval 'int **'
| |-ParmVarDecl 0x299ec8d6ae0 <col:46, col:63> col:63 invalid it 'const int *'
| `-ParmVarDecl 0x299ec8d6b60 <col:67, col:71> col:71 embed 'int'
|-FunctionDecl 0x299ec8d6ec0 <line:69:1, col:75> col:6 invalid asn1_primitive_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x299ec8d6d20 <col:26, col:39> col:39 invalid pval 'int **'
| |-ParmVarDecl 0x299ec8d6da0 <col:45, col:62> col:62 invalid it 'const int *'
| `-ParmVarDecl 0x299ec8d6e20 <col:66, col:70> col:70 embed 'int'
|-FunctionDecl 0x299ec8d80e8 <line:70:1, col:67> col:6 invalid asn1_template_free 'void (int **, const int *)'
| |-ParmVarDecl 0x299ec8d7fd0 <col:25, col:38> col:38 invalid pval 'int **'
| `-ParmVarDecl 0x299ec8d8050 <col:44, col:65> col:65 invalid tt 'const int *'
|-FunctionDecl 0x299ec8d83d0 <line:72:1, line:73:41> line:72:14 invalid c2i_ASN1_OBJECT 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x299ec8d81b8 <col:30, col:44> col:44 invalid a 'int **'
| |-ParmVarDecl 0x299ec8d8268 <col:47, col:69> col:69 pp 'const unsigned char **'
| `-ParmVarDecl 0x299ec8d82e8 <line:73:30, col:35> col:35 length 'long'
|-FunctionDecl 0x299ec8d8600 <line:74:1, col:63> col:5 invalid i2c_ASN1_BIT_STRING 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x299ec8d84a0 <col:25, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x299ec8d8528 <col:45, col:61> col:61 pp 'unsigned char **'
|-FunctionDecl 0x299ec8d8880 <line:75:1, line:76:75> line:75:18 invalid c2i_ASN1_BIT_STRING 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x299ec8d86d0 <col:38, col:56> col:56 invalid a 'int **'
| |-ParmVarDecl 0x299ec8d8758 <line:76:38, col:60> col:60 pp 'const unsigned char **'
| `-ParmVarDecl 0x299ec8d87d8 <col:64, col:69> col:69 length 'long'
|-FunctionDecl 0x299ec8d8a78 <line:77:1, col:57> col:5 invalid i2c_ASN1_INTEGER 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x299ec8d8950 <col:22, col:36> col:36 invalid a 'int *'
| `-ParmVarDecl 0x299ec8d89d8 <col:39, col:55> col:55 pp 'unsigned char **'
|-FunctionDecl 0x299ec8d8cf8 <line:78:1, line:79:43> line:78:15 invalid c2i_ASN1_INTEGER 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x299ec8d8b48 <col:32, col:47> col:47 invalid a 'int **'
| |-ParmVarDecl 0x299ec8d8bd0 <col:50, col:72> col:72 pp 'const unsigned char **'
| `-ParmVarDecl 0x299ec8d8c50 <line:79:32, col:37> col:37 length 'long'
|-FunctionDecl 0x299ec8d0ff0 <line:82:1, col:79> col:5 invalid c2i_uint64_int 'int (int *, int *, const unsigned char **, long)'
| |-ParmVarDecl 0x299ec8d8dc8 <col:20, col:30> col:30 invalid ret 'int *'
| |-ParmVarDecl 0x299ec8d8e48 <col:35, col:40> col:40 neg 'int *'
| |-ParmVarDecl 0x299ec8d8ed0 <col:45, col:67> col:67 pp 'const unsigned char **'
| `-ParmVarDecl 0x299ec8d8f50 <col:71, col:76> col:76 len 'long'
|-FunctionDecl 0x299ec8d12b0 <line:83:1, col:57> col:5 invalid i2c_uint64_int 'int (unsigned char *, int, int)'
| |-ParmVarDecl 0x299ec8d10c8 <col:20, col:35> col:35 p 'unsigned char *'
| |-ParmVarDecl 0x299ec8d1148 <col:38, col:47> col:47 invalid r 'int'
| `-ParmVarDecl 0x299ec8d11c8 <col:50, col:54> col:54 neg 'int'
|-FunctionDecl 0x299ec8d16a0 <.//openssl//file_jk/before\crypto\asn1\tasn_enc.c:19:1, line:20:74> line:19:12 invalid asn1_i2d_ex_primitive 'int (int **, unsigned char **, const int *, int, int)' static
| |-ParmVarDecl 0x299ec8d1388 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x299ec8d1410 <col:53, col:69> col:69 out 'unsigned char **'
| |-ParmVarDecl 0x299ec8d1490 <line:20:34, col:51> col:51 invalid it 'const int *'
| |-ParmVarDecl 0x299ec8d1510 <col:55, col:59> col:59 tag 'int'
| `-ParmVarDecl 0x299ec8d1590 <col:64, col:68> col:68 aclass 'int'
|-FunctionDecl 0x299ec8d1920 <line:21:1, line:23:52> line:21:12 invalid asn1_set_seq_out 'int (int (*)())' static
| `-ParmVarDecl 0x299ec8d1820 <col:29, <invalid sloc>> col:29 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x299ec8d1ca8 <line:24:1, line:25:77> line:24:12 invalid asn1_template_ex_i2d 'int (int **, unsigned char **, const int *, int, int)' static
| |-ParmVarDecl 0x299ec8d19e8 <col:33, col:46> col:46 invalid pval 'int **'
| |-ParmVarDecl 0x299ec8d1a70 <col:52, col:68> col:68 out 'unsigned char **'
| |-ParmVarDecl 0x299ec8d1af0 <line:25:33, col:54> col:54 invalid tt 'const int *'
| |-ParmVarDecl 0x299ec8d1b70 <col:58, col:62> col:62 tag 'int'
| `-ParmVarDecl 0x299ec8d1bf0 <col:67, col:71> col:71 aclass 'int'
|-FunctionDecl 0x299ec8d90e0 <line:26:1, line:27:62> line:26:12 invalid asn1_item_flags_i2d 'int (int *, unsigned char **, const int *, int)' static
| |-ParmVarDecl 0x299ec8d1d88 <col:32, col:44> col:44 invalid val 'int *'
| |-ParmVarDecl 0x299ec8d1e10 <col:49, col:65> col:65 out 'unsigned char **'
| |-ParmVarDecl 0x299ec8d1e90 <line:27:32, col:49> col:49 invalid it 'const int *'
| `-ParmVarDecl 0x299ec8d8fe0 <col:53, col:57> col:57 flags 'int'
|-FunctionDecl 0x299ec8d9440 <line:28:1, line:29:43> line:28:12 invalid asn1_ex_i2c 'int (int **, unsigned char *, int *, const int *)' static
| |-ParmVarDecl 0x299ec8d91c0 <col:24, col:37> col:37 invalid pval 'int **'
| |-ParmVarDecl 0x299ec8d9240 <col:43, col:58> col:58 cout 'unsigned char *'
| |-ParmVarDecl 0x299ec8d92c0 <col:64, col:69> col:69 putype 'int *'
| `-ParmVarDecl 0x299ec8d9340 <line:29:24, col:41> col:41 invalid it 'const int *'
|-FunctionDecl 0x299ec8d9710 <line:36:1, line:40:1> line:36:5 invalid ASN1_item_ndef_i2d 'int (int *, unsigned char **, const int *)'
| |-ParmVarDecl 0x299ec8d9518 <col:24, col:36> col:36 invalid val 'int *'
| |-ParmVarDecl 0x299ec8d95a0 <col:41, col:57> col:57 used out 'unsigned char **'
| |-ParmVarDecl 0x299ec8d9620 <line:37:24, col:41> col:41 invalid it 'const int *'
| `-CompoundStmt 0x299ec8d9818 <line:38:1, line:40:1>
|-FunctionDecl 0x299ec8d99f0 <line:42:1, line:45:1> line:42:5 invalid ASN1_item_i2d 'int (int *, unsigned char **, const int *)'
| |-ParmVarDecl 0x299ec8d9840 <col:19, col:31> col:31 invalid val 'int *'
| |-ParmVarDecl 0x299ec8d98c8 <col:36, col:52> col:52 used out 'unsigned char **'
| |-ParmVarDecl 0x299ec8d9948 <col:57, col:74> col:74 invalid it 'const int *'
| `-CompoundStmt 0x299ec8d9b20 <line:43:1, line:45:1>
|-FunctionDecl 0x299ec8d9d80 <line:54:1, line:73:1> line:54:12 invalid asn1_item_flags_i2d 'int (int *, unsigned char **, const int *, int)' static
| |-ParmVarDecl 0x299ec8d9b48 <col:32, col:44> col:44 invalid val 'int *'
| |-ParmVarDecl 0x299ec8d9bd0 <col:49, col:65> col:65 used out 'unsigned char **'
| |-ParmVarDecl 0x299ec8d9c50 <line:55:32, col:49> col:49 invalid it 'const int *'
| |-ParmVarDecl 0x299ec8d9cd0 <col:53, col:57> col:57 used flags 'int'
| `-CompoundStmt 0x299ec8d3af0 <line:56:1, line:73:1>
|   `-IfStmt 0x299ec8d3a38 <line:57:5, line:70:5>
|     |-BinaryOperator 0x299ec8d9f50 <line:57:9, col:18> 'int' '&&'
|     | |-ImplicitCastExpr 0x299ec8d9f38 <col:9> 'unsigned char **' <LValueToRValue>
|     | | `-DeclRefExpr 0x299ec8d9e58 <col:9> 'unsigned char **' lvalue ParmVar 0x299ec8d9bd0 'out' 'unsigned char **'
|     | `-UnaryOperator 0x299ec8d9f20 <col:16, col:18> 'int' prefix '!' cannot overflow
|     |   `-ImplicitCastExpr 0x299ec8d9f08 <col:17, col:18> 'unsigned char *' <LValueToRValue>
|     |     `-UnaryOperator 0x299ec8d9ef0 <col:17, col:18> 'unsigned char *' lvalue prefix '*' cannot overflow
|     |       `-ImplicitCastExpr 0x299ec8d9ed8 <col:18> 'unsigned char **' <LValueToRValue>
|     |         `-DeclRefExpr 0x299ec8d9eb8 <col:18> 'unsigned char **' lvalue ParmVar 0x299ec8d9bd0 'out' 'unsigned char **'
|     `-CompoundStmt 0x299ec8d39e8 <col:23, line:70:5>
|       |-DeclStmt 0x299ec8d3080 <line:58:9, col:31>
|       | |-VarDecl 0x299ec8d2f80 <col:9, col:24> col:24 used p 'unsigned char *'
|       | `-VarDecl 0x299ec8d3000 <col:9, col:28> col:28 used buf 'unsigned char *'
|       |-DeclStmt 0x299ec8d3118 <line:59:9, col:16>
|       | `-VarDecl 0x299ec8d30b0 <col:9, col:13> col:13 used len 'int'
|       |-IfStmt 0x299ec8d3440 <line:61:9, line:62:20>
|       | |-BinaryOperator 0x299ec8d33d8 <line:61:13, col:20> 'int' '<='
|       | | |-ImplicitCastExpr 0x299ec8d33c0 <col:13> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x299ec8d3378 <col:13> 'int' lvalue Var 0x299ec8d30b0 'len' 'int'
|       | | `-IntegerLiteral 0x299ec8d3398 <col:20> 'int' 0
|       | `-ReturnStmt 0x299ec8d3430 <line:62:13, col:20>
|       |   `-ImplicitCastExpr 0x299ec8d3418 <col:20> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x299ec8d33f8 <col:20> 'int' lvalue Var 0x299ec8d30b0 'len' 'int'
|       |-BinaryOperator 0x299ec8d3630 <line:63:9, col:33> 'unsigned char *' '='
|       | |-DeclRefExpr 0x299ec8d3458 <col:9> 'unsigned char *' lvalue Var 0x299ec8d3000 'buf' 'unsigned char *'
|       | `-ImplicitCastExpr 0x299ec8d3618 <col:15, col:33> 'unsigned char *' <IntegralToPointer>
|       |   `-CallExpr 0x299ec8d35d8 <col:15, col:33> 'int'
|       |     |-ImplicitCastExpr 0x299ec8d35c0 <col:15> 'int (*)()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x299ec8d3580 <col:15> 'int ()' Function 0x299ec8d34b8 'OPENSSL_malloc' 'int ()'
|       |     `-ImplicitCastExpr 0x299ec8d3600 <col:30> 'int' <LValueToRValue>
|       |       `-DeclRefExpr 0x299ec8d35a0 <col:30> 'int' lvalue Var 0x299ec8d30b0 'len' 'int'
|       |-IfStmt 0x299ec8d3798 <line:64:9, line:65:21>
|       | |-BinaryOperator 0x299ec8d3728 <line:64:13, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'int' '=='
|       | | |-ImplicitCastExpr 0x299ec8d36f8 <.//openssl//file_jk/before\crypto\asn1\tasn_enc.c:64:13> 'unsigned char *' <LValueToRValue>
|       | | | `-DeclRefExpr 0x299ec8d3650 <col:13> 'unsigned char *' lvalue Var 0x299ec8d3000 'buf' 'unsigned char *'
|       | | `-ImplicitCastExpr 0x299ec8d3710 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'unsigned char *' <BitCast>
|       | |   `-ParenExpr 0x299ec8d36d8 <col:16, col:25> 'void *'
|       | |     `-CStyleCastExpr 0x299ec8d36b0 <col:17, col:24> 'void *' <NullToPointer>
|       | |       `-IntegerLiteral 0x299ec8d3670 <col:24> 'int' 0
|       | `-ReturnStmt 0x299ec8d3788 <.//openssl//file_jk/before\crypto\asn1\tasn_enc.c:65:13, col:21>
|       |   `-UnaryOperator 0x299ec8d3770 <col:20, col:21> 'int' prefix '-'
|       |     `-IntegerLiteral 0x299ec8d3748 <col:21> 'int' 1
|       |-BinaryOperator 0x299ec8d3820 <line:66:9, col:13> 'unsigned char *' '='
|       | |-DeclRefExpr 0x299ec8d37b0 <col:9> 'unsigned char *' lvalue Var 0x299ec8d2f80 'p' 'unsigned char *'
|       | `-ImplicitCastExpr 0x299ec8d3808 <col:13> 'unsigned char *' <LValueToRValue>
|       |   `-DeclRefExpr 0x299ec8d37e8 <col:13> 'unsigned char *' lvalue Var 0x299ec8d3000 'buf' 'unsigned char *'
|       |-BinaryOperator 0x299ec8d3980 <line:68:9, col:16> 'unsigned char *' '='
|       | |-UnaryOperator 0x299ec8d3930 <col:9, col:10> 'unsigned char *' lvalue prefix '*' cannot overflow
|       | | `-ImplicitCastExpr 0x299ec8d3918 <col:10> 'unsigned char **' <LValueToRValue>
|       | |   `-DeclRefExpr 0x299ec8d38f8 <col:10> 'unsigned char **' lvalue ParmVar 0x299ec8d9bd0 'out' 'unsigned char **'
|       | `-ImplicitCastExpr 0x299ec8d3968 <col:16> 'unsigned char *' <LValueToRValue>
|       |   `-DeclRefExpr 0x299ec8d3948 <col:16> 'unsigned char *' lvalue Var 0x299ec8d3000 'buf' 'unsigned char *'
|       `-ReturnStmt 0x299ec8d39d8 <line:69:9, col:16>
|         `-ImplicitCastExpr 0x299ec8d39c0 <col:16> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x299ec8d39a0 <col:16> 'int' lvalue Var 0x299ec8d30b0 'len' 'int'
|-FunctionDecl 0x299ec8d3de8 <line:80:1, line:193:1> line:80:5 invalid ASN1_item_ex_i2d 'int (int **, unsigned char **, const int *, int, int)'
| |-ParmVarDecl 0x299ec8d3b28 <col:22, col:35> col:35 invalid pval 'int **'
| |-ParmVarDecl 0x299ec8d3bb0 <col:41, col:57> col:57 used out 'unsigned char **'
| |-ParmVarDecl 0x299ec8d3c30 <line:81:22, col:39> col:39 invalid it 'const int *'
| |-ParmVarDecl 0x299ec8d3cb0 <col:43, col:47> col:47 used tag 'int'
| |-ParmVarDecl 0x299ec8d3d30 <col:52, col:56> col:56 used aclass 'int'
| `-CompoundStmt 0x299ec8d5530 <line:82:1, line:193:1>
|   |-DeclStmt 0x299ec8d1fd0 <line:83:5, col:35>
|   | `-VarDecl 0x299ec8d3ee0 <col:5, col:26> col:26 invalid tt 'const int *'
|   |-DeclStmt 0x299ec8d2238 <line:84:5, col:40>
|   | |-VarDecl 0x299ec8d2000 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x299ec8d2080 <col:5, col:12> col:12 used seqcontlen 'int'
|   | |-VarDecl 0x299ec8d2100 <col:5, col:24> col:24 used seqlen 'int'
|   | `-VarDecl 0x299ec8d2180 <col:5, col:39> col:32 used ndef 'int' cinit
|   |   `-IntegerLiteral 0x299ec8d21e8 <col:39> 'int' 1
|   |-DeclStmt 0x299ec8d22d0 <line:85:5, col:32>
|   | `-VarDecl 0x299ec8d2268 <col:5, col:30> col:30 invalid ef 'const int *'
|   |-DeclStmt 0x299ec8d2368 <line:86:5, col:36>
|   | `-VarDecl 0x299ec8d2300 <col:5, col:21> col:21 invalid aux 'const int *'
|   |-IfStmt 0x299ec8d23f8 <line:89:5, line:90:16>
|   | |-OpaqueValueExpr 0x299ec8d23e0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x299ec8d23d0 <col:9, col:16>
|   |   `-IntegerLiteral 0x299ec8d23a8 <col:16> 'int' 0
|   `-ReturnStmt 0x299ec8d5520 <line:192:5, col:12>
|     `-IntegerLiteral 0x299ec8d54f8 <col:12> 'int' 0
|-FunctionDecl 0x299ec8d5850 <line:195:1, line:345:1> line:195:12 invalid asn1_template_ex_i2d 'int (int **, unsigned char **, const int *, int, int)' static
| |-ParmVarDecl 0x299ec8d5590 <col:33, col:46> col:46 invalid pval 'int **'
| |-ParmVarDecl 0x299ec8d5618 <col:52, col:68> col:68 used out 'unsigned char **'
| |-ParmVarDecl 0x299ec8d5698 <line:196:33, col:54> col:54 invalid tt 'const int *'
| |-ParmVarDecl 0x299ec8d5718 <col:58, col:62> col:62 used tag 'int'
| |-ParmVarDecl 0x299ec8d5798 <col:67, col:71> col:71 used iclass 'int'
| `-CompoundStmt 0x299ec8e0d68 <line:197:1, line:345:1>
|   |-DeclStmt 0x299ec8d5c68 <line:198:5, col:42>
|   | |-VarDecl 0x299ec8d5948 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x299ec8d59c8 <col:5, col:12> col:12 used ret 'int'
|   | |-VarDecl 0x299ec8d5a48 <col:5, col:17> col:17 used flags 'int'
|   | |-VarDecl 0x299ec8d5ac8 <col:5, col:24> col:24 used ttag 'int'
|   | |-VarDecl 0x299ec8d5b48 <col:5, col:30> col:30 used tclass 'int'
|   | `-VarDecl 0x299ec8d5bc8 <col:5, col:38> col:38 used ndef 'int'
|   |-IfStmt 0x299ec8d5d00 <line:206:5, line:209:5>
|   | |-OpaqueValueExpr 0x299ec8d5ce8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x299ec8d5cd8 <line:206:34, line:209:5>
|   |-IfStmt 0x299ec8d41c0 <line:217:5, line:232:5> has_else
|   | |-OpaqueValueExpr 0x299ec8d41a8 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x299ec8d5ee0 <line:217:37, line:225:5>
|   | | `-IfStmt 0x299ec8d5e38 <line:219:9, line:221:21>
|   | |   |-BinaryOperator 0x299ec8d5dc8 <line:219:13, col:21> 'int' '!='
|   | |   | |-ImplicitCastExpr 0x299ec8d5db0 <col:13> 'int' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x299ec8d5d38 <col:13> 'int' lvalue ParmVar 0x299ec8d5718 'tag' 'int'
|   | |   | `-UnaryOperator 0x299ec8d5d98 <col:20, col:21> 'int' prefix '-'
|   | |   |   `-IntegerLiteral 0x299ec8d5d70 <col:21> 'int' 1
|   | |   `-ReturnStmt 0x299ec8d5e28 <line:221:13, col:21>
|   | |     `-UnaryOperator 0x299ec8d5e10 <col:20, col:21> 'int' prefix '-'
|   | |       `-IntegerLiteral 0x299ec8d5de8 <col:21> 'int' 1
|   | `-IfStmt 0x299ec8d4180 <line:225:12, line:232:5> has_else
|   |   |-BinaryOperator 0x299ec8d5f70 <line:225:16, col:24> 'int' '!='
|   |   | |-ImplicitCastExpr 0x299ec8d5f58 <col:16> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x299ec8d5ef8 <col:16> 'int' lvalue ParmVar 0x299ec8d5718 'tag' 'int'
|   |   | `-UnaryOperator 0x299ec8d5f40 <col:23, col:24> 'int' prefix '-'
|   |   |   `-IntegerLiteral 0x299ec8d5f18 <col:24> 'int' 1
|   |   |-CompoundStmt 0x299ec8d4060 <col:27, line:229:5>
|   |   | `-BinaryOperator 0x299ec8d3fe8 <line:227:9, col:16> 'int' '='
|   |   |   |-DeclRefExpr 0x299ec8d3f90 <col:9> 'int' lvalue Var 0x299ec8d5ac8 'ttag' 'int'
|   |   |   `-ImplicitCastExpr 0x299ec8d3fd0 <col:16> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x299ec8d3fb0 <col:16> 'int' lvalue ParmVar 0x299ec8d5718 'tag' 'int'
|   |   `-CompoundStmt 0x299ec8d4160 <line:229:12, line:232:5>
|   |     |-BinaryOperator 0x299ec8d40d8 <line:230:9, col:17> 'int' '='
|   |     | |-DeclRefExpr 0x299ec8d4078 <col:9> 'int' lvalue Var 0x299ec8d5ac8 'ttag' 'int'
|   |     | `-UnaryOperator 0x299ec8d40c0 <col:16, col:17> 'int' prefix '-'
|   |     |   `-IntegerLiteral 0x299ec8d4098 <col:17> 'int' 1
|   |     `-BinaryOperator 0x299ec8d4140 <line:231:9, col:18> 'int' '='
|   |       |-DeclRefExpr 0x299ec8d40f8 <col:9> 'int' lvalue Var 0x299ec8d5b48 'tclass' 'int'
|   |       `-IntegerLiteral 0x299ec8d4118 <col:18> 'int' 0
|   |-IfStmt 0x299ec8d4348 <line:244:5, line:247:16> has_else
|   | |-OpaqueValueExpr 0x299ec8d4330 <<invalid sloc>> '_Bool'
|   | |-BinaryOperator 0x299ec8d42a8 <line:245:9, col:16> 'int' '='
|   | | |-DeclRefExpr 0x299ec8d4248 <col:9> 'int' lvalue Var 0x299ec8d5bc8 'ndef' 'int'
|   | | `-IntegerLiteral 0x299ec8d4280 <col:16> 'int' 2
|   | `-BinaryOperator 0x299ec8d4310 <line:247:9, col:16> 'int' '='
|   |   |-DeclRefExpr 0x299ec8d42c8 <col:9> 'int' lvalue Var 0x299ec8d5bc8 'ndef' 'int'
|   |   `-IntegerLiteral 0x299ec8d42e8 <col:16> 'int' 1
|   |-IfStmt 0x299ec8e03e8 <line:249:5, line:321:5>
|   | |-OpaqueValueExpr 0x299ec8e03d0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x299ec8e0350 <line:249:36, line:321:5>
|   |   |-DeclStmt 0x299ec8d4660 <line:252:9, col:35>
|   |   | |-VarDecl 0x299ec8d44d8 <col:9, col:13> col:13 used isset 'int'
|   |   | |-VarDecl 0x299ec8d4558 <col:9, col:20> col:20 used sktag 'int'
|   |   | `-VarDecl 0x299ec8d45d8 <col:9, col:27> col:27 used skaclass 'int'
|   |   |-DeclStmt 0x299ec8d4790 <line:253:9, col:29>
|   |   | |-VarDecl 0x299ec8d4690 <col:9, col:13> col:13 used skcontlen 'int'
|   |   | `-VarDecl 0x299ec8d4710 <col:9, col:24> col:24 used sklen 'int'
|   |   |-IfStmt 0x299ec8d47f8 <line:256:9, line:257:20>
|   |   | |-OpaqueValueExpr 0x299ec8d47e0 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x299ec8d47d0 <col:13, col:20>
|   |   |   `-IntegerLiteral 0x299ec8d47a8 <col:20> 'int' 0
|   |   |-IfStmt 0x299ec8d4a08 <line:259:9, line:265:21> has_else
|   |   | |-OpaqueValueExpr 0x299ec8d49f0 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x299ec8d4968 <line:259:39, line:264:9>
|   |   | | |-BinaryOperator 0x299ec8d4890 <line:260:13, col:21> 'int' '='
|   |   | | | |-DeclRefExpr 0x299ec8d4830 <col:13> 'int' lvalue Var 0x299ec8d44d8 'isset' 'int'
|   |   | | | `-IntegerLiteral 0x299ec8d4868 <col:21> 'int' 1
|   |   | | `-IfStmt 0x299ec8d4950 <line:262:13, line:263:25>
|   |   | |   |-OpaqueValueExpr 0x299ec8d4938 <<invalid sloc>> '_Bool'
|   |   | |   `-BinaryOperator 0x299ec8d4918 <col:17, col:25> 'int' '='
|   |   | |     |-DeclRefExpr 0x299ec8d48d0 <col:17> 'int' lvalue Var 0x299ec8d44d8 'isset' 'int'
|   |   | |     `-IntegerLiteral 0x299ec8d48f0 <col:25> 'int' 2
|   |   | `-BinaryOperator 0x299ec8d49d0 <line:265:13, col:21> 'int' '='
|   |   |   |-DeclRefExpr 0x299ec8d4988 <col:13> 'int' lvalue Var 0x299ec8d44d8 'isset' 'int'
|   |   |   `-IntegerLiteral 0x299ec8d49a8 <col:21> 'int' 0
|   |   |-IfStmt 0x299ec8d4d08 <line:271:9, line:280:9> has_else
|   |   | |-OpaqueValueExpr 0x299ec8d4cf0 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x299ec8d4c28 <line:271:58, line:274:9>
|   |   | | |-BinaryOperator 0x299ec8d4b78 <line:272:13, col:21> 'int' '='
|   |   | | | |-DeclRefExpr 0x299ec8d4b08 <col:13> 'int' lvalue Var 0x299ec8d4558 'sktag' 'int'
|   |   | | | `-ImplicitCastExpr 0x299ec8d4b60 <col:21> 'int' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x299ec8d4b40 <col:21> 'int' lvalue Var 0x299ec8d5ac8 'ttag' 'int'
|   |   | | `-BinaryOperator 0x299ec8d4c08 <line:273:13, col:24> 'int' '='
|   |   | |   |-DeclRefExpr 0x299ec8d4b98 <col:13> 'int' lvalue Var 0x299ec8d45d8 'skaclass' 'int'
|   |   | |   `-ImplicitCastExpr 0x299ec8d4bf0 <col:24> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x299ec8d4bd0 <col:24> 'int' lvalue Var 0x299ec8d5b48 'tclass' 'int'
|   |   | `-CompoundStmt 0x299ec8d4ce0 <line:274:16, line:280:9>
|   |   |-BinaryOperator 0x299ec8d4d90 <line:283:9, col:21> 'int' '='
|   |   | |-DeclRefExpr 0x299ec8d4d30 <col:9> 'int' lvalue Var 0x299ec8d4690 'skcontlen' 'int'
|   |   | `-IntegerLiteral 0x299ec8d4d68 <col:21> 'int' 0
|   |   |-BinaryOperator 0x299ec8e37e8 <line:293:9, col:56> 'int' '='
|   |   | |-DeclRefExpr 0x299ec8e3698 <col:9> 'int' lvalue Var 0x299ec8d4710 'sklen' 'int'
|   |   | `-CallExpr 0x299ec8e3768 <col:17, col:56> 'int'
|   |   |   |-ImplicitCastExpr 0x299ec8e3750 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x299ec8e36d0 <col:17> 'int ()' Function 0x299ec8db848 'ASN1_object_size' 'int ()'
|   |   |   |-ImplicitCastExpr 0x299ec8e37a0 <col:34> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x299ec8e36f0 <col:34> 'int' lvalue Var 0x299ec8d5bc8 'ndef' 'int'
|   |   |   |-ImplicitCastExpr 0x299ec8e37b8 <col:40> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x299ec8e3710 <col:40> 'int' lvalue Var 0x299ec8d4690 'skcontlen' 'int'
|   |   |   `-ImplicitCastExpr 0x299ec8e37d0 <col:51> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x299ec8e3730 <col:51> 'int' lvalue Var 0x299ec8d4558 'sktag' 'int'
|   |   |-IfStmt 0x299ec8e38f0 <line:294:9, line:295:21>
|   |   | |-BinaryOperator 0x299ec8e3880 <line:294:13, col:23> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x299ec8e3868 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x299ec8e3808 <col:13> 'int' lvalue Var 0x299ec8d4710 'sklen' 'int'
|   |   | | `-UnaryOperator 0x299ec8e3850 <col:22, col:23> 'int' prefix '-'
|   |   | |   `-IntegerLiteral 0x299ec8e3828 <col:23> 'int' 1
|   |   | `-ReturnStmt 0x299ec8e38e0 <line:295:13, col:21>
|   |   |   `-UnaryOperator 0x299ec8e38c8 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x299ec8e38a0 <col:21> 'int' 1
|   |   |-IfStmt 0x299ec8e3b28 <line:297:9, line:300:19> has_else
|   |   | |-OpaqueValueExpr 0x299ec8e3b10 <<invalid sloc>> '_Bool'
|   |   | |-BinaryOperator 0x299ec8e3a78 <line:298:13, col:53> 'int' '='
|   |   | | |-DeclRefExpr 0x299ec8e3928 <col:13> 'int' lvalue Var 0x299ec8d59c8 'ret' 'int'
|   |   | | `-CallExpr 0x299ec8e39f8 <col:19, col:53> 'int'
|   |   | |   |-ImplicitCastExpr 0x299ec8e39e0 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x299ec8e3960 <col:19> 'int ()' Function 0x299ec8db848 'ASN1_object_size' 'int ()'
|   |   | |   |-ImplicitCastExpr 0x299ec8e3a30 <col:36> 'int' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x299ec8e3980 <col:36> 'int' lvalue Var 0x299ec8d5bc8 'ndef' 'int'
|   |   | |   |-ImplicitCastExpr 0x299ec8e3a48 <col:42> 'int' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x299ec8e39a0 <col:42> 'int' lvalue Var 0x299ec8d4710 'sklen' 'int'
|   |   | |   `-ImplicitCastExpr 0x299ec8e3a60 <col:49> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x299ec8e39c0 <col:49> 'int' lvalue Var 0x299ec8d5ac8 'ttag' 'int'
|   |   | `-BinaryOperator 0x299ec8e3af0 <line:300:13, col:19> 'int' '='
|   |   |   |-DeclRefExpr 0x299ec8e3a98 <col:13> 'int' lvalue Var 0x299ec8d59c8 'ret' 'int'
|   |   |   `-ImplicitCastExpr 0x299ec8e3ad8 <col:19> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x299ec8e3ab8 <col:19> 'int' lvalue Var 0x299ec8d4710 'sklen' 'int'
|   |   |-IfStmt 0x299ec8e3cb8 <line:302:9, line:303:20>
|   |   | |-BinaryOperator 0x299ec8e3c50 <line:302:13, col:29> 'int' '||'
|   |   | | |-UnaryOperator 0x299ec8e3ba0 <col:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x299ec8e3b88 <col:14> 'unsigned char **' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x299ec8e3b50 <col:14> 'unsigned char **' lvalue ParmVar 0x299ec8d5618 'out' 'unsigned char **'
|   |   | | `-BinaryOperator 0x299ec8e3c30 <col:21, col:29> 'int' '=='
|   |   | |   |-ImplicitCastExpr 0x299ec8e3c18 <col:21> 'int' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x299ec8e3bb8 <col:21> 'int' lvalue Var 0x299ec8d59c8 'ret' 'int'
|   |   | |   `-UnaryOperator 0x299ec8e3c00 <col:28, col:29> 'int' prefix '-'
|   |   | |     `-IntegerLiteral 0x299ec8e3bd8 <col:29> 'int' 1
|   |   | `-ReturnStmt 0x299ec8e3ca8 <line:303:13, col:20>
|   |   |   `-ImplicitCastExpr 0x299ec8e3c90 <col:20> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x299ec8e3c70 <col:20> 'int' lvalue Var 0x299ec8d59c8 'ret' 'int'
|   |   |-IfStmt 0x299ec8e3ea0 <line:307:9, line:308:59>
|   |   | |-OpaqueValueExpr 0x299ec8e3e88 <<invalid sloc>> '_Bool'
|   |   | `-CallExpr 0x299ec8e3dc8 <col:13, col:59> 'int'
|   |   |   |-ImplicitCastExpr 0x299ec8e3db0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x299ec8e3cf0 <col:13> 'int ()' Function 0x299ec8dbbd8 'ASN1_put_object' 'int ()'
|   |   |   |-ImplicitCastExpr 0x299ec8e3e10 <col:29> 'unsigned char **' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x299ec8e3d10 <col:29> 'unsigned char **' lvalue ParmVar 0x299ec8d5618 'out' 'unsigned char **'
|   |   |   |-ImplicitCastExpr 0x299ec8e3e28 <col:34> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x299ec8e3d30 <col:34> 'int' lvalue Var 0x299ec8d5bc8 'ndef' 'int'
|   |   |   |-ImplicitCastExpr 0x299ec8e3e40 <col:40> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x299ec8e3d50 <col:40> 'int' lvalue Var 0x299ec8d4710 'sklen' 'int'
|   |   |   |-ImplicitCastExpr 0x299ec8e3e58 <col:47> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x299ec8e3d70 <col:47> 'int' lvalue Var 0x299ec8d5ac8 'ttag' 'int'
|   |   |   `-ImplicitCastExpr 0x299ec8e3e70 <col:53> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x299ec8e3d90 <col:53> 'int' lvalue Var 0x299ec8d5b48 'tclass' 'int'
|   |   |-CallExpr 0x299ec8e3f90 <line:310:9, col:62> 'int'
|   |   | |-ImplicitCastExpr 0x299ec8e3f78 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x299ec8e3eb8 <col:9> 'int ()' Function 0x299ec8dbbd8 'ASN1_put_object' 'int ()'
|   |   | |-ImplicitCastExpr 0x299ec8e3fd8 <col:25> 'unsigned char **' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x299ec8e3ed8 <col:25> 'unsigned char **' lvalue ParmVar 0x299ec8d5618 'out' 'unsigned char **'
|   |   | |-ImplicitCastExpr 0x299ec8e3ff0 <col:30> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x299ec8e3ef8 <col:30> 'int' lvalue Var 0x299ec8d5bc8 'ndef' 'int'
|   |   | |-ImplicitCastExpr 0x299ec8e4008 <col:36> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x299ec8e3f18 <col:36> 'int' lvalue Var 0x299ec8d4690 'skcontlen' 'int'
|   |   | |-ImplicitCastExpr 0x299ec8e4020 <col:47> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x299ec8e3f38 <col:47> 'int' lvalue Var 0x299ec8d4558 'sktag' 'int'
|   |   | `-ImplicitCastExpr 0x299ec8e4038 <col:54> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x299ec8e3f58 <col:54> 'int' lvalue Var 0x299ec8d45d8 'skaclass' 'int'
|   |   |-IfStmt 0x299ec8e02f0 <line:314:9, line:318:9>
|   |   | |-BinaryOperator 0x299ec8e0130 <line:314:13, col:21> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x299ec8e0118 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x299ec8e00d0 <col:13> 'int' lvalue Var 0x299ec8d5bc8 'ndef' 'int'
|   |   | | `-IntegerLiteral 0x299ec8e00f0 <col:21> 'int' 2
|   |   | `-CompoundStmt 0x299ec8e02d0 <col:24, line:318:9>
|   |   |   |-CallExpr 0x299ec8e01a8 <line:315:13, col:29> 'int'
|   |   |   | |-ImplicitCastExpr 0x299ec8e0190 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x299ec8e0150 <col:13> 'int ()' Function 0x299ec8d5118 'ASN1_put_eoc' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x299ec8e01d0 <col:26> 'unsigned char **' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x299ec8e0170 <col:26> 'unsigned char **' lvalue ParmVar 0x299ec8d5618 'out' 'unsigned char **'
|   |   |   `-IfStmt 0x299ec8e02b8 <line:316:13, line:317:33>
|   |   |     |-OpaqueValueExpr 0x299ec8e02a0 <<invalid sloc>> '_Bool'
|   |   |     `-CallExpr 0x299ec8e0260 <col:17, col:33> 'int'
|   |   |       |-ImplicitCastExpr 0x299ec8e0248 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x299ec8e0208 <col:17> 'int ()' Function 0x299ec8d5118 'ASN1_put_eoc' 'int ()'
|   |   |       `-ImplicitCastExpr 0x299ec8e0288 <col:30> 'unsigned char **' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x299ec8e0228 <col:30> 'unsigned char **' lvalue ParmVar 0x299ec8d5618 'out' 'unsigned char **'
|   |   `-ReturnStmt 0x299ec8e0340 <line:320:9, col:16>
|   |     `-ImplicitCastExpr 0x299ec8e0328 <col:16> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x299ec8e0308 <col:16> 'int' lvalue Var 0x299ec8d59c8 'ret' 'int'
|   `-IfStmt 0x299ec8e0c60 <line:323:5, line:339:5>
|     |-OpaqueValueExpr 0x299ec8e0c48 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x299ec8e0c18 <line:323:35, line:339:5>
|       |-IfStmt 0x299ec8e05d0 <line:327:9, line:328:20>
|       | |-UnaryOperator 0x299ec8e0580 <line:327:13, col:14> 'int' prefix '!' cannot overflow
|       | | `-ImplicitCastExpr 0x299ec8e0568 <col:14> 'int' <LValueToRValue>
|       | |   `-DeclRefExpr 0x299ec8e0548 <col:14> 'int' lvalue Var 0x299ec8d5948 'i' 'int'
|       | `-ReturnStmt 0x299ec8e05c0 <line:328:13, col:20>
|       |   `-IntegerLiteral 0x299ec8e0598 <col:20> 'int' 0
|       |-BinaryOperator 0x299ec8e0720 <line:330:9, col:45> 'int' '='
|       | |-DeclRefExpr 0x299ec8e05e8 <col:9> 'int' lvalue Var 0x299ec8d59c8 'ret' 'int'
|       | `-CallExpr 0x299ec8e06a0 <col:15, col:45> 'int'
|       |   |-ImplicitCastExpr 0x299ec8e0688 <col:15> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x299ec8e0608 <col:15> 'int ()' Function 0x299ec8db848 'ASN1_object_size' 'int ()'
|       |   |-ImplicitCastExpr 0x299ec8e06d8 <col:32> 'int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x299ec8e0628 <col:32> 'int' lvalue Var 0x299ec8d5bc8 'ndef' 'int'
|       |   |-ImplicitCastExpr 0x299ec8e06f0 <col:38> 'int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x299ec8e0648 <col:38> 'int' lvalue Var 0x299ec8d5948 'i' 'int'
|       |   `-ImplicitCastExpr 0x299ec8e0708 <col:41> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x299ec8e0668 <col:41> 'int' lvalue Var 0x299ec8d5ac8 'ttag' 'int'
|       |-IfStmt 0x299ec8e0bb8 <line:331:9, line:337:9>
|       | |-BinaryOperator 0x299ec8e0810 <line:331:13, col:28> 'int' '&&'
|       | | |-ImplicitCastExpr 0x299ec8e07f8 <col:13> 'unsigned char **' <LValueToRValue>
|       | | | `-DeclRefExpr 0x299ec8e0740 <col:13> 'unsigned char **' lvalue ParmVar 0x299ec8d5618 'out' 'unsigned char **'
|       | | `-BinaryOperator 0x299ec8e07d8 <col:20, col:28> 'int' '!='
|       | |   |-ImplicitCastExpr 0x299ec8e07c0 <col:20> 'int' <LValueToRValue>
|       | |   | `-DeclRefExpr 0x299ec8e0760 <col:20> 'int' lvalue Var 0x299ec8d59c8 'ret' 'int'
|       | |   `-UnaryOperator 0x299ec8e07a8 <col:27, col:28> 'int' prefix '-'
|       | |     `-IntegerLiteral 0x299ec8e0780 <col:28> 'int' 1
|       | `-CompoundStmt 0x299ec8e0b98 <col:31, line:337:9>
|       |   |-CallExpr 0x299ec8e0908 <line:333:13, col:55> 'int'
|       |   | |-ImplicitCastExpr 0x299ec8e08f0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|       |   | | `-DeclRefExpr 0x299ec8e0830 <col:13> 'int ()' Function 0x299ec8dbbd8 'ASN1_put_object' 'int ()'
|       |   | |-ImplicitCastExpr 0x299ec8e0950 <col:29> 'unsigned char **' <LValueToRValue>
|       |   | | `-DeclRefExpr 0x299ec8e0850 <col:29> 'unsigned char **' lvalue ParmVar 0x299ec8d5618 'out' 'unsigned char **'
|       |   | |-ImplicitCastExpr 0x299ec8e0968 <col:34> 'int' <LValueToRValue>
|       |   | | `-DeclRefExpr 0x299ec8e0870 <col:34> 'int' lvalue Var 0x299ec8d5bc8 'ndef' 'int'
|       |   | |-ImplicitCastExpr 0x299ec8e0980 <col:40> 'int' <LValueToRValue>
|       |   | | `-DeclRefExpr 0x299ec8e0890 <col:40> 'int' lvalue Var 0x299ec8d5948 'i' 'int'
|       |   | |-ImplicitCastExpr 0x299ec8e0998 <col:43> 'int' <LValueToRValue>
|       |   | | `-DeclRefExpr 0x299ec8e08b0 <col:43> 'int' lvalue Var 0x299ec8d5ac8 'ttag' 'int'
|       |   | `-ImplicitCastExpr 0x299ec8e09b0 <col:49> 'int' <LValueToRValue>
|       |   |   `-DeclRefExpr 0x299ec8e08d0 <col:49> 'int' lvalue Var 0x299ec8d5b48 'tclass' 'int'
|       |   `-IfStmt 0x299ec8e0b80 <line:335:13, line:336:33>
|       |     |-BinaryOperator 0x299ec8e0ac8 <line:335:17, col:25> 'int' '=='
|       |     | |-ImplicitCastExpr 0x299ec8e0ab0 <col:17> 'int' <LValueToRValue>
|       |     | | `-DeclRefExpr 0x299ec8e0a68 <col:17> 'int' lvalue Var 0x299ec8d5bc8 'ndef' 'int'
|       |     | `-IntegerLiteral 0x299ec8e0a88 <col:25> 'int' 2
|       |     `-CallExpr 0x299ec8e0b40 <line:336:17, col:33> 'int'
|       |       |-ImplicitCastExpr 0x299ec8e0b28 <col:17> 'int (*)()' <FunctionToPointerDecay>
|       |       | `-DeclRefExpr 0x299ec8e0ae8 <col:17> 'int ()' Function 0x299ec8d5118 'ASN1_put_eoc' 'int ()'
|       |       `-ImplicitCastExpr 0x299ec8e0b68 <col:30> 'unsigned char **' <LValueToRValue>
|       |         `-DeclRefExpr 0x299ec8e0b08 <col:30> 'unsigned char **' lvalue ParmVar 0x299ec8d5618 'out' 'unsigned char **'
|       `-ReturnStmt 0x299ec8e0c08 <line:338:9, col:16>
|         `-ImplicitCastExpr 0x299ec8e0bf0 <col:16> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x299ec8e0bd0 <col:16> 'int' lvalue Var 0x299ec8d59c8 'ret' 'int'
|-RecordDecl 0x299ec8e0da8 <line:349:9, line:353:1> line:349:9 invalid struct definition
| |-FieldDecl 0x299ec8e0e78 <line:350:5, col:20> col:20 referenced data 'unsigned char *'
| |-FieldDecl 0x299ec8e0ee8 <line:351:5, col:9> col:9 referenced length 'int'
| `-FieldDecl 0x299ec8e0f58 <line:352:5, col:17> col:17 invalid field 'int *'
|-TypedefDecl 0x299ec8dc010 <line:349:1, line:353:3> col:3 referenced DER_ENC 'struct (anonymous struct at .//openssl//file_jk/before\crypto\asn1\tasn_enc.c:349:9)':'struct (anonymous at .//openssl//file_jk/before\crypto\asn1\tasn_enc.c:349:9)'
| `-ElaboratedType 0x299ec8e0fb0 'struct (anonymous struct at .//openssl//file_jk/before\crypto\asn1\tasn_enc.c:349:9)' sugar
|   `-RecordType 0x299ec8e0e40 'struct (anonymous at .//openssl//file_jk/before\crypto\asn1\tasn_enc.c:349:9)'
|     `-Record 0x299ec8e0da8 ''
|-FunctionDecl 0x299ec8dc220 <line:355:1, line:364:1> line:355:12 used der_cmp 'int (const void *, const void *)' static
| |-ParmVarDecl 0x299ec8dc098 <col:20, col:32> col:32 used a 'const void *'
| |-ParmVarDecl 0x299ec8dc118 <col:35, col:47> col:47 used b 'const void *'
| `-CompoundStmt 0x299ec8dcdd0 <line:356:1, line:364:1>
|   |-DeclStmt 0x299ec8dc510 <line:357:5, col:35>
|   | |-VarDecl 0x299ec8dc378 <col:5, col:25> col:20 used d1 'const DER_ENC *' cinit
|   | | `-ImplicitCastExpr 0x299ec8dc418 <col:25> 'const DER_ENC *' <BitCast>
|   | |   `-ImplicitCastExpr 0x299ec8dc400 <col:25> 'const void *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x299ec8dc3e0 <col:25> 'const void *' lvalue ParmVar 0x299ec8dc098 'a' 'const void *'
|   | `-VarDecl 0x299ec8dc440 <col:5, col:34> col:29 used d2 'const DER_ENC *' cinit
|   |   `-ImplicitCastExpr 0x299ec8dc4e0 <col:34> 'const DER_ENC *' <BitCast>
|   |     `-ImplicitCastExpr 0x299ec8dc4c8 <col:34> 'const void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x299ec8dc4a8 <col:34> 'const void *' lvalue ParmVar 0x299ec8dc118 'b' 'const void *'
|   |-DeclStmt 0x299ec8dc640 <line:358:5, col:18>
|   | |-VarDecl 0x299ec8dc540 <col:5, col:9> col:9 used cmplen 'int'
|   | `-VarDecl 0x299ec8dc5c0 <col:5, col:17> col:17 used i 'int'
|   |-BinaryOperator 0x299ec8dc930 <line:359:5, col:59> 'int' '='
|   | |-DeclRefExpr 0x299ec8dc658 <col:5> 'int' lvalue Var 0x299ec8dc540 'cmplen' 'int'
|   | `-ConditionalOperator 0x299ec8dc900 <col:14, col:59> 'int'
|   |   |-ParenExpr 0x299ec8dc7e0 <col:14, col:38> 'int'
|   |   | `-BinaryOperator 0x299ec8dc7c0 <col:15, col:32> 'int' '<'
|   |   |   |-ImplicitCastExpr 0x299ec8dc790 <col:15, col:19> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x299ec8dc6e0 <col:15, col:19> 'const int' lvalue ->length 0x299ec8e0ee8
|   |   |   |   `-ImplicitCastExpr 0x299ec8dc6c8 <col:15> 'const DER_ENC *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x299ec8dc690 <col:15> 'const DER_ENC *' lvalue Var 0x299ec8dc378 'd1' 'const DER_ENC *'
|   |   |   `-ImplicitCastExpr 0x299ec8dc7a8 <col:28, col:32> 'int' <LValueToRValue>
|   |   |     `-MemberExpr 0x299ec8dc760 <col:28, col:32> 'const int' lvalue ->length 0x299ec8e0ee8
|   |   |       `-ImplicitCastExpr 0x299ec8dc748 <col:28> 'const DER_ENC *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x299ec8dc710 <col:28> 'const DER_ENC *' lvalue Var 0x299ec8dc440 'd2' 'const DER_ENC *'
|   |   |-ImplicitCastExpr 0x299ec8dc8d0 <col:42, col:46> 'int' <LValueToRValue>
|   |   | `-MemberExpr 0x299ec8dc838 <col:42, col:46> 'const int' lvalue ->length 0x299ec8e0ee8
|   |   |   `-ImplicitCastExpr 0x299ec8dc820 <col:42> 'const DER_ENC *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x299ec8dc800 <col:42> 'const DER_ENC *' lvalue Var 0x299ec8dc378 'd1' 'const DER_ENC *'
|   |   `-ImplicitCastExpr 0x299ec8dc8e8 <col:55, col:59> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x299ec8dc8a0 <col:55, col:59> 'const int' lvalue ->length 0x299ec8e0ee8
|   |       `-ImplicitCastExpr 0x299ec8dc888 <col:55> 'const DER_ENC *' <LValueToRValue>
|   |         `-DeclRefExpr 0x299ec8dc868 <col:55> 'const DER_ENC *' lvalue Var 0x299ec8dc440 'd2' 'const DER_ENC *'
|   |-BinaryOperator 0x299ec8dcbe8 <line:360:5, col:42> 'int' '='
|   | |-DeclRefExpr 0x299ec8dc950 <col:5> 'int' lvalue Var 0x299ec8dc5c0 'i' 'int'
|   | `-CallExpr 0x299ec8dcb20 <col:9, col:42> 'int'
|   |   |-ImplicitCastExpr 0x299ec8dcb08 <col:9> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x299ec8dc988 <col:9> 'int (const void *, const void *, unsigned long long)' Function 0x299ec89c408 'memcmp' 'int (const void *, const void *, unsigned long long)'
|   |   |-ImplicitCastExpr 0x299ec8dcb70 <col:16, col:20> 'const void *' <BitCast>
|   |   | `-ImplicitCastExpr 0x299ec8dcb58 <col:16, col:20> 'unsigned char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x299ec8dc9e0 <col:16, col:20> 'unsigned char *const' lvalue ->data 0x299ec8e0e78
|   |   |     `-ImplicitCastExpr 0x299ec8dc9c8 <col:16> 'const DER_ENC *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x299ec8dc9a8 <col:16> 'const DER_ENC *' lvalue Var 0x299ec8dc378 'd1' 'const DER_ENC *'
|   |   |-ImplicitCastExpr 0x299ec8dcba0 <col:26, col:30> 'const void *' <BitCast>
|   |   | `-ImplicitCastExpr 0x299ec8dcb88 <col:26, col:30> 'unsigned char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x299ec8dca48 <col:26, col:30> 'unsigned char *const' lvalue ->data 0x299ec8e0e78
|   |   |     `-ImplicitCastExpr 0x299ec8dca30 <col:26> 'const DER_ENC *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x299ec8dca10 <col:26> 'const DER_ENC *' lvalue Var 0x299ec8dc440 'd2' 'const DER_ENC *'
|   |   `-ImplicitCastExpr 0x299ec8dcbd0 <col:36> 'unsigned long long' <IntegralCast>
|   |     `-ImplicitCastExpr 0x299ec8dcbb8 <col:36> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x299ec8dca78 <col:36> 'int' lvalue Var 0x299ec8dc540 'cmplen' 'int'
|   |-IfStmt 0x299ec8dcc88 <line:361:5, line:362:16>
|   | |-ImplicitCastExpr 0x299ec8dcc28 <line:361:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x299ec8dcc08 <col:9> 'int' lvalue Var 0x299ec8dc5c0 'i' 'int'
|   | `-ReturnStmt 0x299ec8dcc78 <line:362:9, col:16>
|   |   `-ImplicitCastExpr 0x299ec8dcc60 <col:16> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x299ec8dcc40 <col:16> 'int' lvalue Var 0x299ec8dc5c0 'i' 'int'
|   `-ReturnStmt 0x299ec8dcdc0 <line:363:5, col:29>
|     `-BinaryOperator 0x299ec8dcda0 <col:12, col:29> 'int' '-'
|       |-ImplicitCastExpr 0x299ec8dcd70 <col:12, col:16> 'int' <LValueToRValue>
|       | `-MemberExpr 0x299ec8dccd8 <col:12, col:16> 'const int' lvalue ->length 0x299ec8e0ee8
|       |   `-ImplicitCastExpr 0x299ec8dccc0 <col:12> 'const DER_ENC *' <LValueToRValue>
|       |     `-DeclRefExpr 0x299ec8dcca0 <col:12> 'const DER_ENC *' lvalue Var 0x299ec8dc378 'd1' 'const DER_ENC *'
|       `-ImplicitCastExpr 0x299ec8dcd88 <col:25, col:29> 'int' <LValueToRValue>
|         `-MemberExpr 0x299ec8dcd40 <col:25, col:29> 'const int' lvalue ->length 0x299ec8e0ee8
|           `-ImplicitCastExpr 0x299ec8dcd28 <col:25> 'const DER_ENC *' <LValueToRValue>
|             `-DeclRefExpr 0x299ec8dcd08 <col:25> 'const DER_ENC *' lvalue Var 0x299ec8dc440 'd2' 'const DER_ENC *'
|-FunctionDecl 0x299ec8dced0 <line:368:1, line:427:1> line:368:12 invalid asn1_set_seq_out 'int (int (*)())' static
| |-ParmVarDecl 0x299ec8dce38 <col:29, <invalid sloc>> col:29 invalid STACK_OF 'int (*)()':'int (*)()'
| `-CompoundStmt 0x299ec8e2ef0 <line:371:1, line:427:1>
|   |-DeclStmt 0x299ec8e1060 <line:372:5, col:10>
|   | `-VarDecl 0x299ec8dcfa8 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x299ec8e12d0 <line:374:5, col:44>
|   | |-VarDecl 0x299ec8e1090 <col:5, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> .//openssl//file_jk/before\crypto\asn1\tasn_enc.c:374:20 used tmpdat 'unsigned char *' cinit
|   | | `-ImplicitCastExpr 0x299ec8e1180 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'unsigned char *' <NullToPointer>
|   | |   `-ParenExpr 0x299ec8e1160 <col:16, col:25> 'void *'
|   | |     `-CStyleCastExpr 0x299ec8e1138 <col:17, col:24> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x299ec8e10f8 <col:24> 'int' 0
|   | `-VarDecl 0x299ec8e11b0 <.//openssl//file_jk/before\crypto\asn1\tasn_enc.c:374:5, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> .//openssl//file_jk/before\crypto\asn1\tasn_enc.c:374:36 used p 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x299ec8e12a0 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x299ec8e1280 <col:16, col:25> 'void *'
|   |       `-CStyleCastExpr 0x299ec8e1258 <col:17, col:24> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x299ec8e1218 <col:24> 'int' 0
|   |-DeclStmt 0x299ec8e14f0 <.//openssl//file_jk/before\crypto\asn1\tasn_enc.c:375:5, col:34>
|   | |-VarDecl 0x299ec8e1358 <col:5, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> .//openssl//file_jk/before\crypto\asn1\tasn_enc.c:375:14 used derlst 'DER_ENC *' cinit
|   | | `-ImplicitCastExpr 0x299ec8e1448 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'DER_ENC *' <NullToPointer>
|   | |   `-ParenExpr 0x299ec8e1428 <col:16, col:25> 'void *'
|   | |     `-CStyleCastExpr 0x299ec8e1400 <col:17, col:24> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x299ec8e13c0 <col:24> 'int' 0
|   | `-VarDecl 0x299ec8e1470 <.//openssl//file_jk/before\crypto\asn1\tasn_enc.c:375:5, col:30> col:30 used tder 'DER_ENC *'
|   |-IfStmt 0x299ec8e1ba8 <line:376:5, line:391:5>
|   | |-OpaqueValueExpr 0x299ec8e1b90 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x299ec8e1b78 <line:376:18, line:391:5>
|   |   `-IfStmt 0x299ec8e1b50 <line:378:9, line:390:9> has_else
|   |     |-OpaqueValueExpr 0x299ec8e1b38 <<invalid sloc>> '_Bool'
|   |     |-NullStmt 0x299ec8e1b30 <line:379:13>
|   |     `-CompoundStmt 0x299ec8e1b10 <line:380:14, line:390:9>
|   |       |-IfStmt 0x299ec8e17b0 <line:383:13, line:384:24>
|   |       | |-BinaryOperator 0x299ec8e1758 <line:383:17, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x299ec8e1728 <.//openssl//file_jk/before\crypto\asn1\tasn_enc.c:383:17> 'DER_ENC *' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x299ec8e1680 <col:17> 'DER_ENC *' lvalue Var 0x299ec8e1358 'derlst' 'DER_ENC *'
|   |       | | `-ImplicitCastExpr 0x299ec8e1740 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'DER_ENC *' <BitCast>
|   |       | |   `-ParenExpr 0x299ec8e1708 <col:16, col:25> 'void *'
|   |       | |     `-CStyleCastExpr 0x299ec8e16e0 <col:17, col:24> 'void *' <NullToPointer>
|   |       | |       `-IntegerLiteral 0x299ec8e16a0 <col:24> 'int' 0
|   |       | `-ReturnStmt 0x299ec8e17a0 <.//openssl//file_jk/before\crypto\asn1\tasn_enc.c:384:17, col:24>
|   |       |   `-IntegerLiteral 0x299ec8e1778 <col:24> 'int' 0
|   |       `-IfStmt 0x299ec8e1af8 <line:386:13, line:389:13>
|   |         |-BinaryOperator 0x299ec8e18f8 <line:386:17, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'int' '=='
|   |         | |-ImplicitCastExpr 0x299ec8e18c8 <.//openssl//file_jk/before\crypto\asn1\tasn_enc.c:386:17> 'unsigned char *' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x299ec8e1820 <col:17> 'unsigned char *' lvalue Var 0x299ec8e1090 'tmpdat' 'unsigned char *'
|   |         | `-ImplicitCastExpr 0x299ec8e18e0 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'unsigned char *' <BitCast>
|   |         |   `-ParenExpr 0x299ec8e18a8 <col:16, col:25> 'void *'
|   |         |     `-CStyleCastExpr 0x299ec8e1880 <col:17, col:24> 'void *' <NullToPointer>
|   |         |       `-IntegerLiteral 0x299ec8e1840 <col:24> 'int' 0
|   |         `-CompoundStmt 0x299ec8e1ad8 <.//openssl//file_jk/before\crypto\asn1\tasn_enc.c:386:33, line:389:13>
|   |           |-CallExpr 0x299ec8e1a60 <line:387:17, col:36> 'int'
|   |           | |-ImplicitCastExpr 0x299ec8e1a48 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |           | | `-DeclRefExpr 0x299ec8e1a08 <col:17> 'int ()' Function 0x299ec8e1940 'OPENSSL_free' 'int ()'
|   |           | `-ImplicitCastExpr 0x299ec8e1a88 <col:30> 'DER_ENC *' <LValueToRValue>
|   |           |   `-DeclRefExpr 0x299ec8e1a28 <col:30> 'DER_ENC *' lvalue Var 0x299ec8e1358 'derlst' 'DER_ENC *'
|   |           `-ReturnStmt 0x299ec8e1ac8 <line:388:17, col:24>
|   |             `-IntegerLiteral 0x299ec8e1aa0 <col:24> 'int' 0
|   |-IfStmt 0x299ec8e1db0 <line:393:5, line:399:5>
|   | |-OpaqueValueExpr 0x299ec8e1d98 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x299ec8e1d80 <line:393:19, line:399:5>
|   |   `-ReturnStmt 0x299ec8e1d70 <line:398:9, col:16>
|   |     `-IntegerLiteral 0x299ec8e1d48 <col:16> 'int' 1
|   |-BinaryOperator 0x299ec8e1e38 <line:400:5, col:9> 'unsigned char *' '='
|   | |-DeclRefExpr 0x299ec8e1dc8 <col:5> 'unsigned char *' lvalue Var 0x299ec8e11b0 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x299ec8e1e20 <col:9> 'unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x299ec8e1e00 <col:9> 'unsigned char *' lvalue Var 0x299ec8e1090 'tmpdat' 'unsigned char *'
|   |-IfStmt 0x299ec8e2d70 <line:420:5, line:423:5>
|   | |-OpaqueValueExpr 0x299ec8e2d58 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x299ec8e2d48 <line:420:23, line:423:5>
|   |-CallExpr 0x299ec8e2de0 <line:424:5, col:24> 'int'
|   | |-ImplicitCastExpr 0x299ec8e2dc8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x299ec8e2d88 <col:5> 'int ()' Function 0x299ec8e1940 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x299ec8e2e08 <col:18> 'DER_ENC *' <LValueToRValue>
|   |   `-DeclRefExpr 0x299ec8e2da8 <col:18> 'DER_ENC *' lvalue Var 0x299ec8e1358 'derlst' 'DER_ENC *'
|   |-CallExpr 0x299ec8e2e78 <line:425:5, col:24> 'int'
|   | |-ImplicitCastExpr 0x299ec8e2e60 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x299ec8e2e20 <col:5> 'int ()' Function 0x299ec8e1940 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x299ec8e2ea0 <col:18> 'unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x299ec8e2e40 <col:18> 'unsigned char *' lvalue Var 0x299ec8e1090 'tmpdat' 'unsigned char *'
|   `-ReturnStmt 0x299ec8e2ee0 <line:426:5, col:12>
|     `-IntegerLiteral 0x299ec8e2eb8 <col:12> 'int' 1
|-FunctionDecl 0x299ec8e4260 <line:429:1, line:485:1> line:429:12 invalid asn1_i2d_ex_primitive 'int (int **, unsigned char **, const int *, int, int)' static
| |-ParmVarDecl 0x299ec8e2f70 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x299ec8e2ff8 <col:53, col:69> col:69 used out 'unsigned char **'
| |-ParmVarDecl 0x299ec8e40a8 <line:430:34, col:51> col:51 invalid it 'const int *'
| |-ParmVarDecl 0x299ec8e4128 <col:55, col:59> col:59 used tag 'int'
| |-ParmVarDecl 0x299ec8e41a8 <col:64, col:68> col:68 used aclass 'int'
| `-CompoundStmt 0x299ec8df290 <line:431:1, line:485:1>
|   |-DeclStmt 0x299ec8e43c0 <line:432:5, col:12>
|   | `-VarDecl 0x299ec8e4358 <col:5, col:9> col:9 used len 'int'
|   |-DeclStmt 0x299ec8e4458 <line:433:5, col:14>
|   | `-VarDecl 0x299ec8e43f0 <col:5, col:9> col:9 used utype 'int'
|   |-DeclStmt 0x299ec8e44f0 <line:434:5, col:15>
|   | `-VarDecl 0x299ec8e4488 <col:5, col:9> col:9 used usetag 'int'
|   |-DeclStmt 0x299ec8e45b0 <line:435:5, col:17>
|   | `-VarDecl 0x299ec8e4520 <col:5, col:16> col:9 used ndef 'int' cinit
|   |   `-IntegerLiteral 0x299ec8e4588 <col:16> 'int' 0
|   |-IfStmt 0x299ec8e4858 <line:450:5, line:454:18> has_else
|   | |-OpaqueValueExpr 0x299ec8e4840 <<invalid sloc>> '_Bool'
|   | |-BinaryOperator 0x299ec8e47b8 <line:452:9, col:18> 'int' '='
|   | | |-DeclRefExpr 0x299ec8e4758 <col:9> 'int' lvalue Var 0x299ec8e4488 'usetag' 'int'
|   | | `-IntegerLiteral 0x299ec8e4790 <col:18> 'int' 0
|   | `-BinaryOperator 0x299ec8e4820 <line:454:9, col:18> 'int' '='
|   |   |-DeclRefExpr 0x299ec8e47d8 <col:9> 'int' lvalue Var 0x299ec8e4488 'usetag' 'int'
|   |   `-IntegerLiteral 0x299ec8e47f8 <col:18> 'int' 1
|   |-IfStmt 0x299ec8e4950 <line:458:5, line:459:16>
|   | |-BinaryOperator 0x299ec8e48f8 <line:458:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x299ec8e48e0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x299ec8e4880 <col:9> 'int' lvalue Var 0x299ec8e4358 'len' 'int'
|   | | `-UnaryOperator 0x299ec8e48c8 <col:16, col:17> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x299ec8e48a0 <col:17> 'int' 1
|   | `-ReturnStmt 0x299ec8e4940 <line:459:9, col:16>
|   |   `-IntegerLiteral 0x299ec8e4918 <col:16> 'int' 0
|   |-IfStmt 0x299ec8e4b08 <line:462:5, line:465:5>
|   | |-BinaryOperator 0x299ec8e49e0 <line:462:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x299ec8e49c8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x299ec8e4968 <col:9> 'int' lvalue Var 0x299ec8e4358 'len' 'int'
|   | | `-UnaryOperator 0x299ec8e49b0 <col:16, col:17> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x299ec8e4988 <col:17> 'int' 2
|   | `-CompoundStmt 0x299ec8e4ae8 <col:20, line:465:5>
|   |   |-BinaryOperator 0x299ec8e4a60 <line:463:9, col:16> 'int' '='
|   |   | |-DeclRefExpr 0x299ec8e4a00 <col:9> 'int' lvalue Var 0x299ec8e4520 'ndef' 'int'
|   |   | `-IntegerLiteral 0x299ec8e4a38 <col:16> 'int' 2
|   |   `-BinaryOperator 0x299ec8e4ac8 <line:464:9, col:15> 'int' '='
|   |     |-DeclRefExpr 0x299ec8e4a80 <col:9> 'int' lvalue Var 0x299ec8e4358 'len' 'int'
|   |     `-IntegerLiteral 0x299ec8e4aa0 <col:15> 'int' 0
|   |-IfStmt 0x299ec8e4c48 <line:468:5, line:469:15>
|   | |-BinaryOperator 0x299ec8e4bb0 <line:468:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x299ec8e4b98 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x299ec8e4b20 <col:9> 'int' lvalue ParmVar 0x299ec8e4128 'tag' 'int'
|   | | `-UnaryOperator 0x299ec8e4b80 <col:16, col:17> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x299ec8e4b58 <col:17> 'int' 1
|   | `-BinaryOperator 0x299ec8e4c28 <line:469:9, col:15> 'int' '='
|   |   |-DeclRefExpr 0x299ec8e4bd0 <col:9> 'int' lvalue ParmVar 0x299ec8e4128 'tag' 'int'
|   |   `-ImplicitCastExpr 0x299ec8e4c10 <col:15> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x299ec8e4bf0 <col:15> 'int' lvalue Var 0x299ec8e43f0 'utype' 'int'
|   |-IfStmt 0x299ec8df0b8 <line:472:5, line:480:5>
|   | |-ImplicitCastExpr 0x299ec8e4c98 <line:472:9> 'unsigned char **' <LValueToRValue>
|   | | `-DeclRefExpr 0x299ec8e4c60 <col:9> 'unsigned char **' lvalue ParmVar 0x299ec8e2ff8 'out' 'unsigned char **'
|   | `-CompoundStmt 0x299ec8df098 <col:14, line:480:5>
|   |   |-IfStmt 0x299ec8e4e98 <line:473:9, line:474:56>
|   |   | |-ImplicitCastExpr 0x299ec8e4cd0 <line:473:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x299ec8e4cb0 <col:13> 'int' lvalue Var 0x299ec8e4488 'usetag' 'int'
|   |   | `-CallExpr 0x299ec8e4dd8 <line:474:13, col:56> 'int'
|   |   |   |-ImplicitCastExpr 0x299ec8e4dc0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x299ec8e4ce8 <col:13> 'int ()' Function 0x299ec8dbbd8 'ASN1_put_object' 'int ()'
|   |   |   |-ImplicitCastExpr 0x299ec8e4e20 <col:29> 'unsigned char **' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x299ec8e4d08 <col:29> 'unsigned char **' lvalue ParmVar 0x299ec8e2ff8 'out' 'unsigned char **'
|   |   |   |-ImplicitCastExpr 0x299ec8e4e38 <col:34> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x299ec8e4d28 <col:34> 'int' lvalue Var 0x299ec8e4520 'ndef' 'int'
|   |   |   |-ImplicitCastExpr 0x299ec8e4e50 <col:40> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x299ec8e4d48 <col:40> 'int' lvalue Var 0x299ec8e4358 'len' 'int'
|   |   |   |-ImplicitCastExpr 0x299ec8e4e68 <col:45> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x299ec8e4d68 <col:45> 'int' lvalue ParmVar 0x299ec8e4128 'tag' 'int'
|   |   |   `-ImplicitCastExpr 0x299ec8e4e80 <col:50> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x299ec8e4d88 <col:50> 'int' lvalue ParmVar 0x299ec8e41a8 'aclass' 'int'
|   |   `-IfStmt 0x299ec8df070 <line:476:9, line:479:21> has_else
|   |     |-ImplicitCastExpr 0x299ec8e4f58 <line:476:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x299ec8e4f38 <col:13> 'int' lvalue Var 0x299ec8e4520 'ndef' 'int'
|   |     |-CallExpr 0x299ec8e4fc8 <line:477:13, col:29> 'int'
|   |     | |-ImplicitCastExpr 0x299ec8e4fb0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x299ec8e4f70 <col:13> 'int ()' Function 0x299ec8d5118 'ASN1_put_eoc' 'int ()'
|   |     | `-ImplicitCastExpr 0x299ec8e4ff0 <col:26> 'unsigned char **' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x299ec8e4f90 <col:26> 'unsigned char **' lvalue ParmVar 0x299ec8e2ff8 'out' 'unsigned char **'
|   |     `-CompoundAssignOperator 0x299ec8df040 <line:479:13, col:21> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |       |-UnaryOperator 0x299ec8e5040 <col:13, col:14> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |       | `-ImplicitCastExpr 0x299ec8e5028 <col:14> 'unsigned char **' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x299ec8e5008 <col:14> 'unsigned char **' lvalue ParmVar 0x299ec8e2ff8 'out' 'unsigned char **'
|   |       `-ImplicitCastExpr 0x299ec8e5078 <col:21> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x299ec8e5058 <col:21> 'int' lvalue Var 0x299ec8e4358 'len' 'int'
|   |-IfStmt 0x299ec8df230 <line:482:5, line:483:47>
|   | |-ImplicitCastExpr 0x299ec8df0f0 <line:482:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x299ec8df0d0 <col:9> 'int' lvalue Var 0x299ec8e4488 'usetag' 'int'
|   | `-ReturnStmt 0x299ec8df220 <line:483:9, col:47>
|   |   `-CallExpr 0x299ec8df1a0 <col:16, col:47> 'int'
|   |     |-ImplicitCastExpr 0x299ec8df188 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x299ec8df108 <col:16> 'int ()' Function 0x299ec8db848 'ASN1_object_size' 'int ()'
|   |     |-ImplicitCastExpr 0x299ec8df1d8 <col:33> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x299ec8df128 <col:33> 'int' lvalue Var 0x299ec8e4520 'ndef' 'int'
|   |     |-ImplicitCastExpr 0x299ec8df1f0 <col:39> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x299ec8df148 <col:39> 'int' lvalue Var 0x299ec8e4358 'len' 'int'
|   |     `-ImplicitCastExpr 0x299ec8df208 <col:44> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x299ec8df168 <col:44> 'int' lvalue ParmVar 0x299ec8e4128 'tag' 'int'
|   `-ReturnStmt 0x299ec8df280 <line:484:5, col:12>
|     `-ImplicitCastExpr 0x299ec8df268 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x299ec8df248 <col:12> 'int' lvalue Var 0x299ec8e4358 'len' 'int'
`-FunctionDecl 0x299ec8df548 <line:489:1, line:607:1> line:489:12 invalid asn1_ex_i2c 'int (int **, unsigned char *, int *, const int *)' static
  |-ParmVarDecl 0x299ec8df318 <col:24, col:37> col:37 invalid pval 'int **'
  |-ParmVarDecl 0x299ec8df398 <col:43, col:58> col:58 used cout 'unsigned char *'
  |-ParmVarDecl 0x299ec8df418 <col:64, col:69> col:69 used putype 'int *'
  |-ParmVarDecl 0x299ec8df498 <line:490:24, col:41> col:41 invalid it 'const int *'
  `-CompoundStmt 0x299ec8deca8 <line:491:1, line:607:1>
    |-DeclStmt 0x299ec8df728 <line:495:5, col:14>
    | `-VarDecl 0x299ec8df6c0 <col:5, col:9> col:9 used utype 'int'
    |-DeclStmt 0x299ec8df7c0 <line:496:5, col:30>
    | `-VarDecl 0x299ec8df758 <col:5, col:26> col:26 used cont 'const unsigned char *'
    |-DeclStmt 0x299ec8df858 <line:497:5, col:20>
    | `-VarDecl 0x299ec8df7f0 <col:5, col:19> col:19 used c 'unsigned char'
    |-DeclStmt 0x299ec8df8f0 <line:498:5, col:12>
    | `-VarDecl 0x299ec8df888 <col:5, col:9> col:9 used len 'int'
    |-DeclStmt 0x299ec8df988 <line:499:5, col:35>
    | `-VarDecl 0x299ec8df920 <col:5, col:33> col:33 invalid pf 'const int *'
    |-IfStmt 0x299ec8dfac0 <line:505:5, line:509:5>
    | |-OpaqueValueExpr 0x299ec8dfaa8 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x299ec8dfa90 <line:506:43, line:509:5>
    |   `-IfStmt 0x299ec8dfa78 <line:507:9, line:508:21>
    |     |-OpaqueValueExpr 0x299ec8dfa60 <<invalid sloc>> '_Bool'
    |     `-ReturnStmt 0x299ec8dfa50 <col:13, col:21>
    |       `-UnaryOperator 0x299ec8dfa38 <col:20, col:21> 'int' prefix '-'
    |         `-IntegerLiteral 0x299ec8dfa10 <col:21> 'int' 1
    |-IfStmt 0x299ec8dfdb0 <line:511:5, line:524:18> has_else
    | |-OpaqueValueExpr 0x299ec8dfd98 <<invalid sloc>> '_Bool'
    | |-CompoundStmt 0x299ec8dfbb8 <line:511:42, line:516:5>
    | | `-BinaryOperator 0x299ec8dfb98 <line:515:9, col:19> 'int' '='
    | |   |-UnaryOperator 0x299ec8dfb48 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
    | |   | `-ImplicitCastExpr 0x299ec8dfb30 <col:10> 'int *' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x299ec8dfb10 <col:10> 'int *' lvalue ParmVar 0x299ec8df418 'putype' 'int *'
    | |   `-ImplicitCastExpr 0x299ec8dfb80 <col:19> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x299ec8dfb60 <col:19> 'int' lvalue Var 0x299ec8df6c0 'utype' 'int'
    | `-IfStmt 0x299ec8dfd70 <line:516:12, line:524:18> has_else
    |   |-OpaqueValueExpr 0x299ec8dfd58 <<invalid sloc>> '_Bool'
    |   |-CompoundStmt 0x299ec8dfc98 <line:516:41, line:523:5>
    |   | `-BinaryOperator 0x299ec8dfc78 <line:521:9, col:19> 'int' '='
    |   |   |-UnaryOperator 0x299ec8dfc28 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
    |   |   | `-ImplicitCastExpr 0x299ec8dfc10 <col:10> 'int *' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x299ec8dfbf0 <col:10> 'int *' lvalue ParmVar 0x299ec8df418 'putype' 'int *'
    |   |   `-ImplicitCastExpr 0x299ec8dfc60 <col:19> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x299ec8dfc40 <col:19> 'int' lvalue Var 0x299ec8df6c0 'utype' 'int'
    |   `-BinaryOperator 0x299ec8dfd38 <line:524:9, col:18> 'int' '='
    |     |-DeclRefExpr 0x299ec8dfcb0 <col:9> 'int' lvalue Var 0x299ec8df6c0 'utype' 'int'
    |     `-ImplicitCastExpr 0x299ec8dfd20 <col:17, col:18> 'int' <LValueToRValue>
    |       `-UnaryOperator 0x299ec8dfd08 <col:17, col:18> 'int' lvalue prefix '*' cannot overflow
    |         `-ImplicitCastExpr 0x299ec8dfcf0 <col:18> 'int *' <LValueToRValue>
    |           `-DeclRefExpr 0x299ec8dfcd0 <col:18> 'int *' lvalue ParmVar 0x299ec8df418 'putype' 'int *'
    |-SwitchStmt 0x299ec8dfe10 <line:526:5, line:603:5>
    | |-ImplicitCastExpr 0x299ec8dfdf8 <line:526:13> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x299ec8dfdd8 <col:13> 'int' lvalue Var 0x299ec8df6c0 'utype' 'int'
    | `-CompoundStmt 0x299ec8de998 <col:20, line:603:5>
    |   |-IfStmt 0x299ec8de080 <line:531:9, line:532:21>
    |   | |-BinaryOperator 0x299ec8e0018 <line:531:13, col:36> 'int' '||'
    |   | | |-BinaryOperator 0x299ec8dff78 <col:13, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'int' '=='
    |   | | | |-ImplicitCastExpr 0x299ec8dff48 <.//openssl//file_jk/before\crypto\asn1\tasn_enc.c:531:13> 'const unsigned char *' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x299ec8dfea0 <col:13> 'const unsigned char *' lvalue Var 0x299ec8df758 'cont' 'const unsigned char *'
    |   | | | `-ImplicitCastExpr 0x299ec8dff60 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const unsigned char *' <BitCast>
    |   | | |   `-ParenExpr 0x299ec8dff28 <col:16, col:25> 'void *'
    |   | | |     `-CStyleCastExpr 0x299ec8dff00 <col:17, col:24> 'void *' <NullToPointer>
    |   | | |       `-IntegerLiteral 0x299ec8dfec0 <col:24> 'int' 0
    |   | | `-BinaryOperator 0x299ec8dfff8 <.//openssl//file_jk/before\crypto\asn1\tasn_enc.c:531:29, col:36> 'int' '=='
    |   | |   |-ImplicitCastExpr 0x299ec8dffe0 <col:29> 'int' <LValueToRValue>
    |   | |   | `-DeclRefExpr 0x299ec8dff98 <col:29> 'int' lvalue Var 0x299ec8df888 'len' 'int'
    |   | |   `-IntegerLiteral 0x299ec8dffb8 <col:36> 'int' 0
    |   | `-ReturnStmt 0x299ec8de070 <line:532:13, col:21>
    |   |   `-UnaryOperator 0x299ec8de058 <col:20, col:21> 'int' prefix '-'
    |   |     `-IntegerLiteral 0x299ec8de030 <col:21> 'int' 1
    |   |-BreakStmt 0x299ec8de098 <line:533:9>
    |   |-BinaryOperator 0x299ec8de160 <line:536:9, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'const unsigned char *' '='
    |   | |-DeclRefExpr 0x299ec8de0a0 <.//openssl//file_jk/before\crypto\asn1\tasn_enc.c:536:9> 'const unsigned char *' lvalue Var 0x299ec8df758 'cont' 'const unsigned char *'
    |   | `-ImplicitCastExpr 0x299ec8de148 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const unsigned char *' <NullToPointer>
    |   |   `-ParenExpr 0x299ec8de128 <col:16, col:25> 'void *'
    |   |     `-CStyleCastExpr 0x299ec8de100 <col:17, col:24> 'void *' <NullToPointer>
    |   |       `-IntegerLiteral 0x299ec8de0c0 <col:24> 'int' 0
    |   |-BinaryOperator 0x299ec8de1c8 <.//openssl//file_jk/before\crypto\asn1\tasn_enc.c:537:9, col:15> 'int' '='
    |   | |-DeclRefExpr 0x299ec8de180 <col:9> 'int' lvalue Var 0x299ec8df888 'len' 'int'
    |   | `-IntegerLiteral 0x299ec8de1a0 <col:15> 'int' 0
    |   |-BreakStmt 0x299ec8de1e8 <line:538:9>
    |   |-IfStmt 0x299ec8de298 <line:542:9, line:543:21>
    |   | |-OpaqueValueExpr 0x299ec8de280 <<invalid sloc>> '_Bool'
    |   | `-ReturnStmt 0x299ec8de270 <col:13, col:21>
    |   |   `-UnaryOperator 0x299ec8de258 <col:20, col:21> 'int' prefix '-'
    |   |     `-IntegerLiteral 0x299ec8de230 <col:21> 'int' 1
    |   |-IfStmt 0x299ec8de410 <line:544:9, line:552:9>
    |   | |-OpaqueValueExpr 0x299ec8de3f8 <<invalid sloc>> '_Bool'
    |   | `-CompoundStmt 0x299ec8de3d8 <line:544:38, line:552:9>
    |   |   |-IfStmt 0x299ec8de340 <line:548:13, line:549:25>
    |   |   | |-OpaqueValueExpr 0x299ec8de328 <<invalid sloc>> '_Bool'
    |   |   | `-ReturnStmt 0x299ec8de318 <col:17, col:25>
    |   |   |   `-UnaryOperator 0x299ec8de300 <col:24, col:25> 'int' prefix '-'
    |   |   |     `-IntegerLiteral 0x299ec8de2d8 <col:25> 'int' 1
    |   |   `-IfStmt 0x299ec8de3c0 <line:550:13, line:551:25>
    |   |     |-OpaqueValueExpr 0x299ec8de3a8 <<invalid sloc>> '_Bool'
    |   |     `-ReturnStmt 0x299ec8de398 <col:17, col:25>
    |   |       `-UnaryOperator 0x299ec8de380 <col:24, col:25> 'int' prefix '-'
    |   |         `-IntegerLiteral 0x299ec8de358 <col:25> 'int' 1
    |   |-BinaryOperator 0x299ec8de4d0 <line:554:9, col:17> 'const unsigned char *' '='
    |   | |-DeclRefExpr 0x299ec8de460 <col:9> 'const unsigned char *' lvalue Var 0x299ec8df758 'cont' 'const unsigned char *'
    |   | `-ImplicitCastExpr 0x299ec8de4b8 <col:16, col:17> 'const unsigned char *' <NoOp>
    |   |   `-UnaryOperator 0x299ec8de4a0 <col:16, col:17> 'unsigned char *' prefix '&' cannot overflow
    |   |     `-DeclRefExpr 0x299ec8de480 <col:17> 'unsigned char' lvalue Var 0x299ec8df7f0 'c' 'unsigned char'
    |   |-BinaryOperator 0x299ec8de538 <line:555:9, col:15> 'int' '='
    |   | |-DeclRefExpr 0x299ec8de4f0 <col:9> 'int' lvalue Var 0x299ec8df888 'len' 'int'
    |   | `-IntegerLiteral 0x299ec8de510 <col:15> 'int' 1
    |   |-BreakStmt 0x299ec8de558 <line:556:9>
    |   |-DefaultStmt 0x299ec8de7e8 <line:585:5, col:12>
    |   | `-NullStmt 0x299ec8de7e0 <col:12>
    |   |-IfStmt 0x299ec8de938 <line:589:9, line:597:9>
    |   | |-OpaqueValueExpr 0x299ec8de920 <<invalid sloc>> '_Bool'
    |   | `-CompoundStmt 0x299ec8de900 <line:590:57, line:597:9>
    |   |   |-IfStmt 0x299ec8de898 <line:591:13, line:594:13>
    |   |   | |-ImplicitCastExpr 0x299ec8de828 <line:591:17> 'unsigned char *' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x299ec8de808 <col:17> 'unsigned char *' lvalue ParmVar 0x299ec8df398 'cout' 'unsigned char *'
    |   |   | `-CompoundStmt 0x299ec8de888 <col:23, line:594:13>
    |   |   `-ReturnStmt 0x299ec8de8f0 <line:596:13, col:21>
    |   |     `-UnaryOperator 0x299ec8de8d8 <col:20, col:21> 'int' prefix '-'
    |   |       `-IntegerLiteral 0x299ec8de8b0 <col:21> 'int' 2
    |   `-BreakStmt 0x299ec8de990 <line:601:9>
    |-IfStmt 0x299ec8dec48 <line:604:5, line:605:31>
    | |-BinaryOperator 0x299ec8dea80 <line:604:9, col:17> 'int' '&&'
    | | |-ImplicitCastExpr 0x299ec8dea50 <col:9> 'unsigned char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x299ec8dea10 <col:9> 'unsigned char *' lvalue ParmVar 0x299ec8df398 'cout' 'unsigned char *'
    | | `-ImplicitCastExpr 0x299ec8dea68 <col:17> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x299ec8dea30 <col:17> 'int' lvalue Var 0x299ec8df888 'len' 'int'
    | `-CallExpr 0x299ec8deb80 <line:605:9, col:31> 'void *'
    |   |-ImplicitCastExpr 0x299ec8deb68 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x299ec8deaa0 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x299ec89c9b8 'memcpy' 'void *(void *, const void *, unsigned long long)'
    |   |-ImplicitCastExpr 0x299ec8debd0 <col:16> 'void *' <BitCast>
    |   | `-ImplicitCastExpr 0x299ec8debb8 <col:16> 'unsigned char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x299ec8deac0 <col:16> 'unsigned char *' lvalue ParmVar 0x299ec8df398 'cout' 'unsigned char *'
    |   |-ImplicitCastExpr 0x299ec8dec00 <col:22> 'const void *' <BitCast>
    |   | `-ImplicitCastExpr 0x299ec8debe8 <col:22> 'const unsigned char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x299ec8deae0 <col:22> 'const unsigned char *' lvalue Var 0x299ec8df758 'cont' 'const unsigned char *'
    |   `-ImplicitCastExpr 0x299ec8dec30 <col:28> 'unsigned long long' <IntegralCast>
    |     `-ImplicitCastExpr 0x299ec8dec18 <col:28> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x299ec8deb00 <col:28> 'int' lvalue Var 0x299ec8df888 'len' 'int'
    `-ReturnStmt 0x299ec8dec98 <line:606:5, col:12>
      `-ImplicitCastExpr 0x299ec8dec80 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x299ec8dec60 <col:12> 'int' lvalue Var 0x299ec8df888 'len' 'int'
