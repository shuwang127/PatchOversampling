TranslationUnitDecl 0x1d239a7fef8 <<invalid sloc>> <invalid sloc> <undeserialized declarations>
|-TypedefDecl 0x1d239a80790 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1d239a80490 '__int128'
|-TypedefDecl 0x1d239a80800 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1d239a804b0 'unsigned __int128'
|-TypedefDecl 0x1d239a80b38 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1d239a808f0 'struct __NSConstantString_tag'
|   `-Record 0x1d239a80858 '__NSConstantString_tag'
|-TypedefDecl 0x1d239a80ba8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1d239a800d0 'unsigned long long'
|-TypedefDecl 0x1d239a80c40 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1d239a80c00 'char *'
|   `-BuiltinType 0x1d239a7ff90 'char'
|-TypedefDecl 0x1d239a80cb0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1d239a80c00 'char *'
|   `-BuiltinType 0x1d239a7ff90 'char'
|-TypedefDecl 0x1d239a80d20 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:35:1, col:26> col:26 ptrdiff_t 'long long'
| `-BuiltinType 0x1d239a80030 'long long'
|-TypedefDecl 0x1d239a80d90 prev 0x1d239a80ba8 <line:46:1, col:23> col:23 size_t 'unsigned long long'
| `-BuiltinType 0x1d239a800d0 'unsigned long long'
|-TypedefDecl 0x1d239a80e18 <line:60:1, col:23> col:23 rsize_t 'unsigned long long'
| `-BuiltinType 0x1d239a800d0 'unsigned long long'
|-TypedefDecl 0x1d239a80e88 <line:74:1, col:24> col:24 wchar_t 'unsigned short'
| `-BuiltinType 0x1d239a80070 'unsigned short'
|-ImportDecl 0x1d23b4cb480 <line:102:1> col:1 implicit _Builtin_stddef_max_align_t
|-FunctionDecl 0x1d23b4cb7e0 <.//openssl//file_jk/before\crypto\asn1/asn1_locl.h:12:1, col:60> col:5 invalid asn1_utctime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x1d23b4cb640 <col:24, col:35> col:35 tm 'struct tm *'
| `-ParmVarDecl 0x1d23b4cb6c0 <col:39, col:59> col:59 invalid d 'const int *'
|-FunctionDecl 0x1d23b4cbbb0 <line:13:1, col:76> col:5 invalid asn1_generalizedtime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x1d23b4cba10 <col:32, col:43> col:43 tm 'struct tm *'
| `-ParmVarDecl 0x1d23b4cba90 <col:47, col:75> col:75 invalid d 'const int *'
|-RecordDecl 0x1d23b4cbc60 <line:17:1, line:38:1> line:17:8 invalid struct asn1_sctx_st definition
| |-FieldDecl 0x1d23b4cbd38 <line:19:5, col:22> col:22 invalid it 'const int *'
| |-FieldDecl 0x1d23b4cbda8 <line:21:5, col:26> col:26 invalid tt 'const int *'
| |-FieldDecl 0x1d23b4cbe18 <line:23:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x1d23b4cbe88 <line:25:5, col:9> col:9 skidx 'int'
| |-FieldDecl 0x1d23b4cbef8 <line:27:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x1d23b4cbf68 <line:29:5, col:17> col:17 sname 'const char *'
| |-FieldDecl 0x1d23b4cbfd8 <col:5, col:25> col:25 fname 'const char *'
| |-FieldDecl 0x1d23b4cc048 <line:31:5, col:9> col:9 prim_type 'int'
| |-FieldDecl 0x1d23b4cc118 <line:33:5, col:18> col:18 invalid field 'int **'
| |-FieldDecl 0x1d23b4cc2e8 <line:35:5, col:35> col:11 scan_cb 'int (*)(int *)'
| `-FieldDecl 0x1d23b4cc358 <line:37:5, col:11> col:11 app_data 'void *'
|-RecordDecl 0x1d23b4cc3b0 <line:40:9, col:16> col:16 struct mime_param_st
|-TypedefDecl 0x1d23b4ce508 <col:1, col:30> col:30 referenced MIME_PARAM 'struct mime_param_st':'struct mime_param_st'
| `-ElaboratedType 0x1d23b4ce4b0 'struct mime_param_st' sugar
|   `-RecordType 0x1d23b4cc450 'struct mime_param_st'
|     `-Record 0x1d23b4cc3b0 'mime_param_st'
|-FunctionDecl 0x1d23b4ce6b0 <line:41:1, col:27> col:1 DEFINE_STACK_OF 'int (MIME_PARAM)'
| `-ParmVarDecl 0x1d23b4ce5b0 <col:17> col:27 'MIME_PARAM':'struct mime_param_st'
|-RecordDecl 0x1d23b4ce7b8 <line:42:9, col:16> col:16 struct mime_header_st
|-TypedefDecl 0x1d23b4ce8c8 <col:1, col:31> col:31 referenced MIME_HEADER 'struct mime_header_st':'struct mime_header_st'
| `-ElaboratedType 0x1d23b4ce870 'struct mime_header_st' sugar
|   `-RecordType 0x1d23b4ce850 'struct mime_header_st'
|     `-Record 0x1d23b4ce7b8 'mime_header_st'
|-FunctionDecl 0x1d23b4cea70 <line:43:1, col:28> col:1 invalid DEFINE_STACK_OF 'int (MIME_HEADER)'
| `-ParmVarDecl 0x1d23b4ce970 <col:17> col:28 'MIME_HEADER':'struct mime_header_st'
|-VarDecl 0x1d23b4cebc0 <line:46:1, col:32> col:20 _asn1_mon 'const char *[12]' extern
|-FunctionDecl 0x1d23b4ceda8 <line:48:1, col:54> col:6 invalid asn1_string_embed_free 'void (int *, int)'
| |-ParmVarDecl 0x1d23b4cec58 <col:29, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x1d23b4cecd8 <col:45, col:49> col:49 embed 'int'
|-FunctionDecl 0x1d23b4cefd0 <line:50:1, col:68> col:5 invalid asn1_get_choice_selector 'int (int **, const int *)'
| |-ParmVarDecl 0x1d23b4cee78 <col:30, col:43> col:43 invalid pval 'int **'
| `-ParmVarDecl 0x1d23b4ceef8 <col:49, col:66> col:66 invalid it 'const int *'
|-FunctionDecl 0x1d23b4cf290 <line:51:1, line:52:49> line:51:5 invalid asn1_set_choice_selector 'int (int **, int, const int *)'
| |-ParmVarDecl 0x1d23b4cf0a0 <col:30, col:43> col:43 invalid pval 'int **'
| |-ParmVarDecl 0x1d23b4cf120 <col:49, col:53> col:53 value 'int'
| `-ParmVarDecl 0x1d23b4cf1a0 <line:52:30, col:47> col:47 invalid it 'const int *'
|-FunctionDecl 0x1d23b4c94a0 <line:54:1, col:75> col:14 invalid asn1_get_field_ptr 'int **(int **, const int *)'
| |-ParmVarDecl 0x1d23b4cf368 <col:33, col:46> col:46 invalid pval 'int **'
| `-ParmVarDecl 0x1d23b4cf3e8 <col:52, col:73> col:73 invalid tt 'const int *'
|-FunctionDecl 0x1d23b4c9760 <line:56:1, line:57:45> line:56:22 invalid asn1_do_adb 'const int *(int **, const int *, int)'
| |-ParmVarDecl 0x1d23b4c9570 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x1d23b4c95f0 <col:53, col:74> col:74 invalid tt 'const int *'
| `-ParmVarDecl 0x1d23b4c9670 <line:57:34, col:38> col:38 nullerr 'int'
|-FunctionDecl 0x1d23b4c99e0 <line:59:1, col:64> col:5 invalid asn1_do_lock 'int (int **, int, const int *)'
| |-ParmVarDecl 0x1d23b4c9838 <col:18, col:31> col:31 invalid pval 'int **'
| |-ParmVarDecl 0x1d23b4c98b8 <col:37, col:41> col:41 op 'int'
| `-ParmVarDecl 0x1d23b4c9938 <col:45, col:62> col:62 invalid it 'const int *'
|-FunctionDecl 0x1d23b4c9c08 <line:61:1, col:58> col:6 invalid asn1_enc_init 'void (int **, const int *)'
| |-ParmVarDecl 0x1d23b4c9ab8 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x1d23b4c9b38 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x1d23b4c9df0 <line:62:1, col:58> col:6 invalid asn1_enc_free 'void (int **, const int *)'
| |-ParmVarDecl 0x1d23b4c9cd8 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x1d23b4c9d58 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x1d23b4ca1a0 <line:63:1, line:64:41> line:63:5 invalid asn1_enc_restore 'int (int *, unsigned char **, int **, const int *)'
| |-ParmVarDecl 0x1d23b4c9eb8 <col:22, col:27> col:27 len 'int *'
| |-ParmVarDecl 0x1d23b4c9f98 <col:32, col:48> col:48 out 'unsigned char **'
| |-ParmVarDecl 0x1d23b4ca020 <col:53, col:66> col:66 invalid pval 'int **'
| `-ParmVarDecl 0x1d23b4ca0a0 <line:64:22, col:39> col:39 invalid it 'const int *'
|-FunctionDecl 0x1d23b5039c0 <line:65:1, line:66:38> line:65:5 invalid asn1_enc_save 'int (int **, const unsigned char *, int, const int *)'
| |-ParmVarDecl 0x1d23b4ca280 <col:19, col:32> col:32 invalid pval 'int **'
| |-ParmVarDecl 0x1d23b4ca330 <col:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x1d23b4ca3b0 <col:63, col:67> col:67 inlen 'int'
| `-ParmVarDecl 0x1d23b5038c0 <line:66:19, col:36> col:36 invalid it 'const int *'
|-FunctionDecl 0x1d23b503c88 <line:68:1, col:76> col:6 invalid asn1_item_embed_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x1d23b503aa0 <col:27, col:40> col:40 invalid pval 'int **'
| |-ParmVarDecl 0x1d23b503b20 <col:46, col:63> col:63 invalid it 'const int *'
| `-ParmVarDecl 0x1d23b503ba0 <col:67, col:71> col:71 embed 'int'
|-FunctionDecl 0x1d23b503f00 <line:69:1, col:75> col:6 invalid asn1_primitive_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x1d23b503d60 <col:26, col:39> col:39 invalid pval 'int **'
| |-ParmVarDecl 0x1d23b503de0 <col:45, col:62> col:62 invalid it 'const int *'
| `-ParmVarDecl 0x1d23b503e60 <col:66, col:70> col:70 embed 'int'
|-FunctionDecl 0x1d23b5040f0 <line:70:1, col:67> col:6 invalid asn1_template_free 'void (int **, const int *)'
| |-ParmVarDecl 0x1d23b503fd8 <col:25, col:38> col:38 invalid pval 'int **'
| `-ParmVarDecl 0x1d23b504058 <col:44, col:65> col:65 invalid tt 'const int *'
|-FunctionDecl 0x1d23b5043e0 <line:72:1, line:73:41> line:72:14 invalid c2i_ASN1_OBJECT 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x1d23b5041c0 <col:30, col:44> col:44 invalid a 'int **'
| |-ParmVarDecl 0x1d23b504278 <col:47, col:69> col:69 pp 'const unsigned char **'
| `-ParmVarDecl 0x1d23b5042f8 <line:73:30, col:35> col:35 length 'long'
|-FunctionDecl 0x1d23b504610 <line:74:1, col:63> col:5 invalid i2c_ASN1_BIT_STRING 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x1d23b5044b0 <col:25, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x1d23b504538 <col:45, col:61> col:61 pp 'unsigned char **'
|-FunctionDecl 0x1d23b4fe870 <line:75:1, line:76:75> line:75:18 invalid c2i_ASN1_BIT_STRING 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x1d23b5046e0 <col:38, col:56> col:56 invalid a 'int **'
| |-ParmVarDecl 0x1d23b504768 <line:76:38, col:60> col:60 pp 'const unsigned char **'
| `-ParmVarDecl 0x1d23b5047e8 <col:64, col:69> col:69 length 'long'
|-FunctionDecl 0x1d23b4fea68 <line:77:1, col:57> col:5 invalid i2c_ASN1_INTEGER 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x1d23b4fe940 <col:22, col:36> col:36 invalid a 'int *'
| `-ParmVarDecl 0x1d23b4fe9c8 <col:39, col:55> col:55 pp 'unsigned char **'
|-FunctionDecl 0x1d23b4fece8 <line:78:1, line:79:43> line:78:15 invalid c2i_ASN1_INTEGER 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x1d23b4feb38 <col:32, col:47> col:47 invalid a 'int **'
| |-ParmVarDecl 0x1d23b4febc0 <col:50, col:72> col:72 pp 'const unsigned char **'
| `-ParmVarDecl 0x1d23b4fec40 <line:79:32, col:37> col:37 length 'long'
|-FunctionDecl 0x1d23b4ff040 <line:82:1, col:79> col:5 invalid c2i_uint64_int 'int (int *, int *, const unsigned char **, long)'
| |-ParmVarDecl 0x1d23b4fedb8 <col:20, col:30> col:30 invalid ret 'int *'
| |-ParmVarDecl 0x1d23b4fee38 <col:35, col:40> col:40 neg 'int *'
| |-ParmVarDecl 0x1d23b4feec0 <col:45, col:67> col:67 pp 'const unsigned char **'
| `-ParmVarDecl 0x1d23b4fef40 <col:71, col:76> col:76 len 'long'
|-FunctionDecl 0x1d23b4ff300 <line:83:1, col:57> col:5 invalid i2c_uint64_int 'int (unsigned char *, int, int)'
| |-ParmVarDecl 0x1d23b4ff118 <col:20, col:35> col:35 p 'unsigned char *'
| |-ParmVarDecl 0x1d23b4ff198 <col:38, col:47> col:47 invalid r 'int'
| `-ParmVarDecl 0x1d23b4ff218 <col:50, col:54> col:54 neg 'int'
|-FunctionDecl 0x1d23b4ff528 <.//openssl//file_jk/before\crypto\asn1\tasn_fre.c:18:1, line:21:1> line:18:6 invalid ASN1_item_free 'void (int *, const int *)'
| |-ParmVarDecl 0x1d23b4ff3d0 <col:21, col:33> col:33 invalid val 'int *'
| |-ParmVarDecl 0x1d23b4ff450 <col:38, col:55> col:55 invalid it 'const int *'
| `-CompoundStmt 0x1d23b4ff618 <line:19:1, line:21:1>
|-FunctionDecl 0x1d23b4ff760 <line:23:1, line:26:1> line:23:6 invalid ASN1_item_ex_free 'void (int **, const int *)'
| |-ParmVarDecl 0x1d23b4ff648 <col:24, col:37> col:37 invalid pval 'int **'
| |-ParmVarDecl 0x1d23b4ff6c8 <col:43, col:60> col:60 invalid it 'const int *'
| `-CompoundStmt 0x1d23b4ff850 <line:24:1, line:26:1>
|-FunctionDecl 0x1d23b4fda20 <line:28:1, line:120:1> line:28:6 invalid asn1_item_embed_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x1d23b4fd880 <col:27, col:40> col:40 invalid pval 'int **'
| |-ParmVarDecl 0x1d23b4fd900 <col:46, col:63> col:63 invalid it 'const int *'
| |-ParmVarDecl 0x1d23b4fd980 <col:67, col:71> col:71 used embed 'int'
| `-CompoundStmt 0x1d23b4ffd10 <line:29:1, line:120:1>
|   |-DeclStmt 0x1d23b4fdbf8 <line:30:5, col:43>
|   | `-VarDecl 0x1d23b4fdb08 <col:5, col:26> col:26 invalid tt 'const int *'
|   |-DeclStmt 0x1d23b4fdc90 <line:31:5, col:32>
|   | `-VarDecl 0x1d23b4fdc28 <col:5, col:30> col:30 invalid ef 'const int *'
|   |-DeclStmt 0x1d23b4fdd28 <line:32:5, col:36>
|   | `-VarDecl 0x1d23b4fdcc0 <col:5, col:21> col:21 invalid aux 'const int *'
|   |-DeclStmt 0x1d23b4fddc0 <line:34:5, col:10>
|   | `-VarDecl 0x1d23b4fdd58 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x1d23b4fde00 <line:36:5, line:37:9>
|   | |-OpaqueValueExpr 0x1d23b4fdde8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1d23b4fddd8 <col:9>
|   `-IfStmt 0x1d23b4fde70 <line:38:5, line:39:9>
|     |-OpaqueValueExpr 0x1d23b4fde58 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x1d23b4fde48 <col:9>
|-FunctionDecl 0x1d23b4ffe88 <line:122:1, line:144:1> line:122:6 invalid asn1_template_free 'void (int **, const int *)'
| |-ParmVarDecl 0x1d23b4ffd70 <col:25, col:38> col:38 invalid pval 'int **'
| |-ParmVarDecl 0x1d23b4ffdf0 <col:44, col:65> col:65 invalid tt 'const int *'
| `-CompoundStmt 0x1d23b5028f0 <line:123:1, line:144:1>
|   |-DeclStmt 0x1d23b4fffd0 <line:124:5, col:44>
|   | `-VarDecl 0x1d23b4fff68 <col:5, col:9> col:9 used embed 'int'
|   |-IfStmt 0x1d23b500048 <line:126:5, line:129:5>
|   | |-ImplicitCastExpr 0x1d23b500020 <line:126:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1d23b4fffe8 <col:9> 'int' lvalue Var 0x1d23b4fff68 'embed' 'int'
|   | `-CompoundStmt 0x1d23b500038 <col:16, line:129:5>
|   `-IfStmt 0x1d23b5028c8 <line:130:5, line:143:5> has_else
|     |-OpaqueValueExpr 0x1d23b5028b0 <<invalid sloc>> '_Bool'
|     |-CompoundStmt 0x1d23b500818 <line:130:40, line:141:5>
|     | `-DeclStmt 0x1d23b500210 <line:132:9, col:14>
|     |   `-VarDecl 0x1d23b5001a8 <col:9, col:13> col:13 used i 'int'
|     `-CompoundStmt 0x1d23b500870 <line:141:12, line:143:5>
`-FunctionDecl 0x1d23b502ad8 <line:146:1, line:208:1> line:146:6 invalid asn1_primitive_free 'void (int **, const int *, int)'
  |-ParmVarDecl 0x1d23b502938 <col:26, col:39> col:39 invalid pval 'int **'
  |-ParmVarDecl 0x1d23b5029b8 <col:45, col:62> col:62 invalid it 'const int *'
  |-ParmVarDecl 0x1d23b502a38 <col:66, col:70> col:70 used embed 'int'
  `-CompoundStmt 0x1d23b503468 <line:147:1, line:208:1>
    |-DeclStmt 0x1d23b502c28 <line:148:5, col:14>
    | `-VarDecl 0x1d23b502bc0 <col:5, col:9> col:9 used utype 'int'
    |-IfStmt 0x1d23b502e50 <line:151:5, line:163:5>
    | |-OpaqueValueExpr 0x1d23b502e38 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x1d23b502e18 <line:151:13, line:163:5>
    |   |-DeclStmt 0x1d23b502cc0 <line:152:9, col:51>
    |   | `-VarDecl 0x1d23b502c58 <col:9, col:37> col:37 invalid pf 'const int *'
    |   `-IfStmt 0x1d23b502df0 <line:154:9, line:162:9> has_else
    |     |-ImplicitCastExpr 0x1d23b502d10 <line:154:13> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x1d23b502cd8 <col:13> 'int' lvalue ParmVar 0x1d23b502a38 'embed' 'int'
    |     |-CompoundStmt 0x1d23b502d80 <col:20, line:159:9>
    |     | `-IfStmt 0x1d23b502d68 <line:155:13, line:158:13>
    |     |   |-OpaqueValueExpr 0x1d23b502d50 <<invalid sloc>> '_Bool'
    |     |   `-CompoundStmt 0x1d23b502d38 <line:155:39, line:158:13>
    |     |     `-ReturnStmt 0x1d23b502d28 <line:157:17>
    |     `-IfStmt 0x1d23b502dd8 <line:159:16, line:162:9>
    |       |-OpaqueValueExpr 0x1d23b502dc0 <<invalid sloc>> '_Bool'
    |       `-CompoundStmt 0x1d23b502da8 <line:159:41, line:162:9>
    |         `-ReturnStmt 0x1d23b502d98 <line:161:13>
    |-IfStmt 0x1d23b5030c8 <line:166:5, line:181:5> has_else
    | |-OpaqueValueExpr 0x1d23b5030b0 <<invalid sloc>> '_Bool'
    | |-CompoundStmt 0x1d23b502ee0 <line:166:14, line:173:5>
    | | `-IfStmt 0x1d23b502ec8 <line:171:9, line:172:13>
    | |   |-OpaqueValueExpr 0x1d23b502eb0 <<invalid sloc>> '_Bool'
    | |   `-ReturnStmt 0x1d23b502ea0 <col:13>
    | `-IfStmt 0x1d23b503088 <line:173:12, line:181:5> has_else
    |   |-OpaqueValueExpr 0x1d23b503070 <<invalid sloc>> '_Bool'
    |   |-CompoundStmt 0x1d23b502fb8 <line:173:49, line:177:5>
    |   | |-BinaryOperator 0x1d23b502f58 <line:174:9, col:18> 'int' '='
    |   | | |-DeclRefExpr 0x1d23b502ef8 <col:9> 'int' lvalue Var 0x1d23b502bc0 'utype' 'int'
    |   | | `-UnaryOperator 0x1d23b502f40 <col:17, col:18> 'int' prefix '-'
    |   | |   `-IntegerLiteral 0x1d23b502f18 <col:18> 'int' 1
    |   | `-IfStmt 0x1d23b502fa0 <line:175:9, line:176:13>
    |   |   |-OpaqueValueExpr 0x1d23b502f88 <<invalid sloc>> '_Bool'
    |   |   `-ReturnStmt 0x1d23b502f78 <col:13>
    |   `-CompoundStmt 0x1d23b503058 <line:177:12, line:181:5>
    |     `-IfStmt 0x1d23b503040 <line:179:9, line:180:13>
    |       |-OpaqueValueExpr 0x1d23b503028 <<invalid sloc>> '_Bool'
    |       `-ReturnStmt 0x1d23b503018 <col:13>
    `-SwitchStmt 0x1d23b503128 <line:183:5, line:206:5>
      |-ImplicitCastExpr 0x1d23b503110 <line:183:13> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x1d23b5030f0 <col:13> 'int' lvalue Var 0x1d23b502bc0 'utype' 'int'
      `-CompoundStmt 0x1d23b5033a0 <col:20, line:206:5>
        |-BreakStmt 0x1d23b503258 <line:186:9>
        |-ReturnStmt 0x1d23b503260 <line:193:9>
        |-BreakStmt 0x1d23b503270 <line:196:9>
        |-BreakStmt 0x1d23b503348 <line:201:9>
        |-DefaultStmt 0x1d23b503378 <line:203:5, col:12>
        | `-NullStmt 0x1d23b503370 <col:12>
        `-BreakStmt 0x1d23b503398 <line:205:9>
