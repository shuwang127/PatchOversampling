TranslationUnitDecl 0x1d73e1a1768 <<invalid sloc>> <invalid sloc> <undeserialized declarations>
|-TypedefDecl 0x1d73e1a2000 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1d73e1a1d00 '__int128'
|-TypedefDecl 0x1d73e1a2070 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1d73e1a1d20 'unsigned __int128'
|-TypedefDecl 0x1d73e1a23a8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1d73e1a2160 'struct __NSConstantString_tag'
|   `-Record 0x1d73e1a20c8 '__NSConstantString_tag'
|-TypedefDecl 0x1d73e1a2418 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1d73e1a1940 'unsigned long long'
|-TypedefDecl 0x1d73e1a24b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1d73e1a2470 'char *'
|   `-BuiltinType 0x1d73e1a1800 'char'
|-TypedefDecl 0x1d73e1a2520 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1d73e1a2470 'char *'
|   `-BuiltinType 0x1d73e1a1800 'char'
|-TypedefDecl 0x1d73e1a2590 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:35:1, col:26> col:26 ptrdiff_t 'long long'
| `-BuiltinType 0x1d73e1a18a0 'long long'
|-TypedefDecl 0x1d73e1a2600 prev 0x1d73e1a2418 <line:46:1, col:23> col:23 size_t 'unsigned long long'
| `-BuiltinType 0x1d73e1a1940 'unsigned long long'
|-TypedefDecl 0x1d73e1a2688 <line:60:1, col:23> col:23 rsize_t 'unsigned long long'
| `-BuiltinType 0x1d73e1a1940 'unsigned long long'
|-TypedefDecl 0x1d73e1a26f8 <line:74:1, col:24> col:24 wchar_t 'unsigned short'
| `-BuiltinType 0x1d73e1a18e0 'unsigned short'
|-ImportDecl 0x1d73fbaef70 <line:102:1> col:1 implicit _Builtin_stddef_max_align_t
|-FunctionDecl 0x1d73fbaf2d0 <.//openssl//file_jk/before\crypto\asn1/asn1_locl.h:12:1, col:60> col:5 invalid asn1_utctime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x1d73fbaf130 <col:24, col:35> col:35 tm 'struct tm *'
| `-ParmVarDecl 0x1d73fbaf1b0 <col:39, col:59> col:59 invalid d 'const int *'
|-FunctionDecl 0x1d73fbaf6a0 <line:13:1, col:76> col:5 invalid asn1_generalizedtime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x1d73fbaf500 <col:32, col:43> col:43 tm 'struct tm *'
| `-ParmVarDecl 0x1d73fbaf580 <col:47, col:75> col:75 invalid d 'const int *'
|-RecordDecl 0x1d73fbaf750 <line:17:1, line:38:1> line:17:8 invalid struct asn1_sctx_st definition
| |-FieldDecl 0x1d73fbaf828 <line:19:5, col:22> col:22 invalid it 'const int *'
| |-FieldDecl 0x1d73fbaf898 <line:21:5, col:26> col:26 invalid tt 'const int *'
| |-FieldDecl 0x1d73fbaf908 <line:23:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x1d73fbaf978 <line:25:5, col:9> col:9 skidx 'int'
| |-FieldDecl 0x1d73fbaf9e8 <line:27:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x1d73fbafa58 <line:29:5, col:17> col:17 sname 'const char *'
| |-FieldDecl 0x1d73fbafac8 <col:5, col:25> col:25 fname 'const char *'
| |-FieldDecl 0x1d73fbafb38 <line:31:5, col:9> col:9 prim_type 'int'
| |-FieldDecl 0x1d73fbafc08 <line:33:5, col:18> col:18 invalid field 'int **'
| |-FieldDecl 0x1d73fbafdd8 <line:35:5, col:35> col:11 scan_cb 'int (*)(int *)'
| `-FieldDecl 0x1d73fbafe48 <line:37:5, col:11> col:11 app_data 'void *'
|-RecordDecl 0x1d73fbafea0 <line:40:9, col:16> col:16 struct mime_param_st
|-TypedefDecl 0x1d73fbadfb8 <col:1, col:30> col:30 referenced MIME_PARAM 'struct mime_param_st':'struct mime_param_st'
| `-ElaboratedType 0x1d73fbadf60 'struct mime_param_st' sugar
|   `-RecordType 0x1d73fbaff40 'struct mime_param_st'
|     `-Record 0x1d73fbafea0 'mime_param_st'
|-FunctionDecl 0x1d73fbae160 <line:41:1, col:27> col:1 DEFINE_STACK_OF 'int (MIME_PARAM)'
| `-ParmVarDecl 0x1d73fbae060 <col:17> col:27 'MIME_PARAM':'struct mime_param_st'
|-RecordDecl 0x1d73fbae268 <line:42:9, col:16> col:16 struct mime_header_st
|-TypedefDecl 0x1d73fbae378 <col:1, col:31> col:31 referenced MIME_HEADER 'struct mime_header_st':'struct mime_header_st'
| `-ElaboratedType 0x1d73fbae320 'struct mime_header_st' sugar
|   `-RecordType 0x1d73fbae300 'struct mime_header_st'
|     `-Record 0x1d73fbae268 'mime_header_st'
|-FunctionDecl 0x1d73fbae520 <line:43:1, col:28> col:1 invalid DEFINE_STACK_OF 'int (MIME_HEADER)'
| `-ParmVarDecl 0x1d73fbae420 <col:17> col:28 'MIME_HEADER':'struct mime_header_st'
|-VarDecl 0x1d73fbae670 <line:46:1, col:32> col:20 _asn1_mon 'const char *[12]' extern
|-FunctionDecl 0x1d73fbae858 <line:48:1, col:54> col:6 invalid asn1_string_embed_free 'void (int *, int)'
| |-ParmVarDecl 0x1d73fbae708 <col:29, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x1d73fbae788 <col:45, col:49> col:49 embed 'int'
|-FunctionDecl 0x1d73fbaea80 <line:50:1, col:68> col:5 invalid asn1_get_choice_selector 'int (int **, const int *)'
| |-ParmVarDecl 0x1d73fbae928 <col:30, col:43> col:43 invalid pval 'int **'
| `-ParmVarDecl 0x1d73fbae9a8 <col:49, col:66> col:66 invalid it 'const int *'
|-FunctionDecl 0x1d73fbaed40 <line:51:1, line:52:49> line:51:5 invalid asn1_set_choice_selector 'int (int **, int, const int *)'
| |-ParmVarDecl 0x1d73fbaeb50 <col:30, col:43> col:43 invalid pval 'int **'
| |-ParmVarDecl 0x1d73fbaebd0 <col:49, col:53> col:53 value 'int'
| `-ParmVarDecl 0x1d73fbaec50 <line:52:30, col:47> col:47 invalid it 'const int *'
|-FunctionDecl 0x1d73fbb0fd0 <line:54:1, col:75> col:14 invalid asn1_get_field_ptr 'int **(int **, const int *)'
| |-ParmVarDecl 0x1d73fbaee18 <col:33, col:46> col:46 invalid pval 'int **'
| `-ParmVarDecl 0x1d73fbaee98 <col:52, col:73> col:73 invalid tt 'const int *'
|-FunctionDecl 0x1d73fbb1290 <line:56:1, line:57:45> line:56:22 invalid asn1_do_adb 'const int *(int **, const int *, int)'
| |-ParmVarDecl 0x1d73fbb10a0 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x1d73fbb1120 <col:53, col:74> col:74 invalid tt 'const int *'
| `-ParmVarDecl 0x1d73fbb11a0 <line:57:34, col:38> col:38 nullerr 'int'
|-FunctionDecl 0x1d73fbb1510 <line:59:1, col:64> col:5 invalid asn1_do_lock 'int (int **, int, const int *)'
| |-ParmVarDecl 0x1d73fbb1368 <col:18, col:31> col:31 invalid pval 'int **'
| |-ParmVarDecl 0x1d73fbb13e8 <col:37, col:41> col:41 op 'int'
| `-ParmVarDecl 0x1d73fbb1468 <col:45, col:62> col:62 invalid it 'const int *'
|-FunctionDecl 0x1d73fbb1738 <line:61:1, col:58> col:6 invalid asn1_enc_init 'void (int **, const int *)'
| |-ParmVarDecl 0x1d73fbb15e8 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x1d73fbb1668 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x1d73fbb1920 <line:62:1, col:58> col:6 invalid asn1_enc_free 'void (int **, const int *)'
| |-ParmVarDecl 0x1d73fbb1808 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x1d73fbb1888 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x1d73fbb1cd0 <line:63:1, line:64:41> line:63:5 invalid asn1_enc_restore 'int (int *, unsigned char **, int **, const int *)'
| |-ParmVarDecl 0x1d73fbb19e8 <col:22, col:27> col:27 len 'int *'
| |-ParmVarDecl 0x1d73fbb1ac8 <col:32, col:48> col:48 out 'unsigned char **'
| |-ParmVarDecl 0x1d73fbb1b50 <col:53, col:66> col:66 invalid pval 'int **'
| `-ParmVarDecl 0x1d73fbb1bd0 <line:64:22, col:39> col:39 invalid it 'const int *'
|-FunctionDecl 0x1d73fbe2760 <line:65:1, line:66:38> line:65:5 invalid asn1_enc_save 'int (int **, const unsigned char *, int, const int *)'
| |-ParmVarDecl 0x1d73fbb1db0 <col:19, col:32> col:32 invalid pval 'int **'
| |-ParmVarDecl 0x1d73fbb1e60 <col:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x1d73fbb1ee0 <col:63, col:67> col:67 inlen 'int'
| `-ParmVarDecl 0x1d73fbe2660 <line:66:19, col:36> col:36 invalid it 'const int *'
|-FunctionDecl 0x1d73fbe2a28 <line:68:1, col:76> col:6 invalid asn1_item_embed_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x1d73fbe2840 <col:27, col:40> col:40 invalid pval 'int **'
| |-ParmVarDecl 0x1d73fbe28c0 <col:46, col:63> col:63 invalid it 'const int *'
| `-ParmVarDecl 0x1d73fbe2940 <col:67, col:71> col:71 embed 'int'
|-FunctionDecl 0x1d73fbe2ca0 <line:69:1, col:75> col:6 invalid asn1_primitive_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x1d73fbe2b00 <col:26, col:39> col:39 invalid pval 'int **'
| |-ParmVarDecl 0x1d73fbe2b80 <col:45, col:62> col:62 invalid it 'const int *'
| `-ParmVarDecl 0x1d73fbe2c00 <col:66, col:70> col:70 embed 'int'
|-FunctionDecl 0x1d73fbe2e90 <line:70:1, col:67> col:6 invalid asn1_template_free 'void (int **, const int *)'
| |-ParmVarDecl 0x1d73fbe2d78 <col:25, col:38> col:38 invalid pval 'int **'
| `-ParmVarDecl 0x1d73fbe2df8 <col:44, col:65> col:65 invalid tt 'const int *'
|-FunctionDecl 0x1d73fbe3180 <line:72:1, line:73:41> line:72:14 invalid c2i_ASN1_OBJECT 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x1d73fbe2f60 <col:30, col:44> col:44 invalid a 'int **'
| |-ParmVarDecl 0x1d73fbe3018 <col:47, col:69> col:69 pp 'const unsigned char **'
| `-ParmVarDecl 0x1d73fbe3098 <line:73:30, col:35> col:35 length 'long'
|-FunctionDecl 0x1d73fbe33b0 <line:74:1, col:63> col:5 invalid i2c_ASN1_BIT_STRING 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x1d73fbe3250 <col:25, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x1d73fbe32d8 <col:45, col:61> col:61 pp 'unsigned char **'
|-FunctionDecl 0x1d73fbe0640 <line:75:1, line:76:75> line:75:18 invalid c2i_ASN1_BIT_STRING 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x1d73fbe3480 <col:38, col:56> col:56 invalid a 'int **'
| |-ParmVarDecl 0x1d73fbe3508 <line:76:38, col:60> col:60 pp 'const unsigned char **'
| `-ParmVarDecl 0x1d73fbe3588 <col:64, col:69> col:69 length 'long'
|-FunctionDecl 0x1d73fbe0838 <line:77:1, col:57> col:5 invalid i2c_ASN1_INTEGER 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x1d73fbe0710 <col:22, col:36> col:36 invalid a 'int *'
| `-ParmVarDecl 0x1d73fbe0798 <col:39, col:55> col:55 pp 'unsigned char **'
|-FunctionDecl 0x1d73fbe0ab8 <line:78:1, line:79:43> line:78:15 invalid c2i_ASN1_INTEGER 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x1d73fbe0908 <col:32, col:47> col:47 invalid a 'int **'
| |-ParmVarDecl 0x1d73fbe0990 <col:50, col:72> col:72 pp 'const unsigned char **'
| `-ParmVarDecl 0x1d73fbe0a10 <line:79:32, col:37> col:37 length 'long'
|-FunctionDecl 0x1d73fbe0e10 <line:82:1, col:79> col:5 invalid c2i_uint64_int 'int (int *, int *, const unsigned char **, long)'
| |-ParmVarDecl 0x1d73fbe0b88 <col:20, col:30> col:30 invalid ret 'int *'
| |-ParmVarDecl 0x1d73fbe0c08 <col:35, col:40> col:40 neg 'int *'
| |-ParmVarDecl 0x1d73fbe0c90 <col:45, col:67> col:67 pp 'const unsigned char **'
| `-ParmVarDecl 0x1d73fbe0d10 <col:71, col:76> col:76 len 'long'
|-FunctionDecl 0x1d73fbe10d0 <line:83:1, col:57> col:5 invalid i2c_uint64_int 'int (unsigned char *, int, int)'
| |-ParmVarDecl 0x1d73fbe0ee8 <col:20, col:35> col:35 p 'unsigned char *'
| |-ParmVarDecl 0x1d73fbe0f68 <col:38, col:47> col:47 invalid r 'int'
| `-ParmVarDecl 0x1d73fbe0fe8 <col:50, col:54> col:54 neg 'int'
|-VarDecl 0x1d73fbe11a0 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:27:1, col:18> col:18 invalid default_pctx 'int' static
|-FunctionDecl 0x1d73fbe1370 <line:35:1, line:45:1> line:35:12 invalid ASN1_PCTX_new 'int *(void)'
| `-CompoundStmt 0x1d73fbe3850 <line:36:1, line:45:1>
|   `-IfStmt 0x1d73fbe3838 <line:40:5, line:43:5>
|     |-OpaqueValueExpr 0x1d73fbe3820 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x1d73fbe3808 <line:40:22, line:43:5>
|       `-ReturnStmt 0x1d73fbe37f8 <line:42:9, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25>
|         `-ImplicitCastExpr 0x1d73fbe37e0 <col:16, col:25> 'int *' <NullToPointer>
|           `-ParenExpr 0x1d73fbe37c0 <col:16, col:25> 'void *'
|             `-CStyleCastExpr 0x1d73fbe3798 <col:17, col:24> 'void *' <NullToPointer>
|               `-IntegerLiteral 0x1d73fbe3758 <col:24> 'int' 0
|-FunctionDecl 0x1d73fbe3948 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:47:1, line:50:1> line:47:6 invalid ASN1_PCTX_free 'void (int *)'
| |-ParmVarDecl 0x1d73fbe3880 <col:21, col:32> col:32 invalid p 'int *'
| `-CompoundStmt 0x1d73fbe3b18 <line:48:1, line:50:1>
|-FunctionDecl 0x1d73fbe3c10 <line:52:1, line:55:1> line:52:15 invalid ASN1_PCTX_get_flags 'unsigned long (const int *)'
| |-ParmVarDecl 0x1d73fbe3b40 <col:35, col:52> col:52 invalid p 'const int *'
| `-CompoundStmt 0x1d73fbe3cd0 <line:53:1, line:55:1>
|-FunctionDecl 0x1d73fbe3e48 <line:57:1, line:60:1> line:57:6 invalid ASN1_PCTX_set_flags 'void (int *, unsigned long)'
| |-ParmVarDecl 0x1d73fbe3cf8 <col:26, col:37> col:37 invalid p 'int *'
| |-ParmVarDecl 0x1d73fbe3d78 <col:40, col:54> col:54 used flags 'unsigned long'
| `-CompoundStmt 0x1d73fbe3f48 <line:58:1, line:60:1>
|-FunctionDecl 0x1d73fbe4008 <line:62:1, line:65:1> line:62:15 invalid ASN1_PCTX_get_nm_flags 'unsigned long (const int *)'
| |-ParmVarDecl 0x1d73fbe3f70 <col:38, col:55> col:55 invalid p 'const int *'
| `-CompoundStmt 0x1d73fbe40c8 <line:63:1, line:65:1>
|-FunctionDecl 0x1d73fbe4208 <line:67:1, line:70:1> line:67:6 invalid ASN1_PCTX_set_nm_flags 'void (int *, unsigned long)'
| |-ParmVarDecl 0x1d73fbe40f0 <col:29, col:40> col:40 invalid p 'int *'
| |-ParmVarDecl 0x1d73fbe4170 <col:43, col:57> col:57 used flags 'unsigned long'
| `-CompoundStmt 0x1d73fbe4308 <line:68:1, line:70:1>
|-FunctionDecl 0x1d73fbe43c8 <line:72:1, line:75:1> line:72:15 invalid ASN1_PCTX_get_cert_flags 'unsigned long (const int *)'
| |-ParmVarDecl 0x1d73fbe4330 <col:40, col:57> col:57 invalid p 'const int *'
| `-CompoundStmt 0x1d73fbe4488 <line:73:1, line:75:1>
|-FunctionDecl 0x1d73fbe45c8 <line:77:1, line:80:1> line:77:6 invalid ASN1_PCTX_set_cert_flags 'void (int *, unsigned long)'
| |-ParmVarDecl 0x1d73fbe44b0 <col:31, col:42> col:42 invalid p 'int *'
| |-ParmVarDecl 0x1d73fbe4530 <col:45, col:59> col:59 used flags 'unsigned long'
| `-CompoundStmt 0x1d73fbe46e0 <line:78:1, line:80:1>
|-FunctionDecl 0x1d73fbe47a0 <line:82:1, line:85:1> line:82:15 invalid ASN1_PCTX_get_oid_flags 'unsigned long (const int *)'
| |-ParmVarDecl 0x1d73fbe4708 <col:39, col:56> col:56 invalid p 'const int *'
| `-CompoundStmt 0x1d73fbe4860 <line:83:1, line:85:1>
|-FunctionDecl 0x1d73fbe49a0 <line:87:1, line:90:1> line:87:6 invalid ASN1_PCTX_set_oid_flags 'void (int *, unsigned long)'
| |-ParmVarDecl 0x1d73fbe4888 <col:30, col:41> col:41 invalid p 'int *'
| |-ParmVarDecl 0x1d73fbe4908 <col:44, col:58> col:58 used flags 'unsigned long'
| `-CompoundStmt 0x1d73fbe4aa0 <line:88:1, line:90:1>
|-FunctionDecl 0x1d73fbe4b60 <line:92:1, line:95:1> line:92:15 invalid ASN1_PCTX_get_str_flags 'unsigned long (const int *)'
| |-ParmVarDecl 0x1d73fbe4ac8 <col:39, col:56> col:56 invalid p 'const int *'
| `-CompoundStmt 0x1d73fbe4c20 <line:93:1, line:95:1>
|-FunctionDecl 0x1d73fbe4d60 <line:97:1, line:100:1> line:97:6 invalid ASN1_PCTX_set_str_flags 'void (int *, unsigned long)'
| |-ParmVarDecl 0x1d73fbe4c48 <col:30, col:41> col:41 invalid p 'int *'
| |-ParmVarDecl 0x1d73fbe4cc8 <col:44, col:58> col:58 used flags 'unsigned long'
| `-CompoundStmt 0x1d73fbe4e60 <line:98:1, line:100:1>
|-FunctionDecl 0x1d73fbe5350 <line:104:1, line:107:64> line:104:12 invalid asn1_item_print_ctx 'int (int *, int **, int, const int *, const char *, const char *, int, const int *)' static
| |-ParmVarDecl 0x1d73fbe4e88 <col:32, col:37> col:37 invalid out 'int *'
| |-ParmVarDecl 0x1d73fbe4f10 <col:42, col:55> col:55 invalid fld 'int **'
| |-ParmVarDecl 0x1d73fbe4f90 <col:60, col:64> col:64 indent 'int'
| |-ParmVarDecl 0x1d73fbe5010 <line:105:32, col:49> col:49 invalid it 'const int *'
| |-ParmVarDecl 0x1d73fbe5090 <line:106:32, col:44> col:44 fname 'const char *'
| |-ParmVarDecl 0x1d73fbe5110 <col:51, col:63> col:63 sname 'const char *'
| |-ParmVarDecl 0x1d73fbe5190 <line:107:32, col:36> col:36 nohdr 'int'
| `-ParmVarDecl 0x1d73fbe5210 <col:43, col:60> col:60 invalid pctx 'const int *'
|-FunctionDecl 0x1d73fbdd720 <line:109:1, line:110:75> line:109:12 invalid asn1_template_print_ctx 'int (int *, int **, int, const int *, const int *)' static
| |-ParmVarDecl 0x1d73fbe5448 <col:36, col:41> col:41 invalid out 'int *'
| |-ParmVarDecl 0x1d73fbe54d0 <col:46, col:59> col:59 invalid fld 'int **'
| |-ParmVarDecl 0x1d73fbe5550 <col:64, col:68> col:68 indent 'int'
| |-ParmVarDecl 0x1d73fbe55d0 <line:110:29, col:50> col:50 invalid tt 'const int *'
| `-ParmVarDecl 0x1d73fbdd610 <col:54, col:71> col:71 invalid pctx 'const int *'
|-FunctionDecl 0x1d73fbddc30 <line:112:1, line:115:54> line:112:12 invalid asn1_primitive_print 'int (int *, int **, const int *, int, const char *, const char *, const int *)' static
| |-ParmVarDecl 0x1d73fbdd800 <col:33, col:38> col:38 invalid out 'int *'
| |-ParmVarDecl 0x1d73fbdd888 <col:43, col:56> col:56 invalid fld 'int **'
| |-ParmVarDecl 0x1d73fbdd908 <line:113:33, col:50> col:50 invalid it 'const int *'
| |-ParmVarDecl 0x1d73fbdd988 <col:54, col:58> col:58 indent 'int'
| |-ParmVarDecl 0x1d73fbdda08 <line:114:33, col:45> col:45 fname 'const char *'
| |-ParmVarDecl 0x1d73fbdda88 <col:52, col:64> col:64 sname 'const char *'
| `-ParmVarDecl 0x1d73fbddb08 <line:115:33, col:50> col:50 invalid pctx 'const int *'
|-FunctionDecl 0x1d73fbde030 <line:117:1, line:119:51> line:117:12 invalid asn1_print_fsname 'int (int *, int, const char *, const char *, const int *)' static
| |-ParmVarDecl 0x1d73fbddd20 <col:30, col:35> col:35 invalid out 'int *'
| |-ParmVarDecl 0x1d73fbddda0 <col:40, col:44> col:44 indent 'int'
| |-ParmVarDecl 0x1d73fbdde20 <line:118:30, col:42> col:42 fname 'const char *'
| |-ParmVarDecl 0x1d73fbddea0 <col:49, col:61> col:61 sname 'const char *'
| `-ParmVarDecl 0x1d73fbddf20 <line:119:30, col:47> col:47 invalid pctx 'const int *'
|-FunctionDecl 0x1d73fbde420 <line:121:1, line:132:1> line:121:5 invalid ASN1_item_print 'int (int *, int *, int, const int *, const int *)'
| |-ParmVarDecl 0x1d73fbde110 <col:21, col:26> col:26 invalid out 'int *'
| |-ParmVarDecl 0x1d73fbde190 <col:31, col:43> col:43 invalid ifld 'int *'
| |-ParmVarDecl 0x1d73fbde210 <col:49, col:53> col:53 used indent 'int'
| |-ParmVarDecl 0x1d73fbde290 <line:122:21, col:38> col:38 invalid it 'const int *'
| |-ParmVarDecl 0x1d73fbde310 <col:42, col:59> col:59 invalid pctx 'const int *'
| `-CompoundStmt 0x1d73fbe5918 <line:123:1, line:132:1>
|   |-DeclStmt 0x1d73fbde580 <line:124:5, col:22>
|   | `-VarDecl 0x1d73fbde518 <col:5, col:17> col:17 used sname 'const char *'
|   `-IfStmt 0x1d73fbe57e8 <line:127:5, line:130:9> has_else
|     |-OpaqueValueExpr 0x1d73fbe57d0 <<invalid sloc>> '_Bool'
|     |-BinaryOperator 0x1d73fbe5788 <line:128:9, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'const char *' '='
|     | |-DeclRefExpr 0x1d73fbe56b0 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:128:9> 'const char *' lvalue Var 0x1d73fbde518 'sname' 'const char *'
|     | `-ImplicitCastExpr 0x1d73fbe5770 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const char *' <NullToPointer>
|     |   `-ParenExpr 0x1d73fbe5750 <col:16, col:25> 'void *'
|     |     `-CStyleCastExpr 0x1d73fbe5728 <col:17, col:24> 'void *' <NullToPointer>
|     |       `-IntegerLiteral 0x1d73fbe56e8 <col:24> 'int' 0
|     `-NullStmt 0x1d73fbe57c8 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:130:9>
|-FunctionDecl 0x1d73fbe5da8 <line:134:1, line:262:1> line:134:12 invalid asn1_item_print_ctx 'int (int *, int **, int, const int *, const char *, const char *, int, const int *)' static
| |-ParmVarDecl 0x1d73fbe5950 <col:32, col:37> col:37 invalid out 'int *'
| |-ParmVarDecl 0x1d73fbe59d8 <col:42, col:55> col:55 invalid fld 'int **'
| |-ParmVarDecl 0x1d73fbe5a58 <col:60, col:64> col:64 used indent 'int'
| |-ParmVarDecl 0x1d73fbe5ad8 <line:135:32, col:49> col:49 invalid it 'const int *'
| |-ParmVarDecl 0x1d73fbe5b58 <line:136:32, col:44> col:44 used fname 'const char *'
| |-ParmVarDecl 0x1d73fbe5bd8 <col:51, col:63> col:63 used sname 'const char *'
| |-ParmVarDecl 0x1d73fbe5c58 <line:137:32, col:36> col:36 used nohdr 'int'
| |-ParmVarDecl 0x1d73fbe5cd8 <col:43, col:60> col:60 invalid pctx 'const int *'
| `-CompoundStmt 0x1d73fbeb1f8 <line:138:1, line:262:1>
|   |-DeclStmt 0x1d73fbe5f20 <line:139:5, col:28>
|   | `-VarDecl 0x1d73fbe5eb8 <col:5, col:26> col:26 invalid tt 'const int *'
|   |-DeclStmt 0x1d73fbe5fb8 <line:140:5, col:32>
|   | `-VarDecl 0x1d73fbe5f50 <col:5, col:30> col:30 invalid ef 'const int *'
|   |-DeclStmt 0x1d73fbe6050 <line:142:5, col:36>
|   | `-VarDecl 0x1d73fbe5fe8 <col:5, col:21> col:21 invalid aux 'const int *'
|   |-DeclStmt 0x1d73fbe60e8 <line:145:5, col:10>
|   | `-VarDecl 0x1d73fbe6080 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x1d73fbe6190 <line:146:5, line:152:9> has_else
|   | |-OpaqueValueExpr 0x1d73fbe6178 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x1d73fbe6138 <line:146:30, line:151:5>
|   | `-NullStmt 0x1d73fbe6170 <line:152:9>
|   |-IfStmt 0x1d73fbe6660 <line:154:4, line:163:5>
|   | |-OpaqueValueExpr 0x1d73fbe6648 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1d73fbe6628 <line:155:59, line:163:5>
|   |   |-IfStmt 0x1d73fbe65d8 <line:156:9, line:161:9>
|   |   | |-OpaqueValueExpr 0x1d73fbe65c0 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x1d73fbe65a0 <line:156:56, line:161:9>
|   |   |   |-IfStmt 0x1d73fbe6388 <line:157:13, line:158:24>
|   |   |   | |-OpaqueValueExpr 0x1d73fbe6370 <<invalid sloc>> '_Bool'
|   |   |   | `-ReturnStmt 0x1d73fbe6360 <col:17, col:24>
|   |   |   |   `-IntegerLiteral 0x1d73fbe6338 <col:24> 'int' 0
|   |   |   `-IfStmt 0x1d73fbe6588 <line:159:13, line:160:24>
|   |   |     |-OpaqueValueExpr 0x1d73fbe6570 <<invalid sloc>> '_Bool'
|   |   |     `-ReturnStmt 0x1d73fbe6560 <col:17, col:24>
|   |   |       `-IntegerLiteral 0x1d73fbe6538 <col:24> 'int' 0
|   |   `-ReturnStmt 0x1d73fbe6618 <line:162:9, col:16>
|   |     `-IntegerLiteral 0x1d73fbe65f0 <col:16> 'int' 1
|   `-ReturnStmt 0x1d73fbeb1e8 <line:261:5, col:12>
|     `-IntegerLiteral 0x1d73fbeb1c0 <col:12> 'int' 1
|-FunctionDecl 0x1d73fbeb518 <line:264:1, line:328:1> line:264:12 invalid asn1_template_print_ctx 'int (int *, int **, int, const int *, const int *)' static
| |-ParmVarDecl 0x1d73fbeb258 <col:36, col:41> col:41 invalid out 'int *'
| |-ParmVarDecl 0x1d73fbeb2e0 <col:46, col:59> col:59 invalid fld 'int **'
| |-ParmVarDecl 0x1d73fbeb360 <col:64, col:68> col:68 used indent 'int'
| |-ParmVarDecl 0x1d73fbeb3e0 <line:265:29, col:50> col:50 invalid tt 'const int *'
| |-ParmVarDecl 0x1d73fbeb460 <col:54, col:71> col:71 invalid pctx 'const int *'
| `-CompoundStmt 0x1d73fbebfe0 <line:266:1, line:328:1>
|   |-DeclStmt 0x1d73fbe7730 <line:267:5, col:17>
|   | |-VarDecl 0x1d73fbeb610 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x1d73fbe76b0 <col:5, col:12> col:12 used flags 'int'
|   |-DeclStmt 0x1d73fbe7860 <line:268:5, col:30>
|   | |-VarDecl 0x1d73fbe7760 <col:5, col:17> col:17 used sname 'const char *'
|   | `-VarDecl 0x1d73fbe77e0 <col:5, col:25> col:25 used fname 'const char *'
|   |-IfStmt 0x1d73fbe7af8 <line:271:5, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> has_else
|   | |-OpaqueValueExpr 0x1d73fbe7ae0 <<invalid sloc>> '_Bool'
|   | |-NullStmt 0x1d73fbe7ad8 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:272:9>
|   | `-BinaryOperator 0x1d73fbe7ab8 <line:274:9, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'const char *' '='
|   |   |-DeclRefExpr 0x1d73fbe79f8 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:274:9> 'const char *' lvalue Var 0x1d73fbe7760 'sname' 'const char *'
|   |   `-ImplicitCastExpr 0x1d73fbe7aa0 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const char *' <NullToPointer>
|   |     `-ParenExpr 0x1d73fbe7a80 <col:16, col:25> 'void *'
|   |       `-CStyleCastExpr 0x1d73fbe7a58 <col:17, col:24> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1d73fbe7a18 <col:24> 'int' 0
|   |-IfStmt 0x1d73fbe7c58 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:275:5, line:278:9> has_else
|   | |-OpaqueValueExpr 0x1d73fbe7c40 <<invalid sloc>> '_Bool'
|   | |-BinaryOperator 0x1d73fbe7bf8 <line:276:9, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'const char *' '='
|   | | |-DeclRefExpr 0x1d73fbe7b20 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:276:9> 'const char *' lvalue Var 0x1d73fbe77e0 'fname' 'const char *'
|   | | `-ImplicitCastExpr 0x1d73fbe7be0 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const char *' <NullToPointer>
|   | |   `-ParenExpr 0x1d73fbe7bc0 <col:16, col:25> 'void *'
|   | |     `-CStyleCastExpr 0x1d73fbe7b98 <col:17, col:24> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1d73fbe7b58 <col:24> 'int' 0
|   | `-NullStmt 0x1d73fbe7c38 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:278:9>
|   |-IfStmt 0x1d73fbe7cc8 <line:284:5, line:287:5>
|   | |-OpaqueValueExpr 0x1d73fbe7cb0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1d73fbe7ca0 <line:284:34, line:287:5>
|   `-IfStmt 0x1d73fbebf20 <line:289:5, line:325:5>
|     |-OpaqueValueExpr 0x1d73fbebf08 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x1d73fbebed0 <line:289:36, line:325:5>
|       |-DeclStmt 0x1d73fbe7d80 <line:290:9, col:20>
|       | `-VarDecl 0x1d73fbe7d18 <col:9, col:15> col:15 used tname 'char *'
|       |-IfStmt 0x1d73fbe83d8 <line:295:9, line:306:9>
|       | |-ImplicitCastExpr 0x1d73fbe7ec8 <line:295:13> 'const char *' <LValueToRValue>
|       | | `-DeclRefExpr 0x1d73fbe7ea8 <col:13> 'const char *' lvalue Var 0x1d73fbe77e0 'fname' 'const char *'
|       | `-CompoundStmt 0x1d73fbe83c0 <col:20, line:306:9>
|       |   `-IfStmt 0x1d73fbe8398 <line:296:13, line:305:24> has_else
|       |     |-OpaqueValueExpr 0x1d73fbe8380 <<invalid sloc>> '_Bool'
|       |     |-CompoundStmt 0x1d73fbe8200 <line:296:58, line:304:13>
|       |     | |-IfStmt 0x1d73fbe8058 <line:297:17, line:300:29> has_else
|       |     | | |-OpaqueValueExpr 0x1d73fbe8040 <<invalid sloc>> '_Bool'
|       |     | | |-BinaryOperator 0x1d73fbe7f70 <line:298:21, col:29> 'char *' '='
|       |     | | | |-DeclRefExpr 0x1d73fbe7f00 <col:21> 'char *' lvalue Var 0x1d73fbe7d18 'tname' 'char *'
|       |     | | | `-ImplicitCastExpr 0x1d73fbe7f58 <col:29> 'char *' <ArrayToPointerDecay>
|       |     | | |   `-StringLiteral 0x1d73fbe7f38 <col:29> 'char [4]' lvalue "SET"
|       |     | | `-BinaryOperator 0x1d73fbe8020 <line:300:21, col:29> 'char *' '='
|       |     | |   |-DeclRefExpr 0x1d73fbe7f90 <col:21> 'char *' lvalue Var 0x1d73fbe7d18 'tname' 'char *'
|       |     | |   `-ImplicitCastExpr 0x1d73fbe8008 <col:29> 'char *' <ArrayToPointerDecay>
|       |     | |     `-StringLiteral 0x1d73fbe7fe8 <col:29> 'char [9]' lvalue "SEQUENCE"
|       |     | `-IfStmt 0x1d73fbe81e8 <line:301:17, line:303:28>
|       |     |   |-OpaqueValueExpr 0x1d73fbe81d0 <<invalid sloc>> '_Bool'
|       |     |   `-ReturnStmt 0x1d73fbe81c0 <col:21, col:28>
|       |     |     `-IntegerLiteral 0x1d73fbe8198 <col:28> 'int' 0
|       |     `-IfStmt 0x1d73fbe8368 <line:304:20, line:305:24>
|       |       |-OpaqueValueExpr 0x1d73fbe8350 <<invalid sloc>> '_Bool'
|       |       `-ReturnStmt 0x1d73fbe8340 <col:17, col:24>
|       |         `-IntegerLiteral 0x1d73fbe8318 <col:24> 'int' 0
|       |-IfStmt 0x1d73fbebd30 <line:318:9, line:319:20>
|       | |-OpaqueValueExpr 0x1d73fbebd18 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x1d73fbebd08 <col:13, col:20>
|       |   `-IntegerLiteral 0x1d73fbebce0 <col:20> 'int' 0
|       |-IfStmt 0x1d73fbebe80 <line:320:9, line:323:9>
|       | |-OpaqueValueExpr 0x1d73fbebe68 <<invalid sloc>> '_Bool'
|       | `-CompoundStmt 0x1d73fbebe50 <line:320:58, line:323:9>
|       |   `-IfStmt 0x1d73fbebe38 <line:321:13, line:322:24>
|       |     |-OpaqueValueExpr 0x1d73fbebe20 <<invalid sloc>> '_Bool'
|       |     `-ReturnStmt 0x1d73fbebe10 <col:17, col:24>
|       |       `-IntegerLiteral 0x1d73fbebde8 <col:24> 'int' 0
|       `-ReturnStmt 0x1d73fbebec0 <line:324:9, col:16>
|         `-IntegerLiteral 0x1d73fbebe98 <col:16> 'int' 1
|-FunctionDecl 0x1d73fbec2f0 <line:330:1, line:366:1> line:330:12 invalid asn1_print_fsname 'int (int *, int, const char *, const char *, const int *)' static
| |-ParmVarDecl 0x1d73fbec038 <col:30, col:35> col:35 invalid out 'int *'
| |-ParmVarDecl 0x1d73fbec0b8 <col:40, col:44> col:44 used indent 'int'
| |-ParmVarDecl 0x1d73fbec138 <line:331:30, col:42> col:42 used fname 'const char *'
| |-ParmVarDecl 0x1d73fbec1b8 <col:49, col:61> col:61 used sname 'const char *'
| |-ParmVarDecl 0x1d73fbec238 <line:332:30, col:47> col:47 invalid pctx 'const int *'
| `-CompoundStmt 0x1d73fbea3f8 <line:333:1, line:366:1>
|   |-DeclStmt 0x1d73fbec518 <line:334:5, col:56>
|   | `-VarDecl 0x1d73fbec448 <col:5, col:34> col:23 used spaces 'const char [21]' static cinit
|   |   `-StringLiteral 0x1d73fbec4b0 <col:34> 'const char [21]' "                    "
|   |-DeclStmt 0x1d73fbec688 <line:335:5, col:50>
|   | `-VarDecl 0x1d73fbec548 <col:5, col:49> col:22 used nspaces 'const int' static cinit
|   |   `-ImplicitCastExpr 0x1d73fbec670 <col:32, col:49> 'int' <IntegralCast>
|   |     `-BinaryOperator 0x1d73fbec650 <col:32, col:49> 'unsigned long long' '-'
|   |       |-UnaryExprOrTypeTraitExpr 0x1d73fbec5f0 <col:32, col:45> 'unsigned long long' sizeof
|   |       | `-ParenExpr 0x1d73fbec5d0 <col:38, col:45> 'const char [21]' lvalue
|   |       |   `-DeclRefExpr 0x1d73fbec5b0 <col:39> 'const char [21]' lvalue Var 0x1d73fbec448 'spaces' 'const char [21]' non_odr_use_unevaluated
|   |       `-ImplicitCastExpr 0x1d73fbec638 <col:49> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x1d73fbec610 <col:49> 'int' 1
|   |-WhileStmt 0x1d73fbe9a38 <line:337:5, line:341:5>
|   | |-BinaryOperator 0x1d73fbe9738 <line:337:12, col:21> 'int' '>'
|   | | |-ImplicitCastExpr 0x1d73fbe9708 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1d73fbec6a0 <col:12> 'int' lvalue ParmVar 0x1d73fbec0b8 'indent' 'int'
|   | | `-ImplicitCastExpr 0x1d73fbe9720 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1d73fbe96d0 <col:21> 'const int' lvalue Var 0x1d73fbec548 'nspaces' 'const int'
|   | `-CompoundStmt 0x1d73fbe9a18 <col:30, line:341:5>
|   |   |-IfStmt 0x1d73fbe9978 <line:338:9, line:339:20>
|   |   | |-OpaqueValueExpr 0x1d73fbe9960 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x1d73fbe9950 <col:13, col:20>
|   |   |   `-IntegerLiteral 0x1d73fbe9928 <col:20> 'int' 0
|   |   `-CompoundAssignOperator 0x1d73fbe99e8 <line:340:9, col:19> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x1d73fbe9990 <col:9> 'int' lvalue ParmVar 0x1d73fbec0b8 'indent' 'int'
|   |     `-ImplicitCastExpr 0x1d73fbe99d0 <col:19> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1d73fbe99b0 <col:19> 'const int' lvalue Var 0x1d73fbec548 'nspaces' 'const int'
|   |-IfStmt 0x1d73fbe9b20 <line:342:5, line:343:16>
|   | |-OpaqueValueExpr 0x1d73fbe9b08 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1d73fbe9af8 <col:9, col:16>
|   |   `-IntegerLiteral 0x1d73fbe9ad0 <col:16> 'int' 0
|   |-IfStmt 0x1d73fbe9c48 <line:344:5, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25>
|   | |-OpaqueValueExpr 0x1d73fbe9c30 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x1d73fbe9c10 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:345:9, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'const char *' '='
|   |   |-DeclRefExpr 0x1d73fbe9b38 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:345:9> 'const char *' lvalue ParmVar 0x1d73fbec1b8 'sname' 'const char *'
|   |   `-ImplicitCastExpr 0x1d73fbe9bf8 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const char *' <NullToPointer>
|   |     `-ParenExpr 0x1d73fbe9bd8 <col:16, col:25> 'void *'
|   |       `-CStyleCastExpr 0x1d73fbe9bb0 <col:17, col:24> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1d73fbe9b70 <col:24> 'int' 0
|   |-IfStmt 0x1d73fbe9d70 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:346:5, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25>
|   | |-OpaqueValueExpr 0x1d73fbe9d58 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x1d73fbe9d38 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:347:9, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'const char *' '='
|   |   |-DeclRefExpr 0x1d73fbe9c60 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:347:9> 'const char *' lvalue ParmVar 0x1d73fbec138 'fname' 'const char *'
|   |   `-ImplicitCastExpr 0x1d73fbe9d20 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const char *' <NullToPointer>
|   |     `-ParenExpr 0x1d73fbe9d00 <col:16, col:25> 'void *'
|   |       `-CStyleCastExpr 0x1d73fbe9cd8 <col:17, col:24> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1d73fbe9c98 <col:24> 'int' 0
|   |-IfStmt 0x1d73fbe9e80 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:348:5, line:349:16>
|   | |-BinaryOperator 0x1d73fbe9e28 <line:348:9, col:20> 'int' '&&'
|   | | |-UnaryOperator 0x1d73fbe9dc0 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x1d73fbe9da8 <col:10> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1d73fbe9d88 <col:10> 'const char *' lvalue ParmVar 0x1d73fbec1b8 'sname' 'const char *'
|   | | `-UnaryOperator 0x1d73fbe9e10 <col:19, col:20> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x1d73fbe9df8 <col:20> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1d73fbe9dd8 <col:20> 'const char *' lvalue ParmVar 0x1d73fbec138 'fname' 'const char *'
|   | `-ReturnStmt 0x1d73fbe9e70 <line:349:9, col:16>
|   |   `-IntegerLiteral 0x1d73fbe9e48 <col:16> 'int' 1
|   |-IfStmt 0x1d73fbe9fb8 <line:350:5, line:353:5>
|   | |-ImplicitCastExpr 0x1d73fbe9eb8 <line:350:9> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1d73fbe9e98 <col:9> 'const char *' lvalue ParmVar 0x1d73fbec138 'fname' 'const char *'
|   | `-CompoundStmt 0x1d73fbe9fa0 <col:16, line:353:5>
|   |   `-IfStmt 0x1d73fbe9f88 <line:351:9, line:352:20>
|   |     |-OpaqueValueExpr 0x1d73fbe9f70 <<invalid sloc>> '_Bool'
|   |     `-ReturnStmt 0x1d73fbe9f60 <col:13, col:20>
|   |       `-IntegerLiteral 0x1d73fbe9f38 <col:20> 'int' 0
|   |-IfStmt 0x1d73fbea270 <line:354:5, line:362:5>
|   | |-ImplicitCastExpr 0x1d73fbe9ff0 <line:354:9> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1d73fbe9fd0 <col:9> 'const char *' lvalue ParmVar 0x1d73fbec1b8 'sname' 'const char *'
|   | `-CompoundStmt 0x1d73fbea258 <col:16, line:362:5>
|   |   `-IfStmt 0x1d73fbea230 <line:355:9, line:361:9> has_else
|   |     |-ImplicitCastExpr 0x1d73fbea028 <line:355:13> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1d73fbea008 <col:13> 'const char *' lvalue ParmVar 0x1d73fbec138 'fname' 'const char *'
|   |     |-CompoundStmt 0x1d73fbea130 <col:20, line:358:9>
|   |     | `-IfStmt 0x1d73fbea118 <line:356:13, line:357:24>
|   |     |   |-OpaqueValueExpr 0x1d73fbea100 <<invalid sloc>> '_Bool'
|   |     |   `-ReturnStmt 0x1d73fbea0f0 <col:17, col:24>
|   |     |     `-IntegerLiteral 0x1d73fbea0c8 <col:24> 'int' 0
|   |     `-CompoundStmt 0x1d73fbea218 <line:358:16, line:361:9>
|   |       `-IfStmt 0x1d73fbea200 <line:359:13, line:360:24>
|   |         |-OpaqueValueExpr 0x1d73fbea1e8 <<invalid sloc>> '_Bool'
|   |         `-ReturnStmt 0x1d73fbea1d8 <col:17, col:24>
|   |           `-IntegerLiteral 0x1d73fbea1b0 <col:24> 'int' 0
|   |-IfStmt 0x1d73fbea3a8 <line:363:5, line:364:16>
|   | |-OpaqueValueExpr 0x1d73fbea390 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1d73fbea380 <col:9, col:16>
|   |   `-IntegerLiteral 0x1d73fbea358 <col:16> 'int' 0
|   `-ReturnStmt 0x1d73fbea3e8 <line:365:5, col:12>
|     `-IntegerLiteral 0x1d73fbea3c0 <col:12> 'int' 1
|-FunctionDecl 0x1d73fbea5d0 <line:368:1, line:390:1> line:368:12 invalid asn1_print_boolean 'int (int *, int)' static
| |-ParmVarDecl 0x1d73fbea478 <col:31, col:36> col:36 invalid out 'int *'
| |-ParmVarDecl 0x1d73fbea4f8 <col:41, col:45> col:45 used boolval 'int'
| `-CompoundStmt 0x1d73fbecc68 <line:369:1, line:390:1>
|   |-DeclStmt 0x1d73fbec768 <line:370:5, col:20>
|   | `-VarDecl 0x1d73fbec700 <col:5, col:17> col:17 used str 'const char *'
|   |-SwitchStmt 0x1d73fbec7d0 <line:371:5, line:384:5>
|   | |-ImplicitCastExpr 0x1d73fbec7b8 <line:371:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1d73fbec780 <col:13> 'int' lvalue ParmVar 0x1d73fbea4f8 'boolval' 'int'
|   | `-CompoundStmt 0x1d73fbecb20 <col:22, line:384:5>
|   |   |-CaseStmt 0x1d73fbec848 <line:372:5, line:373:15>
|   |   | |-ConstantExpr 0x1d73fbec830 <line:372:10, col:11> 'int'
|   |   | | `-UnaryOperator 0x1d73fbec818 <col:10, col:11> 'int' prefix '-'
|   |   | |   `-IntegerLiteral 0x1d73fbec7f0 <col:11> 'int' 1
|   |   | `-BinaryOperator 0x1d73fbec900 <line:373:9, col:15> 'const char *' '='
|   |   |   |-DeclRefExpr 0x1d73fbec870 <col:9> 'const char *' lvalue Var 0x1d73fbec700 'str' 'const char *'
|   |   |   `-ImplicitCastExpr 0x1d73fbec8e8 <col:15> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x1d73fbec8d0 <col:15> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x1d73fbec8a8 <col:15> 'char [12]' lvalue "BOOL ABSENT"
|   |   |-BreakStmt 0x1d73fbec920 <line:374:9>
|   |   |-CaseStmt 0x1d73fbec968 <line:376:5, line:377:15>
|   |   | |-ConstantExpr 0x1d73fbec950 <line:376:10> 'int'
|   |   | | `-IntegerLiteral 0x1d73fbec928 <col:10> 'int' 0
|   |   | `-BinaryOperator 0x1d73fbeca00 <line:377:9, col:15> 'const char *' '='
|   |   |   |-DeclRefExpr 0x1d73fbec990 <col:9> 'const char *' lvalue Var 0x1d73fbec700 'str' 'const char *'
|   |   |   `-ImplicitCastExpr 0x1d73fbec9e8 <col:15> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x1d73fbec9d0 <col:15> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x1d73fbec9b0 <col:15> 'char [6]' lvalue "FALSE"
|   |   |-BreakStmt 0x1d73fbeca20 <line:378:9>
|   |   |-DefaultStmt 0x1d73fbecaf8 <line:380:5, line:381:15>
|   |   | `-BinaryOperator 0x1d73fbecad8 <col:9, col:15> 'const char *' '='
|   |   |   |-DeclRefExpr 0x1d73fbeca28 <col:9> 'const char *' lvalue Var 0x1d73fbec700 'str' 'const char *'
|   |   |   `-ImplicitCastExpr 0x1d73fbecac0 <col:15> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x1d73fbecaa8 <col:15> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x1d73fbeca88 <col:15> 'char [5]' lvalue "TRUE"
|   |   `-BreakStmt 0x1d73fbecb18 <line:382:9>
|   |-IfStmt 0x1d73fbecc18 <line:386:5, line:387:16>
|   | |-OpaqueValueExpr 0x1d73fbecc00 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1d73fbecbf0 <col:9, col:16>
|   |   `-IntegerLiteral 0x1d73fbecbc8 <col:16> 'int' 0
|   `-ReturnStmt 0x1d73fbecc58 <line:388:5, col:12>
|     `-IntegerLiteral 0x1d73fbecc30 <col:12> 'int' 1
|-FunctionDecl 0x1d73fbece10 <line:392:1, line:403:1> line:392:12 invalid asn1_print_integer 'int (int *, const int *)' static
| |-ParmVarDecl 0x1d73fbeccb0 <col:31, col:36> col:36 invalid out 'int *'
| |-ParmVarDecl 0x1d73fbecd30 <col:41, col:61> col:61 invalid str 'const int *'
| `-CompoundStmt 0x1d73fbed568 <line:393:1, line:403:1>
|   |-DeclStmt 0x1d73fbecf58 <line:394:5, col:12>
|   | `-VarDecl 0x1d73fbecef0 <col:5, col:11> col:11 used s 'char *'
|   |-DeclStmt 0x1d73fbed018 <line:395:5, col:16>
|   | `-VarDecl 0x1d73fbecf88 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1d73fbecff0 <col:15> 'int' 1
|   |-IfStmt 0x1d73fbed330 <line:397:5, line:398:16>
|   | |-BinaryOperator 0x1d73fbed2d8 <line:397:9, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'int' '=='
|   | | |-ImplicitCastExpr 0x1d73fbed2a8 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:397:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1d73fbed200 <col:9> 'char *' lvalue Var 0x1d73fbecef0 's' 'char *'
|   | | `-ImplicitCastExpr 0x1d73fbed2c0 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1d73fbed288 <col:16, col:25> 'void *'
|   | |     `-CStyleCastExpr 0x1d73fbed260 <col:17, col:24> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1d73fbed220 <col:24> 'int' 0
|   | `-ReturnStmt 0x1d73fbed320 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:398:9, col:16>
|   |   `-IntegerLiteral 0x1d73fbed2f8 <col:16> 'int' 0
|   |-IfStmt 0x1d73fbed448 <line:399:5, line:400:15>
|   | |-OpaqueValueExpr 0x1d73fbed430 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x1d73fbed410 <col:9, col:15> 'int' '='
|   |   |-DeclRefExpr 0x1d73fbed3b0 <col:9> 'int' lvalue Var 0x1d73fbecf88 'ret' 'int'
|   |   `-IntegerLiteral 0x1d73fbed3e8 <col:15> 'int' 0
|   |-CallExpr 0x1d73fbed4e0 <line:401:5, col:19> 'int'
|   | |-ImplicitCastExpr 0x1d73fbed4c8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1d73fbed460 <col:5> 'int ()' Function 0x1d73fbe3a30 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1d73fbed508 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1d73fbed480 <col:18> 'char *' lvalue Var 0x1d73fbecef0 's' 'char *'
|   `-ReturnStmt 0x1d73fbed558 <line:402:5, col:12>
|     `-ImplicitCastExpr 0x1d73fbed540 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1d73fbed520 <col:12> 'int' lvalue Var 0x1d73fbecf88 'ret' 'int'
|-FunctionDecl 0x1d73fbed710 <line:405:1, line:416:1> line:405:12 invalid asn1_print_oid 'int (int *, const int *)' static
| |-ParmVarDecl 0x1d73fbed5c0 <col:27, col:32> col:32 invalid out 'int *'
| |-ParmVarDecl 0x1d73fbed640 <col:37, col:56> col:56 invalid oid 'const int *'
| `-CompoundStmt 0x1d73fbedff0 <line:406:1, line:416:1>
|   |-DeclStmt 0x1d73fbed8e0 <line:407:5, col:20>
|   | `-VarDecl 0x1d73fbed878 <col:5, col:19> col:10 used objbuf 'char [80]'
|   |-DeclStmt 0x1d73fbed978 <line:408:5, col:19>
|   | `-VarDecl 0x1d73fbed910 <col:5, col:17> col:17 used ln 'const char *'
|   |-IfStmt 0x1d73fbedcc0 <line:410:5, line:411:14>
|   | |-UnaryOperator 0x1d73fbedc20 <line:410:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1d73fbedc08 <col:10> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1d73fbedbe8 <col:10> 'const char *' lvalue Var 0x1d73fbed910 'ln' 'const char *'
|   | `-BinaryOperator 0x1d73fbedca0 <line:411:9, col:14> 'const char *' '='
|   |   |-DeclRefExpr 0x1d73fbedc38 <col:9> 'const char *' lvalue Var 0x1d73fbed910 'ln' 'const char *'
|   |   `-ImplicitCastExpr 0x1d73fbedc88 <col:14> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x1d73fbedc70 <col:14> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x1d73fbedc58 <col:14> 'char [1]' lvalue ""
|   |-IfStmt 0x1d73fbedfa0 <line:413:5, line:414:16>
|   | |-OpaqueValueExpr 0x1d73fbedf88 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1d73fbedf78 <col:9, col:16>
|   |   `-IntegerLiteral 0x1d73fbedf50 <col:16> 'int' 0
|   `-ReturnStmt 0x1d73fbedfe0 <line:415:5, col:12>
|     `-IntegerLiteral 0x1d73fbedfb8 <col:12> 'int' 1
|-FunctionDecl 0x1d73fbee230 <line:418:1, line:430:1> line:418:12 invalid asn1_print_obstring 'int (int *, const int *, int)' static
| |-ParmVarDecl 0x1d73fbee040 <col:32, col:37> col:37 invalid out 'int *'
| |-ParmVarDecl 0x1d73fbee0c0 <col:42, col:61> col:61 invalid str 'const int *'
| |-ParmVarDecl 0x1d73fbee140 <col:66, col:70> col:70 used indent 'int'
| `-CompoundStmt 0x1d73fbe67a0 <line:419:1, line:430:1>
|   |-IfStmt 0x1d73fbee540 <line:420:5, line:424:16> has_else
|   | |-OpaqueValueExpr 0x1d73fbee528 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x1d73fbee440 <line:420:41, line:423:5>
|   | | `-IfStmt 0x1d73fbee428 <line:421:9, line:422:20>
|   | |   |-OpaqueValueExpr 0x1d73fbee410 <<invalid sloc>> '_Bool'
|   | |   `-ReturnStmt 0x1d73fbee400 <col:13, col:20>
|   | |     `-IntegerLiteral 0x1d73fbee3d8 <col:20> 'int' 0
|   | `-IfStmt 0x1d73fbee510 <line:423:12, line:424:16>
|   |   |-OpaqueValueExpr 0x1d73fbee4f8 <<invalid sloc>> '_Bool'
|   |   `-ReturnStmt 0x1d73fbee4e8 <col:9, col:16>
|   |     `-IntegerLiteral 0x1d73fbee4c0 <col:16> 'int' 0
|   |-IfStmt 0x1d73fbe6750 <line:425:5, line:428:16>
|   | |-OpaqueValueExpr 0x1d73fbe6738 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1d73fbe6728 <col:9, col:16>
|   |   `-IntegerLiteral 0x1d73fbe6700 <col:16> 'int' 0
|   `-ReturnStmt 0x1d73fbe6790 <line:429:5, col:12>
|     `-IntegerLiteral 0x1d73fbe6768 <col:12> 'int' 1
`-FunctionDecl 0x1d73fbe6bb0 <line:432:1, line:538:1> line:432:12 invalid asn1_primitive_print 'int (int *, int **, const int *, int, const char *, const char *, const int *)' static
  |-ParmVarDecl 0x1d73fbe67e0 <col:33, col:38> col:38 invalid out 'int *'
  |-ParmVarDecl 0x1d73fbe6868 <col:43, col:56> col:56 invalid fld 'int **'
  |-ParmVarDecl 0x1d73fbe68e8 <line:433:33, col:50> col:50 invalid it 'const int *'
  |-ParmVarDecl 0x1d73fbe6968 <col:54, col:58> col:58 used indent 'int'
  |-ParmVarDecl 0x1d73fbe69e8 <line:434:33, col:45> col:45 used fname 'const char *'
  |-ParmVarDecl 0x1d73fbe6a68 <col:52, col:64> col:64 used sname 'const char *'
  |-ParmVarDecl 0x1d73fbe6ae8 <line:435:33, col:50> col:50 invalid pctx 'const int *'
  `-CompoundStmt 0x1d73fbf29a0 <line:436:1, line:538:1>
    |-DeclStmt 0x1d73fbe6d20 <line:437:5, col:15>
    | `-VarDecl 0x1d73fbe6cb8 <col:5, col:10> col:10 used utype 'long'
    |-DeclStmt 0x1d73fbe6ea0 <line:439:5, col:28>
    | |-VarDecl 0x1d73fbe6d50 <col:5, col:15> col:9 used ret 'int' cinit
    | | `-IntegerLiteral 0x1d73fbe6db8 <col:15> 'int' 1
    | `-VarDecl 0x1d73fbe6df8 <col:5, col:27> col:18 used needlf 'int' cinit
    |   `-IntegerLiteral 0x1d73fbe6e60 <col:27> 'int' 1
    |-DeclStmt 0x1d73fbe6f38 <line:440:5, col:22>
    | `-VarDecl 0x1d73fbe6ed0 <col:5, col:17> col:17 used pname 'const char *'
    |-DeclStmt 0x1d73fbe6fd0 <line:441:5, col:35>
    | `-VarDecl 0x1d73fbe6f68 <col:5, col:33> col:33 invalid pf 'const int *'
    |-IfStmt 0x1d73fbe70e0 <line:443:5, line:444:16>
    | |-OpaqueValueExpr 0x1d73fbe70c8 <<invalid sloc>> '_Bool'
    | `-ReturnStmt 0x1d73fbe70b8 <col:9, col:16>
    |   `-IntegerLiteral 0x1d73fbe7090 <col:16> 'int' 0
    |-IfStmt 0x1d73fbe7250 <line:447:5, line:456:5> has_else
    | |-OpaqueValueExpr 0x1d73fbe7238 <<invalid sloc>> '_Bool'
    | |-CompoundStmt 0x1d73fbe7150 <line:447:42, line:450:5>
    | `-CompoundStmt 0x1d73fbe7228 <col:12, line:456:5>
    |-IfStmt 0x1d73fbee8a8 <line:457:5, line:471:5> has_else
    | |-OpaqueValueExpr 0x1d73fbee890 <<invalid sloc>> '_Bool'
    | |-CompoundStmt 0x1d73fbe75d0 <line:457:30, line:466:5>
    | | `-IfStmt 0x1d73fbe75a8 <line:462:9, line:465:39> has_else
    | |   |-OpaqueValueExpr 0x1d73fbe7590 <<invalid sloc>> '_Bool'
    | |   |-BinaryOperator 0x1d73fbe7390 <line:463:13, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'const char *' '='
    | |   | |-DeclRefExpr 0x1d73fbe72b8 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:463:13> 'const char *' lvalue Var 0x1d73fbe6ed0 'pname' 'const char *'
    | |   | `-ImplicitCastExpr 0x1d73fbe7378 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const char *' <NullToPointer>
    | |   |   `-ParenExpr 0x1d73fbe7358 <col:16, col:25> 'void *'
    | |   |     `-CStyleCastExpr 0x1d73fbe7330 <col:17, col:24> 'void *' <NullToPointer>
    | |   |       `-IntegerLiteral 0x1d73fbe72f0 <col:24> 'int' 0
    | |   `-BinaryOperator 0x1d73fbe7570 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:465:13, col:39> 'const char *' '='
    | |     |-DeclRefExpr 0x1d73fbe73b0 <col:13> 'const char *' lvalue Var 0x1d73fbe6ed0 'pname' 'const char *'
    | |     `-ImplicitCastExpr 0x1d73fbe7558 <col:21, col:39> 'const char *' <IntegralToPointer>
    | |       `-CallExpr 0x1d73fbe7518 <col:21, col:39> 'int'
    | |         |-ImplicitCastExpr 0x1d73fbe7500 <col:21> 'int (*)()' <FunctionToPointerDecay>
    | |         | `-DeclRefExpr 0x1d73fbe74c0 <col:21> 'int ()' Function 0x1d73fbe73f8 'ASN1_tag2str' 'int ()'
    | |         `-ImplicitCastExpr 0x1d73fbe7540 <col:34> 'long' <LValueToRValue>
    | |           `-DeclRefExpr 0x1d73fbe74e0 <col:34> 'long' lvalue Var 0x1d73fbe6cb8 'utype' 'long'
    | `-CompoundStmt 0x1d73fbee878 <line:466:12, line:471:5>
    |   `-IfStmt 0x1d73fbee850 <line:467:9, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> has_else
    |     |-OpaqueValueExpr 0x1d73fbee838 <<invalid sloc>> '_Bool'
    |     |-BinaryOperator 0x1d73fbee738 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:468:13, col:39> 'const char *' '='
    |     | |-DeclRefExpr 0x1d73fbe75e8 <col:13> 'const char *' lvalue Var 0x1d73fbe6ed0 'pname' 'const char *'
    |     | `-ImplicitCastExpr 0x1d73fbee720 <col:21, col:39> 'const char *' <IntegralToPointer>
    |     |   `-CallExpr 0x1d73fbe7660 <col:21, col:39> 'int'
    |     |     |-ImplicitCastExpr 0x1d73fbe7648 <col:21> 'int (*)()' <FunctionToPointerDecay>
    |     |     | `-DeclRefExpr 0x1d73fbe7608 <col:21> 'int ()' Function 0x1d73fbe73f8 'ASN1_tag2str' 'int ()'
    |     |     `-ImplicitCastExpr 0x1d73fbe7688 <col:34> 'long' <LValueToRValue>
    |     |       `-DeclRefExpr 0x1d73fbe7628 <col:34> 'long' lvalue Var 0x1d73fbe6cb8 'utype' 'long'
    |     `-BinaryOperator 0x1d73fbee818 <line:470:13, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'const char *' '='
    |       |-DeclRefExpr 0x1d73fbee758 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:470:13> 'const char *' lvalue Var 0x1d73fbe6ed0 'pname' 'const char *'
    |       `-ImplicitCastExpr 0x1d73fbee800 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const char *' <NullToPointer>
    |         `-ParenExpr 0x1d73fbee7e0 <col:16, col:25> 'void *'
    |           `-CStyleCastExpr 0x1d73fbee7b8 <col:17, col:24> 'void *' <NullToPointer>
    |             `-IntegerLiteral 0x1d73fbee778 <col:24> 'int' 0
    |-IfStmt 0x1d73fbeea30 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:473:5, line:477:5>
    | |-OpaqueValueExpr 0x1d73fbeea18 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x1d73fbee9f8 <line:473:31, line:477:5>
    |   |-IfStmt 0x1d73fbee9a8 <line:474:9, line:475:20>
    |   | |-OpaqueValueExpr 0x1d73fbee990 <<invalid sloc>> '_Bool'
    |   | `-ReturnStmt 0x1d73fbee980 <col:13, col:20>
    |   |   `-IntegerLiteral 0x1d73fbee958 <col:20> 'int' 0
    |   `-ReturnStmt 0x1d73fbee9e8 <line:476:9, col:16>
    |     `-IntegerLiteral 0x1d73fbee9c0 <col:16> 'int' 1
    |-IfStmt 0x1d73fbeec40 <line:479:5, line:484:5>
    | |-ImplicitCastExpr 0x1d73fbeea68 <line:479:9> 'const char *' <LValueToRValue>
    | | `-DeclRefExpr 0x1d73fbeea48 <col:9> 'const char *' lvalue Var 0x1d73fbe6ed0 'pname' 'const char *'
    | `-CompoundStmt 0x1d73fbeec20 <col:16, line:484:5>
    |   |-IfStmt 0x1d73fbeeb38 <line:480:9, line:481:20>
    |   | |-OpaqueValueExpr 0x1d73fbeeb20 <<invalid sloc>> '_Bool'
    |   | `-ReturnStmt 0x1d73fbeeb10 <col:13, col:20>
    |   |   `-IntegerLiteral 0x1d73fbeeae8 <col:20> 'int' 0
    |   `-IfStmt 0x1d73fbeec08 <line:482:9, line:483:20>
    |     |-OpaqueValueExpr 0x1d73fbeebf0 <<invalid sloc>> '_Bool'
    |     `-ReturnStmt 0x1d73fbeebe0 <col:13, col:20>
    |       `-IntegerLiteral 0x1d73fbeebb8 <col:20> 'int' 0
    |-SwitchStmt 0x1d73fbeec90 <line:486:5, line:532:5>
    | |-ImplicitCastExpr 0x1d73fbeec78 <line:486:13> 'long' <LValueToRValue>
    | | `-DeclRefExpr 0x1d73fbeec58 <col:13> 'long' lvalue Var 0x1d73fbe6cb8 'utype' 'long'
    | `-CompoundStmt 0x1d73fbf2760 <col:20, line:532:5>
    |   |-CompoundStmt 0x1d73fbeee70 <line:488:9, line:493:9>
    |   | `-DeclStmt 0x1d73fbeed30 <line:489:13, col:38>
    |   |   `-VarDecl 0x1d73fbeecc8 <col:13, col:17> col:17 used boolval 'int'
    |   |-BreakStmt 0x1d73fbeee88 <line:494:9>
    |   |-BreakStmt 0x1d73fbeeeb0 <line:499:9>
    |   |-BreakStmt 0x1d73fbeefe8 <line:503:9>
    |   |-BreakStmt 0x1d73fbef120 <line:507:9>
    |   |-BreakStmt 0x1d73fbef148 <line:511:9>
    |   |-BinaryOperator 0x1d73fbef1f0 <line:516:9, col:18> 'int' '='
    |   | |-DeclRefExpr 0x1d73fbef190 <col:9> 'int' lvalue Var 0x1d73fbe6df8 'needlf' 'int'
    |   | `-IntegerLiteral 0x1d73fbef1c8 <col:18> 'int' 0
    |   |-BreakStmt 0x1d73fbef210 <line:517:9>
    |   |-IfStmt 0x1d73fbef2d0 <line:522:9, line:523:20>
    |   | |-OpaqueValueExpr 0x1d73fbef2b8 <<invalid sloc>> '_Bool'
    |   | `-ReturnStmt 0x1d73fbef2a8 <col:13, col:20>
    |   |   `-IntegerLiteral 0x1d73fbef280 <col:20> 'int' 0
    |   |-IfStmt 0x1d73fbef4e8 <line:524:9, line:525:19>
    |   | |-OpaqueValueExpr 0x1d73fbef4d0 <<invalid sloc>> '_Bool'
    |   | `-BinaryOperator 0x1d73fbef4b0 <col:13, col:19> 'int' '='
    |   |   |-DeclRefExpr 0x1d73fbef468 <col:13> 'int' lvalue Var 0x1d73fbe6d50 'ret' 'int'
    |   |   `-IntegerLiteral 0x1d73fbef488 <col:19> 'int' 0
    |   |-BinaryOperator 0x1d73fbef548 <line:526:9, col:18> 'int' '='
    |   | |-DeclRefExpr 0x1d73fbef500 <col:9> 'int' lvalue Var 0x1d73fbe6df8 'needlf' 'int'
    |   | `-IntegerLiteral 0x1d73fbef520 <col:18> 'int' 0
    |   |-BreakStmt 0x1d73fbef568 <line:527:9>
    |   `-DefaultStmt 0x1d73fbef6a8 <line:529:5, col:12>
    |     `-NullStmt 0x1d73fbef6a0 <col:12>
    |-IfStmt 0x1d73fbf2860 <line:533:5, line:534:16>
    | |-UnaryOperator 0x1d73fbf2810 <line:533:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1d73fbf27f8 <col:10> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x1d73fbf27d8 <col:10> 'int' lvalue Var 0x1d73fbe6d50 'ret' 'int'
    | `-ReturnStmt 0x1d73fbf2850 <line:534:9, col:16>
    |   `-IntegerLiteral 0x1d73fbf2828 <col:16> 'int' 0
    |-IfStmt 0x1d73fbf2950 <line:535:5, line:536:16>
    | |-OpaqueValueExpr 0x1d73fbf2938 <<invalid sloc>> '_Bool'
    | `-ReturnStmt 0x1d73fbf2928 <col:9, col:16>
    |   `-IntegerLiteral 0x1d73fbf2900 <col:16> 'int' 0
    `-ReturnStmt 0x1d73fbf2990 <line:537:5, col:12>
      `-IntegerLiteral 0x1d73fbf2968 <col:12> 'int' 1
