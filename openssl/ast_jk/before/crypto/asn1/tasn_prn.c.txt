TranslationUnitDecl 0x21833a326a8 <<invalid sloc>> <invalid sloc> <undeserialized declarations>
|-TypedefDecl 0x21833a32f40 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x21833a32c40 '__int128'
|-TypedefDecl 0x21833a32fb0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x21833a32c60 'unsigned __int128'
|-TypedefDecl 0x21833a332e8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x21833a330a0 'struct __NSConstantString_tag'
|   `-Record 0x21833a33008 '__NSConstantString_tag'
|-TypedefDecl 0x21833a33358 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x21833a32880 'unsigned long long'
|-TypedefDecl 0x21833a333f0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x21833a333b0 'char *'
|   `-BuiltinType 0x21833a32740 'char'
|-TypedefDecl 0x21833a33460 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x21833a333b0 'char *'
|   `-BuiltinType 0x21833a32740 'char'
|-TypedefDecl 0x21833a334d0 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:35:1, col:26> col:26 ptrdiff_t 'long long'
| `-BuiltinType 0x21833a327e0 'long long'
|-TypedefDecl 0x21833a33540 prev 0x21833a33358 <line:46:1, col:23> col:23 size_t 'unsigned long long'
| `-BuiltinType 0x21833a32880 'unsigned long long'
|-TypedefDecl 0x21833a335c8 <line:60:1, col:23> col:23 rsize_t 'unsigned long long'
| `-BuiltinType 0x21833a32880 'unsigned long long'
|-TypedefDecl 0x21833a33638 <line:74:1, col:24> col:24 wchar_t 'unsigned short'
| `-BuiltinType 0x21833a32820 'unsigned short'
|-ImportDecl 0x218353abc60 <line:102:1> col:1 implicit _Builtin_stddef_max_align_t
|-FunctionDecl 0x218353abfc0 <.//openssl//file_jk/before\crypto\asn1/asn1_locl.h:12:1, col:60> col:5 invalid asn1_utctime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x218353abe20 <col:24, col:35> col:35 tm 'struct tm *'
| `-ParmVarDecl 0x218353abea0 <col:39, col:59> col:59 invalid d 'const int *'
|-FunctionDecl 0x218353ac390 <line:13:1, col:76> col:5 invalid asn1_generalizedtime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x218353ac1f0 <col:32, col:43> col:43 tm 'struct tm *'
| `-ParmVarDecl 0x218353ac270 <col:47, col:75> col:75 invalid d 'const int *'
|-RecordDecl 0x218353ac440 <line:17:1, line:38:1> line:17:8 invalid struct asn1_sctx_st definition
| |-FieldDecl 0x218353ac518 <line:19:5, col:22> col:22 invalid it 'const int *'
| |-FieldDecl 0x218353ac588 <line:21:5, col:26> col:26 invalid tt 'const int *'
| |-FieldDecl 0x218353ac5f8 <line:23:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x218353ac668 <line:25:5, col:9> col:9 skidx 'int'
| |-FieldDecl 0x218353ac6d8 <line:27:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x218353ac748 <line:29:5, col:17> col:17 sname 'const char *'
| |-FieldDecl 0x218353ac7b8 <col:5, col:25> col:25 fname 'const char *'
| |-FieldDecl 0x218353ac828 <line:31:5, col:9> col:9 prim_type 'int'
| |-FieldDecl 0x218353ac8f8 <line:33:5, col:18> col:18 invalid field 'int **'
| |-FieldDecl 0x218353acac8 <line:35:5, col:35> col:11 scan_cb 'int (*)(int *)'
| `-FieldDecl 0x218353acb38 <line:37:5, col:11> col:11 app_data 'void *'
|-RecordDecl 0x218353acb90 <line:40:9, col:16> col:16 struct mime_param_st
|-TypedefDecl 0x218353b2d28 <col:1, col:30> col:30 referenced MIME_PARAM 'struct mime_param_st':'struct mime_param_st'
| `-ElaboratedType 0x218353b2cd0 'struct mime_param_st' sugar
|   `-RecordType 0x218353acc30 'struct mime_param_st'
|     `-Record 0x218353acb90 'mime_param_st'
|-FunctionDecl 0x218353b2ed0 <line:41:1, col:27> col:1 DEFINE_STACK_OF 'int (MIME_PARAM)'
| `-ParmVarDecl 0x218353b2dd0 <col:17> col:27 'MIME_PARAM':'struct mime_param_st'
|-RecordDecl 0x218353b2fd8 <line:42:9, col:16> col:16 struct mime_header_st
|-TypedefDecl 0x218353b30e8 <col:1, col:31> col:31 referenced MIME_HEADER 'struct mime_header_st':'struct mime_header_st'
| `-ElaboratedType 0x218353b3090 'struct mime_header_st' sugar
|   `-RecordType 0x218353b3070 'struct mime_header_st'
|     `-Record 0x218353b2fd8 'mime_header_st'
|-FunctionDecl 0x218353b3290 <line:43:1, col:28> col:1 invalid DEFINE_STACK_OF 'int (MIME_HEADER)'
| `-ParmVarDecl 0x218353b3190 <col:17> col:28 'MIME_HEADER':'struct mime_header_st'
|-VarDecl 0x218353b33e0 <line:46:1, col:32> col:20 _asn1_mon 'const char *[12]' extern
|-FunctionDecl 0x218353b35c8 <line:48:1, col:54> col:6 invalid asn1_string_embed_free 'void (int *, int)'
| |-ParmVarDecl 0x218353b3478 <col:29, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x218353b34f8 <col:45, col:49> col:49 embed 'int'
|-FunctionDecl 0x218353b37f0 <line:50:1, col:68> col:5 invalid asn1_get_choice_selector 'int (int **, const int *)'
| |-ParmVarDecl 0x218353b3698 <col:30, col:43> col:43 invalid pval 'int **'
| `-ParmVarDecl 0x218353b3718 <col:49, col:66> col:66 invalid it 'const int *'
|-FunctionDecl 0x218353b3ab0 <line:51:1, line:52:49> line:51:5 invalid asn1_set_choice_selector 'int (int **, int, const int *)'
| |-ParmVarDecl 0x218353b38c0 <col:30, col:43> col:43 invalid pval 'int **'
| |-ParmVarDecl 0x218353b3940 <col:49, col:53> col:53 value 'int'
| `-ParmVarDecl 0x218353b39c0 <line:52:30, col:47> col:47 invalid it 'const int *'
|-FunctionDecl 0x218353afce0 <line:54:1, col:75> col:14 invalid asn1_get_field_ptr 'int **(int **, const int *)'
| |-ParmVarDecl 0x218353b3b88 <col:33, col:46> col:46 invalid pval 'int **'
| `-ParmVarDecl 0x218353b3c08 <col:52, col:73> col:73 invalid tt 'const int *'
|-FunctionDecl 0x218353affa0 <line:56:1, line:57:45> line:56:22 invalid asn1_do_adb 'const int *(int **, const int *, int)'
| |-ParmVarDecl 0x218353afdb0 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x218353afe30 <col:53, col:74> col:74 invalid tt 'const int *'
| `-ParmVarDecl 0x218353afeb0 <line:57:34, col:38> col:38 nullerr 'int'
|-FunctionDecl 0x218353b0220 <line:59:1, col:64> col:5 invalid asn1_do_lock 'int (int **, int, const int *)'
| |-ParmVarDecl 0x218353b0078 <col:18, col:31> col:31 invalid pval 'int **'
| |-ParmVarDecl 0x218353b00f8 <col:37, col:41> col:41 op 'int'
| `-ParmVarDecl 0x218353b0178 <col:45, col:62> col:62 invalid it 'const int *'
|-FunctionDecl 0x218353b0448 <line:61:1, col:58> col:6 invalid asn1_enc_init 'void (int **, const int *)'
| |-ParmVarDecl 0x218353b02f8 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x218353b0378 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x218353b0630 <line:62:1, col:58> col:6 invalid asn1_enc_free 'void (int **, const int *)'
| |-ParmVarDecl 0x218353b0518 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x218353b0598 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x218353b09e0 <line:63:1, line:64:41> line:63:5 invalid asn1_enc_restore 'int (int *, unsigned char **, int **, const int *)'
| |-ParmVarDecl 0x218353b06f8 <col:22, col:27> col:27 len 'int *'
| |-ParmVarDecl 0x218353b07d8 <col:32, col:48> col:48 out 'unsigned char **'
| |-ParmVarDecl 0x218353b0860 <col:53, col:66> col:66 invalid pval 'int **'
| `-ParmVarDecl 0x218353b08e0 <line:64:22, col:39> col:39 invalid it 'const int *'
|-FunctionDecl 0x218353e6ed0 <line:65:1, line:66:38> line:65:5 invalid asn1_enc_save 'int (int **, const unsigned char *, int, const int *)'
| |-ParmVarDecl 0x218353b0ac0 <col:19, col:32> col:32 invalid pval 'int **'
| |-ParmVarDecl 0x218353b0b70 <col:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x218353b0bf0 <col:63, col:67> col:67 inlen 'int'
| `-ParmVarDecl 0x218353e6dd0 <line:66:19, col:36> col:36 invalid it 'const int *'
|-FunctionDecl 0x218353e7198 <line:68:1, col:76> col:6 invalid asn1_item_embed_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x218353e6fb0 <col:27, col:40> col:40 invalid pval 'int **'
| |-ParmVarDecl 0x218353e7030 <col:46, col:63> col:63 invalid it 'const int *'
| `-ParmVarDecl 0x218353e70b0 <col:67, col:71> col:71 embed 'int'
|-FunctionDecl 0x218353e7410 <line:69:1, col:75> col:6 invalid asn1_primitive_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x218353e7270 <col:26, col:39> col:39 invalid pval 'int **'
| |-ParmVarDecl 0x218353e72f0 <col:45, col:62> col:62 invalid it 'const int *'
| `-ParmVarDecl 0x218353e7370 <col:66, col:70> col:70 embed 'int'
|-FunctionDecl 0x218353e7600 <line:70:1, col:67> col:6 invalid asn1_template_free 'void (int **, const int *)'
| |-ParmVarDecl 0x218353e74e8 <col:25, col:38> col:38 invalid pval 'int **'
| `-ParmVarDecl 0x218353e7568 <col:44, col:65> col:65 invalid tt 'const int *'
|-FunctionDecl 0x218353e78f0 <line:72:1, line:73:41> line:72:14 invalid c2i_ASN1_OBJECT 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x218353e76d0 <col:30, col:44> col:44 invalid a 'int **'
| |-ParmVarDecl 0x218353e7788 <col:47, col:69> col:69 pp 'const unsigned char **'
| `-ParmVarDecl 0x218353e7808 <line:73:30, col:35> col:35 length 'long'
|-FunctionDecl 0x218353e7b20 <line:74:1, col:63> col:5 invalid i2c_ASN1_BIT_STRING 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x218353e79c0 <col:25, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x218353e7a48 <col:45, col:61> col:61 pp 'unsigned char **'
|-FunctionDecl 0x218353e7de0 <line:75:1, line:76:75> line:75:18 invalid c2i_ASN1_BIT_STRING 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x218353e7bf0 <col:38, col:56> col:56 invalid a 'int **'
| |-ParmVarDecl 0x218353e7c78 <line:76:38, col:60> col:60 pp 'const unsigned char **'
| `-ParmVarDecl 0x218353e7cf8 <col:64, col:69> col:69 length 'long'
|-FunctionDecl 0x218353e7fd8 <line:77:1, col:57> col:5 invalid i2c_ASN1_INTEGER 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x218353e7eb0 <col:22, col:36> col:36 invalid a 'int *'
| `-ParmVarDecl 0x218353e7f38 <col:39, col:55> col:55 pp 'unsigned char **'
|-FunctionDecl 0x218353e8258 <line:78:1, line:79:43> line:78:15 invalid c2i_ASN1_INTEGER 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x218353e80a8 <col:32, col:47> col:47 invalid a 'int **'
| |-ParmVarDecl 0x218353e8130 <col:50, col:72> col:72 pp 'const unsigned char **'
| `-ParmVarDecl 0x218353e81b0 <line:79:32, col:37> col:37 length 'long'
|-FunctionDecl 0x218353e85b0 <line:82:1, col:79> col:5 invalid c2i_uint64_int 'int (int *, int *, const unsigned char **, long)'
| |-ParmVarDecl 0x218353e8328 <col:20, col:30> col:30 invalid ret 'int *'
| |-ParmVarDecl 0x218353e83a8 <col:35, col:40> col:40 neg 'int *'
| |-ParmVarDecl 0x218353e8430 <col:45, col:67> col:67 pp 'const unsigned char **'
| `-ParmVarDecl 0x218353e84b0 <col:71, col:76> col:76 len 'long'
|-FunctionDecl 0x218353e8870 <line:83:1, col:57> col:5 invalid i2c_uint64_int 'int (unsigned char *, int, int)'
| |-ParmVarDecl 0x218353e8688 <col:20, col:35> col:35 p 'unsigned char *'
| |-ParmVarDecl 0x218353e8708 <col:38, col:47> col:47 invalid r 'int'
| `-ParmVarDecl 0x218353e8788 <col:50, col:54> col:54 neg 'int'
|-VarDecl 0x218353e8940 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:27:1, col:18> col:18 invalid default_pctx 'int' static
|-FunctionDecl 0x218353e8b10 <line:35:1, line:45:1> line:35:12 invalid ASN1_PCTX_new 'int *(void)'
| `-CompoundStmt 0x218353e1f60 <line:36:1, line:45:1>
|   `-IfStmt 0x218353e1f48 <line:40:5, line:43:5>
|     |-OpaqueValueExpr 0x218353e1f30 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x218353e1f18 <line:40:22, line:43:5>
|       `-ReturnStmt 0x218353e1f08 <line:42:9, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25>
|         `-ImplicitCastExpr 0x218353e1ef0 <col:16, col:25> 'int *' <NullToPointer>
|           `-ParenExpr 0x218353e1ed0 <col:16, col:25> 'void *'
|             `-CStyleCastExpr 0x218353e1ea8 <col:17, col:24> 'void *' <NullToPointer>
|               `-IntegerLiteral 0x218353e1e68 <col:24> 'int' 0
|-FunctionDecl 0x218353e2058 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:47:1, line:50:1> line:47:6 invalid ASN1_PCTX_free 'void (int *)'
| |-ParmVarDecl 0x218353e1f90 <col:21, col:32> col:32 invalid p 'int *'
| `-CompoundStmt 0x218353e2228 <line:48:1, line:50:1>
|-FunctionDecl 0x218353e2320 <line:52:1, line:55:1> line:52:15 invalid ASN1_PCTX_get_flags 'unsigned long (const int *)'
| |-ParmVarDecl 0x218353e2250 <col:35, col:52> col:52 invalid p 'const int *'
| `-CompoundStmt 0x218353e23e0 <line:53:1, line:55:1>
|-FunctionDecl 0x218353e2558 <line:57:1, line:60:1> line:57:6 invalid ASN1_PCTX_set_flags 'void (int *, unsigned long)'
| |-ParmVarDecl 0x218353e2408 <col:26, col:37> col:37 invalid p 'int *'
| |-ParmVarDecl 0x218353e2488 <col:40, col:54> col:54 used flags 'unsigned long'
| `-CompoundStmt 0x218353e2658 <line:58:1, line:60:1>
|-FunctionDecl 0x218353e2718 <line:62:1, line:65:1> line:62:15 invalid ASN1_PCTX_get_nm_flags 'unsigned long (const int *)'
| |-ParmVarDecl 0x218353e2680 <col:38, col:55> col:55 invalid p 'const int *'
| `-CompoundStmt 0x218353e27d8 <line:63:1, line:65:1>
|-FunctionDecl 0x218353e2918 <line:67:1, line:70:1> line:67:6 invalid ASN1_PCTX_set_nm_flags 'void (int *, unsigned long)'
| |-ParmVarDecl 0x218353e2800 <col:29, col:40> col:40 invalid p 'int *'
| |-ParmVarDecl 0x218353e2880 <col:43, col:57> col:57 used flags 'unsigned long'
| `-CompoundStmt 0x218353e2a18 <line:68:1, line:70:1>
|-FunctionDecl 0x218353e2ad8 <line:72:1, line:75:1> line:72:15 invalid ASN1_PCTX_get_cert_flags 'unsigned long (const int *)'
| |-ParmVarDecl 0x218353e2a40 <col:40, col:57> col:57 invalid p 'const int *'
| `-CompoundStmt 0x218353e2b98 <line:73:1, line:75:1>
|-FunctionDecl 0x218353e2cd8 <line:77:1, line:80:1> line:77:6 invalid ASN1_PCTX_set_cert_flags 'void (int *, unsigned long)'
| |-ParmVarDecl 0x218353e2bc0 <col:31, col:42> col:42 invalid p 'int *'
| |-ParmVarDecl 0x218353e2c40 <col:45, col:59> col:59 used flags 'unsigned long'
| `-CompoundStmt 0x218353e5e20 <line:78:1, line:80:1>
|-FunctionDecl 0x218353e5ee0 <line:82:1, line:85:1> line:82:15 invalid ASN1_PCTX_get_oid_flags 'unsigned long (const int *)'
| |-ParmVarDecl 0x218353e5e48 <col:39, col:56> col:56 invalid p 'const int *'
| `-CompoundStmt 0x218353e5fa0 <line:83:1, line:85:1>
|-FunctionDecl 0x218353e60e0 <line:87:1, line:90:1> line:87:6 invalid ASN1_PCTX_set_oid_flags 'void (int *, unsigned long)'
| |-ParmVarDecl 0x218353e5fc8 <col:30, col:41> col:41 invalid p 'int *'
| |-ParmVarDecl 0x218353e6048 <col:44, col:58> col:58 used flags 'unsigned long'
| `-CompoundStmt 0x218353e61e0 <line:88:1, line:90:1>
|-FunctionDecl 0x218353e62a0 <line:92:1, line:95:1> line:92:15 invalid ASN1_PCTX_get_str_flags 'unsigned long (const int *)'
| |-ParmVarDecl 0x218353e6208 <col:39, col:56> col:56 invalid p 'const int *'
| `-CompoundStmt 0x218353e6360 <line:93:1, line:95:1>
|-FunctionDecl 0x218353e64a0 <line:97:1, line:100:1> line:97:6 invalid ASN1_PCTX_set_str_flags 'void (int *, unsigned long)'
| |-ParmVarDecl 0x218353e6388 <col:30, col:41> col:41 invalid p 'int *'
| |-ParmVarDecl 0x218353e6408 <col:44, col:58> col:58 used flags 'unsigned long'
| `-CompoundStmt 0x218353e65a0 <line:98:1, line:100:1>
|-FunctionDecl 0x218353e6a90 <line:104:1, line:107:64> line:104:12 invalid asn1_item_print_ctx 'int (int *, int **, int, const int *, const char *, const char *, int, const int *)' static
| |-ParmVarDecl 0x218353e65c8 <col:32, col:37> col:37 invalid out 'int *'
| |-ParmVarDecl 0x218353e6650 <col:42, col:55> col:55 invalid fld 'int **'
| |-ParmVarDecl 0x218353e66d0 <col:60, col:64> col:64 indent 'int'
| |-ParmVarDecl 0x218353e6750 <line:105:32, col:49> col:49 invalid it 'const int *'
| |-ParmVarDecl 0x218353e67d0 <line:106:32, col:44> col:44 fname 'const char *'
| |-ParmVarDecl 0x218353e6850 <col:51, col:63> col:63 sname 'const char *'
| |-ParmVarDecl 0x218353e68d0 <line:107:32, col:36> col:36 nohdr 'int'
| `-ParmVarDecl 0x218353e6950 <col:43, col:60> col:60 invalid pctx 'const int *'
|-FunctionDecl 0x218353e9f10 <line:109:1, line:110:75> line:109:12 invalid asn1_template_print_ctx 'int (int *, int **, int, const int *, const int *)' static
| |-ParmVarDecl 0x218353e6b88 <col:36, col:41> col:41 invalid out 'int *'
| |-ParmVarDecl 0x218353e6c10 <col:46, col:59> col:59 invalid fld 'int **'
| |-ParmVarDecl 0x218353e6c90 <col:64, col:68> col:68 indent 'int'
| |-ParmVarDecl 0x218353e6d10 <line:110:29, col:50> col:50 invalid tt 'const int *'
| `-ParmVarDecl 0x218353e9e00 <col:54, col:71> col:71 invalid pctx 'const int *'
|-FunctionDecl 0x218353ea420 <line:112:1, line:115:54> line:112:12 invalid asn1_primitive_print 'int (int *, int **, const int *, int, const char *, const char *, const int *)' static
| |-ParmVarDecl 0x218353e9ff0 <col:33, col:38> col:38 invalid out 'int *'
| |-ParmVarDecl 0x218353ea078 <col:43, col:56> col:56 invalid fld 'int **'
| |-ParmVarDecl 0x218353ea0f8 <line:113:33, col:50> col:50 invalid it 'const int *'
| |-ParmVarDecl 0x218353ea178 <col:54, col:58> col:58 indent 'int'
| |-ParmVarDecl 0x218353ea1f8 <line:114:33, col:45> col:45 fname 'const char *'
| |-ParmVarDecl 0x218353ea278 <col:52, col:64> col:64 sname 'const char *'
| `-ParmVarDecl 0x218353ea2f8 <line:115:33, col:50> col:50 invalid pctx 'const int *'
|-FunctionDecl 0x218353ea820 <line:117:1, line:119:51> line:117:12 invalid asn1_print_fsname 'int (int *, int, const char *, const char *, const int *)' static
| |-ParmVarDecl 0x218353ea510 <col:30, col:35> col:35 invalid out 'int *'
| |-ParmVarDecl 0x218353ea590 <col:40, col:44> col:44 indent 'int'
| |-ParmVarDecl 0x218353ea610 <line:118:30, col:42> col:42 fname 'const char *'
| |-ParmVarDecl 0x218353ea690 <col:49, col:61> col:61 sname 'const char *'
| `-ParmVarDecl 0x218353ea710 <line:119:30, col:47> col:47 invalid pctx 'const int *'
|-FunctionDecl 0x218353eac10 <line:121:1, line:132:1> line:121:5 invalid ASN1_item_print 'int (int *, int *, int, const int *, const int *)'
| |-ParmVarDecl 0x218353ea900 <col:21, col:26> col:26 invalid out 'int *'
| |-ParmVarDecl 0x218353ea980 <col:31, col:43> col:43 invalid ifld 'int *'
| |-ParmVarDecl 0x218353eaa00 <col:49, col:53> col:53 used indent 'int'
| |-ParmVarDecl 0x218353eaa80 <line:122:21, col:38> col:38 invalid it 'const int *'
| |-ParmVarDecl 0x218353eab00 <col:42, col:59> col:59 invalid pctx 'const int *'
| `-CompoundStmt 0x218353e3018 <line:123:1, line:132:1>
|   |-DeclStmt 0x218353ead70 <line:124:5, col:22>
|   | `-VarDecl 0x218353ead08 <col:5, col:17> col:17 used sname 'const char *'
|   `-IfStmt 0x218353e2ee8 <line:127:5, line:130:9> has_else
|     |-OpaqueValueExpr 0x218353e2ed0 <<invalid sloc>> '_Bool'
|     |-BinaryOperator 0x218353e2e88 <line:128:9, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'const char *' '='
|     | |-DeclRefExpr 0x218353e2db0 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:128:9> 'const char *' lvalue Var 0x218353ead08 'sname' 'const char *'
|     | `-ImplicitCastExpr 0x218353e2e70 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const char *' <NullToPointer>
|     |   `-ParenExpr 0x218353e2e50 <col:16, col:25> 'void *'
|     |     `-CStyleCastExpr 0x218353e2e28 <col:17, col:24> 'void *' <NullToPointer>
|     |       `-IntegerLiteral 0x218353e2de8 <col:24> 'int' 0
|     `-NullStmt 0x218353e2ec8 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:130:9>
|-FunctionDecl 0x218353e34a8 <line:134:1, line:262:1> line:134:12 invalid asn1_item_print_ctx 'int (int *, int **, int, const int *, const char *, const char *, int, const int *)' static
| |-ParmVarDecl 0x218353e3050 <col:32, col:37> col:37 invalid out 'int *'
| |-ParmVarDecl 0x218353e30d8 <col:42, col:55> col:55 invalid fld 'int **'
| |-ParmVarDecl 0x218353e3158 <col:60, col:64> col:64 used indent 'int'
| |-ParmVarDecl 0x218353e31d8 <line:135:32, col:49> col:49 invalid it 'const int *'
| |-ParmVarDecl 0x218353e3258 <line:136:32, col:44> col:44 used fname 'const char *'
| |-ParmVarDecl 0x218353e32d8 <col:51, col:63> col:63 used sname 'const char *'
| |-ParmVarDecl 0x218353e3358 <line:137:32, col:36> col:36 used nohdr 'int'
| |-ParmVarDecl 0x218353e33d8 <col:43, col:60> col:60 invalid pctx 'const int *'
| `-CompoundStmt 0x218353ef968 <line:138:1, line:262:1>
|   |-DeclStmt 0x218353e3620 <line:139:5, col:28>
|   | `-VarDecl 0x218353e35b8 <col:5, col:26> col:26 invalid tt 'const int *'
|   |-DeclStmt 0x218353e36b8 <line:140:5, col:32>
|   | `-VarDecl 0x218353e3650 <col:5, col:30> col:30 invalid ef 'const int *'
|   |-DeclStmt 0x218353e3750 <line:142:5, col:36>
|   | `-VarDecl 0x218353e36e8 <col:5, col:21> col:21 invalid aux 'const int *'
|   |-DeclStmt 0x218353e37e8 <line:145:5, col:10>
|   | `-VarDecl 0x218353e3780 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x218353e3890 <line:146:5, line:152:9> has_else
|   | |-OpaqueValueExpr 0x218353e3878 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x218353e3838 <line:146:30, line:151:5>
|   | `-NullStmt 0x218353e3870 <line:152:9>
|   |-IfStmt 0x218353e3d60 <line:154:4, line:163:5>
|   | |-OpaqueValueExpr 0x218353e3d48 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x218353e3d28 <line:155:59, line:163:5>
|   |   |-IfStmt 0x218353e3cd8 <line:156:9, line:161:9>
|   |   | |-OpaqueValueExpr 0x218353e3cc0 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x218353e3ca0 <line:156:56, line:161:9>
|   |   |   |-IfStmt 0x218353e3a88 <line:157:13, line:158:24>
|   |   |   | |-OpaqueValueExpr 0x218353e3a70 <<invalid sloc>> '_Bool'
|   |   |   | `-ReturnStmt 0x218353e3a60 <col:17, col:24>
|   |   |   |   `-IntegerLiteral 0x218353e3a38 <col:24> 'int' 0
|   |   |   `-IfStmt 0x218353e3c88 <line:159:13, line:160:24>
|   |   |     |-OpaqueValueExpr 0x218353e3c70 <<invalid sloc>> '_Bool'
|   |   |     `-ReturnStmt 0x218353e3c60 <col:17, col:24>
|   |   |       `-IntegerLiteral 0x218353e3c38 <col:24> 'int' 0
|   |   `-ReturnStmt 0x218353e3d18 <line:162:9, col:16>
|   |     `-IntegerLiteral 0x218353e3cf0 <col:16> 'int' 1
|   `-ReturnStmt 0x218353ef958 <line:261:5, col:12>
|     `-IntegerLiteral 0x218353ef930 <col:12> 'int' 1
|-FunctionDecl 0x218353efc88 <line:264:1, line:328:1> line:264:12 invalid asn1_template_print_ctx 'int (int *, int **, int, const int *, const int *)' static
| |-ParmVarDecl 0x218353ef9c8 <col:36, col:41> col:41 invalid out 'int *'
| |-ParmVarDecl 0x218353efa50 <col:46, col:59> col:59 invalid fld 'int **'
| |-ParmVarDecl 0x218353efad0 <col:64, col:68> col:68 used indent 'int'
| |-ParmVarDecl 0x218353efb50 <line:265:29, col:50> col:50 invalid tt 'const int *'
| |-ParmVarDecl 0x218353efbd0 <col:54, col:71> col:71 invalid pctx 'const int *'
| `-CompoundStmt 0x218353ed720 <line:266:1, line:328:1>
|   |-DeclStmt 0x218353f1f00 <line:267:5, col:17>
|   | |-VarDecl 0x218353efd80 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x218353f1e80 <col:5, col:12> col:12 used flags 'int'
|   |-DeclStmt 0x218353f2030 <line:268:5, col:30>
|   | |-VarDecl 0x218353f1f30 <col:5, col:17> col:17 used sname 'const char *'
|   | `-VarDecl 0x218353f1fb0 <col:5, col:25> col:25 used fname 'const char *'
|   |-IfStmt 0x218353f22c8 <line:271:5, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> has_else
|   | |-OpaqueValueExpr 0x218353f22b0 <<invalid sloc>> '_Bool'
|   | |-NullStmt 0x218353f22a8 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:272:9>
|   | `-BinaryOperator 0x218353f2288 <line:274:9, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'const char *' '='
|   |   |-DeclRefExpr 0x218353f21c8 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:274:9> 'const char *' lvalue Var 0x218353f1f30 'sname' 'const char *'
|   |   `-ImplicitCastExpr 0x218353f2270 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const char *' <NullToPointer>
|   |     `-ParenExpr 0x218353f2250 <col:16, col:25> 'void *'
|   |       `-CStyleCastExpr 0x218353f2228 <col:17, col:24> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x218353f21e8 <col:24> 'int' 0
|   |-IfStmt 0x218353f2428 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:275:5, line:278:9> has_else
|   | |-OpaqueValueExpr 0x218353f2410 <<invalid sloc>> '_Bool'
|   | |-BinaryOperator 0x218353f23c8 <line:276:9, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'const char *' '='
|   | | |-DeclRefExpr 0x218353f22f0 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:276:9> 'const char *' lvalue Var 0x218353f1fb0 'fname' 'const char *'
|   | | `-ImplicitCastExpr 0x218353f23b0 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const char *' <NullToPointer>
|   | |   `-ParenExpr 0x218353f2390 <col:16, col:25> 'void *'
|   | |     `-CStyleCastExpr 0x218353f2368 <col:17, col:24> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x218353f2328 <col:24> 'int' 0
|   | `-NullStmt 0x218353f2408 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:278:9>
|   |-IfStmt 0x218353f2498 <line:284:5, line:287:5>
|   | |-OpaqueValueExpr 0x218353f2480 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x218353f2470 <line:284:34, line:287:5>
|   `-IfStmt 0x218353ed660 <line:289:5, line:325:5>
|     |-OpaqueValueExpr 0x218353ed648 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x218353ed610 <line:289:36, line:325:5>
|       |-DeclStmt 0x218353f2550 <line:290:9, col:20>
|       | `-VarDecl 0x218353f24e8 <col:9, col:15> col:15 used tname 'char *'
|       |-IfStmt 0x218353f2ba8 <line:295:9, line:306:9>
|       | |-ImplicitCastExpr 0x218353f2698 <line:295:13> 'const char *' <LValueToRValue>
|       | | `-DeclRefExpr 0x218353f2678 <col:13> 'const char *' lvalue Var 0x218353f1fb0 'fname' 'const char *'
|       | `-CompoundStmt 0x218353f2b90 <col:20, line:306:9>
|       |   `-IfStmt 0x218353f2b68 <line:296:13, line:305:24> has_else
|       |     |-OpaqueValueExpr 0x218353f2b50 <<invalid sloc>> '_Bool'
|       |     |-CompoundStmt 0x218353f29d0 <line:296:58, line:304:13>
|       |     | |-IfStmt 0x218353f2828 <line:297:17, line:300:29> has_else
|       |     | | |-OpaqueValueExpr 0x218353f2810 <<invalid sloc>> '_Bool'
|       |     | | |-BinaryOperator 0x218353f2740 <line:298:21, col:29> 'char *' '='
|       |     | | | |-DeclRefExpr 0x218353f26d0 <col:21> 'char *' lvalue Var 0x218353f24e8 'tname' 'char *'
|       |     | | | `-ImplicitCastExpr 0x218353f2728 <col:29> 'char *' <ArrayToPointerDecay>
|       |     | | |   `-StringLiteral 0x218353f2708 <col:29> 'char [4]' lvalue "SET"
|       |     | | `-BinaryOperator 0x218353f27f0 <line:300:21, col:29> 'char *' '='
|       |     | |   |-DeclRefExpr 0x218353f2760 <col:21> 'char *' lvalue Var 0x218353f24e8 'tname' 'char *'
|       |     | |   `-ImplicitCastExpr 0x218353f27d8 <col:29> 'char *' <ArrayToPointerDecay>
|       |     | |     `-StringLiteral 0x218353f27b8 <col:29> 'char [9]' lvalue "SEQUENCE"
|       |     | `-IfStmt 0x218353f29b8 <line:301:17, line:303:28>
|       |     |   |-OpaqueValueExpr 0x218353f29a0 <<invalid sloc>> '_Bool'
|       |     |   `-ReturnStmt 0x218353f2990 <col:21, col:28>
|       |     |     `-IntegerLiteral 0x218353f2968 <col:28> 'int' 0
|       |     `-IfStmt 0x218353f2b38 <line:304:20, line:305:24>
|       |       |-OpaqueValueExpr 0x218353f2b20 <<invalid sloc>> '_Bool'
|       |       `-ReturnStmt 0x218353f2b10 <col:17, col:24>
|       |         `-IntegerLiteral 0x218353f2ae8 <col:24> 'int' 0
|       |-IfStmt 0x218353ed470 <line:318:9, line:319:20>
|       | |-OpaqueValueExpr 0x218353ed458 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x218353ed448 <col:13, col:20>
|       |   `-IntegerLiteral 0x218353ed420 <col:20> 'int' 0
|       |-IfStmt 0x218353ed5c0 <line:320:9, line:323:9>
|       | |-OpaqueValueExpr 0x218353ed5a8 <<invalid sloc>> '_Bool'
|       | `-CompoundStmt 0x218353ed590 <line:320:58, line:323:9>
|       |   `-IfStmt 0x218353ed578 <line:321:13, line:322:24>
|       |     |-OpaqueValueExpr 0x218353ed560 <<invalid sloc>> '_Bool'
|       |     `-ReturnStmt 0x218353ed550 <col:17, col:24>
|       |       `-IntegerLiteral 0x218353ed528 <col:24> 'int' 0
|       `-ReturnStmt 0x218353ed600 <line:324:9, col:16>
|         `-IntegerLiteral 0x218353ed5d8 <col:16> 'int' 1
|-FunctionDecl 0x218353eda30 <line:330:1, line:366:1> line:330:12 invalid asn1_print_fsname 'int (int *, int, const char *, const char *, const int *)' static
| |-ParmVarDecl 0x218353ed778 <col:30, col:35> col:35 invalid out 'int *'
| |-ParmVarDecl 0x218353ed7f8 <col:40, col:44> col:44 used indent 'int'
| |-ParmVarDecl 0x218353ed878 <line:331:30, col:42> col:42 used fname 'const char *'
| |-ParmVarDecl 0x218353ed8f8 <col:49, col:61> col:61 used sname 'const char *'
| |-ParmVarDecl 0x218353ed978 <line:332:30, col:47> col:47 invalid pctx 'const int *'
| `-CompoundStmt 0x218353f0b88 <line:333:1, line:366:1>
|   |-DeclStmt 0x218353edc58 <line:334:5, col:56>
|   | `-VarDecl 0x218353edb88 <col:5, col:34> col:23 used spaces 'const char [21]' static cinit
|   |   `-StringLiteral 0x218353edbf0 <col:34> 'const char [21]' "                    "
|   |-DeclStmt 0x218353eddc8 <line:335:5, col:50>
|   | `-VarDecl 0x218353edc88 <col:5, col:49> col:22 used nspaces 'const int' static cinit
|   |   `-ImplicitCastExpr 0x218353eddb0 <col:32, col:49> 'int' <IntegralCast>
|   |     `-BinaryOperator 0x218353edd90 <col:32, col:49> 'unsigned long long' '-'
|   |       |-UnaryExprOrTypeTraitExpr 0x218353edd30 <col:32, col:45> 'unsigned long long' sizeof
|   |       | `-ParenExpr 0x218353edd10 <col:38, col:45> 'const char [21]' lvalue
|   |       |   `-DeclRefExpr 0x218353edcf0 <col:39> 'const char [21]' lvalue Var 0x218353edb88 'spaces' 'const char [21]' non_odr_use_unevaluated
|   |       `-ImplicitCastExpr 0x218353edd78 <col:49> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x218353edd50 <col:49> 'int' 1
|   |-WhileStmt 0x218353f01c8 <line:337:5, line:341:5>
|   | |-BinaryOperator 0x218353efec8 <line:337:12, col:21> 'int' '>'
|   | | |-ImplicitCastExpr 0x218353efe98 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x218353edde0 <col:12> 'int' lvalue ParmVar 0x218353ed7f8 'indent' 'int'
|   | | `-ImplicitCastExpr 0x218353efeb0 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x218353efe60 <col:21> 'const int' lvalue Var 0x218353edc88 'nspaces' 'const int'
|   | `-CompoundStmt 0x218353f01a8 <col:30, line:341:5>
|   |   |-IfStmt 0x218353f0108 <line:338:9, line:339:20>
|   |   | |-OpaqueValueExpr 0x218353f00f0 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x218353f00e0 <col:13, col:20>
|   |   |   `-IntegerLiteral 0x218353f00b8 <col:20> 'int' 0
|   |   `-CompoundAssignOperator 0x218353f0178 <line:340:9, col:19> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x218353f0120 <col:9> 'int' lvalue ParmVar 0x218353ed7f8 'indent' 'int'
|   |     `-ImplicitCastExpr 0x218353f0160 <col:19> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x218353f0140 <col:19> 'const int' lvalue Var 0x218353edc88 'nspaces' 'const int'
|   |-IfStmt 0x218353f02b0 <line:342:5, line:343:16>
|   | |-OpaqueValueExpr 0x218353f0298 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x218353f0288 <col:9, col:16>
|   |   `-IntegerLiteral 0x218353f0260 <col:16> 'int' 0
|   |-IfStmt 0x218353f03d8 <line:344:5, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25>
|   | |-OpaqueValueExpr 0x218353f03c0 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x218353f03a0 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:345:9, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'const char *' '='
|   |   |-DeclRefExpr 0x218353f02c8 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:345:9> 'const char *' lvalue ParmVar 0x218353ed8f8 'sname' 'const char *'
|   |   `-ImplicitCastExpr 0x218353f0388 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const char *' <NullToPointer>
|   |     `-ParenExpr 0x218353f0368 <col:16, col:25> 'void *'
|   |       `-CStyleCastExpr 0x218353f0340 <col:17, col:24> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x218353f0300 <col:24> 'int' 0
|   |-IfStmt 0x218353f0500 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:346:5, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25>
|   | |-OpaqueValueExpr 0x218353f04e8 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x218353f04c8 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:347:9, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'const char *' '='
|   |   |-DeclRefExpr 0x218353f03f0 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:347:9> 'const char *' lvalue ParmVar 0x218353ed878 'fname' 'const char *'
|   |   `-ImplicitCastExpr 0x218353f04b0 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const char *' <NullToPointer>
|   |     `-ParenExpr 0x218353f0490 <col:16, col:25> 'void *'
|   |       `-CStyleCastExpr 0x218353f0468 <col:17, col:24> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x218353f0428 <col:24> 'int' 0
|   |-IfStmt 0x218353f0610 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:348:5, line:349:16>
|   | |-BinaryOperator 0x218353f05b8 <line:348:9, col:20> 'int' '&&'
|   | | |-UnaryOperator 0x218353f0550 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x218353f0538 <col:10> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x218353f0518 <col:10> 'const char *' lvalue ParmVar 0x218353ed8f8 'sname' 'const char *'
|   | | `-UnaryOperator 0x218353f05a0 <col:19, col:20> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x218353f0588 <col:20> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x218353f0568 <col:20> 'const char *' lvalue ParmVar 0x218353ed878 'fname' 'const char *'
|   | `-ReturnStmt 0x218353f0600 <line:349:9, col:16>
|   |   `-IntegerLiteral 0x218353f05d8 <col:16> 'int' 1
|   |-IfStmt 0x218353f0748 <line:350:5, line:353:5>
|   | |-ImplicitCastExpr 0x218353f0648 <line:350:9> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x218353f0628 <col:9> 'const char *' lvalue ParmVar 0x218353ed878 'fname' 'const char *'
|   | `-CompoundStmt 0x218353f0730 <col:16, line:353:5>
|   |   `-IfStmt 0x218353f0718 <line:351:9, line:352:20>
|   |     |-OpaqueValueExpr 0x218353f0700 <<invalid sloc>> '_Bool'
|   |     `-ReturnStmt 0x218353f06f0 <col:13, col:20>
|   |       `-IntegerLiteral 0x218353f06c8 <col:20> 'int' 0
|   |-IfStmt 0x218353f0a00 <line:354:5, line:362:5>
|   | |-ImplicitCastExpr 0x218353f0780 <line:354:9> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x218353f0760 <col:9> 'const char *' lvalue ParmVar 0x218353ed8f8 'sname' 'const char *'
|   | `-CompoundStmt 0x218353f09e8 <col:16, line:362:5>
|   |   `-IfStmt 0x218353f09c0 <line:355:9, line:361:9> has_else
|   |     |-ImplicitCastExpr 0x218353f07b8 <line:355:13> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x218353f0798 <col:13> 'const char *' lvalue ParmVar 0x218353ed878 'fname' 'const char *'
|   |     |-CompoundStmt 0x218353f08c0 <col:20, line:358:9>
|   |     | `-IfStmt 0x218353f08a8 <line:356:13, line:357:24>
|   |     |   |-OpaqueValueExpr 0x218353f0890 <<invalid sloc>> '_Bool'
|   |     |   `-ReturnStmt 0x218353f0880 <col:17, col:24>
|   |     |     `-IntegerLiteral 0x218353f0858 <col:24> 'int' 0
|   |     `-CompoundStmt 0x218353f09a8 <line:358:16, line:361:9>
|   |       `-IfStmt 0x218353f0990 <line:359:13, line:360:24>
|   |         |-OpaqueValueExpr 0x218353f0978 <<invalid sloc>> '_Bool'
|   |         `-ReturnStmt 0x218353f0968 <col:17, col:24>
|   |           `-IntegerLiteral 0x218353f0940 <col:24> 'int' 0
|   |-IfStmt 0x218353f0b38 <line:363:5, line:364:16>
|   | |-OpaqueValueExpr 0x218353f0b20 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x218353f0b10 <col:9, col:16>
|   |   `-IntegerLiteral 0x218353f0ae8 <col:16> 'int' 0
|   `-ReturnStmt 0x218353f0b78 <line:365:5, col:12>
|     `-IntegerLiteral 0x218353f0b50 <col:12> 'int' 1
|-FunctionDecl 0x218353f0d60 <line:368:1, line:390:1> line:368:12 invalid asn1_print_boolean 'int (int *, int)' static
| |-ParmVarDecl 0x218353f0c08 <col:31, col:36> col:36 invalid out 'int *'
| |-ParmVarDecl 0x218353f0c88 <col:41, col:45> col:45 used boolval 'int'
| `-CompoundStmt 0x218353eb378 <line:369:1, line:390:1>
|   |-DeclStmt 0x218353eae78 <line:370:5, col:20>
|   | `-VarDecl 0x218353eae10 <col:5, col:17> col:17 used str 'const char *'
|   |-SwitchStmt 0x218353eaee0 <line:371:5, line:384:5>
|   | |-ImplicitCastExpr 0x218353eaec8 <line:371:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x218353eae90 <col:13> 'int' lvalue ParmVar 0x218353f0c88 'boolval' 'int'
|   | `-CompoundStmt 0x218353eb230 <col:22, line:384:5>
|   |   |-CaseStmt 0x218353eaf58 <line:372:5, line:373:15>
|   |   | |-ConstantExpr 0x218353eaf40 <line:372:10, col:11> 'int'
|   |   | | `-UnaryOperator 0x218353eaf28 <col:10, col:11> 'int' prefix '-'
|   |   | |   `-IntegerLiteral 0x218353eaf00 <col:11> 'int' 1
|   |   | `-BinaryOperator 0x218353eb010 <line:373:9, col:15> 'const char *' '='
|   |   |   |-DeclRefExpr 0x218353eaf80 <col:9> 'const char *' lvalue Var 0x218353eae10 'str' 'const char *'
|   |   |   `-ImplicitCastExpr 0x218353eaff8 <col:15> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x218353eafe0 <col:15> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x218353eafb8 <col:15> 'char [12]' lvalue "BOOL ABSENT"
|   |   |-BreakStmt 0x218353eb030 <line:374:9>
|   |   |-CaseStmt 0x218353eb078 <line:376:5, line:377:15>
|   |   | |-ConstantExpr 0x218353eb060 <line:376:10> 'int'
|   |   | | `-IntegerLiteral 0x218353eb038 <col:10> 'int' 0
|   |   | `-BinaryOperator 0x218353eb110 <line:377:9, col:15> 'const char *' '='
|   |   |   |-DeclRefExpr 0x218353eb0a0 <col:9> 'const char *' lvalue Var 0x218353eae10 'str' 'const char *'
|   |   |   `-ImplicitCastExpr 0x218353eb0f8 <col:15> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x218353eb0e0 <col:15> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x218353eb0c0 <col:15> 'char [6]' lvalue "FALSE"
|   |   |-BreakStmt 0x218353eb130 <line:378:9>
|   |   |-DefaultStmt 0x218353eb208 <line:380:5, line:381:15>
|   |   | `-BinaryOperator 0x218353eb1e8 <col:9, col:15> 'const char *' '='
|   |   |   |-DeclRefExpr 0x218353eb138 <col:9> 'const char *' lvalue Var 0x218353eae10 'str' 'const char *'
|   |   |   `-ImplicitCastExpr 0x218353eb1d0 <col:15> 'const char *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x218353eb1b8 <col:15> 'char *' <ArrayToPointerDecay>
|   |   |       `-StringLiteral 0x218353eb198 <col:15> 'char [5]' lvalue "TRUE"
|   |   `-BreakStmt 0x218353eb228 <line:382:9>
|   |-IfStmt 0x218353eb328 <line:386:5, line:387:16>
|   | |-OpaqueValueExpr 0x218353eb310 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x218353eb300 <col:9, col:16>
|   |   `-IntegerLiteral 0x218353eb2d8 <col:16> 'int' 0
|   `-ReturnStmt 0x218353eb368 <line:388:5, col:12>
|     `-IntegerLiteral 0x218353eb340 <col:12> 'int' 1
|-FunctionDecl 0x218353eb520 <line:392:1, line:403:1> line:392:12 invalid asn1_print_integer 'int (int *, const int *)' static
| |-ParmVarDecl 0x218353eb3c0 <col:31, col:36> col:36 invalid out 'int *'
| |-ParmVarDecl 0x218353eb440 <col:41, col:61> col:61 invalid str 'const int *'
| `-CompoundStmt 0x218353ebc78 <line:393:1, line:403:1>
|   |-DeclStmt 0x218353eb668 <line:394:5, col:12>
|   | `-VarDecl 0x218353eb600 <col:5, col:11> col:11 used s 'char *'
|   |-DeclStmt 0x218353eb728 <line:395:5, col:16>
|   | `-VarDecl 0x218353eb698 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x218353eb700 <col:15> 'int' 1
|   |-IfStmt 0x218353eba40 <line:397:5, line:398:16>
|   | |-BinaryOperator 0x218353eb9e8 <line:397:9, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'int' '=='
|   | | |-ImplicitCastExpr 0x218353eb9b8 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:397:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x218353eb910 <col:9> 'char *' lvalue Var 0x218353eb600 's' 'char *'
|   | | `-ImplicitCastExpr 0x218353eb9d0 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'char *' <BitCast>
|   | |   `-ParenExpr 0x218353eb998 <col:16, col:25> 'void *'
|   | |     `-CStyleCastExpr 0x218353eb970 <col:17, col:24> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x218353eb930 <col:24> 'int' 0
|   | `-ReturnStmt 0x218353eba30 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:398:9, col:16>
|   |   `-IntegerLiteral 0x218353eba08 <col:16> 'int' 0
|   |-IfStmt 0x218353ebb58 <line:399:5, line:400:15>
|   | |-OpaqueValueExpr 0x218353ebb40 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x218353ebb20 <col:9, col:15> 'int' '='
|   |   |-DeclRefExpr 0x218353ebac0 <col:9> 'int' lvalue Var 0x218353eb698 'ret' 'int'
|   |   `-IntegerLiteral 0x218353ebaf8 <col:15> 'int' 0
|   |-CallExpr 0x218353ebbf0 <line:401:5, col:19> 'int'
|   | |-ImplicitCastExpr 0x218353ebbd8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x218353ebb70 <col:5> 'int ()' Function 0x218353e2140 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x218353ebc18 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x218353ebb90 <col:18> 'char *' lvalue Var 0x218353eb600 's' 'char *'
|   `-ReturnStmt 0x218353ebc68 <line:402:5, col:12>
|     `-ImplicitCastExpr 0x218353ebc50 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x218353ebc30 <col:12> 'int' lvalue Var 0x218353eb698 'ret' 'int'
|-FunctionDecl 0x218353f2e90 <line:405:1, line:416:1> line:405:12 invalid asn1_print_oid 'int (int *, const int *)' static
| |-ParmVarDecl 0x218353ebcd0 <col:27, col:32> col:32 invalid out 'int *'
| |-ParmVarDecl 0x218353ebd50 <col:37, col:56> col:56 invalid oid 'const int *'
| `-CompoundStmt 0x218353f3770 <line:406:1, line:416:1>
|   |-DeclStmt 0x218353f3060 <line:407:5, col:20>
|   | `-VarDecl 0x218353f2ff8 <col:5, col:19> col:10 used objbuf 'char [80]'
|   |-DeclStmt 0x218353f30f8 <line:408:5, col:19>
|   | `-VarDecl 0x218353f3090 <col:5, col:17> col:17 used ln 'const char *'
|   |-IfStmt 0x218353f3440 <line:410:5, line:411:14>
|   | |-UnaryOperator 0x218353f33a0 <line:410:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x218353f3388 <col:10> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x218353f3368 <col:10> 'const char *' lvalue Var 0x218353f3090 'ln' 'const char *'
|   | `-BinaryOperator 0x218353f3420 <line:411:9, col:14> 'const char *' '='
|   |   |-DeclRefExpr 0x218353f33b8 <col:9> 'const char *' lvalue Var 0x218353f3090 'ln' 'const char *'
|   |   `-ImplicitCastExpr 0x218353f3408 <col:14> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x218353f33f0 <col:14> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x218353f33d8 <col:14> 'char [1]' lvalue ""
|   |-IfStmt 0x218353f3720 <line:413:5, line:414:16>
|   | |-OpaqueValueExpr 0x218353f3708 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x218353f36f8 <col:9, col:16>
|   |   `-IntegerLiteral 0x218353f36d0 <col:16> 'int' 0
|   `-ReturnStmt 0x218353f3760 <line:415:5, col:12>
|     `-IntegerLiteral 0x218353f3738 <col:12> 'int' 1
|-FunctionDecl 0x218353f39b0 <line:418:1, line:430:1> line:418:12 invalid asn1_print_obstring 'int (int *, const int *, int)' static
| |-ParmVarDecl 0x218353f37c0 <col:32, col:37> col:37 invalid out 'int *'
| |-ParmVarDecl 0x218353f3840 <col:42, col:61> col:61 invalid str 'const int *'
| |-ParmVarDecl 0x218353f38c0 <col:66, col:70> col:70 used indent 'int'
| `-CompoundStmt 0x218353ebf20 <line:419:1, line:430:1>
|   |-IfStmt 0x218353f3cc0 <line:420:5, line:424:16> has_else
|   | |-OpaqueValueExpr 0x218353f3ca8 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x218353f3bc0 <line:420:41, line:423:5>
|   | | `-IfStmt 0x218353f3ba8 <line:421:9, line:422:20>
|   | |   |-OpaqueValueExpr 0x218353f3b90 <<invalid sloc>> '_Bool'
|   | |   `-ReturnStmt 0x218353f3b80 <col:13, col:20>
|   | |     `-IntegerLiteral 0x218353f3b58 <col:20> 'int' 0
|   | `-IfStmt 0x218353f3c90 <line:423:12, line:424:16>
|   |   |-OpaqueValueExpr 0x218353f3c78 <<invalid sloc>> '_Bool'
|   |   `-ReturnStmt 0x218353f3c68 <col:9, col:16>
|   |     `-IntegerLiteral 0x218353f3c40 <col:16> 'int' 0
|   |-IfStmt 0x218353ebed0 <line:425:5, line:428:16>
|   | |-OpaqueValueExpr 0x218353ebeb8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x218353ebea8 <col:9, col:16>
|   |   `-IntegerLiteral 0x218353ebe80 <col:16> 'int' 0
|   `-ReturnStmt 0x218353ebf10 <line:429:5, col:12>
|     `-IntegerLiteral 0x218353ebee8 <col:12> 'int' 1
`-FunctionDecl 0x218353ec330 <line:432:1, line:538:1> line:432:12 invalid asn1_primitive_print 'int (int *, int **, const int *, int, const char *, const char *, const int *)' static
  |-ParmVarDecl 0x218353ebf60 <col:33, col:38> col:38 invalid out 'int *'
  |-ParmVarDecl 0x218353ebfe8 <col:43, col:56> col:56 invalid fld 'int **'
  |-ParmVarDecl 0x218353ec068 <line:433:33, col:50> col:50 invalid it 'const int *'
  |-ParmVarDecl 0x218353ec0e8 <col:54, col:58> col:58 used indent 'int'
  |-ParmVarDecl 0x218353ec168 <line:434:33, col:45> col:45 used fname 'const char *'
  |-ParmVarDecl 0x218353ec1e8 <col:52, col:64> col:64 used sname 'const char *'
  |-ParmVarDecl 0x218353ec268 <line:435:33, col:50> col:50 invalid pctx 'const int *'
  `-CompoundStmt 0x218353ee080 <line:436:1, line:538:1>
    |-DeclStmt 0x218353ec4a0 <line:437:5, col:15>
    | `-VarDecl 0x218353ec438 <col:5, col:10> col:10 used utype 'long'
    |-DeclStmt 0x218353ec620 <line:439:5, col:28>
    | |-VarDecl 0x218353ec4d0 <col:5, col:15> col:9 used ret 'int' cinit
    | | `-IntegerLiteral 0x218353ec538 <col:15> 'int' 1
    | `-VarDecl 0x218353ec578 <col:5, col:27> col:18 used needlf 'int' cinit
    |   `-IntegerLiteral 0x218353ec5e0 <col:27> 'int' 1
    |-DeclStmt 0x218353ec6b8 <line:440:5, col:22>
    | `-VarDecl 0x218353ec650 <col:5, col:17> col:17 used pname 'const char *'
    |-DeclStmt 0x218353ec750 <line:441:5, col:35>
    | `-VarDecl 0x218353ec6e8 <col:5, col:33> col:33 invalid pf 'const int *'
    |-IfStmt 0x218353ec860 <line:443:5, line:444:16>
    | |-OpaqueValueExpr 0x218353ec848 <<invalid sloc>> '_Bool'
    | `-ReturnStmt 0x218353ec838 <col:9, col:16>
    |   `-IntegerLiteral 0x218353ec810 <col:16> 'int' 0
    |-IfStmt 0x218353ec9d0 <line:447:5, line:456:5> has_else
    | |-OpaqueValueExpr 0x218353ec9b8 <<invalid sloc>> '_Bool'
    | |-CompoundStmt 0x218353ec8d0 <line:447:42, line:450:5>
    | `-CompoundStmt 0x218353ec9a8 <col:12, line:456:5>
    |-IfStmt 0x218353f4028 <line:457:5, line:471:5> has_else
    | |-OpaqueValueExpr 0x218353f4010 <<invalid sloc>> '_Bool'
    | |-CompoundStmt 0x218353ecd50 <line:457:30, line:466:5>
    | | `-IfStmt 0x218353ecd28 <line:462:9, line:465:39> has_else
    | |   |-OpaqueValueExpr 0x218353ecd10 <<invalid sloc>> '_Bool'
    | |   |-BinaryOperator 0x218353ecb10 <line:463:13, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'const char *' '='
    | |   | |-DeclRefExpr 0x218353eca38 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:463:13> 'const char *' lvalue Var 0x218353ec650 'pname' 'const char *'
    | |   | `-ImplicitCastExpr 0x218353ecaf8 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const char *' <NullToPointer>
    | |   |   `-ParenExpr 0x218353ecad8 <col:16, col:25> 'void *'
    | |   |     `-CStyleCastExpr 0x218353ecab0 <col:17, col:24> 'void *' <NullToPointer>
    | |   |       `-IntegerLiteral 0x218353eca70 <col:24> 'int' 0
    | |   `-BinaryOperator 0x218353eccf0 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:465:13, col:39> 'const char *' '='
    | |     |-DeclRefExpr 0x218353ecb30 <col:13> 'const char *' lvalue Var 0x218353ec650 'pname' 'const char *'
    | |     `-ImplicitCastExpr 0x218353eccd8 <col:21, col:39> 'const char *' <IntegralToPointer>
    | |       `-CallExpr 0x218353ecc98 <col:21, col:39> 'int'
    | |         |-ImplicitCastExpr 0x218353ecc80 <col:21> 'int (*)()' <FunctionToPointerDecay>
    | |         | `-DeclRefExpr 0x218353ecc40 <col:21> 'int ()' Function 0x218353ecb78 'ASN1_tag2str' 'int ()'
    | |         `-ImplicitCastExpr 0x218353eccc0 <col:34> 'long' <LValueToRValue>
    | |           `-DeclRefExpr 0x218353ecc60 <col:34> 'long' lvalue Var 0x218353ec438 'utype' 'long'
    | `-CompoundStmt 0x218353f3ff8 <line:466:12, line:471:5>
    |   `-IfStmt 0x218353f3fd0 <line:467:9, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> has_else
    |     |-OpaqueValueExpr 0x218353f3fb8 <<invalid sloc>> '_Bool'
    |     |-BinaryOperator 0x218353f3eb8 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:468:13, col:39> 'const char *' '='
    |     | |-DeclRefExpr 0x218353ecd68 <col:13> 'const char *' lvalue Var 0x218353ec650 'pname' 'const char *'
    |     | `-ImplicitCastExpr 0x218353f3ea0 <col:21, col:39> 'const char *' <IntegralToPointer>
    |     |   `-CallExpr 0x218353ecde0 <col:21, col:39> 'int'
    |     |     |-ImplicitCastExpr 0x218353ecdc8 <col:21> 'int (*)()' <FunctionToPointerDecay>
    |     |     | `-DeclRefExpr 0x218353ecd88 <col:21> 'int ()' Function 0x218353ecb78 'ASN1_tag2str' 'int ()'
    |     |     `-ImplicitCastExpr 0x218353ece08 <col:34> 'long' <LValueToRValue>
    |     |       `-DeclRefExpr 0x218353ecda8 <col:34> 'long' lvalue Var 0x218353ec438 'utype' 'long'
    |     `-BinaryOperator 0x218353f3f98 <line:470:13, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'const char *' '='
    |       |-DeclRefExpr 0x218353f3ed8 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:470:13> 'const char *' lvalue Var 0x218353ec650 'pname' 'const char *'
    |       `-ImplicitCastExpr 0x218353f3f80 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const char *' <NullToPointer>
    |         `-ParenExpr 0x218353f3f60 <col:16, col:25> 'void *'
    |           `-CStyleCastExpr 0x218353f3f38 <col:17, col:24> 'void *' <NullToPointer>
    |             `-IntegerLiteral 0x218353f3ef8 <col:24> 'int' 0
    |-IfStmt 0x218353f41b0 <.//openssl//file_jk/before\crypto\asn1\tasn_prn.c:473:5, line:477:5>
    | |-OpaqueValueExpr 0x218353f4198 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x218353f4178 <line:473:31, line:477:5>
    |   |-IfStmt 0x218353f4128 <line:474:9, line:475:20>
    |   | |-OpaqueValueExpr 0x218353f4110 <<invalid sloc>> '_Bool'
    |   | `-ReturnStmt 0x218353f4100 <col:13, col:20>
    |   |   `-IntegerLiteral 0x218353f40d8 <col:20> 'int' 0
    |   `-ReturnStmt 0x218353f4168 <line:476:9, col:16>
    |     `-IntegerLiteral 0x218353f4140 <col:16> 'int' 1
    |-IfStmt 0x218353f43c0 <line:479:5, line:484:5>
    | |-ImplicitCastExpr 0x218353f41e8 <line:479:9> 'const char *' <LValueToRValue>
    | | `-DeclRefExpr 0x218353f41c8 <col:9> 'const char *' lvalue Var 0x218353ec650 'pname' 'const char *'
    | `-CompoundStmt 0x218353f43a0 <col:16, line:484:5>
    |   |-IfStmt 0x218353f42b8 <line:480:9, line:481:20>
    |   | |-OpaqueValueExpr 0x218353f42a0 <<invalid sloc>> '_Bool'
    |   | `-ReturnStmt 0x218353f4290 <col:13, col:20>
    |   |   `-IntegerLiteral 0x218353f4268 <col:20> 'int' 0
    |   `-IfStmt 0x218353f4388 <line:482:9, line:483:20>
    |     |-OpaqueValueExpr 0x218353f4370 <<invalid sloc>> '_Bool'
    |     `-ReturnStmt 0x218353f4360 <col:13, col:20>
    |       `-IntegerLiteral 0x218353f4338 <col:20> 'int' 0
    |-SwitchStmt 0x218353f4410 <line:486:5, line:532:5>
    | |-ImplicitCastExpr 0x218353f43f8 <line:486:13> 'long' <LValueToRValue>
    | | `-DeclRefExpr 0x218353f43d8 <col:13> 'long' lvalue Var 0x218353ec438 'utype' 'long'
    | `-CompoundStmt 0x218353ede40 <col:20, line:532:5>
    |   |-CompoundStmt 0x218353f45f0 <line:488:9, line:493:9>
    |   | `-DeclStmt 0x218353f44b0 <line:489:13, col:38>
    |   |   `-VarDecl 0x218353f4448 <col:13, col:17> col:17 used boolval 'int'
    |   |-BreakStmt 0x218353f4608 <line:494:9>
    |   |-BreakStmt 0x218353f4630 <line:499:9>
    |   |-BreakStmt 0x218353f4768 <line:503:9>
    |   |-BreakStmt 0x218353f48a0 <line:507:9>
    |   |-BreakStmt 0x218353f48c8 <line:511:9>
    |   |-BinaryOperator 0x218353f4970 <line:516:9, col:18> 'int' '='
    |   | |-DeclRefExpr 0x218353f4910 <col:9> 'int' lvalue Var 0x218353ec578 'needlf' 'int'
    |   | `-IntegerLiteral 0x218353f4948 <col:18> 'int' 0
    |   |-BreakStmt 0x218353f4990 <line:517:9>
    |   |-IfStmt 0x218353f4a50 <line:522:9, line:523:20>
    |   | |-OpaqueValueExpr 0x218353f4a38 <<invalid sloc>> '_Bool'
    |   | `-ReturnStmt 0x218353f4a28 <col:13, col:20>
    |   |   `-IntegerLiteral 0x218353f4a00 <col:20> 'int' 0
    |   |-IfStmt 0x218353f4c68 <line:524:9, line:525:19>
    |   | |-OpaqueValueExpr 0x218353f4c50 <<invalid sloc>> '_Bool'
    |   | `-BinaryOperator 0x218353f4c30 <col:13, col:19> 'int' '='
    |   |   |-DeclRefExpr 0x218353f4be8 <col:13> 'int' lvalue Var 0x218353ec4d0 'ret' 'int'
    |   |   `-IntegerLiteral 0x218353f4c08 <col:19> 'int' 0
    |   |-BinaryOperator 0x218353f4cc8 <line:526:9, col:18> 'int' '='
    |   | |-DeclRefExpr 0x218353f4c80 <col:9> 'int' lvalue Var 0x218353ec578 'needlf' 'int'
    |   | `-IntegerLiteral 0x218353f4ca0 <col:18> 'int' 0
    |   |-BreakStmt 0x218353f4ce8 <line:527:9>
    |   `-DefaultStmt 0x218353f4e28 <line:529:5, col:12>
    |     `-NullStmt 0x218353f4e20 <col:12>
    |-IfStmt 0x218353edf40 <line:533:5, line:534:16>
    | |-UnaryOperator 0x218353edef0 <line:533:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x218353eded8 <col:10> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x218353edeb8 <col:10> 'int' lvalue Var 0x218353ec4d0 'ret' 'int'
    | `-ReturnStmt 0x218353edf30 <line:534:9, col:16>
    |   `-IntegerLiteral 0x218353edf08 <col:16> 'int' 0
    |-IfStmt 0x218353ee030 <line:535:5, line:536:16>
    | |-OpaqueValueExpr 0x218353ee018 <<invalid sloc>> '_Bool'
    | `-ReturnStmt 0x218353ee008 <col:9, col:16>
    |   `-IntegerLiteral 0x218353edfe0 <col:16> 'int' 0
    `-ReturnStmt 0x218353ee070 <line:537:5, col:12>
      `-IntegerLiteral 0x218353ee048 <col:12> 'int' 1
