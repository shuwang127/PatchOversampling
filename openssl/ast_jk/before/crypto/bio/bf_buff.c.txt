TranslationUnitDecl 0x246d9795768 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x246d9796000 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x246d9795d00 '__int128'
|-TypedefDecl 0x246d9796070 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x246d9795d20 'unsigned __int128'
|-TypedefDecl 0x246d97963a8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x246d9796160 'struct __NSConstantString_tag'
|   `-Record 0x246d97960c8 '__NSConstantString_tag'
|-TypedefDecl 0x246d9796418 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x246d9795940 'unsigned long long'
|-TypedefDecl 0x246d97964b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x246d9796470 'char *'
|   `-BuiltinType 0x246d9795800 'char'
|-TypedefDecl 0x246d9796520 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x246d9796470 'char *'
|   `-BuiltinType 0x246d9795800 'char'
|-TypedefDecl 0x246d97965e0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x246d9795940 'unsigned long long'
|-TypedefDecl 0x246d9796650 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x246d9796470 'char *'
|   `-BuiltinType 0x246d9795800 'char'
|-FunctionDecl 0x246db223430 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x246db2234d0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x246db223540 <col:21> Implicit
|-FunctionDecl 0x246db223598 prev 0x246db223430 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x246db2232c0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x246db223688 <col:21> Inherited Implicit
|-TypedefDecl 0x246db2236c8 prev 0x246d9796418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x246d9795940 'unsigned long long'
|-TypedefDecl 0x246db223770 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x246db223740 'size_t' sugar
|   |-Typedef 0x246db2236c8 'size_t'
|   `-BuiltinType 0x246d9795940 'unsigned long long'
|-TypedefDecl 0x246db2237e0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x246d97958a0 'long long'
|-TypedefDecl 0x246db223850 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x246d97958a0 'long long'
|-TypedefDecl 0x246db2238c0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x246d97958e0 'unsigned short'
|-TypedefDecl 0x246db223930 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x246d97958e0 'unsigned short'
|-TypedefDecl 0x246db2239a0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x246d97958e0 'unsigned short'
|-TypedefDecl 0x246db223a10 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x246d9795860 'int'
|-TypedefDecl 0x246db223a80 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x246d9795880 'long'
|-TypedefDecl 0x246db223af0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x246d97958a0 'long long'
|-TypedefDecl 0x246db223b80 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x246db223b50 '__time64_t' sugar
|   |-Typedef 0x246db223af0 '__time64_t'
|   `-BuiltinType 0x246d97958a0 'long long'
|-FunctionDecl 0x246db223cf8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x246db223f18 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x246db25e1b0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x246db224058 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x246db2240d0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x246db224148 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x246db2241c8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x246db25df50 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x246db25e290 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x246db25e350 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x246db25e4c0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x246db25e470 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x246db25e410 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x246db25e330 'struct threadlocaleinfostruct'
|       `-Record 0x246db26b020 'threadlocaleinfostruct'
|-TypedefDecl 0x246db25e5d0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x246db25e580 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x246db25e520 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x246db25e3f0 'struct threadmbcinfostruct'
|       `-Record 0x246db25e350 'threadmbcinfostruct'
|-RecordDecl 0x246db25e628 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x246db25e6e0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x246db25e7a0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x246db25e830 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x246db25e8c0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x246db25e978 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x246db25e920 'struct localeinfo_struct' sugar
|   `-RecordType 0x246db25e780 'struct localeinfo_struct'
|     `-Record 0x246db25e6e0 'localeinfo_struct'
|-TypedefDecl 0x246db25ea50 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x246db25ea00 'struct localeinfo_struct *'
|   `-ElaboratedType 0x246db25e920 'struct localeinfo_struct' sugar
|     `-RecordType 0x246db25e780 'struct localeinfo_struct'
|       `-Record 0x246db25e6e0 'localeinfo_struct'
|-RecordDecl 0x246db25eac8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x246db25eb80 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x246db25ebf8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x246db25ecb8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x246db25ed50 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x246db25edc0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x246db25ee78 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x246db25ee20 'struct localerefcount' sugar
|   `-RecordType 0x246db25eb60 'struct localerefcount'
|     `-Record 0x246db25eac8 'localerefcount'
|-RecordDecl 0x246db26b020 prev 0x246db25e290 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x246db26b0a0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x246db26b118 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x246db26b188 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x246db26b1f8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x246db26b268 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x246db26b428 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x246db26b498 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x246db26b508 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x246db26b578 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x246db26b5e8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x246db26b658 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x246db26b6b0 parent 0x246d9795768 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x246db26b840 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x246db26b8b0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x246db26b920 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x246db26b990 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x246db26ba30 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x246db26baa0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x246db26bbb0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x246db26bce8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x246db26bd98 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x246db26bd40 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x246db25e330 'struct threadlocaleinfostruct'
|     `-Record 0x246db26b020 'threadlocaleinfostruct'
|-RecordDecl 0x246db26be30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x246db26bef0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x246db26bf68 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x246db26c030 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x246db26c0a0 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x246db26c110 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x246db26c180 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x246db26c1f0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x246db26c260 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x246db26c2d0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x246db26c380 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x246db26c330 'struct _iobuf' sugar
|   `-RecordType 0x246db26bed0 'struct _iobuf'
|     `-Record 0x246db26be30 '_iobuf'
|-FunctionDecl 0x246db26c5b8 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x246db26c688 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x246d97958a0 'long long'
|-FunctionDecl 0x246db26c868 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x246db26c6f0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x246db26cb60 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x246db26c940 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x246db26c9b8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x246db26cf10 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x246db26cc40 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x246db26ccc0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x246db26cd40 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x246db268160 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x246db267ff0 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x246db268390 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x246db268250 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x246db268540 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x246db268460 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x246db268730 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x246db268a28 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x246db268800 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x246db268880 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x246db268be0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x246db268b00 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x246db268d90 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x246db268cb0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x246db268f40 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x246db268e60 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x246db2660d8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x246db265ff8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x246db266268 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x246db2665d0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x246db266330 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x246db266428 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x246db266988 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x246db2666b0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x246db266730 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x246db2667a8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x246db266b48 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x246db266a68 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x246db266e10 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x246db266c20 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x246db266ca0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x246db26f060 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x246db26f458 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x246db26f4f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x246db26f560 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x246db26f5d8 prev 0x246db26f458 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x246db26f230 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x246db26f2b0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x246db26f688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db26fb00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x246db26f830 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x246db26f8b0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x246db26f930 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x246db26fe20 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x246db26fec0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x246db26ff28 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x246db26ffa0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x246db26e050 prev 0x246db26fe20 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x246db26fbe0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x246db26fc60 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x246db26e148 <col:40> Inherited printf 2 3
|-FunctionDecl 0x246db26e310 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x246db26e190 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x246db26e210 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x246db26e568 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x246db26e3f0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x246db26e468 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x246db26e798 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x246db26e648 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x246db26ea90 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x246db26e870 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x246db26e8e8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x246db26ef28 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x246db26efc8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x246db270070 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x246db2700d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x246db270140 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x246db2701c8 prev 0x246db26ef28 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x246db26eb70 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x246db26ebe8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db26ec60 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x246db26ecd8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x246db2706d0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x246db2702b8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x246db270330 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2703a8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db270420 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x246db270498 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x246db270b90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x246db2708c0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x246db270940 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x246db2709b8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x246db270c48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2690a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x246db270d90 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x246db270e10 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x246db270e90 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x246db270f08 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x246db269450 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x246db2694f0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x246db269558 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x246db2695d0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x246db269638 prev 0x246db269450 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x246db269288 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x246db269308 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x246db269818 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x246db2696e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db269c58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x246db269958 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x246db2699d8 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x246db269a70 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x246db269d10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db272090 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x246db269e50 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x246db269ed0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x246db272380 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x246db272168 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x246db2721e8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x246db272260 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2726e0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x246db272460 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x246db272538 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x246db272a98 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x246db2727b8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x246db272838 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x246db2728b8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x246db272cf8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x246db272b78 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x246db2730e8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x246db272dc8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x246db272e48 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x246db272ec8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x246db273348 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x246db2731c8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x246db273808 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x246db2738a8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x246db273910 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x246db273978 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x246db2739e0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x246db273a68 prev 0x246db273808 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x246db273450 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x246db2734c8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db273540 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x246db2735b8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x246db273c30 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x246db273b50 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x246db273dc0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x246db273f48 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x246db275280 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x246db274018 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x246db2750d0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x246db2755a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x246db275460 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x246db275650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db275870 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x246db275790 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x246db275a90 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x246db275948 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x246db275c40 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x246db275b60 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x246db275e90 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x246db275d18 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x246db275d98 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x246db271080 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x246db271120 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x246db271190 <col:40> Implicit printf 1 2
|-FunctionDecl 0x246db2711f8 prev 0x246db271080 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x246db275f70 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x246db2712e8 <col:40> Inherited printf 1 2
|-FunctionDecl 0x246db271418 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x246db271338 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x246db271668 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x246db2714f0 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x246db271568 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x246db271828 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x246db271748 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x246db271a48 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x246db271900 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x246db271c98 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x246db271b20 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x246db271b98 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x246db271e58 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x246db271d78 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x246db2c5000 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x246db271f30 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x246db271fb0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x246db2c51c0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x246db2c50e0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x246db2c5450 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x246db2c5370 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x246db2c54f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x246db2c56f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x246db2c5618 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x246db2c5880 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x246db2c5b28 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x246db2c5bc8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x246db2c5c38 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x246db2c5ca0 prev 0x246db2c5b28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x246db2c5a10 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x246db2c5e78 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x246db2c5d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2c1200 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2c0fc8 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x246db2c1040 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x246db2c12b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2c14d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x246db2c13f8 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x246db2c1728 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2c15b0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x246db2c1628 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2c1ae8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x246db2c18c0 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x246db2c1940 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x246db2c1b98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2c1dc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x246db2c1ce0 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x246db2c4068 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x246db2c3f20 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x246db2c4250 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x246db2c46a0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x246db2c4318 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x246db2c4398 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x246db2c4418 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x246db2c4490 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x246db2c4b20 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x246db2c4790 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x246db2c4808 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2c4880 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x246db2c4900 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x246db2c5f40 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x246db2c4c10 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x246db2c4c88 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x246db2c4d08 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x246db2c6108 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x246db2c6028 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x246db2c64e0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x246db2c6580 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x246db2c65e8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x246db2c6660 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x246db2c66c8 prev 0x246db2c64e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x246db2c62a0 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x246db2c6320 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x246db2c68a8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x246db2c6778 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2c6c98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2c69b8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x246db2c6a38 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x246db2c6ab0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x246db2c6d50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2c7050 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x246db2c6e98 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x246db2c6f50 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x246db2c7348 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2c7130 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x246db2c71b0 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x246db2c7228 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2c77d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x246db2c74f0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x246db2c7568 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2c75e8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x246db2c7890 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2c7e60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2c7ad0 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x246db2c7b48 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2c7bc8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x246db2c7c40 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x246db2bfee0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2c0240 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x246db2c0028 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x246db2c00a0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x246db2c0120 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x246db2c05d8 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2c0328 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x246db2c03a0 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2c0420 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x246db2c0498 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2c0838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x246db2c08d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2c0b90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x246db2c0a20 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x246db2c1f00 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x246db2c0c68 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x246db2c0ce0 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x246db2c2180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x246db2c20a0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x246db2c2228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2c24e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x246db2c2370 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x246db2c23e8 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x246db2c2900 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x246db2c29a0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x246db2c2a08 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x246db2c2a70 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x246db2c2af0 <col:40> Implicit printf 2 0
|-FunctionDecl 0x246db2c2b58 prev 0x246db2c2900 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x246db2c25c0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x246db2c2640 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x246db2c26b8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x246db2c2c58 <col:40> Inherited printf 2 0
|-FunctionDecl 0x246db2c9f80 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x246db2ca020 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x246db2ca088 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x246db2ca0f0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x246db2ca170 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x246db2ca1d8 prev 0x246db2c9f80 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x246db2c2ca0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x246db2c2d20 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x246db2c2d98 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x246db2ca2d8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x246db2ca538 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x246db2ca320 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x246db2ca3a0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x246db2ca418 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2ca830 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x246db2ca618 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x246db2ca698 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x246db2ca710 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2cab78 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x246db2cac18 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x246db2cac80 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x246db2cacf8 <col:40> Implicit printf 1 0
|-FunctionDecl 0x246db2cad60 prev 0x246db2cab78 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x246db2ca918 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x246db2ca990 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x246db2cae58 <col:40> Inherited printf 1 0
|-FunctionDecl 0x246db2c8098 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x246db2c8138 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x246db2c81a0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x246db2c8218 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x246db2c8280 prev 0x246db2c8098 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x246db2caea8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x246db2c7f60 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x246db2c8378 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x246db2c8540 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x246db2c83c8 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x246db2c8440 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2c8798 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x246db2c8620 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x246db2c8698 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2c8cf8 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x246db2c8d98 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x246db2c8e00 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x246db2c8e68 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x246db2c8ed0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x246db2c8f70 <col:77> Implicit printf 3 0
|-FunctionDecl 0x246db2c8fd8 prev 0x246db2c8cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x246db2c8938 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x246db2c89b0 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2c8a30 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x246db2c8aa8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x246db2c91c8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x246db2c9098 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2c9638 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x246db2c9218 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x246db2c9290 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2c9308 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2c9388 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x246db2c9400 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2c9a78 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x246db2c9730 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x246db2c97a8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2c9820 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2c98a0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x246db2c9918 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2c9e48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x246db2c9c30 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x246db2c9ca8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2c9d28 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x246db2c9f00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2c3380 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x246db2c30d0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x246db2c3148 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2c31c8 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x246db2c3240 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x246db2c3440 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2c3838 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x246db2c3588 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x246db2c3600 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2c3680 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x246db2c36f8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2c3bf8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x246db2c3928 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x246db2c39a8 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x246db2c3a20 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2ce060 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x246db2ce100 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x246db2ce168 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x246db2ce1e0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x246db2ce248 prev 0x246db2ce060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x246db2c3da0 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x246db2c3e20 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x246db2ce428 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x246db2ce2f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2ce850 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x246db2ce8f0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x246db2ce958 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x246db2ce9c0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x246db2cea40 <col:94> Implicit printf 2 0
|-FunctionDecl 0x246db2ceaa8 prev 0x246db2ce850 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x246db2ce538 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x246db2ce5b8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x246db2ce630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x246db2cec90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x246db2ceb60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2caf90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x246db2cb030 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x246db2cb098 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x246db2cb100 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x246db2cb180 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x246db2cb1e8 prev 0x246db2caf90 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x246db2cece0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x246db2ced60 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x246db2cedd8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x246db2cb2e8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x246db2cb4b0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x246db2cb338 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x246db2cb3b0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2cb7a8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x246db2cb590 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x246db2cb608 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x246db2cb688 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x246db2cbb40 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x246db2cb890 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x246db2cb908 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2cb988 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x246db2cba00 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2cbda8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x246db2cbc28 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x246db2cbca8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x246db2d3010 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x246db2cbe88 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x246db2d3300 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x246db2d30e8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x246db2d3160 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x246db2d31e0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x246db2d35f8 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x246db2d33e0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x246db2d3460 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x246db2d34d8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2d3858 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x246db2d36e0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x246db2d3758 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2d3be8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x246db2d3938 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x246db2d39b0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2d3a30 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x246db2d3aa8 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2d3db8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x246db2d3cd8 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x246db2cefd0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x246db2d3e90 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x246db2d3f08 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2cf190 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x246db2cf0b0 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x246db2cf320 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x246db2cf568 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2cf3f0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x246db2cf468 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2cf7c0 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2cf648 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x246db2cf6c0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2cfa18 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2cf8a0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x246db2cf918 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2cfdc8 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2cfaf8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x246db2cfb70 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x246db2cfbe8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2d2120 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2cfeb0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x246db2cff28 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x246db2d2000 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2d2418 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2d2208 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x246db2d2280 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x246db2d22f8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2d2710 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2d24f8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x246db2d2578 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x246db2d25f0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2d2a08 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2d27f0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x246db2d2870 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x246db2d28e8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2d2d00 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2d2ae8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x246db2d2b68 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x246db2d2be0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2cc100 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2d2de0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x246db2d2e60 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x246db2d2ed8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x246db2d2f50 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2cc498 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2cc1e8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x246db2cc268 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x246db2cc2e0 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x246db2cc358 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2cc830 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2cc580 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x246db2cc600 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x246db2cc678 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x246db2cc6f0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2cccc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2cc9e0 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x246db2cca60 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x246db2ccad8 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x246db2ccd80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2d1300 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2ccec8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x246db2d0ff0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2d1070 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x246db2d10e8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2d16a0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2d13f0 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x246db2d1468 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2d14e8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x246db2d1560 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2d1bf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2d1890 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x246db2d1910 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x246db2d1988 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x246db2d1a00 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x246db2d1cb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2cd1e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2d1df8 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x246db2d1e70 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2d1ef0 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x246db2d1f68 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x246db2ccfb0 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2cd628 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2cd2e0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x246db2cd358 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2cd3d8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x246db2cd450 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x246db2cd4c8 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2cd898 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2cd720 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x246db2cd798 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2cdaf0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2cd978 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x246db2cd9f0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2cdde0 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2cdbd0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x246db2cdc48 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x246db2cdcc0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2d6170 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2cdec8 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x246db2cdf40 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x246db2d6050 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2d65c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2d6318 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x246db2d6390 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2d6410 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x246db2d6488 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x246db2d6688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2d6a80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2d67d0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x246db2d6848 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2d68c8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x246db2d6940 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2d4020 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2d6b70 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x246db2d6be8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2d6c60 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2d6ce0 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x246db2d6d58 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2d4560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2d4218 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x246db2d4290 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2d4310 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x246db2d4388 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x246db2d4400 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x246db2d4628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2d4aa8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2d4778 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x246db2d47f0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2d4870 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x246db2d48e8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x246db2d4960 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2d70b0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2d4ba0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x246db2d4c18 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2d4c90 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2d4d10 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x246db2d4d88 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x246db2d4e00 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2d7470 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x246db2d71a8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x246db2d7220 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x246db2d72a0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x246db2d76e0 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x246db2d7570 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x246db2d78f8 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x246db2d7bd8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x246db2d79c0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x246db2d7a38 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x246db2d7e20 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x246db2d7cb0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x246db2dc0a0 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x246db2d7ef0 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x246db2dc228 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x246db2dc460 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x246db2dc2f0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x246db2dc368 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x246db2dc610 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x246db2dc538 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x246db2dc8b8 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x246db2dc6e0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x246db2dc758 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x246db2dcc60 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x246db2dc990 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x246db2dca10 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x246db2dca88 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x246db2dcf60 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x246db2dcd40 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x246db2dcdb8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x246db2d51e8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x246db2dd038 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x246db2d5040 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x246db2d54f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x246db2d5380 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x246db2d5598 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2d5858 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x246db2d56d8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x246db2d5b60 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x246db2d5928 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x246db2d59a0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x246db2d5db0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x246db2d5c38 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x246db2d5cb0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x246db2dd0b0 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x246db2d5e88 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x246db2dd260 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x246db2dd180 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x246db2dd410 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x246db2dd330 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x246db2dd7a8 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x246db2dd4e0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x246db2dd558 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2dd5d0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2dda98 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x246db2dd888 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x246db2dd900 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2dd978 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2ddd88 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x246db2ddb78 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x246db2ddbf0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2ddc68 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2db090 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x246db2dde68 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x246db2ddee0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2ddf58 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2db390 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x246db2db170 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2db1e8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2db5e0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x246db2db468 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2db4e0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2db830 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x246db2db6b8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2db730 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2dba80 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x246db2db908 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2db980 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2dbe38 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x246db2dbb58 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x246db2dbbd0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x246db2dbc48 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x246db2de2d0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x246db2dbf18 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x246db2dbf90 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2dc008 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2de0c0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2de688 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x246db2de3b8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x246db2de430 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2de4a8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2de978 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x246db2de768 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x246db2de7e0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2de858 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2dec68 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x246db2dea58 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x246db2dead0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x246db2deb48 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x246db2deff0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x246db2ded48 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x246db2dedc0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2dee38 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2deeb0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2d9420 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x246db2d9098 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x246db2d9110 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2d9188 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x246db2d9200 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x246db2d9928 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x246db2d9508 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x246db2d9580 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2d95f8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2d9670 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2d96e8 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2d9ce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x246db2d9ad8 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x246db2d9b50 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2d9bc8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x246db2d9da0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2da2b0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x246db2d9fa0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x246db2da080 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2da0f8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x246db2da170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x246db2da370 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2da628 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x246db2da4b0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x246db2da528 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x246db2da7e0 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x246db2da700 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x246db2daac0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x246db2da8b0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x246db2da928 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2da9a0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2dad18 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x246db2daba0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2dac18 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2e4f50 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x246db2dadf0 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x246db2dae68 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x246db2daee0 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x246db2e52d8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x246db2e5030 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x246db2e50a8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2e5120 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2e5198 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2e54a0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x246db2e53c0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x246db2e56e8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x246db2e5570 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2e55e8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2e59f0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2e57c0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2e5838 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2e5c40 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2e5ac8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2e5b40 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2e5e90 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2e5d18 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2e5d90 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2e4238 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2e3f68 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x246db2e3fe0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x246db2e4058 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2e4528 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2e4318 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x246db2e4390 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x246db2e4408 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2e4818 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2e4608 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x246db2e4680 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x246db2e46f8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2e4bd8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2e48f8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x246db2e4970 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2e49e8 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2e5f60 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2e4cb8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x246db2e4d30 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2e4da8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2e6250 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2e6040 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x246db2e60b8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2e6130 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2e66a0 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2e6330 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x246db2e63a8 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x246db2e6420 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x246db2e6498 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2e6a30 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2e6788 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x246db2e6800 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x246db2e6878 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x246db2e68f0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2e6dc0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2e6b18 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x246db2e6b90 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x246db2e6c08 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x246db2e6c80 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2e7280 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2e6ea8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x246db2e6f70 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2e6fe8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2e7060 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2e7610 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2e7368 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x246db2e73e0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2e7458 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2e74d0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2e79a0 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2e76f8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x246db2e7770 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2e77e8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2e7860 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2e7ea8 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2e7a88 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x246db2e7b00 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2e7b78 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x246db2e7bf0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x246db2e7c68 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2e1278 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2e0f38 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x246db2e0fb0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2e1028 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x246db2e10a0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x246db2e1118 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2e16a8 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2e1368 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x246db2e13e0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2e1458 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x246db2e14d0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x246db2e1548 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2e1910 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2e1798 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2e1810 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2e1b60 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2e19e8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2e1a60 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2e1e48 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2e1c38 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x246db2e1cb0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x246db2e1d28 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2e8318 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2e8070 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x246db2e80e8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2e8160 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x246db2e81d8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x246db2e83d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2e8948 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2e8520 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x246db2e8598 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2e8610 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2e8688 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2e8700 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2e8e80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2e8b40 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x246db2e8bb8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2e8c30 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x246db2e8ca8 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x246db2e8d20 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x246db2e8f90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2e95a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2e90d8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x246db2e9150 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2e91c8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2e9240 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x246db2e92b8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x246db2e9330 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2e9aa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x246db2e9868 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x246db2e98e0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x246db2e9b50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x246db2e9c68 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x246db2e2188 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x246db2e9f20 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x246db2e1f30 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x246db2e1fa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x246db2e2240 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x246db2e2358 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x246db2e28f8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2e2618 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x246db2e2690 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x246db2e2708 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x246db2e29b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x246db2e2ad0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x246db2ed1e0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2e2d90 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x246db2e2e08 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x246db2e2e80 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x246db2ecfd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x246db2ed2a0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x246db2ed3c0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x246db2ed6c8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x246db2ed4e8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x246db2ed560 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2ed5d8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x246db2ee280 <line:37:1, line:44:1>
|   |-DeclStmt 0x246db2ed810 <line:38:5, col:21>
|   | `-VarDecl 0x246db2ed7a8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x246db2ed8a8 <line:39:5, col:13>
|   | `-VarDecl 0x246db2ed840 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x246db2edc00 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x246db2edbe8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x246db2edb00 <col:34> '<builtin fn type>' Function 0x246db2ed998 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x246db2edb38 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x246db2ed7a8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x246db2edb70 <col:29> 'const wchar_t *' lvalue ParmVar 0x246db2ed5d8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x246db2edec0 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x246db2edc30 <col:5> 'int' lvalue Var 0x246db2ed840 '_Ret' 'int'
|   | `-CallExpr 0x246db2ede00 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x246db2edde8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x246db2edc68 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x246db2e7ea8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x246db2ede48 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x246db2edc88 <col:27> 'wchar_t *' lvalue ParmVar 0x246db2ed4e8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x246db2ede60 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x246db2edca8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x246db2ed560 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x246db2ede78 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x246db2edcc8 <col:44> 'const wchar_t *' lvalue ParmVar 0x246db2ed5d8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x246db2ede90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x246db2edd50 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x246db2edd28 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x246db2edce8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x246db2edea8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x246db2edd70 <col:59> 'va_list':'char *' lvalue Var 0x246db2ed7a8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x246db2ee210 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x246db2ee1f8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x246db2ee148 <col:34> '<builtin fn type>' Function 0x246db2edfe0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x246db2ee180 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x246db2ed7a8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x246db2ee270 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x246db2ee258 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x246db2ee238 <col:12> 'int' lvalue Var 0x246db2ed840 '_Ret' 'int'
|-FunctionDecl 0x246db2ed998 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x246db2eda38 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x246db2edaa8 <col:34> Implicit
|-FunctionDecl 0x246db2edfe0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x246db2ee080 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x246db2ee0f0 <col:34> Implicit
|-FunctionDecl 0x246db2ee578 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x246db2ee2d0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x246db2ee348 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2ee3c0 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x246db2ee438 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x246db2ee860 <line:50:1, line:52:1>
|   `-ReturnStmt 0x246db2ee850 <line:51:5, col:62>
|     `-CallExpr 0x246db2ee790 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x246db2ee778 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x246db2ee650 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x246db2e7ea8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x246db2ee7d8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x246db2ee670 <col:27> 'wchar_t *' lvalue ParmVar 0x246db2ee2d0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x246db2ee7f0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x246db2ee690 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x246db2ee348 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x246db2ee808 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x246db2ee6b0 <col:44> 'const wchar_t *' lvalue ParmVar 0x246db2ee3c0 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x246db2ee820 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x246db2ee738 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x246db2ee710 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x246db2ee6d0 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x246db2ee838 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x246db2ee758 <col:59> 'va_list':'char *' lvalue ParmVar 0x246db2ee438 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x246db2eeb00 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x246db2ee888 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x246db2ee900 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2ee978 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x246db2ee9f0 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x246db2ea048 <line:61:1, line:68:1>
|   |-DeclStmt 0x246db2eec50 <line:62:5, col:21>
|   | `-VarDecl 0x246db2eebe8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x246db2eece8 <line:63:5, col:13>
|   | `-VarDecl 0x246db2eec80 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x246db2eed90 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x246db2eed78 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x246db2eed00 <col:34> '<builtin fn type>' Function 0x246db2ed998 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x246db2eed20 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x246db2eebe8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x246db2eed58 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x246db2ee9f0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x246db2eef90 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x246db2eedc0 <col:5> 'int' lvalue Var 0x246db2eec80 '_Ret' 'int'
|   | `-CallExpr 0x246db2eeed0 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x246db2eeeb8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x246db2eedf8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x246db2e7ea8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x246db2eef18 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x246db2eee18 <col:27> 'wchar_t *' lvalue ParmVar 0x246db2ee888 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x246db2eef30 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x246db2eee38 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x246db2ee900 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x246db2eef48 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x246db2eee58 <col:44> 'const wchar_t *' lvalue ParmVar 0x246db2ee978 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x246db2eef60 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x246db2eee78 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x246db2ee9f0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x246db2eef78 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x246db2eee98 <col:64> 'va_list':'char *' lvalue Var 0x246db2eebe8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x246db2e9fd8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x246db2e9fc0 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x246db2eefb0 <col:34> '<builtin fn type>' Function 0x246db2edfe0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x246db2e9fa0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x246db2eebe8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x246db2ea038 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x246db2ea020 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x246db2ea000 <col:12> 'int' lvalue Var 0x246db2eec80 '_Ret' 'int'
|-FunctionDecl 0x246db2ea3d8 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x246db2ea098 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x246db2ea110 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2ea188 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x246db2ea200 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x246db2ea278 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x246db2ea660 <line:74:1, line:76:1>
|   `-ReturnStmt 0x246db2ea650 <line:75:5, col:67>
|     `-CallExpr 0x246db2ea590 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x246db2ea578 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x246db2ea4b8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x246db2e7ea8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x246db2ea5d8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x246db2ea4d8 <col:27> 'wchar_t *' lvalue ParmVar 0x246db2ea098 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x246db2ea5f0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x246db2ea4f8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x246db2ea110 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x246db2ea608 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x246db2ea518 <col:44> 'const wchar_t *' lvalue ParmVar 0x246db2ea188 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x246db2ea620 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x246db2ea538 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x246db2ea200 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x246db2ea638 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x246db2ea558 <col:64> 'va_list':'char *' lvalue ParmVar 0x246db2ea278 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x246db2ea8a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x246db2ea688 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x246db2ea700 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x246db2eaaf8 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x246db2ea980 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2ea9f8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2eade0 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x246db2eabd0 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x246db2eac48 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x246db2eacc0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x246db2f2198 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x246db2f2020 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x246db2f2098 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x246db2f2248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2f2658 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2f2448 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x246db2f24c0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x246db2f2538 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x246db2f2710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2f29c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x246db2f2850 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x246db2f28c8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x246db2f2cb0 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2f2aa0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x246db2f2b18 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2f2b90 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2f0070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x246db2f2e50 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x246db2f2ec8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x246db2f0120 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2f05f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2f0320 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x246db2f0398 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x246db2f0410 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x246db2f06b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2f0968 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x246db2f07f0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x246db2f0868 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x246db2f0c50 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2f0a40 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x246db2f0ab8 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2f0b30 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2ef0d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x246db2f0df0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x246db2f0e68 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2f0ee0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x246db2ef190 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2ef710 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2ef390 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x246db2ef408 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2ef480 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x246db2ef4f8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x246db2ef7d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2efb20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x246db2ef910 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x246db2ef988 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x246db2efa00 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x246db2efea8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2efc00 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x246db2efc78 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2efcf0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2efd68 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2eb160 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x246db2eb080 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x246db2eb208 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2eb580 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2eb408 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x246db2eb480 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x246db2eb630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2eb850 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x246db2eb770 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x246db2eba98 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x246db2eb920 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x246db2eb998 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x246db2ebd98 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x246db2ebb78 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x246db2ebbf0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x246db2ec168 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x246db2ebf30 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x246db2ebfc0 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x246db2ec218 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2ec620 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x246db2ec360 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x246db2ec3d8 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x246db2ec450 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x246db2eca80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x246db2ec7c0 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x246db2ec838 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x246db2ec8b0 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x246db2ecb38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2f3078 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x246db2ecc80 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x246db2eccf8 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x246db2ecd70 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x246db2ecde8 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x246db2f32d0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x246db2f3160 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x246db2f3510 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x246db2f33a0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x246db2f3418 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x246db2f36c8 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x246db2f35e8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x246db2f39b8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x246db2f3798 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x246db2f3810 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x246db2f3c28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x246db2f3b50 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x246db2f3cd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x246db2f3ee8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x246db2f3e10 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x246db2f9188 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x246db2f3fb8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x246db2f9090 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x246db2f93d0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x246db2f9260 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x246db2f92d8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x246db2f9580 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x246db2f94a8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x246db2f9728 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x246db2f9650 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x246db2f98d8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x246db2f97f8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x246db2f9a88 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x246db2f99a8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x246db2f9e00 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x246db2f9b60 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x246db2f9bd8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2f9c50 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x246db2f9cc8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x246db2f8250 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x246db2f9ef0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x246db2f9f68 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2f9fe0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2f8080 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x246db2f80f8 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x246db2f8560 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x246db2f8340 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x246db2f83c0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x246db2f8440 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x246db2f8720 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x246db2f8640 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x246db2f8a10 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x246db2f87f0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x246db2f8870 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x246db2f88f0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x246db2f8bd0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x246db2f8af0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x246db2f8f48 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x246db2f8ca8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x246db2f8d20 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x246db2f8d98 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x246db2f8e10 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x246db2f61d8 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x246db2f6060 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x246db2f60d8 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x246db2f6510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x246db2f6390 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x246db2f6410 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x246db2f65c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x246db2f6878 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x246db2f6918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x246db2f6c58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x246db2f6ae0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x246db2f6b60 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x246db2f6d08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x246db2fb0b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x246db2fb150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x246db2fb3f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x246db2fb310 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x246db2fb498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x246db2fb718 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x246db2fb7b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x246db2fba60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x246db2fb980 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x246db2fbb08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x246db2fbde8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x246db2fbd08 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x246db2fbe90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x246db2f71e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x246db2f7070 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x246db2f70e8 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x246db2f7298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x246db2f7558 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x246db2f75f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x246db2f7830 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:31:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x246db2f7a40 <line:34:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x246db2f7900 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x246db2f7c90 <line:35:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x246db2f7b18 <col:34, col:40> col:40 _Value 'int *'
|-RecordDecl 0x246db2f7d50 <.//openssl//file_jk/before\crypto\bio/bio_lcl.h:64:1, line:71:1> line:64:8 struct bio_addrinfo_st definition
| |-FieldDecl 0x246db2f7e28 <line:65:5, col:9> col:9 bai_family 'int'
| |-FieldDecl 0x246db2f7e98 <line:66:5, col:9> col:9 bai_socktype 'int'
| |-FieldDecl 0x246db2f7f08 <line:67:5, col:9> col:9 bai_protocol 'int'
| |-FieldDecl 0x246db2f7f70 <line:68:5, col:12> col:12 bai_addrlen 'size_t':'unsigned long long'
| |-RecordDecl 0x246db2f7fc8 parent 0x246d9795768 <line:69:5, col:12> col:12 struct sockaddr
| |-FieldDecl 0x246db305690 <col:5, col:22> col:22 bai_addr 'struct sockaddr *'
| `-FieldDecl 0x246db3057a0 <line:70:5, col:29> col:29 bai_next 'struct bio_addrinfo_st *'
|-RecordDecl 0x246db3057f8 <line:74:1, line:83:1> line:74:7 invalid union bio_addr_st definition
| |-FieldDecl 0x246db305900 <line:75:5, col:21> col:21 invalid sa 'struct sockaddr':'struct sockaddr'
| |-RecordDecl 0x246db305958 parent 0x246d9795768 <line:79:5, col:12> col:12 struct sockaddr_in
| `-FieldDecl 0x246db305a78 <col:5, col:24> col:24 invalid s_in 'struct sockaddr_in':'struct sockaddr_in'
|-RecordDecl 0x246db305ad0 <line:91:9, line:112:1> line:91:16 struct bio_f_buffer_ctx_struct definition
| |-FieldDecl 0x246db305ba8 <line:104:5, col:9> col:9 referenced ibuf_size 'int'
| |-FieldDecl 0x246db305c18 <line:105:5, col:9> col:9 referenced obuf_size 'int'
| |-FieldDecl 0x246db305c88 <line:106:5, col:11> col:11 referenced ibuf 'char *'
| |-FieldDecl 0x246db305cf8 <line:107:5, col:9> col:9 referenced ibuf_len 'int'
| |-FieldDecl 0x246db305d68 <line:108:5, col:9> col:9 referenced ibuf_off 'int'
| |-FieldDecl 0x246db305dd8 <line:109:5, col:11> col:11 referenced obuf 'char *'
| |-FieldDecl 0x246db305e48 <line:110:5, col:9> col:9 referenced obuf_len 'int'
| `-FieldDecl 0x246db305eb8 <line:111:5, col:9> col:9 referenced obuf_off 'int'
|-TypedefDecl 0x246db305f68 <line:91:1, line:112:3> col:3 referenced BIO_F_BUFFER_CTX 'struct bio_f_buffer_ctx_struct':'struct bio_f_buffer_ctx_struct'
| `-ElaboratedType 0x246db305f10 'struct bio_f_buffer_ctx_struct' sugar
|   `-RecordType 0x246db305b70 'struct bio_f_buffer_ctx_struct'
|     `-Record 0x246db305ad0 'bio_f_buffer_ctx_struct'
|-RecordDecl 0x246db305fd8 <line:114:1, line:132:1> line:114:8 invalid struct bio_st definition
| |-FieldDecl 0x246db3060a8 <line:115:5, col:23> col:23 invalid method 'const int *'
| |-FieldDecl 0x246db308690 <line:117:5, col:74> col:12 callback 'long (*)(struct bio_st *, int, const char *, int, long, long)'
| |-FieldDecl 0x246db308700 <line:118:5, col:11> col:11 cb_arg 'char *'
| |-FieldDecl 0x246db308770 <line:119:5, col:9> col:9 init 'int'
| |-FieldDecl 0x246db3087e0 <line:120:5, col:9> col:9 shutdown 'int'
| |-FieldDecl 0x246db308850 <line:121:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x246db3088c0 <line:122:5, col:9> col:9 retry_reason 'int'
| |-FieldDecl 0x246db308930 <line:123:5, col:9> col:9 num 'int'
| |-FieldDecl 0x246db3089a0 <line:124:5, col:11> col:11 ptr 'void *'
| |-FieldDecl 0x246db308a20 <line:125:5, col:20> col:20 next_bio 'struct bio_st *'
| |-FieldDecl 0x246db308aa0 <line:126:5, col:20> col:20 prev_bio 'struct bio_st *'
| |-FieldDecl 0x246db308b10 <line:127:5, col:9> col:9 references 'int'
| |-FieldDecl 0x246db308b80 <line:128:5, col:14> col:14 invalid num_read 'int'
| |-FieldDecl 0x246db308bf0 <line:129:5, col:14> col:14 invalid num_write 'int'
| |-FieldDecl 0x246db308c60 <line:130:5, col:20> col:20 invalid ex_data 'int'
| `-FieldDecl 0x246db308cd0 <line:131:5, col:20> col:20 invalid lock 'int *'
|-VarDecl 0x246db308d40 <line:139:1, col:23> col:23 invalid bio_lookup_lock 'int *' extern
|-FunctionDecl 0x246db308fd0 <line:141:1, col:58> col:5 invalid BIO_ADDR_make 'int (int *, const struct sockaddr *)'
| |-ParmVarDecl 0x246db308dc0 <col:19, col:29> col:29 invalid ap 'int *'
| `-ParmVarDecl 0x246db308eb0 <col:33, col:56> col:56 sa 'const struct sockaddr *'
|-FunctionDecl 0x246db3091a0 <line:142:1, col:60> col:24 invalid BIO_ADDR_sockaddr 'const struct sockaddr *(const int *)'
| `-ParmVarDecl 0x246db309098 <col:42, col:58> col:58 invalid ap 'const int *'
|-FunctionDecl 0x246db3093a0 <line:143:1, col:56> col:18 invalid BIO_ADDR_sockaddr_noconst 'struct sockaddr *(int *)'
| `-ParmVarDecl 0x246db309260 <col:44, col:54> col:54 invalid ap 'int *'
|-FunctionDecl 0x246db309530 <line:144:1, col:52> col:11 invalid BIO_ADDR_sockaddr_size 'int (const int *)'
| `-ParmVarDecl 0x246db309460 <col:34, col:50> col:50 invalid ap 'const int *'
|-FunctionDecl 0x246db30c6c8 <line:145:1, col:61> col:11 invalid BIO_ADDRINFO_sockaddr_size 'int (const int *)'
| `-ParmVarDecl 0x246db30c630 <col:38, col:58> col:58 invalid bai 'const int *'
|-FunctionDecl 0x246db30c830 <line:146:1, col:69> col:24 invalid BIO_ADDRINFO_sockaddr 'const struct sockaddr *(const int *)'
| `-ParmVarDecl 0x246db30c788 <col:46, col:66> col:66 invalid bai 'const int *'
|-VarDecl 0x246db30c8f0 <line:149:1, col:23> col:23 invalid bio_type_lock 'int *' extern
|-FunctionDecl 0x246db30c9f0 <line:151:1, col:31> col:6 bio_sock_cleanup_int 'void (void)'
|-FunctionDecl 0x246db30ccb0 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:15:1, col:57> col:12 invalid buffer_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x246db30cac0 <col:25, col:30> col:30 invalid h 'int *'
| |-ParmVarDecl 0x246db30cb40 <col:33, col:45> col:45 buf 'const char *'
| `-ParmVarDecl 0x246db30cbc0 <col:50, col:54> col:54 num 'int'
|-FunctionDecl 0x246db30cf70 <line:16:1, col:51> col:12 invalid buffer_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x246db30cd80 <col:24, col:29> col:29 invalid h 'int *'
| |-ParmVarDecl 0x246db30ce00 <col:32, col:38> col:38 buf 'char *'
| `-ParmVarDecl 0x246db30ce80 <col:43, col:47> col:47 size 'int'
|-FunctionDecl 0x246db30d1a0 <line:17:1, col:47> col:12 invalid buffer_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x246db30d040 <col:24, col:29> col:29 invalid h 'int *'
| `-ParmVarDecl 0x246db30d0c0 <col:32, col:44> col:44 str 'const char *'
|-FunctionDecl 0x246db30d410 <line:18:1, col:51> col:12 invalid buffer_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x246db30d268 <col:24, col:29> col:29 invalid h 'int *'
| |-ParmVarDecl 0x246db30d2e8 <col:32, col:38> col:38 str 'char *'
| `-ParmVarDecl 0x246db30d368 <col:43, col:47> col:47 size 'int'
|-FunctionDecl 0x246db309760 <line:19:1, col:63> col:13 invalid buffer_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x246db30d4e0 <col:25, col:30> col:30 invalid h 'int *'
| |-ParmVarDecl 0x246db30d560 <col:33, col:37> col:37 cmd 'int'
| |-ParmVarDecl 0x246db3095e0 <col:42, col:47> col:47 arg1 'long'
| `-ParmVarDecl 0x246db309660 <col:53, col:59> col:59 arg2 'void *'
|-FunctionDecl 0x246db3098d0 <line:20:1, col:29> col:12 invalid buffer_new 'int (int *)' static
| `-ParmVarDecl 0x246db309838 <col:23, col:28> col:28 invalid h 'int *'
|-FunctionDecl 0x246db309a28 <line:21:1, col:33> col:12 invalid buffer_free 'int (int *)' static
| `-ParmVarDecl 0x246db309990 <col:24, col:29> col:29 invalid data 'int *'
|-FunctionDecl 0x246db309cd0 <line:22:1, col:66> col:13 invalid buffer_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x246db309ae8 <col:34, col:39> col:39 invalid h 'int *'
| |-ParmVarDecl 0x246db309b68 <col:42, col:46> col:46 cmd 'int'
| `-ParmVarDecl 0x246db309be8 <col:51, col:64> col:64 invalid fp 'int *'
|-VarDecl 0x246db309da0 <line:25:1, col:25> col:25 invalid methods_buffer 'const int' static
|-FunctionDecl 0x246db309f30 <line:38:1, line:41:1> line:38:19 invalid BIO_f_buffer 'const int *(void)'
| `-CompoundStmt 0x246db309fe8 <line:39:1, line:41:1>
|-FunctionDecl 0x246db30a0a8 <line:43:1, line:67:1> line:43:12 invalid buffer_new 'int (int *)' static
| |-ParmVarDecl 0x246db30a010 <col:23, col:28> col:28 invalid bi 'int *'
| `-CompoundStmt 0x246db316378 <line:44:1, line:67:1>
|   |-DeclStmt 0x246db30a4b0 <line:45:5, col:57>
|   | `-VarDecl 0x246db30a1f8 <col:5, col:56> col:23 used ctx 'BIO_F_BUFFER_CTX *' cinit
|   |   `-ImplicitCastExpr 0x246db30a498 <col:29, col:56> 'BIO_F_BUFFER_CTX *' <IntegralToPointer>
|   |     `-CallExpr 0x246db30a470 <col:29, col:56> 'int'
|   |       |-ImplicitCastExpr 0x246db30a458 <col:29> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x246db30a378 <col:29> 'int ()' Function 0x246db30a2b0 'OPENSSL_zalloc' 'int ()'
|   |       `-UnaryExprOrTypeTraitExpr 0x246db30a408 <col:44, col:55> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x246db30a3e8 <col:50, col:55> 'BIO_F_BUFFER_CTX':'struct bio_f_buffer_ctx_struct' lvalue
|   |           `-UnaryOperator 0x246db30a3d0 <col:51, col:52> 'BIO_F_BUFFER_CTX':'struct bio_f_buffer_ctx_struct' lvalue prefix '*' cannot overflow
|   |             `-ImplicitCastExpr 0x246db30a3b8 <col:52> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |               `-DeclRefExpr 0x246db30a398 <col:52> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30a1f8 'ctx' 'BIO_F_BUFFER_CTX *' non_odr_use_unevaluated
|   |-IfStmt 0x246db3156f8 <line:47:5, line:48:18>
|   | |-BinaryOperator 0x246db30a5b8 <line:47:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x246db30a588 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:47:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x246db30a4c8 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30a1f8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | | `-ImplicitCastExpr 0x246db30a5a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_F_BUFFER_CTX *' <BitCast>
|   | |   `-ParenExpr 0x246db30a568 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x246db30a540 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x246db30a500 <col:26> 'int' 0
|   | `-ReturnStmt 0x246db3156e8 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:48:9, col:18>
|   |   `-ParenExpr 0x246db3156c8 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x246db3156a0 <col:17> 'int' 0
|   |-BinaryOperator 0x246db3157a0 <line:49:5, line:23:33> 'int' '='
|   | |-MemberExpr 0x246db315748 <line:49:5, col:10> 'int' lvalue ->ibuf_size 0x246db305ba8
|   | | `-ImplicitCastExpr 0x246db315730 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x246db315710 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30a1f8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-IntegerLiteral 0x246db315778 <line:23:33> 'int' 4096
|   |-BinaryOperator 0x246db3159b8 <line:50:5, col:51> 'char *' '='
|   | |-MemberExpr 0x246db3157f8 <col:5, col:10> 'char *' lvalue ->ibuf 0x246db305c88
|   | | `-ImplicitCastExpr 0x246db3157e0 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x246db3157c0 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30a1f8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-ImplicitCastExpr 0x246db3159a0 <col:17, col:51> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x246db315978 <col:17, col:51> 'int'
|   |     |-ImplicitCastExpr 0x246db315960 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x246db315918 <col:17> 'int ()' Function 0x246db315850 'OPENSSL_malloc' 'int ()'
|   |     `-IntegerLiteral 0x246db315938 <line:23:33> 'int' 4096
|   |-IfStmt 0x246db315d18 <line:51:5, line:54:5>
|   | |-BinaryOperator 0x246db315af8 <line:51:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x246db315ac8 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:51:9, col:14> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x246db315a10 <col:9, col:14> 'char *' lvalue ->ibuf 0x246db305c88
|   | | |   `-ImplicitCastExpr 0x246db3159f8 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x246db3159d8 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30a1f8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | | `-ImplicitCastExpr 0x246db315ae0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x246db315aa8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x246db315a80 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x246db315a40 <col:26> 'int' 0
|   | `-CompoundStmt 0x246db315cf8 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:51:28, line:54:5>
|   |   |-CallExpr 0x246db315c60 <line:52:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x246db315c48 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x246db315c08 <col:9> 'int ()' Function 0x246db315b40 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x246db315c88 <col:22> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x246db315c28 <col:22> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30a1f8 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   `-ReturnStmt 0x246db315ce8 <line:53:9, col:18>
|   |     `-ParenExpr 0x246db315cc8 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x246db315ca0 <col:17> 'int' 0
|   |-BinaryOperator 0x246db315dc0 <line:55:5, line:23:33> 'int' '='
|   | |-MemberExpr 0x246db315d68 <line:55:5, col:10> 'int' lvalue ->obuf_size 0x246db305c18
|   | | `-ImplicitCastExpr 0x246db315d50 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x246db315d30 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30a1f8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-IntegerLiteral 0x246db315d98 <line:23:33> 'int' 4096
|   |-BinaryOperator 0x246db315ee8 <line:56:5, col:51> 'char *' '='
|   | |-MemberExpr 0x246db315e18 <col:5, col:10> 'char *' lvalue ->obuf 0x246db305dd8
|   | | `-ImplicitCastExpr 0x246db315e00 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x246db315de0 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30a1f8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-ImplicitCastExpr 0x246db315ed0 <col:17, col:51> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x246db315ea8 <col:17, col:51> 'int'
|   |     |-ImplicitCastExpr 0x246db315e90 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x246db315e48 <col:17> 'int ()' Function 0x246db315850 'OPENSSL_malloc' 'int ()'
|   |     `-IntegerLiteral 0x246db315e68 <line:23:33> 'int' 4096
|   |-IfStmt 0x246db316240 <line:57:5, line:61:5>
|   | |-BinaryOperator 0x246db316028 <line:57:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x246db315ff8 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:57:9, col:14> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x246db315f40 <col:9, col:14> 'char *' lvalue ->obuf 0x246db305dd8
|   | | |   `-ImplicitCastExpr 0x246db315f28 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x246db315f08 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30a1f8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | | `-ImplicitCastExpr 0x246db316010 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x246db315fd8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x246db315fb0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x246db315f70 <col:26> 'int' 0
|   | `-CompoundStmt 0x246db316218 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:57:28, line:61:5>
|   |   |-CallExpr 0x246db3160e8 <line:58:9, col:31> 'int'
|   |   | |-ImplicitCastExpr 0x246db3160d0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x246db316048 <col:9> 'int ()' Function 0x246db315b40 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x246db316110 <col:22, col:27> 'char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x246db3160a0 <col:22, col:27> 'char *' lvalue ->ibuf 0x246db305c88
|   |   |     `-ImplicitCastExpr 0x246db316088 <col:22> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x246db316068 <col:22> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30a1f8 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-CallExpr 0x246db316180 <line:59:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x246db316168 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x246db316128 <col:9> 'int ()' Function 0x246db315b40 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x246db3161a8 <col:22> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x246db316148 <col:22> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30a1f8 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   `-ReturnStmt 0x246db316208 <line:60:9, col:18>
|   |     `-ParenExpr 0x246db3161e8 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x246db3161c0 <col:17> 'int' 0
|   `-ReturnStmt 0x246db316368 <line:66:5, col:14>
|     `-ParenExpr 0x246db316348 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x246db316320 <col:13> 'int' 1
|-FunctionDecl 0x246db316480 <line:69:1, line:83:1> line:69:12 invalid buffer_free 'int (int *)' static
| |-ParmVarDecl 0x246db3163e8 <col:24, col:29> col:29 invalid a 'int *'
| `-CompoundStmt 0x246db313a08 <line:70:1, line:83:1>
|   |-DeclStmt 0x246db3165b8 <line:71:5, col:24>
|   | `-VarDecl 0x246db316550 <col:5, col:23> col:23 used b 'BIO_F_BUFFER_CTX *'
|   |-IfStmt 0x246db3136a8 <line:73:5, line:74:18>
|   | |-OpaqueValueExpr 0x246db313690 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x246db313680 <col:9, col:18>
|   |   `-ParenExpr 0x246db316680 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x246db316658 <col:17> 'int' 0
|   |-CallExpr 0x246db313798 <line:76:5, col:25> 'int'
|   | |-ImplicitCastExpr 0x246db313780 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x246db3136f8 <col:5> 'int ()' Function 0x246db315b40 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x246db3137c0 <col:18, col:21> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x246db313750 <col:18, col:21> 'char *' lvalue ->ibuf 0x246db305c88
|   |     `-ImplicitCastExpr 0x246db313738 <col:18> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x246db313718 <col:18> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db316550 'b' 'BIO_F_BUFFER_CTX *'
|   |-CallExpr 0x246db313878 <line:77:5, col:25> 'int'
|   | |-ImplicitCastExpr 0x246db313860 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x246db3137d8 <col:5> 'int ()' Function 0x246db315b40 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x246db3138a0 <col:18, col:21> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x246db313830 <col:18, col:21> 'char *' lvalue ->obuf 0x246db305dd8
|   |     `-ImplicitCastExpr 0x246db313818 <col:18> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x246db3137f8 <col:18> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db316550 'b' 'BIO_F_BUFFER_CTX *'
|   `-ReturnStmt 0x246db3139f8 <line:82:5, col:14>
|     `-ParenExpr 0x246db3139d8 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x246db3139b0 <col:13> 'int' 1
|-FunctionDecl 0x246db313c00 <line:85:1, line:154:1> line:85:12 invalid buffer_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x246db313a58 <col:24, col:29> col:29 invalid b 'int *'
| |-ParmVarDecl 0x246db313ad8 <col:32, col:38> col:38 used out 'char *'
| |-ParmVarDecl 0x246db313b58 <col:43, col:47> col:47 used outl 'int'
| `-CompoundStmt 0x246db30f1a0 <line:86:1, line:154:1>
|   |-DeclStmt 0x246db313e10 <line:87:5, col:19>
|   | |-VarDecl 0x246db313ce8 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x246db313d68 <col:5, col:18> col:12 used num 'int' cinit
|   |   `-IntegerLiteral 0x246db313dd0 <col:18> 'int' 0
|   |-DeclStmt 0x246db313ea0 <line:88:5, col:26>
|   | `-VarDecl 0x246db313e38 <col:5, col:23> col:23 used ctx 'BIO_F_BUFFER_CTX *'
|   |-IfStmt 0x246db314020 <line:90:5, line:91:18>
|   | |-BinaryOperator 0x246db313fa8 <line:90:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x246db313f78 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:90:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x246db313eb8 <col:9> 'char *' lvalue ParmVar 0x246db313ad8 'out' 'char *'
|   | | `-ImplicitCastExpr 0x246db313f90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x246db313f58 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x246db313f30 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x246db313ef0 <col:26> 'int' 0
|   | `-ReturnStmt 0x246db314010 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:91:9, col:18>
|   |   `-ParenExpr 0x246db313ff0 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x246db313fc8 <col:17> 'int' 0
|   |-IfStmt 0x246db314280 <line:94:5, line:95:18>
|   | |-OpaqueValueExpr 0x246db314268 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x246db314258 <col:9, col:18>
|   |   `-ParenExpr 0x246db314238 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x246db314210 <col:17> 'int' 0
|   |-BinaryOperator 0x246db3142f8 <line:96:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x246db314298 <col:5> 'int' lvalue Var 0x246db313d68 'num' 'int'
|   | `-IntegerLiteral 0x246db3142d0 <col:11> 'int' 0
|   |-LabelStmt 0x246db314550 <line:99:2, line:100:14> 'start'
|   | `-BinaryOperator 0x246db3144e0 <col:5, col:14> 'int' '='
|   |   |-DeclRefExpr 0x246db314428 <col:5> 'int' lvalue Var 0x246db313ce8 'i' 'int'
|   |   `-ImplicitCastExpr 0x246db3144c8 <col:9, col:14> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x246db314498 <col:9, col:14> 'int' lvalue ->ibuf_len 0x246db305cf8
|   |       `-ImplicitCastExpr 0x246db314480 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x246db314460 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db313e38 'ctx' 'BIO_F_BUFFER_CTX *'
|   |-IfStmt 0x246db3130d8 <line:102:5, line:113:5>
|   | |-BinaryOperator 0x246db3145c8 <line:102:9, col:14> 'int' '!='
|   | | |-ImplicitCastExpr 0x246db3145b0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x246db314568 <col:9> 'int' lvalue Var 0x246db313ce8 'i' 'int'
|   | | `-IntegerLiteral 0x246db314588 <col:14> 'int' 0
|   | `-CompoundStmt 0x246db313088 <col:17, line:113:5>
|   |   |-IfStmt 0x246db312708 <line:103:9, line:104:17>
|   |   | |-BinaryOperator 0x246db312670 <line:103:13, col:17> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x246db314640 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x246db3145e8 <col:13> 'int' lvalue Var 0x246db313ce8 'i' 'int'
|   |   | | `-ImplicitCastExpr 0x246db314658 <col:17> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x246db314608 <col:17> 'int' lvalue ParmVar 0x246db313b58 'outl' 'int'
|   |   | `-BinaryOperator 0x246db3126e8 <line:104:13, col:17> 'int' '='
|   |   |   |-DeclRefExpr 0x246db312690 <col:13> 'int' lvalue Var 0x246db313ce8 'i' 'int'
|   |   |   `-ImplicitCastExpr 0x246db3126d0 <col:17> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x246db3126b0 <col:17> 'int' lvalue ParmVar 0x246db313b58 'outl' 'int'
|   |   |-CallExpr 0x246db312b90 <line:105:9, col:51> 'void *'
|   |   | |-ImplicitCastExpr 0x246db312b78 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x246db312950 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x246db312760 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x246db312be0 <col:16> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x246db312bc8 <col:16> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x246db312988 <col:16> 'char *' lvalue ParmVar 0x246db313ad8 'out' 'char *'
|   |   | |-ImplicitCastExpr 0x246db312bf8 <col:21, col:47> 'const void *' <BitCast>
|   |   | | `-UnaryOperator 0x246db312ae8 <col:21, col:47> 'char *' prefix '&' cannot overflow
|   |   | |   `-ParenExpr 0x246db312ac8 <col:22, col:47> 'char' lvalue
|   |   | |     `-ArraySubscriptExpr 0x246db312aa8 <col:23, col:46> 'char' lvalue
|   |   | |       |-ImplicitCastExpr 0x246db312a78 <col:23, col:28> 'char *' <LValueToRValue>
|   |   | |       | `-MemberExpr 0x246db3129e0 <col:23, col:28> 'char *' lvalue ->ibuf 0x246db305c88
|   |   | |       |   `-ImplicitCastExpr 0x246db3129c8 <col:23> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |       |     `-DeclRefExpr 0x246db3129a8 <col:23> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db313e38 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |       `-ImplicitCastExpr 0x246db312a90 <col:33, col:38> 'int' <LValueToRValue>
|   |   | |         `-MemberExpr 0x246db312a48 <col:33, col:38> 'int' lvalue ->ibuf_off 0x246db305d68
|   |   | |           `-ImplicitCastExpr 0x246db312a30 <col:33> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |             `-DeclRefExpr 0x246db312a10 <col:33> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db313e38 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-ImplicitCastExpr 0x246db312c28 <col:50> 'unsigned long long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x246db312c10 <col:50> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x246db312b00 <col:50> 'int' lvalue Var 0x246db313ce8 'i' 'int'
|   |   |-CompoundAssignOperator 0x246db312ce0 <line:106:9, col:26> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x246db312c78 <col:9, col:14> 'int' lvalue ->ibuf_off 0x246db305d68
|   |   | | `-ImplicitCastExpr 0x246db312c60 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x246db312c40 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db313e38 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-ImplicitCastExpr 0x246db312cc8 <col:26> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x246db312ca8 <col:26> 'int' lvalue Var 0x246db313ce8 'i' 'int'
|   |   |-CompoundAssignOperator 0x246db312db0 <line:107:9, col:26> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x246db312d48 <col:9, col:14> 'int' lvalue ->ibuf_len 0x246db305cf8
|   |   | | `-ImplicitCastExpr 0x246db312d30 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x246db312d10 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db313e38 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-ImplicitCastExpr 0x246db312d98 <col:26> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x246db312d78 <col:26> 'int' lvalue Var 0x246db313ce8 'i' 'int'
|   |   |-CompoundAssignOperator 0x246db312e38 <line:108:9, col:16> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x246db312de0 <col:9> 'int' lvalue Var 0x246db313d68 'num' 'int'
|   |   | `-ImplicitCastExpr 0x246db312e20 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x246db312e00 <col:16> 'int' lvalue Var 0x246db313ce8 'i' 'int'
|   |   |-IfStmt 0x246db312f60 <line:109:9, line:110:24>
|   |   | |-BinaryOperator 0x246db312ed8 <line:109:13, col:21> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x246db312ea8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x246db312e68 <col:13> 'int' lvalue ParmVar 0x246db313b58 'outl' 'int'
|   |   | | `-ImplicitCastExpr 0x246db312ec0 <col:21> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x246db312e88 <col:21> 'int' lvalue Var 0x246db313ce8 'i' 'int'
|   |   | `-ReturnStmt 0x246db312f50 <line:110:13, col:24>
|   |   |   `-ImplicitCastExpr 0x246db312f38 <col:20, col:24> 'int' <LValueToRValue>
|   |   |     `-ParenExpr 0x246db312f18 <col:20, col:24> 'int' lvalue
|   |   |       `-DeclRefExpr 0x246db312ef8 <col:21> 'int' lvalue Var 0x246db313d68 'num' 'int'
|   |   |-CompoundAssignOperator 0x246db312fd0 <line:111:9, col:17> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x246db312f78 <col:9> 'int' lvalue ParmVar 0x246db313b58 'outl' 'int'
|   |   | `-ImplicitCastExpr 0x246db312fb8 <col:17> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x246db312f98 <col:17> 'int' lvalue Var 0x246db313ce8 'i' 'int'
|   |   `-CompoundAssignOperator 0x246db313058 <line:112:9, col:16> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |     |-DeclRefExpr 0x246db313000 <col:9> 'char *' lvalue ParmVar 0x246db313ad8 'out' 'char *'
|   |     `-ImplicitCastExpr 0x246db313040 <col:16> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x246db313020 <col:16> 'int' lvalue Var 0x246db313ce8 'i' 'int'
|   |-IfStmt 0x246db30eb10 <line:121:5, line:137:5>
|   | |-BinaryOperator 0x246db3131a8 <line:121:9, col:21> 'int' '>'
|   | | |-ImplicitCastExpr 0x246db313178 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x246db3130f0 <col:9> 'int' lvalue ParmVar 0x246db313b58 'outl' 'int'
|   | | `-ImplicitCastExpr 0x246db313190 <col:16, col:21> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x246db313148 <col:16, col:21> 'int' lvalue ->ibuf_size 0x246db305ba8
|   | |     `-ImplicitCastExpr 0x246db313130 <col:16> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x246db313110 <col:16> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db313e38 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-CompoundStmt 0x246db30eaf8 <col:32, line:137:5>
|   |   `-ForStmt 0x246db30eac0 <line:122:9, line:136:9>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     `-CompoundStmt 0x246db30ea88 <line:122:18, line:136:9>
|   |       |-IfStmt 0x246db30e7c8 <line:124:13, line:130:13>
|   |       | |-BinaryOperator 0x246db313398 <line:124:17, col:22> 'int' '<='
|   |       | | |-ImplicitCastExpr 0x246db313380 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x246db313338 <col:17> 'int' lvalue Var 0x246db313ce8 'i' 'int'
|   |       | | `-IntegerLiteral 0x246db313358 <col:22> 'int' 0
|   |       | `-CompoundStmt 0x246db30e7a8 <col:25, line:130:13>
|   |       |   |-IfStmt 0x246db30e690 <line:126:17, line:127:48>
|   |       |   | |-BinaryOperator 0x246db313528 <line:126:21, col:25> 'int' '<'
|   |       |   | | |-ImplicitCastExpr 0x246db313510 <col:21> 'int' <LValueToRValue>
|   |       |   | | | `-DeclRefExpr 0x246db3134c8 <col:21> 'int' lvalue Var 0x246db313ce8 'i' 'int'
|   |       |   | | `-IntegerLiteral 0x246db3134e8 <col:25> 'int' 0
|   |       |   | `-ReturnStmt 0x246db30e680 <line:127:21, col:48>
|   |       |   |   `-ParenExpr 0x246db30e660 <col:28, col:48> 'int'
|   |       |   |     `-ConditionalOperator 0x246db30e630 <col:29, col:47> 'int'
|   |       |   |       |-ParenExpr 0x246db3135c8 <col:29, col:37> 'int'
|   |       |   |       | `-BinaryOperator 0x246db3135a8 <col:30, col:36> 'int' '>'
|   |       |   |       |   |-ImplicitCastExpr 0x246db313590 <col:30> 'int' <LValueToRValue>
|   |       |   |       |   | `-DeclRefExpr 0x246db313548 <col:30> 'int' lvalue Var 0x246db313d68 'num' 'int'
|   |       |   |       |   `-IntegerLiteral 0x246db313568 <col:36> 'int' 0
|   |       |   |       |-ImplicitCastExpr 0x246db313628 <col:41> 'int' <LValueToRValue>
|   |       |   |       | `-DeclRefExpr 0x246db3135e8 <col:41> 'int' lvalue Var 0x246db313d68 'num' 'int'
|   |       |   |       `-ImplicitCastExpr 0x246db313640 <col:47> 'int' <LValueToRValue>
|   |       |   |         `-DeclRefExpr 0x246db313608 <col:47> 'int' lvalue Var 0x246db313ce8 'i' 'int'
|   |       |   `-IfStmt 0x246db30e790 <line:128:17, line:129:32>
|   |       |     |-BinaryOperator 0x246db30e708 <line:128:21, col:26> 'int' '=='
|   |       |     | |-ImplicitCastExpr 0x246db30e6f0 <col:21> 'int' <LValueToRValue>
|   |       |     | | `-DeclRefExpr 0x246db30e6a8 <col:21> 'int' lvalue Var 0x246db313ce8 'i' 'int'
|   |       |     | `-IntegerLiteral 0x246db30e6c8 <col:26> 'int' 0
|   |       |     `-ReturnStmt 0x246db30e780 <line:129:21, col:32>
|   |       |       `-ImplicitCastExpr 0x246db30e768 <col:28, col:32> 'int' <LValueToRValue>
|   |       |         `-ParenExpr 0x246db30e748 <col:28, col:32> 'int' lvalue
|   |       |           `-DeclRefExpr 0x246db30e728 <col:29> 'int' lvalue Var 0x246db313d68 'num' 'int'
|   |       |-CompoundAssignOperator 0x246db30e838 <line:131:13, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-DeclRefExpr 0x246db30e7e0 <col:13> 'int' lvalue Var 0x246db313d68 'num' 'int'
|   |       | `-ImplicitCastExpr 0x246db30e820 <col:20> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x246db30e800 <col:20> 'int' lvalue Var 0x246db313ce8 'i' 'int'
|   |       |-IfStmt 0x246db30e960 <line:132:13, line:133:28>
|   |       | |-BinaryOperator 0x246db30e8d8 <line:132:17, col:25> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x246db30e8a8 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x246db30e868 <col:17> 'int' lvalue ParmVar 0x246db313b58 'outl' 'int'
|   |       | | `-ImplicitCastExpr 0x246db30e8c0 <col:25> 'int' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x246db30e888 <col:25> 'int' lvalue Var 0x246db313ce8 'i' 'int'
|   |       | `-ReturnStmt 0x246db30e950 <line:133:17, col:28>
|   |       |   `-ImplicitCastExpr 0x246db30e938 <col:24, col:28> 'int' <LValueToRValue>
|   |       |     `-ParenExpr 0x246db30e918 <col:24, col:28> 'int' lvalue
|   |       |       `-DeclRefExpr 0x246db30e8f8 <col:25> 'int' lvalue Var 0x246db313d68 'num' 'int'
|   |       |-CompoundAssignOperator 0x246db30e9d0 <line:134:13, col:20> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |       | |-DeclRefExpr 0x246db30e978 <col:13> 'char *' lvalue ParmVar 0x246db313ad8 'out' 'char *'
|   |       | `-ImplicitCastExpr 0x246db30e9b8 <col:20> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x246db30e998 <col:20> 'int' lvalue Var 0x246db313ce8 'i' 'int'
|   |       `-CompoundAssignOperator 0x246db30ea58 <line:135:13, col:21> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |         |-DeclRefExpr 0x246db30ea00 <col:13> 'int' lvalue ParmVar 0x246db313b58 'outl' 'int'
|   |         `-ImplicitCastExpr 0x246db30ea40 <col:21> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x246db30ea20 <col:21> 'int' lvalue Var 0x246db313ce8 'i' 'int'
|   |-IfStmt 0x246db30f000 <line:142:5, line:148:5>
|   | |-BinaryOperator 0x246db30ec98 <line:142:9, col:14> 'int' '<='
|   | | |-ImplicitCastExpr 0x246db30ec80 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x246db30ec38 <col:9> 'int' lvalue Var 0x246db313ce8 'i' 'int'
|   | | `-IntegerLiteral 0x246db30ec58 <col:14> 'int' 0
|   | `-CompoundStmt 0x246db30efe0 <col:17, line:148:5>
|   |   |-IfStmt 0x246db30eec8 <line:144:9, line:145:40>
|   |   | |-BinaryOperator 0x246db30ed38 <line:144:13, col:17> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x246db30ed20 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x246db30ecd8 <col:13> 'int' lvalue Var 0x246db313ce8 'i' 'int'
|   |   | | `-IntegerLiteral 0x246db30ecf8 <col:17> 'int' 0
|   |   | `-ReturnStmt 0x246db30eeb8 <line:145:13, col:40>
|   |   |   `-ParenExpr 0x246db30ee98 <col:20, col:40> 'int'
|   |   |     `-ConditionalOperator 0x246db30ee68 <col:21, col:39> 'int'
|   |   |       |-ParenExpr 0x246db30edd8 <col:21, col:29> 'int'
|   |   |       | `-BinaryOperator 0x246db30edb8 <col:22, col:28> 'int' '>'
|   |   |       |   |-ImplicitCastExpr 0x246db30eda0 <col:22> 'int' <LValueToRValue>
|   |   |       |   | `-DeclRefExpr 0x246db30ed58 <col:22> 'int' lvalue Var 0x246db313d68 'num' 'int'
|   |   |       |   `-IntegerLiteral 0x246db30ed78 <col:28> 'int' 0
|   |   |       |-ImplicitCastExpr 0x246db30ee38 <col:33> 'int' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x246db30edf8 <col:33> 'int' lvalue Var 0x246db313d68 'num' 'int'
|   |   |       `-ImplicitCastExpr 0x246db30ee50 <col:39> 'int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x246db30ee18 <col:39> 'int' lvalue Var 0x246db313ce8 'i' 'int'
|   |   `-IfStmt 0x246db30efc8 <line:146:9, line:147:24>
|   |     |-BinaryOperator 0x246db30ef40 <line:146:13, col:18> 'int' '=='
|   |     | |-ImplicitCastExpr 0x246db30ef28 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x246db30eee0 <col:13> 'int' lvalue Var 0x246db313ce8 'i' 'int'
|   |     | `-IntegerLiteral 0x246db30ef00 <col:18> 'int' 0
|   |     `-ReturnStmt 0x246db30efb8 <line:147:13, col:24>
|   |       `-ImplicitCastExpr 0x246db30efa0 <col:20, col:24> 'int' <LValueToRValue>
|   |         `-ParenExpr 0x246db30ef80 <col:20, col:24> 'int' lvalue
|   |           `-DeclRefExpr 0x246db30ef60 <col:21> 'int' lvalue Var 0x246db313d68 'num' 'int'
|   |-BinaryOperator 0x246db30f0a8 <line:149:5, col:21> 'int' '='
|   | |-MemberExpr 0x246db30f050 <col:5, col:10> 'int' lvalue ->ibuf_off 0x246db305d68
|   | | `-ImplicitCastExpr 0x246db30f038 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x246db30f018 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db313e38 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-IntegerLiteral 0x246db30f080 <col:21> 'int' 0
|   |-BinaryOperator 0x246db30f168 <line:150:5, col:21> 'int' '='
|   | |-MemberExpr 0x246db30f100 <col:5, col:10> 'int' lvalue ->ibuf_len 0x246db305cf8
|   | | `-ImplicitCastExpr 0x246db30f0e8 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x246db30f0c8 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db313e38 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-ImplicitCastExpr 0x246db30f150 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x246db30f130 <col:21> 'int' lvalue Var 0x246db313ce8 'i' 'int'
|   `-GotoStmt 0x246db30f188 <line:153:5, col:10> 'start' 0x246db314500
|-FunctionDecl 0x246db312760 <line:105:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x246db312800 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x246db312868 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x246db3128d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x246db30f3d0 <line:156:1, line:231:1> line:156:12 invalid buffer_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x246db30f228 <col:25, col:30> col:30 invalid b 'int *'
| |-ParmVarDecl 0x246db30f2a8 <col:33, col:45> col:45 used in 'const char *'
| |-ParmVarDecl 0x246db30f328 <col:49, col:53> col:53 used inl 'int'
| `-CompoundStmt 0x246db316ee8 <line:157:1, line:231:1>
|   |-DeclStmt 0x246db30f5e0 <line:158:5, col:19>
|   | |-VarDecl 0x246db30f4b8 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x246db30f538 <col:5, col:18> col:12 used num 'int' cinit
|   |   `-IntegerLiteral 0x246db30f5a0 <col:18> 'int' 0
|   |-DeclStmt 0x246db30f6a8 <line:159:5, col:26>
|   | `-VarDecl 0x246db30f640 <col:5, col:23> col:23 used ctx 'BIO_F_BUFFER_CTX *'
|   |-IfStmt 0x246db30f920 <line:161:5, line:162:18>
|   | |-BinaryOperator 0x246db30f8a8 <line:161:9, col:34> 'int' '||'
|   | | |-ParenExpr 0x246db30f7d0 <col:9, col:20> 'int'
|   | | | `-BinaryOperator 0x246db30f7b0 <col:10, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x246db30f780 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:161:10> 'const char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x246db30f6c0 <col:10> 'const char *' lvalue ParmVar 0x246db30f2a8 'in' 'const char *'
|   | | |   `-ImplicitCastExpr 0x246db30f798 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |     `-ParenExpr 0x246db30f760 <col:17, col:27> 'void *'
|   | | |       `-CStyleCastExpr 0x246db30f738 <col:18, col:26> 'void *' <NullToPointer>
|   | | |         `-IntegerLiteral 0x246db30f6f8 <col:26> 'int' 0
|   | | `-ParenExpr 0x246db30f888 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:161:25, col:34> 'int'
|   | |   `-BinaryOperator 0x246db30f868 <col:26, col:33> 'int' '<='
|   | |     |-ImplicitCastExpr 0x246db30f850 <col:26> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x246db30f7f0 <col:26> 'int' lvalue ParmVar 0x246db30f328 'inl' 'int'
|   | |     `-IntegerLiteral 0x246db30f828 <col:33> 'int' 0
|   | `-ReturnStmt 0x246db30f910 <line:162:9, col:18>
|   |   `-ParenExpr 0x246db30f8f0 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x246db30f8c8 <col:17> 'int' 0
|   |-IfStmt 0x246db30fb80 <line:164:5, line:165:18>
|   | |-OpaqueValueExpr 0x246db30fb68 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x246db30fb58 <col:9, col:18>
|   |   `-ParenExpr 0x246db30fb38 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x246db30fb10 <col:17> 'int' 0
|   |-LabelStmt 0x246db30fe40 <line:168:2, line:169:56> 'start'
|   | `-BinaryOperator 0x246db30fdd0 <col:5, col:56> 'int' '='
|   |   |-DeclRefExpr 0x246db30fbb8 <col:5> 'int' lvalue Var 0x246db30f4b8 'i' 'int'
|   |   `-BinaryOperator 0x246db30fdb0 <col:9, col:56> 'int' '-'
|   |     |-ImplicitCastExpr 0x246db30fd98 <col:9, col:14> 'int' <LValueToRValue>
|   |     | `-MemberExpr 0x246db30fc28 <col:9, col:14> 'int' lvalue ->obuf_size 0x246db305c18
|   |     |   `-ImplicitCastExpr 0x246db30fc10 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x246db30fbf0 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30f640 'ctx' 'BIO_F_BUFFER_CTX *'
|   |     `-ParenExpr 0x246db30fd78 <col:26, col:56> 'int'
|   |       `-BinaryOperator 0x246db30fd58 <col:27, col:48> 'int' '+'
|   |         |-ImplicitCastExpr 0x246db30fd28 <col:27, col:32> 'int' <LValueToRValue>
|   |         | `-MemberExpr 0x246db30fc90 <col:27, col:32> 'int' lvalue ->obuf_len 0x246db305e48
|   |         |   `-ImplicitCastExpr 0x246db30fc78 <col:27> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |         |     `-DeclRefExpr 0x246db30fc58 <col:27> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30f640 'ctx' 'BIO_F_BUFFER_CTX *'
|   |         `-ImplicitCastExpr 0x246db30fd40 <col:43, col:48> 'int' <LValueToRValue>
|   |           `-MemberExpr 0x246db30fcf8 <col:43, col:48> 'int' lvalue ->obuf_off 0x246db305eb8
|   |             `-ImplicitCastExpr 0x246db30fce0 <col:43> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |               `-DeclRefExpr 0x246db30fcc0 <col:43> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30f640 'ctx' 'BIO_F_BUFFER_CTX *'
|   |-IfStmt 0x246db310408 <line:171:5, line:175:5>
|   | |-BinaryOperator 0x246db30fec8 <line:171:9, col:14> 'int' '>='
|   | | |-ImplicitCastExpr 0x246db30fe98 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x246db30fe58 <col:9> 'int' lvalue Var 0x246db30f4b8 'i' 'int'
|   | | `-ImplicitCastExpr 0x246db30feb0 <col:14> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x246db30fe78 <col:14> 'int' lvalue ParmVar 0x246db30f328 'inl' 'int'
|   | `-CompoundStmt 0x246db3103e0 <col:19, line:175:5>
|   |   |-CallExpr 0x246db310188 <line:172:9, col:68> 'void *'
|   |   | |-ImplicitCastExpr 0x246db310170 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x246db30fee8 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x246db312760 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x246db3101c0 <col:16, col:58> 'void *' <BitCast>
|   |   | | `-UnaryOperator 0x246db3100e8 <col:16, col:58> 'char *' prefix '&' cannot overflow
|   |   | |   `-ParenExpr 0x246db3100c8 <col:17, col:58> 'char' lvalue
|   |   | |     `-ArraySubscriptExpr 0x246db3100a8 <col:18, col:57> 'char' lvalue
|   |   | |       |-ImplicitCastExpr 0x246db310090 <col:18, col:23> 'char *' <LValueToRValue>
|   |   | |       | `-MemberExpr 0x246db30ff40 <col:18, col:23> 'char *' lvalue ->obuf 0x246db305dd8
|   |   | |       |   `-ImplicitCastExpr 0x246db30ff28 <col:18> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |       |     `-DeclRefExpr 0x246db30ff08 <col:18> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30f640 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |       `-BinaryOperator 0x246db310070 <col:28, col:49> 'int' '+'
|   |   | |         |-ImplicitCastExpr 0x246db310040 <col:28, col:33> 'int' <LValueToRValue>
|   |   | |         | `-MemberExpr 0x246db30ffa8 <col:28, col:33> 'int' lvalue ->obuf_off 0x246db305eb8
|   |   | |         |   `-ImplicitCastExpr 0x246db30ff90 <col:28> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |         |     `-DeclRefExpr 0x246db30ff70 <col:28> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30f640 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |         `-ImplicitCastExpr 0x246db310058 <col:44, col:49> 'int' <LValueToRValue>
|   |   | |           `-MemberExpr 0x246db310010 <col:44, col:49> 'int' lvalue ->obuf_len 0x246db305e48
|   |   | |             `-ImplicitCastExpr 0x246db30fff8 <col:44> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |               `-DeclRefExpr 0x246db30ffd8 <col:44> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30f640 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |-ImplicitCastExpr 0x246db3101f0 <col:61> 'const void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x246db3101d8 <col:61> 'const char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x246db310100 <col:61> 'const char *' lvalue ParmVar 0x246db30f2a8 'in' 'const char *'
|   |   | `-ImplicitCastExpr 0x246db310220 <col:65> 'unsigned long long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x246db310208 <col:65> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x246db310120 <col:65> 'int' lvalue ParmVar 0x246db30f328 'inl' 'int'
|   |   |-CompoundAssignOperator 0x246db3102d8 <line:173:9, col:26> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x246db310270 <col:9, col:14> 'int' lvalue ->obuf_len 0x246db305e48
|   |   | | `-ImplicitCastExpr 0x246db310258 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x246db310238 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30f640 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-ImplicitCastExpr 0x246db3102c0 <col:26> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x246db3102a0 <col:26> 'int' lvalue ParmVar 0x246db30f328 'inl' 'int'
|   |   `-ReturnStmt 0x246db3103d0 <line:174:9, col:26>
|   |     `-ParenExpr 0x246db3103b0 <col:16, col:26> 'int'
|   |       `-BinaryOperator 0x246db310390 <col:17, col:23> 'int' '+'
|   |         |-ImplicitCastExpr 0x246db310360 <col:17> 'int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x246db310308 <col:17> 'int' lvalue Var 0x246db30f538 'num' 'int'
|   |         `-ImplicitCastExpr 0x246db310378 <col:23> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x246db310340 <col:23> 'int' lvalue ParmVar 0x246db30f328 'inl' 'int'
|   |-IfStmt 0x246db3155b8 <line:178:5, line:203:5>
|   | |-BinaryOperator 0x246db3104c8 <line:178:9, col:26> 'int' '!='
|   | | |-ImplicitCastExpr 0x246db3104b0 <col:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x246db310458 <col:9, col:14> 'int' lvalue ->obuf_len 0x246db305e48
|   | | |   `-ImplicitCastExpr 0x246db310440 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x246db310420 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30f640 'ctx' 'BIO_F_BUFFER_CTX *'
|   | | `-IntegerLiteral 0x246db310488 <col:26> 'int' 0
|   | `-CompoundStmt 0x246db315598 <col:29, line:203:5>
|   |   |-IfStmt 0x246db314bc0 <line:179:9, line:185:9>
|   |   | |-BinaryOperator 0x246db310548 <line:179:13, col:17> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x246db310530 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x246db3104e8 <col:13> 'int' lvalue Var 0x246db30f4b8 'i' 'int'
|   |   | | `-IntegerLiteral 0x246db310508 <col:17> 'int' 0
|   |   | `-CompoundStmt 0x246db314b88 <col:20, line:185:9>
|   |   |   |-CallExpr 0x246db314870 <line:180:13, col:70> 'void *'
|   |   |   | |-ImplicitCastExpr 0x246db314858 <col:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x246db310568 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x246db312760 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   |   | |-ImplicitCastExpr 0x246db3148a8 <col:20, col:62> 'void *' <BitCast>
|   |   |   | | `-UnaryOperator 0x246db3147d0 <col:20, col:62> 'char *' prefix '&' cannot overflow
|   |   |   | |   `-ParenExpr 0x246db3147b0 <col:21, col:62> 'char' lvalue
|   |   |   | |     `-ArraySubscriptExpr 0x246db314790 <col:22, col:61> 'char' lvalue
|   |   |   | |       |-ImplicitCastExpr 0x246db314778 <col:22, col:27> 'char *' <LValueToRValue>
|   |   |   | |       | `-MemberExpr 0x246db3105c0 <col:22, col:27> 'char *' lvalue ->obuf 0x246db305dd8
|   |   |   | |       |   `-ImplicitCastExpr 0x246db3105a8 <col:22> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |       |     `-DeclRefExpr 0x246db310588 <col:22> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30f640 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | |       `-BinaryOperator 0x246db314758 <col:32, col:53> 'int' '+'
|   |   |   | |         |-ImplicitCastExpr 0x246db314728 <col:32, col:37> 'int' <LValueToRValue>
|   |   |   | |         | `-MemberExpr 0x246db314690 <col:32, col:37> 'int' lvalue ->obuf_off 0x246db305eb8
|   |   |   | |         |   `-ImplicitCastExpr 0x246db310610 <col:32> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |         |     `-DeclRefExpr 0x246db3105f0 <col:32> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30f640 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | |         `-ImplicitCastExpr 0x246db314740 <col:48, col:53> 'int' <LValueToRValue>
|   |   |   | |           `-MemberExpr 0x246db3146f8 <col:48, col:53> 'int' lvalue ->obuf_len 0x246db305e48
|   |   |   | |             `-ImplicitCastExpr 0x246db3146e0 <col:48> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |               `-DeclRefExpr 0x246db3146c0 <col:48> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30f640 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | |-ImplicitCastExpr 0x246db3148d8 <col:65> 'const void *' <BitCast>
|   |   |   | | `-ImplicitCastExpr 0x246db3148c0 <col:65> 'const char *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x246db3147e8 <col:65> 'const char *' lvalue ParmVar 0x246db30f2a8 'in' 'const char *'
|   |   |   | `-ImplicitCastExpr 0x246db314908 <col:69> 'unsigned long long' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x246db3148f0 <col:69> 'int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x246db314808 <col:69> 'int' lvalue Var 0x246db30f4b8 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x246db314978 <line:181:13, col:19> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |   |   | |-DeclRefExpr 0x246db314920 <col:13> 'const char *' lvalue ParmVar 0x246db30f2a8 'in' 'const char *'
|   |   |   | `-ImplicitCastExpr 0x246db314960 <col:19> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x246db314940 <col:19> 'int' lvalue Var 0x246db30f4b8 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x246db314a00 <line:182:13, col:20> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-DeclRefExpr 0x246db3149a8 <col:13> 'int' lvalue ParmVar 0x246db30f328 'inl' 'int'
|   |   |   | `-ImplicitCastExpr 0x246db3149e8 <col:20> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x246db3149c8 <col:20> 'int' lvalue Var 0x246db30f4b8 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x246db314a88 <line:183:13, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-DeclRefExpr 0x246db314a30 <col:13> 'int' lvalue Var 0x246db30f538 'num' 'int'
|   |   |   | `-ImplicitCastExpr 0x246db314a70 <col:20> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x246db314a50 <col:20> 'int' lvalue Var 0x246db30f4b8 'i' 'int'
|   |   |   `-CompoundAssignOperator 0x246db314b58 <line:184:13, col:30> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |-MemberExpr 0x246db314af0 <col:13, col:18> 'int' lvalue ->obuf_len 0x246db305e48
|   |   |     | `-ImplicitCastExpr 0x246db314ad8 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x246db314ab8 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30f640 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     `-ImplicitCastExpr 0x246db314b40 <col:30> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x246db314b20 <col:30> 'int' lvalue Var 0x246db30f4b8 'i' 'int'
|   |   `-ForStmt 0x246db315560 <line:187:9, line:202:9>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     `-CompoundStmt 0x246db315530 <line:187:18, line:202:9>
|   |       |-IfStmt 0x246db315290 <line:190:13, line:197:13>
|   |       | |-BinaryOperator 0x246db314f28 <line:190:17, col:22> 'int' '<='
|   |       | | |-ImplicitCastExpr 0x246db314f10 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x246db314ec8 <col:17> 'int' lvalue Var 0x246db30f4b8 'i' 'int'
|   |       | | `-IntegerLiteral 0x246db314ee8 <col:22> 'int' 0
|   |       | `-CompoundStmt 0x246db315270 <col:25, line:197:13>
|   |       |   |-IfStmt 0x246db315158 <line:193:17, line:194:48>
|   |       |   | |-BinaryOperator 0x246db314fc8 <line:193:21, col:25> 'int' '<'
|   |       |   | | |-ImplicitCastExpr 0x246db314fb0 <col:21> 'int' <LValueToRValue>
|   |       |   | | | `-DeclRefExpr 0x246db314f68 <col:21> 'int' lvalue Var 0x246db30f4b8 'i' 'int'
|   |       |   | | `-IntegerLiteral 0x246db314f88 <col:25> 'int' 0
|   |       |   | `-ReturnStmt 0x246db315148 <line:194:21, col:48>
|   |       |   |   `-ParenExpr 0x246db315128 <col:28, col:48> 'int'
|   |       |   |     `-ConditionalOperator 0x246db3150f8 <col:29, col:47> 'int'
|   |       |   |       |-ParenExpr 0x246db315068 <col:29, col:37> 'int'
|   |       |   |       | `-BinaryOperator 0x246db315048 <col:30, col:36> 'int' '>'
|   |       |   |       |   |-ImplicitCastExpr 0x246db315030 <col:30> 'int' <LValueToRValue>
|   |       |   |       |   | `-DeclRefExpr 0x246db314fe8 <col:30> 'int' lvalue Var 0x246db30f538 'num' 'int'
|   |       |   |       |   `-IntegerLiteral 0x246db315008 <col:36> 'int' 0
|   |       |   |       |-ImplicitCastExpr 0x246db3150c8 <col:41> 'int' <LValueToRValue>
|   |       |   |       | `-DeclRefExpr 0x246db315088 <col:41> 'int' lvalue Var 0x246db30f538 'num' 'int'
|   |       |   |       `-ImplicitCastExpr 0x246db3150e0 <col:47> 'int' <LValueToRValue>
|   |       |   |         `-DeclRefExpr 0x246db3150a8 <col:47> 'int' lvalue Var 0x246db30f4b8 'i' 'int'
|   |       |   `-IfStmt 0x246db315258 <line:195:17, line:196:32>
|   |       |     |-BinaryOperator 0x246db3151d0 <line:195:21, col:26> 'int' '=='
|   |       |     | |-ImplicitCastExpr 0x246db3151b8 <col:21> 'int' <LValueToRValue>
|   |       |     | | `-DeclRefExpr 0x246db315170 <col:21> 'int' lvalue Var 0x246db30f4b8 'i' 'int'
|   |       |     | `-IntegerLiteral 0x246db315190 <col:26> 'int' 0
|   |       |     `-ReturnStmt 0x246db315248 <line:196:21, col:32>
|   |       |       `-ImplicitCastExpr 0x246db315230 <col:28, col:32> 'int' <LValueToRValue>
|   |       |         `-ParenExpr 0x246db315210 <col:28, col:32> 'int' lvalue
|   |       |           `-DeclRefExpr 0x246db3151f0 <col:29> 'int' lvalue Var 0x246db30f538 'num' 'int'
|   |       |-CompoundAssignOperator 0x246db315348 <line:198:13, col:30> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-MemberExpr 0x246db3152e0 <col:13, col:18> 'int' lvalue ->obuf_off 0x246db305eb8
|   |       | | `-ImplicitCastExpr 0x246db3152c8 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x246db3152a8 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30f640 'ctx' 'BIO_F_BUFFER_CTX *'
|   |       | `-ImplicitCastExpr 0x246db315330 <col:30> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x246db315310 <col:30> 'int' lvalue Var 0x246db30f4b8 'i' 'int'
|   |       |-CompoundAssignOperator 0x246db315418 <line:199:13, col:30> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-MemberExpr 0x246db3153b0 <col:13, col:18> 'int' lvalue ->obuf_len 0x246db305e48
|   |       | | `-ImplicitCastExpr 0x246db315398 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x246db315378 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30f640 'ctx' 'BIO_F_BUFFER_CTX *'
|   |       | `-ImplicitCastExpr 0x246db315400 <col:30> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x246db3153e0 <col:30> 'int' lvalue Var 0x246db30f4b8 'i' 'int'
|   |       `-IfStmt 0x246db315518 <line:200:13, line:201:17>
|   |         |-BinaryOperator 0x246db3154f0 <line:200:17, col:34> 'int' '=='
|   |         | |-ImplicitCastExpr 0x246db3154d8 <col:17, col:22> 'int' <LValueToRValue>
|   |         | | `-MemberExpr 0x246db315480 <col:17, col:22> 'int' lvalue ->obuf_len 0x246db305e48
|   |         | |   `-ImplicitCastExpr 0x246db315468 <col:17> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |         | |     `-DeclRefExpr 0x246db315448 <col:17> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30f640 'ctx' 'BIO_F_BUFFER_CTX *'
|   |         | `-IntegerLiteral 0x246db3154b0 <col:34> 'int' 0
|   |         `-BreakStmt 0x246db315510 <line:201:17>
|   |-BinaryOperator 0x246db315660 <line:208:5, col:21> 'int' '='
|   | |-MemberExpr 0x246db315608 <col:5, col:10> 'int' lvalue ->obuf_off 0x246db305eb8
|   | | `-ImplicitCastExpr 0x246db3155f0 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x246db3155d0 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30f640 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-IntegerLiteral 0x246db315638 <col:21> 'int' 0
|   |-WhileStmt 0x246db316eb8 <line:211:5, line:225:5>
|   | |-BinaryOperator 0x246db316768 <line:211:12, col:24> 'int' '>='
|   | | |-ImplicitCastExpr 0x246db316738 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x246db3166b0 <col:12> 'int' lvalue ParmVar 0x246db30f328 'inl' 'int'
|   | | `-ImplicitCastExpr 0x246db316750 <col:19, col:24> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x246db316708 <col:19, col:24> 'int' lvalue ->obuf_size 0x246db305c18
|   | |     `-ImplicitCastExpr 0x246db3166f0 <col:19> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x246db3166d0 <col:19> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db30f640 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-CompoundStmt 0x246db316e80 <col:35, line:225:5>
|   |   |-IfStmt 0x246db316bd0 <line:213:9, line:219:9>
|   |   | |-BinaryOperator 0x246db316868 <line:213:13, col:18> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x246db316850 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x246db316808 <col:13> 'int' lvalue Var 0x246db30f4b8 'i' 'int'
|   |   | | `-IntegerLiteral 0x246db316828 <col:18> 'int' 0
|   |   | `-CompoundStmt 0x246db316bb0 <col:21, line:219:9>
|   |   |   |-IfStmt 0x246db316a98 <line:215:13, line:216:44>
|   |   |   | |-BinaryOperator 0x246db316908 <line:215:17, col:21> 'int' '<'
|   |   |   | | |-ImplicitCastExpr 0x246db3168f0 <col:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x246db3168a8 <col:17> 'int' lvalue Var 0x246db30f4b8 'i' 'int'
|   |   |   | | `-IntegerLiteral 0x246db3168c8 <col:21> 'int' 0
|   |   |   | `-ReturnStmt 0x246db316a88 <line:216:17, col:44>
|   |   |   |   `-ParenExpr 0x246db316a68 <col:24, col:44> 'int'
|   |   |   |     `-ConditionalOperator 0x246db316a38 <col:25, col:43> 'int'
|   |   |   |       |-ParenExpr 0x246db3169a8 <col:25, col:33> 'int'
|   |   |   |       | `-BinaryOperator 0x246db316988 <col:26, col:32> 'int' '>'
|   |   |   |       |   |-ImplicitCastExpr 0x246db316970 <col:26> 'int' <LValueToRValue>
|   |   |   |       |   | `-DeclRefExpr 0x246db316928 <col:26> 'int' lvalue Var 0x246db30f538 'num' 'int'
|   |   |   |       |   `-IntegerLiteral 0x246db316948 <col:32> 'int' 0
|   |   |   |       |-ImplicitCastExpr 0x246db316a08 <col:37> 'int' <LValueToRValue>
|   |   |   |       | `-DeclRefExpr 0x246db3169c8 <col:37> 'int' lvalue Var 0x246db30f538 'num' 'int'
|   |   |   |       `-ImplicitCastExpr 0x246db316a20 <col:43> 'int' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x246db3169e8 <col:43> 'int' lvalue Var 0x246db30f4b8 'i' 'int'
|   |   |   `-IfStmt 0x246db316b98 <line:217:13, line:218:28>
|   |   |     |-BinaryOperator 0x246db316b10 <line:217:17, col:22> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x246db316af8 <col:17> 'int' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x246db316ab0 <col:17> 'int' lvalue Var 0x246db30f4b8 'i' 'int'
|   |   |     | `-IntegerLiteral 0x246db316ad0 <col:22> 'int' 0
|   |   |     `-ReturnStmt 0x246db316b88 <line:218:17, col:28>
|   |   |       `-ImplicitCastExpr 0x246db316b70 <col:24, col:28> 'int' <LValueToRValue>
|   |   |         `-ParenExpr 0x246db316b50 <col:24, col:28> 'int' lvalue
|   |   |           `-DeclRefExpr 0x246db316b30 <col:25> 'int' lvalue Var 0x246db30f538 'num' 'int'
|   |   |-CompoundAssignOperator 0x246db316c40 <line:220:9, col:16> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x246db316be8 <col:9> 'int' lvalue Var 0x246db30f538 'num' 'int'
|   |   | `-ImplicitCastExpr 0x246db316c28 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x246db316c08 <col:16> 'int' lvalue Var 0x246db30f4b8 'i' 'int'
|   |   |-CompoundAssignOperator 0x246db316cc8 <line:221:9, col:15> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |   | |-DeclRefExpr 0x246db316c70 <col:9> 'const char *' lvalue ParmVar 0x246db30f2a8 'in' 'const char *'
|   |   | `-ImplicitCastExpr 0x246db316cb0 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x246db316c90 <col:15> 'int' lvalue Var 0x246db30f4b8 'i' 'int'
|   |   |-CompoundAssignOperator 0x246db316d50 <line:222:9, col:16> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x246db316cf8 <col:9> 'int' lvalue ParmVar 0x246db30f328 'inl' 'int'
|   |   | `-ImplicitCastExpr 0x246db316d38 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x246db316d18 <col:16> 'int' lvalue Var 0x246db30f4b8 'i' 'int'
|   |   `-IfStmt 0x246db316e68 <line:223:9, line:224:24>
|   |     |-BinaryOperator 0x246db316de0 <line:223:13, col:20> 'int' '=='
|   |     | |-ImplicitCastExpr 0x246db316dc8 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x246db316d80 <col:13> 'int' lvalue ParmVar 0x246db30f328 'inl' 'int'
|   |     | `-IntegerLiteral 0x246db316da0 <col:20> 'int' 0
|   |     `-ReturnStmt 0x246db316e58 <line:224:13, col:24>
|   |       `-ImplicitCastExpr 0x246db316e40 <col:20, col:24> 'int' <LValueToRValue>
|   |         `-ParenExpr 0x246db316e20 <col:20, col:24> 'int' lvalue
|   |           `-DeclRefExpr 0x246db316e00 <col:21> 'int' lvalue Var 0x246db30f538 'num' 'int'
|   `-GotoStmt 0x246db316ed0 <line:230:5, col:10> 'start' 0x246db30fdf0
|-FunctionDecl 0x246db317190 <line:233:1, line:389:1> line:233:13 invalid buffer_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x246db316f60 <col:25, col:30> col:30 invalid b 'int *'
| |-ParmVarDecl 0x246db316fe0 <col:33, col:37> col:37 used cmd 'int'
| |-ParmVarDecl 0x246db317060 <col:42, col:47> col:47 used num 'long'
| |-ParmVarDecl 0x246db3170e0 <col:52, col:58> col:58 used ptr 'void *'
| `-CompoundStmt 0x246db31da88 <line:234:1, line:389:1>
|   |-DeclStmt 0x246db3172e0 <line:236:5, col:26>
|   | `-VarDecl 0x246db317278 <col:5, col:23> col:23 used ctx 'BIO_F_BUFFER_CTX *'
|   |-DeclStmt 0x246db3173b8 <line:237:5, col:17>
|   | `-VarDecl 0x246db317310 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x246db3173a0 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x246db317378 <col:16> 'int' 1
|   |-DeclStmt 0x246db3174e8 <line:238:5, col:18>
|   | |-VarDecl 0x246db3173e8 <col:5, col:11> col:11 used p1 'char *'
|   | `-VarDecl 0x246db317468 <col:5, col:16> col:16 used p2 'char *'
|   |-DeclStmt 0x246db3176c0 <line:239:5, col:18>
|   | |-VarDecl 0x246db317518 <col:5, col:9> col:9 used r 'int'
|   | |-VarDecl 0x246db317598 <col:5, col:12> col:12 used i 'int'
|   | `-VarDecl 0x246db317618 <col:5, col:16> col:16 used ip 'int *'
|   |-DeclStmt 0x246db3177f0 <line:240:5, col:17>
|   | |-VarDecl 0x246db3176f0 <col:5, col:9> col:9 used ibs 'int'
|   | `-VarDecl 0x246db317770 <col:5, col:14> col:14 used obs 'int'
|   |-SwitchStmt 0x246db317890 <line:244:5, line:384:5>
|   | |-ImplicitCastExpr 0x246db317878 <line:244:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x246db317840 <col:13> 'int' lvalue ParmVar 0x246db316fe0 'cmd' 'int'
|   | `-CompoundStmt 0x246db31d720 <col:18, line:384:5>
|   |   |-BinaryOperator 0x246db317940 <line:246:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x246db3178e8 <col:9, col:14> 'int' lvalue ->ibuf_off 0x246db305d68
|   |   | | `-ImplicitCastExpr 0x246db3178d0 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x246db3178b0 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-IntegerLiteral 0x246db317918 <col:25> 'int' 0
|   |   |-BinaryOperator 0x246db3179f0 <line:247:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x246db317998 <col:9, col:14> 'int' lvalue ->ibuf_len 0x246db305cf8
|   |   | | `-ImplicitCastExpr 0x246db317980 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x246db317960 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-IntegerLiteral 0x246db3179c8 <col:25> 'int' 0
|   |   |-BinaryOperator 0x246db317aa0 <line:248:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x246db317a48 <col:9, col:14> 'int' lvalue ->obuf_off 0x246db305eb8
|   |   | | `-ImplicitCastExpr 0x246db317a30 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x246db317a10 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-IntegerLiteral 0x246db317a78 <col:25> 'int' 0
|   |   |-BinaryOperator 0x246db317b50 <line:249:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x246db317af8 <col:9, col:14> 'int' lvalue ->obuf_len 0x246db305e48
|   |   | | `-ImplicitCastExpr 0x246db317ae0 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x246db317ac0 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-IntegerLiteral 0x246db317b28 <col:25> 'int' 0
|   |   |-IfStmt 0x246db317c80 <line:250:9, line:251:22>
|   |   | |-OpaqueValueExpr 0x246db317c68 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x246db317c58 <col:13, col:22>
|   |   |   `-ImplicitCastExpr 0x246db317c40 <col:20, col:22> 'long' <IntegralCast>
|   |   |     `-ParenExpr 0x246db317c20 <col:20, col:22> 'int'
|   |   |       `-IntegerLiteral 0x246db317bf8 <col:21> 'int' 0
|   |   |-BreakStmt 0x246db317e70 <line:253:9>
|   |   |-BinaryOperator 0x246db317f58 <line:255:9, col:26> 'long' '='
|   |   | |-DeclRefExpr 0x246db317e78 <col:9> 'long' lvalue Var 0x246db317310 'ret' 'long'
|   |   | `-CStyleCastExpr 0x246db317f30 <col:15, col:26> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x246db317f18 <col:21, col:26> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     `-MemberExpr 0x246db317ed0 <col:21, col:26> 'int' lvalue ->obuf_len 0x246db305e48
|   |   |       `-ImplicitCastExpr 0x246db317eb8 <col:21> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x246db317e98 <col:21> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-BreakStmt 0x246db317f78 <line:256:9>
|   |   |-BinaryOperator 0x246db317fe0 <line:258:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x246db317f80 <col:9> 'long' lvalue Var 0x246db317310 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x246db317fc8 <col:15> 'long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x246db317fa0 <col:15> 'int' 0
|   |   |-BinaryOperator 0x246db3180b8 <line:259:9, col:19> 'char *' '='
|   |   | |-DeclRefExpr 0x246db318000 <col:9> 'char *' lvalue Var 0x246db3173e8 'p1' 'char *'
|   |   | `-ImplicitCastExpr 0x246db3180a0 <col:14, col:19> 'char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x246db318070 <col:14, col:19> 'char *' lvalue ->ibuf 0x246db305c88
|   |   |     `-ImplicitCastExpr 0x246db318058 <col:14> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x246db318038 <col:14> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-ForStmt 0x246db318468 <line:260:9, line:263:9>
|   |   | |-BinaryOperator 0x246db318138 <line:260:14, col:18> 'int' '='
|   |   | | |-DeclRefExpr 0x246db3180d8 <col:14> 'int' lvalue Var 0x246db317598 'i' 'int'
|   |   | | `-IntegerLiteral 0x246db318110 <col:18> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x246db318210 <col:21, col:30> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x246db3181e0 <col:21> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x246db318158 <col:21> 'int' lvalue Var 0x246db317598 'i' 'int'
|   |   | | `-ImplicitCastExpr 0x246db3181f8 <col:25, col:30> 'int' <LValueToRValue>
|   |   | |   `-MemberExpr 0x246db3181b0 <col:25, col:30> 'int' lvalue ->ibuf_len 0x246db305cf8
|   |   | |     `-ImplicitCastExpr 0x246db318198 <col:25> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x246db318178 <col:25> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |-UnaryOperator 0x246db318250 <col:40, col:41> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x246db318230 <col:40> 'int' lvalue Var 0x246db317598 'i' 'int'
|   |   | `-CompoundStmt 0x246db318450 <col:45, line:263:9>
|   |   |   `-IfStmt 0x246db318438 <line:261:13, line:262:20>
|   |   |     |-BinaryOperator 0x246db3183e0 <line:261:17, col:42> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x246db3183c8 <col:17, col:37> 'int' <IntegralCast>
|   |   |     | | `-ImplicitCastExpr 0x246db3183b0 <col:17, col:37> 'char' <LValueToRValue>
|   |   |     | |   `-ArraySubscriptExpr 0x246db318378 <col:17, col:37> 'char' lvalue
|   |   |     | |     |-ImplicitCastExpr 0x246db318360 <col:17> 'char *' <LValueToRValue>
|   |   |     | |     | `-DeclRefExpr 0x246db318268 <col:17> 'char *' lvalue Var 0x246db3173e8 'p1' 'char *'
|   |   |     | |     `-BinaryOperator 0x246db318340 <col:20, col:36> 'int' '+'
|   |   |     | |       |-ImplicitCastExpr 0x246db318310 <col:20, col:25> 'int' <LValueToRValue>
|   |   |     | |       | `-MemberExpr 0x246db3182c0 <col:20, col:25> 'int' lvalue ->ibuf_off 0x246db305d68
|   |   |     | |       |   `-ImplicitCastExpr 0x246db3182a8 <col:20> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     | |       |     `-DeclRefExpr 0x246db318288 <col:20> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     | |       `-ImplicitCastExpr 0x246db318328 <col:36> 'int' <LValueToRValue>
|   |   |     | |         `-DeclRefExpr 0x246db3182f0 <col:36> 'int' lvalue Var 0x246db317598 'i' 'int'
|   |   |     | `-CharacterLiteral 0x246db318398 <col:42> 'int' 10
|   |   |     `-UnaryOperator 0x246db318420 <line:262:17, col:20> 'long' postfix '++'
|   |   |       `-DeclRefExpr 0x246db318400 <col:17> 'long' lvalue Var 0x246db317310 'ret' 'long'
|   |   |-BreakStmt 0x246db3184a0 <line:264:9>
|   |   |-BinaryOperator 0x246db318588 <line:266:9, col:26> 'long' '='
|   |   | |-DeclRefExpr 0x246db3184a8 <col:9> 'long' lvalue Var 0x246db317310 'ret' 'long'
|   |   | `-CStyleCastExpr 0x246db318560 <col:15, col:26> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x246db318548 <col:21, col:26> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     `-MemberExpr 0x246db318500 <col:21, col:26> 'int' lvalue ->obuf_len 0x246db305e48
|   |   |       `-ImplicitCastExpr 0x246db3184e8 <col:21> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x246db3184c8 <col:21> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-IfStmt 0x246db3107c8 <line:267:9, line:271:9>
|   |   | |-BinaryOperator 0x246db318620 <line:267:13, col:20> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x246db3185f0 <col:13> 'long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x246db3185a8 <col:13> 'long' lvalue Var 0x246db317310 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x246db318608 <col:20> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x246db3185c8 <col:20> 'int' 0
|   |   | `-CompoundStmt 0x246db3107b0 <col:23, line:271:9>
|   |   |   `-IfStmt 0x246db3106f8 <line:268:13, line:269:26>
|   |   |     |-OpaqueValueExpr 0x246db3106e0 <<invalid sloc>> '_Bool'
|   |   |     `-ReturnStmt 0x246db3106d0 <col:17, col:26>
|   |   |       `-ImplicitCastExpr 0x246db3106b8 <col:24, col:26> 'long' <IntegralCast>
|   |   |         `-ParenExpr 0x246db310698 <col:24, col:26> 'int'
|   |   |           `-IntegerLiteral 0x246db310670 <col:25> 'int' 0
|   |   |-BreakStmt 0x246db3107e0 <line:272:9>
|   |   |-BinaryOperator 0x246db3108c8 <line:274:9, col:26> 'long' '='
|   |   | |-DeclRefExpr 0x246db3107e8 <col:9> 'long' lvalue Var 0x246db317310 'ret' 'long'
|   |   | `-CStyleCastExpr 0x246db3108a0 <col:15, col:26> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x246db310888 <col:21, col:26> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     `-MemberExpr 0x246db310840 <col:21, col:26> 'int' lvalue ->ibuf_len 0x246db305cf8
|   |   |       `-ImplicitCastExpr 0x246db310828 <col:21> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x246db310808 <col:21> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-IfStmt 0x246db310b60 <line:275:9, line:279:9>
|   |   | |-BinaryOperator 0x246db310960 <line:275:13, col:20> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x246db310930 <col:13> 'long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x246db3108e8 <col:13> 'long' lvalue Var 0x246db317310 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x246db310948 <col:20> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x246db310908 <col:20> 'int' 0
|   |   | `-CompoundStmt 0x246db310b48 <col:23, line:279:9>
|   |   |   `-IfStmt 0x246db310a90 <line:276:13, line:277:26>
|   |   |     |-OpaqueValueExpr 0x246db310a78 <<invalid sloc>> '_Bool'
|   |   |     `-ReturnStmt 0x246db310a68 <col:17, col:26>
|   |   |       `-ImplicitCastExpr 0x246db310a50 <col:24, col:26> 'long' <IntegralCast>
|   |   |         `-ParenExpr 0x246db310a30 <col:24, col:26> 'int'
|   |   |           `-IntegerLiteral 0x246db310a08 <col:25> 'int' 0
|   |   |-BreakStmt 0x246db310b78 <line:280:9>
|   |   |-IfStmt 0x246db3110e8 <line:282:9, line:288:9>
|   |   | |-BinaryOperator 0x246db310c50 <line:282:13, col:24> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x246db310c08 <col:13> 'long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x246db310b80 <col:13> 'long' lvalue ParmVar 0x246db317060 'num' 'long'
|   |   | | `-ImplicitCastExpr 0x246db310c38 <col:19, col:24> 'long' <IntegralCast>
|   |   | |   `-ImplicitCastExpr 0x246db310c20 <col:19, col:24> 'int' <LValueToRValue>
|   |   | |     `-MemberExpr 0x246db310bd8 <col:19, col:24> 'int' lvalue ->ibuf_size 0x246db305ba8
|   |   | |       `-ImplicitCastExpr 0x246db310bc0 <col:19> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x246db310ba0 <col:19> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-CompoundStmt 0x246db3110b8 <col:35, line:288:9>
|   |   |   |-BinaryOperator 0x246db310d80 <line:283:13, col:41> 'char *' '='
|   |   |   | |-DeclRefExpr 0x246db310c70 <col:13> 'char *' lvalue Var 0x246db3173e8 'p1' 'char *'
|   |   |   | `-ImplicitCastExpr 0x246db310d68 <col:18, col:41> 'char *' <IntegralToPointer>
|   |   |   |   `-CallExpr 0x246db310d40 <col:18, col:41> 'int'
|   |   |   |     |-ImplicitCastExpr 0x246db310d28 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x246db310c90 <col:18> 'int ()' Function 0x246db315850 'OPENSSL_malloc' 'int ()'
|   |   |   |     `-CStyleCastExpr 0x246db310d00 <col:33, col:38> 'int' <IntegralCast>
|   |   |   |       `-ImplicitCastExpr 0x246db310ce8 <col:38> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |   |         `-DeclRefExpr 0x246db310cb0 <col:38> 'long' lvalue ParmVar 0x246db317060 'num' 'long'
|   |   |   |-IfStmt 0x246db310f00 <line:284:13, line:285:22>
|   |   |   | |-BinaryOperator 0x246db310e78 <line:284:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |   |   | | |-ImplicitCastExpr 0x246db310e48 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:284:17> 'char *' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x246db310da0 <col:17> 'char *' lvalue Var 0x246db3173e8 'p1' 'char *'
|   |   |   | | `-ImplicitCastExpr 0x246db310e60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |   |   | |   `-ParenExpr 0x246db310e28 <col:17, col:27> 'void *'
|   |   |   | |     `-CStyleCastExpr 0x246db310e00 <col:18, col:26> 'void *' <NullToPointer>
|   |   |   | |       `-IntegerLiteral 0x246db310dc0 <col:26> 'int' 0
|   |   |   | `-GotoStmt 0x246db310ee8 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:285:17, col:22> 'malloc_error' 0x246db310e98
|   |   |   |-CallExpr 0x246db310fb8 <line:286:13, col:35> 'int'
|   |   |   | |-ImplicitCastExpr 0x246db310fa0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x246db310f18 <col:13> 'int ()' Function 0x246db315b40 'OPENSSL_free' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x246db310fe0 <col:26, col:31> 'char *' <LValueToRValue>
|   |   |   |   `-MemberExpr 0x246db310f70 <col:26, col:31> 'char *' lvalue ->ibuf 0x246db305c88
|   |   |   |     `-ImplicitCastExpr 0x246db310f58 <col:26> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x246db310f38 <col:26> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   `-BinaryOperator 0x246db311098 <line:287:13, col:25> 'char *' '='
|   |   |     |-MemberExpr 0x246db311030 <col:13, col:18> 'char *' lvalue ->ibuf 0x246db305c88
|   |   |     | `-ImplicitCastExpr 0x246db311018 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x246db310ff8 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     `-ImplicitCastExpr 0x246db311080 <col:25> 'char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x246db311060 <col:25> 'char *' lvalue Var 0x246db3173e8 'p1' 'char *'
|   |   |-BinaryOperator 0x246db311190 <line:289:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x246db311138 <col:9, col:14> 'int' lvalue ->ibuf_off 0x246db305d68
|   |   | | `-ImplicitCastExpr 0x246db311120 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x246db311100 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-IntegerLiteral 0x246db311168 <col:25> 'int' 0
|   |   |-BinaryOperator 0x246db311290 <line:290:9, col:30> 'int' '='
|   |   | |-MemberExpr 0x246db3111e8 <col:9, col:14> 'int' lvalue ->ibuf_len 0x246db305cf8
|   |   | | `-ImplicitCastExpr 0x246db3111d0 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x246db3111b0 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-CStyleCastExpr 0x246db311268 <col:25, col:30> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x246db311250 <col:30> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x246db311218 <col:30> 'long' lvalue ParmVar 0x246db317060 'num' 'long'
|   |   |-CallExpr 0x246db311418 <line:291:9, col:40> 'void *'
|   |   | |-ImplicitCastExpr 0x246db311400 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x246db3112b0 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x246db312760 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x246db311468 <col:16, col:21> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x246db311450 <col:16, col:21> 'char *' <LValueToRValue>
|   |   | |   `-MemberExpr 0x246db311308 <col:16, col:21> 'char *' lvalue ->ibuf 0x246db305c88
|   |   | |     `-ImplicitCastExpr 0x246db3112f0 <col:16> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x246db3112d0 <col:16> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |-ImplicitCastExpr 0x246db311498 <col:27> 'const void *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x246db311480 <col:27> 'void *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x246db311338 <col:27> 'void *' lvalue ParmVar 0x246db3170e0 'ptr' 'void *'
|   |   | `-ImplicitCastExpr 0x246db3114b0 <col:32, col:37> 'unsigned long long' <IntegralCast>
|   |   |   `-CStyleCastExpr 0x246db3113a8 <col:32, col:37> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x246db311390 <col:37> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |       `-DeclRefExpr 0x246db311358 <col:37> 'long' lvalue ParmVar 0x246db317060 'num' 'long'
|   |   |-BinaryOperator 0x246db311528 <line:292:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x246db3114c8 <col:9> 'long' lvalue Var 0x246db317310 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x246db311510 <col:15> 'long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x246db3114e8 <col:15> 'int' 1
|   |   |-BreakStmt 0x246db311548 <line:293:9>
|   |   |-IfStmt 0x246db318d68 <line:295:9, line:308:9> has_else
|   |   | |-BinaryOperator 0x246db311610 <line:295:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x246db3115f8 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:295:13> 'void *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x246db311550 <col:13> 'void *' lvalue ParmVar 0x246db3170e0 'ptr' 'void *'
|   |   | | `-ParenExpr 0x246db3115d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |   | |   `-CStyleCastExpr 0x246db3115b0 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |     `-IntegerLiteral 0x246db311570 <col:26> 'int' 0
|   |   | |-CompoundStmt 0x246db318bb8 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:295:26, line:305:9>
|   |   | | |-BinaryOperator 0x246db318760 <line:296:13, col:25> 'int *' '='
|   |   | | | |-DeclRefExpr 0x246db311630 <col:13> 'int *' lvalue Var 0x246db317618 'ip' 'int *'
|   |   | | | `-CStyleCastExpr 0x246db318738 <col:18, col:25> 'int *' <BitCast>
|   |   | | |   `-ImplicitCastExpr 0x246db318720 <col:25> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   | | |     `-DeclRefExpr 0x246db3186e8 <col:25> 'void *' lvalue ParmVar 0x246db3170e0 'ptr' 'void *'
|   |   | | `-IfStmt 0x246db318b90 <line:297:13, line:304:13> has_else
|   |   | |   |-BinaryOperator 0x246db318810 <line:297:17, col:24> 'int' '=='
|   |   | |   | |-ImplicitCastExpr 0x246db3187f8 <col:17, col:18> 'int' <LValueToRValue>
|   |   | |   | | `-UnaryOperator 0x246db3187b8 <col:17, col:18> 'int' lvalue prefix '*' cannot overflow
|   |   | |   | |   `-ImplicitCastExpr 0x246db3187a0 <col:18> 'int *' <LValueToRValue>
|   |   | |   | |     `-DeclRefExpr 0x246db318780 <col:18> 'int *' lvalue Var 0x246db317618 'ip' 'int *'
|   |   | |   | `-IntegerLiteral 0x246db3187d0 <col:24> 'int' 0
|   |   | |   |-CompoundStmt 0x246db3189d8 <col:27, line:300:13>
|   |   | |   | |-BinaryOperator 0x246db3188e0 <line:298:17, col:28> 'int' '='
|   |   | |   | | |-DeclRefExpr 0x246db318830 <col:17> 'int' lvalue Var 0x246db3176f0 'ibs' 'int'
|   |   | |   | | `-CStyleCastExpr 0x246db3188b8 <col:23, col:28> 'int' <IntegralCast>
|   |   | |   | |   `-ImplicitCastExpr 0x246db3188a0 <col:28> 'long' <LValueToRValue> part_of_explicit_cast
|   |   | |   | |     `-DeclRefExpr 0x246db318868 <col:28> 'long' lvalue ParmVar 0x246db317060 'num' 'long'
|   |   | |   | `-BinaryOperator 0x246db3189b8 <line:299:17, col:28> 'int' '='
|   |   | |   |   |-DeclRefExpr 0x246db318900 <col:17> 'int' lvalue Var 0x246db317770 'obs' 'int'
|   |   | |   |   `-ImplicitCastExpr 0x246db3189a0 <col:23, col:28> 'int' <LValueToRValue>
|   |   | |   |     `-MemberExpr 0x246db318970 <col:23, col:28> 'int' lvalue ->obuf_size 0x246db305c18
|   |   | |   |       `-ImplicitCastExpr 0x246db318958 <col:23> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   |         `-DeclRefExpr 0x246db318938 <col:23> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |   `-CompoundStmt 0x246db318b70 <line:300:20, line:304:13>
|   |   | |     |-BinaryOperator 0x246db318a98 <line:302:17, col:28> 'int' '='
|   |   | |     | |-DeclRefExpr 0x246db3189f8 <col:17> 'int' lvalue Var 0x246db3176f0 'ibs' 'int'
|   |   | |     | `-ImplicitCastExpr 0x246db318a80 <col:23, col:28> 'int' <LValueToRValue>
|   |   | |     |   `-MemberExpr 0x246db318a50 <col:23, col:28> 'int' lvalue ->ibuf_size 0x246db305ba8
|   |   | |     |     `-ImplicitCastExpr 0x246db318a38 <col:23> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |     |       `-DeclRefExpr 0x246db318a18 <col:23> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |     `-BinaryOperator 0x246db318b50 <line:303:17, col:28> 'int' '='
|   |   | |       |-DeclRefExpr 0x246db318ab8 <col:17> 'int' lvalue Var 0x246db317770 'obs' 'int'
|   |   | |       `-CStyleCastExpr 0x246db318b28 <col:23, col:28> 'int' <IntegralCast>
|   |   | |         `-ImplicitCastExpr 0x246db318b10 <col:28> 'long' <LValueToRValue> part_of_explicit_cast
|   |   | |           `-DeclRefExpr 0x246db318ad8 <col:28> 'long' lvalue ParmVar 0x246db317060 'num' 'long'
|   |   | `-CompoundStmt 0x246db318d48 <line:305:16, line:308:9>
|   |   |   |-BinaryOperator 0x246db318c70 <line:306:13, col:24> 'int' '='
|   |   |   | |-DeclRefExpr 0x246db318bd8 <col:13> 'int' lvalue Var 0x246db3176f0 'ibs' 'int'
|   |   |   | `-CStyleCastExpr 0x246db318c48 <col:19, col:24> 'int' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x246db318c30 <col:24> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |   |     `-DeclRefExpr 0x246db318bf8 <col:24> 'long' lvalue ParmVar 0x246db317060 'num' 'long'
|   |   |   `-BinaryOperator 0x246db318d28 <line:307:13, col:24> 'int' '='
|   |   |     |-DeclRefExpr 0x246db318c90 <col:13> 'int' lvalue Var 0x246db317770 'obs' 'int'
|   |   |     `-CStyleCastExpr 0x246db318d00 <col:19, col:24> 'int' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x246db318ce8 <col:24> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |         `-DeclRefExpr 0x246db318cb0 <col:24> 'long' lvalue ParmVar 0x246db317060 'num' 'long'
|   |   |-BinaryOperator 0x246db318e30 <line:309:9, col:19> 'char *' '='
|   |   | |-DeclRefExpr 0x246db318d90 <col:9> 'char *' lvalue Var 0x246db3173e8 'p1' 'char *'
|   |   | `-ImplicitCastExpr 0x246db318e18 <col:14, col:19> 'char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x246db318de8 <col:14, col:19> 'char *' lvalue ->ibuf 0x246db305c88
|   |   |     `-ImplicitCastExpr 0x246db318dd0 <col:14> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x246db318db0 <col:14> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-BinaryOperator 0x246db318f08 <line:310:9, col:19> 'char *' '='
|   |   | |-DeclRefExpr 0x246db318e50 <col:9> 'char *' lvalue Var 0x246db317468 'p2' 'char *'
|   |   | `-ImplicitCastExpr 0x246db318ef0 <col:14, col:19> 'char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x246db318ec0 <col:14, col:19> 'char *' lvalue ->obuf 0x246db305dd8
|   |   |     `-ImplicitCastExpr 0x246db318ea8 <col:14> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x246db318e88 <col:14> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-IfStmt 0x246db319358 <line:311:9, line:315:9>
|   |   | |-BinaryOperator 0x246db3190c0 <line:311:13, col:66> 'int' '&&'
|   |   | | |-ParenExpr 0x246db318fa8 <col:13, col:39> 'int'
|   |   | | | `-BinaryOperator 0x246db318f88 <col:14, line:23:33> 'int' '>'
|   |   | | |   |-ImplicitCastExpr 0x246db318f70 <line:311:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x246db318f28 <col:14> 'int' lvalue Var 0x246db3176f0 'ibs' 'int'
|   |   | | |   `-IntegerLiteral 0x246db318f48 <line:23:33> 'int' 4096
|   |   | | `-ParenExpr 0x246db3190a0 <line:311:44, col:66> 'int'
|   |   | |   `-BinaryOperator 0x246db319080 <col:45, col:57> 'int' '!='
|   |   | |     |-ImplicitCastExpr 0x246db319050 <col:45> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x246db318fc8 <col:45> 'int' lvalue Var 0x246db3176f0 'ibs' 'int'
|   |   | |     `-ImplicitCastExpr 0x246db319068 <col:52, col:57> 'int' <LValueToRValue>
|   |   | |       `-MemberExpr 0x246db319020 <col:52, col:57> 'int' lvalue ->ibuf_size 0x246db305ba8
|   |   | |         `-ImplicitCastExpr 0x246db319008 <col:52> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |           `-DeclRefExpr 0x246db318fe8 <col:52> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-CompoundStmt 0x246db319338 <col:69, line:315:9>
|   |   |   |-BinaryOperator 0x246db3191f0 <line:312:13, col:41> 'char *' '='
|   |   |   | |-DeclRefExpr 0x246db3190e0 <col:13> 'char *' lvalue Var 0x246db3173e8 'p1' 'char *'
|   |   |   | `-ImplicitCastExpr 0x246db3191d8 <col:18, col:41> 'char *' <IntegralToPointer>
|   |   |   |   `-CallExpr 0x246db3191b0 <col:18, col:41> 'int'
|   |   |   |     |-ImplicitCastExpr 0x246db319198 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x246db319100 <col:18> 'int ()' Function 0x246db315850 'OPENSSL_malloc' 'int ()'
|   |   |   |     `-CStyleCastExpr 0x246db319170 <col:33, col:38> 'int' <IntegralCast>
|   |   |   |       `-ImplicitCastExpr 0x246db319158 <col:38> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |   |         `-DeclRefExpr 0x246db319120 <col:38> 'long' lvalue ParmVar 0x246db317060 'num' 'long'
|   |   |   `-IfStmt 0x246db319320 <line:313:13, line:314:22>
|   |   |     |-BinaryOperator 0x246db3192e8 <line:313:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x246db3192b8 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:313:17> 'char *' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x246db319210 <col:17> 'char *' lvalue Var 0x246db3173e8 'p1' 'char *'
|   |   |     | `-ImplicitCastExpr 0x246db3192d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |   |     |   `-ParenExpr 0x246db319298 <col:17, col:27> 'void *'
|   |   |     |     `-CStyleCastExpr 0x246db319270 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     |       `-IntegerLiteral 0x246db319230 <col:26> 'int' 0
|   |   |     `-GotoStmt 0x246db319308 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:314:17, col:22> 'malloc_error' 0x246db310e98
|   |   |-IfStmt 0x246db3118f0 <line:316:9, line:323:9>
|   |   | |-BinaryOperator 0x246db319508 <line:316:13, col:66> 'int' '&&'
|   |   | | |-ParenExpr 0x246db3193f0 <col:13, col:39> 'int'
|   |   | | | `-BinaryOperator 0x246db3193d0 <col:14, line:23:33> 'int' '>'
|   |   | | |   |-ImplicitCastExpr 0x246db3193b8 <line:316:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x246db319370 <col:14> 'int' lvalue Var 0x246db317770 'obs' 'int'
|   |   | | |   `-IntegerLiteral 0x246db319390 <line:23:33> 'int' 4096
|   |   | | `-ParenExpr 0x246db3194e8 <line:316:44, col:66> 'int'
|   |   | |   `-BinaryOperator 0x246db3194c8 <col:45, col:57> 'int' '!='
|   |   | |     |-ImplicitCastExpr 0x246db319498 <col:45> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x246db319410 <col:45> 'int' lvalue Var 0x246db317770 'obs' 'int'
|   |   | |     `-ImplicitCastExpr 0x246db3194b0 <col:52, col:57> 'int' <LValueToRValue>
|   |   | |       `-MemberExpr 0x246db319468 <col:52, col:57> 'int' lvalue ->obuf_size 0x246db305c18
|   |   | |         `-ImplicitCastExpr 0x246db319450 <col:52> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |           `-DeclRefExpr 0x246db319430 <col:52> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-CompoundStmt 0x246db3118d0 <col:69, line:323:9>
|   |   |   |-BinaryOperator 0x246db319638 <line:317:13, col:41> 'char *' '='
|   |   |   | |-DeclRefExpr 0x246db319528 <col:13> 'char *' lvalue Var 0x246db317468 'p2' 'char *'
|   |   |   | `-ImplicitCastExpr 0x246db319620 <col:18, col:41> 'char *' <IntegralToPointer>
|   |   |   |   `-CallExpr 0x246db3195f8 <col:18, col:41> 'int'
|   |   |   |     |-ImplicitCastExpr 0x246db3195e0 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x246db319548 <col:18> 'int ()' Function 0x246db315850 'OPENSSL_malloc' 'int ()'
|   |   |   |     `-CStyleCastExpr 0x246db3195b8 <col:33, col:38> 'int' <IntegralCast>
|   |   |   |       `-ImplicitCastExpr 0x246db3195a0 <col:38> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |   |         `-DeclRefExpr 0x246db319568 <col:38> 'long' lvalue ParmVar 0x246db317060 'num' 'long'
|   |   |   `-IfStmt 0x246db3118b8 <line:318:13, line:322:13>
|   |   |     |-BinaryOperator 0x246db3116d8 <line:318:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x246db3116a8 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:318:17> 'char *' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x246db319658 <col:17> 'char *' lvalue Var 0x246db317468 'p2' 'char *'
|   |   |     | `-ImplicitCastExpr 0x246db3116c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |   |     |   `-ParenExpr 0x246db311688 <col:17, col:27> 'void *'
|   |   |     |     `-CStyleCastExpr 0x246db311660 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     |       `-IntegerLiteral 0x246db319678 <col:26> 'int' 0
|   |   |     `-CompoundStmt 0x246db311898 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:318:29, line:322:13>
|   |   |       |-IfStmt 0x246db311868 <line:319:17, line:320:36>
|   |   |       | |-BinaryOperator 0x246db3117b0 <line:319:21, col:32> 'int' '!='
|   |   |       | | |-ImplicitCastExpr 0x246db311780 <col:21> 'char *' <LValueToRValue>
|   |   |       | | | `-DeclRefExpr 0x246db3116f8 <col:21> 'char *' lvalue Var 0x246db3173e8 'p1' 'char *'
|   |   |       | | `-ImplicitCastExpr 0x246db311798 <col:27, col:32> 'char *' <LValueToRValue>
|   |   |       | |   `-MemberExpr 0x246db311750 <col:27, col:32> 'char *' lvalue ->ibuf 0x246db305c88
|   |   |       | |     `-ImplicitCastExpr 0x246db311738 <col:27> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       | |       `-DeclRefExpr 0x246db311718 <col:27> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |       | `-CallExpr 0x246db311828 <line:320:21, col:36> 'int'
|   |   |       |   |-ImplicitCastExpr 0x246db311810 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |   |       |   | `-DeclRefExpr 0x246db3117d0 <col:21> 'int ()' Function 0x246db315b40 'OPENSSL_free' 'int ()'
|   |   |       |   `-ImplicitCastExpr 0x246db311850 <col:34> 'char *' <LValueToRValue>
|   |   |       |     `-DeclRefExpr 0x246db3117f0 <col:34> 'char *' lvalue Var 0x246db3173e8 'p1' 'char *'
|   |   |       `-GotoStmt 0x246db311880 <line:321:17, col:22> 'malloc_error' 0x246db310e98
|   |   |-IfStmt 0x246db311dd8 <line:324:9, line:330:9>
|   |   | |-BinaryOperator 0x246db3119c0 <line:324:13, col:26> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x246db311990 <col:13, col:18> 'char *' <LValueToRValue>
|   |   | | | `-MemberExpr 0x246db311940 <col:13, col:18> 'char *' lvalue ->ibuf 0x246db305c88
|   |   | | |   `-ImplicitCastExpr 0x246db311928 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x246db311908 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | | `-ImplicitCastExpr 0x246db3119a8 <col:26> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x246db311970 <col:26> 'char *' lvalue Var 0x246db3173e8 'p1' 'char *'
|   |   | `-CompoundStmt 0x246db311da0 <col:30, line:330:9>
|   |   |   |-CallExpr 0x246db311a80 <line:325:13, col:35> 'int'
|   |   |   | |-ImplicitCastExpr 0x246db311a68 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x246db3119e0 <col:13> 'int ()' Function 0x246db315b40 'OPENSSL_free' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x246db311aa8 <col:26, col:31> 'char *' <LValueToRValue>
|   |   |   |   `-MemberExpr 0x246db311a38 <col:26, col:31> 'char *' lvalue ->ibuf 0x246db305c88
|   |   |   |     `-ImplicitCastExpr 0x246db311a20 <col:26> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x246db311a00 <col:26> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   |-BinaryOperator 0x246db311b60 <line:326:13, col:25> 'char *' '='
|   |   |   | |-MemberExpr 0x246db311af8 <col:13, col:18> 'char *' lvalue ->ibuf 0x246db305c88
|   |   |   | | `-ImplicitCastExpr 0x246db311ae0 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x246db311ac0 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | `-ImplicitCastExpr 0x246db311b48 <col:25> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x246db311b28 <col:25> 'char *' lvalue Var 0x246db3173e8 'p1' 'char *'
|   |   |   |-BinaryOperator 0x246db311c10 <line:327:13, col:29> 'int' '='
|   |   |   | |-MemberExpr 0x246db311bb8 <col:13, col:18> 'int' lvalue ->ibuf_off 0x246db305d68
|   |   |   | | `-ImplicitCastExpr 0x246db311ba0 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x246db311b80 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | `-IntegerLiteral 0x246db311be8 <col:29> 'int' 0
|   |   |   |-BinaryOperator 0x246db311cc0 <line:328:13, col:29> 'int' '='
|   |   |   | |-MemberExpr 0x246db311c68 <col:13, col:18> 'int' lvalue ->ibuf_len 0x246db305cf8
|   |   |   | | `-ImplicitCastExpr 0x246db311c50 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x246db311c30 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | `-IntegerLiteral 0x246db311c98 <col:29> 'int' 0
|   |   |   `-BinaryOperator 0x246db311d80 <line:329:13, col:30> 'int' '='
|   |   |     |-MemberExpr 0x246db311d18 <col:13, col:18> 'int' lvalue ->ibuf_size 0x246db305ba8
|   |   |     | `-ImplicitCastExpr 0x246db311d00 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x246db311ce0 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     `-ImplicitCastExpr 0x246db311d68 <col:30> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x246db311d48 <col:30> 'int' lvalue Var 0x246db3176f0 'ibs' 'int'
|   |   |-IfStmt 0x246db3122c0 <line:331:9, line:337:9>
|   |   | |-BinaryOperator 0x246db311ea8 <line:331:13, col:26> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x246db311e78 <col:13, col:18> 'char *' <LValueToRValue>
|   |   | | | `-MemberExpr 0x246db311e28 <col:13, col:18> 'char *' lvalue ->obuf 0x246db305dd8
|   |   | | |   `-ImplicitCastExpr 0x246db311e10 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x246db311df0 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | | `-ImplicitCastExpr 0x246db311e90 <col:26> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x246db311e58 <col:26> 'char *' lvalue Var 0x246db317468 'p2' 'char *'
|   |   | `-CompoundStmt 0x246db312288 <col:30, line:337:9>
|   |   |   |-CallExpr 0x246db311f68 <line:332:13, col:35> 'int'
|   |   |   | |-ImplicitCastExpr 0x246db311f50 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x246db311ec8 <col:13> 'int ()' Function 0x246db315b40 'OPENSSL_free' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x246db311f90 <col:26, col:31> 'char *' <LValueToRValue>
|   |   |   |   `-MemberExpr 0x246db311f20 <col:26, col:31> 'char *' lvalue ->obuf 0x246db305dd8
|   |   |   |     `-ImplicitCastExpr 0x246db311f08 <col:26> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x246db311ee8 <col:26> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   |-BinaryOperator 0x246db312048 <line:333:13, col:25> 'char *' '='
|   |   |   | |-MemberExpr 0x246db311fe0 <col:13, col:18> 'char *' lvalue ->obuf 0x246db305dd8
|   |   |   | | `-ImplicitCastExpr 0x246db311fc8 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x246db311fa8 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | `-ImplicitCastExpr 0x246db312030 <col:25> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x246db312010 <col:25> 'char *' lvalue Var 0x246db317468 'p2' 'char *'
|   |   |   |-BinaryOperator 0x246db3120f8 <line:334:13, col:29> 'int' '='
|   |   |   | |-MemberExpr 0x246db3120a0 <col:13, col:18> 'int' lvalue ->obuf_off 0x246db305eb8
|   |   |   | | `-ImplicitCastExpr 0x246db312088 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x246db312068 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | `-IntegerLiteral 0x246db3120d0 <col:29> 'int' 0
|   |   |   |-BinaryOperator 0x246db3121a8 <line:335:13, col:29> 'int' '='
|   |   |   | |-MemberExpr 0x246db312150 <col:13, col:18> 'int' lvalue ->obuf_len 0x246db305e48
|   |   |   | | `-ImplicitCastExpr 0x246db312138 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x246db312118 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | `-IntegerLiteral 0x246db312180 <col:29> 'int' 0
|   |   |   `-BinaryOperator 0x246db312268 <line:336:13, col:30> 'int' '='
|   |   |     |-MemberExpr 0x246db312200 <col:13, col:18> 'int' lvalue ->obuf_size 0x246db305c18
|   |   |     | `-ImplicitCastExpr 0x246db3121e8 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x246db3121c8 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     `-ImplicitCastExpr 0x246db312250 <col:30> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x246db312230 <col:30> 'int' lvalue Var 0x246db317770 'obs' 'int'
|   |   |-BreakStmt 0x246db3122d8 <line:338:9>
|   |   |-IfStmt 0x246db3123f0 <line:340:9, line:341:22>
|   |   | |-OpaqueValueExpr 0x246db3123d8 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x246db3123c8 <col:13, col:22>
|   |   |   `-ImplicitCastExpr 0x246db3123b0 <col:20, col:22> 'long' <IntegralCast>
|   |   |     `-ParenExpr 0x246db312390 <col:20, col:22> 'int'
|   |   |       `-IntegerLiteral 0x246db312368 <col:21> 'int' 0
|   |   |-BreakStmt 0x246db3124e8 <line:345:9>
|   |   |-IfStmt 0x246db312600 <line:348:9, line:349:22>
|   |   | |-OpaqueValueExpr 0x246db3125e8 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x246db3125d8 <col:13, col:22>
|   |   |   `-ImplicitCastExpr 0x246db3125c0 <col:20, col:22> 'long' <IntegralCast>
|   |   |     `-ParenExpr 0x246db3125a0 <col:20, col:22> 'int'
|   |   |       `-IntegerLiteral 0x246db312578 <col:21> 'int' 0
|   |   |-IfStmt 0x246db3208a0 <line:350:9, line:353:9>
|   |   | |-BinaryOperator 0x246db3207c0 <line:350:13, col:30> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x246db3207a8 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x246db320750 <col:13, col:18> 'int' lvalue ->obuf_len 0x246db305e48
|   |   | | |   `-ImplicitCastExpr 0x246db312638 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x246db312618 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | | `-IntegerLiteral 0x246db320780 <col:30> 'int' 0
|   |   | `-CompoundStmt 0x246db320888 <col:33, line:353:9>
|   |   |   `-BreakStmt 0x246db320880 <line:352:13>
|   |   |-ForStmt 0x246db3210b0 <line:355:9, line:370:9>
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | `-CompoundStmt 0x246db321098 <line:355:18, line:370:9>
|   |   |   `-IfStmt 0x246db321070 <line:357:13, line:369:13> has_else
|   |   |     |-BinaryOperator 0x246db320980 <line:357:17, col:33> 'int' '>'
|   |   |     | |-ImplicitCastExpr 0x246db320968 <col:17, col:22> 'int' <LValueToRValue>
|   |   |     | | `-MemberExpr 0x246db320910 <col:17, col:22> 'int' lvalue ->obuf_len 0x246db305e48
|   |   |     | |   `-ImplicitCastExpr 0x246db3208f8 <col:17> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     | |     `-DeclRefExpr 0x246db3208d8 <col:17> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     | `-IntegerLiteral 0x246db320940 <col:33> 'int' 0
|   |   |     |-CompoundStmt 0x246db320eb8 <col:36, line:365:13>
|   |   |     | |-IfStmt 0x246db320d00 <line:361:17, line:362:36>
|   |   |     | | |-BinaryOperator 0x246db320c38 <line:361:21, col:26> 'int' '<='
|   |   |     | | | |-ImplicitCastExpr 0x246db320c20 <col:21> 'int' <LValueToRValue>
|   |   |     | | | | `-DeclRefExpr 0x246db320bd8 <col:21> 'int' lvalue Var 0x246db317518 'r' 'int'
|   |   |     | | | `-IntegerLiteral 0x246db320bf8 <col:26> 'int' 0
|   |   |     | | `-ReturnStmt 0x246db320cf0 <line:362:21, col:36>
|   |   |     | |   `-ParenExpr 0x246db320cd0 <col:28, col:36> 'long'
|   |   |     | |     `-CStyleCastExpr 0x246db320ca8 <col:29, col:35> 'long' <IntegralCast>
|   |   |     | |       `-ImplicitCastExpr 0x246db320c90 <col:35> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     | |         `-DeclRefExpr 0x246db320c58 <col:35> 'int' lvalue Var 0x246db317518 'r' 'int'
|   |   |     | |-CompoundAssignOperator 0x246db320db8 <line:363:17, col:34> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     | | |-MemberExpr 0x246db320d50 <col:17, col:22> 'int' lvalue ->obuf_off 0x246db305eb8
|   |   |     | | | `-ImplicitCastExpr 0x246db320d38 <col:17> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     | | |   `-DeclRefExpr 0x246db320d18 <col:17> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     | | `-ImplicitCastExpr 0x246db320da0 <col:34> 'int' <LValueToRValue>
|   |   |     | |   `-DeclRefExpr 0x246db320d80 <col:34> 'int' lvalue Var 0x246db317518 'r' 'int'
|   |   |     | `-CompoundAssignOperator 0x246db320e88 <line:364:17, col:34> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |   |-MemberExpr 0x246db320e20 <col:17, col:22> 'int' lvalue ->obuf_len 0x246db305e48
|   |   |     |   | `-ImplicitCastExpr 0x246db320e08 <col:17> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     |   |   `-DeclRefExpr 0x246db320de8 <col:17> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     |   `-ImplicitCastExpr 0x246db320e70 <col:34> 'int' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x246db320e50 <col:34> 'int' lvalue Var 0x246db317518 'r' 'int'
|   |   |     `-CompoundStmt 0x246db321048 <line:365:20, line:369:13>
|   |   |       |-BinaryOperator 0x246db320f70 <line:366:17, col:33> 'int' '='
|   |   |       | |-MemberExpr 0x246db320f18 <col:17, col:22> 'int' lvalue ->obuf_len 0x246db305e48
|   |   |       | | `-ImplicitCastExpr 0x246db320f00 <col:17> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       | |   `-DeclRefExpr 0x246db320ee0 <col:17> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |       | `-IntegerLiteral 0x246db320f48 <col:33> 'int' 0
|   |   |       |-BinaryOperator 0x246db321020 <line:367:17, col:33> 'int' '='
|   |   |       | |-MemberExpr 0x246db320fc8 <col:17, col:22> 'int' lvalue ->obuf_off 0x246db305eb8
|   |   |       | | `-ImplicitCastExpr 0x246db320fb0 <col:17> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       | |   `-DeclRefExpr 0x246db320f90 <col:17> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db317278 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |       | `-IntegerLiteral 0x246db320ff8 <col:33> 'int' 0
|   |   |       `-BreakStmt 0x246db321040 <line:368:17>
|   |   |-BreakStmt 0x246db321188 <line:372:9>
|   |   |-IfStmt 0x246db321518 <line:375:9, line:377:19>
|   |   | |-OpaqueValueExpr 0x246db321500 <<invalid sloc>> '_Bool'
|   |   | `-BinaryOperator 0x246db3214e0 <col:13, col:19> 'long' '='
|   |   |   |-DeclRefExpr 0x246db321480 <col:13> 'long' lvalue Var 0x246db317310 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x246db3214c8 <col:19> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x246db3214a0 <col:19> 'int' 0
|   |   |-BreakStmt 0x246db321530 <line:378:9>
|   |   |-DefaultStmt 0x246db321660 <line:379:5, line:381:22>
|   |   | `-IfStmt 0x246db321648 <line:380:9, line:381:22>
|   |   |   |-OpaqueValueExpr 0x246db321630 <<invalid sloc>> '_Bool'
|   |   |   `-ReturnStmt 0x246db321620 <col:13, col:22>
|   |   |     `-ImplicitCastExpr 0x246db321608 <col:20, col:22> 'long' <IntegralCast>
|   |   |       `-ParenExpr 0x246db3215e8 <col:20, col:22> 'int'
|   |   |         `-IntegerLiteral 0x246db3215c0 <col:21> 'int' 0
|   |   `-BreakStmt 0x246db321720 <line:383:9>
|   |-ReturnStmt 0x246db31d8d8 <line:385:5, col:16>
|   | `-ImplicitCastExpr 0x246db31d8c0 <col:12, col:16> 'long' <LValueToRValue>
|   |   `-ParenExpr 0x246db31d8a0 <col:12, col:16> 'long' lvalue
|   |     `-DeclRefExpr 0x246db31d880 <col:13> 'long' lvalue Var 0x246db317310 'ret' 'long'
|   |-LabelStmt 0x246db31da00 <line:386:2, col:14> 'malloc_error'
|   | `-NullStmt 0x246db31d9f8 <col:14>
|   `-ReturnStmt 0x246db31da78 <line:388:5, col:14>
|     `-ImplicitCastExpr 0x246db31da60 <col:12, col:14> 'long' <IntegralCast>
|       `-ParenExpr 0x246db31da40 <col:12, col:14> 'int'
|         `-IntegerLiteral 0x246db31da18 <col:13> 'int' 0
|-FunctionDecl 0x246db31dca0 <line:391:1, line:403:1> line:391:13 invalid buffer_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x246db31daf8 <col:34, col:39> col:39 invalid b 'int *'
| |-ParmVarDecl 0x246db31db78 <col:42, col:46> col:46 used cmd 'int'
| |-ParmVarDecl 0x246db31dbf8 <col:51, col:64> col:64 invalid fp 'int *'
| `-CompoundStmt 0x246db31e200 <line:392:1, line:403:1>
|   |-DeclStmt 0x246db31de30 <line:393:5, col:17>
|   | `-VarDecl 0x246db31dd88 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x246db31de18 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x246db31ddf0 <col:16> 'int' 1
|   |-IfStmt 0x246db31df58 <line:395:5, line:396:18>
|   | |-OpaqueValueExpr 0x246db31df40 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x246db31df30 <col:9, col:18>
|   |   `-ImplicitCastExpr 0x246db31df18 <col:16, col:18> 'long' <IntegralCast>
|   |     `-ParenExpr 0x246db31def8 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x246db31ded0 <col:17> 'int' 0
|   |-SwitchStmt 0x246db31dfc0 <line:397:5, line:401:5>
|   | |-ImplicitCastExpr 0x246db31dfa8 <line:397:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x246db31df70 <col:13> 'int' lvalue ParmVar 0x246db31db78 'cmd' 'int'
|   | `-CompoundStmt 0x246db31e178 <col:18, line:401:5>
|   |   |-DefaultStmt 0x246db31e150 <line:398:5, col:12>
|   |   | `-NullStmt 0x246db31e148 <col:12>
|   |   `-BreakStmt 0x246db31e170 <line:400:9>
|   `-ReturnStmt 0x246db31e1f0 <line:402:5, col:16>
|     `-ImplicitCastExpr 0x246db31e1d8 <col:12, col:16> 'long' <LValueToRValue>
|       `-ParenExpr 0x246db31e1b8 <col:12, col:16> 'long' lvalue
|         `-DeclRefExpr 0x246db31e198 <col:13> 'long' lvalue Var 0x246db31dd88 'ret' 'long'
|-FunctionDecl 0x246db31e3f0 <line:405:1, line:450:1> line:405:12 invalid buffer_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x246db31e248 <col:24, col:29> col:29 invalid b 'int *'
| |-ParmVarDecl 0x246db31e2c8 <col:32, col:38> col:38 used buf 'char *'
| |-ParmVarDecl 0x246db31e348 <col:43, col:47> col:47 used size 'int'
| `-CompoundStmt 0x246db319e10 <line:406:1, line:450:1>
|   |-DeclStmt 0x246db31e538 <line:407:5, col:26>
|   | `-VarDecl 0x246db31e4d0 <col:5, col:23> col:23 used ctx 'BIO_F_BUFFER_CTX *'
|   |-DeclStmt 0x246db31b700 <line:408:5, col:25>
|   | |-VarDecl 0x246db31e568 <col:5, col:15> col:9 used num 'int' cinit
|   | | `-IntegerLiteral 0x246db31e5d0 <col:15> 'int' 0
|   | |-VarDecl 0x246db31e610 <col:5, col:18> col:18 used i 'int'
|   | `-VarDecl 0x246db31e690 <col:5, col:21> col:21 used flag 'int'
|   |-DeclStmt 0x246db31b798 <line:409:5, col:12>
|   | `-VarDecl 0x246db31b730 <col:5, col:11> col:11 used p 'char *'
|   |-UnaryOperator 0x246db31b820 <line:412:5, col:9> 'int' postfix '--'
|   | `-DeclRefExpr 0x246db31b7e8 <col:5> 'int' lvalue ParmVar 0x246db31e348 'size' 'int'
|   `-ForStmt 0x246db319dd8 <line:415:5, line:449:5>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     `-CompoundStmt 0x246db319dc0 <line:415:14, line:449:5>
|       `-IfStmt 0x246db319d98 <line:416:9, line:448:9> has_else
|         |-BinaryOperator 0x246db31b900 <line:416:13, col:29> 'int' '>'
|         | |-ImplicitCastExpr 0x246db31b8e8 <col:13, col:18> 'int' <LValueToRValue>
|         | | `-MemberExpr 0x246db31b890 <col:13, col:18> 'int' lvalue ->ibuf_len 0x246db305cf8
|         | |   `-ImplicitCastExpr 0x246db31b878 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|         | |     `-DeclRefExpr 0x246db31b858 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db31e4d0 'ctx' 'BIO_F_BUFFER_CTX *'
|         | `-IntegerLiteral 0x246db31b8c0 <col:29> 'int' 0
|         |-CompoundStmt 0x246db31c638 <col:32, line:435:9>
|         | |-BinaryOperator 0x246db31bab0 <line:417:13, col:43> 'char *' '='
|         | | |-DeclRefExpr 0x246db31b920 <col:13> 'char *' lvalue Var 0x246db31b730 'p' 'char *'
|         | | `-UnaryOperator 0x246db31ba98 <col:17, col:43> 'char *' prefix '&' cannot overflow
|         | |   `-ParenExpr 0x246db31ba78 <col:18, col:43> 'char' lvalue
|         | |     `-ArraySubscriptExpr 0x246db31ba58 <col:19, col:42> 'char' lvalue
|         | |       |-ImplicitCastExpr 0x246db31ba28 <col:19, col:24> 'char *' <LValueToRValue>
|         | |       | `-MemberExpr 0x246db31b990 <col:19, col:24> 'char *' lvalue ->ibuf 0x246db305c88
|         | |       |   `-ImplicitCastExpr 0x246db31b978 <col:19> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|         | |       |     `-DeclRefExpr 0x246db31b958 <col:19> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db31e4d0 'ctx' 'BIO_F_BUFFER_CTX *'
|         | |       `-ImplicitCastExpr 0x246db31ba40 <col:29, col:34> 'int' <LValueToRValue>
|         | |         `-MemberExpr 0x246db31b9f8 <col:29, col:34> 'int' lvalue ->ibuf_off 0x246db305d68
|         | |           `-ImplicitCastExpr 0x246db31b9e0 <col:29> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|         | |             `-DeclRefExpr 0x246db31b9c0 <col:29> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db31e4d0 'ctx' 'BIO_F_BUFFER_CTX *'
|         | |-BinaryOperator 0x246db31bb30 <line:418:13, col:20> 'int' '='
|         | | |-DeclRefExpr 0x246db31bad0 <col:13> 'int' lvalue Var 0x246db31e690 'flag' 'int'
|         | | `-IntegerLiteral 0x246db31bb08 <col:20> 'int' 0
|         | |-ForStmt 0x246db31c120 <line:419:13, line:426:13>
|         | | |-BinaryOperator 0x246db31bbb0 <line:419:18, col:22> 'int' '='
|         | | | |-DeclRefExpr 0x246db31bb50 <col:18> 'int' lvalue Var 0x246db31e610 'i' 'int'
|         | | | `-IntegerLiteral 0x246db31bb88 <col:22> 'int' 0
|         | | |-<<<NULL>>>
|         | | |-BinaryOperator 0x246db31bd78 <col:25, col:57> 'int' '&&'
|         | | | |-ParenExpr 0x246db31bca8 <col:25, col:43> 'int'
|         | | | | `-BinaryOperator 0x246db31bc88 <col:26, col:35> 'int' '<'
|         | | | |   |-ImplicitCastExpr 0x246db31bc58 <col:26> 'int' <LValueToRValue>
|         | | | |   | `-DeclRefExpr 0x246db31bbd0 <col:26> 'int' lvalue Var 0x246db31e610 'i' 'int'
|         | | | |   `-ImplicitCastExpr 0x246db31bc70 <col:30, col:35> 'int' <LValueToRValue>
|         | | | |     `-MemberExpr 0x246db31bc28 <col:30, col:35> 'int' lvalue ->ibuf_len 0x246db305cf8
|         | | | |       `-ImplicitCastExpr 0x246db31bc10 <col:30> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|         | | | |         `-DeclRefExpr 0x246db31bbf0 <col:30> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db31e4d0 'ctx' 'BIO_F_BUFFER_CTX *'
|         | | | `-ParenExpr 0x246db31bd58 <col:48, col:57> 'int'
|         | | |   `-BinaryOperator 0x246db31bd38 <col:49, col:53> 'int' '<'
|         | | |     |-ImplicitCastExpr 0x246db31bd08 <col:49> 'int' <LValueToRValue>
|         | | |     | `-DeclRefExpr 0x246db31bcc8 <col:49> 'int' lvalue Var 0x246db31e610 'i' 'int'
|         | | |     `-ImplicitCastExpr 0x246db31bd20 <col:53> 'int' <LValueToRValue>
|         | | |       `-DeclRefExpr 0x246db31bce8 <col:53> 'int' lvalue ParmVar 0x246db31e348 'size' 'int'
|         | | |-UnaryOperator 0x246db31bdb8 <col:60, col:61> 'int' postfix '++'
|         | | | `-DeclRefExpr 0x246db31bd98 <col:60> 'int' lvalue Var 0x246db31e610 'i' 'int'
|         | | `-CompoundStmt 0x246db31c100 <col:65, line:426:13>
|         | |   |-BinaryOperator 0x246db31bf00 <line:420:17, col:31> 'char' '='
|         | |   | |-UnaryOperator 0x246db31be40 <col:17, col:24> 'char' lvalue prefix '*' cannot overflow
|         | |   | | `-ParenExpr 0x246db31be20 <col:18, col:24> 'char *'
|         | |   | |   `-UnaryOperator 0x246db31be08 <col:19, col:22> 'char *' postfix '++'
|         | |   | |     `-DeclRefExpr 0x246db31bdd0 <col:19> 'char *' lvalue ParmVar 0x246db31e2c8 'buf' 'char *'
|         | |   | `-ImplicitCastExpr 0x246db31bee8 <col:28, col:31> 'char' <LValueToRValue>
|         | |   |   `-ArraySubscriptExpr 0x246db31bec8 <col:28, col:31> 'char' lvalue
|         | |   |     |-ImplicitCastExpr 0x246db31be98 <col:28> 'char *' <LValueToRValue>
|         | |   |     | `-DeclRefExpr 0x246db31be58 <col:28> 'char *' lvalue Var 0x246db31b730 'p' 'char *'
|         | |   |     `-ImplicitCastExpr 0x246db31beb0 <col:30> 'int' <LValueToRValue>
|         | |   |       `-DeclRefExpr 0x246db31be78 <col:30> 'int' lvalue Var 0x246db31e610 'i' 'int'
|         | |   `-IfStmt 0x246db31c0e8 <line:421:17, line:425:17>
|         | |     |-BinaryOperator 0x246db31bff8 <line:421:21, col:29> 'int' '=='
|         | |     | |-ImplicitCastExpr 0x246db31bfe0 <col:21, col:24> 'int' <IntegralCast>
|         | |     | | `-ImplicitCastExpr 0x246db31bfc8 <col:21, col:24> 'char' <LValueToRValue>
|         | |     | |   `-ArraySubscriptExpr 0x246db31bf90 <col:21, col:24> 'char' lvalue
|         | |     | |     |-ImplicitCastExpr 0x246db31bf60 <col:21> 'char *' <LValueToRValue>
|         | |     | |     | `-DeclRefExpr 0x246db31bf20 <col:21> 'char *' lvalue Var 0x246db31b730 'p' 'char *'
|         | |     | |     `-ImplicitCastExpr 0x246db31bf78 <col:23> 'int' <LValueToRValue>
|         | |     | |       `-DeclRefExpr 0x246db31bf40 <col:23> 'int' lvalue Var 0x246db31e610 'i' 'int'
|         | |     | `-CharacterLiteral 0x246db31bfb0 <col:29> 'int' 10
|         | |     `-CompoundStmt 0x246db31c0c0 <col:35, line:425:17>
|         | |       |-BinaryOperator 0x246db31c060 <line:422:21, col:28> 'int' '='
|         | |       | |-DeclRefExpr 0x246db31c018 <col:21> 'int' lvalue Var 0x246db31e690 'flag' 'int'
|         | |       | `-IntegerLiteral 0x246db31c038 <col:28> 'int' 1
|         | |       |-UnaryOperator 0x246db31c0a0 <line:423:21, col:22> 'int' postfix '++'
|         | |       | `-DeclRefExpr 0x246db31c080 <col:21> 'int' lvalue Var 0x246db31e610 'i' 'int'
|         | |       `-BreakStmt 0x246db31c0b8 <line:424:21>
|         | |-CompoundAssignOperator 0x246db31c1c8 <line:427:13, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|         | | |-DeclRefExpr 0x246db31c158 <col:13> 'int' lvalue Var 0x246db31e568 'num' 'int'
|         | | `-ImplicitCastExpr 0x246db31c1b0 <col:20> 'int' <LValueToRValue>
|         | |   `-DeclRefExpr 0x246db31c190 <col:20> 'int' lvalue Var 0x246db31e610 'i' 'int'
|         | |-CompoundAssignOperator 0x246db31c250 <line:428:13, col:21> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|         | | |-DeclRefExpr 0x246db31c1f8 <col:13> 'int' lvalue ParmVar 0x246db31e348 'size' 'int'
|         | | `-ImplicitCastExpr 0x246db31c238 <col:21> 'int' <LValueToRValue>
|         | |   `-DeclRefExpr 0x246db31c218 <col:21> 'int' lvalue Var 0x246db31e610 'i' 'int'
|         | |-CompoundAssignOperator 0x246db31c320 <line:429:13, col:30> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|         | | |-MemberExpr 0x246db31c2b8 <col:13, col:18> 'int' lvalue ->ibuf_len 0x246db305cf8
|         | | | `-ImplicitCastExpr 0x246db31c2a0 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|         | | |   `-DeclRefExpr 0x246db31c280 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db31e4d0 'ctx' 'BIO_F_BUFFER_CTX *'
|         | | `-ImplicitCastExpr 0x246db31c308 <col:30> 'int' <LValueToRValue>
|         | |   `-DeclRefExpr 0x246db31c2e8 <col:30> 'int' lvalue Var 0x246db31e610 'i' 'int'
|         | |-CompoundAssignOperator 0x246db31c3f0 <line:430:13, col:30> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|         | | |-MemberExpr 0x246db31c388 <col:13, col:18> 'int' lvalue ->ibuf_off 0x246db305d68
|         | | | `-ImplicitCastExpr 0x246db31c370 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|         | | |   `-DeclRefExpr 0x246db31c350 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db31e4d0 'ctx' 'BIO_F_BUFFER_CTX *'
|         | | `-ImplicitCastExpr 0x246db31c3d8 <col:30> 'int' <LValueToRValue>
|         | |   `-DeclRefExpr 0x246db31c3b8 <col:30> 'int' lvalue Var 0x246db31e610 'i' 'int'
|         | `-IfStmt 0x246db31c620 <line:431:13, line:434:13>
|         |   |-BinaryOperator 0x246db31c4d8 <line:431:17, col:33> 'int' '||'
|         |   | |-ImplicitCastExpr 0x246db31c4c0 <col:17> 'int' <LValueToRValue>
|         |   | | `-DeclRefExpr 0x246db31c420 <col:17> 'int' lvalue Var 0x246db31e690 'flag' 'int'
|         |   | `-BinaryOperator 0x246db31c4a0 <col:25, col:33> 'int' '=='
|         |   |   |-ImplicitCastExpr 0x246db31c488 <col:25> 'int' <LValueToRValue>
|         |   |   | `-DeclRefExpr 0x246db31c440 <col:25> 'int' lvalue ParmVar 0x246db31e348 'size' 'int'
|         |   |   `-IntegerLiteral 0x246db31c460 <col:33> 'int' 0
|         |   `-CompoundStmt 0x246db31c600 <col:36, line:434:13>
|         |     |-BinaryOperator 0x246db31c578 <line:432:17, col:24> 'char' '='
|         |     | |-UnaryOperator 0x246db31c530 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
|         |     | | `-ImplicitCastExpr 0x246db31c518 <col:18> 'char *' <LValueToRValue>
|         |     | |   `-DeclRefExpr 0x246db31c4f8 <col:18> 'char *' lvalue ParmVar 0x246db31e2c8 'buf' 'char *'
|         |     | `-ImplicitCastExpr 0x246db31c560 <col:24> 'char' <IntegralCast>
|         |     |   `-CharacterLiteral 0x246db31c548 <col:24> 'int' 0
|         |     `-ReturnStmt 0x246db31c5f0 <line:433:17, col:28>
|         |       `-ImplicitCastExpr 0x246db31c5d8 <col:24, col:28> 'int' <LValueToRValue>
|         |         `-ParenExpr 0x246db31c5b8 <col:24, col:28> 'int' lvalue
|         |           `-DeclRefExpr 0x246db31c598 <col:25> 'int' lvalue Var 0x246db31e568 'num' 'int'
|         `-CompoundStmt 0x246db319d70 <line:435:16, line:448:9>
|           |-IfStmt 0x246db319be8 <line:438:13, line:445:13>
|           | |-BinaryOperator 0x246db3197d8 <line:438:17, col:22> 'int' '<='
|           | | |-ImplicitCastExpr 0x246db3197c0 <col:17> 'int' <LValueToRValue>
|           | | | `-DeclRefExpr 0x246db319778 <col:17> 'int' lvalue Var 0x246db31e610 'i' 'int'
|           | | `-IntegerLiteral 0x246db319798 <col:22> 'int' 0
|           | `-CompoundStmt 0x246db319bc0 <col:25, line:445:13>
|           |   |-BinaryOperator 0x246db319898 <line:440:17, col:24> 'char' '='
|           |   | |-UnaryOperator 0x246db319850 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
|           |   | | `-ImplicitCastExpr 0x246db319838 <col:18> 'char *' <LValueToRValue>
|           |   | |   `-DeclRefExpr 0x246db319818 <col:18> 'char *' lvalue ParmVar 0x246db31e2c8 'buf' 'char *'
|           |   | `-ImplicitCastExpr 0x246db319880 <col:24> 'char' <IntegralCast>
|           |   |   `-CharacterLiteral 0x246db319868 <col:24> 'int' 0
|           |   |-IfStmt 0x246db319aa8 <line:441:17, line:442:48>
|           |   | |-BinaryOperator 0x246db319918 <line:441:21, col:25> 'int' '<'
|           |   | | |-ImplicitCastExpr 0x246db319900 <col:21> 'int' <LValueToRValue>
|           |   | | | `-DeclRefExpr 0x246db3198b8 <col:21> 'int' lvalue Var 0x246db31e610 'i' 'int'
|           |   | | `-IntegerLiteral 0x246db3198d8 <col:25> 'int' 0
|           |   | `-ReturnStmt 0x246db319a98 <line:442:21, col:48>
|           |   |   `-ParenExpr 0x246db319a78 <col:28, col:48> 'int'
|           |   |     `-ConditionalOperator 0x246db319a48 <col:29, col:47> 'int'
|           |   |       |-ParenExpr 0x246db3199b8 <col:29, col:37> 'int'
|           |   |       | `-BinaryOperator 0x246db319998 <col:30, col:36> 'int' '>'
|           |   |       |   |-ImplicitCastExpr 0x246db319980 <col:30> 'int' <LValueToRValue>
|           |   |       |   | `-DeclRefExpr 0x246db319938 <col:30> 'int' lvalue Var 0x246db31e568 'num' 'int'
|           |   |       |   `-IntegerLiteral 0x246db319958 <col:36> 'int' 0
|           |   |       |-ImplicitCastExpr 0x246db319a18 <col:41> 'int' <LValueToRValue>
|           |   |       | `-DeclRefExpr 0x246db3199d8 <col:41> 'int' lvalue Var 0x246db31e568 'num' 'int'
|           |   |       `-ImplicitCastExpr 0x246db319a30 <col:47> 'int' <LValueToRValue>
|           |   |         `-DeclRefExpr 0x246db3199f8 <col:47> 'int' lvalue Var 0x246db31e610 'i' 'int'
|           |   `-IfStmt 0x246db319ba8 <line:443:17, line:444:32>
|           |     |-BinaryOperator 0x246db319b20 <line:443:21, col:26> 'int' '=='
|           |     | |-ImplicitCastExpr 0x246db319b08 <col:21> 'int' <LValueToRValue>
|           |     | | `-DeclRefExpr 0x246db319ac0 <col:21> 'int' lvalue Var 0x246db31e610 'i' 'int'
|           |     | `-IntegerLiteral 0x246db319ae0 <col:26> 'int' 0
|           |     `-ReturnStmt 0x246db319b98 <line:444:21, col:32>
|           |       `-ImplicitCastExpr 0x246db319b80 <col:28, col:32> 'int' <LValueToRValue>
|           |         `-ParenExpr 0x246db319b60 <col:28, col:32> 'int' lvalue
|           |           `-DeclRefExpr 0x246db319b40 <col:29> 'int' lvalue Var 0x246db31e568 'num' 'int'
|           |-BinaryOperator 0x246db319ca0 <line:446:13, col:29> 'int' '='
|           | |-MemberExpr 0x246db319c38 <col:13, col:18> 'int' lvalue ->ibuf_len 0x246db305cf8
|           | | `-ImplicitCastExpr 0x246db319c20 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|           | |   `-DeclRefExpr 0x246db319c00 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db31e4d0 'ctx' 'BIO_F_BUFFER_CTX *'
|           | `-ImplicitCastExpr 0x246db319c88 <col:29> 'int' <LValueToRValue>
|           |   `-DeclRefExpr 0x246db319c68 <col:29> 'int' lvalue Var 0x246db31e610 'i' 'int'
|           `-BinaryOperator 0x246db319d50 <line:447:13, col:29> 'int' '='
|             |-MemberExpr 0x246db319cf8 <col:13, col:18> 'int' lvalue ->ibuf_off 0x246db305d68
|             | `-ImplicitCastExpr 0x246db319ce0 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|             |   `-DeclRefExpr 0x246db319cc0 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x246db31e4d0 'ctx' 'BIO_F_BUFFER_CTX *'
|             `-IntegerLiteral 0x246db319d28 <col:29> 'int' 0
|-FunctionDecl 0x246db319f80 <line:452:1, line:455:1> line:452:12 invalid buffer_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x246db319e60 <col:24, col:29> col:29 invalid b 'int *'
| |-ParmVarDecl 0x246db319ee0 <col:32, col:44> col:44 used str 'const char *'
| `-CompoundStmt 0x246db31a2b0 <line:453:1, line:455:1>
`-FunctionDecl 0x246db31a0b0 <line:454:34> col:34 implicit used strlen 'unsigned long long (const char *)' extern
  `-ParmVarDecl 0x246db31a150 <<invalid sloc>> <invalid sloc> 'const char *'
