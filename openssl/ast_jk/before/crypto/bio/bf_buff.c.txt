TranslationUnitDecl 0x18e9b8b2ae8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x18e9b8b3380 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x18e9b8b3080 '__int128'
|-TypedefDecl 0x18e9b8b33f0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x18e9b8b30a0 'unsigned __int128'
|-TypedefDecl 0x18e9b8b3728 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x18e9b8b34e0 'struct __NSConstantString_tag'
|   `-Record 0x18e9b8b3448 '__NSConstantString_tag'
|-TypedefDecl 0x18e9b8b3798 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x18e9b8b2cc0 'unsigned long long'
|-TypedefDecl 0x18e9b8b3830 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x18e9b8b37f0 'char *'
|   `-BuiltinType 0x18e9b8b2b80 'char'
|-TypedefDecl 0x18e9b8b38a0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x18e9b8b37f0 'char *'
|   `-BuiltinType 0x18e9b8b2b80 'char'
|-TypedefDecl 0x18e9b8b3960 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x18e9b8b2cc0 'unsigned long long'
|-TypedefDecl 0x18e9b8b39d0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x18e9b8b37f0 'char *'
|   `-BuiltinType 0x18e9b8b2b80 'char'
|-FunctionDecl 0x18e9d220430 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x18e9d2204d0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x18e9d220540 <col:21> Implicit
|-FunctionDecl 0x18e9d220598 prev 0x18e9d220430 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x18e9d2202c0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x18e9d220688 <col:21> Inherited Implicit
|-TypedefDecl 0x18e9d2206c8 prev 0x18e9b8b3798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x18e9b8b2cc0 'unsigned long long'
|-TypedefDecl 0x18e9d220770 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x18e9d220740 'size_t' sugar
|   |-Typedef 0x18e9d2206c8 'size_t'
|   `-BuiltinType 0x18e9b8b2cc0 'unsigned long long'
|-TypedefDecl 0x18e9d2207e0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x18e9b8b2c20 'long long'
|-TypedefDecl 0x18e9d220850 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x18e9b8b2c20 'long long'
|-TypedefDecl 0x18e9d2208c0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x18e9b8b2c60 'unsigned short'
|-TypedefDecl 0x18e9d220930 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x18e9b8b2c60 'unsigned short'
|-TypedefDecl 0x18e9d2209a0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x18e9b8b2c60 'unsigned short'
|-TypedefDecl 0x18e9d220a10 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x18e9b8b2be0 'int'
|-TypedefDecl 0x18e9d220a80 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x18e9b8b2c00 'long'
|-TypedefDecl 0x18e9d220af0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x18e9b8b2c20 'long long'
|-TypedefDecl 0x18e9d220b80 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x18e9d220b50 '__time64_t' sugar
|   |-Typedef 0x18e9d220af0 '__time64_t'
|   `-BuiltinType 0x18e9b8b2c20 'long long'
|-FunctionDecl 0x18e9d220cf8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x18e9d220f18 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x18e9d2589c0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x18e9d221058 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2210d0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x18e9d221148 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2211c8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x18e9d258760 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x18e9d258aa0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x18e9d258b60 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x18e9d258cd0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x18e9d258c80 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x18e9d258c20 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x18e9d258b40 'struct threadlocaleinfostruct'
|       `-Record 0x18e9d262800 'threadlocaleinfostruct'
|-TypedefDecl 0x18e9d258de0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x18e9d258d90 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x18e9d258d30 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x18e9d258c00 'struct threadmbcinfostruct'
|       `-Record 0x18e9d258b60 'threadmbcinfostruct'
|-RecordDecl 0x18e9d258e38 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x18e9d258ef0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x18e9d258fb0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x18e9d259040 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x18e9d2590d0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x18e9d259188 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x18e9d259130 'struct localeinfo_struct' sugar
|   `-RecordType 0x18e9d258f90 'struct localeinfo_struct'
|     `-Record 0x18e9d258ef0 'localeinfo_struct'
|-TypedefDecl 0x18e9d259260 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x18e9d259210 'struct localeinfo_struct *'
|   `-ElaboratedType 0x18e9d259130 'struct localeinfo_struct' sugar
|     `-RecordType 0x18e9d258f90 'struct localeinfo_struct'
|       `-Record 0x18e9d258ef0 'localeinfo_struct'
|-RecordDecl 0x18e9d2592d8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x18e9d259390 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x18e9d259408 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x18e9d2594c8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x18e9d259560 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x18e9d2595d0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x18e9d259688 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x18e9d259630 'struct localerefcount' sugar
|   `-RecordType 0x18e9d259370 'struct localerefcount'
|     `-Record 0x18e9d2592d8 'localerefcount'
|-RecordDecl 0x18e9d262800 prev 0x18e9d258aa0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x18e9d262880 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x18e9d2628f8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x18e9d262968 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x18e9d2629d8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x18e9d262a48 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x18e9d262c08 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x18e9d262c78 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x18e9d262ce8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x18e9d262d58 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x18e9d262dc8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x18e9d262e38 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x18e9d262e90 parent 0x18e9b8b2ae8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x18e9d263020 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x18e9d263090 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x18e9d263100 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x18e9d263170 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x18e9d263210 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x18e9d263280 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x18e9d263390 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x18e9d2634c8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x18e9d263578 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x18e9d263520 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x18e9d258b40 'struct threadlocaleinfostruct'
|     `-Record 0x18e9d262800 'threadlocaleinfostruct'
|-RecordDecl 0x18e9d263610 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x18e9d2636d0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x18e9d263748 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x18e9d25e7c0 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x18e9d25e830 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x18e9d25e8a0 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x18e9d25e910 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x18e9d25e980 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x18e9d25e9f0 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x18e9d25ea60 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x18e9d25eb10 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x18e9d25eac0 'struct _iobuf' sugar
|   `-RecordType 0x18e9d2636b0 'struct _iobuf'
|     `-Record 0x18e9d263610 '_iobuf'
|-FunctionDecl 0x18e9d25ed48 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x18e9d25ee18 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x18e9b8b2c20 'long long'
|-FunctionDecl 0x18e9d25eff8 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x18e9d25ee80 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x18e9d25f2f0 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x18e9d25f0d0 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x18e9d25f148 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x18e9d25f6a0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x18e9d25f3d0 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x18e9d25f450 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x18e9d25f4d0 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x18e9d2699e0 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x18e9d269870 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x18e9d269c10 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x18e9d269ad0 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x18e9d269dc0 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x18e9d269ce0 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x18e9d269fb0 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x18e9d26a2a8 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x18e9d26a080 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x18e9d26a100 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x18e9d26a460 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x18e9d26a380 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x18e9d26a610 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x18e9d26a530 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x18e9d26a7c0 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x18e9d26a6e0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x18e9d26b998 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x18e9d26b8b8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x18e9d26bb28 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x18e9d26be90 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x18e9d26bbf0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x18e9d26bce8 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x18e9d26c248 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x18e9d26bf70 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x18e9d26bff0 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x18e9d26c068 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x18e9d26c408 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x18e9d26c328 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x18e9d26c6d0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x18e9d26c4e0 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x18e9d26c560 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x18e9d26d8b0 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x18e9d26dca8 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x18e9d26dd48 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x18e9d26ddb0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x18e9d26de28 prev 0x18e9d26dca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x18e9d26da80 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x18e9d26db00 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x18e9d26ded8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d26e350 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x18e9d26e080 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x18e9d26e100 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x18e9d26e180 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x18e9d26e670 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x18e9d26e710 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x18e9d26e778 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x18e9d26e7f0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x18e9d266840 prev 0x18e9d26e670 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x18e9d26e430 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x18e9d26e4b0 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x18e9d266938 <col:40> Inherited printf 2 3
|-FunctionDecl 0x18e9d266b00 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x18e9d266980 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x18e9d266a00 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x18e9d266d58 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x18e9d266be0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x18e9d266c58 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x18e9d266f88 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x18e9d266e38 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x18e9d267280 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x18e9d267060 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x18e9d2670d8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x18e9d267718 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x18e9d2677b8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x18e9d2708e0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x18e9d270948 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x18e9d2709b0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x18e9d270a38 prev 0x18e9d267718 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x18e9d267360 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x18e9d2673d8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d267450 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e9d2674c8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x18e9d270f40 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x18e9d270b28 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x18e9d270ba0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d270c18 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d270c90 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e9d270d08 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x18e9d271400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x18e9d271130 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x18e9d2711b0 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x18e9d271228 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x18e9d2714b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2729a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x18e9d271600 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x18e9d271680 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x18e9d271700 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x18e9d271778 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x18e9d272d50 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x18e9d272df0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x18e9d272e58 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x18e9d272ed0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x18e9d272f38 prev 0x18e9d272d50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x18e9d272b88 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x18e9d272c08 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x18e9d273118 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x18e9d272fe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d273558 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d273258 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2732d8 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x18e9d273370 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x18e9d273610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d26e8c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x18e9d273750 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x18e9d2737d0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x18e9d26ebb0 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d26e998 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x18e9d26ea18 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x18e9d26ea90 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d26ef10 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x18e9d26ec90 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x18e9d26ed68 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x18e9d26f2c8 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x18e9d26efe8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x18e9d26f068 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x18e9d26f0e8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x18e9d26f528 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x18e9d26f3a8 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x18e9d271938 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x18e9d26f5f8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x18e9d26f678 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x18e9d26f6f8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x18e9d271b98 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x18e9d271a18 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x18e9d272058 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x18e9d2720f8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x18e9d272160 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x18e9d2721c8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x18e9d272230 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x18e9d2722b8 prev 0x18e9d272058 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x18e9d271ca0 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x18e9d271d18 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d271d90 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e9d271e08 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x18e9d272480 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x18e9d2723a0 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x18e9d272610 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x18e9d272798 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x18e9d26ca60 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x18e9d272868 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x18e9d26c8b0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x18e9d26cd88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x18e9d26cc40 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x18e9d26ce30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d26d050 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x18e9d26cf70 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x18e9d26d270 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x18e9d26d128 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x18e9d26d420 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x18e9d26d340 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x18e9d26d670 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x18e9d26d4f8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x18e9d26d578 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x18e9d26f8d0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x18e9d26f970 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x18e9d26f9e0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x18e9d26fa48 prev 0x18e9d26f8d0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x18e9d26d750 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x18e9d26fb38 <col:40> Inherited printf 1 2
|-FunctionDecl 0x18e9d26fc68 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x18e9d26fb88 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x18e9d26feb8 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x18e9d26fd40 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x18e9d26fdb8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x18e9d270078 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x18e9d26ff98 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x18e9d270298 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x18e9d270150 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x18e9d2704e8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x18e9d270370 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x18e9d2703e8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x18e9d2706a8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x18e9d2705c8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x18e9d2c0100 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x18e9d270780 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x18e9d270800 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x18e9d2c02c0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x18e9d2c01e0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x18e9d2c0550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x18e9d2c0470 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x18e9d2c05f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x18e9d2c07f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x18e9d2c0718 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x18e9d2c0980 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x18e9d2c0c28 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x18e9d2c0cc8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x18e9d2c0d38 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x18e9d2c0da0 prev 0x18e9d2c0c28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x18e9d2c0b10 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x18e9d2c0f78 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x18e9d2c0e48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2c63a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2c6168 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x18e9d2c61e0 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x18e9d2c6450 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2c6678 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x18e9d2c6598 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x18e9d2c68c8 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2c6750 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2c67c8 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2c6c88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x18e9d2c6a60 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2c6ae0 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x18e9d2c6d38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2c6f60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x18e9d2c6e80 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x18e9d2c2198 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x18e9d2c2050 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x18e9d2c2380 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x18e9d2c27d0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x18e9d2c2448 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2c24c8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x18e9d2c2548 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x18e9d2c25c0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x18e9d2c2c50 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x18e9d2c28c0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x18e9d2c2938 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2c29b0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e9d2c2a30 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x18e9d2c1040 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x18e9d2c2d40 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x18e9d2c2db8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e9d2c2e38 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x18e9d2c1208 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x18e9d2c1128 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x18e9d2c15e0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x18e9d2c1680 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x18e9d2c16e8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x18e9d2c1760 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x18e9d2c17c8 prev 0x18e9d2c15e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x18e9d2c13a0 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x18e9d2c1420 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x18e9d2c19a8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x18e9d2c1878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2c1d98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2c1ab8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x18e9d2c1b38 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x18e9d2c1bb0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x18e9d2c1e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2bf120 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x18e9d2c1f98 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x18e9d2bf020 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x18e9d2bf418 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2bf200 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x18e9d2bf280 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2bf2f8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2bf8a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x18e9d2bf5c0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x18e9d2bf638 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2bf6b8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x18e9d2bf960 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2bff30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2bfba0 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x18e9d2bfc18 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2bfc98 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x18e9d2bfd10 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x18e9d2c4070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2c43d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x18e9d2c41b8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x18e9d2c4230 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e9d2c42b0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x18e9d2c4768 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2c44b8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x18e9d2c4530 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2c45b0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2c4628 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2c49c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x18e9d2c4a68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2c4d20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x18e9d2c4bb0 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x18e9d2c70a0 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x18e9d2c4df8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x18e9d2c4e70 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x18e9d2c7320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x18e9d2c7240 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x18e9d2c73c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2c7688 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x18e9d2c7510 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x18e9d2c7588 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x18e9d2c7aa0 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x18e9d2c7b40 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x18e9d2c7ba8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x18e9d2c7c10 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x18e9d2c7c90 <col:40> Implicit printf 2 0
|-FunctionDecl 0x18e9d2c7cf8 prev 0x18e9d2c7aa0 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x18e9d2c7760 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2c77e0 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x18e9d2c7858 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x18e9d2c7df8 <col:40> Inherited printf 2 0
|-FunctionDecl 0x18e9d2c80b0 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x18e9d2c8150 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x18e9d2c81b8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x18e9d2c8220 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x18e9d2c82a0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x18e9d2c8308 prev 0x18e9d2c80b0 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x18e9d2c7e40 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2c7ec0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x18e9d2c7f38 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x18e9d2c8408 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x18e9d2c8668 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x18e9d2c8450 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2c84d0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2c8548 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2c8960 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x18e9d2c8748 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2c87c8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2c8840 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2c8ca8 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x18e9d2c8d48 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x18e9d2c8db0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x18e9d2c8e28 <col:40> Implicit printf 1 0
|-FunctionDecl 0x18e9d2c8e90 prev 0x18e9d2c8ca8 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x18e9d2c8a48 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x18e9d2c8ac0 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x18e9d2c8f88 <col:40> Inherited printf 1 0
|-FunctionDecl 0x18e9d2c91f8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x18e9d2c9298 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x18e9d2c9300 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x18e9d2c9378 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x18e9d2c93e0 prev 0x18e9d2c91f8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x18e9d2c8fd8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x18e9d2c90c0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x18e9d2c94d8 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x18e9d2c96a0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x18e9d2c9528 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2c95a0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2c98f8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x18e9d2c9780 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2c97f8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2c9e58 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x18e9d2c9ef8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x18e9d2c9f60 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x18e9d2c9fc8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x18e9d2ca030 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x18e9d2c5080 <col:77> Implicit printf 3 0
|-FunctionDecl 0x18e9d2c50e8 prev 0x18e9d2c9e58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x18e9d2c9a98 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x18e9d2c9b10 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2c9b90 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x18e9d2c9c08 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x18e9d2c52d8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x18e9d2c51a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2c5748 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x18e9d2c5328 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x18e9d2c53a0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2c5418 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2c5498 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2c5510 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2c5b88 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x18e9d2c5840 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x18e9d2c58b8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2c5930 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2c59b0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2c5a28 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2c5f58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x18e9d2c5d40 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x18e9d2c5db8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2c5e38 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x18e9d2c6010 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2ca540 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x18e9d2ca290 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x18e9d2ca308 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2ca388 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x18e9d2ca400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x18e9d2ca600 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2ca9f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x18e9d2ca748 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x18e9d2ca7c0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2ca840 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2ca8b8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2cadb8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x18e9d2caae8 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x18e9d2cab68 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2cabe0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2c3100 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x18e9d2c31a0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x18e9d2c3208 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x18e9d2c3280 <col:85> Implicit printf 2 3
|-FunctionDecl 0x18e9d2c32e8 prev 0x18e9d2c3100 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x18e9d2caf60 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x18e9d2cafe0 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x18e9d2c34c8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x18e9d2c3398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2c38f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x18e9d2c3990 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x18e9d2c39f8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x18e9d2c3a60 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x18e9d2c3ae0 <col:94> Implicit printf 2 0
|-FunctionDecl 0x18e9d2c3b48 prev 0x18e9d2c38f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x18e9d2c35d8 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x18e9d2c3658 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x18e9d2c36d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x18e9d2c3d30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x18e9d2c3c00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2cd100 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x18e9d2cd1a0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x18e9d2cd208 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x18e9d2cd270 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x18e9d2cd2f0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x18e9d2cd358 prev 0x18e9d2cd100 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x18e9d2c3d80 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x18e9d2c3e00 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x18e9d2c3e78 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x18e9d2cd458 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x18e9d2cd620 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x18e9d2cd4a8 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2cd520 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2cd918 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x18e9d2cd700 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x18e9d2cd778 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e9d2cd7f8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x18e9d2cdcb0 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x18e9d2cda00 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x18e9d2cda78 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2cdaf8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2cdb70 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2cdf18 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x18e9d2cdd98 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x18e9d2cde18 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x18e9d2cb0e0 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x18e9d2cdff8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x18e9d2cb3d0 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x18e9d2cb1b8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x18e9d2cb230 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e9d2cb2b0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x18e9d2cb6c8 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x18e9d2cb4b0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2cb530 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2cb5a8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2cb928 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x18e9d2cb7b0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2cb828 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2cbcb8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x18e9d2cba08 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x18e9d2cba80 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2cbb00 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2cbb78 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2cbe88 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x18e9d2cbda8 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x18e9d2d3160 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x18e9d2cbf60 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2cbfd8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2d3320 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x18e9d2d3240 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x18e9d2d34b0 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x18e9d2d36f8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2d3580 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2d35f8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2d3950 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2d37d8 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2d3850 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2d3ba8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2d3a30 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2d3aa8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2d3f58 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2d3c88 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x18e9d2d3d00 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x18e9d2d3d78 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2cc210 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2d4040 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x18e9d2d40b8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x18e9d2cc0f0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2cc508 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2cc2f8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x18e9d2cc370 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x18e9d2cc3e8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2cc800 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2cc5e8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2cc668 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2cc6e0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2ccaf8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2cc8e0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2cc960 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2cc9d8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2ccdf0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2ccbd8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2ccc58 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2cccd0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2d62f0 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2cced0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2ccf50 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x18e9d2ccfc8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x18e9d2cd040 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2d6688 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2d63d8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2d6458 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x18e9d2d64d0 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x18e9d2d6548 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2d6a20 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2d6770 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2d67f0 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x18e9d2d6868 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x18e9d2d68e0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2d6eb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2d6bd0 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x18e9d2d6c50 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x18e9d2d6cc8 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x18e9d2d6f70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2d4480 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2d70b8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x18e9d2d4170 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2d41f0 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2d4268 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2d4820 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2d4570 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x18e9d2d45e8 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2d4668 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2d46e0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2d4d70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2d4a10 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x18e9d2d4a90 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x18e9d2d4b08 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x18e9d2d4b80 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x18e9d2d4e30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2d53b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2d4f78 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x18e9d2d4ff0 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2d5070 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x18e9d2d50e8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x18e9d2d5180 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2d57f8 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2d54b0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x18e9d2d5528 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2d55a8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x18e9d2d5620 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x18e9d2d5698 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2d5a68 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2d58f0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2d5968 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2d5cc0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2d5b48 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2d5bc0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2d5fb0 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2d5da0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x18e9d2d5e18 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x18e9d2d5e90 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2d2280 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2d6098 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x18e9d2d6110 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x18e9d2d2160 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2d26d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2d2428 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x18e9d2d24a0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2d2520 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x18e9d2d2598 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x18e9d2d2798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2d2b90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2d28e0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x18e9d2d2958 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2d29d8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2d2a50 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2cf120 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2d2c80 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x18e9d2d2cf8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2d2d70 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2d2df0 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x18e9d2d2e68 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2cf660 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2cf318 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x18e9d2cf390 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2cf410 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x18e9d2cf488 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x18e9d2cf500 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x18e9d2cf728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2cfba8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2cf878 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x18e9d2cf8f0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2cf970 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x18e9d2cf9e8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x18e9d2cfa60 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2d7200 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2cfca0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x18e9d2cfd18 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2cfd90 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2cfe10 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x18e9d2cfe88 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x18e9d2cff00 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2d75c0 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x18e9d2d72f8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2d7370 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2d73f0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x18e9d2d7830 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x18e9d2d76c0 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x18e9d2d7a48 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x18e9d2d7d28 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x18e9d2d7b10 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x18e9d2d7b88 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x18e9d2d7f70 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x18e9d2d7e00 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x18e9d2d0130 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x18e9d2d8040 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x18e9d2d02b8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x18e9d2d04f0 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x18e9d2d0380 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x18e9d2d03f8 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x18e9d2d06a0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x18e9d2d05c8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x18e9d2d0948 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x18e9d2d0770 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x18e9d2d07e8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x18e9d2d0cf0 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x18e9d2d0a20 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x18e9d2d0aa0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x18e9d2d0b18 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x18e9d2d0ff0 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x18e9d2d0dd0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2d0e48 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x18e9d2d12f8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x18e9d2d10c8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x18e9d2d1150 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x18e9d2d1600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x18e9d2d1490 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x18e9d2d16a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2d1968 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x18e9d2d17e8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x18e9d2d1c70 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x18e9d2d1a38 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x18e9d2d1ab0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x18e9d2d1ec0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x18e9d2d1d48 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x18e9d2d1dc0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x18e9d2d91c0 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x18e9d2d1f98 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x18e9d2d9370 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x18e9d2d9290 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x18e9d2d9520 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x18e9d2d9440 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x18e9d2d98b8 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x18e9d2d95f0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2d9668 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2d96e0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2d9ba8 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x18e9d2d9998 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2d9a10 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2d9a88 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2d9e98 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x18e9d2d9c88 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2d9d00 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2d9d78 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2da1d0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x18e9d2d9f78 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2d9ff0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2da068 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2da4d0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x18e9d2da2b0 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2da328 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2da720 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x18e9d2da5a8 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2da620 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2da970 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x18e9d2da7f8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2da870 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2dabc0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x18e9d2daa48 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2daac0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2daf78 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x18e9d2dac98 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x18e9d2dad10 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e9d2dad88 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x18e9d2db3f0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x18e9d2db058 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x18e9d2db0d0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2db148 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2db1e0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2db7a8 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x18e9d2db4d8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2db550 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2db5c8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2dba98 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x18e9d2db888 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2db900 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2db978 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2dbd88 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x18e9d2dbb78 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x18e9d2dbbf0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e9d2dbc68 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x18e9d2dc110 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x18e9d2dbe68 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x18e9d2dbee0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2dbf58 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2dbfd0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2dc5a0 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x18e9d2dc218 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x18e9d2dc290 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2dc308 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e9d2dc380 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x18e9d2dcaa8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x18e9d2dc688 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x18e9d2dc700 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2dc778 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2dc7f0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2dc868 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2dce68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x18e9d2dcc58 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x18e9d2dccd0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2dcd48 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x18e9d2dcf20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2dd430 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x18e9d2dd120 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x18e9d2dd200 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2dd278 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2dd2f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x18e9d2dd4f0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2dd7a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x18e9d2dd630 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x18e9d2dd6a8 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x18e9d2dd960 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x18e9d2dd880 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x18e9d2ddc40 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x18e9d2dda30 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2ddaa8 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2ddb20 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2dde98 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x18e9d2ddd20 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2ddd98 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2e5090 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x18e9d2ddf70 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x18e9d2ddfe8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e9d2de060 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x18e9d2e5418 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x18e9d2e5170 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x18e9d2e51e8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2e5260 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2e52d8 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2e55e0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x18e9d2e5500 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x18e9d2e5828 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x18e9d2e56b0 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2e5728 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2e5b30 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2e5900 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2e5978 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2e5d80 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2e5c08 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2e5c80 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2e5fd0 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2e5e58 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2e5ed0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2e6398 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2e60c8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2e6140 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x18e9d2e61b8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2e6688 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2e6478 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2e64f0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x18e9d2e6568 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2e6978 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2e6768 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2e67e0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x18e9d2e6858 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2e6d38 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2e6a58 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2e6ad0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2e6b48 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2e1050 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2e6e18 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2e6e90 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2e6f08 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2e1340 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2e1130 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2e11a8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2e1220 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2e1790 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2e1420 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2e1498 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2e1510 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x18e9d2e1588 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2e1b20 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2e1878 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2e18f0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2e1968 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x18e9d2e19e0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2e1eb0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2e1c08 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2e1c80 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2e1cf8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x18e9d2e1d70 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2e3380 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2e1f98 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x18e9d2e3070 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2e30e8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2e3160 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2e3710 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2e3468 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x18e9d2e34e0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2e3558 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2e35d0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2e3aa0 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2e37f8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x18e9d2e3870 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2e38e8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2e3960 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2e3fa8 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2e3b88 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x18e9d2e3c00 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2e3c78 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2e3cf0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x18e9d2e3d68 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2e43e8 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2e40a8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x18e9d2e4120 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2e4198 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2e4210 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x18e9d2e4288 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2e4818 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2e44d8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x18e9d2e4550 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2e45c8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2e4640 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x18e9d2e46b8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2e4a80 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2e4908 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2e4980 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2e4cd0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2e4b58 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2e4bd0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2e4fb8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2e4da8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2e4e20 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x18e9d2e4e98 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2df3c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2df120 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x18e9d2df198 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2df210 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2df288 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x18e9d2df488 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2df9f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2df5d0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x18e9d2df648 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2df6c0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2df738 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2df7b0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2dff30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2dfbf0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x18e9d2dfc68 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2dfce0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2dfd58 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x18e9d2dfdd0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x18e9d2e70b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2e76c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2e71f8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x18e9d2e7270 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2e72e8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2e7360 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2e73d8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x18e9d2e7450 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2e7bc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x18e9d2e7988 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x18e9d2e7a00 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x18e9d2e7c70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x18e9d2e7d88 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x18e9d2e02a8 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x18e9d2e8040 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x18e9d2e0050 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2e00c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x18e9d2e0360 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x18e9d2e0478 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x18e9d2e0a18 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2e0738 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x18e9d2e07b0 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2e0828 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x18e9d2e0ad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x18e9d2e0bf0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x18e9d2ed320 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2e0eb0 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x18e9d2e0f28 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2e0fa0 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x18e9d2ed110 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x18e9d2ed3e0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x18e9d2ed500 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x18e9d2ed808 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x18e9d2ed628 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x18e9d2ed6a0 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2ed718 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x18e9d2ee3c0 <line:37:1, line:44:1>
|   |-DeclStmt 0x18e9d2ed950 <line:38:5, col:21>
|   | `-VarDecl 0x18e9d2ed8e8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x18e9d2ed9e8 <line:39:5, col:13>
|   | `-VarDecl 0x18e9d2ed980 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x18e9d2edd40 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x18e9d2edd28 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x18e9d2edc40 <col:34> '<builtin fn type>' Function 0x18e9d2edad8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x18e9d2edc78 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x18e9d2ed8e8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x18e9d2edcb0 <col:29> 'const wchar_t *' lvalue ParmVar 0x18e9d2ed718 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x18e9d2ee000 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x18e9d2edd70 <col:5> 'int' lvalue Var 0x18e9d2ed980 '_Ret' 'int'
|   | `-CallExpr 0x18e9d2edf40 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x18e9d2edf28 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x18e9d2edda8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x18e9d2e3fa8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x18e9d2edf88 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x18e9d2eddc8 <col:27> 'wchar_t *' lvalue ParmVar 0x18e9d2ed628 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x18e9d2edfa0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x18e9d2edde8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x18e9d2ed6a0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x18e9d2edfb8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x18e9d2ede08 <col:44> 'const wchar_t *' lvalue ParmVar 0x18e9d2ed718 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x18e9d2edfd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x18e9d2ede90 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x18e9d2ede68 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x18e9d2ede28 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x18e9d2edfe8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x18e9d2edeb0 <col:59> 'va_list':'char *' lvalue Var 0x18e9d2ed8e8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x18e9d2ee350 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x18e9d2ee338 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x18e9d2ee288 <col:34> '<builtin fn type>' Function 0x18e9d2ee120 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x18e9d2ee2c0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x18e9d2ed8e8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x18e9d2ee3b0 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x18e9d2ee398 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x18e9d2ee378 <col:12> 'int' lvalue Var 0x18e9d2ed980 '_Ret' 'int'
|-FunctionDecl 0x18e9d2edad8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x18e9d2edb78 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x18e9d2edbe8 <col:34> Implicit
|-FunctionDecl 0x18e9d2ee120 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x18e9d2ee1c0 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x18e9d2ee230 <col:34> Implicit
|-FunctionDecl 0x18e9d2ee6b8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x18e9d2ee410 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x18e9d2ee488 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2ee500 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2ee578 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x18e9d2ee9a0 <line:50:1, line:52:1>
|   `-ReturnStmt 0x18e9d2ee990 <line:51:5, col:62>
|     `-CallExpr 0x18e9d2ee8d0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x18e9d2ee8b8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x18e9d2ee790 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x18e9d2e3fa8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x18e9d2ee918 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x18e9d2ee7b0 <col:27> 'wchar_t *' lvalue ParmVar 0x18e9d2ee410 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x18e9d2ee930 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x18e9d2ee7d0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x18e9d2ee488 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x18e9d2ee948 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x18e9d2ee7f0 <col:44> 'const wchar_t *' lvalue ParmVar 0x18e9d2ee500 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x18e9d2ee960 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x18e9d2ee878 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x18e9d2ee850 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x18e9d2ee810 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x18e9d2ee978 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x18e9d2ee898 <col:59> 'va_list':'char *' lvalue ParmVar 0x18e9d2ee578 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x18e9d2eec40 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x18e9d2ee9c8 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x18e9d2eea40 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2eeab8 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2eeb30 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x18e9d2e9178 <line:61:1, line:68:1>
|   |-DeclStmt 0x18e9d2eed90 <line:62:5, col:21>
|   | `-VarDecl 0x18e9d2eed28 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x18e9d2eee28 <line:63:5, col:13>
|   | `-VarDecl 0x18e9d2eedc0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x18e9d2eeed0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x18e9d2eeeb8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x18e9d2eee40 <col:34> '<builtin fn type>' Function 0x18e9d2edad8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x18e9d2eee60 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x18e9d2eed28 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x18e9d2eee98 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x18e9d2eeb30 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x18e9d2ef0d0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x18e9d2eef00 <col:5> 'int' lvalue Var 0x18e9d2eedc0 '_Ret' 'int'
|   | `-CallExpr 0x18e9d2ef010 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x18e9d2eeff8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x18e9d2eef38 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x18e9d2e3fa8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x18e9d2ef058 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x18e9d2eef58 <col:27> 'wchar_t *' lvalue ParmVar 0x18e9d2ee9c8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x18e9d2ef070 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x18e9d2eef78 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x18e9d2eea40 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x18e9d2ef088 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x18e9d2eef98 <col:44> 'const wchar_t *' lvalue ParmVar 0x18e9d2eeab8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x18e9d2ef0a0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x18e9d2eefb8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x18e9d2eeb30 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x18e9d2ef0b8 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x18e9d2eefd8 <col:64> 'va_list':'char *' lvalue Var 0x18e9d2eed28 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x18e9d2e9108 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x18e9d2e90f0 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x18e9d2ef0f0 <col:34> '<builtin fn type>' Function 0x18e9d2ee120 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x18e9d2e90d0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x18e9d2eed28 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x18e9d2e9168 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x18e9d2e9150 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x18e9d2e9130 <col:12> 'int' lvalue Var 0x18e9d2eedc0 '_Ret' 'int'
|-FunctionDecl 0x18e9d2e9508 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x18e9d2e91c8 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x18e9d2e9240 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2e92b8 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2e9330 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x18e9d2e93a8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x18e9d2e9790 <line:74:1, line:76:1>
|   `-ReturnStmt 0x18e9d2e9780 <line:75:5, col:67>
|     `-CallExpr 0x18e9d2e96c0 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x18e9d2e96a8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x18e9d2e95e8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x18e9d2e3fa8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x18e9d2e9708 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x18e9d2e9608 <col:27> 'wchar_t *' lvalue ParmVar 0x18e9d2e91c8 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x18e9d2e9720 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x18e9d2e9628 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x18e9d2e9240 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x18e9d2e9738 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x18e9d2e9648 <col:44> 'const wchar_t *' lvalue ParmVar 0x18e9d2e92b8 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x18e9d2e9750 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x18e9d2e9668 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x18e9d2e9330 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x18e9d2e9768 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x18e9d2e9688 <col:64> 'va_list':'char *' lvalue ParmVar 0x18e9d2e93a8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x18e9d2e99d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x18e9d2e97b8 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2e9830 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x18e9d2e9c28 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x18e9d2e9ab0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2e9b28 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2e9f10 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x18e9d2e9d00 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2e9d78 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x18e9d2e9df0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x18e9d2ef2a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x18e9d2ef130 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2ef1a8 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x18e9d2ef358 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2ef768 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2ef558 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2ef5d0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2ef648 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x18e9d2ef820 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2efad8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x18e9d2ef960 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x18e9d2ef9d8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x18e9d2efdc0 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2efbb0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2efc28 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2efca0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2e8130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x18e9d2eff60 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2effd8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x18e9d2e81e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2e86b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2e83e0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2e8458 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2e84d0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x18e9d2e8770 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2e8a28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x18e9d2e88b0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2e8928 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x18e9d2e8d10 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2e8b00 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2e8b78 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2e8bf0 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2ec1e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x18e9d2e8eb0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2e8f28 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2e8fa0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x18e9d2ec2a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2ec820 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2ec4a0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2ec518 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2ec590 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2ec608 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x18e9d2ec8e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2ecc30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x18e9d2eca20 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2eca98 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e9d2ecb10 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x18e9d2ecfb8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2ecd10 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2ecd88 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2ece00 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2ece78 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2f02f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x18e9d2f0210 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x18e9d2f0398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2f0710 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2f0598 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2f0610 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x18e9d2f07c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2f09e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x18e9d2f0900 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x18e9d2f0c28 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x18e9d2f0ab0 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2f0b28 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e9d2f0f28 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x18e9d2f0d08 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x18e9d2f0d80 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x18e9d2f12f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x18e9d2f10c0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2f1150 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x18e9d2f13a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2f17b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x18e9d2f14f0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x18e9d2f1568 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2f15e0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x18e9d2f1c10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x18e9d2f1950 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2f19c8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2f1a40 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x18e9d2f1cc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2f61e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x18e9d2f1e10 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x18e9d2f1e88 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x18e9d2f1f00 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2f1f78 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x18e9d2f6440 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x18e9d2f62d0 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x18e9d2f6680 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x18e9d2f6510 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x18e9d2f6588 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x18e9d2f6838 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x18e9d2f6758 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x18e9d2f6b28 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x18e9d2f6908 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x18e9d2f6980 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x18e9d2f6d98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x18e9d2f6cc0 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x18e9d2f6e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e9d2f7058 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x18e9d2f6f80 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x18e9d2f2258 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x18e9d2f7128 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x18e9d2f2160 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x18e9d2f24a0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x18e9d2f2330 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x18e9d2f23a8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x18e9d2f2650 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x18e9d2f2578 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x18e9d2f27f8 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x18e9d2f2720 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x18e9d2f29a8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x18e9d2f28c8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x18e9d2f2b58 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x18e9d2f2a78 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x18e9d2f2ed0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x18e9d2f2c30 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x18e9d2f2ca8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2f2d20 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e9d2f2d98 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x18e9d2f5360 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x18e9d2f2fc0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x18e9d2f3038 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2f30b0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2f5190 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e9d2f5208 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x18e9d2f5670 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x18e9d2f5450 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2f54d0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x18e9d2f5550 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x18e9d2f5830 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x18e9d2f5750 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x18e9d2f5b20 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x18e9d2f5900 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x18e9d2f5980 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x18e9d2f5a00 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x18e9d2f5ce0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x18e9d2f5c00 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x18e9d2f6058 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x18e9d2f5db8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x18e9d2f5e30 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e9d2f5ea8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e9d2f5f20 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x18e9d2f7328 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x18e9d2f71b0 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x18e9d2f7228 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x18e9d2f7660 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x18e9d2f74e0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x18e9d2f7560 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x18e9d2f7710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x18e9d2f79c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x18e9d2f7a68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x18e9d2f7da8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x18e9d2f7c30 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x18e9d2f7cb0 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x18e9d2f7e58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x18e9d2f81c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x18e9d2f8260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x18e9d2f8500 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x18e9d2f8420 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x18e9d2f85a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x18e9d2f8828 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x18e9d2f88c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x18e9d2f8b70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x18e9d2f8a90 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x18e9d2f8c18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x18e9d2f8ef8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x18e9d2f8e18 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x18e9d2f8fa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x18e9d2f9348 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x18e9d2f91d0 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x18e9d2f9248 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x18e9d2f93f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x18e9d2f96b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x18e9d2f9758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x18e9d2f9990 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:31:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x18e9d2f9ba0 <line:34:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x18e9d2f9a60 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x18e9d2f9df0 <line:35:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x18e9d2f9c78 <col:34, col:40> col:40 _Value 'int *'
|-RecordDecl 0x18e9d2f9eb0 <.//openssl//file_jk/before\crypto\bio/bio_lcl.h:64:1, line:71:1> line:64:8 struct bio_addrinfo_st definition
| |-FieldDecl 0x18e9d2f9f88 <line:65:5, col:9> col:9 bai_family 'int'
| |-FieldDecl 0x18e9d2f9ff8 <line:66:5, col:9> col:9 bai_socktype 'int'
| |-FieldDecl 0x18e9d2fa068 <line:67:5, col:9> col:9 bai_protocol 'int'
| |-FieldDecl 0x18e9d2fa0d0 <line:68:5, col:12> col:12 bai_addrlen 'size_t':'unsigned long long'
| |-RecordDecl 0x18e9d2fa128 parent 0x18e9b8b2ae8 <line:69:5, col:12> col:12 struct sockaddr
| |-FieldDecl 0x18e9d307cc0 <col:5, col:22> col:22 bai_addr 'struct sockaddr *'
| `-FieldDecl 0x18e9d307dd0 <line:70:5, col:29> col:29 bai_next 'struct bio_addrinfo_st *'
|-RecordDecl 0x18e9d307e28 <line:74:1, line:83:1> line:74:7 invalid union bio_addr_st definition
| |-FieldDecl 0x18e9d307f30 <line:75:5, col:21> col:21 invalid sa 'struct sockaddr':'struct sockaddr'
| |-RecordDecl 0x18e9d307f88 parent 0x18e9b8b2ae8 <line:79:5, col:12> col:12 struct sockaddr_in
| `-FieldDecl 0x18e9d3080a8 <col:5, col:24> col:24 invalid s_in 'struct sockaddr_in':'struct sockaddr_in'
|-RecordDecl 0x18e9d308100 <line:91:9, line:112:1> line:91:16 struct bio_f_buffer_ctx_struct definition
| |-FieldDecl 0x18e9d3081d8 <line:104:5, col:9> col:9 referenced ibuf_size 'int'
| |-FieldDecl 0x18e9d308248 <line:105:5, col:9> col:9 referenced obuf_size 'int'
| |-FieldDecl 0x18e9d3082b8 <line:106:5, col:11> col:11 referenced ibuf 'char *'
| |-FieldDecl 0x18e9d308328 <line:107:5, col:9> col:9 referenced ibuf_len 'int'
| |-FieldDecl 0x18e9d308398 <line:108:5, col:9> col:9 referenced ibuf_off 'int'
| |-FieldDecl 0x18e9d308408 <line:109:5, col:11> col:11 referenced obuf 'char *'
| |-FieldDecl 0x18e9d308478 <line:110:5, col:9> col:9 referenced obuf_len 'int'
| `-FieldDecl 0x18e9d3084e8 <line:111:5, col:9> col:9 referenced obuf_off 'int'
|-TypedefDecl 0x18e9d308598 <line:91:1, line:112:3> col:3 referenced BIO_F_BUFFER_CTX 'struct bio_f_buffer_ctx_struct':'struct bio_f_buffer_ctx_struct'
| `-ElaboratedType 0x18e9d308540 'struct bio_f_buffer_ctx_struct' sugar
|   `-RecordType 0x18e9d3081a0 'struct bio_f_buffer_ctx_struct'
|     `-Record 0x18e9d308100 'bio_f_buffer_ctx_struct'
|-RecordDecl 0x18e9d308608 <line:114:1, line:132:1> line:114:8 invalid struct bio_st definition
| |-FieldDecl 0x18e9d3086d8 <line:115:5, col:23> col:23 invalid method 'const int *'
| |-FieldDecl 0x18e9d30fd10 <line:117:5, col:74> col:12 callback 'long (*)(struct bio_st *, int, const char *, int, long, long)'
| |-FieldDecl 0x18e9d30fd80 <line:118:5, col:11> col:11 cb_arg 'char *'
| |-FieldDecl 0x18e9d30fdf0 <line:119:5, col:9> col:9 init 'int'
| |-FieldDecl 0x18e9d30fe60 <line:120:5, col:9> col:9 shutdown 'int'
| |-FieldDecl 0x18e9d30fed0 <line:121:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x18e9d30ff40 <line:122:5, col:9> col:9 retry_reason 'int'
| |-FieldDecl 0x18e9d30ffb0 <line:123:5, col:9> col:9 num 'int'
| |-FieldDecl 0x18e9d310020 <line:124:5, col:11> col:11 ptr 'void *'
| |-FieldDecl 0x18e9d3100a0 <line:125:5, col:20> col:20 next_bio 'struct bio_st *'
| |-FieldDecl 0x18e9d310120 <line:126:5, col:20> col:20 prev_bio 'struct bio_st *'
| |-FieldDecl 0x18e9d310190 <line:127:5, col:9> col:9 references 'int'
| |-FieldDecl 0x18e9d310200 <line:128:5, col:14> col:14 invalid num_read 'int'
| |-FieldDecl 0x18e9d310270 <line:129:5, col:14> col:14 invalid num_write 'int'
| |-FieldDecl 0x18e9d3102e0 <line:130:5, col:20> col:20 invalid ex_data 'int'
| `-FieldDecl 0x18e9d310350 <line:131:5, col:20> col:20 invalid lock 'int *'
|-VarDecl 0x18e9d3103c0 <line:139:1, col:23> col:23 invalid bio_lookup_lock 'int *' extern
|-FunctionDecl 0x18e9d310650 <line:141:1, col:58> col:5 invalid BIO_ADDR_make 'int (int *, const struct sockaddr *)'
| |-ParmVarDecl 0x18e9d310440 <col:19, col:29> col:29 invalid ap 'int *'
| `-ParmVarDecl 0x18e9d310530 <col:33, col:56> col:56 sa 'const struct sockaddr *'
|-FunctionDecl 0x18e9d310820 <line:142:1, col:60> col:24 invalid BIO_ADDR_sockaddr 'const struct sockaddr *(const int *)'
| `-ParmVarDecl 0x18e9d310718 <col:42, col:58> col:58 invalid ap 'const int *'
|-FunctionDecl 0x18e9d310a20 <line:143:1, col:56> col:18 invalid BIO_ADDR_sockaddr_noconst 'struct sockaddr *(int *)'
| `-ParmVarDecl 0x18e9d3108e0 <col:44, col:54> col:54 invalid ap 'int *'
|-FunctionDecl 0x18e9d310bb0 <line:144:1, col:52> col:11 invalid BIO_ADDR_sockaddr_size 'int (const int *)'
| `-ParmVarDecl 0x18e9d310ae0 <col:34, col:50> col:50 invalid ap 'const int *'
|-FunctionDecl 0x18e9d30acb8 <line:145:1, col:61> col:11 invalid BIO_ADDRINFO_sockaddr_size 'int (const int *)'
| `-ParmVarDecl 0x18e9d30ac20 <col:38, col:58> col:58 invalid bai 'const int *'
|-FunctionDecl 0x18e9d30ae20 <line:146:1, col:69> col:24 invalid BIO_ADDRINFO_sockaddr 'const struct sockaddr *(const int *)'
| `-ParmVarDecl 0x18e9d30ad78 <col:46, col:66> col:66 invalid bai 'const int *'
|-VarDecl 0x18e9d30aee0 <line:149:1, col:23> col:23 invalid bio_type_lock 'int *' extern
|-FunctionDecl 0x18e9d30afe0 <line:151:1, col:31> col:6 bio_sock_cleanup_int 'void (void)'
|-FunctionDecl 0x18e9d30b2a0 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:15:1, col:57> col:12 invalid buffer_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x18e9d30b0b0 <col:25, col:30> col:30 invalid h 'int *'
| |-ParmVarDecl 0x18e9d30b130 <col:33, col:45> col:45 buf 'const char *'
| `-ParmVarDecl 0x18e9d30b1b0 <col:50, col:54> col:54 num 'int'
|-FunctionDecl 0x18e9d30b560 <line:16:1, col:51> col:12 invalid buffer_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x18e9d30b370 <col:24, col:29> col:29 invalid h 'int *'
| |-ParmVarDecl 0x18e9d30b3f0 <col:32, col:38> col:38 buf 'char *'
| `-ParmVarDecl 0x18e9d30b470 <col:43, col:47> col:47 size 'int'
|-FunctionDecl 0x18e9d30b790 <line:17:1, col:47> col:12 invalid buffer_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x18e9d30b630 <col:24, col:29> col:29 invalid h 'int *'
| `-ParmVarDecl 0x18e9d30b6b0 <col:32, col:44> col:44 str 'const char *'
|-FunctionDecl 0x18e9d30ba00 <line:18:1, col:51> col:12 invalid buffer_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x18e9d30b858 <col:24, col:29> col:29 invalid h 'int *'
| |-ParmVarDecl 0x18e9d30b8d8 <col:32, col:38> col:38 str 'char *'
| `-ParmVarDecl 0x18e9d30b958 <col:43, col:47> col:47 size 'int'
|-FunctionDecl 0x18e9d314e20 <line:19:1, col:63> col:13 invalid buffer_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x18e9d30bad0 <col:25, col:30> col:30 invalid h 'int *'
| |-ParmVarDecl 0x18e9d30bb50 <col:33, col:37> col:37 cmd 'int'
| |-ParmVarDecl 0x18e9d314ca0 <col:42, col:47> col:47 arg1 'long'
| `-ParmVarDecl 0x18e9d314d20 <col:53, col:59> col:59 arg2 'void *'
|-FunctionDecl 0x18e9d314f90 <line:20:1, col:29> col:12 invalid buffer_new 'int (int *)' static
| `-ParmVarDecl 0x18e9d314ef8 <col:23, col:28> col:28 invalid h 'int *'
|-FunctionDecl 0x18e9d3150e8 <line:21:1, col:33> col:12 invalid buffer_free 'int (int *)' static
| `-ParmVarDecl 0x18e9d315050 <col:24, col:29> col:29 invalid data 'int *'
|-FunctionDecl 0x18e9d315390 <line:22:1, col:66> col:13 invalid buffer_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x18e9d3151a8 <col:34, col:39> col:39 invalid h 'int *'
| |-ParmVarDecl 0x18e9d315228 <col:42, col:46> col:46 cmd 'int'
| `-ParmVarDecl 0x18e9d3152a8 <col:51, col:64> col:64 invalid fp 'int *'
|-VarDecl 0x18e9d315460 <line:25:1, col:25> col:25 invalid methods_buffer 'const int' static
|-FunctionDecl 0x18e9d3155f0 <line:38:1, line:41:1> line:38:19 invalid BIO_f_buffer 'const int *(void)'
| `-CompoundStmt 0x18e9d3156a8 <line:39:1, line:41:1>
|-FunctionDecl 0x18e9d315768 <line:43:1, line:67:1> line:43:12 invalid buffer_new 'int (int *)' static
| |-ParmVarDecl 0x18e9d3156d0 <col:23, col:28> col:28 invalid bi 'int *'
| `-CompoundStmt 0x18e9d317998 <line:44:1, line:67:1>
|   |-DeclStmt 0x18e9d315b70 <line:45:5, col:57>
|   | `-VarDecl 0x18e9d3158b8 <col:5, col:56> col:23 used ctx 'BIO_F_BUFFER_CTX *' cinit
|   |   `-ImplicitCastExpr 0x18e9d315b58 <col:29, col:56> 'BIO_F_BUFFER_CTX *' <IntegralToPointer>
|   |     `-CallExpr 0x18e9d315b30 <col:29, col:56> 'int'
|   |       |-ImplicitCastExpr 0x18e9d315b18 <col:29> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x18e9d315a38 <col:29> 'int ()' Function 0x18e9d315970 'OPENSSL_zalloc' 'int ()'
|   |       `-UnaryExprOrTypeTraitExpr 0x18e9d315ac8 <col:44, col:55> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x18e9d315aa8 <col:50, col:55> 'BIO_F_BUFFER_CTX':'struct bio_f_buffer_ctx_struct' lvalue
|   |           `-UnaryOperator 0x18e9d315a90 <col:51, col:52> 'BIO_F_BUFFER_CTX':'struct bio_f_buffer_ctx_struct' lvalue prefix '*' cannot overflow
|   |             `-ImplicitCastExpr 0x18e9d315a78 <col:52> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |               `-DeclRefExpr 0x18e9d315a58 <col:52> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d3158b8 'ctx' 'BIO_F_BUFFER_CTX *' non_odr_use_unevaluated
|   |-IfStmt 0x18e9d316d18 <line:47:5, line:48:18>
|   | |-BinaryOperator 0x18e9d315c78 <line:47:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x18e9d315c48 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:47:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x18e9d315b88 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d3158b8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | | `-ImplicitCastExpr 0x18e9d315c60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_F_BUFFER_CTX *' <BitCast>
|   | |   `-ParenExpr 0x18e9d315c28 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x18e9d315c00 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x18e9d315bc0 <col:26> 'int' 0
|   | `-ReturnStmt 0x18e9d316d08 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:48:9, col:18>
|   |   `-ParenExpr 0x18e9d316ce8 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x18e9d316cc0 <col:17> 'int' 0
|   |-BinaryOperator 0x18e9d316dc0 <line:49:5, line:23:33> 'int' '='
|   | |-MemberExpr 0x18e9d316d68 <line:49:5, col:10> 'int' lvalue ->ibuf_size 0x18e9d3081d8
|   | | `-ImplicitCastExpr 0x18e9d316d50 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x18e9d316d30 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d3158b8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-IntegerLiteral 0x18e9d316d98 <line:23:33> 'int' 4096
|   |-BinaryOperator 0x18e9d316fd8 <line:50:5, col:51> 'char *' '='
|   | |-MemberExpr 0x18e9d316e18 <col:5, col:10> 'char *' lvalue ->ibuf 0x18e9d3082b8
|   | | `-ImplicitCastExpr 0x18e9d316e00 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x18e9d316de0 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d3158b8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-ImplicitCastExpr 0x18e9d316fc0 <col:17, col:51> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x18e9d316f98 <col:17, col:51> 'int'
|   |     |-ImplicitCastExpr 0x18e9d316f80 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x18e9d316f38 <col:17> 'int ()' Function 0x18e9d316e70 'OPENSSL_malloc' 'int ()'
|   |     `-IntegerLiteral 0x18e9d316f58 <line:23:33> 'int' 4096
|   |-IfStmt 0x18e9d317338 <line:51:5, line:54:5>
|   | |-BinaryOperator 0x18e9d317118 <line:51:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x18e9d3170e8 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:51:9, col:14> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x18e9d317030 <col:9, col:14> 'char *' lvalue ->ibuf 0x18e9d3082b8
|   | | |   `-ImplicitCastExpr 0x18e9d317018 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x18e9d316ff8 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d3158b8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | | `-ImplicitCastExpr 0x18e9d317100 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x18e9d3170c8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x18e9d3170a0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x18e9d317060 <col:26> 'int' 0
|   | `-CompoundStmt 0x18e9d317318 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:51:28, line:54:5>
|   |   |-CallExpr 0x18e9d317280 <line:52:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x18e9d317268 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x18e9d317228 <col:9> 'int ()' Function 0x18e9d317160 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x18e9d3172a8 <col:22> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x18e9d317248 <col:22> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d3158b8 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   `-ReturnStmt 0x18e9d317308 <line:53:9, col:18>
|   |     `-ParenExpr 0x18e9d3172e8 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x18e9d3172c0 <col:17> 'int' 0
|   |-BinaryOperator 0x18e9d3173e0 <line:55:5, line:23:33> 'int' '='
|   | |-MemberExpr 0x18e9d317388 <line:55:5, col:10> 'int' lvalue ->obuf_size 0x18e9d308248
|   | | `-ImplicitCastExpr 0x18e9d317370 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x18e9d317350 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d3158b8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-IntegerLiteral 0x18e9d3173b8 <line:23:33> 'int' 4096
|   |-BinaryOperator 0x18e9d317508 <line:56:5, col:51> 'char *' '='
|   | |-MemberExpr 0x18e9d317438 <col:5, col:10> 'char *' lvalue ->obuf 0x18e9d308408
|   | | `-ImplicitCastExpr 0x18e9d317420 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x18e9d317400 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d3158b8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-ImplicitCastExpr 0x18e9d3174f0 <col:17, col:51> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x18e9d3174c8 <col:17, col:51> 'int'
|   |     |-ImplicitCastExpr 0x18e9d3174b0 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x18e9d317468 <col:17> 'int ()' Function 0x18e9d316e70 'OPENSSL_malloc' 'int ()'
|   |     `-IntegerLiteral 0x18e9d317488 <line:23:33> 'int' 4096
|   |-IfStmt 0x18e9d317860 <line:57:5, line:61:5>
|   | |-BinaryOperator 0x18e9d317648 <line:57:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x18e9d317618 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:57:9, col:14> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x18e9d317560 <col:9, col:14> 'char *' lvalue ->obuf 0x18e9d308408
|   | | |   `-ImplicitCastExpr 0x18e9d317548 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x18e9d317528 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d3158b8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | | `-ImplicitCastExpr 0x18e9d317630 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x18e9d3175f8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x18e9d3175d0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x18e9d317590 <col:26> 'int' 0
|   | `-CompoundStmt 0x18e9d317838 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:57:28, line:61:5>
|   |   |-CallExpr 0x18e9d317708 <line:58:9, col:31> 'int'
|   |   | |-ImplicitCastExpr 0x18e9d3176f0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x18e9d317668 <col:9> 'int ()' Function 0x18e9d317160 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x18e9d317730 <col:22, col:27> 'char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x18e9d3176c0 <col:22, col:27> 'char *' lvalue ->ibuf 0x18e9d3082b8
|   |   |     `-ImplicitCastExpr 0x18e9d3176a8 <col:22> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x18e9d317688 <col:22> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d3158b8 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-CallExpr 0x18e9d3177a0 <line:59:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x18e9d317788 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x18e9d317748 <col:9> 'int ()' Function 0x18e9d317160 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x18e9d3177c8 <col:22> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x18e9d317768 <col:22> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d3158b8 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   `-ReturnStmt 0x18e9d317828 <line:60:9, col:18>
|   |     `-ParenExpr 0x18e9d317808 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x18e9d3177e0 <col:17> 'int' 0
|   `-ReturnStmt 0x18e9d317988 <line:66:5, col:14>
|     `-ParenExpr 0x18e9d317968 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x18e9d317940 <col:13> 'int' 1
|-FunctionDecl 0x18e9d317aa0 <line:69:1, line:83:1> line:69:12 invalid buffer_free 'int (int *)' static
| |-ParmVarDecl 0x18e9d317a08 <col:24, col:29> col:29 invalid a 'int *'
| `-CompoundStmt 0x18e9d314018 <line:70:1, line:83:1>
|   |-DeclStmt 0x18e9d317bd8 <line:71:5, col:24>
|   | `-VarDecl 0x18e9d317b70 <col:5, col:23> col:23 used b 'BIO_F_BUFFER_CTX *'
|   |-IfStmt 0x18e9d313cb8 <line:73:5, line:74:18>
|   | |-OpaqueValueExpr 0x18e9d313ca0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x18e9d313c90 <col:9, col:18>
|   |   `-ParenExpr 0x18e9d317ca0 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x18e9d317c78 <col:17> 'int' 0
|   |-CallExpr 0x18e9d313da8 <line:76:5, col:25> 'int'
|   | |-ImplicitCastExpr 0x18e9d313d90 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x18e9d313d08 <col:5> 'int ()' Function 0x18e9d317160 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x18e9d313dd0 <col:18, col:21> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x18e9d313d60 <col:18, col:21> 'char *' lvalue ->ibuf 0x18e9d3082b8
|   |     `-ImplicitCastExpr 0x18e9d313d48 <col:18> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x18e9d313d28 <col:18> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d317b70 'b' 'BIO_F_BUFFER_CTX *'
|   |-CallExpr 0x18e9d313e88 <line:77:5, col:25> 'int'
|   | |-ImplicitCastExpr 0x18e9d313e70 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x18e9d313de8 <col:5> 'int ()' Function 0x18e9d317160 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x18e9d313eb0 <col:18, col:21> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x18e9d313e40 <col:18, col:21> 'char *' lvalue ->obuf 0x18e9d308408
|   |     `-ImplicitCastExpr 0x18e9d313e28 <col:18> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x18e9d313e08 <col:18> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d317b70 'b' 'BIO_F_BUFFER_CTX *'
|   `-ReturnStmt 0x18e9d314008 <line:82:5, col:14>
|     `-ParenExpr 0x18e9d313fe8 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x18e9d313fc0 <col:13> 'int' 1
|-FunctionDecl 0x18e9d314210 <line:85:1, line:154:1> line:85:12 invalid buffer_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x18e9d314068 <col:24, col:29> col:29 invalid b 'int *'
| |-ParmVarDecl 0x18e9d3140e8 <col:32, col:38> col:38 used out 'char *'
| |-ParmVarDecl 0x18e9d314168 <col:43, col:47> col:47 used outl 'int'
| `-CompoundStmt 0x18e9d3137f0 <line:86:1, line:154:1>
|   |-DeclStmt 0x18e9d314420 <line:87:5, col:19>
|   | |-VarDecl 0x18e9d3142f8 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x18e9d314378 <col:5, col:18> col:12 used num 'int' cinit
|   |   `-IntegerLiteral 0x18e9d3143e0 <col:18> 'int' 0
|   |-DeclStmt 0x18e9d3144b0 <line:88:5, col:26>
|   | `-VarDecl 0x18e9d314448 <col:5, col:23> col:23 used ctx 'BIO_F_BUFFER_CTX *'
|   |-IfStmt 0x18e9d314630 <line:90:5, line:91:18>
|   | |-BinaryOperator 0x18e9d3145b8 <line:90:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x18e9d314588 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:90:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x18e9d3144c8 <col:9> 'char *' lvalue ParmVar 0x18e9d3140e8 'out' 'char *'
|   | | `-ImplicitCastExpr 0x18e9d3145a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x18e9d314568 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x18e9d314540 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x18e9d314500 <col:26> 'int' 0
|   | `-ReturnStmt 0x18e9d314620 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:91:9, col:18>
|   |   `-ParenExpr 0x18e9d314600 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x18e9d3145d8 <col:17> 'int' 0
|   |-IfStmt 0x18e9d314890 <line:94:5, line:95:18>
|   | |-OpaqueValueExpr 0x18e9d314878 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x18e9d314868 <col:9, col:18>
|   |   `-ParenExpr 0x18e9d314848 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x18e9d314820 <col:17> 'int' 0
|   |-BinaryOperator 0x18e9d314908 <line:96:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x18e9d3148a8 <col:5> 'int' lvalue Var 0x18e9d314378 'num' 'int'
|   | `-IntegerLiteral 0x18e9d3148e0 <col:11> 'int' 0
|   |-LabelStmt 0x18e9d314b60 <line:99:2, line:100:14> 'start'
|   | `-BinaryOperator 0x18e9d314af0 <col:5, col:14> 'int' '='
|   |   |-DeclRefExpr 0x18e9d314a38 <col:5> 'int' lvalue Var 0x18e9d3142f8 'i' 'int'
|   |   `-ImplicitCastExpr 0x18e9d314ad8 <col:9, col:14> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x18e9d314aa8 <col:9, col:14> 'int' lvalue ->ibuf_len 0x18e9d308328
|   |       `-ImplicitCastExpr 0x18e9d314a90 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x18e9d314a70 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d314448 'ctx' 'BIO_F_BUFFER_CTX *'
|   |-IfStmt 0x18e9d318738 <line:102:5, line:113:5>
|   | |-BinaryOperator 0x18e9d314bd8 <line:102:9, col:14> 'int' '!='
|   | | |-ImplicitCastExpr 0x18e9d314bc0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x18e9d314b78 <col:9> 'int' lvalue Var 0x18e9d3142f8 'i' 'int'
|   | | `-IntegerLiteral 0x18e9d314b98 <col:14> 'int' 0
|   | `-CompoundStmt 0x18e9d3186e8 <col:17, line:113:5>
|   |   |-IfStmt 0x18e9d317d68 <line:103:9, line:104:17>
|   |   | |-BinaryOperator 0x18e9d317cd0 <line:103:13, col:17> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x18e9d314c50 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x18e9d314bf8 <col:13> 'int' lvalue Var 0x18e9d3142f8 'i' 'int'
|   |   | | `-ImplicitCastExpr 0x18e9d314c68 <col:17> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x18e9d314c18 <col:17> 'int' lvalue ParmVar 0x18e9d314168 'outl' 'int'
|   |   | `-BinaryOperator 0x18e9d317d48 <line:104:13, col:17> 'int' '='
|   |   |   |-DeclRefExpr 0x18e9d317cf0 <col:13> 'int' lvalue Var 0x18e9d3142f8 'i' 'int'
|   |   |   `-ImplicitCastExpr 0x18e9d317d30 <col:17> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x18e9d317d10 <col:17> 'int' lvalue ParmVar 0x18e9d314168 'outl' 'int'
|   |   |-CallExpr 0x18e9d3181f0 <line:105:9, col:51> 'void *'
|   |   | |-ImplicitCastExpr 0x18e9d3181d8 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x18e9d317fb0 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x18e9d317dc0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x18e9d318240 <col:16> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x18e9d318228 <col:16> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x18e9d317fe8 <col:16> 'char *' lvalue ParmVar 0x18e9d3140e8 'out' 'char *'
|   |   | |-ImplicitCastExpr 0x18e9d318258 <col:21, col:47> 'const void *' <BitCast>
|   |   | | `-UnaryOperator 0x18e9d318148 <col:21, col:47> 'char *' prefix '&' cannot overflow
|   |   | |   `-ParenExpr 0x18e9d318128 <col:22, col:47> 'char' lvalue
|   |   | |     `-ArraySubscriptExpr 0x18e9d318108 <col:23, col:46> 'char' lvalue
|   |   | |       |-ImplicitCastExpr 0x18e9d3180d8 <col:23, col:28> 'char *' <LValueToRValue>
|   |   | |       | `-MemberExpr 0x18e9d318040 <col:23, col:28> 'char *' lvalue ->ibuf 0x18e9d3082b8
|   |   | |       |   `-ImplicitCastExpr 0x18e9d318028 <col:23> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |       |     `-DeclRefExpr 0x18e9d318008 <col:23> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d314448 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |       `-ImplicitCastExpr 0x18e9d3180f0 <col:33, col:38> 'int' <LValueToRValue>
|   |   | |         `-MemberExpr 0x18e9d3180a8 <col:33, col:38> 'int' lvalue ->ibuf_off 0x18e9d308398
|   |   | |           `-ImplicitCastExpr 0x18e9d318090 <col:33> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |             `-DeclRefExpr 0x18e9d318070 <col:33> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d314448 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-ImplicitCastExpr 0x18e9d318288 <col:50> 'unsigned long long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x18e9d318270 <col:50> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x18e9d318160 <col:50> 'int' lvalue Var 0x18e9d3142f8 'i' 'int'
|   |   |-CompoundAssignOperator 0x18e9d318340 <line:106:9, col:26> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x18e9d3182d8 <col:9, col:14> 'int' lvalue ->ibuf_off 0x18e9d308398
|   |   | | `-ImplicitCastExpr 0x18e9d3182c0 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x18e9d3182a0 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d314448 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-ImplicitCastExpr 0x18e9d318328 <col:26> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x18e9d318308 <col:26> 'int' lvalue Var 0x18e9d3142f8 'i' 'int'
|   |   |-CompoundAssignOperator 0x18e9d318410 <line:107:9, col:26> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x18e9d3183a8 <col:9, col:14> 'int' lvalue ->ibuf_len 0x18e9d308328
|   |   | | `-ImplicitCastExpr 0x18e9d318390 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x18e9d318370 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d314448 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-ImplicitCastExpr 0x18e9d3183f8 <col:26> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x18e9d3183d8 <col:26> 'int' lvalue Var 0x18e9d3142f8 'i' 'int'
|   |   |-CompoundAssignOperator 0x18e9d318498 <line:108:9, col:16> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x18e9d318440 <col:9> 'int' lvalue Var 0x18e9d314378 'num' 'int'
|   |   | `-ImplicitCastExpr 0x18e9d318480 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x18e9d318460 <col:16> 'int' lvalue Var 0x18e9d3142f8 'i' 'int'
|   |   |-IfStmt 0x18e9d3185c0 <line:109:9, line:110:24>
|   |   | |-BinaryOperator 0x18e9d318538 <line:109:13, col:21> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x18e9d318508 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x18e9d3184c8 <col:13> 'int' lvalue ParmVar 0x18e9d314168 'outl' 'int'
|   |   | | `-ImplicitCastExpr 0x18e9d318520 <col:21> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x18e9d3184e8 <col:21> 'int' lvalue Var 0x18e9d3142f8 'i' 'int'
|   |   | `-ReturnStmt 0x18e9d3185b0 <line:110:13, col:24>
|   |   |   `-ImplicitCastExpr 0x18e9d318598 <col:20, col:24> 'int' <LValueToRValue>
|   |   |     `-ParenExpr 0x18e9d318578 <col:20, col:24> 'int' lvalue
|   |   |       `-DeclRefExpr 0x18e9d318558 <col:21> 'int' lvalue Var 0x18e9d314378 'num' 'int'
|   |   |-CompoundAssignOperator 0x18e9d318630 <line:111:9, col:17> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x18e9d3185d8 <col:9> 'int' lvalue ParmVar 0x18e9d314168 'outl' 'int'
|   |   | `-ImplicitCastExpr 0x18e9d318618 <col:17> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x18e9d3185f8 <col:17> 'int' lvalue Var 0x18e9d3142f8 'i' 'int'
|   |   `-CompoundAssignOperator 0x18e9d3186b8 <line:112:9, col:16> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |     |-DeclRefExpr 0x18e9d318660 <col:9> 'char *' lvalue ParmVar 0x18e9d3140e8 'out' 'char *'
|   |     `-ImplicitCastExpr 0x18e9d3186a0 <col:16> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x18e9d318680 <col:16> 'int' lvalue Var 0x18e9d3142f8 'i' 'int'
|   |-IfStmt 0x18e9d313160 <line:121:5, line:137:5>
|   | |-BinaryOperator 0x18e9d318808 <line:121:9, col:21> 'int' '>'
|   | | |-ImplicitCastExpr 0x18e9d3187d8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x18e9d318750 <col:9> 'int' lvalue ParmVar 0x18e9d314168 'outl' 'int'
|   | | `-ImplicitCastExpr 0x18e9d3187f0 <col:16, col:21> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x18e9d3187a8 <col:16, col:21> 'int' lvalue ->ibuf_size 0x18e9d3081d8
|   | |     `-ImplicitCastExpr 0x18e9d318790 <col:16> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x18e9d318770 <col:16> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d314448 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-CompoundStmt 0x18e9d313148 <col:32, line:137:5>
|   |   `-ForStmt 0x18e9d313110 <line:122:9, line:136:9>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     `-CompoundStmt 0x18e9d3130d8 <line:122:18, line:136:9>
|   |       |-IfStmt 0x18e9d312e18 <line:124:13, line:130:13>
|   |       | |-BinaryOperator 0x18e9d3189f8 <line:124:17, col:22> 'int' '<='
|   |       | | |-ImplicitCastExpr 0x18e9d3189e0 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x18e9d318998 <col:17> 'int' lvalue Var 0x18e9d3142f8 'i' 'int'
|   |       | | `-IntegerLiteral 0x18e9d3189b8 <col:22> 'int' 0
|   |       | `-CompoundStmt 0x18e9d312df8 <col:25, line:130:13>
|   |       |   |-IfStmt 0x18e9d312ce0 <line:126:17, line:127:48>
|   |       |   | |-BinaryOperator 0x18e9d318b88 <line:126:21, col:25> 'int' '<'
|   |       |   | | |-ImplicitCastExpr 0x18e9d318b70 <col:21> 'int' <LValueToRValue>
|   |       |   | | | `-DeclRefExpr 0x18e9d318b28 <col:21> 'int' lvalue Var 0x18e9d3142f8 'i' 'int'
|   |       |   | | `-IntegerLiteral 0x18e9d318b48 <col:25> 'int' 0
|   |       |   | `-ReturnStmt 0x18e9d312cd0 <line:127:21, col:48>
|   |       |   |   `-ParenExpr 0x18e9d312cb0 <col:28, col:48> 'int'
|   |       |   |     `-ConditionalOperator 0x18e9d312c80 <col:29, col:47> 'int'
|   |       |   |       |-ParenExpr 0x18e9d318c28 <col:29, col:37> 'int'
|   |       |   |       | `-BinaryOperator 0x18e9d318c08 <col:30, col:36> 'int' '>'
|   |       |   |       |   |-ImplicitCastExpr 0x18e9d318bf0 <col:30> 'int' <LValueToRValue>
|   |       |   |       |   | `-DeclRefExpr 0x18e9d318ba8 <col:30> 'int' lvalue Var 0x18e9d314378 'num' 'int'
|   |       |   |       |   `-IntegerLiteral 0x18e9d318bc8 <col:36> 'int' 0
|   |       |   |       |-ImplicitCastExpr 0x18e9d318c88 <col:41> 'int' <LValueToRValue>
|   |       |   |       | `-DeclRefExpr 0x18e9d318c48 <col:41> 'int' lvalue Var 0x18e9d314378 'num' 'int'
|   |       |   |       `-ImplicitCastExpr 0x18e9d318ca0 <col:47> 'int' <LValueToRValue>
|   |       |   |         `-DeclRefExpr 0x18e9d318c68 <col:47> 'int' lvalue Var 0x18e9d3142f8 'i' 'int'
|   |       |   `-IfStmt 0x18e9d312de0 <line:128:17, line:129:32>
|   |       |     |-BinaryOperator 0x18e9d312d58 <line:128:21, col:26> 'int' '=='
|   |       |     | |-ImplicitCastExpr 0x18e9d312d40 <col:21> 'int' <LValueToRValue>
|   |       |     | | `-DeclRefExpr 0x18e9d312cf8 <col:21> 'int' lvalue Var 0x18e9d3142f8 'i' 'int'
|   |       |     | `-IntegerLiteral 0x18e9d312d18 <col:26> 'int' 0
|   |       |     `-ReturnStmt 0x18e9d312dd0 <line:129:21, col:32>
|   |       |       `-ImplicitCastExpr 0x18e9d312db8 <col:28, col:32> 'int' <LValueToRValue>
|   |       |         `-ParenExpr 0x18e9d312d98 <col:28, col:32> 'int' lvalue
|   |       |           `-DeclRefExpr 0x18e9d312d78 <col:29> 'int' lvalue Var 0x18e9d314378 'num' 'int'
|   |       |-CompoundAssignOperator 0x18e9d312e88 <line:131:13, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-DeclRefExpr 0x18e9d312e30 <col:13> 'int' lvalue Var 0x18e9d314378 'num' 'int'
|   |       | `-ImplicitCastExpr 0x18e9d312e70 <col:20> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x18e9d312e50 <col:20> 'int' lvalue Var 0x18e9d3142f8 'i' 'int'
|   |       |-IfStmt 0x18e9d312fb0 <line:132:13, line:133:28>
|   |       | |-BinaryOperator 0x18e9d312f28 <line:132:17, col:25> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x18e9d312ef8 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x18e9d312eb8 <col:17> 'int' lvalue ParmVar 0x18e9d314168 'outl' 'int'
|   |       | | `-ImplicitCastExpr 0x18e9d312f10 <col:25> 'int' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x18e9d312ed8 <col:25> 'int' lvalue Var 0x18e9d3142f8 'i' 'int'
|   |       | `-ReturnStmt 0x18e9d312fa0 <line:133:17, col:28>
|   |       |   `-ImplicitCastExpr 0x18e9d312f88 <col:24, col:28> 'int' <LValueToRValue>
|   |       |     `-ParenExpr 0x18e9d312f68 <col:24, col:28> 'int' lvalue
|   |       |       `-DeclRefExpr 0x18e9d312f48 <col:25> 'int' lvalue Var 0x18e9d314378 'num' 'int'
|   |       |-CompoundAssignOperator 0x18e9d313020 <line:134:13, col:20> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |       | |-DeclRefExpr 0x18e9d312fc8 <col:13> 'char *' lvalue ParmVar 0x18e9d3140e8 'out' 'char *'
|   |       | `-ImplicitCastExpr 0x18e9d313008 <col:20> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x18e9d312fe8 <col:20> 'int' lvalue Var 0x18e9d3142f8 'i' 'int'
|   |       `-CompoundAssignOperator 0x18e9d3130a8 <line:135:13, col:21> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |         |-DeclRefExpr 0x18e9d313050 <col:13> 'int' lvalue ParmVar 0x18e9d314168 'outl' 'int'
|   |         `-ImplicitCastExpr 0x18e9d313090 <col:21> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x18e9d313070 <col:21> 'int' lvalue Var 0x18e9d3142f8 'i' 'int'
|   |-IfStmt 0x18e9d313650 <line:142:5, line:148:5>
|   | |-BinaryOperator 0x18e9d3132e8 <line:142:9, col:14> 'int' '<='
|   | | |-ImplicitCastExpr 0x18e9d3132d0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x18e9d313288 <col:9> 'int' lvalue Var 0x18e9d3142f8 'i' 'int'
|   | | `-IntegerLiteral 0x18e9d3132a8 <col:14> 'int' 0
|   | `-CompoundStmt 0x18e9d313630 <col:17, line:148:5>
|   |   |-IfStmt 0x18e9d313518 <line:144:9, line:145:40>
|   |   | |-BinaryOperator 0x18e9d313388 <line:144:13, col:17> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x18e9d313370 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x18e9d313328 <col:13> 'int' lvalue Var 0x18e9d3142f8 'i' 'int'
|   |   | | `-IntegerLiteral 0x18e9d313348 <col:17> 'int' 0
|   |   | `-ReturnStmt 0x18e9d313508 <line:145:13, col:40>
|   |   |   `-ParenExpr 0x18e9d3134e8 <col:20, col:40> 'int'
|   |   |     `-ConditionalOperator 0x18e9d3134b8 <col:21, col:39> 'int'
|   |   |       |-ParenExpr 0x18e9d313428 <col:21, col:29> 'int'
|   |   |       | `-BinaryOperator 0x18e9d313408 <col:22, col:28> 'int' '>'
|   |   |       |   |-ImplicitCastExpr 0x18e9d3133f0 <col:22> 'int' <LValueToRValue>
|   |   |       |   | `-DeclRefExpr 0x18e9d3133a8 <col:22> 'int' lvalue Var 0x18e9d314378 'num' 'int'
|   |   |       |   `-IntegerLiteral 0x18e9d3133c8 <col:28> 'int' 0
|   |   |       |-ImplicitCastExpr 0x18e9d313488 <col:33> 'int' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x18e9d313448 <col:33> 'int' lvalue Var 0x18e9d314378 'num' 'int'
|   |   |       `-ImplicitCastExpr 0x18e9d3134a0 <col:39> 'int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x18e9d313468 <col:39> 'int' lvalue Var 0x18e9d3142f8 'i' 'int'
|   |   `-IfStmt 0x18e9d313618 <line:146:9, line:147:24>
|   |     |-BinaryOperator 0x18e9d313590 <line:146:13, col:18> 'int' '=='
|   |     | |-ImplicitCastExpr 0x18e9d313578 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x18e9d313530 <col:13> 'int' lvalue Var 0x18e9d3142f8 'i' 'int'
|   |     | `-IntegerLiteral 0x18e9d313550 <col:18> 'int' 0
|   |     `-ReturnStmt 0x18e9d313608 <line:147:13, col:24>
|   |       `-ImplicitCastExpr 0x18e9d3135f0 <col:20, col:24> 'int' <LValueToRValue>
|   |         `-ParenExpr 0x18e9d3135d0 <col:20, col:24> 'int' lvalue
|   |           `-DeclRefExpr 0x18e9d3135b0 <col:21> 'int' lvalue Var 0x18e9d314378 'num' 'int'
|   |-BinaryOperator 0x18e9d3136f8 <line:149:5, col:21> 'int' '='
|   | |-MemberExpr 0x18e9d3136a0 <col:5, col:10> 'int' lvalue ->ibuf_off 0x18e9d308398
|   | | `-ImplicitCastExpr 0x18e9d313688 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x18e9d313668 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d314448 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-IntegerLiteral 0x18e9d3136d0 <col:21> 'int' 0
|   |-BinaryOperator 0x18e9d3137b8 <line:150:5, col:21> 'int' '='
|   | |-MemberExpr 0x18e9d313750 <col:5, col:10> 'int' lvalue ->ibuf_len 0x18e9d308328
|   | | `-ImplicitCastExpr 0x18e9d313738 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x18e9d313718 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d314448 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-ImplicitCastExpr 0x18e9d3137a0 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x18e9d313780 <col:21> 'int' lvalue Var 0x18e9d3142f8 'i' 'int'
|   `-GotoStmt 0x18e9d3137d8 <line:153:5, col:10> 'start' 0x18e9d314b10
|-FunctionDecl 0x18e9d317dc0 <line:105:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x18e9d317e60 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x18e9d317ec8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x18e9d317f30 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x18e9d313a20 <line:156:1, line:231:1> line:156:12 invalid buffer_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x18e9d313878 <col:25, col:30> col:30 invalid b 'int *'
| |-ParmVarDecl 0x18e9d3138f8 <col:33, col:45> col:45 used in 'const char *'
| |-ParmVarDecl 0x18e9d313978 <col:49, col:53> col:53 used inl 'int'
| `-CompoundStmt 0x18e9d3124a8 <line:157:1, line:231:1>
|   |-DeclStmt 0x18e9d313c30 <line:158:5, col:19>
|   | |-VarDecl 0x18e9d313b08 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x18e9d313b88 <col:5, col:18> col:12 used num 'int' cinit
|   |   `-IntegerLiteral 0x18e9d313bf0 <col:18> 'int' 0
|   |-DeclStmt 0x18e9d310cc8 <line:159:5, col:26>
|   | `-VarDecl 0x18e9d310c60 <col:5, col:23> col:23 used ctx 'BIO_F_BUFFER_CTX *'
|   |-IfStmt 0x18e9d310f40 <line:161:5, line:162:18>
|   | |-BinaryOperator 0x18e9d310ec8 <line:161:9, col:34> 'int' '||'
|   | | |-ParenExpr 0x18e9d310df0 <col:9, col:20> 'int'
|   | | | `-BinaryOperator 0x18e9d310dd0 <col:10, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x18e9d310da0 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:161:10> 'const char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x18e9d310ce0 <col:10> 'const char *' lvalue ParmVar 0x18e9d3138f8 'in' 'const char *'
|   | | |   `-ImplicitCastExpr 0x18e9d310db8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |     `-ParenExpr 0x18e9d310d80 <col:17, col:27> 'void *'
|   | | |       `-CStyleCastExpr 0x18e9d310d58 <col:18, col:26> 'void *' <NullToPointer>
|   | | |         `-IntegerLiteral 0x18e9d310d18 <col:26> 'int' 0
|   | | `-ParenExpr 0x18e9d310ea8 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:161:25, col:34> 'int'
|   | |   `-BinaryOperator 0x18e9d310e88 <col:26, col:33> 'int' '<='
|   | |     |-ImplicitCastExpr 0x18e9d310e70 <col:26> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x18e9d310e10 <col:26> 'int' lvalue ParmVar 0x18e9d313978 'inl' 'int'
|   | |     `-IntegerLiteral 0x18e9d310e48 <col:33> 'int' 0
|   | `-ReturnStmt 0x18e9d310f30 <line:162:9, col:18>
|   |   `-ParenExpr 0x18e9d310f10 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x18e9d310ee8 <col:17> 'int' 0
|   |-IfStmt 0x18e9d3111a0 <line:164:5, line:165:18>
|   | |-OpaqueValueExpr 0x18e9d311188 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x18e9d311178 <col:9, col:18>
|   |   `-ParenExpr 0x18e9d311158 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x18e9d311130 <col:17> 'int' 0
|   |-LabelStmt 0x18e9d311460 <line:168:2, line:169:56> 'start'
|   | `-BinaryOperator 0x18e9d3113f0 <col:5, col:56> 'int' '='
|   |   |-DeclRefExpr 0x18e9d3111d8 <col:5> 'int' lvalue Var 0x18e9d313b08 'i' 'int'
|   |   `-BinaryOperator 0x18e9d3113d0 <col:9, col:56> 'int' '-'
|   |     |-ImplicitCastExpr 0x18e9d3113b8 <col:9, col:14> 'int' <LValueToRValue>
|   |     | `-MemberExpr 0x18e9d311248 <col:9, col:14> 'int' lvalue ->obuf_size 0x18e9d308248
|   |     |   `-ImplicitCastExpr 0x18e9d311230 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x18e9d311210 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d310c60 'ctx' 'BIO_F_BUFFER_CTX *'
|   |     `-ParenExpr 0x18e9d311398 <col:26, col:56> 'int'
|   |       `-BinaryOperator 0x18e9d311378 <col:27, col:48> 'int' '+'
|   |         |-ImplicitCastExpr 0x18e9d311348 <col:27, col:32> 'int' <LValueToRValue>
|   |         | `-MemberExpr 0x18e9d3112b0 <col:27, col:32> 'int' lvalue ->obuf_len 0x18e9d308478
|   |         |   `-ImplicitCastExpr 0x18e9d311298 <col:27> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |         |     `-DeclRefExpr 0x18e9d311278 <col:27> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d310c60 'ctx' 'BIO_F_BUFFER_CTX *'
|   |         `-ImplicitCastExpr 0x18e9d311360 <col:43, col:48> 'int' <LValueToRValue>
|   |           `-MemberExpr 0x18e9d311318 <col:43, col:48> 'int' lvalue ->obuf_off 0x18e9d3084e8
|   |             `-ImplicitCastExpr 0x18e9d311300 <col:43> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |               `-DeclRefExpr 0x18e9d3112e0 <col:43> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d310c60 'ctx' 'BIO_F_BUFFER_CTX *'
|   |-IfStmt 0x18e9d311a28 <line:171:5, line:175:5>
|   | |-BinaryOperator 0x18e9d3114e8 <line:171:9, col:14> 'int' '>='
|   | | |-ImplicitCastExpr 0x18e9d3114b8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x18e9d311478 <col:9> 'int' lvalue Var 0x18e9d313b08 'i' 'int'
|   | | `-ImplicitCastExpr 0x18e9d3114d0 <col:14> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x18e9d311498 <col:14> 'int' lvalue ParmVar 0x18e9d313978 'inl' 'int'
|   | `-CompoundStmt 0x18e9d311a00 <col:19, line:175:5>
|   |   |-CallExpr 0x18e9d3117a8 <line:172:9, col:68> 'void *'
|   |   | |-ImplicitCastExpr 0x18e9d311790 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x18e9d311508 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x18e9d317dc0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x18e9d3117e0 <col:16, col:58> 'void *' <BitCast>
|   |   | | `-UnaryOperator 0x18e9d311708 <col:16, col:58> 'char *' prefix '&' cannot overflow
|   |   | |   `-ParenExpr 0x18e9d3116e8 <col:17, col:58> 'char' lvalue
|   |   | |     `-ArraySubscriptExpr 0x18e9d3116c8 <col:18, col:57> 'char' lvalue
|   |   | |       |-ImplicitCastExpr 0x18e9d3116b0 <col:18, col:23> 'char *' <LValueToRValue>
|   |   | |       | `-MemberExpr 0x18e9d311560 <col:18, col:23> 'char *' lvalue ->obuf 0x18e9d308408
|   |   | |       |   `-ImplicitCastExpr 0x18e9d311548 <col:18> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |       |     `-DeclRefExpr 0x18e9d311528 <col:18> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d310c60 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |       `-BinaryOperator 0x18e9d311690 <col:28, col:49> 'int' '+'
|   |   | |         |-ImplicitCastExpr 0x18e9d311660 <col:28, col:33> 'int' <LValueToRValue>
|   |   | |         | `-MemberExpr 0x18e9d3115c8 <col:28, col:33> 'int' lvalue ->obuf_off 0x18e9d3084e8
|   |   | |         |   `-ImplicitCastExpr 0x18e9d3115b0 <col:28> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |         |     `-DeclRefExpr 0x18e9d311590 <col:28> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d310c60 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |         `-ImplicitCastExpr 0x18e9d311678 <col:44, col:49> 'int' <LValueToRValue>
|   |   | |           `-MemberExpr 0x18e9d311630 <col:44, col:49> 'int' lvalue ->obuf_len 0x18e9d308478
|   |   | |             `-ImplicitCastExpr 0x18e9d311618 <col:44> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |               `-DeclRefExpr 0x18e9d3115f8 <col:44> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d310c60 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |-ImplicitCastExpr 0x18e9d311810 <col:61> 'const void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x18e9d3117f8 <col:61> 'const char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x18e9d311720 <col:61> 'const char *' lvalue ParmVar 0x18e9d3138f8 'in' 'const char *'
|   |   | `-ImplicitCastExpr 0x18e9d311840 <col:65> 'unsigned long long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x18e9d311828 <col:65> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x18e9d311740 <col:65> 'int' lvalue ParmVar 0x18e9d313978 'inl' 'int'
|   |   |-CompoundAssignOperator 0x18e9d3118f8 <line:173:9, col:26> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x18e9d311890 <col:9, col:14> 'int' lvalue ->obuf_len 0x18e9d308478
|   |   | | `-ImplicitCastExpr 0x18e9d311878 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x18e9d311858 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d310c60 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-ImplicitCastExpr 0x18e9d3118e0 <col:26> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x18e9d3118c0 <col:26> 'int' lvalue ParmVar 0x18e9d313978 'inl' 'int'
|   |   `-ReturnStmt 0x18e9d3119f0 <line:174:9, col:26>
|   |     `-ParenExpr 0x18e9d3119d0 <col:16, col:26> 'int'
|   |       `-BinaryOperator 0x18e9d3119b0 <col:17, col:23> 'int' '+'
|   |         |-ImplicitCastExpr 0x18e9d311980 <col:17> 'int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x18e9d311928 <col:17> 'int' lvalue Var 0x18e9d313b88 'num' 'int'
|   |         `-ImplicitCastExpr 0x18e9d311998 <col:23> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x18e9d311960 <col:23> 'int' lvalue ParmVar 0x18e9d313978 'inl' 'int'
|   |-IfStmt 0x18e9d316bd8 <line:178:5, line:203:5>
|   | |-BinaryOperator 0x18e9d311ae8 <line:178:9, col:26> 'int' '!='
|   | | |-ImplicitCastExpr 0x18e9d311ad0 <col:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x18e9d311a78 <col:9, col:14> 'int' lvalue ->obuf_len 0x18e9d308478
|   | | |   `-ImplicitCastExpr 0x18e9d311a60 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x18e9d311a40 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d310c60 'ctx' 'BIO_F_BUFFER_CTX *'
|   | | `-IntegerLiteral 0x18e9d311aa8 <col:26> 'int' 0
|   | `-CompoundStmt 0x18e9d316bb8 <col:29, line:203:5>
|   |   |-IfStmt 0x18e9d3161e0 <line:179:9, line:185:9>
|   |   | |-BinaryOperator 0x18e9d311b68 <line:179:13, col:17> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x18e9d311b50 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x18e9d311b08 <col:13> 'int' lvalue Var 0x18e9d313b08 'i' 'int'
|   |   | | `-IntegerLiteral 0x18e9d311b28 <col:17> 'int' 0
|   |   | `-CompoundStmt 0x18e9d3161a8 <col:20, line:185:9>
|   |   |   |-CallExpr 0x18e9d315e90 <line:180:13, col:70> 'void *'
|   |   |   | |-ImplicitCastExpr 0x18e9d315e78 <col:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x18e9d311b88 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x18e9d317dc0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   |   | |-ImplicitCastExpr 0x18e9d315ec8 <col:20, col:62> 'void *' <BitCast>
|   |   |   | | `-UnaryOperator 0x18e9d315df0 <col:20, col:62> 'char *' prefix '&' cannot overflow
|   |   |   | |   `-ParenExpr 0x18e9d315dd0 <col:21, col:62> 'char' lvalue
|   |   |   | |     `-ArraySubscriptExpr 0x18e9d315db0 <col:22, col:61> 'char' lvalue
|   |   |   | |       |-ImplicitCastExpr 0x18e9d315d98 <col:22, col:27> 'char *' <LValueToRValue>
|   |   |   | |       | `-MemberExpr 0x18e9d311be0 <col:22, col:27> 'char *' lvalue ->obuf 0x18e9d308408
|   |   |   | |       |   `-ImplicitCastExpr 0x18e9d311bc8 <col:22> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |       |     `-DeclRefExpr 0x18e9d311ba8 <col:22> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d310c60 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | |       `-BinaryOperator 0x18e9d315d78 <col:32, col:53> 'int' '+'
|   |   |   | |         |-ImplicitCastExpr 0x18e9d315d48 <col:32, col:37> 'int' <LValueToRValue>
|   |   |   | |         | `-MemberExpr 0x18e9d315cb0 <col:32, col:37> 'int' lvalue ->obuf_off 0x18e9d3084e8
|   |   |   | |         |   `-ImplicitCastExpr 0x18e9d311c30 <col:32> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |         |     `-DeclRefExpr 0x18e9d311c10 <col:32> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d310c60 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | |         `-ImplicitCastExpr 0x18e9d315d60 <col:48, col:53> 'int' <LValueToRValue>
|   |   |   | |           `-MemberExpr 0x18e9d315d18 <col:48, col:53> 'int' lvalue ->obuf_len 0x18e9d308478
|   |   |   | |             `-ImplicitCastExpr 0x18e9d315d00 <col:48> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |               `-DeclRefExpr 0x18e9d315ce0 <col:48> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d310c60 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | |-ImplicitCastExpr 0x18e9d315ef8 <col:65> 'const void *' <BitCast>
|   |   |   | | `-ImplicitCastExpr 0x18e9d315ee0 <col:65> 'const char *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x18e9d315e08 <col:65> 'const char *' lvalue ParmVar 0x18e9d3138f8 'in' 'const char *'
|   |   |   | `-ImplicitCastExpr 0x18e9d315f28 <col:69> 'unsigned long long' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x18e9d315f10 <col:69> 'int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x18e9d315e28 <col:69> 'int' lvalue Var 0x18e9d313b08 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x18e9d315f98 <line:181:13, col:19> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |   |   | |-DeclRefExpr 0x18e9d315f40 <col:13> 'const char *' lvalue ParmVar 0x18e9d3138f8 'in' 'const char *'
|   |   |   | `-ImplicitCastExpr 0x18e9d315f80 <col:19> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x18e9d315f60 <col:19> 'int' lvalue Var 0x18e9d313b08 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x18e9d316020 <line:182:13, col:20> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-DeclRefExpr 0x18e9d315fc8 <col:13> 'int' lvalue ParmVar 0x18e9d313978 'inl' 'int'
|   |   |   | `-ImplicitCastExpr 0x18e9d316008 <col:20> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x18e9d315fe8 <col:20> 'int' lvalue Var 0x18e9d313b08 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x18e9d3160a8 <line:183:13, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-DeclRefExpr 0x18e9d316050 <col:13> 'int' lvalue Var 0x18e9d313b88 'num' 'int'
|   |   |   | `-ImplicitCastExpr 0x18e9d316090 <col:20> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x18e9d316070 <col:20> 'int' lvalue Var 0x18e9d313b08 'i' 'int'
|   |   |   `-CompoundAssignOperator 0x18e9d316178 <line:184:13, col:30> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |-MemberExpr 0x18e9d316110 <col:13, col:18> 'int' lvalue ->obuf_len 0x18e9d308478
|   |   |     | `-ImplicitCastExpr 0x18e9d3160f8 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x18e9d3160d8 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d310c60 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     `-ImplicitCastExpr 0x18e9d316160 <col:30> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x18e9d316140 <col:30> 'int' lvalue Var 0x18e9d313b08 'i' 'int'
|   |   `-ForStmt 0x18e9d316b80 <line:187:9, line:202:9>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     `-CompoundStmt 0x18e9d316b50 <line:187:18, line:202:9>
|   |       |-IfStmt 0x18e9d3168b0 <line:190:13, line:197:13>
|   |       | |-BinaryOperator 0x18e9d316548 <line:190:17, col:22> 'int' '<='
|   |       | | |-ImplicitCastExpr 0x18e9d316530 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x18e9d3164e8 <col:17> 'int' lvalue Var 0x18e9d313b08 'i' 'int'
|   |       | | `-IntegerLiteral 0x18e9d316508 <col:22> 'int' 0
|   |       | `-CompoundStmt 0x18e9d316890 <col:25, line:197:13>
|   |       |   |-IfStmt 0x18e9d316778 <line:193:17, line:194:48>
|   |       |   | |-BinaryOperator 0x18e9d3165e8 <line:193:21, col:25> 'int' '<'
|   |       |   | | |-ImplicitCastExpr 0x18e9d3165d0 <col:21> 'int' <LValueToRValue>
|   |       |   | | | `-DeclRefExpr 0x18e9d316588 <col:21> 'int' lvalue Var 0x18e9d313b08 'i' 'int'
|   |       |   | | `-IntegerLiteral 0x18e9d3165a8 <col:25> 'int' 0
|   |       |   | `-ReturnStmt 0x18e9d316768 <line:194:21, col:48>
|   |       |   |   `-ParenExpr 0x18e9d316748 <col:28, col:48> 'int'
|   |       |   |     `-ConditionalOperator 0x18e9d316718 <col:29, col:47> 'int'
|   |       |   |       |-ParenExpr 0x18e9d316688 <col:29, col:37> 'int'
|   |       |   |       | `-BinaryOperator 0x18e9d316668 <col:30, col:36> 'int' '>'
|   |       |   |       |   |-ImplicitCastExpr 0x18e9d316650 <col:30> 'int' <LValueToRValue>
|   |       |   |       |   | `-DeclRefExpr 0x18e9d316608 <col:30> 'int' lvalue Var 0x18e9d313b88 'num' 'int'
|   |       |   |       |   `-IntegerLiteral 0x18e9d316628 <col:36> 'int' 0
|   |       |   |       |-ImplicitCastExpr 0x18e9d3166e8 <col:41> 'int' <LValueToRValue>
|   |       |   |       | `-DeclRefExpr 0x18e9d3166a8 <col:41> 'int' lvalue Var 0x18e9d313b88 'num' 'int'
|   |       |   |       `-ImplicitCastExpr 0x18e9d316700 <col:47> 'int' <LValueToRValue>
|   |       |   |         `-DeclRefExpr 0x18e9d3166c8 <col:47> 'int' lvalue Var 0x18e9d313b08 'i' 'int'
|   |       |   `-IfStmt 0x18e9d316878 <line:195:17, line:196:32>
|   |       |     |-BinaryOperator 0x18e9d3167f0 <line:195:21, col:26> 'int' '=='
|   |       |     | |-ImplicitCastExpr 0x18e9d3167d8 <col:21> 'int' <LValueToRValue>
|   |       |     | | `-DeclRefExpr 0x18e9d316790 <col:21> 'int' lvalue Var 0x18e9d313b08 'i' 'int'
|   |       |     | `-IntegerLiteral 0x18e9d3167b0 <col:26> 'int' 0
|   |       |     `-ReturnStmt 0x18e9d316868 <line:196:21, col:32>
|   |       |       `-ImplicitCastExpr 0x18e9d316850 <col:28, col:32> 'int' <LValueToRValue>
|   |       |         `-ParenExpr 0x18e9d316830 <col:28, col:32> 'int' lvalue
|   |       |           `-DeclRefExpr 0x18e9d316810 <col:29> 'int' lvalue Var 0x18e9d313b88 'num' 'int'
|   |       |-CompoundAssignOperator 0x18e9d316968 <line:198:13, col:30> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-MemberExpr 0x18e9d316900 <col:13, col:18> 'int' lvalue ->obuf_off 0x18e9d3084e8
|   |       | | `-ImplicitCastExpr 0x18e9d3168e8 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x18e9d3168c8 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d310c60 'ctx' 'BIO_F_BUFFER_CTX *'
|   |       | `-ImplicitCastExpr 0x18e9d316950 <col:30> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x18e9d316930 <col:30> 'int' lvalue Var 0x18e9d313b08 'i' 'int'
|   |       |-CompoundAssignOperator 0x18e9d316a38 <line:199:13, col:30> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-MemberExpr 0x18e9d3169d0 <col:13, col:18> 'int' lvalue ->obuf_len 0x18e9d308478
|   |       | | `-ImplicitCastExpr 0x18e9d3169b8 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x18e9d316998 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d310c60 'ctx' 'BIO_F_BUFFER_CTX *'
|   |       | `-ImplicitCastExpr 0x18e9d316a20 <col:30> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x18e9d316a00 <col:30> 'int' lvalue Var 0x18e9d313b08 'i' 'int'
|   |       `-IfStmt 0x18e9d316b38 <line:200:13, line:201:17>
|   |         |-BinaryOperator 0x18e9d316b10 <line:200:17, col:34> 'int' '=='
|   |         | |-ImplicitCastExpr 0x18e9d316af8 <col:17, col:22> 'int' <LValueToRValue>
|   |         | | `-MemberExpr 0x18e9d316aa0 <col:17, col:22> 'int' lvalue ->obuf_len 0x18e9d308478
|   |         | |   `-ImplicitCastExpr 0x18e9d316a88 <col:17> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |         | |     `-DeclRefExpr 0x18e9d316a68 <col:17> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d310c60 'ctx' 'BIO_F_BUFFER_CTX *'
|   |         | `-IntegerLiteral 0x18e9d316ad0 <col:34> 'int' 0
|   |         `-BreakStmt 0x18e9d316b30 <line:201:17>
|   |-BinaryOperator 0x18e9d316c80 <line:208:5, col:21> 'int' '='
|   | |-MemberExpr 0x18e9d316c28 <col:5, col:10> 'int' lvalue ->obuf_off 0x18e9d3084e8
|   | | `-ImplicitCastExpr 0x18e9d316c10 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x18e9d316bf0 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d310c60 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-IntegerLiteral 0x18e9d316c58 <col:21> 'int' 0
|   |-WhileStmt 0x18e9d312478 <line:211:5, line:225:5>
|   | |-BinaryOperator 0x18e9d311d28 <line:211:12, col:24> 'int' '>='
|   | | |-ImplicitCastExpr 0x18e9d311cf8 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x18e9d311c70 <col:12> 'int' lvalue ParmVar 0x18e9d313978 'inl' 'int'
|   | | `-ImplicitCastExpr 0x18e9d311d10 <col:19, col:24> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x18e9d311cc8 <col:19, col:24> 'int' lvalue ->obuf_size 0x18e9d308248
|   | |     `-ImplicitCastExpr 0x18e9d311cb0 <col:19> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x18e9d311c90 <col:19> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d310c60 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-CompoundStmt 0x18e9d312440 <col:35, line:225:5>
|   |   |-IfStmt 0x18e9d312190 <line:213:9, line:219:9>
|   |   | |-BinaryOperator 0x18e9d311e28 <line:213:13, col:18> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x18e9d311e10 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x18e9d311dc8 <col:13> 'int' lvalue Var 0x18e9d313b08 'i' 'int'
|   |   | | `-IntegerLiteral 0x18e9d311de8 <col:18> 'int' 0
|   |   | `-CompoundStmt 0x18e9d312170 <col:21, line:219:9>
|   |   |   |-IfStmt 0x18e9d312058 <line:215:13, line:216:44>
|   |   |   | |-BinaryOperator 0x18e9d311ec8 <line:215:17, col:21> 'int' '<'
|   |   |   | | |-ImplicitCastExpr 0x18e9d311eb0 <col:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x18e9d311e68 <col:17> 'int' lvalue Var 0x18e9d313b08 'i' 'int'
|   |   |   | | `-IntegerLiteral 0x18e9d311e88 <col:21> 'int' 0
|   |   |   | `-ReturnStmt 0x18e9d312048 <line:216:17, col:44>
|   |   |   |   `-ParenExpr 0x18e9d312028 <col:24, col:44> 'int'
|   |   |   |     `-ConditionalOperator 0x18e9d311ff8 <col:25, col:43> 'int'
|   |   |   |       |-ParenExpr 0x18e9d311f68 <col:25, col:33> 'int'
|   |   |   |       | `-BinaryOperator 0x18e9d311f48 <col:26, col:32> 'int' '>'
|   |   |   |       |   |-ImplicitCastExpr 0x18e9d311f30 <col:26> 'int' <LValueToRValue>
|   |   |   |       |   | `-DeclRefExpr 0x18e9d311ee8 <col:26> 'int' lvalue Var 0x18e9d313b88 'num' 'int'
|   |   |   |       |   `-IntegerLiteral 0x18e9d311f08 <col:32> 'int' 0
|   |   |   |       |-ImplicitCastExpr 0x18e9d311fc8 <col:37> 'int' <LValueToRValue>
|   |   |   |       | `-DeclRefExpr 0x18e9d311f88 <col:37> 'int' lvalue Var 0x18e9d313b88 'num' 'int'
|   |   |   |       `-ImplicitCastExpr 0x18e9d311fe0 <col:43> 'int' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x18e9d311fa8 <col:43> 'int' lvalue Var 0x18e9d313b08 'i' 'int'
|   |   |   `-IfStmt 0x18e9d312158 <line:217:13, line:218:28>
|   |   |     |-BinaryOperator 0x18e9d3120d0 <line:217:17, col:22> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x18e9d3120b8 <col:17> 'int' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x18e9d312070 <col:17> 'int' lvalue Var 0x18e9d313b08 'i' 'int'
|   |   |     | `-IntegerLiteral 0x18e9d312090 <col:22> 'int' 0
|   |   |     `-ReturnStmt 0x18e9d312148 <line:218:17, col:28>
|   |   |       `-ImplicitCastExpr 0x18e9d312130 <col:24, col:28> 'int' <LValueToRValue>
|   |   |         `-ParenExpr 0x18e9d312110 <col:24, col:28> 'int' lvalue
|   |   |           `-DeclRefExpr 0x18e9d3120f0 <col:25> 'int' lvalue Var 0x18e9d313b88 'num' 'int'
|   |   |-CompoundAssignOperator 0x18e9d312200 <line:220:9, col:16> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x18e9d3121a8 <col:9> 'int' lvalue Var 0x18e9d313b88 'num' 'int'
|   |   | `-ImplicitCastExpr 0x18e9d3121e8 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x18e9d3121c8 <col:16> 'int' lvalue Var 0x18e9d313b08 'i' 'int'
|   |   |-CompoundAssignOperator 0x18e9d312288 <line:221:9, col:15> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |   | |-DeclRefExpr 0x18e9d312230 <col:9> 'const char *' lvalue ParmVar 0x18e9d3138f8 'in' 'const char *'
|   |   | `-ImplicitCastExpr 0x18e9d312270 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x18e9d312250 <col:15> 'int' lvalue Var 0x18e9d313b08 'i' 'int'
|   |   |-CompoundAssignOperator 0x18e9d312310 <line:222:9, col:16> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x18e9d3122b8 <col:9> 'int' lvalue ParmVar 0x18e9d313978 'inl' 'int'
|   |   | `-ImplicitCastExpr 0x18e9d3122f8 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x18e9d3122d8 <col:16> 'int' lvalue Var 0x18e9d313b08 'i' 'int'
|   |   `-IfStmt 0x18e9d312428 <line:223:9, line:224:24>
|   |     |-BinaryOperator 0x18e9d3123a0 <line:223:13, col:20> 'int' '=='
|   |     | |-ImplicitCastExpr 0x18e9d312388 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x18e9d312340 <col:13> 'int' lvalue ParmVar 0x18e9d313978 'inl' 'int'
|   |     | `-IntegerLiteral 0x18e9d312360 <col:20> 'int' 0
|   |     `-ReturnStmt 0x18e9d312418 <line:224:13, col:24>
|   |       `-ImplicitCastExpr 0x18e9d312400 <col:20, col:24> 'int' <LValueToRValue>
|   |         `-ParenExpr 0x18e9d3123e0 <col:20, col:24> 'int' lvalue
|   |           `-DeclRefExpr 0x18e9d3123c0 <col:21> 'int' lvalue Var 0x18e9d313b88 'num' 'int'
|   `-GotoStmt 0x18e9d312490 <line:230:5, col:10> 'start' 0x18e9d311410
|-FunctionDecl 0x18e9d312750 <line:233:1, line:389:1> line:233:13 invalid buffer_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x18e9d312520 <col:25, col:30> col:30 invalid b 'int *'
| |-ParmVarDecl 0x18e9d3125a0 <col:33, col:37> col:37 used cmd 'int'
| |-ParmVarDecl 0x18e9d312620 <col:42, col:47> col:47 used num 'long'
| |-ParmVarDecl 0x18e9d3126a0 <col:52, col:58> col:58 used ptr 'void *'
| `-CompoundStmt 0x18e9d31e098 <line:234:1, line:389:1>
|   |-DeclStmt 0x18e9d3128a0 <line:236:5, col:26>
|   | `-VarDecl 0x18e9d312838 <col:5, col:23> col:23 used ctx 'BIO_F_BUFFER_CTX *'
|   |-DeclStmt 0x18e9d312978 <line:237:5, col:17>
|   | `-VarDecl 0x18e9d3128d0 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x18e9d312960 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x18e9d312938 <col:16> 'int' 1
|   |-DeclStmt 0x18e9d312aa8 <line:238:5, col:18>
|   | |-VarDecl 0x18e9d3129a8 <col:5, col:11> col:11 used p1 'char *'
|   | `-VarDecl 0x18e9d312a28 <col:5, col:16> col:16 used p2 'char *'
|   |-DeclStmt 0x18e9d31ed40 <line:239:5, col:18>
|   | |-VarDecl 0x18e9d312ad8 <col:5, col:9> col:9 used r 'int'
|   | |-VarDecl 0x18e9d312b58 <col:5, col:12> col:12 used i 'int'
|   | `-VarDecl 0x18e9d312bd8 <col:5, col:16> col:16 used ip 'int *'
|   |-DeclStmt 0x18e9d31ee70 <line:240:5, col:17>
|   | |-VarDecl 0x18e9d31ed70 <col:5, col:9> col:9 used ibs 'int'
|   | `-VarDecl 0x18e9d31edf0 <col:5, col:14> col:14 used obs 'int'
|   |-SwitchStmt 0x18e9d31ef10 <line:244:5, line:384:5>
|   | |-ImplicitCastExpr 0x18e9d31eef8 <line:244:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x18e9d31eec0 <col:13> 'int' lvalue ParmVar 0x18e9d3125a0 'cmd' 'int'
|   | `-CompoundStmt 0x18e9d31dd30 <col:18, line:384:5>
|   |   |-BinaryOperator 0x18e9d31efc0 <line:246:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x18e9d31ef68 <col:9, col:14> 'int' lvalue ->ibuf_off 0x18e9d308398
|   |   | | `-ImplicitCastExpr 0x18e9d31ef50 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x18e9d31ef30 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-IntegerLiteral 0x18e9d31ef98 <col:25> 'int' 0
|   |   |-BinaryOperator 0x18e9d31f070 <line:247:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x18e9d31f018 <col:9, col:14> 'int' lvalue ->ibuf_len 0x18e9d308328
|   |   | | `-ImplicitCastExpr 0x18e9d31f000 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x18e9d31efe0 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-IntegerLiteral 0x18e9d31f048 <col:25> 'int' 0
|   |   |-BinaryOperator 0x18e9d31f120 <line:248:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x18e9d31f0c8 <col:9, col:14> 'int' lvalue ->obuf_off 0x18e9d3084e8
|   |   | | `-ImplicitCastExpr 0x18e9d31f0b0 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x18e9d31f090 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-IntegerLiteral 0x18e9d31f0f8 <col:25> 'int' 0
|   |   |-BinaryOperator 0x18e9d31f1d0 <line:249:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x18e9d31f178 <col:9, col:14> 'int' lvalue ->obuf_len 0x18e9d308478
|   |   | | `-ImplicitCastExpr 0x18e9d31f160 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x18e9d31f140 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-IntegerLiteral 0x18e9d31f1a8 <col:25> 'int' 0
|   |   |-IfStmt 0x18e9d31f300 <line:250:9, line:251:22>
|   |   | |-OpaqueValueExpr 0x18e9d31f2e8 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x18e9d31f2d8 <col:13, col:22>
|   |   |   `-ImplicitCastExpr 0x18e9d31f2c0 <col:20, col:22> 'long' <IntegralCast>
|   |   |     `-ParenExpr 0x18e9d31f2a0 <col:20, col:22> 'int'
|   |   |       `-IntegerLiteral 0x18e9d31f278 <col:21> 'int' 0
|   |   |-BreakStmt 0x18e9d31f4f0 <line:253:9>
|   |   |-BinaryOperator 0x18e9d31f5d8 <line:255:9, col:26> 'long' '='
|   |   | |-DeclRefExpr 0x18e9d31f4f8 <col:9> 'long' lvalue Var 0x18e9d3128d0 'ret' 'long'
|   |   | `-CStyleCastExpr 0x18e9d31f5b0 <col:15, col:26> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x18e9d31f598 <col:21, col:26> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     `-MemberExpr 0x18e9d31f550 <col:21, col:26> 'int' lvalue ->obuf_len 0x18e9d308478
|   |   |       `-ImplicitCastExpr 0x18e9d31f538 <col:21> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x18e9d31f518 <col:21> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-BreakStmt 0x18e9d31f5f8 <line:256:9>
|   |   |-BinaryOperator 0x18e9d31f660 <line:258:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x18e9d31f600 <col:9> 'long' lvalue Var 0x18e9d3128d0 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x18e9d31f648 <col:15> 'long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x18e9d31f620 <col:15> 'int' 0
|   |   |-BinaryOperator 0x18e9d31f738 <line:259:9, col:19> 'char *' '='
|   |   | |-DeclRefExpr 0x18e9d31f680 <col:9> 'char *' lvalue Var 0x18e9d3129a8 'p1' 'char *'
|   |   | `-ImplicitCastExpr 0x18e9d31f720 <col:14, col:19> 'char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x18e9d31f6f0 <col:14, col:19> 'char *' lvalue ->ibuf 0x18e9d3082b8
|   |   |     `-ImplicitCastExpr 0x18e9d31f6d8 <col:14> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x18e9d31f6b8 <col:14> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-ForStmt 0x18e9d31fae8 <line:260:9, line:263:9>
|   |   | |-BinaryOperator 0x18e9d31f7b8 <line:260:14, col:18> 'int' '='
|   |   | | |-DeclRefExpr 0x18e9d31f758 <col:14> 'int' lvalue Var 0x18e9d312b58 'i' 'int'
|   |   | | `-IntegerLiteral 0x18e9d31f790 <col:18> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x18e9d31f890 <col:21, col:30> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x18e9d31f860 <col:21> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x18e9d31f7d8 <col:21> 'int' lvalue Var 0x18e9d312b58 'i' 'int'
|   |   | | `-ImplicitCastExpr 0x18e9d31f878 <col:25, col:30> 'int' <LValueToRValue>
|   |   | |   `-MemberExpr 0x18e9d31f830 <col:25, col:30> 'int' lvalue ->ibuf_len 0x18e9d308328
|   |   | |     `-ImplicitCastExpr 0x18e9d31f818 <col:25> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x18e9d31f7f8 <col:25> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |-UnaryOperator 0x18e9d31f8d0 <col:40, col:41> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x18e9d31f8b0 <col:40> 'int' lvalue Var 0x18e9d312b58 'i' 'int'
|   |   | `-CompoundStmt 0x18e9d31fad0 <col:45, line:263:9>
|   |   |   `-IfStmt 0x18e9d31fab8 <line:261:13, line:262:20>
|   |   |     |-BinaryOperator 0x18e9d31fa60 <line:261:17, col:42> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x18e9d31fa48 <col:17, col:37> 'int' <IntegralCast>
|   |   |     | | `-ImplicitCastExpr 0x18e9d31fa30 <col:17, col:37> 'char' <LValueToRValue>
|   |   |     | |   `-ArraySubscriptExpr 0x18e9d31f9f8 <col:17, col:37> 'char' lvalue
|   |   |     | |     |-ImplicitCastExpr 0x18e9d31f9e0 <col:17> 'char *' <LValueToRValue>
|   |   |     | |     | `-DeclRefExpr 0x18e9d31f8e8 <col:17> 'char *' lvalue Var 0x18e9d3129a8 'p1' 'char *'
|   |   |     | |     `-BinaryOperator 0x18e9d31f9c0 <col:20, col:36> 'int' '+'
|   |   |     | |       |-ImplicitCastExpr 0x18e9d31f990 <col:20, col:25> 'int' <LValueToRValue>
|   |   |     | |       | `-MemberExpr 0x18e9d31f940 <col:20, col:25> 'int' lvalue ->ibuf_off 0x18e9d308398
|   |   |     | |       |   `-ImplicitCastExpr 0x18e9d31f928 <col:20> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     | |       |     `-DeclRefExpr 0x18e9d31f908 <col:20> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     | |       `-ImplicitCastExpr 0x18e9d31f9a8 <col:36> 'int' <LValueToRValue>
|   |   |     | |         `-DeclRefExpr 0x18e9d31f970 <col:36> 'int' lvalue Var 0x18e9d312b58 'i' 'int'
|   |   |     | `-CharacterLiteral 0x18e9d31fa18 <col:42> 'int' 10
|   |   |     `-UnaryOperator 0x18e9d31faa0 <line:262:17, col:20> 'long' postfix '++'
|   |   |       `-DeclRefExpr 0x18e9d31fa80 <col:17> 'long' lvalue Var 0x18e9d3128d0 'ret' 'long'
|   |   |-BreakStmt 0x18e9d31fb20 <line:264:9>
|   |   |-BinaryOperator 0x18e9d31fc08 <line:266:9, col:26> 'long' '='
|   |   | |-DeclRefExpr 0x18e9d31fb28 <col:9> 'long' lvalue Var 0x18e9d3128d0 'ret' 'long'
|   |   | `-CStyleCastExpr 0x18e9d31fbe0 <col:15, col:26> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x18e9d31fbc8 <col:21, col:26> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     `-MemberExpr 0x18e9d31fb80 <col:21, col:26> 'int' lvalue ->obuf_len 0x18e9d308478
|   |   |       `-ImplicitCastExpr 0x18e9d31fb68 <col:21> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x18e9d31fb48 <col:21> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-IfStmt 0x18e9d31be88 <line:267:9, line:271:9>
|   |   | |-BinaryOperator 0x18e9d31fca0 <line:267:13, col:20> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x18e9d31fc70 <col:13> 'long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x18e9d31fc28 <col:13> 'long' lvalue Var 0x18e9d3128d0 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x18e9d31fc88 <col:20> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x18e9d31fc48 <col:20> 'int' 0
|   |   | `-CompoundStmt 0x18e9d31be70 <col:23, line:271:9>
|   |   |   `-IfStmt 0x18e9d31bdb8 <line:268:13, line:269:26>
|   |   |     |-OpaqueValueExpr 0x18e9d31bda0 <<invalid sloc>> '_Bool'
|   |   |     `-ReturnStmt 0x18e9d31bd90 <col:17, col:26>
|   |   |       `-ImplicitCastExpr 0x18e9d31bd78 <col:24, col:26> 'long' <IntegralCast>
|   |   |         `-ParenExpr 0x18e9d31bd58 <col:24, col:26> 'int'
|   |   |           `-IntegerLiteral 0x18e9d31bd30 <col:25> 'int' 0
|   |   |-BreakStmt 0x18e9d31bea0 <line:272:9>
|   |   |-BinaryOperator 0x18e9d31bf88 <line:274:9, col:26> 'long' '='
|   |   | |-DeclRefExpr 0x18e9d31bea8 <col:9> 'long' lvalue Var 0x18e9d3128d0 'ret' 'long'
|   |   | `-CStyleCastExpr 0x18e9d31bf60 <col:15, col:26> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x18e9d31bf48 <col:21, col:26> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     `-MemberExpr 0x18e9d31bf00 <col:21, col:26> 'int' lvalue ->ibuf_len 0x18e9d308328
|   |   |       `-ImplicitCastExpr 0x18e9d31bee8 <col:21> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x18e9d31bec8 <col:21> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-IfStmt 0x18e9d31c220 <line:275:9, line:279:9>
|   |   | |-BinaryOperator 0x18e9d31c020 <line:275:13, col:20> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x18e9d31bff0 <col:13> 'long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x18e9d31bfa8 <col:13> 'long' lvalue Var 0x18e9d3128d0 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x18e9d31c008 <col:20> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x18e9d31bfc8 <col:20> 'int' 0
|   |   | `-CompoundStmt 0x18e9d31c208 <col:23, line:279:9>
|   |   |   `-IfStmt 0x18e9d31c150 <line:276:13, line:277:26>
|   |   |     |-OpaqueValueExpr 0x18e9d31c138 <<invalid sloc>> '_Bool'
|   |   |     `-ReturnStmt 0x18e9d31c128 <col:17, col:26>
|   |   |       `-ImplicitCastExpr 0x18e9d31c110 <col:24, col:26> 'long' <IntegralCast>
|   |   |         `-ParenExpr 0x18e9d31c0f0 <col:24, col:26> 'int'
|   |   |           `-IntegerLiteral 0x18e9d31c0c8 <col:25> 'int' 0
|   |   |-BreakStmt 0x18e9d31c238 <line:280:9>
|   |   |-IfStmt 0x18e9d31c7a8 <line:282:9, line:288:9>
|   |   | |-BinaryOperator 0x18e9d31c310 <line:282:13, col:24> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x18e9d31c2c8 <col:13> 'long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x18e9d31c240 <col:13> 'long' lvalue ParmVar 0x18e9d312620 'num' 'long'
|   |   | | `-ImplicitCastExpr 0x18e9d31c2f8 <col:19, col:24> 'long' <IntegralCast>
|   |   | |   `-ImplicitCastExpr 0x18e9d31c2e0 <col:19, col:24> 'int' <LValueToRValue>
|   |   | |     `-MemberExpr 0x18e9d31c298 <col:19, col:24> 'int' lvalue ->ibuf_size 0x18e9d3081d8
|   |   | |       `-ImplicitCastExpr 0x18e9d31c280 <col:19> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x18e9d31c260 <col:19> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-CompoundStmt 0x18e9d31c778 <col:35, line:288:9>
|   |   |   |-BinaryOperator 0x18e9d31c440 <line:283:13, col:41> 'char *' '='
|   |   |   | |-DeclRefExpr 0x18e9d31c330 <col:13> 'char *' lvalue Var 0x18e9d3129a8 'p1' 'char *'
|   |   |   | `-ImplicitCastExpr 0x18e9d31c428 <col:18, col:41> 'char *' <IntegralToPointer>
|   |   |   |   `-CallExpr 0x18e9d31c400 <col:18, col:41> 'int'
|   |   |   |     |-ImplicitCastExpr 0x18e9d31c3e8 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x18e9d31c350 <col:18> 'int ()' Function 0x18e9d316e70 'OPENSSL_malloc' 'int ()'
|   |   |   |     `-CStyleCastExpr 0x18e9d31c3c0 <col:33, col:38> 'int' <IntegralCast>
|   |   |   |       `-ImplicitCastExpr 0x18e9d31c3a8 <col:38> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |   |         `-DeclRefExpr 0x18e9d31c370 <col:38> 'long' lvalue ParmVar 0x18e9d312620 'num' 'long'
|   |   |   |-IfStmt 0x18e9d31c5c0 <line:284:13, line:285:22>
|   |   |   | |-BinaryOperator 0x18e9d31c538 <line:284:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |   |   | | |-ImplicitCastExpr 0x18e9d31c508 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:284:17> 'char *' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x18e9d31c460 <col:17> 'char *' lvalue Var 0x18e9d3129a8 'p1' 'char *'
|   |   |   | | `-ImplicitCastExpr 0x18e9d31c520 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |   |   | |   `-ParenExpr 0x18e9d31c4e8 <col:17, col:27> 'void *'
|   |   |   | |     `-CStyleCastExpr 0x18e9d31c4c0 <col:18, col:26> 'void *' <NullToPointer>
|   |   |   | |       `-IntegerLiteral 0x18e9d31c480 <col:26> 'int' 0
|   |   |   | `-GotoStmt 0x18e9d31c5a8 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:285:17, col:22> 'malloc_error' 0x18e9d31c558
|   |   |   |-CallExpr 0x18e9d31c678 <line:286:13, col:35> 'int'
|   |   |   | |-ImplicitCastExpr 0x18e9d31c660 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x18e9d31c5d8 <col:13> 'int ()' Function 0x18e9d317160 'OPENSSL_free' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x18e9d31c6a0 <col:26, col:31> 'char *' <LValueToRValue>
|   |   |   |   `-MemberExpr 0x18e9d31c630 <col:26, col:31> 'char *' lvalue ->ibuf 0x18e9d3082b8
|   |   |   |     `-ImplicitCastExpr 0x18e9d31c618 <col:26> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x18e9d31c5f8 <col:26> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   `-BinaryOperator 0x18e9d31c758 <line:287:13, col:25> 'char *' '='
|   |   |     |-MemberExpr 0x18e9d31c6f0 <col:13, col:18> 'char *' lvalue ->ibuf 0x18e9d3082b8
|   |   |     | `-ImplicitCastExpr 0x18e9d31c6d8 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x18e9d31c6b8 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     `-ImplicitCastExpr 0x18e9d31c740 <col:25> 'char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x18e9d31c720 <col:25> 'char *' lvalue Var 0x18e9d3129a8 'p1' 'char *'
|   |   |-BinaryOperator 0x18e9d31c850 <line:289:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x18e9d31c7f8 <col:9, col:14> 'int' lvalue ->ibuf_off 0x18e9d308398
|   |   | | `-ImplicitCastExpr 0x18e9d31c7e0 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x18e9d31c7c0 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-IntegerLiteral 0x18e9d31c828 <col:25> 'int' 0
|   |   |-BinaryOperator 0x18e9d31c950 <line:290:9, col:30> 'int' '='
|   |   | |-MemberExpr 0x18e9d31c8a8 <col:9, col:14> 'int' lvalue ->ibuf_len 0x18e9d308328
|   |   | | `-ImplicitCastExpr 0x18e9d31c890 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x18e9d31c870 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-CStyleCastExpr 0x18e9d31c928 <col:25, col:30> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x18e9d31c910 <col:30> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x18e9d31c8d8 <col:30> 'long' lvalue ParmVar 0x18e9d312620 'num' 'long'
|   |   |-CallExpr 0x18e9d31cad8 <line:291:9, col:40> 'void *'
|   |   | |-ImplicitCastExpr 0x18e9d31cac0 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x18e9d31c970 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x18e9d317dc0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x18e9d31cb28 <col:16, col:21> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x18e9d31cb10 <col:16, col:21> 'char *' <LValueToRValue>
|   |   | |   `-MemberExpr 0x18e9d31c9c8 <col:16, col:21> 'char *' lvalue ->ibuf 0x18e9d3082b8
|   |   | |     `-ImplicitCastExpr 0x18e9d31c9b0 <col:16> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x18e9d31c990 <col:16> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |-ImplicitCastExpr 0x18e9d31cb58 <col:27> 'const void *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x18e9d31cb40 <col:27> 'void *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x18e9d31c9f8 <col:27> 'void *' lvalue ParmVar 0x18e9d3126a0 'ptr' 'void *'
|   |   | `-ImplicitCastExpr 0x18e9d31cb70 <col:32, col:37> 'unsigned long long' <IntegralCast>
|   |   |   `-CStyleCastExpr 0x18e9d31ca68 <col:32, col:37> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x18e9d31ca50 <col:37> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |       `-DeclRefExpr 0x18e9d31ca18 <col:37> 'long' lvalue ParmVar 0x18e9d312620 'num' 'long'
|   |   |-BinaryOperator 0x18e9d31cbe8 <line:292:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x18e9d31cb88 <col:9> 'long' lvalue Var 0x18e9d3128d0 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x18e9d31cbd0 <col:15> 'long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x18e9d31cba8 <col:15> 'int' 1
|   |   |-BreakStmt 0x18e9d31cc08 <line:293:9>
|   |   |-IfStmt 0x18e9d31a388 <line:295:9, line:308:9> has_else
|   |   | |-BinaryOperator 0x18e9d31ccd0 <line:295:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x18e9d31ccb8 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:295:13> 'void *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x18e9d31cc10 <col:13> 'void *' lvalue ParmVar 0x18e9d3126a0 'ptr' 'void *'
|   |   | | `-ParenExpr 0x18e9d31cc98 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |   | |   `-CStyleCastExpr 0x18e9d31cc70 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |     `-IntegerLiteral 0x18e9d31cc30 <col:26> 'int' 0
|   |   | |-CompoundStmt 0x18e9d31a1d8 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:295:26, line:305:9>
|   |   | | |-BinaryOperator 0x18e9d319d80 <line:296:13, col:25> 'int *' '='
|   |   | | | |-DeclRefExpr 0x18e9d31ccf0 <col:13> 'int *' lvalue Var 0x18e9d312bd8 'ip' 'int *'
|   |   | | | `-CStyleCastExpr 0x18e9d319d58 <col:18, col:25> 'int *' <BitCast>
|   |   | | |   `-ImplicitCastExpr 0x18e9d319d40 <col:25> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   | | |     `-DeclRefExpr 0x18e9d319d08 <col:25> 'void *' lvalue ParmVar 0x18e9d3126a0 'ptr' 'void *'
|   |   | | `-IfStmt 0x18e9d31a1b0 <line:297:13, line:304:13> has_else
|   |   | |   |-BinaryOperator 0x18e9d319e30 <line:297:17, col:24> 'int' '=='
|   |   | |   | |-ImplicitCastExpr 0x18e9d319e18 <col:17, col:18> 'int' <LValueToRValue>
|   |   | |   | | `-UnaryOperator 0x18e9d319dd8 <col:17, col:18> 'int' lvalue prefix '*' cannot overflow
|   |   | |   | |   `-ImplicitCastExpr 0x18e9d319dc0 <col:18> 'int *' <LValueToRValue>
|   |   | |   | |     `-DeclRefExpr 0x18e9d319da0 <col:18> 'int *' lvalue Var 0x18e9d312bd8 'ip' 'int *'
|   |   | |   | `-IntegerLiteral 0x18e9d319df0 <col:24> 'int' 0
|   |   | |   |-CompoundStmt 0x18e9d319ff8 <col:27, line:300:13>
|   |   | |   | |-BinaryOperator 0x18e9d319f00 <line:298:17, col:28> 'int' '='
|   |   | |   | | |-DeclRefExpr 0x18e9d319e50 <col:17> 'int' lvalue Var 0x18e9d31ed70 'ibs' 'int'
|   |   | |   | | `-CStyleCastExpr 0x18e9d319ed8 <col:23, col:28> 'int' <IntegralCast>
|   |   | |   | |   `-ImplicitCastExpr 0x18e9d319ec0 <col:28> 'long' <LValueToRValue> part_of_explicit_cast
|   |   | |   | |     `-DeclRefExpr 0x18e9d319e88 <col:28> 'long' lvalue ParmVar 0x18e9d312620 'num' 'long'
|   |   | |   | `-BinaryOperator 0x18e9d319fd8 <line:299:17, col:28> 'int' '='
|   |   | |   |   |-DeclRefExpr 0x18e9d319f20 <col:17> 'int' lvalue Var 0x18e9d31edf0 'obs' 'int'
|   |   | |   |   `-ImplicitCastExpr 0x18e9d319fc0 <col:23, col:28> 'int' <LValueToRValue>
|   |   | |   |     `-MemberExpr 0x18e9d319f90 <col:23, col:28> 'int' lvalue ->obuf_size 0x18e9d308248
|   |   | |   |       `-ImplicitCastExpr 0x18e9d319f78 <col:23> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   |         `-DeclRefExpr 0x18e9d319f58 <col:23> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |   `-CompoundStmt 0x18e9d31a190 <line:300:20, line:304:13>
|   |   | |     |-BinaryOperator 0x18e9d31a0b8 <line:302:17, col:28> 'int' '='
|   |   | |     | |-DeclRefExpr 0x18e9d31a018 <col:17> 'int' lvalue Var 0x18e9d31ed70 'ibs' 'int'
|   |   | |     | `-ImplicitCastExpr 0x18e9d31a0a0 <col:23, col:28> 'int' <LValueToRValue>
|   |   | |     |   `-MemberExpr 0x18e9d31a070 <col:23, col:28> 'int' lvalue ->ibuf_size 0x18e9d3081d8
|   |   | |     |     `-ImplicitCastExpr 0x18e9d31a058 <col:23> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |     |       `-DeclRefExpr 0x18e9d31a038 <col:23> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |     `-BinaryOperator 0x18e9d31a170 <line:303:17, col:28> 'int' '='
|   |   | |       |-DeclRefExpr 0x18e9d31a0d8 <col:17> 'int' lvalue Var 0x18e9d31edf0 'obs' 'int'
|   |   | |       `-CStyleCastExpr 0x18e9d31a148 <col:23, col:28> 'int' <IntegralCast>
|   |   | |         `-ImplicitCastExpr 0x18e9d31a130 <col:28> 'long' <LValueToRValue> part_of_explicit_cast
|   |   | |           `-DeclRefExpr 0x18e9d31a0f8 <col:28> 'long' lvalue ParmVar 0x18e9d312620 'num' 'long'
|   |   | `-CompoundStmt 0x18e9d31a368 <line:305:16, line:308:9>
|   |   |   |-BinaryOperator 0x18e9d31a290 <line:306:13, col:24> 'int' '='
|   |   |   | |-DeclRefExpr 0x18e9d31a1f8 <col:13> 'int' lvalue Var 0x18e9d31ed70 'ibs' 'int'
|   |   |   | `-CStyleCastExpr 0x18e9d31a268 <col:19, col:24> 'int' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x18e9d31a250 <col:24> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |   |     `-DeclRefExpr 0x18e9d31a218 <col:24> 'long' lvalue ParmVar 0x18e9d312620 'num' 'long'
|   |   |   `-BinaryOperator 0x18e9d31a348 <line:307:13, col:24> 'int' '='
|   |   |     |-DeclRefExpr 0x18e9d31a2b0 <col:13> 'int' lvalue Var 0x18e9d31edf0 'obs' 'int'
|   |   |     `-CStyleCastExpr 0x18e9d31a320 <col:19, col:24> 'int' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x18e9d31a308 <col:24> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |         `-DeclRefExpr 0x18e9d31a2d0 <col:24> 'long' lvalue ParmVar 0x18e9d312620 'num' 'long'
|   |   |-BinaryOperator 0x18e9d31a450 <line:309:9, col:19> 'char *' '='
|   |   | |-DeclRefExpr 0x18e9d31a3b0 <col:9> 'char *' lvalue Var 0x18e9d3129a8 'p1' 'char *'
|   |   | `-ImplicitCastExpr 0x18e9d31a438 <col:14, col:19> 'char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x18e9d31a408 <col:14, col:19> 'char *' lvalue ->ibuf 0x18e9d3082b8
|   |   |     `-ImplicitCastExpr 0x18e9d31a3f0 <col:14> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x18e9d31a3d0 <col:14> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-BinaryOperator 0x18e9d31a528 <line:310:9, col:19> 'char *' '='
|   |   | |-DeclRefExpr 0x18e9d31a470 <col:9> 'char *' lvalue Var 0x18e9d312a28 'p2' 'char *'
|   |   | `-ImplicitCastExpr 0x18e9d31a510 <col:14, col:19> 'char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x18e9d31a4e0 <col:14, col:19> 'char *' lvalue ->obuf 0x18e9d308408
|   |   |     `-ImplicitCastExpr 0x18e9d31a4c8 <col:14> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x18e9d31a4a8 <col:14> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-IfStmt 0x18e9d31a978 <line:311:9, line:315:9>
|   |   | |-BinaryOperator 0x18e9d31a6e0 <line:311:13, col:66> 'int' '&&'
|   |   | | |-ParenExpr 0x18e9d31a5c8 <col:13, col:39> 'int'
|   |   | | | `-BinaryOperator 0x18e9d31a5a8 <col:14, line:23:33> 'int' '>'
|   |   | | |   |-ImplicitCastExpr 0x18e9d31a590 <line:311:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x18e9d31a548 <col:14> 'int' lvalue Var 0x18e9d31ed70 'ibs' 'int'
|   |   | | |   `-IntegerLiteral 0x18e9d31a568 <line:23:33> 'int' 4096
|   |   | | `-ParenExpr 0x18e9d31a6c0 <line:311:44, col:66> 'int'
|   |   | |   `-BinaryOperator 0x18e9d31a6a0 <col:45, col:57> 'int' '!='
|   |   | |     |-ImplicitCastExpr 0x18e9d31a670 <col:45> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x18e9d31a5e8 <col:45> 'int' lvalue Var 0x18e9d31ed70 'ibs' 'int'
|   |   | |     `-ImplicitCastExpr 0x18e9d31a688 <col:52, col:57> 'int' <LValueToRValue>
|   |   | |       `-MemberExpr 0x18e9d31a640 <col:52, col:57> 'int' lvalue ->ibuf_size 0x18e9d3081d8
|   |   | |         `-ImplicitCastExpr 0x18e9d31a628 <col:52> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |           `-DeclRefExpr 0x18e9d31a608 <col:52> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-CompoundStmt 0x18e9d31a958 <col:69, line:315:9>
|   |   |   |-BinaryOperator 0x18e9d31a810 <line:312:13, col:41> 'char *' '='
|   |   |   | |-DeclRefExpr 0x18e9d31a700 <col:13> 'char *' lvalue Var 0x18e9d3129a8 'p1' 'char *'
|   |   |   | `-ImplicitCastExpr 0x18e9d31a7f8 <col:18, col:41> 'char *' <IntegralToPointer>
|   |   |   |   `-CallExpr 0x18e9d31a7d0 <col:18, col:41> 'int'
|   |   |   |     |-ImplicitCastExpr 0x18e9d31a7b8 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x18e9d31a720 <col:18> 'int ()' Function 0x18e9d316e70 'OPENSSL_malloc' 'int ()'
|   |   |   |     `-CStyleCastExpr 0x18e9d31a790 <col:33, col:38> 'int' <IntegralCast>
|   |   |   |       `-ImplicitCastExpr 0x18e9d31a778 <col:38> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |   |         `-DeclRefExpr 0x18e9d31a740 <col:38> 'long' lvalue ParmVar 0x18e9d312620 'num' 'long'
|   |   |   `-IfStmt 0x18e9d31a940 <line:313:13, line:314:22>
|   |   |     |-BinaryOperator 0x18e9d31a908 <line:313:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x18e9d31a8d8 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:313:17> 'char *' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x18e9d31a830 <col:17> 'char *' lvalue Var 0x18e9d3129a8 'p1' 'char *'
|   |   |     | `-ImplicitCastExpr 0x18e9d31a8f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |   |     |   `-ParenExpr 0x18e9d31a8b8 <col:17, col:27> 'void *'
|   |   |     |     `-CStyleCastExpr 0x18e9d31a890 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     |       `-IntegerLiteral 0x18e9d31a850 <col:26> 'int' 0
|   |   |     `-GotoStmt 0x18e9d31a928 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:314:17, col:22> 'malloc_error' 0x18e9d31c558
|   |   |-IfStmt 0x18e9d31af90 <line:316:9, line:323:9>
|   |   | |-BinaryOperator 0x18e9d31ab28 <line:316:13, col:66> 'int' '&&'
|   |   | | |-ParenExpr 0x18e9d31aa10 <col:13, col:39> 'int'
|   |   | | | `-BinaryOperator 0x18e9d31a9f0 <col:14, line:23:33> 'int' '>'
|   |   | | |   |-ImplicitCastExpr 0x18e9d31a9d8 <line:316:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x18e9d31a990 <col:14> 'int' lvalue Var 0x18e9d31edf0 'obs' 'int'
|   |   | | |   `-IntegerLiteral 0x18e9d31a9b0 <line:23:33> 'int' 4096
|   |   | | `-ParenExpr 0x18e9d31ab08 <line:316:44, col:66> 'int'
|   |   | |   `-BinaryOperator 0x18e9d31aae8 <col:45, col:57> 'int' '!='
|   |   | |     |-ImplicitCastExpr 0x18e9d31aab8 <col:45> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x18e9d31aa30 <col:45> 'int' lvalue Var 0x18e9d31edf0 'obs' 'int'
|   |   | |     `-ImplicitCastExpr 0x18e9d31aad0 <col:52, col:57> 'int' <LValueToRValue>
|   |   | |       `-MemberExpr 0x18e9d31aa88 <col:52, col:57> 'int' lvalue ->obuf_size 0x18e9d308248
|   |   | |         `-ImplicitCastExpr 0x18e9d31aa70 <col:52> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |           `-DeclRefExpr 0x18e9d31aa50 <col:52> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-CompoundStmt 0x18e9d31af70 <col:69, line:323:9>
|   |   |   |-BinaryOperator 0x18e9d31ac58 <line:317:13, col:41> 'char *' '='
|   |   |   | |-DeclRefExpr 0x18e9d31ab48 <col:13> 'char *' lvalue Var 0x18e9d312a28 'p2' 'char *'
|   |   |   | `-ImplicitCastExpr 0x18e9d31ac40 <col:18, col:41> 'char *' <IntegralToPointer>
|   |   |   |   `-CallExpr 0x18e9d31ac18 <col:18, col:41> 'int'
|   |   |   |     |-ImplicitCastExpr 0x18e9d31ac00 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x18e9d31ab68 <col:18> 'int ()' Function 0x18e9d316e70 'OPENSSL_malloc' 'int ()'
|   |   |   |     `-CStyleCastExpr 0x18e9d31abd8 <col:33, col:38> 'int' <IntegralCast>
|   |   |   |       `-ImplicitCastExpr 0x18e9d31abc0 <col:38> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |   |         `-DeclRefExpr 0x18e9d31ab88 <col:38> 'long' lvalue ParmVar 0x18e9d312620 'num' 'long'
|   |   |   `-IfStmt 0x18e9d31af58 <line:318:13, line:322:13>
|   |   |     |-BinaryOperator 0x18e9d31ad78 <line:318:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x18e9d31ad48 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:318:17> 'char *' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x18e9d31ac78 <col:17> 'char *' lvalue Var 0x18e9d312a28 'p2' 'char *'
|   |   |     | `-ImplicitCastExpr 0x18e9d31ad60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |   |     |   `-ParenExpr 0x18e9d31ad28 <col:17, col:27> 'void *'
|   |   |     |     `-CStyleCastExpr 0x18e9d31ad00 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     |       `-IntegerLiteral 0x18e9d31ac98 <col:26> 'int' 0
|   |   |     `-CompoundStmt 0x18e9d31af38 <.//openssl//file_jk/before\crypto\bio\bf_buff.c:318:29, line:322:13>
|   |   |       |-IfStmt 0x18e9d31af08 <line:319:17, line:320:36>
|   |   |       | |-BinaryOperator 0x18e9d31ae50 <line:319:21, col:32> 'int' '!='
|   |   |       | | |-ImplicitCastExpr 0x18e9d31ae20 <col:21> 'char *' <LValueToRValue>
|   |   |       | | | `-DeclRefExpr 0x18e9d31ad98 <col:21> 'char *' lvalue Var 0x18e9d3129a8 'p1' 'char *'
|   |   |       | | `-ImplicitCastExpr 0x18e9d31ae38 <col:27, col:32> 'char *' <LValueToRValue>
|   |   |       | |   `-MemberExpr 0x18e9d31adf0 <col:27, col:32> 'char *' lvalue ->ibuf 0x18e9d3082b8
|   |   |       | |     `-ImplicitCastExpr 0x18e9d31add8 <col:27> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       | |       `-DeclRefExpr 0x18e9d31adb8 <col:27> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |       | `-CallExpr 0x18e9d31aec8 <line:320:21, col:36> 'int'
|   |   |       |   |-ImplicitCastExpr 0x18e9d31aeb0 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |   |       |   | `-DeclRefExpr 0x18e9d31ae70 <col:21> 'int ()' Function 0x18e9d317160 'OPENSSL_free' 'int ()'
|   |   |       |   `-ImplicitCastExpr 0x18e9d31aef0 <col:34> 'char *' <LValueToRValue>
|   |   |       |     `-DeclRefExpr 0x18e9d31ae90 <col:34> 'char *' lvalue Var 0x18e9d3129a8 'p1' 'char *'
|   |   |       `-GotoStmt 0x18e9d31af20 <line:321:17, col:22> 'malloc_error' 0x18e9d31c558
|   |   |-IfStmt 0x18e9d31b478 <line:324:9, line:330:9>
|   |   | |-BinaryOperator 0x18e9d31b060 <line:324:13, col:26> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x18e9d31b030 <col:13, col:18> 'char *' <LValueToRValue>
|   |   | | | `-MemberExpr 0x18e9d31afe0 <col:13, col:18> 'char *' lvalue ->ibuf 0x18e9d3082b8
|   |   | | |   `-ImplicitCastExpr 0x18e9d31afc8 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x18e9d31afa8 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | | `-ImplicitCastExpr 0x18e9d31b048 <col:26> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x18e9d31b010 <col:26> 'char *' lvalue Var 0x18e9d3129a8 'p1' 'char *'
|   |   | `-CompoundStmt 0x18e9d31b440 <col:30, line:330:9>
|   |   |   |-CallExpr 0x18e9d31b120 <line:325:13, col:35> 'int'
|   |   |   | |-ImplicitCastExpr 0x18e9d31b108 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x18e9d31b080 <col:13> 'int ()' Function 0x18e9d317160 'OPENSSL_free' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x18e9d31b148 <col:26, col:31> 'char *' <LValueToRValue>
|   |   |   |   `-MemberExpr 0x18e9d31b0d8 <col:26, col:31> 'char *' lvalue ->ibuf 0x18e9d3082b8
|   |   |   |     `-ImplicitCastExpr 0x18e9d31b0c0 <col:26> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x18e9d31b0a0 <col:26> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   |-BinaryOperator 0x18e9d31b200 <line:326:13, col:25> 'char *' '='
|   |   |   | |-MemberExpr 0x18e9d31b198 <col:13, col:18> 'char *' lvalue ->ibuf 0x18e9d3082b8
|   |   |   | | `-ImplicitCastExpr 0x18e9d31b180 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x18e9d31b160 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | `-ImplicitCastExpr 0x18e9d31b1e8 <col:25> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x18e9d31b1c8 <col:25> 'char *' lvalue Var 0x18e9d3129a8 'p1' 'char *'
|   |   |   |-BinaryOperator 0x18e9d31b2b0 <line:327:13, col:29> 'int' '='
|   |   |   | |-MemberExpr 0x18e9d31b258 <col:13, col:18> 'int' lvalue ->ibuf_off 0x18e9d308398
|   |   |   | | `-ImplicitCastExpr 0x18e9d31b240 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x18e9d31b220 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | `-IntegerLiteral 0x18e9d31b288 <col:29> 'int' 0
|   |   |   |-BinaryOperator 0x18e9d31b360 <line:328:13, col:29> 'int' '='
|   |   |   | |-MemberExpr 0x18e9d31b308 <col:13, col:18> 'int' lvalue ->ibuf_len 0x18e9d308328
|   |   |   | | `-ImplicitCastExpr 0x18e9d31b2f0 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x18e9d31b2d0 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | `-IntegerLiteral 0x18e9d31b338 <col:29> 'int' 0
|   |   |   `-BinaryOperator 0x18e9d31b420 <line:329:13, col:30> 'int' '='
|   |   |     |-MemberExpr 0x18e9d31b3b8 <col:13, col:18> 'int' lvalue ->ibuf_size 0x18e9d3081d8
|   |   |     | `-ImplicitCastExpr 0x18e9d31b3a0 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x18e9d31b380 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     `-ImplicitCastExpr 0x18e9d31b408 <col:30> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x18e9d31b3e8 <col:30> 'int' lvalue Var 0x18e9d31ed70 'ibs' 'int'
|   |   |-IfStmt 0x18e9d31b960 <line:331:9, line:337:9>
|   |   | |-BinaryOperator 0x18e9d31b548 <line:331:13, col:26> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x18e9d31b518 <col:13, col:18> 'char *' <LValueToRValue>
|   |   | | | `-MemberExpr 0x18e9d31b4c8 <col:13, col:18> 'char *' lvalue ->obuf 0x18e9d308408
|   |   | | |   `-ImplicitCastExpr 0x18e9d31b4b0 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x18e9d31b490 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | | `-ImplicitCastExpr 0x18e9d31b530 <col:26> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x18e9d31b4f8 <col:26> 'char *' lvalue Var 0x18e9d312a28 'p2' 'char *'
|   |   | `-CompoundStmt 0x18e9d31b928 <col:30, line:337:9>
|   |   |   |-CallExpr 0x18e9d31b608 <line:332:13, col:35> 'int'
|   |   |   | |-ImplicitCastExpr 0x18e9d31b5f0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x18e9d31b568 <col:13> 'int ()' Function 0x18e9d317160 'OPENSSL_free' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x18e9d31b630 <col:26, col:31> 'char *' <LValueToRValue>
|   |   |   |   `-MemberExpr 0x18e9d31b5c0 <col:26, col:31> 'char *' lvalue ->obuf 0x18e9d308408
|   |   |   |     `-ImplicitCastExpr 0x18e9d31b5a8 <col:26> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x18e9d31b588 <col:26> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   |-BinaryOperator 0x18e9d31b6e8 <line:333:13, col:25> 'char *' '='
|   |   |   | |-MemberExpr 0x18e9d31b680 <col:13, col:18> 'char *' lvalue ->obuf 0x18e9d308408
|   |   |   | | `-ImplicitCastExpr 0x18e9d31b668 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x18e9d31b648 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | `-ImplicitCastExpr 0x18e9d31b6d0 <col:25> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x18e9d31b6b0 <col:25> 'char *' lvalue Var 0x18e9d312a28 'p2' 'char *'
|   |   |   |-BinaryOperator 0x18e9d31b798 <line:334:13, col:29> 'int' '='
|   |   |   | |-MemberExpr 0x18e9d31b740 <col:13, col:18> 'int' lvalue ->obuf_off 0x18e9d3084e8
|   |   |   | | `-ImplicitCastExpr 0x18e9d31b728 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x18e9d31b708 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | `-IntegerLiteral 0x18e9d31b770 <col:29> 'int' 0
|   |   |   |-BinaryOperator 0x18e9d31b848 <line:335:13, col:29> 'int' '='
|   |   |   | |-MemberExpr 0x18e9d31b7f0 <col:13, col:18> 'int' lvalue ->obuf_len 0x18e9d308478
|   |   |   | | `-ImplicitCastExpr 0x18e9d31b7d8 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x18e9d31b7b8 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | `-IntegerLiteral 0x18e9d31b820 <col:29> 'int' 0
|   |   |   `-BinaryOperator 0x18e9d31b908 <line:336:13, col:30> 'int' '='
|   |   |     |-MemberExpr 0x18e9d31b8a0 <col:13, col:18> 'int' lvalue ->obuf_size 0x18e9d308248
|   |   |     | `-ImplicitCastExpr 0x18e9d31b888 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x18e9d31b868 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     `-ImplicitCastExpr 0x18e9d31b8f0 <col:30> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x18e9d31b8d0 <col:30> 'int' lvalue Var 0x18e9d31edf0 'obs' 'int'
|   |   |-BreakStmt 0x18e9d31b978 <line:338:9>
|   |   |-IfStmt 0x18e9d31ba90 <line:340:9, line:341:22>
|   |   | |-OpaqueValueExpr 0x18e9d31ba78 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x18e9d31ba68 <col:13, col:22>
|   |   |   `-ImplicitCastExpr 0x18e9d31ba50 <col:20, col:22> 'long' <IntegralCast>
|   |   |     `-ParenExpr 0x18e9d31ba30 <col:20, col:22> 'int'
|   |   |       `-IntegerLiteral 0x18e9d31ba08 <col:21> 'int' 0
|   |   |-BreakStmt 0x18e9d31bb88 <line:345:9>
|   |   |-IfStmt 0x18e9d31bca0 <line:348:9, line:349:22>
|   |   | |-OpaqueValueExpr 0x18e9d31bc88 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x18e9d31bc78 <col:13, col:22>
|   |   |   `-ImplicitCastExpr 0x18e9d31bc60 <col:20, col:22> 'long' <IntegralCast>
|   |   |     `-ParenExpr 0x18e9d31bc40 <col:20, col:22> 'int'
|   |   |       `-IntegerLiteral 0x18e9d31bc18 <col:21> 'int' 0
|   |   |-IfStmt 0x18e9d31ce70 <line:350:9, line:353:9>
|   |   | |-BinaryOperator 0x18e9d31cd90 <line:350:13, col:30> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x18e9d31cd78 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x18e9d31cd20 <col:13, col:18> 'int' lvalue ->obuf_len 0x18e9d308478
|   |   | | |   `-ImplicitCastExpr 0x18e9d31bcd8 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x18e9d31bcb8 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | | `-IntegerLiteral 0x18e9d31cd50 <col:30> 'int' 0
|   |   | `-CompoundStmt 0x18e9d31ce58 <col:33, line:353:9>
|   |   |   `-BreakStmt 0x18e9d31ce50 <line:352:13>
|   |   |-ForStmt 0x18e9d31d680 <line:355:9, line:370:9>
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | `-CompoundStmt 0x18e9d31d668 <line:355:18, line:370:9>
|   |   |   `-IfStmt 0x18e9d31d640 <line:357:13, line:369:13> has_else
|   |   |     |-BinaryOperator 0x18e9d31cf50 <line:357:17, col:33> 'int' '>'
|   |   |     | |-ImplicitCastExpr 0x18e9d31cf38 <col:17, col:22> 'int' <LValueToRValue>
|   |   |     | | `-MemberExpr 0x18e9d31cee0 <col:17, col:22> 'int' lvalue ->obuf_len 0x18e9d308478
|   |   |     | |   `-ImplicitCastExpr 0x18e9d31cec8 <col:17> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     | |     `-DeclRefExpr 0x18e9d31cea8 <col:17> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     | `-IntegerLiteral 0x18e9d31cf10 <col:33> 'int' 0
|   |   |     |-CompoundStmt 0x18e9d31d488 <col:36, line:365:13>
|   |   |     | |-IfStmt 0x18e9d31d2d0 <line:361:17, line:362:36>
|   |   |     | | |-BinaryOperator 0x18e9d31d208 <line:361:21, col:26> 'int' '<='
|   |   |     | | | |-ImplicitCastExpr 0x18e9d31d1f0 <col:21> 'int' <LValueToRValue>
|   |   |     | | | | `-DeclRefExpr 0x18e9d31d1a8 <col:21> 'int' lvalue Var 0x18e9d312ad8 'r' 'int'
|   |   |     | | | `-IntegerLiteral 0x18e9d31d1c8 <col:26> 'int' 0
|   |   |     | | `-ReturnStmt 0x18e9d31d2c0 <line:362:21, col:36>
|   |   |     | |   `-ParenExpr 0x18e9d31d2a0 <col:28, col:36> 'long'
|   |   |     | |     `-CStyleCastExpr 0x18e9d31d278 <col:29, col:35> 'long' <IntegralCast>
|   |   |     | |       `-ImplicitCastExpr 0x18e9d31d260 <col:35> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     | |         `-DeclRefExpr 0x18e9d31d228 <col:35> 'int' lvalue Var 0x18e9d312ad8 'r' 'int'
|   |   |     | |-CompoundAssignOperator 0x18e9d31d388 <line:363:17, col:34> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     | | |-MemberExpr 0x18e9d31d320 <col:17, col:22> 'int' lvalue ->obuf_off 0x18e9d3084e8
|   |   |     | | | `-ImplicitCastExpr 0x18e9d31d308 <col:17> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     | | |   `-DeclRefExpr 0x18e9d31d2e8 <col:17> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     | | `-ImplicitCastExpr 0x18e9d31d370 <col:34> 'int' <LValueToRValue>
|   |   |     | |   `-DeclRefExpr 0x18e9d31d350 <col:34> 'int' lvalue Var 0x18e9d312ad8 'r' 'int'
|   |   |     | `-CompoundAssignOperator 0x18e9d31d458 <line:364:17, col:34> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |   |-MemberExpr 0x18e9d31d3f0 <col:17, col:22> 'int' lvalue ->obuf_len 0x18e9d308478
|   |   |     |   | `-ImplicitCastExpr 0x18e9d31d3d8 <col:17> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     |   |   `-DeclRefExpr 0x18e9d31d3b8 <col:17> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     |   `-ImplicitCastExpr 0x18e9d31d440 <col:34> 'int' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x18e9d31d420 <col:34> 'int' lvalue Var 0x18e9d312ad8 'r' 'int'
|   |   |     `-CompoundStmt 0x18e9d31d618 <line:365:20, line:369:13>
|   |   |       |-BinaryOperator 0x18e9d31d540 <line:366:17, col:33> 'int' '='
|   |   |       | |-MemberExpr 0x18e9d31d4e8 <col:17, col:22> 'int' lvalue ->obuf_len 0x18e9d308478
|   |   |       | | `-ImplicitCastExpr 0x18e9d31d4d0 <col:17> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       | |   `-DeclRefExpr 0x18e9d31d4b0 <col:17> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |       | `-IntegerLiteral 0x18e9d31d518 <col:33> 'int' 0
|   |   |       |-BinaryOperator 0x18e9d31d5f0 <line:367:17, col:33> 'int' '='
|   |   |       | |-MemberExpr 0x18e9d31d598 <col:17, col:22> 'int' lvalue ->obuf_off 0x18e9d3084e8
|   |   |       | | `-ImplicitCastExpr 0x18e9d31d580 <col:17> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       | |   `-DeclRefExpr 0x18e9d31d560 <col:17> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d312838 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |       | `-IntegerLiteral 0x18e9d31d5c8 <col:33> 'int' 0
|   |   |       `-BreakStmt 0x18e9d31d610 <line:368:17>
|   |   |-BreakStmt 0x18e9d31d758 <line:372:9>
|   |   |-IfStmt 0x18e9d31dae8 <line:375:9, line:377:19>
|   |   | |-OpaqueValueExpr 0x18e9d31dad0 <<invalid sloc>> '_Bool'
|   |   | `-BinaryOperator 0x18e9d31dab0 <col:13, col:19> 'long' '='
|   |   |   |-DeclRefExpr 0x18e9d31da50 <col:13> 'long' lvalue Var 0x18e9d3128d0 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x18e9d31da98 <col:19> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x18e9d31da70 <col:19> 'int' 0
|   |   |-BreakStmt 0x18e9d31db00 <line:378:9>
|   |   |-DefaultStmt 0x18e9d31dc30 <line:379:5, line:381:22>
|   |   | `-IfStmt 0x18e9d31dc18 <line:380:9, line:381:22>
|   |   |   |-OpaqueValueExpr 0x18e9d31dc00 <<invalid sloc>> '_Bool'
|   |   |   `-ReturnStmt 0x18e9d31dbf0 <col:13, col:22>
|   |   |     `-ImplicitCastExpr 0x18e9d31dbd8 <col:20, col:22> 'long' <IntegralCast>
|   |   |       `-ParenExpr 0x18e9d31dbb8 <col:20, col:22> 'int'
|   |   |         `-IntegerLiteral 0x18e9d31db90 <col:21> 'int' 0
|   |   `-BreakStmt 0x18e9d31dcf0 <line:383:9>
|   |-ReturnStmt 0x18e9d31dee8 <line:385:5, col:16>
|   | `-ImplicitCastExpr 0x18e9d31ded0 <col:12, col:16> 'long' <LValueToRValue>
|   |   `-ParenExpr 0x18e9d31deb0 <col:12, col:16> 'long' lvalue
|   |     `-DeclRefExpr 0x18e9d31de90 <col:13> 'long' lvalue Var 0x18e9d3128d0 'ret' 'long'
|   |-LabelStmt 0x18e9d31e010 <line:386:2, col:14> 'malloc_error'
|   | `-NullStmt 0x18e9d31e008 <col:14>
|   `-ReturnStmt 0x18e9d31e088 <line:388:5, col:14>
|     `-ImplicitCastExpr 0x18e9d31e070 <col:12, col:14> 'long' <IntegralCast>
|       `-ParenExpr 0x18e9d31e050 <col:12, col:14> 'int'
|         `-IntegerLiteral 0x18e9d31e028 <col:13> 'int' 0
|-FunctionDecl 0x18e9d31e2b0 <line:391:1, line:403:1> line:391:13 invalid buffer_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x18e9d31e108 <col:34, col:39> col:39 invalid b 'int *'
| |-ParmVarDecl 0x18e9d31e188 <col:42, col:46> col:46 used cmd 'int'
| |-ParmVarDecl 0x18e9d31e208 <col:51, col:64> col:64 invalid fp 'int *'
| `-CompoundStmt 0x18e9d31e810 <line:392:1, line:403:1>
|   |-DeclStmt 0x18e9d31e440 <line:393:5, col:17>
|   | `-VarDecl 0x18e9d31e398 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x18e9d31e428 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x18e9d31e400 <col:16> 'int' 1
|   |-IfStmt 0x18e9d31e568 <line:395:5, line:396:18>
|   | |-OpaqueValueExpr 0x18e9d31e550 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x18e9d31e540 <col:9, col:18>
|   |   `-ImplicitCastExpr 0x18e9d31e528 <col:16, col:18> 'long' <IntegralCast>
|   |     `-ParenExpr 0x18e9d31e508 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x18e9d31e4e0 <col:17> 'int' 0
|   |-SwitchStmt 0x18e9d31e5d0 <line:397:5, line:401:5>
|   | |-ImplicitCastExpr 0x18e9d31e5b8 <line:397:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x18e9d31e580 <col:13> 'int' lvalue ParmVar 0x18e9d31e188 'cmd' 'int'
|   | `-CompoundStmt 0x18e9d31e788 <col:18, line:401:5>
|   |   |-DefaultStmt 0x18e9d31e760 <line:398:5, col:12>
|   |   | `-NullStmt 0x18e9d31e758 <col:12>
|   |   `-BreakStmt 0x18e9d31e780 <line:400:9>
|   `-ReturnStmt 0x18e9d31e800 <line:402:5, col:16>
|     `-ImplicitCastExpr 0x18e9d31e7e8 <col:12, col:16> 'long' <LValueToRValue>
|       `-ParenExpr 0x18e9d31e7c8 <col:12, col:16> 'long' lvalue
|         `-DeclRefExpr 0x18e9d31e7a8 <col:13> 'long' lvalue Var 0x18e9d31e398 'ret' 'long'
|-FunctionDecl 0x18e9d31ea00 <line:405:1, line:450:1> line:405:12 invalid buffer_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x18e9d31e858 <col:24, col:29> col:29 invalid b 'int *'
| |-ParmVarDecl 0x18e9d31e8d8 <col:32, col:38> col:38 used buf 'char *'
| |-ParmVarDecl 0x18e9d31e958 <col:43, col:47> col:47 used size 'int'
| `-CompoundStmt 0x18e9d319410 <line:406:1, line:450:1>
|   |-DeclStmt 0x18e9d31eb48 <line:407:5, col:26>
|   | `-VarDecl 0x18e9d31eae0 <col:5, col:23> col:23 used ctx 'BIO_F_BUFFER_CTX *'
|   |-DeclStmt 0x18e9d31fd50 <line:408:5, col:25>
|   | |-VarDecl 0x18e9d31eb78 <col:5, col:15> col:9 used num 'int' cinit
|   | | `-IntegerLiteral 0x18e9d31ebe0 <col:15> 'int' 0
|   | |-VarDecl 0x18e9d31ec20 <col:5, col:18> col:18 used i 'int'
|   | `-VarDecl 0x18e9d31eca0 <col:5, col:21> col:21 used flag 'int'
|   |-DeclStmt 0x18e9d31fde8 <line:409:5, col:12>
|   | `-VarDecl 0x18e9d31fd80 <col:5, col:11> col:11 used p 'char *'
|   |-UnaryOperator 0x18e9d31fe70 <line:412:5, col:9> 'int' postfix '--'
|   | `-DeclRefExpr 0x18e9d31fe38 <col:5> 'int' lvalue ParmVar 0x18e9d31e958 'size' 'int'
|   `-ForStmt 0x18e9d3193d8 <line:415:5, line:449:5>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     `-CompoundStmt 0x18e9d3193c0 <line:415:14, line:449:5>
|       `-IfStmt 0x18e9d319398 <line:416:9, line:448:9> has_else
|         |-BinaryOperator 0x18e9d31ff50 <line:416:13, col:29> 'int' '>'
|         | |-ImplicitCastExpr 0x18e9d31ff38 <col:13, col:18> 'int' <LValueToRValue>
|         | | `-MemberExpr 0x18e9d31fee0 <col:13, col:18> 'int' lvalue ->ibuf_len 0x18e9d308328
|         | |   `-ImplicitCastExpr 0x18e9d31fec8 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|         | |     `-DeclRefExpr 0x18e9d31fea8 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d31eae0 'ctx' 'BIO_F_BUFFER_CTX *'
|         | `-IntegerLiteral 0x18e9d31ff10 <col:29> 'int' 0
|         |-CompoundStmt 0x18e9d320c88 <col:32, line:435:9>
|         | |-BinaryOperator 0x18e9d320100 <line:417:13, col:43> 'char *' '='
|         | | |-DeclRefExpr 0x18e9d31ff70 <col:13> 'char *' lvalue Var 0x18e9d31fd80 'p' 'char *'
|         | | `-UnaryOperator 0x18e9d3200e8 <col:17, col:43> 'char *' prefix '&' cannot overflow
|         | |   `-ParenExpr 0x18e9d3200c8 <col:18, col:43> 'char' lvalue
|         | |     `-ArraySubscriptExpr 0x18e9d3200a8 <col:19, col:42> 'char' lvalue
|         | |       |-ImplicitCastExpr 0x18e9d320078 <col:19, col:24> 'char *' <LValueToRValue>
|         | |       | `-MemberExpr 0x18e9d31ffe0 <col:19, col:24> 'char *' lvalue ->ibuf 0x18e9d3082b8
|         | |       |   `-ImplicitCastExpr 0x18e9d31ffc8 <col:19> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|         | |       |     `-DeclRefExpr 0x18e9d31ffa8 <col:19> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d31eae0 'ctx' 'BIO_F_BUFFER_CTX *'
|         | |       `-ImplicitCastExpr 0x18e9d320090 <col:29, col:34> 'int' <LValueToRValue>
|         | |         `-MemberExpr 0x18e9d320048 <col:29, col:34> 'int' lvalue ->ibuf_off 0x18e9d308398
|         | |           `-ImplicitCastExpr 0x18e9d320030 <col:29> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|         | |             `-DeclRefExpr 0x18e9d320010 <col:29> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d31eae0 'ctx' 'BIO_F_BUFFER_CTX *'
|         | |-BinaryOperator 0x18e9d320180 <line:418:13, col:20> 'int' '='
|         | | |-DeclRefExpr 0x18e9d320120 <col:13> 'int' lvalue Var 0x18e9d31eca0 'flag' 'int'
|         | | `-IntegerLiteral 0x18e9d320158 <col:20> 'int' 0
|         | |-ForStmt 0x18e9d320770 <line:419:13, line:426:13>
|         | | |-BinaryOperator 0x18e9d320200 <line:419:18, col:22> 'int' '='
|         | | | |-DeclRefExpr 0x18e9d3201a0 <col:18> 'int' lvalue Var 0x18e9d31ec20 'i' 'int'
|         | | | `-IntegerLiteral 0x18e9d3201d8 <col:22> 'int' 0
|         | | |-<<<NULL>>>
|         | | |-BinaryOperator 0x18e9d3203c8 <col:25, col:57> 'int' '&&'
|         | | | |-ParenExpr 0x18e9d3202f8 <col:25, col:43> 'int'
|         | | | | `-BinaryOperator 0x18e9d3202d8 <col:26, col:35> 'int' '<'
|         | | | |   |-ImplicitCastExpr 0x18e9d3202a8 <col:26> 'int' <LValueToRValue>
|         | | | |   | `-DeclRefExpr 0x18e9d320220 <col:26> 'int' lvalue Var 0x18e9d31ec20 'i' 'int'
|         | | | |   `-ImplicitCastExpr 0x18e9d3202c0 <col:30, col:35> 'int' <LValueToRValue>
|         | | | |     `-MemberExpr 0x18e9d320278 <col:30, col:35> 'int' lvalue ->ibuf_len 0x18e9d308328
|         | | | |       `-ImplicitCastExpr 0x18e9d320260 <col:30> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|         | | | |         `-DeclRefExpr 0x18e9d320240 <col:30> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d31eae0 'ctx' 'BIO_F_BUFFER_CTX *'
|         | | | `-ParenExpr 0x18e9d3203a8 <col:48, col:57> 'int'
|         | | |   `-BinaryOperator 0x18e9d320388 <col:49, col:53> 'int' '<'
|         | | |     |-ImplicitCastExpr 0x18e9d320358 <col:49> 'int' <LValueToRValue>
|         | | |     | `-DeclRefExpr 0x18e9d320318 <col:49> 'int' lvalue Var 0x18e9d31ec20 'i' 'int'
|         | | |     `-ImplicitCastExpr 0x18e9d320370 <col:53> 'int' <LValueToRValue>
|         | | |       `-DeclRefExpr 0x18e9d320338 <col:53> 'int' lvalue ParmVar 0x18e9d31e958 'size' 'int'
|         | | |-UnaryOperator 0x18e9d320408 <col:60, col:61> 'int' postfix '++'
|         | | | `-DeclRefExpr 0x18e9d3203e8 <col:60> 'int' lvalue Var 0x18e9d31ec20 'i' 'int'
|         | | `-CompoundStmt 0x18e9d320750 <col:65, line:426:13>
|         | |   |-BinaryOperator 0x18e9d320550 <line:420:17, col:31> 'char' '='
|         | |   | |-UnaryOperator 0x18e9d320490 <col:17, col:24> 'char' lvalue prefix '*' cannot overflow
|         | |   | | `-ParenExpr 0x18e9d320470 <col:18, col:24> 'char *'
|         | |   | |   `-UnaryOperator 0x18e9d320458 <col:19, col:22> 'char *' postfix '++'
|         | |   | |     `-DeclRefExpr 0x18e9d320420 <col:19> 'char *' lvalue ParmVar 0x18e9d31e8d8 'buf' 'char *'
|         | |   | `-ImplicitCastExpr 0x18e9d320538 <col:28, col:31> 'char' <LValueToRValue>
|         | |   |   `-ArraySubscriptExpr 0x18e9d320518 <col:28, col:31> 'char' lvalue
|         | |   |     |-ImplicitCastExpr 0x18e9d3204e8 <col:28> 'char *' <LValueToRValue>
|         | |   |     | `-DeclRefExpr 0x18e9d3204a8 <col:28> 'char *' lvalue Var 0x18e9d31fd80 'p' 'char *'
|         | |   |     `-ImplicitCastExpr 0x18e9d320500 <col:30> 'int' <LValueToRValue>
|         | |   |       `-DeclRefExpr 0x18e9d3204c8 <col:30> 'int' lvalue Var 0x18e9d31ec20 'i' 'int'
|         | |   `-IfStmt 0x18e9d320738 <line:421:17, line:425:17>
|         | |     |-BinaryOperator 0x18e9d320648 <line:421:21, col:29> 'int' '=='
|         | |     | |-ImplicitCastExpr 0x18e9d320630 <col:21, col:24> 'int' <IntegralCast>
|         | |     | | `-ImplicitCastExpr 0x18e9d320618 <col:21, col:24> 'char' <LValueToRValue>
|         | |     | |   `-ArraySubscriptExpr 0x18e9d3205e0 <col:21, col:24> 'char' lvalue
|         | |     | |     |-ImplicitCastExpr 0x18e9d3205b0 <col:21> 'char *' <LValueToRValue>
|         | |     | |     | `-DeclRefExpr 0x18e9d320570 <col:21> 'char *' lvalue Var 0x18e9d31fd80 'p' 'char *'
|         | |     | |     `-ImplicitCastExpr 0x18e9d3205c8 <col:23> 'int' <LValueToRValue>
|         | |     | |       `-DeclRefExpr 0x18e9d320590 <col:23> 'int' lvalue Var 0x18e9d31ec20 'i' 'int'
|         | |     | `-CharacterLiteral 0x18e9d320600 <col:29> 'int' 10
|         | |     `-CompoundStmt 0x18e9d320710 <col:35, line:425:17>
|         | |       |-BinaryOperator 0x18e9d3206b0 <line:422:21, col:28> 'int' '='
|         | |       | |-DeclRefExpr 0x18e9d320668 <col:21> 'int' lvalue Var 0x18e9d31eca0 'flag' 'int'
|         | |       | `-IntegerLiteral 0x18e9d320688 <col:28> 'int' 1
|         | |       |-UnaryOperator 0x18e9d3206f0 <line:423:21, col:22> 'int' postfix '++'
|         | |       | `-DeclRefExpr 0x18e9d3206d0 <col:21> 'int' lvalue Var 0x18e9d31ec20 'i' 'int'
|         | |       `-BreakStmt 0x18e9d320708 <line:424:21>
|         | |-CompoundAssignOperator 0x18e9d320818 <line:427:13, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|         | | |-DeclRefExpr 0x18e9d3207a8 <col:13> 'int' lvalue Var 0x18e9d31eb78 'num' 'int'
|         | | `-ImplicitCastExpr 0x18e9d320800 <col:20> 'int' <LValueToRValue>
|         | |   `-DeclRefExpr 0x18e9d3207e0 <col:20> 'int' lvalue Var 0x18e9d31ec20 'i' 'int'
|         | |-CompoundAssignOperator 0x18e9d3208a0 <line:428:13, col:21> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|         | | |-DeclRefExpr 0x18e9d320848 <col:13> 'int' lvalue ParmVar 0x18e9d31e958 'size' 'int'
|         | | `-ImplicitCastExpr 0x18e9d320888 <col:21> 'int' <LValueToRValue>
|         | |   `-DeclRefExpr 0x18e9d320868 <col:21> 'int' lvalue Var 0x18e9d31ec20 'i' 'int'
|         | |-CompoundAssignOperator 0x18e9d320970 <line:429:13, col:30> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|         | | |-MemberExpr 0x18e9d320908 <col:13, col:18> 'int' lvalue ->ibuf_len 0x18e9d308328
|         | | | `-ImplicitCastExpr 0x18e9d3208f0 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|         | | |   `-DeclRefExpr 0x18e9d3208d0 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d31eae0 'ctx' 'BIO_F_BUFFER_CTX *'
|         | | `-ImplicitCastExpr 0x18e9d320958 <col:30> 'int' <LValueToRValue>
|         | |   `-DeclRefExpr 0x18e9d320938 <col:30> 'int' lvalue Var 0x18e9d31ec20 'i' 'int'
|         | |-CompoundAssignOperator 0x18e9d320a40 <line:430:13, col:30> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|         | | |-MemberExpr 0x18e9d3209d8 <col:13, col:18> 'int' lvalue ->ibuf_off 0x18e9d308398
|         | | | `-ImplicitCastExpr 0x18e9d3209c0 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|         | | |   `-DeclRefExpr 0x18e9d3209a0 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d31eae0 'ctx' 'BIO_F_BUFFER_CTX *'
|         | | `-ImplicitCastExpr 0x18e9d320a28 <col:30> 'int' <LValueToRValue>
|         | |   `-DeclRefExpr 0x18e9d320a08 <col:30> 'int' lvalue Var 0x18e9d31ec20 'i' 'int'
|         | `-IfStmt 0x18e9d320c70 <line:431:13, line:434:13>
|         |   |-BinaryOperator 0x18e9d320b28 <line:431:17, col:33> 'int' '||'
|         |   | |-ImplicitCastExpr 0x18e9d320b10 <col:17> 'int' <LValueToRValue>
|         |   | | `-DeclRefExpr 0x18e9d320a70 <col:17> 'int' lvalue Var 0x18e9d31eca0 'flag' 'int'
|         |   | `-BinaryOperator 0x18e9d320af0 <col:25, col:33> 'int' '=='
|         |   |   |-ImplicitCastExpr 0x18e9d320ad8 <col:25> 'int' <LValueToRValue>
|         |   |   | `-DeclRefExpr 0x18e9d320a90 <col:25> 'int' lvalue ParmVar 0x18e9d31e958 'size' 'int'
|         |   |   `-IntegerLiteral 0x18e9d320ab0 <col:33> 'int' 0
|         |   `-CompoundStmt 0x18e9d320c50 <col:36, line:434:13>
|         |     |-BinaryOperator 0x18e9d320bc8 <line:432:17, col:24> 'char' '='
|         |     | |-UnaryOperator 0x18e9d320b80 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
|         |     | | `-ImplicitCastExpr 0x18e9d320b68 <col:18> 'char *' <LValueToRValue>
|         |     | |   `-DeclRefExpr 0x18e9d320b48 <col:18> 'char *' lvalue ParmVar 0x18e9d31e8d8 'buf' 'char *'
|         |     | `-ImplicitCastExpr 0x18e9d320bb0 <col:24> 'char' <IntegralCast>
|         |     |   `-CharacterLiteral 0x18e9d320b98 <col:24> 'int' 0
|         |     `-ReturnStmt 0x18e9d320c40 <line:433:17, col:28>
|         |       `-ImplicitCastExpr 0x18e9d320c28 <col:24, col:28> 'int' <LValueToRValue>
|         |         `-ParenExpr 0x18e9d320c08 <col:24, col:28> 'int' lvalue
|         |           `-DeclRefExpr 0x18e9d320be8 <col:25> 'int' lvalue Var 0x18e9d31eb78 'num' 'int'
|         `-CompoundStmt 0x18e9d319370 <line:435:16, line:448:9>
|           |-IfStmt 0x18e9d3191e8 <line:438:13, line:445:13>
|           | |-BinaryOperator 0x18e9d318dd8 <line:438:17, col:22> 'int' '<='
|           | | |-ImplicitCastExpr 0x18e9d318dc0 <col:17> 'int' <LValueToRValue>
|           | | | `-DeclRefExpr 0x18e9d318d78 <col:17> 'int' lvalue Var 0x18e9d31ec20 'i' 'int'
|           | | `-IntegerLiteral 0x18e9d318d98 <col:22> 'int' 0
|           | `-CompoundStmt 0x18e9d3191c0 <col:25, line:445:13>
|           |   |-BinaryOperator 0x18e9d318e98 <line:440:17, col:24> 'char' '='
|           |   | |-UnaryOperator 0x18e9d318e50 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
|           |   | | `-ImplicitCastExpr 0x18e9d318e38 <col:18> 'char *' <LValueToRValue>
|           |   | |   `-DeclRefExpr 0x18e9d318e18 <col:18> 'char *' lvalue ParmVar 0x18e9d31e8d8 'buf' 'char *'
|           |   | `-ImplicitCastExpr 0x18e9d318e80 <col:24> 'char' <IntegralCast>
|           |   |   `-CharacterLiteral 0x18e9d318e68 <col:24> 'int' 0
|           |   |-IfStmt 0x18e9d3190a8 <line:441:17, line:442:48>
|           |   | |-BinaryOperator 0x18e9d318f18 <line:441:21, col:25> 'int' '<'
|           |   | | |-ImplicitCastExpr 0x18e9d318f00 <col:21> 'int' <LValueToRValue>
|           |   | | | `-DeclRefExpr 0x18e9d318eb8 <col:21> 'int' lvalue Var 0x18e9d31ec20 'i' 'int'
|           |   | | `-IntegerLiteral 0x18e9d318ed8 <col:25> 'int' 0
|           |   | `-ReturnStmt 0x18e9d319098 <line:442:21, col:48>
|           |   |   `-ParenExpr 0x18e9d319078 <col:28, col:48> 'int'
|           |   |     `-ConditionalOperator 0x18e9d319048 <col:29, col:47> 'int'
|           |   |       |-ParenExpr 0x18e9d318fb8 <col:29, col:37> 'int'
|           |   |       | `-BinaryOperator 0x18e9d318f98 <col:30, col:36> 'int' '>'
|           |   |       |   |-ImplicitCastExpr 0x18e9d318f80 <col:30> 'int' <LValueToRValue>
|           |   |       |   | `-DeclRefExpr 0x18e9d318f38 <col:30> 'int' lvalue Var 0x18e9d31eb78 'num' 'int'
|           |   |       |   `-IntegerLiteral 0x18e9d318f58 <col:36> 'int' 0
|           |   |       |-ImplicitCastExpr 0x18e9d319018 <col:41> 'int' <LValueToRValue>
|           |   |       | `-DeclRefExpr 0x18e9d318fd8 <col:41> 'int' lvalue Var 0x18e9d31eb78 'num' 'int'
|           |   |       `-ImplicitCastExpr 0x18e9d319030 <col:47> 'int' <LValueToRValue>
|           |   |         `-DeclRefExpr 0x18e9d318ff8 <col:47> 'int' lvalue Var 0x18e9d31ec20 'i' 'int'
|           |   `-IfStmt 0x18e9d3191a8 <line:443:17, line:444:32>
|           |     |-BinaryOperator 0x18e9d319120 <line:443:21, col:26> 'int' '=='
|           |     | |-ImplicitCastExpr 0x18e9d319108 <col:21> 'int' <LValueToRValue>
|           |     | | `-DeclRefExpr 0x18e9d3190c0 <col:21> 'int' lvalue Var 0x18e9d31ec20 'i' 'int'
|           |     | `-IntegerLiteral 0x18e9d3190e0 <col:26> 'int' 0
|           |     `-ReturnStmt 0x18e9d319198 <line:444:21, col:32>
|           |       `-ImplicitCastExpr 0x18e9d319180 <col:28, col:32> 'int' <LValueToRValue>
|           |         `-ParenExpr 0x18e9d319160 <col:28, col:32> 'int' lvalue
|           |           `-DeclRefExpr 0x18e9d319140 <col:29> 'int' lvalue Var 0x18e9d31eb78 'num' 'int'
|           |-BinaryOperator 0x18e9d3192a0 <line:446:13, col:29> 'int' '='
|           | |-MemberExpr 0x18e9d319238 <col:13, col:18> 'int' lvalue ->ibuf_len 0x18e9d308328
|           | | `-ImplicitCastExpr 0x18e9d319220 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|           | |   `-DeclRefExpr 0x18e9d319200 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d31eae0 'ctx' 'BIO_F_BUFFER_CTX *'
|           | `-ImplicitCastExpr 0x18e9d319288 <col:29> 'int' <LValueToRValue>
|           |   `-DeclRefExpr 0x18e9d319268 <col:29> 'int' lvalue Var 0x18e9d31ec20 'i' 'int'
|           `-BinaryOperator 0x18e9d319350 <line:447:13, col:29> 'int' '='
|             |-MemberExpr 0x18e9d3192f8 <col:13, col:18> 'int' lvalue ->ibuf_off 0x18e9d308398
|             | `-ImplicitCastExpr 0x18e9d3192e0 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|             |   `-DeclRefExpr 0x18e9d3192c0 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x18e9d31eae0 'ctx' 'BIO_F_BUFFER_CTX *'
|             `-IntegerLiteral 0x18e9d319328 <col:29> 'int' 0
|-FunctionDecl 0x18e9d319580 <line:452:1, line:455:1> line:452:12 invalid buffer_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x18e9d319460 <col:24, col:29> col:29 invalid b 'int *'
| |-ParmVarDecl 0x18e9d3194e0 <col:32, col:44> col:44 used str 'const char *'
| `-CompoundStmt 0x18e9d3198b0 <line:453:1, line:455:1>
`-FunctionDecl 0x18e9d3196b0 <line:454:34> col:34 implicit used strlen 'unsigned long long (const char *)' extern
  `-ParmVarDecl 0x18e9d319750 <<invalid sloc>> <invalid sloc> 'const char *'
