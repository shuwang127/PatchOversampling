TranslationUnitDecl 0x24e4ba844a8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x24e4ba84d40 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x24e4ba84a40 '__int128'
|-TypedefDecl 0x24e4ba84db0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x24e4ba84a60 'unsigned __int128'
|-TypedefDecl 0x24e4ba850e8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x24e4ba84ea0 'struct __NSConstantString_tag'
|   `-Record 0x24e4ba84e08 '__NSConstantString_tag'
|-TypedefDecl 0x24e4ba85158 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x24e4ba84680 'unsigned long long'
|-TypedefDecl 0x24e4ba851f0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x24e4ba851b0 'char *'
|   `-BuiltinType 0x24e4ba84540 'char'
|-TypedefDecl 0x24e4ba85260 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x24e4ba851b0 'char *'
|   `-BuiltinType 0x24e4ba84540 'char'
|-TypedefDecl 0x24e4ba85320 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x24e4ba84680 'unsigned long long'
|-TypedefDecl 0x24e4ba85390 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x24e4ba851b0 'char *'
|   `-BuiltinType 0x24e4ba84540 'char'
|-FunctionDecl 0x24e4d662420 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x24e4d6624c0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x24e4d662530 <col:21> Implicit
|-FunctionDecl 0x24e4d662588 prev 0x24e4d662420 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x24e4d6622b0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x24e4d662678 <col:21> Inherited Implicit
|-TypedefDecl 0x24e4d6626b8 prev 0x24e4ba85158 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x24e4ba84680 'unsigned long long'
|-TypedefDecl 0x24e4d662760 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x24e4d662730 'size_t' sugar
|   |-Typedef 0x24e4d6626b8 'size_t'
|   `-BuiltinType 0x24e4ba84680 'unsigned long long'
|-TypedefDecl 0x24e4d6627d0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x24e4ba845e0 'long long'
|-TypedefDecl 0x24e4d662840 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x24e4ba845e0 'long long'
|-TypedefDecl 0x24e4d6628b0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x24e4ba84620 'unsigned short'
|-TypedefDecl 0x24e4d662920 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x24e4ba84620 'unsigned short'
|-TypedefDecl 0x24e4d662990 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x24e4ba84620 'unsigned short'
|-TypedefDecl 0x24e4d662a00 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x24e4ba845a0 'int'
|-TypedefDecl 0x24e4d662a70 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x24e4ba845c0 'long'
|-TypedefDecl 0x24e4d662ae0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x24e4ba845e0 'long long'
|-TypedefDecl 0x24e4d662b70 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x24e4d662b40 '__time64_t' sugar
|   |-Typedef 0x24e4d662ae0 '__time64_t'
|   `-BuiltinType 0x24e4ba845e0 'long long'
|-FunctionDecl 0x24e4d662ce8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x24e4d662f08 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x24e4d696990 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x24e4d663048 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x24e4d6630c0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x24e4d663138 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x24e4d6631b8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x24e4d696730 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x24e4d696a70 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x24e4d696b30 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x24e4d696ca0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x24e4d696c50 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x24e4d696bf0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x24e4d696b10 'struct threadlocaleinfostruct'
|       `-Record 0x24e4d6a5820 'threadlocaleinfostruct'
|-TypedefDecl 0x24e4d696db0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x24e4d696d60 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x24e4d696d00 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x24e4d696bd0 'struct threadmbcinfostruct'
|       `-Record 0x24e4d696b30 'threadmbcinfostruct'
|-RecordDecl 0x24e4d696e08 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x24e4d696ec0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x24e4d696f80 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x24e4d697010 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x24e4d6970a0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x24e4d697158 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x24e4d697100 'struct localeinfo_struct' sugar
|   `-RecordType 0x24e4d696f60 'struct localeinfo_struct'
|     `-Record 0x24e4d696ec0 'localeinfo_struct'
|-TypedefDecl 0x24e4d697230 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x24e4d6971e0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x24e4d697100 'struct localeinfo_struct' sugar
|     `-RecordType 0x24e4d696f60 'struct localeinfo_struct'
|       `-Record 0x24e4d696ec0 'localeinfo_struct'
|-RecordDecl 0x24e4d6972a8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x24e4d697360 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x24e4d6973d8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x24e4d697498 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x24e4d697530 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x24e4d6975a0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x24e4d697658 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x24e4d697600 'struct localerefcount' sugar
|   `-RecordType 0x24e4d697340 'struct localerefcount'
|     `-Record 0x24e4d6972a8 'localerefcount'
|-RecordDecl 0x24e4d6a5820 prev 0x24e4d696a70 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x24e4d6a58a0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x24e4d6a5918 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x24e4d6a5988 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x24e4d6a59f8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x24e4d6a5a68 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x24e4d6a5c28 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x24e4d6a5c98 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x24e4d6a5d08 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x24e4d6a5d78 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x24e4d6a5de8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x24e4d6a5e58 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x24e4d6a5eb0 parent 0x24e4ba844a8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x24e4d6a6040 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x24e4d6a60b0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x24e4d6a6120 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x24e4d6a6190 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x24e4d6a6230 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x24e4d6a62a0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x24e4d6a63b0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x24e4d6a64e8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x24e4d6a6598 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x24e4d6a6540 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x24e4d696b10 'struct threadlocaleinfostruct'
|     `-Record 0x24e4d6a5820 'threadlocaleinfostruct'
|-RecordDecl 0x24e4d6a6630 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x24e4d6a66f0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x24e4d6a6768 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x24e4d6a7840 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x24e4d6a78b0 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x24e4d6a7920 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x24e4d6a7990 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x24e4d6a7a00 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x24e4d6a7a70 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x24e4d6a7ae0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x24e4d6a7b90 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x24e4d6a7b40 'struct _iobuf' sugar
|   `-RecordType 0x24e4d6a66d0 'struct _iobuf'
|     `-Record 0x24e4d6a6630 '_iobuf'
|-FunctionDecl 0x24e4d6a7dc8 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x24e4d6a7e98 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x24e4ba845e0 'long long'
|-FunctionDecl 0x24e4d6a8078 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x24e4d6a7f00 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x24e4d6a8370 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x24e4d6a8150 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x24e4d6a81c8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x24e4d6a8720 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x24e4d6a8450 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x24e4d6a84d0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x24e4d6a8550 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x24e4d6aca00 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x24e4d6ac890 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x24e4d6acc30 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x24e4d6acaf0 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x24e4d6acde0 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x24e4d6acd00 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x24e4d6acfd0 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x24e4d6ad2c8 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x24e4d6ad0a0 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x24e4d6ad120 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x24e4d6ad480 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x24e4d6ad3a0 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x24e4d6ad630 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x24e4d6ad550 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x24e4d6ad7e0 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x24e4d6ad700 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x24e4d6ad9a8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x24e4d6ad8c8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x24e4d6adb38 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x24e4d6adea0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x24e4d6adc00 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x24e4d6adcf8 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x24e4d6ae258 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x24e4d6adf80 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x24e4d6ae000 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x24e4d6ae078 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x24e4d6ae418 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x24e4d6ae338 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x24e4d6ae6e0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x24e4d6ae4f0 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x24e4d6ae570 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x24e4d6ae8b0 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x24e4d6aeca8 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x24e4d6aed48 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24e4d6aedb0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24e4d6aee28 prev 0x24e4d6aeca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x24e4d6aea80 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x24e4d6aeb00 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x24e4d6aeed8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d6af350 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x24e4d6af080 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x24e4d6af100 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x24e4d6af180 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x24e4d6af670 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x24e4d6af710 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x24e4d6af778 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x24e4d6af7f0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x24e4d6ab880 prev 0x24e4d6af670 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x24e4d6af430 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x24e4d6af4b0 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x24e4d6ab978 <col:40> Inherited printf 2 3
|-FunctionDecl 0x24e4d6abb40 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x24e4d6ab9c0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x24e4d6aba40 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x24e4d6abd98 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x24e4d6abc20 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x24e4d6abc98 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x24e4d6abfc8 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x24e4d6abe78 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x24e4d6ac2c0 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x24e4d6ac0a0 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x24e4d6ac118 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x24e4d6ac758 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x24e4d6ac7f8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x24e4d6b18e0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x24e4d6b1948 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x24e4d6b19b0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x24e4d6b1a38 prev 0x24e4d6ac758 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x24e4d6ac3a0 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x24e4d6ac418 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d6ac490 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24e4d6ac508 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x24e4d6b1f40 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x24e4d6b1b28 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x24e4d6b1ba0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d6b1c18 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d6b1c90 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24e4d6b1d08 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x24e4d6b2400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x24e4d6b2130 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x24e4d6b21b0 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x24e4d6b2228 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x24e4d6b24b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d6af968 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x24e4d6b2600 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x24e4d6b2680 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x24e4d6b2700 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x24e4d6b2778 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x24e4d6afd10 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x24e4d6afdb0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x24e4d6afe18 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x24e4d6afe90 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x24e4d6afef8 prev 0x24e4d6afd10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x24e4d6afb48 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x24e4d6afbc8 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x24e4d6b00d8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x24e4d6affa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d6b0518 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d6b0218 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x24e4d6b0298 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x24e4d6b0330 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x24e4d6b05d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d6b08d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x24e4d6b0710 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x24e4d6b0790 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x24e4d6b0bc0 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d6b09a8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x24e4d6b0a28 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x24e4d6b0aa0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d6b0f20 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x24e4d6b0ca0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x24e4d6b0d78 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x24e4d6b12d8 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x24e4d6b0ff8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x24e4d6b1078 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x24e4d6b10f8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x24e4d6b1538 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x24e4d6b13b8 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x24e4d6aa8b8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x24e4d6b1608 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x24e4d6b1688 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x24e4d6b1708 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x24e4d6aab18 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x24e4d6aa998 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x24e4d6aafd8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x24e4d6ab078 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x24e4d6ab0e0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x24e4d6ab148 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x24e4d6ab1b0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x24e4d6ab238 prev 0x24e4d6aafd8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x24e4d6aac20 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x24e4d6aac98 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d6aad10 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24e4d6aad88 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x24e4d6ab400 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x24e4d6ab320 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x24e4d6ab590 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x24e4d6ab718 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x24e4d6b3ac0 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x24e4d6ab7e8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x24e4d6b3910 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x24e4d6b3de8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x24e4d6b3ca0 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x24e4d6b3e90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d6b40b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x24e4d6b3fd0 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x24e4d6b42d0 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x24e4d6b4188 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x24e4d6b4480 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x24e4d6b43a0 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x24e4d6b46d0 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x24e4d6b4558 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x24e4d6b45d8 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x24e4d6b4910 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x24e4d6b49b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x24e4d6b4a20 <col:40> Implicit printf 1 2
|-FunctionDecl 0x24e4d6b4a88 prev 0x24e4d6b4910 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x24e4d6b47b0 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x24e4d6b4b78 <col:40> Inherited printf 1 2
|-FunctionDecl 0x24e4d6b4ca8 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x24e4d6b4bc8 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x24e4d6b4ef8 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x24e4d6b4d80 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x24e4d6b4df8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x24e4d6b50b8 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x24e4d6b4fd8 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x24e4d6b52d8 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x24e4d6b5190 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x24e4d6b5528 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x24e4d6b53b0 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x24e4d6b5428 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x24e4d6b56e8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x24e4d6b5608 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x24e4d702fb0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x24e4d6b57c0 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x24e4d6b5840 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x24e4d703170 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x24e4d703090 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x24e4d703400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x24e4d703320 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x24e4d7034a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x24e4d7036a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x24e4d7035c8 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x24e4d703830 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x24e4d703ad8 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x24e4d703b78 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x24e4d703be8 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x24e4d703c50 prev 0x24e4d703ad8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x24e4d7039c0 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x24e4d703e28 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x24e4d703cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d705210 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d704fd8 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x24e4d705050 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x24e4d7052c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d7054e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x24e4d705408 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x24e4d705738 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d7055c0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x24e4d705638 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d705af8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x24e4d7058d0 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x24e4d705950 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x24e4d705ba8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d705dd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x24e4d705cf0 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x24e4d704038 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x24e4d703ef0 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x24e4d704220 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x24e4d704670 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x24e4d7042e8 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x24e4d704368 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x24e4d7043e8 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x24e4d704460 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x24e4d704af0 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x24e4d704760 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x24e4d7047d8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d704850 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24e4d7048d0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x24e4d707f30 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x24e4d704be0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x24e4d704c58 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24e4d704cd8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x24e4d7080f8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x24e4d708018 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x24e4d7084d0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x24e4d708570 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x24e4d7085d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x24e4d708650 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x24e4d7086b8 prev 0x24e4d7084d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x24e4d708290 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x24e4d708310 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x24e4d708898 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x24e4d708768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d708c88 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d7089a8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x24e4d708a28 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x24e4d708aa0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x24e4d708d40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d707020 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x24e4d708e88 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x24e4d706f20 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x24e4d707318 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d707100 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x24e4d707180 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x24e4d7071f8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d7077a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x24e4d7074c0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x24e4d707538 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d7075b8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x24e4d707860 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d707e30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d707aa0 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x24e4d707b18 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d707b98 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x24e4d707c10 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x24e4d705f10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d706270 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x24e4d706058 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x24e4d7060d0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24e4d706150 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x24e4d706608 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d706358 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x24e4d7063d0 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d706450 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x24e4d7064c8 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d706868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x24e4d706908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d706bc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x24e4d706a50 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x24e4d708f40 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x24e4d706c98 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x24e4d706d10 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x24e4d7091c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x24e4d7090e0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x24e4d709268 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d709528 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x24e4d7093b0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x24e4d709428 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x24e4d709940 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x24e4d7099e0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x24e4d709a48 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x24e4d709ab0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x24e4d709b30 <col:40> Implicit printf 2 0
|-FunctionDecl 0x24e4d709b98 prev 0x24e4d709940 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x24e4d709600 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x24e4d709680 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x24e4d7096f8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x24e4d709c98 <col:40> Inherited printf 2 0
|-FunctionDecl 0x24e4d701ed0 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x24e4d701f70 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x24e4d701fd8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x24e4d702040 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x24e4d7020c0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x24e4d702128 prev 0x24e4d701ed0 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x24e4d709ce0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x24e4d709d60 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x24e4d709dd8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x24e4d702228 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x24e4d702488 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x24e4d702270 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x24e4d7022f0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x24e4d702368 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d702780 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x24e4d702568 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x24e4d7025e8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x24e4d702660 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d702ac8 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x24e4d702b68 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x24e4d702bd0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x24e4d702c48 <col:40> Implicit printf 1 0
|-FunctionDecl 0x24e4d702cb0 prev 0x24e4d702ac8 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x24e4d702868 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x24e4d7028e0 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x24e4d702da8 <col:40> Inherited printf 1 0
|-FunctionDecl 0x24e4d70d0b8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x24e4d70d158 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x24e4d70d1c0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x24e4d70d238 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x24e4d70d2a0 prev 0x24e4d70d0b8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x24e4d702df8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x24e4d70cf80 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x24e4d70d398 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x24e4d70d560 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x24e4d70d3e8 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x24e4d70d460 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d70d7b8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x24e4d70d640 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x24e4d70d6b8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d70dd18 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x24e4d70ddb8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x24e4d70de20 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x24e4d70de88 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x24e4d70def0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x24e4d70ffb0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x24e4d710018 prev 0x24e4d70dd18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x24e4d70d958 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x24e4d70d9d0 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d70da50 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x24e4d70dac8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x24e4d710208 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x24e4d7100d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d710678 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x24e4d710258 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x24e4d7102d0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d710348 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d7103c8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x24e4d710440 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d710ab8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x24e4d710770 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x24e4d7107e8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d710860 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d7108e0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x24e4d710958 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d710e88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x24e4d710c70 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x24e4d710ce8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d710d68 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x24e4d710f40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d70e400 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x24e4d70e150 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x24e4d70e1c8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d70e248 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x24e4d70e2c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x24e4d70e4c0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d70e8b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x24e4d70e608 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x24e4d70e680 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d70e700 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x24e4d70e778 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d70ec78 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x24e4d70e9a8 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x24e4d70ea28 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x24e4d70eaa0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d70f040 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x24e4d70f0e0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x24e4d70f148 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x24e4d70f1c0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x24e4d70f228 prev 0x24e4d70f040 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x24e4d70ee20 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x24e4d70eea0 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x24e4d70f408 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x24e4d70f2d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d70f830 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x24e4d70f8d0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x24e4d70f938 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x24e4d70f9a0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x24e4d70fa20 <col:94> Implicit printf 2 0
|-FunctionDecl 0x24e4d70fa88 prev 0x24e4d70f830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x24e4d70f518 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x24e4d70f598 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x24e4d70f610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x24e4d70fc70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x24e4d70fb40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d710fc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x24e4d711060 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x24e4d7110c8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x24e4d711130 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x24e4d7111b0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x24e4d711218 prev 0x24e4d710fc0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x24e4d70fcc0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x24e4d70fd40 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x24e4d70fdb8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x24e4d711318 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x24e4d7114e0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x24e4d711368 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x24e4d7113e0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d7117d8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x24e4d7115c0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x24e4d711638 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24e4d7116b8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x24e4d711b70 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x24e4d7118c0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x24e4d711938 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d7119b8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x24e4d711a30 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d711dd8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x24e4d711c58 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x24e4d711cd8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x24e4d70bf70 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x24e4d711eb8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x24e4d70c260 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x24e4d70c048 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x24e4d70c0c0 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24e4d70c140 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x24e4d70c558 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x24e4d70c340 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x24e4d70c3c0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x24e4d70c438 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d70c7b8 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x24e4d70c640 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x24e4d70c6b8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d70cb48 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x24e4d70c898 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x24e4d70c910 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d70c990 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x24e4d70ca08 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d70cd18 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x24e4d70cc38 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x24e4d711fd0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x24e4d70cdf0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x24e4d70ce68 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d712190 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x24e4d7120b0 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x24e4d712320 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x24e4d712568 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d7123f0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x24e4d712468 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d7127c0 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d712648 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x24e4d7126c0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d712a18 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d7128a0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x24e4d712918 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d712dc8 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d712af8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x24e4d712b70 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x24e4d712be8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d70b080 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d712eb0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x24e4d712f28 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x24e4d70af60 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d70b378 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d70b168 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x24e4d70b1e0 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x24e4d70b258 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d70b670 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d70b458 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x24e4d70b4d8 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x24e4d70b550 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d70b968 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d70b750 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x24e4d70b7d0 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x24e4d70b848 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d70bc60 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d70ba48 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x24e4d70bac8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x24e4d70bb40 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d713140 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d70bd40 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x24e4d70bdc0 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x24e4d70be38 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x24e4d70beb0 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d7134d8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d713228 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x24e4d7132a8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x24e4d713320 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x24e4d713398 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d713870 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d7135c0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x24e4d713640 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x24e4d7136b8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x24e4d713730 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d713d08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d713a20 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x24e4d713aa0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x24e4d713b18 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x24e4d713dc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d717330 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d713f08 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x24e4d717020 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d7170a0 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x24e4d717118 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d7176d0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d717420 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x24e4d717498 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d717518 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x24e4d717590 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d717c20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d7178c0 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x24e4d717940 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x24e4d7179b8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x24e4d717a30 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x24e4d717ce0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d71b298 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d717e28 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x24e4d717ea0 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d717f20 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x24e4d717f98 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x24e4d71b060 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d71b6d8 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d71b390 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x24e4d71b408 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d71b488 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x24e4d71b500 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x24e4d71b578 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d71b948 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d71b7d0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x24e4d71b848 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d71bba0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d71ba28 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x24e4d71baa0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d71be90 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d71bc80 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x24e4d71bcf8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x24e4d71bd70 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d715130 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d71bf78 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x24e4d71bff0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x24e4d715010 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d715588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d7152d8 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x24e4d715350 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d7153d0 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x24e4d715448 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x24e4d715648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d715a40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d715790 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x24e4d715808 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d715888 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x24e4d715900 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d713ff0 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d715b30 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x24e4d715ba8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d715c20 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d715ca0 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x24e4d715d18 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d714530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d7141e8 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x24e4d714260 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d7142e0 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x24e4d714358 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x24e4d7143d0 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x24e4d7145f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d714a78 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d714748 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x24e4d7147c0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d714840 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x24e4d7148b8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x24e4d714930 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d716070 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d714b70 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x24e4d714be8 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d714c60 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d714ce0 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x24e4d714d58 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x24e4d714dd0 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d716430 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x24e4d716168 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x24e4d7161e0 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x24e4d716260 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x24e4d7166a0 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x24e4d716530 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x24e4d7168b8 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x24e4d716b98 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x24e4d716980 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x24e4d7169f8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x24e4d716de0 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x24e4d716c70 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x24e4d71a050 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x24e4d716eb0 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x24e4d71a1d8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x24e4d71a410 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x24e4d71a2a0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x24e4d71a318 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x24e4d71a5c0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x24e4d71a4e8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x24e4d71a868 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x24e4d71a690 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x24e4d71a708 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x24e4d71ac10 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x24e4d71a940 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x24e4d71a9c0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x24e4d71aa38 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x24e4d71af10 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x24e4d71acf0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x24e4d71ad68 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x24e4d7191f8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x24e4d71afe8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x24e4d719050 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x24e4d719500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x24e4d719390 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x24e4d7195a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d719868 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x24e4d7196e8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x24e4d719b70 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x24e4d719938 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x24e4d7199b0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x24e4d719dc0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x24e4d719c48 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x24e4d719cc0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x24e4d71c070 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x24e4d719e98 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x24e4d71c220 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x24e4d71c140 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x24e4d71c3d0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x24e4d71c2f0 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x24e4d71c768 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x24e4d71c4a0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x24e4d71c518 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d71c590 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d71ca58 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x24e4d71c848 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x24e4d71c8c0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d71c938 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d71cd48 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x24e4d71cb38 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x24e4d71cbb0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d71cc28 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d71d080 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x24e4d71ce28 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x24e4d71cea0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d71cf18 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d71d380 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x24e4d71d160 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d71d1d8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d71d5d0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x24e4d71d458 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d71d4d0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d71d820 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x24e4d71d6a8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d71d720 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d71da70 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x24e4d71d8f8 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d71d970 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d71de28 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x24e4d71db48 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x24e4d71dbc0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24e4d71dc38 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x24e4d71f2b0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x24e4d71df08 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x24e4d71df80 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d71dff8 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d71f0a0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d71f668 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x24e4d71f398 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x24e4d71f410 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d71f488 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d71f958 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x24e4d71f748 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x24e4d71f7c0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d71f838 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d71fc48 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x24e4d71fa38 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x24e4d71fab0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24e4d71fb28 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x24e4d71ffd0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x24e4d71fd28 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x24e4d71fda0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d71fe18 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d71fe90 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d7183e0 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x24e4d718058 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x24e4d7180d0 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d718148 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24e4d7181c0 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x24e4d7188e8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x24e4d7184c8 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x24e4d718540 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d7185b8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d718630 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d7186a8 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d718ca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x24e4d718a98 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x24e4d718b10 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d718b88 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x24e4d718d60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d7202e0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x24e4d718f60 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x24e4d7200b0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d720128 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x24e4d7201a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x24e4d7203a0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d720658 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x24e4d7204e0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x24e4d720558 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x24e4d720810 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x24e4d720730 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x24e4d720af0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x24e4d7208e0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x24e4d720958 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d7209d0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d720d48 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x24e4d720bd0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d720c48 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d722f00 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x24e4d720e20 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x24e4d720e98 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24e4d720f10 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x24e4d723288 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x24e4d722fe0 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x24e4d723058 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d7230d0 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d723148 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d723450 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x24e4d723370 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x24e4d723698 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x24e4d723520 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d723598 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d7239a0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d723770 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d7237e8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d723bf0 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d723a78 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d723af0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d723e40 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d723cc8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d723d40 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d72a268 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d729f98 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x24e4d72a010 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x24e4d72a088 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d72a558 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d72a348 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x24e4d72a3c0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x24e4d72a438 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d72a848 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d72a638 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x24e4d72a6b0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x24e4d72a728 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d72ac08 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d72a928 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x24e4d72a9a0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d72aa18 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d726f40 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d72ace8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x24e4d72ad60 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d72add8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d727230 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d727020 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x24e4d727098 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d727110 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d727680 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d727310 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x24e4d727388 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x24e4d727400 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x24e4d727478 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d727a10 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d727768 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x24e4d7277e0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x24e4d727858 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x24e4d7278d0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d727da0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d727af8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x24e4d727b70 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x24e4d727be8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x24e4d727c60 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d728260 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d727e88 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x24e4d727f50 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d727fc8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d728040 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d7285f0 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d728348 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x24e4d7283c0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d728438 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d7284b0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d728980 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d7286d8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x24e4d728750 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d7287c8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d728840 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d728e88 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d728a68 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x24e4d728ae0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d728b58 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x24e4d728bd0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x24e4d728c48 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d7292c8 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d728f88 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x24e4d729000 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d729078 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x24e4d7290f0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x24e4d729168 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d7296f8 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d7293b8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x24e4d729430 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d7294a8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x24e4d729520 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x24e4d729598 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d729960 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d7297e8 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d729860 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d729bb0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d729a38 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d729ab0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d729e98 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d729c88 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x24e4d729d00 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x24e4d729d78 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d72b318 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d72b070 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x24e4d72b0e8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d72b160 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x24e4d72b1d8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x24e4d72b3d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d72b948 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d72b520 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x24e4d72b598 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d72b610 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d72b688 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d72b700 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d72be80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d72bb40 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x24e4d72bbb8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d72bc30 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x24e4d72bca8 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x24e4d72bd20 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x24e4d723f10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d724520 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d724058 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x24e4d7240d0 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d724148 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d7241c0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x24e4d724238 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x24e4d7242b0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d724a20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x24e4d7247e8 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x24e4d724860 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x24e4d724ad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x24e4d724be8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x24e4d72c1f8 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x24e4d724ea0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x24e4d72bfa0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x24e4d72c018 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x24e4d72c2b0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x24e4d72c3c8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x24e4d72c968 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d72c688 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x24e4d72c700 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x24e4d72c778 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x24e4d72ca20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x24e4d72cb40 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x24e4d725130 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d72ce00 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x24e4d72ce78 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x24e4d72cef0 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x24e4d724f20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x24e4d7251f0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x24e4d725310 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x24e4d725618 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x24e4d725438 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x24e4d7254b0 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d725528 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x24e4d7332a0 <line:37:1, line:44:1>
|   |-DeclStmt 0x24e4d725760 <line:38:5, col:21>
|   | `-VarDecl 0x24e4d7256f8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x24e4d7257f8 <line:39:5, col:13>
|   | `-VarDecl 0x24e4d725790 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x24e4d725b50 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x24e4d725b38 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x24e4d725a50 <col:34> '<builtin fn type>' Function 0x24e4d7258e8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x24e4d725a88 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x24e4d7256f8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x24e4d725ac0 <col:29> 'const wchar_t *' lvalue ParmVar 0x24e4d725528 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x24e4d725e10 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x24e4d725b80 <col:5> 'int' lvalue Var 0x24e4d725790 '_Ret' 'int'
|   | `-CallExpr 0x24e4d725d50 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x24e4d725d38 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x24e4d725bb8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x24e4d728e88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x24e4d725d98 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x24e4d725bd8 <col:27> 'wchar_t *' lvalue ParmVar 0x24e4d725438 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x24e4d725db0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x24e4d725bf8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x24e4d7254b0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x24e4d725dc8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x24e4d725c18 <col:44> 'const wchar_t *' lvalue ParmVar 0x24e4d725528 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x24e4d725de0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x24e4d725ca0 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x24e4d725c78 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x24e4d725c38 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x24e4d725df8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x24e4d725cc0 <col:59> 'va_list':'char *' lvalue Var 0x24e4d7256f8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x24e4d733230 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x24e4d733218 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x24e4d733168 <col:34> '<builtin fn type>' Function 0x24e4d733000 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x24e4d7331a0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x24e4d7256f8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x24e4d733290 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x24e4d733278 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x24e4d733258 <col:12> 'int' lvalue Var 0x24e4d725790 '_Ret' 'int'
|-FunctionDecl 0x24e4d7258e8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x24e4d725988 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x24e4d7259f8 <col:34> Implicit
|-FunctionDecl 0x24e4d733000 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x24e4d7330a0 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x24e4d733110 <col:34> Implicit
|-FunctionDecl 0x24e4d733598 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x24e4d7332f0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x24e4d733368 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d7333e0 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x24e4d733458 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x24e4d733880 <line:50:1, line:52:1>
|   `-ReturnStmt 0x24e4d733870 <line:51:5, col:62>
|     `-CallExpr 0x24e4d7337b0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x24e4d733798 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x24e4d733670 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x24e4d728e88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x24e4d7337f8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x24e4d733690 <col:27> 'wchar_t *' lvalue ParmVar 0x24e4d7332f0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x24e4d733810 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x24e4d7336b0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x24e4d733368 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x24e4d733828 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x24e4d7336d0 <col:44> 'const wchar_t *' lvalue ParmVar 0x24e4d7333e0 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x24e4d733840 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x24e4d733758 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x24e4d733730 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x24e4d7336f0 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x24e4d733858 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x24e4d733778 <col:59> 'va_list':'char *' lvalue ParmVar 0x24e4d733458 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x24e4d733b20 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x24e4d7338a8 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x24e4d733920 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d733998 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x24e4d733a10 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x24e4d732098 <line:61:1, line:68:1>
|   |-DeclStmt 0x24e4d733c70 <line:62:5, col:21>
|   | `-VarDecl 0x24e4d733c08 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x24e4d733d08 <line:63:5, col:13>
|   | `-VarDecl 0x24e4d733ca0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x24e4d733db0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x24e4d733d98 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x24e4d733d20 <col:34> '<builtin fn type>' Function 0x24e4d7258e8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x24e4d733d40 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x24e4d733c08 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x24e4d733d78 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x24e4d733a10 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x24e4d733fb0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x24e4d733de0 <col:5> 'int' lvalue Var 0x24e4d733ca0 '_Ret' 'int'
|   | `-CallExpr 0x24e4d733ef0 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x24e4d733ed8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x24e4d733e18 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x24e4d728e88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x24e4d733f38 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x24e4d733e38 <col:27> 'wchar_t *' lvalue ParmVar 0x24e4d7338a8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x24e4d733f50 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x24e4d733e58 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x24e4d733920 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x24e4d733f68 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x24e4d733e78 <col:44> 'const wchar_t *' lvalue ParmVar 0x24e4d733998 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x24e4d733f80 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x24e4d733e98 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x24e4d733a10 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x24e4d733f98 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x24e4d733eb8 <col:64> 'va_list':'char *' lvalue Var 0x24e4d733c08 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x24e4d732028 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x24e4d732010 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x24e4d733fd0 <col:34> '<builtin fn type>' Function 0x24e4d733000 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x24e4d731ff0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x24e4d733c08 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x24e4d732088 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x24e4d732070 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x24e4d732050 <col:12> 'int' lvalue Var 0x24e4d733ca0 '_Ret' 'int'
|-FunctionDecl 0x24e4d732428 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x24e4d7320e8 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x24e4d732160 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d7321d8 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x24e4d732250 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x24e4d7322c8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x24e4d7326b0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x24e4d7326a0 <line:75:5, col:67>
|     `-CallExpr 0x24e4d7325e0 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x24e4d7325c8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x24e4d732508 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x24e4d728e88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x24e4d732628 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x24e4d732528 <col:27> 'wchar_t *' lvalue ParmVar 0x24e4d7320e8 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x24e4d732640 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x24e4d732548 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x24e4d732160 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x24e4d732658 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x24e4d732568 <col:44> 'const wchar_t *' lvalue ParmVar 0x24e4d7321d8 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x24e4d732670 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x24e4d732588 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x24e4d732250 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x24e4d732688 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x24e4d7325a8 <col:64> 'va_list':'char *' lvalue ParmVar 0x24e4d7322c8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x24e4d7328f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24e4d7326d8 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x24e4d732750 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x24e4d732b48 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x24e4d7329d0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d732a48 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d732e30 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x24e4d732c20 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x24e4d732c98 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x24e4d732d10 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x24e4d72d118 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x24e4d72cfa0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x24e4d72d018 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x24e4d72d1c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d72d5d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d72d3c8 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x24e4d72d440 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x24e4d72d4b8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x24e4d72d690 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d72d948 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x24e4d72d7d0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x24e4d72d848 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x24e4d72dc30 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d72da20 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x24e4d72da98 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d72db10 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d734080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x24e4d72ddd0 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x24e4d72de48 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x24e4d734130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d734608 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d734330 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x24e4d7343a8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x24e4d734420 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x24e4d7346c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d734978 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x24e4d734800 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x24e4d734878 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x24e4d734c60 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d734a50 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x24e4d734ac8 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d734b40 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d7300b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x24e4d734e00 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x24e4d734e78 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d734ef0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x24e4d730170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d7306f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d730370 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x24e4d7303e8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d730460 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x24e4d7304d8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x24e4d7307b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d730b00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x24e4d7308f0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x24e4d730968 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24e4d7309e0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x24e4d730e88 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d730be0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x24e4d730c58 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d730cd0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d730d48 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d7351d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x24e4d7350f0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x24e4d735278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d7355f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d735478 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x24e4d7354f0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x24e4d7356a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d7358c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x24e4d7357e0 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x24e4d735b08 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x24e4d735990 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x24e4d735a08 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24e4d735e08 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x24e4d735be8 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x24e4d735c60 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x24e4d72e158 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24e4d735fa0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x24e4d72dfb0 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x24e4d72e208 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d72e610 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24e4d72e350 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x24e4d72e3c8 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x24e4d72e440 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x24e4d72ea70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x24e4d72e7b0 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x24e4d72e828 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x24e4d72e8a0 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x24e4d72eb28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d731028 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x24e4d72ec70 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x24e4d72ece8 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x24e4d72ed60 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x24e4d72edd8 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x24e4d731280 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x24e4d731110 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x24e4d7314c0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24e4d731350 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x24e4d7313c8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x24e4d731678 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x24e4d731598 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x24e4d731968 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x24e4d731748 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x24e4d7317c0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x24e4d731bd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x24e4d731b00 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x24e4d731c80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24e4d731e98 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x24e4d731dc0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x24e4d739158 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x24e4d731f68 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x24e4d739060 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x24e4d7393a0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x24e4d739230 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x24e4d7392a8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x24e4d739550 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x24e4d739478 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x24e4d7396f8 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x24e4d739620 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x24e4d7398a8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x24e4d7397c8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x24e4d739a58 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x24e4d739978 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x24e4d739dd0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x24e4d739b30 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x24e4d739ba8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d739c20 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24e4d739c98 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x24e4d73c260 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x24e4d739ec0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x24e4d739f38 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d739fb0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d73c090 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24e4d73c108 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x24e4d73c570 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x24e4d73c350 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x24e4d73c3d0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x24e4d73c450 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x24e4d73c730 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x24e4d73c650 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x24e4d73ca20 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x24e4d73c800 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x24e4d73c880 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x24e4d73c900 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x24e4d73cbe0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x24e4d73cb00 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x24e4d73cf58 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x24e4d73ccb8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x24e4d73cd30 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24e4d73cda8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24e4d73ce20 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x24e4d73a1e8 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x24e4d73a070 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x24e4d73a0e8 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x24e4d73a520 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x24e4d73a3a0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x24e4d73a420 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x24e4d73a5d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x24e4d73a888 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x24e4d73a928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x24e4d73ac68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x24e4d73aaf0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x24e4d73ab70 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x24e4d73ad18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x24e4d73b080 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x24e4d73b120 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x24e4d73b3c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x24e4d73b2e0 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x24e4d73b468 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x24e4d73b6e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x24e4d73b788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x24e4d73ba30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x24e4d73b950 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x24e4d73bad8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x24e4d73bdb8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x24e4d73bcd8 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x24e4d73be60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x24e4d7381c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x24e4d738050 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x24e4d7380c8 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x24e4d738278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x24e4d738538 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x24e4d7385d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x24e4d738810 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:31:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x24e4d738a20 <line:34:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x24e4d7388e0 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x24e4d738c70 <line:35:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x24e4d738af8 <col:34, col:40> col:40 _Value 'int *'
|-RecordDecl 0x24e4d738d30 <.//openssl//file_jk/before\crypto\bio/bio_lcl.h:64:1, line:71:1> line:64:8 struct bio_addrinfo_st definition
| |-FieldDecl 0x24e4d738e08 <line:65:5, col:9> col:9 bai_family 'int'
| |-FieldDecl 0x24e4d738e78 <line:66:5, col:9> col:9 bai_socktype 'int'
| |-FieldDecl 0x24e4d738ee8 <line:67:5, col:9> col:9 bai_protocol 'int'
| |-FieldDecl 0x24e4d738f50 <line:68:5, col:12> col:12 bai_addrlen 'size_t':'unsigned long long'
| |-RecordDecl 0x24e4d738fa8 parent 0x24e4ba844a8 <line:69:5, col:12> col:12 struct sockaddr
| |-FieldDecl 0x24e4d7471a0 <col:5, col:22> col:22 bai_addr 'struct sockaddr *'
| `-FieldDecl 0x24e4d7472b0 <line:70:5, col:29> col:29 bai_next 'struct bio_addrinfo_st *'
|-RecordDecl 0x24e4d747308 <line:74:1, line:83:1> line:74:7 invalid union bio_addr_st definition
| |-FieldDecl 0x24e4d747410 <line:75:5, col:21> col:21 invalid sa 'struct sockaddr':'struct sockaddr'
| |-RecordDecl 0x24e4d747468 parent 0x24e4ba844a8 <line:79:5, col:12> col:12 struct sockaddr_in
| `-FieldDecl 0x24e4d747588 <col:5, col:24> col:24 invalid s_in 'struct sockaddr_in':'struct sockaddr_in'
|-RecordDecl 0x24e4d7475e0 <line:91:9, line:112:1> line:91:16 struct bio_f_buffer_ctx_struct definition
| |-FieldDecl 0x24e4d7476b8 <line:104:5, col:9> col:9 ibuf_size 'int'
| |-FieldDecl 0x24e4d747728 <line:105:5, col:9> col:9 obuf_size 'int'
| |-FieldDecl 0x24e4d747798 <line:106:5, col:11> col:11 ibuf 'char *'
| |-FieldDecl 0x24e4d747808 <line:107:5, col:9> col:9 ibuf_len 'int'
| |-FieldDecl 0x24e4d747878 <line:108:5, col:9> col:9 ibuf_off 'int'
| |-FieldDecl 0x24e4d7478e8 <line:109:5, col:11> col:11 obuf 'char *'
| |-FieldDecl 0x24e4d747958 <line:110:5, col:9> col:9 obuf_len 'int'
| `-FieldDecl 0x24e4d7479c8 <line:111:5, col:9> col:9 obuf_off 'int'
|-TypedefDecl 0x24e4d747a78 <line:91:1, line:112:3> col:3 BIO_F_BUFFER_CTX 'struct bio_f_buffer_ctx_struct':'struct bio_f_buffer_ctx_struct'
| `-ElaboratedType 0x24e4d747a20 'struct bio_f_buffer_ctx_struct' sugar
|   `-RecordType 0x24e4d747680 'struct bio_f_buffer_ctx_struct'
|     `-Record 0x24e4d7475e0 'bio_f_buffer_ctx_struct'
|-RecordDecl 0x24e4d747ae8 <line:114:1, line:132:1> line:114:8 invalid struct bio_st definition
| |-FieldDecl 0x24e4d747bb8 <line:115:5, col:23> col:23 invalid method 'const int *'
| |-FieldDecl 0x24e4d746160 <line:117:5, col:74> col:12 callback 'long (*)(struct bio_st *, int, const char *, int, long, long)'
| |-FieldDecl 0x24e4d7461d0 <line:118:5, col:11> col:11 cb_arg 'char *'
| |-FieldDecl 0x24e4d746240 <line:119:5, col:9> col:9 init 'int'
| |-FieldDecl 0x24e4d7462b0 <line:120:5, col:9> col:9 shutdown 'int'
| |-FieldDecl 0x24e4d746320 <line:121:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x24e4d746390 <line:122:5, col:9> col:9 retry_reason 'int'
| |-FieldDecl 0x24e4d746400 <line:123:5, col:9> col:9 num 'int'
| |-FieldDecl 0x24e4d746470 <line:124:5, col:11> col:11 ptr 'void *'
| |-FieldDecl 0x24e4d7464f0 <line:125:5, col:20> col:20 next_bio 'struct bio_st *'
| |-FieldDecl 0x24e4d746570 <line:126:5, col:20> col:20 prev_bio 'struct bio_st *'
| |-FieldDecl 0x24e4d7465e0 <line:127:5, col:9> col:9 references 'int'
| |-FieldDecl 0x24e4d746650 <line:128:5, col:14> col:14 invalid num_read 'int'
| |-FieldDecl 0x24e4d7466c0 <line:129:5, col:14> col:14 invalid num_write 'int'
| |-FieldDecl 0x24e4d746730 <line:130:5, col:20> col:20 invalid ex_data 'int'
| `-FieldDecl 0x24e4d7467a0 <line:131:5, col:20> col:20 invalid lock 'int *'
|-VarDecl 0x24e4d746810 <line:139:1, col:23> col:23 invalid bio_lookup_lock 'int *' extern
|-FunctionDecl 0x24e4d746aa0 <line:141:1, col:58> col:5 invalid BIO_ADDR_make 'int (int *, const struct sockaddr *)'
| |-ParmVarDecl 0x24e4d746890 <col:19, col:29> col:29 invalid ap 'int *'
| `-ParmVarDecl 0x24e4d746980 <col:33, col:56> col:56 sa 'const struct sockaddr *'
|-FunctionDecl 0x24e4d746c70 <line:142:1, col:60> col:24 invalid BIO_ADDR_sockaddr 'const struct sockaddr *(const int *)'
| `-ParmVarDecl 0x24e4d746b68 <col:42, col:58> col:58 invalid ap 'const int *'
|-FunctionDecl 0x24e4d746e70 <line:143:1, col:56> col:18 invalid BIO_ADDR_sockaddr_noconst 'struct sockaddr *(int *)'
| `-ParmVarDecl 0x24e4d746d30 <col:44, col:54> col:54 invalid ap 'int *'
|-FunctionDecl 0x24e4d747000 <line:144:1, col:52> col:11 invalid BIO_ADDR_sockaddr_size 'int (const int *)'
| `-ParmVarDecl 0x24e4d746f30 <col:34, col:50> col:50 invalid ap 'const int *'
|-FunctionDecl 0x24e4d748178 <line:145:1, col:61> col:11 invalid BIO_ADDRINFO_sockaddr_size 'int (const int *)'
| `-ParmVarDecl 0x24e4d7480e0 <col:38, col:58> col:58 invalid bai 'const int *'
|-FunctionDecl 0x24e4d7482e0 <line:146:1, col:69> col:24 invalid BIO_ADDRINFO_sockaddr 'const struct sockaddr *(const int *)'
| `-ParmVarDecl 0x24e4d748238 <col:46, col:66> col:66 invalid bai 'const int *'
|-VarDecl 0x24e4d7483a0 <line:149:1, col:23> col:23 invalid bio_type_lock 'int *' extern
|-FunctionDecl 0x24e4d7484a0 <line:151:1, col:31> col:6 bio_sock_cleanup_int 'void (void)'
|-FunctionDecl 0x24e4d748760 <.//openssl//file_jk/before\crypto\bio\bf_lbuf.c:16:1, col:61> col:12 invalid linebuffer_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x24e4d748570 <col:29, col:34> col:34 invalid h 'int *'
| |-ParmVarDecl 0x24e4d7485f0 <col:37, col:49> col:49 buf 'const char *'
| `-ParmVarDecl 0x24e4d748670 <col:54, col:58> col:58 num 'int'
|-FunctionDecl 0x24e4d748a20 <line:17:1, col:55> col:12 invalid linebuffer_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x24e4d748830 <col:28, col:33> col:33 invalid h 'int *'
| |-ParmVarDecl 0x24e4d7488b0 <col:36, col:42> col:42 buf 'char *'
| `-ParmVarDecl 0x24e4d748930 <col:47, col:51> col:51 size 'int'
|-FunctionDecl 0x24e4d748c50 <line:18:1, col:51> col:12 invalid linebuffer_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x24e4d748af0 <col:28, col:33> col:33 invalid h 'int *'
| `-ParmVarDecl 0x24e4d748b70 <col:36, col:48> col:48 str 'const char *'
|-FunctionDecl 0x24e4d748ec0 <line:19:1, col:55> col:12 invalid linebuffer_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x24e4d748d18 <col:28, col:33> col:33 invalid h 'int *'
| |-ParmVarDecl 0x24e4d748d98 <col:36, col:42> col:42 str 'char *'
| `-ParmVarDecl 0x24e4d748e18 <col:47, col:51> col:51 size 'int'
|-FunctionDecl 0x24e4d74c280 <line:20:1, col:67> col:13 invalid linebuffer_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x24e4d748f90 <col:29, col:34> col:34 invalid h 'int *'
| |-ParmVarDecl 0x24e4d749010 <col:37, col:41> col:41 cmd 'int'
| |-ParmVarDecl 0x24e4d74c100 <col:46, col:51> col:51 arg1 'long'
| `-ParmVarDecl 0x24e4d74c180 <col:57, col:63> col:63 arg2 'void *'
|-FunctionDecl 0x24e4d74c3f0 <line:21:1, col:33> col:12 invalid linebuffer_new 'int (int *)' static
| `-ParmVarDecl 0x24e4d74c358 <col:27, col:32> col:32 invalid h 'int *'
|-FunctionDecl 0x24e4d74c548 <line:22:1, col:37> col:12 invalid linebuffer_free 'int (int *)' static
| `-ParmVarDecl 0x24e4d74c4b0 <col:28, col:33> col:33 invalid data 'int *'
|-FunctionDecl 0x24e4d74c7f0 <line:23:1, col:70> col:13 invalid linebuffer_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x24e4d74c608 <col:38, col:43> col:43 invalid h 'int *'
| |-ParmVarDecl 0x24e4d74c688 <col:46, col:50> col:50 cmd 'int'
| `-ParmVarDecl 0x24e4d74c708 <col:55, col:68> col:68 invalid fp 'int *'
|-VarDecl 0x24e4d74c8c0 <line:30:1, col:25> col:25 invalid methods_linebuffer 'const int' static
|-FunctionDecl 0x24e4d74ca60 <line:43:1, line:46:1> line:43:19 invalid BIO_f_linebuffer 'const int *(void)'
| `-CompoundStmt 0x24e4d74cb18 <line:44:1, line:46:1>
|-RecordDecl 0x24e4d74cb28 <line:48:9, line:52:1> line:48:16 struct bio_linebuffer_ctx_struct definition
| |-FieldDecl 0x24e4d74cbf8 <line:49:5, col:11> col:11 referenced obuf 'char *'
| |-FieldDecl 0x24e4d74cc68 <line:50:5, col:9> col:9 referenced obuf_size 'int'
| `-FieldDecl 0x24e4d74ccd8 <line:51:5, col:9> col:9 referenced obuf_len 'int'
|-TypedefDecl 0x24e4d74cd88 <line:48:1, line:52:3> col:3 referenced BIO_LINEBUFFER_CTX 'struct bio_linebuffer_ctx_struct':'struct bio_linebuffer_ctx_struct'
| `-ElaboratedType 0x24e4d74cd30 'struct bio_linebuffer_ctx_struct' sugar
|   `-RecordType 0x24e4d74cbc0 'struct bio_linebuffer_ctx_struct'
|     `-Record 0x24e4d74cb28 'bio_linebuffer_ctx_struct'
|-FunctionDecl 0x24e4d74cea8 <line:54:1, line:73:1> line:54:12 invalid linebuffer_new 'int (int *)' static
| |-ParmVarDecl 0x24e4d74ce10 <col:27, col:32> col:32 invalid bi 'int *'
| `-CompoundStmt 0x24e4d74fc48 <line:55:1, line:73:1>
|   |-DeclStmt 0x24e4d74d060 <line:56:5, col:28>
|   | `-VarDecl 0x24e4d74cff8 <col:5, col:25> col:25 used ctx 'BIO_LINEBUFFER_CTX *'
|   |-BinaryOperator 0x24e4d74f330 <line:58:5, col:38> 'BIO_LINEBUFFER_CTX *' '='
|   | |-DeclRefExpr 0x24e4d74d078 <col:5> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d74cff8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | `-ImplicitCastExpr 0x24e4d74f318 <col:11, col:38> 'BIO_LINEBUFFER_CTX *' <IntegralToPointer>
|   |   `-CallExpr 0x24e4d74f2f0 <col:11, col:38> 'int'
|   |     |-ImplicitCastExpr 0x24e4d74f2d8 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x24e4d74f1f8 <col:11> 'int ()' Function 0x24e4d74f130 'OPENSSL_malloc' 'int ()'
|   |     `-UnaryExprOrTypeTraitExpr 0x24e4d74f288 <col:26, col:37> 'unsigned long long' sizeof
|   |       `-ParenExpr 0x24e4d74f268 <col:32, col:37> 'BIO_LINEBUFFER_CTX':'struct bio_linebuffer_ctx_struct' lvalue
|   |         `-UnaryOperator 0x24e4d74f250 <col:33, col:34> 'BIO_LINEBUFFER_CTX':'struct bio_linebuffer_ctx_struct' lvalue prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x24e4d74f238 <col:34> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |             `-DeclRefExpr 0x24e4d74f218 <col:34> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d74cff8 'ctx' 'BIO_LINEBUFFER_CTX *' non_odr_use_unevaluated
|   |-IfStmt 0x24e4d74f4a0 <line:59:5, line:60:18>
|   | |-BinaryOperator 0x24e4d74f428 <line:59:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x24e4d74f3f8 <.//openssl//file_jk/before\crypto\bio\bf_lbuf.c:59:9> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x24e4d74f350 <col:9> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d74cff8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | `-ImplicitCastExpr 0x24e4d74f410 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_LINEBUFFER_CTX *' <BitCast>
|   | |   `-ParenExpr 0x24e4d74f3d8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x24e4d74f3b0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x24e4d74f370 <col:26> 'int' 0
|   | `-ReturnStmt 0x24e4d74f490 <.//openssl//file_jk/before\crypto\bio\bf_lbuf.c:60:9, col:18>
|   |   `-ParenExpr 0x24e4d74f470 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x24e4d74f448 <col:17> 'int' 0
|   |-BinaryOperator 0x24e4d74f608 <line:61:5, col:55> 'char *' '='
|   | |-MemberExpr 0x24e4d74f4f0 <col:5, col:10> 'char *' lvalue ->obuf 0x24e4d74cbf8
|   | | `-ImplicitCastExpr 0x24e4d74f4d8 <col:5> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x24e4d74f4b8 <col:5> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d74cff8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | `-ImplicitCastExpr 0x24e4d74f5f0 <col:17, col:55> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x24e4d74f5c8 <col:17, col:55> 'int'
|   |     |-ImplicitCastExpr 0x24e4d74f5b0 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x24e4d74f520 <col:17> 'int ()' Function 0x24e4d74f130 'OPENSSL_malloc' 'int ()'
|   |     `-BinaryOperator 0x24e4d74f590 <line:26:33, col:38> 'int' '*'
|   |       |-IntegerLiteral 0x24e4d74f540 <col:33> 'int' 1024
|   |       `-IntegerLiteral 0x24e4d74f568 <col:38> 'int' 10
|   |-IfStmt 0x24e4d74f968 <line:62:5, line:65:5>
|   | |-BinaryOperator 0x24e4d74f748 <line:62:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x24e4d74f718 <.//openssl//file_jk/before\crypto\bio\bf_lbuf.c:62:9, col:14> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x24e4d74f660 <col:9, col:14> 'char *' lvalue ->obuf 0x24e4d74cbf8
|   | | |   `-ImplicitCastExpr 0x24e4d74f648 <col:9> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x24e4d74f628 <col:9> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d74cff8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | `-ImplicitCastExpr 0x24e4d74f730 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x24e4d74f6f8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x24e4d74f6d0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x24e4d74f690 <col:26> 'int' 0
|   | `-CompoundStmt 0x24e4d74f948 <.//openssl//file_jk/before\crypto\bio\bf_lbuf.c:62:28, line:65:5>
|   |   |-CallExpr 0x24e4d74f8b0 <line:63:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x24e4d74f898 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x24e4d74f858 <col:9> 'int ()' Function 0x24e4d74f790 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x24e4d74f8d8 <col:22> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x24e4d74f878 <col:22> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d74cff8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   `-ReturnStmt 0x24e4d74f938 <line:64:9, col:18>
|   |     `-ParenExpr 0x24e4d74f918 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x24e4d74f8f0 <col:17> 'int' 0
|   |-BinaryOperator 0x24e4d74fa58 <line:66:5, line:26:38> 'int' '='
|   | |-MemberExpr 0x24e4d74f9b8 <line:66:5, col:10> 'int' lvalue ->obuf_size 0x24e4d74cc68
|   | | `-ImplicitCastExpr 0x24e4d74f9a0 <col:5> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x24e4d74f980 <col:5> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d74cff8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | `-BinaryOperator 0x24e4d74fa38 <line:26:33, col:38> 'int' '*'
|   |   |-IntegerLiteral 0x24e4d74f9e8 <col:33> 'int' 1024
|   |   `-IntegerLiteral 0x24e4d74fa10 <col:38> 'int' 10
|   |-BinaryOperator 0x24e4d74fb08 <line:67:5, col:21> 'int' '='
|   | |-MemberExpr 0x24e4d74fab0 <col:5, col:10> 'int' lvalue ->obuf_len 0x24e4d74ccd8
|   | | `-ImplicitCastExpr 0x24e4d74fa98 <col:5> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x24e4d74fa78 <col:5> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d74cff8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | `-IntegerLiteral 0x24e4d74fae0 <col:21> 'int' 0
|   `-ReturnStmt 0x24e4d74fc38 <line:72:5, col:14>
|     `-ParenExpr 0x24e4d74fc18 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x24e4d74fbf0 <col:13> 'int' 1
|-FunctionDecl 0x24e4d74fd48 <line:75:1, line:88:1> line:75:12 invalid linebuffer_free 'int (int *)' static
| |-ParmVarDecl 0x24e4d74fcb0 <col:28, col:33> col:33 invalid a 'int *'
| `-CompoundStmt 0x24e4d754270 <line:76:1, line:88:1>
|   |-DeclStmt 0x24e4d74fe80 <line:77:5, col:26>
|   | `-VarDecl 0x24e4d74fe18 <col:5, col:25> col:25 used b 'BIO_LINEBUFFER_CTX *'
|   |-IfStmt 0x24e4d74ff90 <line:79:5, line:80:18>
|   | |-OpaqueValueExpr 0x24e4d74ff78 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x24e4d74ff68 <col:9, col:18>
|   |   `-ParenExpr 0x24e4d74ff48 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x24e4d74ff20 <col:17> 'int' 0
|   |-CallExpr 0x24e4d750080 <line:82:5, col:25> 'int'
|   | |-ImplicitCastExpr 0x24e4d750068 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x24e4d74ffe0 <col:5> 'int ()' Function 0x24e4d74f790 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x24e4d7500a8 <col:18, col:21> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x24e4d750038 <col:18, col:21> 'char *' lvalue ->obuf 0x24e4d74cbf8
|   |     `-ImplicitCastExpr 0x24e4d750020 <col:18> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x24e4d750000 <col:18> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d74fe18 'b' 'BIO_LINEBUFFER_CTX *'
|   `-ReturnStmt 0x24e4d754260 <line:87:5, col:14>
|     `-ParenExpr 0x24e4d754240 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x24e4d754218 <col:13> 'int' 1
|-FunctionDecl 0x24e4d754460 <line:90:1, line:102:1> line:90:12 invalid linebuffer_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x24e4d7542b8 <col:28, col:33> col:33 invalid b 'int *'
| |-ParmVarDecl 0x24e4d754338 <col:36, col:42> col:42 used out 'char *'
| |-ParmVarDecl 0x24e4d7543b8 <col:47, col:51> col:51 used outl 'int'
| `-CompoundStmt 0x24e4d754ca8 <line:91:1, line:102:1>
|   |-DeclStmt 0x24e4d7545d8 <line:92:5, col:16>
|   | `-VarDecl 0x24e4d754548 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x24e4d7545b0 <col:15> 'int' 0
|   |-IfStmt 0x24e4d754758 <line:94:5, line:95:18>
|   | |-BinaryOperator 0x24e4d7546e0 <line:94:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x24e4d7546b0 <.//openssl//file_jk/before\crypto\bio\bf_lbuf.c:94:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x24e4d7545f0 <col:9> 'char *' lvalue ParmVar 0x24e4d754338 'out' 'char *'
|   | | `-ImplicitCastExpr 0x24e4d7546c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x24e4d754690 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x24e4d754668 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x24e4d754628 <col:26> 'int' 0
|   | `-ReturnStmt 0x24e4d754748 <.//openssl//file_jk/before\crypto\bio\bf_lbuf.c:95:9, col:18>
|   |   `-ParenExpr 0x24e4d754728 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x24e4d754700 <col:17> 'int' 0
|   |-IfStmt 0x24e4d754868 <line:96:5, line:97:18>
|   | |-OpaqueValueExpr 0x24e4d754850 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x24e4d754840 <col:9, col:18>
|   |   `-ParenExpr 0x24e4d754820 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x24e4d7547f8 <col:17> 'int' 0
|   `-ReturnStmt 0x24e4d754c98 <line:101:5, col:16>
|     `-ImplicitCastExpr 0x24e4d754c80 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x24e4d754c60 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x24e4d754c40 <col:13> 'int' lvalue Var 0x24e4d754548 'ret' 'int'
|-FunctionDecl 0x24e4d754e98 <line:104:1, line:197:1> line:104:12 invalid linebuffer_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x24e4d754cf0 <col:29, col:34> col:34 invalid b 'int *'
| |-ParmVarDecl 0x24e4d754d70 <col:37, col:49> col:49 used in 'const char *'
| |-ParmVarDecl 0x24e4d754df0 <col:53, col:57> col:57 used inl 'int'
| `-CompoundStmt 0x24e4d750230 <line:105:1, line:197:1>
|   |-DeclStmt 0x24e4d755130 <line:106:5, col:28>
|   | |-VarDecl 0x24e4d754f80 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x24e4d755000 <col:5, col:18> col:12 used num 'int' cinit
|   | | `-IntegerLiteral 0x24e4d755068 <col:18> 'int' 0
|   | `-VarDecl 0x24e4d7550a8 <col:5, col:21> col:21 used foundnl 'int'
|   |-DeclStmt 0x24e4d7511b8 <line:107:5, col:28>
|   | `-VarDecl 0x24e4d751150 <col:5, col:25> col:25 used ctx 'BIO_LINEBUFFER_CTX *'
|   |-IfStmt 0x24e4d751430 <line:109:5, line:110:18>
|   | |-BinaryOperator 0x24e4d7513b8 <line:109:9, col:34> 'int' '||'
|   | | |-ParenExpr 0x24e4d7512e0 <col:9, col:20> 'int'
|   | | | `-BinaryOperator 0x24e4d7512c0 <col:10, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x24e4d751290 <.//openssl//file_jk/before\crypto\bio\bf_lbuf.c:109:10> 'const char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x24e4d7511d0 <col:10> 'const char *' lvalue ParmVar 0x24e4d754d70 'in' 'const char *'
|   | | |   `-ImplicitCastExpr 0x24e4d7512a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |     `-ParenExpr 0x24e4d751270 <col:17, col:27> 'void *'
|   | | |       `-CStyleCastExpr 0x24e4d751248 <col:18, col:26> 'void *' <NullToPointer>
|   | | |         `-IntegerLiteral 0x24e4d751208 <col:26> 'int' 0
|   | | `-ParenExpr 0x24e4d751398 <.//openssl//file_jk/before\crypto\bio\bf_lbuf.c:109:25, col:34> 'int'
|   | |   `-BinaryOperator 0x24e4d751378 <col:26, col:33> 'int' '<='
|   | |     |-ImplicitCastExpr 0x24e4d751360 <col:26> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x24e4d751300 <col:26> 'int' lvalue ParmVar 0x24e4d754df0 'inl' 'int'
|   | |     `-IntegerLiteral 0x24e4d751338 <col:33> 'int' 0
|   | `-ReturnStmt 0x24e4d751420 <line:110:9, col:18>
|   |   `-ParenExpr 0x24e4d751400 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x24e4d7513d8 <col:17> 'int' 0
|   |-IfStmt 0x24e4d751690 <line:112:5, line:113:18>
|   | |-OpaqueValueExpr 0x24e4d751678 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x24e4d751668 <col:9, col:18>
|   |   `-ParenExpr 0x24e4d751648 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x24e4d751620 <col:17> 'int' 0
|   |-DoStmt 0x24e4d756d60 <line:117:5, line:185:30>
|   | |-CompoundStmt 0x24e4d756c48 <line:117:8, line:184:5>
|   | | |-DeclStmt 0x24e4d751748 <line:118:9, col:22>
|   | | | `-VarDecl 0x24e4d7516e0 <col:9, col:21> col:21 used p 'const char *'
|   | | |-DeclStmt 0x24e4d7517d8 <line:119:9, col:15>
|   | | | `-VarDecl 0x24e4d751770 <col:9, col:14> col:14 used c 'char'
|   | | |-ForStmt 0x24e4d751b88 <line:121:9, col:71>
|   | | | |-BinaryOperator 0x24e4d751908 <col:14, col:26> 'char' ','
|   | | | | |-BinaryOperator 0x24e4d751860 <col:14, col:18> 'const char *' '='
|   | | | | | |-DeclRefExpr 0x24e4d7517f0 <col:14> 'const char *' lvalue Var 0x24e4d7516e0 'p' 'const char *'
|   | | | | | `-ImplicitCastExpr 0x24e4d751848 <col:18> 'const char *' <LValueToRValue>
|   | | | | |   `-DeclRefExpr 0x24e4d751828 <col:18> 'const char *' lvalue ParmVar 0x24e4d754d70 'in' 'const char *'
|   | | | | `-BinaryOperator 0x24e4d7518e8 <col:22, col:26> 'char' '='
|   | | | |   |-DeclRefExpr 0x24e4d751880 <col:22> 'char' lvalue Var 0x24e4d751770 'c' 'char'
|   | | | |   `-ImplicitCastExpr 0x24e4d7518d0 <col:26> 'char' <IntegralCast>
|   | | | |     `-CharacterLiteral 0x24e4d7518b8 <col:26> 'int' 0
|   | | | |-<<<NULL>>>
|   | | | |-BinaryOperator 0x24e4d751b28 <col:32, col:60> 'int' '&&'
|   | | | | |-BinaryOperator 0x24e4d7519f0 <col:32, col:41> 'int' '<'
|   | | | | | |-ImplicitCastExpr 0x24e4d7519d8 <col:32> 'const char *' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x24e4d751928 <col:32> 'const char *' lvalue Var 0x24e4d7516e0 'p' 'const char *'
|   | | | | | `-BinaryOperator 0x24e4d7519b8 <col:36, col:41> 'const char *' '+'
|   | | | | |   |-ImplicitCastExpr 0x24e4d751988 <col:36> 'const char *' <LValueToRValue>
|   | | | | |   | `-DeclRefExpr 0x24e4d751948 <col:36> 'const char *' lvalue ParmVar 0x24e4d754d70 'in' 'const char *'
|   | | | | |   `-ImplicitCastExpr 0x24e4d7519a0 <col:41> 'int' <LValueToRValue>
|   | | | | |     `-DeclRefExpr 0x24e4d751968 <col:41> 'int' lvalue ParmVar 0x24e4d754df0 'inl' 'int'
|   | | | | `-BinaryOperator 0x24e4d751b08 <col:48, col:60> 'int' '!='
|   | | | |   |-ImplicitCastExpr 0x24e4d751af0 <col:48, col:55> 'int' <IntegralCast>
|   | | | |   | `-ParenExpr 0x24e4d751ab8 <col:48, col:55> 'char'
|   | | | |   |   `-BinaryOperator 0x24e4d751a98 <col:49, col:54> 'char' '='
|   | | | |   |     |-DeclRefExpr 0x24e4d751a10 <col:49> 'char' lvalue Var 0x24e4d751770 'c' 'char'
|   | | | |   |     `-ImplicitCastExpr 0x24e4d751a80 <col:53, col:54> 'char' <LValueToRValue>
|   | | | |   |       `-UnaryOperator 0x24e4d751a68 <col:53, col:54> 'const char' lvalue prefix '*' cannot overflow
|   | | | |   |         `-ImplicitCastExpr 0x24e4d751a50 <col:54> 'const char *' <LValueToRValue>
|   | | | |   |           `-DeclRefExpr 0x24e4d751a30 <col:54> 'const char *' lvalue Var 0x24e4d7516e0 'p' 'const char *'
|   | | | |   `-CharacterLiteral 0x24e4d751ad8 <col:60> 'int' 10
|   | | | |-UnaryOperator 0x24e4d751b68 <col:66, col:67> 'const char *' postfix '++'
|   | | | | `-DeclRefExpr 0x24e4d751b48 <col:66> 'const char *' lvalue Var 0x24e4d7516e0 'p' 'const char *'
|   | | | `-NullStmt 0x24e4d751b80 <col:71>
|   | | |-IfStmt 0x24e4d751d88 <line:122:9, line:126:23> has_else
|   | | | |-BinaryOperator 0x24e4d751c28 <line:122:13, col:18> 'int' '=='
|   | | | | |-ImplicitCastExpr 0x24e4d751c10 <col:13> 'int' <IntegralCast>
|   | | | | | `-ImplicitCastExpr 0x24e4d751bf8 <col:13> 'char' <LValueToRValue>
|   | | | | |   `-DeclRefExpr 0x24e4d751bc0 <col:13> 'char' lvalue Var 0x24e4d751770 'c' 'char'
|   | | | | `-CharacterLiteral 0x24e4d751be0 <col:18> 'int' 10
|   | | | |-CompoundStmt 0x24e4d751d00 <col:24, line:125:9>
|   | | | | |-UnaryOperator 0x24e4d751c68 <line:123:13, col:14> 'const char *' postfix '++'
|   | | | | | `-DeclRefExpr 0x24e4d751c48 <col:13> 'const char *' lvalue Var 0x24e4d7516e0 'p' 'const char *'
|   | | | | `-BinaryOperator 0x24e4d751ce0 <line:124:13, col:23> 'int' '='
|   | | | |   |-DeclRefExpr 0x24e4d751c80 <col:13> 'int' lvalue Var 0x24e4d7550a8 'foundnl' 'int'
|   | | | |   `-IntegerLiteral 0x24e4d751cb8 <col:23> 'int' 1
|   | | | `-BinaryOperator 0x24e4d751d68 <line:126:13, col:23> 'int' '='
|   | | |   |-DeclRefExpr 0x24e4d751d20 <col:13> 'int' lvalue Var 0x24e4d7550a8 'foundnl' 'int'
|   | | |   `-IntegerLiteral 0x24e4d751d40 <col:23> 'int' 0
|   | | |-WhileStmt 0x24e4d7562b0 <line:132:9, line:165:9>
|   | | | |-BinaryOperator 0x24e4d7520d8 <line:132:16, line:133:35> 'int' '&&'
|   | | | | |-ParenExpr 0x24e4d751ff0 <line:132:16, col:67> 'int'
|   | | | | | `-BinaryOperator 0x24e4d751fd0 <col:17, col:59> 'int' '||'
|   | | | | |   |-ImplicitCastExpr 0x24e4d751fb8 <col:17> 'int' <LValueToRValue>
|   | | | | |   | `-DeclRefExpr 0x24e4d751db0 <col:17> 'int' lvalue Var 0x24e4d7550a8 'foundnl' 'int'
|   | | | | |   `-BinaryOperator 0x24e4d751f98 <col:28, col:59> 'int' '>'
|   | | | | |     |-BinaryOperator 0x24e4d751e40 <col:28, col:32> 'long long' '-'
|   | | | | |     | |-ImplicitCastExpr 0x24e4d751e10 <col:28> 'const char *' <LValueToRValue>
|   | | | | |     | | `-DeclRefExpr 0x24e4d751dd0 <col:28> 'const char *' lvalue Var 0x24e4d7516e0 'p' 'const char *'
|   | | | | |     | `-ImplicitCastExpr 0x24e4d751e28 <col:32> 'const char *' <LValueToRValue>
|   | | | | |     |   `-DeclRefExpr 0x24e4d751df0 <col:32> 'const char *' lvalue ParmVar 0x24e4d754d70 'in' 'const char *'
|   | | | | |     `-ImplicitCastExpr 0x24e4d751f80 <col:37, col:59> 'long long' <IntegralCast>
|   | | | | |       `-BinaryOperator 0x24e4d751f60 <col:37, col:59> 'int' '-'
|   | | | | |         |-ImplicitCastExpr 0x24e4d751f30 <col:37, col:42> 'int' <LValueToRValue>
|   | | | | |         | `-MemberExpr 0x24e4d751e98 <col:37, col:42> 'int' lvalue ->obuf_size 0x24e4d74cc68
|   | | | | |         |   `-ImplicitCastExpr 0x24e4d751e80 <col:37> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | | | |         |     `-DeclRefExpr 0x24e4d751e60 <col:37> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d751150 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | | | |         `-ImplicitCastExpr 0x24e4d751f48 <col:54, col:59> 'int' <LValueToRValue>
|   | | | | |           `-MemberExpr 0x24e4d751f00 <col:54, col:59> 'int' lvalue ->obuf_len 0x24e4d74ccd8
|   | | | | |             `-ImplicitCastExpr 0x24e4d751ee8 <col:54> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | | | |               `-DeclRefExpr 0x24e4d751ec8 <col:54> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d751150 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | | | `-BinaryOperator 0x24e4d7520b8 <line:133:19, col:35> 'int' '>'
|   | | | |   |-ImplicitCastExpr 0x24e4d7520a0 <col:19, col:24> 'int' <LValueToRValue>
|   | | | |   | `-MemberExpr 0x24e4d752048 <col:19, col:24> 'int' lvalue ->obuf_len 0x24e4d74ccd8
|   | | | |   |   `-ImplicitCastExpr 0x24e4d752030 <col:19> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | | |   |     `-DeclRefExpr 0x24e4d752010 <col:19> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d751150 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | | |   `-IntegerLiteral 0x24e4d752078 <col:35> 'int' 0
|   | | | `-CompoundStmt 0x24e4d756270 <col:38, line:165:9>
|   | | |   |-DeclStmt 0x24e4d74d1f8 <line:134:13, col:42>
|   | | |   | `-VarDecl 0x24e4d74d110 <col:13, col:34> col:17 used orig_olen 'int' cinit
|   | | |   |   `-ImplicitCastExpr 0x24e4d74d1e0 <col:29, col:34> 'int' <LValueToRValue>
|   | | |   |     `-MemberExpr 0x24e4d74d1b0 <col:29, col:34> 'int' lvalue ->obuf_len 0x24e4d74ccd8
|   | | |   |       `-ImplicitCastExpr 0x24e4d74d198 <col:29> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   |         `-DeclRefExpr 0x24e4d74d178 <col:29> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d751150 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   |-BinaryOperator 0x24e4d74d368 <line:136:13, col:39> 'int' '='
|   | | |   | |-DeclRefExpr 0x24e4d74d210 <col:13> 'int' lvalue Var 0x24e4d754f80 'i' 'int'
|   | | |   | `-BinaryOperator 0x24e4d74d348 <col:17, col:39> 'int' '-'
|   | | |   |   |-ImplicitCastExpr 0x24e4d74d318 <col:17, col:22> 'int' <LValueToRValue>
|   | | |   |   | `-MemberExpr 0x24e4d74d280 <col:17, col:22> 'int' lvalue ->obuf_size 0x24e4d74cc68
|   | | |   |   |   `-ImplicitCastExpr 0x24e4d74d268 <col:17> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   |   |     `-DeclRefExpr 0x24e4d74d248 <col:17> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d751150 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   |   `-ImplicitCastExpr 0x24e4d74d330 <col:34, col:39> 'int' <LValueToRValue>
|   | | |   |     `-MemberExpr 0x24e4d74d2e8 <col:34, col:39> 'int' lvalue ->obuf_len 0x24e4d74ccd8
|   | | |   |       `-ImplicitCastExpr 0x24e4d74d2d0 <col:34> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   |         `-DeclRefExpr 0x24e4d74d2b0 <col:34> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d751150 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   |-IfStmt 0x24e4d7554b8 <line:137:13, line:151:13>
|   | | |   | |-BinaryOperator 0x24e4d74d458 <line:137:17, col:26> 'int' '>'
|   | | |   | | |-BinaryOperator 0x24e4d74d3f8 <col:17, col:21> 'long long' '-'
|   | | |   | | | |-ImplicitCastExpr 0x24e4d74d3c8 <col:17> 'const char *' <LValueToRValue>
|   | | |   | | | | `-DeclRefExpr 0x24e4d74d388 <col:17> 'const char *' lvalue Var 0x24e4d7516e0 'p' 'const char *'
|   | | |   | | | `-ImplicitCastExpr 0x24e4d74d3e0 <col:21> 'const char *' <LValueToRValue>
|   | | |   | | |   `-DeclRefExpr 0x24e4d74d3a8 <col:21> 'const char *' lvalue ParmVar 0x24e4d754d70 'in' 'const char *'
|   | | |   | | `-ImplicitCastExpr 0x24e4d74d440 <col:26> 'long long' <IntegralCast>
|   | | |   | |   `-IntegerLiteral 0x24e4d74d418 <col:26> 'int' 0
|   | | |   | `-CompoundStmt 0x24e4d7554a0 <col:29, line:151:13>
|   | | |   |   `-IfStmt 0x24e4d755478 <line:138:17, line:150:17> has_else
|   | | |   |     |-BinaryOperator 0x24e4d74d558 <line:138:21, col:30> 'int' '>='
|   | | |   |     | |-ImplicitCastExpr 0x24e4d74d540 <col:21> 'long long' <IntegralCast>
|   | | |   |     | | `-ImplicitCastExpr 0x24e4d74d528 <col:21> 'int' <LValueToRValue>
|   | | |   |     | |   `-DeclRefExpr 0x24e4d74d478 <col:21> 'int' lvalue Var 0x24e4d754f80 'i' 'int'
|   | | |   |     | `-BinaryOperator 0x24e4d74d508 <col:26, col:30> 'long long' '-'
|   | | |   |     |   |-ImplicitCastExpr 0x24e4d74d4d8 <col:26> 'const char *' <LValueToRValue>
|   | | |   |     |   | `-DeclRefExpr 0x24e4d74d498 <col:26> 'const char *' lvalue Var 0x24e4d7516e0 'p' 'const char *'
|   | | |   |     |   `-ImplicitCastExpr 0x24e4d74d4f0 <col:30> 'const char *' <LValueToRValue>
|   | | |   |     |     `-DeclRefExpr 0x24e4d74d4b8 <col:30> 'const char *' lvalue ParmVar 0x24e4d754d70 'in' 'const char *'
|   | | |   |     |-CompoundStmt 0x24e4d74de60 <col:34, line:144:17>
|   | | |   |     | |-CallExpr 0x24e4d74da50 <line:139:21, col:67> 'void *'
|   | | |   |     | | |-ImplicitCastExpr 0x24e4d74da38 <col:21> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | |   |     | | | `-DeclRefExpr 0x24e4d74d7b0 <col:21> 'void *(void *, const void *, unsigned long long)' Function 0x24e4d74d5c0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | | |   |     | | |-ImplicitCastExpr 0x24e4d74da88 <col:28, col:54> 'void *' <BitCast>
|   | | |   |     | | | `-UnaryOperator 0x24e4d74d928 <col:28, col:54> 'char *' prefix '&' cannot overflow
|   | | |   |     | | |   `-ParenExpr 0x24e4d74d908 <col:29, col:54> 'char' lvalue
|   | | |   |     | | |     `-ArraySubscriptExpr 0x24e4d74d8e8 <col:30, col:53> 'char' lvalue
|   | | |   |     | | |       |-ImplicitCastExpr 0x24e4d74d8b8 <col:30, col:35> 'char *' <LValueToRValue>
|   | | |   |     | | |       | `-MemberExpr 0x24e4d74d820 <col:30, col:35> 'char *' lvalue ->obuf 0x24e4d74cbf8
|   | | |   |     | | |       |   `-ImplicitCastExpr 0x24e4d74d808 <col:30> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   |     | | |       |     `-DeclRefExpr 0x24e4d74d7e8 <col:30> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d751150 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   |     | | |       `-ImplicitCastExpr 0x24e4d74d8d0 <col:40, col:45> 'int' <LValueToRValue>
|   | | |   |     | | |         `-MemberExpr 0x24e4d74d888 <col:40, col:45> 'int' lvalue ->obuf_len 0x24e4d74ccd8
|   | | |   |     | | |           `-ImplicitCastExpr 0x24e4d74d870 <col:40> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   |     | | |             `-DeclRefExpr 0x24e4d74d850 <col:40> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d751150 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   |     | | |-ImplicitCastExpr 0x24e4d74dab8 <col:57> 'const void *' <BitCast>
|   | | |   |     | | | `-ImplicitCastExpr 0x24e4d74daa0 <col:57> 'const char *' <LValueToRValue>
|   | | |   |     | | |   `-DeclRefExpr 0x24e4d74d940 <col:57> 'const char *' lvalue ParmVar 0x24e4d754d70 'in' 'const char *'
|   | | |   |     | | `-ImplicitCastExpr 0x24e4d74dad0 <col:61, col:65> 'unsigned long long' <IntegralCast>
|   | | |   |     | |   `-BinaryOperator 0x24e4d74d9d0 <col:61, col:65> 'long long' '-'
|   | | |   |     | |     |-ImplicitCastExpr 0x24e4d74d9a0 <col:61> 'const char *' <LValueToRValue>
|   | | |   |     | |     | `-DeclRefExpr 0x24e4d74d960 <col:61> 'const char *' lvalue Var 0x24e4d7516e0 'p' 'const char *'
|   | | |   |     | |     `-ImplicitCastExpr 0x24e4d74d9b8 <col:65> 'const char *' <LValueToRValue>
|   | | |   |     | |       `-DeclRefExpr 0x24e4d74d980 <col:65> 'const char *' lvalue ParmVar 0x24e4d754d70 'in' 'const char *'
|   | | |   |     | |-CompoundAssignOperator 0x24e4d74dbe0 <line:140:21, col:42> 'int' '+=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | | |   |     | | |-MemberExpr 0x24e4d74db20 <col:21, col:26> 'int' lvalue ->obuf_len 0x24e4d74ccd8
|   | | |   |     | | | `-ImplicitCastExpr 0x24e4d74db08 <col:21> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   |     | | |   `-DeclRefExpr 0x24e4d74dae8 <col:21> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d751150 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   |     | | `-BinaryOperator 0x24e4d74dbc0 <col:38, col:42> 'long long' '-'
|   | | |   |     | |   |-ImplicitCastExpr 0x24e4d74db90 <col:38> 'const char *' <LValueToRValue>
|   | | |   |     | |   | `-DeclRefExpr 0x24e4d74db50 <col:38> 'const char *' lvalue Var 0x24e4d7516e0 'p' 'const char *'
|   | | |   |     | |   `-ImplicitCastExpr 0x24e4d74dba8 <col:42> 'const char *' <LValueToRValue>
|   | | |   |     | |     `-DeclRefExpr 0x24e4d74db70 <col:42> 'const char *' lvalue ParmVar 0x24e4d754d70 'in' 'const char *'
|   | | |   |     | |-CompoundAssignOperator 0x24e4d74dcc0 <line:141:21, col:32> 'int' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | | |   |     | | |-DeclRefExpr 0x24e4d74dc10 <col:21> 'int' lvalue ParmVar 0x24e4d754df0 'inl' 'int'
|   | | |   |     | | `-BinaryOperator 0x24e4d74dca0 <col:28, col:32> 'long long' '-'
|   | | |   |     | |   |-ImplicitCastExpr 0x24e4d74dc70 <col:28> 'const char *' <LValueToRValue>
|   | | |   |     | |   | `-DeclRefExpr 0x24e4d74dc30 <col:28> 'const char *' lvalue Var 0x24e4d7516e0 'p' 'const char *'
|   | | |   |     | |   `-ImplicitCastExpr 0x24e4d74dc88 <col:32> 'const char *' <LValueToRValue>
|   | | |   |     | |     `-DeclRefExpr 0x24e4d74dc50 <col:32> 'const char *' lvalue ParmVar 0x24e4d754d70 'in' 'const char *'
|   | | |   |     | |-CompoundAssignOperator 0x24e4d74ddb8 <line:142:21, col:32> 'int' '+=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | | |   |     | | |-DeclRefExpr 0x24e4d74dcf0 <col:21> 'int' lvalue Var 0x24e4d755000 'num' 'int'
|   | | |   |     | | `-BinaryOperator 0x24e4d74dd98 <col:28, col:32> 'long long' '-'
|   | | |   |     | |   |-ImplicitCastExpr 0x24e4d74dd68 <col:28> 'const char *' <LValueToRValue>
|   | | |   |     | |   | `-DeclRefExpr 0x24e4d74dd28 <col:28> 'const char *' lvalue Var 0x24e4d7516e0 'p' 'const char *'
|   | | |   |     | |   `-ImplicitCastExpr 0x24e4d74dd80 <col:32> 'const char *' <LValueToRValue>
|   | | |   |     | |     `-DeclRefExpr 0x24e4d74dd48 <col:32> 'const char *' lvalue ParmVar 0x24e4d754d70 'in' 'const char *'
|   | | |   |     | `-BinaryOperator 0x24e4d74de40 <line:143:21, col:26> 'const char *' '='
|   | | |   |     |   |-DeclRefExpr 0x24e4d74dde8 <col:21> 'const char *' lvalue ParmVar 0x24e4d754d70 'in' 'const char *'
|   | | |   |     |   `-ImplicitCastExpr 0x24e4d74de28 <col:26> 'const char *' <LValueToRValue>
|   | | |   |     |     `-DeclRefExpr 0x24e4d74de08 <col:26> 'const char *' lvalue Var 0x24e4d7516e0 'p' 'const char *'
|   | | |   |     `-CompoundStmt 0x24e4d755440 <line:144:24, line:150:17>
|   | | |   |       |-CallExpr 0x24e4d74e098 <line:145:21, col:62> 'void *'
|   | | |   |       | |-ImplicitCastExpr 0x24e4d74e080 <col:21> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | |   |       | | `-DeclRefExpr 0x24e4d74de98 <col:21> 'void *(void *, const void *, unsigned long long)' Function 0x24e4d74d5c0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | | |   |       | |-ImplicitCastExpr 0x24e4d74e0d0 <col:28, col:54> 'void *' <BitCast>
|   | | |   |       | | `-UnaryOperator 0x24e4d74dff8 <col:28, col:54> 'char *' prefix '&' cannot overflow
|   | | |   |       | |   `-ParenExpr 0x24e4d74dfd8 <col:29, col:54> 'char' lvalue
|   | | |   |       | |     `-ArraySubscriptExpr 0x24e4d74dfb8 <col:30, col:53> 'char' lvalue
|   | | |   |       | |       |-ImplicitCastExpr 0x24e4d74df88 <col:30, col:35> 'char *' <LValueToRValue>
|   | | |   |       | |       | `-MemberExpr 0x24e4d74def0 <col:30, col:35> 'char *' lvalue ->obuf 0x24e4d74cbf8
|   | | |   |       | |       |   `-ImplicitCastExpr 0x24e4d74ded8 <col:30> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   |       | |       |     `-DeclRefExpr 0x24e4d74deb8 <col:30> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d751150 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   |       | |       `-ImplicitCastExpr 0x24e4d74dfa0 <col:40, col:45> 'int' <LValueToRValue>
|   | | |   |       | |         `-MemberExpr 0x24e4d74df58 <col:40, col:45> 'int' lvalue ->obuf_len 0x24e4d74ccd8
|   | | |   |       | |           `-ImplicitCastExpr 0x24e4d74df40 <col:40> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   |       | |             `-DeclRefExpr 0x24e4d74df20 <col:40> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d751150 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   |       | |-ImplicitCastExpr 0x24e4d755190 <col:57> 'const void *' <BitCast>
|   | | |   |       | | `-ImplicitCastExpr 0x24e4d74e0e8 <col:57> 'const char *' <LValueToRValue>
|   | | |   |       | |   `-DeclRefExpr 0x24e4d74e010 <col:57> 'const char *' lvalue ParmVar 0x24e4d754d70 'in' 'const char *'
|   | | |   |       | `-ImplicitCastExpr 0x24e4d7551c0 <col:61> 'unsigned long long' <IntegralCast>
|   | | |   |       |   `-ImplicitCastExpr 0x24e4d7551a8 <col:61> 'int' <LValueToRValue>
|   | | |   |       |     `-DeclRefExpr 0x24e4d74e030 <col:61> 'int' lvalue Var 0x24e4d754f80 'i' 'int'
|   | | |   |       |-CompoundAssignOperator 0x24e4d755278 <line:146:21, col:38> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |   |       | |-MemberExpr 0x24e4d755210 <col:21, col:26> 'int' lvalue ->obuf_len 0x24e4d74ccd8
|   | | |   |       | | `-ImplicitCastExpr 0x24e4d7551f8 <col:21> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   |       | |   `-DeclRefExpr 0x24e4d7551d8 <col:21> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d751150 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   |       | `-ImplicitCastExpr 0x24e4d755260 <col:38> 'int' <LValueToRValue>
|   | | |   |       |   `-DeclRefExpr 0x24e4d755240 <col:38> 'int' lvalue Var 0x24e4d754f80 'i' 'int'
|   | | |   |       |-CompoundAssignOperator 0x24e4d755300 <line:147:21, col:28> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |   |       | |-DeclRefExpr 0x24e4d7552a8 <col:21> 'int' lvalue ParmVar 0x24e4d754df0 'inl' 'int'
|   | | |   |       | `-ImplicitCastExpr 0x24e4d7552e8 <col:28> 'int' <LValueToRValue>
|   | | |   |       |   `-DeclRefExpr 0x24e4d7552c8 <col:28> 'int' lvalue Var 0x24e4d754f80 'i' 'int'
|   | | |   |       |-CompoundAssignOperator 0x24e4d755388 <line:148:21, col:27> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   | | |   |       | |-DeclRefExpr 0x24e4d755330 <col:21> 'const char *' lvalue ParmVar 0x24e4d754d70 'in' 'const char *'
|   | | |   |       | `-ImplicitCastExpr 0x24e4d755370 <col:27> 'int' <LValueToRValue>
|   | | |   |       |   `-DeclRefExpr 0x24e4d755350 <col:27> 'int' lvalue Var 0x24e4d754f80 'i' 'int'
|   | | |   |       `-CompoundAssignOperator 0x24e4d755410 <line:149:21, col:28> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |   |         |-DeclRefExpr 0x24e4d7553b8 <col:21> 'int' lvalue Var 0x24e4d755000 'num' 'int'
|   | | |   |         `-ImplicitCastExpr 0x24e4d7553f8 <col:28> 'int' <LValueToRValue>
|   | | |   |           `-DeclRefExpr 0x24e4d7553d8 <col:28> 'int' lvalue Var 0x24e4d754f80 'i' 'int'
|   | | |   |-IfStmt 0x24e4d755b78 <line:153:13, line:161:13>
|   | | |   | |-BinaryOperator 0x24e4d755730 <line:153:17, col:22> 'int' '<='
|   | | |   | | |-ImplicitCastExpr 0x24e4d755718 <col:17> 'int' <LValueToRValue>
|   | | |   | | | `-DeclRefExpr 0x24e4d7556d0 <col:17> 'int' lvalue Var 0x24e4d754f80 'i' 'int'
|   | | |   | | `-IntegerLiteral 0x24e4d7556f0 <col:22> 'int' 0
|   | | |   | `-CompoundStmt 0x24e4d755b50 <col:25, line:161:13>
|   | | |   |   |-BinaryOperator 0x24e4d755808 <line:154:17, col:33> 'int' '='
|   | | |   |   | |-MemberExpr 0x24e4d755788 <col:17, col:22> 'int' lvalue ->obuf_len 0x24e4d74ccd8
|   | | |   |   | | `-ImplicitCastExpr 0x24e4d755770 <col:17> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   |   | |   `-DeclRefExpr 0x24e4d755750 <col:17> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d751150 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   |   | `-ImplicitCastExpr 0x24e4d7557f0 <col:33> 'int' <LValueToRValue>
|   | | |   |   |   `-DeclRefExpr 0x24e4d7557b8 <col:33> 'int' lvalue Var 0x24e4d74d110 'orig_olen' 'int'
|   | | |   |   |-IfStmt 0x24e4d755a38 <line:157:17, line:158:48>
|   | | |   |   | |-BinaryOperator 0x24e4d7558a8 <line:157:21, col:25> 'int' '<'
|   | | |   |   | | |-ImplicitCastExpr 0x24e4d755890 <col:21> 'int' <LValueToRValue>
|   | | |   |   | | | `-DeclRefExpr 0x24e4d755848 <col:21> 'int' lvalue Var 0x24e4d754f80 'i' 'int'
|   | | |   |   | | `-IntegerLiteral 0x24e4d755868 <col:25> 'int' 0
|   | | |   |   | `-ReturnStmt 0x24e4d755a28 <line:158:21, col:48>
|   | | |   |   |   `-ParenExpr 0x24e4d755a08 <col:28, col:48> 'int'
|   | | |   |   |     `-ConditionalOperator 0x24e4d7559d8 <col:29, col:47> 'int'
|   | | |   |   |       |-ParenExpr 0x24e4d755948 <col:29, col:37> 'int'
|   | | |   |   |       | `-BinaryOperator 0x24e4d755928 <col:30, col:36> 'int' '>'
|   | | |   |   |       |   |-ImplicitCastExpr 0x24e4d755910 <col:30> 'int' <LValueToRValue>
|   | | |   |   |       |   | `-DeclRefExpr 0x24e4d7558c8 <col:30> 'int' lvalue Var 0x24e4d755000 'num' 'int'
|   | | |   |   |       |   `-IntegerLiteral 0x24e4d7558e8 <col:36> 'int' 0
|   | | |   |   |       |-ImplicitCastExpr 0x24e4d7559a8 <col:41> 'int' <LValueToRValue>
|   | | |   |   |       | `-DeclRefExpr 0x24e4d755968 <col:41> 'int' lvalue Var 0x24e4d755000 'num' 'int'
|   | | |   |   |       `-ImplicitCastExpr 0x24e4d7559c0 <col:47> 'int' <LValueToRValue>
|   | | |   |   |         `-DeclRefExpr 0x24e4d755988 <col:47> 'int' lvalue Var 0x24e4d754f80 'i' 'int'
|   | | |   |   `-IfStmt 0x24e4d755b38 <line:159:17, line:160:32>
|   | | |   |     |-BinaryOperator 0x24e4d755ab0 <line:159:21, col:26> 'int' '=='
|   | | |   |     | |-ImplicitCastExpr 0x24e4d755a98 <col:21> 'int' <LValueToRValue>
|   | | |   |     | | `-DeclRefExpr 0x24e4d755a50 <col:21> 'int' lvalue Var 0x24e4d754f80 'i' 'int'
|   | | |   |     | `-IntegerLiteral 0x24e4d755a70 <col:26> 'int' 0
|   | | |   |     `-ReturnStmt 0x24e4d755b28 <line:160:21, col:32>
|   | | |   |       `-ImplicitCastExpr 0x24e4d755b10 <col:28, col:32> 'int' <LValueToRValue>
|   | | |   |         `-ParenExpr 0x24e4d755af0 <col:28, col:32> 'int' lvalue
|   | | |   |           `-DeclRefExpr 0x24e4d755ad0 <col:29> 'int' lvalue Var 0x24e4d755000 'num' 'int'
|   | | |   |-IfStmt 0x24e4d756170 <line:162:13, line:163:68>
|   | | |   | |-BinaryOperator 0x24e4d755c48 <line:162:17, col:26> 'int' '<'
|   | | |   | | |-ImplicitCastExpr 0x24e4d755c18 <col:17> 'int' <LValueToRValue>
|   | | |   | | | `-DeclRefExpr 0x24e4d755b90 <col:17> 'int' lvalue Var 0x24e4d754f80 'i' 'int'
|   | | |   | | `-ImplicitCastExpr 0x24e4d755c30 <col:21, col:26> 'int' <LValueToRValue>
|   | | |   | |   `-MemberExpr 0x24e4d755be8 <col:21, col:26> 'int' lvalue ->obuf_len 0x24e4d74ccd8
|   | | |   | |     `-ImplicitCastExpr 0x24e4d755bd0 <col:21> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   | |       `-DeclRefExpr 0x24e4d755bb0 <col:21> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d751150 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   | `-CallExpr 0x24e4d7560d8 <line:163:17, col:68> 'void *'
|   | | |   |   |-ImplicitCastExpr 0x24e4d7560c0 <col:17> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | |   |   | `-DeclRefExpr 0x24e4d755e58 <col:17> 'void *(void *, const void *, unsigned long long)' Function 0x24e4d755c68 'memmove' 'void *(void *, const void *, unsigned long long)'
|   | | |   |   |-ImplicitCastExpr 0x24e4d756128 <col:25, col:30> 'void *' <BitCast>
|   | | |   |   | `-ImplicitCastExpr 0x24e4d756110 <col:25, col:30> 'char *' <LValueToRValue>
|   | | |   |   |   `-MemberExpr 0x24e4d755ec8 <col:25, col:30> 'char *' lvalue ->obuf 0x24e4d74cbf8
|   | | |   |   |     `-ImplicitCastExpr 0x24e4d755eb0 <col:25> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   |   |       `-DeclRefExpr 0x24e4d755e90 <col:25> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d751150 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   |   |-ImplicitCastExpr 0x24e4d756140 <col:36, col:48> 'const void *' <BitCast>
|   | | |   |   | `-BinaryOperator 0x24e4d755fb0 <col:36, col:48> 'char *' '+'
|   | | |   |   |   |-ImplicitCastExpr 0x24e4d755f80 <col:36, col:41> 'char *' <LValueToRValue>
|   | | |   |   |   | `-MemberExpr 0x24e4d755f30 <col:36, col:41> 'char *' lvalue ->obuf 0x24e4d74cbf8
|   | | |   |   |   |   `-ImplicitCastExpr 0x24e4d755f18 <col:36> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   |   |   |     `-DeclRefExpr 0x24e4d755ef8 <col:36> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d751150 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   |   |   `-ImplicitCastExpr 0x24e4d755f98 <col:48> 'int' <LValueToRValue>
|   | | |   |   |     `-DeclRefExpr 0x24e4d755f60 <col:48> 'int' lvalue Var 0x24e4d754f80 'i' 'int'
|   | | |   |   `-ImplicitCastExpr 0x24e4d756158 <col:51, col:67> 'unsigned long long' <IntegralCast>
|   | | |   |     `-BinaryOperator 0x24e4d756088 <col:51, col:67> 'int' '-'
|   | | |   |       |-ImplicitCastExpr 0x24e4d756058 <col:51, col:56> 'int' <LValueToRValue>
|   | | |   |       | `-MemberExpr 0x24e4d756008 <col:51, col:56> 'int' lvalue ->obuf_len 0x24e4d74ccd8
|   | | |   |       |   `-ImplicitCastExpr 0x24e4d755ff0 <col:51> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   |       |     `-DeclRefExpr 0x24e4d755fd0 <col:51> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d751150 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   |       `-ImplicitCastExpr 0x24e4d756070 <col:67> 'int' <LValueToRValue>
|   | | |   |         `-DeclRefExpr 0x24e4d756038 <col:67> 'int' lvalue Var 0x24e4d754f80 'i' 'int'
|   | | |   `-CompoundAssignOperator 0x24e4d756240 <line:164:13, col:30> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |     |-MemberExpr 0x24e4d7561d8 <col:13, col:18> 'int' lvalue ->obuf_len 0x24e4d74ccd8
|   | | |     | `-ImplicitCastExpr 0x24e4d7561c0 <col:13> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |     |   `-DeclRefExpr 0x24e4d7561a0 <col:13> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d751150 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |     `-ImplicitCastExpr 0x24e4d756228 <col:30> 'int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x24e4d756208 <col:30> 'int' lvalue Var 0x24e4d754f80 'i' 'int'
|   | | `-IfStmt 0x24e4d756c30 <line:171:9, line:183:9>
|   | |   |-BinaryOperator 0x24e4d756578 <line:171:13, col:62> 'int' '&&'
|   | |   | |-ParenExpr 0x24e4d756468 <col:13, col:48> 'int'
|   | |   | | `-BinaryOperator 0x24e4d756448 <col:14, col:39> 'int' '||'
|   | |   | |   |-ImplicitCastExpr 0x24e4d756430 <col:14> 'int' <LValueToRValue>
|   | |   | |   | `-DeclRefExpr 0x24e4d7562c8 <col:14> 'int' lvalue Var 0x24e4d7550a8 'foundnl' 'int'
|   | |   | |   `-BinaryOperator 0x24e4d756410 <col:25, col:39> 'int' '>'
|   | |   | |     |-BinaryOperator 0x24e4d756358 <col:25, col:29> 'long long' '-'
|   | |   | |     | |-ImplicitCastExpr 0x24e4d756328 <col:25> 'const char *' <LValueToRValue>
|   | |   | |     | | `-DeclRefExpr 0x24e4d7562e8 <col:25> 'const char *' lvalue Var 0x24e4d7516e0 'p' 'const char *'
|   | |   | |     | `-ImplicitCastExpr 0x24e4d756340 <col:29> 'const char *' <LValueToRValue>
|   | |   | |     |   `-DeclRefExpr 0x24e4d756308 <col:29> 'const char *' lvalue ParmVar 0x24e4d754d70 'in' 'const char *'
|   | |   | |     `-ImplicitCastExpr 0x24e4d7563f8 <col:34, col:39> 'long long' <IntegralCast>
|   | |   | |       `-ImplicitCastExpr 0x24e4d7563e0 <col:34, col:39> 'int' <LValueToRValue>
|   | |   | |         `-MemberExpr 0x24e4d7563b0 <col:34, col:39> 'int' lvalue ->obuf_size 0x24e4d74cc68
|   | |   | |           `-ImplicitCastExpr 0x24e4d756398 <col:34> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | |   | |             `-DeclRefExpr 0x24e4d756378 <col:34> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d751150 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | |   | `-BinaryOperator 0x24e4d756558 <col:53, col:62> 'int' '>'
|   | |   |   |-BinaryOperator 0x24e4d7564f8 <col:53, col:57> 'long long' '-'
|   | |   |   | |-ImplicitCastExpr 0x24e4d7564c8 <col:53> 'const char *' <LValueToRValue>
|   | |   |   | | `-DeclRefExpr 0x24e4d756488 <col:53> 'const char *' lvalue Var 0x24e4d7516e0 'p' 'const char *'
|   | |   |   | `-ImplicitCastExpr 0x24e4d7564e0 <col:57> 'const char *' <LValueToRValue>
|   | |   |   |   `-DeclRefExpr 0x24e4d7564a8 <col:57> 'const char *' lvalue ParmVar 0x24e4d754d70 'in' 'const char *'
|   | |   |   `-ImplicitCastExpr 0x24e4d756540 <col:62> 'long long' <IntegralCast>
|   | |   |     `-IntegerLiteral 0x24e4d756518 <col:62> 'int' 0
|   | |   `-CompoundStmt 0x24e4d756c00 <col:65, line:183:9>
|   | |     |-IfStmt 0x24e4d756a50 <line:173:13, line:179:13>
|   | |     | |-BinaryOperator 0x24e4d7566e8 <line:173:17, col:22> 'int' '<='
|   | |     | | |-ImplicitCastExpr 0x24e4d7566d0 <col:17> 'int' <LValueToRValue>
|   | |     | | | `-DeclRefExpr 0x24e4d756688 <col:17> 'int' lvalue Var 0x24e4d754f80 'i' 'int'
|   | |     | | `-IntegerLiteral 0x24e4d7566a8 <col:22> 'int' 0
|   | |     | `-CompoundStmt 0x24e4d756a30 <col:25, line:179:13>
|   | |     |   |-IfStmt 0x24e4d756918 <line:175:17, line:176:48>
|   | |     |   | |-BinaryOperator 0x24e4d756788 <line:175:21, col:25> 'int' '<'
|   | |     |   | | |-ImplicitCastExpr 0x24e4d756770 <col:21> 'int' <LValueToRValue>
|   | |     |   | | | `-DeclRefExpr 0x24e4d756728 <col:21> 'int' lvalue Var 0x24e4d754f80 'i' 'int'
|   | |     |   | | `-IntegerLiteral 0x24e4d756748 <col:25> 'int' 0
|   | |     |   | `-ReturnStmt 0x24e4d756908 <line:176:21, col:48>
|   | |     |   |   `-ParenExpr 0x24e4d7568e8 <col:28, col:48> 'int'
|   | |     |   |     `-ConditionalOperator 0x24e4d7568b8 <col:29, col:47> 'int'
|   | |     |   |       |-ParenExpr 0x24e4d756828 <col:29, col:37> 'int'
|   | |     |   |       | `-BinaryOperator 0x24e4d756808 <col:30, col:36> 'int' '>'
|   | |     |   |       |   |-ImplicitCastExpr 0x24e4d7567f0 <col:30> 'int' <LValueToRValue>
|   | |     |   |       |   | `-DeclRefExpr 0x24e4d7567a8 <col:30> 'int' lvalue Var 0x24e4d755000 'num' 'int'
|   | |     |   |       |   `-IntegerLiteral 0x24e4d7567c8 <col:36> 'int' 0
|   | |     |   |       |-ImplicitCastExpr 0x24e4d756888 <col:41> 'int' <LValueToRValue>
|   | |     |   |       | `-DeclRefExpr 0x24e4d756848 <col:41> 'int' lvalue Var 0x24e4d755000 'num' 'int'
|   | |     |   |       `-ImplicitCastExpr 0x24e4d7568a0 <col:47> 'int' <LValueToRValue>
|   | |     |   |         `-DeclRefExpr 0x24e4d756868 <col:47> 'int' lvalue Var 0x24e4d754f80 'i' 'int'
|   | |     |   `-IfStmt 0x24e4d756a18 <line:177:17, line:178:32>
|   | |     |     |-BinaryOperator 0x24e4d756990 <line:177:21, col:26> 'int' '=='
|   | |     |     | |-ImplicitCastExpr 0x24e4d756978 <col:21> 'int' <LValueToRValue>
|   | |     |     | | `-DeclRefExpr 0x24e4d756930 <col:21> 'int' lvalue Var 0x24e4d754f80 'i' 'int'
|   | |     |     | `-IntegerLiteral 0x24e4d756950 <col:26> 'int' 0
|   | |     |     `-ReturnStmt 0x24e4d756a08 <line:178:21, col:32>
|   | |     |       `-ImplicitCastExpr 0x24e4d7569f0 <col:28, col:32> 'int' <LValueToRValue>
|   | |     |         `-ParenExpr 0x24e4d7569d0 <col:28, col:32> 'int' lvalue
|   | |     |           `-DeclRefExpr 0x24e4d7569b0 <col:29> 'int' lvalue Var 0x24e4d755000 'num' 'int'
|   | |     |-CompoundAssignOperator 0x24e4d756ac0 <line:180:13, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |     | |-DeclRefExpr 0x24e4d756a68 <col:13> 'int' lvalue Var 0x24e4d755000 'num' 'int'
|   | |     | `-ImplicitCastExpr 0x24e4d756aa8 <col:20> 'int' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x24e4d756a88 <col:20> 'int' lvalue Var 0x24e4d754f80 'i' 'int'
|   | |     |-CompoundAssignOperator 0x24e4d756b48 <line:181:13, col:19> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   | |     | |-DeclRefExpr 0x24e4d756af0 <col:13> 'const char *' lvalue ParmVar 0x24e4d754d70 'in' 'const char *'
|   | |     | `-ImplicitCastExpr 0x24e4d756b30 <col:19> 'int' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x24e4d756b10 <col:19> 'int' lvalue Var 0x24e4d754f80 'i' 'int'
|   | |     `-CompoundAssignOperator 0x24e4d756bd0 <line:182:13, col:20> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |       |-DeclRefExpr 0x24e4d756b78 <col:13> 'int' lvalue ParmVar 0x24e4d754df0 'inl' 'int'
|   | |       `-ImplicitCastExpr 0x24e4d756bb8 <col:20> 'int' <LValueToRValue>
|   | |         `-DeclRefExpr 0x24e4d756b98 <col:20> 'int' lvalue Var 0x24e4d754f80 'i' 'int'
|   | `-BinaryOperator 0x24e4d756d40 <line:185:12, col:29> 'int' '&&'
|   |   |-ImplicitCastExpr 0x24e4d756d28 <col:12> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x24e4d756c88 <col:12> 'int' lvalue Var 0x24e4d7550a8 'foundnl' 'int'
|   |   `-BinaryOperator 0x24e4d756d08 <col:23, col:29> 'int' '>'
|   |     |-ImplicitCastExpr 0x24e4d756cf0 <col:23> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x24e4d756ca8 <col:23> 'int' lvalue ParmVar 0x24e4d754df0 'inl' 'int'
|   |     `-IntegerLiteral 0x24e4d756cc8 <col:29> 'int' 0
|   |-IfStmt 0x24e4d7501d0 <line:191:5, line:195:5>
|   | |-BinaryOperator 0x24e4d756de0 <line:191:9, col:15> 'int' '>'
|   | | |-ImplicitCastExpr 0x24e4d756dc8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x24e4d756d80 <col:9> 'int' lvalue ParmVar 0x24e4d754df0 'inl' 'int'
|   | | `-IntegerLiteral 0x24e4d756da0 <col:15> 'int' 0
|   | `-CompoundStmt 0x24e4d7501a8 <col:18, line:195:5>
|   |   |-CallExpr 0x24e4d757000 <line:192:9, col:52> 'void *'
|   |   | |-ImplicitCastExpr 0x24e4d756fe8 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x24e4d756e00 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x24e4d74d5c0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x24e4d757038 <col:16, col:42> 'void *' <BitCast>
|   |   | | `-UnaryOperator 0x24e4d756f60 <col:16, col:42> 'char *' prefix '&' cannot overflow
|   |   | |   `-ParenExpr 0x24e4d756f40 <col:17, col:42> 'char' lvalue
|   |   | |     `-ArraySubscriptExpr 0x24e4d756f20 <col:18, col:41> 'char' lvalue
|   |   | |       |-ImplicitCastExpr 0x24e4d756ef0 <col:18, col:23> 'char *' <LValueToRValue>
|   |   | |       | `-MemberExpr 0x24e4d756e58 <col:18, col:23> 'char *' lvalue ->obuf 0x24e4d74cbf8
|   |   | |       |   `-ImplicitCastExpr 0x24e4d756e40 <col:18> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   | |       |     `-DeclRefExpr 0x24e4d756e20 <col:18> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d751150 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   | |       `-ImplicitCastExpr 0x24e4d756f08 <col:28, col:33> 'int' <LValueToRValue>
|   |   | |         `-MemberExpr 0x24e4d756ec0 <col:28, col:33> 'int' lvalue ->obuf_len 0x24e4d74ccd8
|   |   | |           `-ImplicitCastExpr 0x24e4d756ea8 <col:28> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   | |             `-DeclRefExpr 0x24e4d756e88 <col:28> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d751150 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   | |-ImplicitCastExpr 0x24e4d757068 <col:45> 'const void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x24e4d757050 <col:45> 'const char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x24e4d756f78 <col:45> 'const char *' lvalue ParmVar 0x24e4d754d70 'in' 'const char *'
|   |   | `-ImplicitCastExpr 0x24e4d757098 <col:49> 'unsigned long long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x24e4d757080 <col:49> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x24e4d756f98 <col:49> 'int' lvalue ParmVar 0x24e4d754df0 'inl' 'int'
|   |   |-CompoundAssignOperator 0x24e4d757150 <line:193:9, col:26> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x24e4d7570e8 <col:9, col:14> 'int' lvalue ->obuf_len 0x24e4d74ccd8
|   |   | | `-ImplicitCastExpr 0x24e4d7570d0 <col:9> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x24e4d7570b0 <col:9> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d751150 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   | `-ImplicitCastExpr 0x24e4d757138 <col:26> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x24e4d757118 <col:26> 'int' lvalue ParmVar 0x24e4d754df0 'inl' 'int'
|   |   `-CompoundAssignOperator 0x24e4d750178 <line:194:9, col:16> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x24e4d757180 <col:9> 'int' lvalue Var 0x24e4d755000 'num' 'int'
|   |     `-ImplicitCastExpr 0x24e4d750160 <col:16> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x24e4d750140 <col:16> 'int' lvalue ParmVar 0x24e4d754df0 'inl' 'int'
|   `-ReturnStmt 0x24e4d750220 <line:196:5, col:12>
|     `-ImplicitCastExpr 0x24e4d750208 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x24e4d7501e8 <col:12> 'int' lvalue Var 0x24e4d755000 'num' 'int'
|-FunctionDecl 0x24e4d74d5c0 <line:139:21> col:21 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x24e4d74d660 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x24e4d74d6c8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x24e4d74d730 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24e4d755c68 <line:163:17> col:17 implicit used memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x24e4d755d08 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x24e4d755d70 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x24e4d755dd8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24e4d7504c0 <line:199:1, line:294:1> line:199:13 invalid linebuffer_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x24e4d750290 <col:29, col:34> col:34 invalid b 'int *'
| |-ParmVarDecl 0x24e4d750310 <col:37, col:41> col:41 used cmd 'int'
| |-ParmVarDecl 0x24e4d750390 <col:46, col:51> col:51 used num 'long'
| |-ParmVarDecl 0x24e4d750410 <col:56, col:62> col:62 used ptr 'void *'
| `-CompoundStmt 0x24e4d757690 <line:200:1, line:294:1>
|   |-DeclStmt 0x24e4d750610 <line:202:5, col:28>
|   | `-VarDecl 0x24e4d7505a8 <col:5, col:25> col:25 used ctx 'BIO_LINEBUFFER_CTX *'
|   |-DeclStmt 0x24e4d7506e8 <line:203:5, col:17>
|   | `-VarDecl 0x24e4d750640 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x24e4d7506d0 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x24e4d7506a8 <col:16> 'int' 1
|   |-DeclStmt 0x24e4d750780 <line:204:5, col:12>
|   | `-VarDecl 0x24e4d750718 <col:5, col:11> col:11 used p 'char *'
|   |-DeclStmt 0x24e4d750818 <line:205:5, col:10>
|   | `-VarDecl 0x24e4d7507b0 <col:5, col:9> col:9 used r 'int'
|   |-DeclStmt 0x24e4d7508b0 <line:206:5, col:12>
|   | `-VarDecl 0x24e4d750848 <col:5, col:9> col:9 used obs 'int'
|   |-SwitchStmt 0x24e4d750950 <line:210:5, line:289:5>
|   | |-ImplicitCastExpr 0x24e4d750938 <line:210:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x24e4d750900 <col:13> 'int' lvalue ParmVar 0x24e4d750310 'cmd' 'int'
|   | `-CompoundStmt 0x24e4d7573c0 <col:18, line:289:5>
|   |   |-BinaryOperator 0x24e4d750a00 <line:212:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x24e4d7509a8 <col:9, col:14> 'int' lvalue ->obuf_len 0x24e4d74ccd8
|   |   | | `-ImplicitCastExpr 0x24e4d750990 <col:9> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x24e4d750970 <col:9> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d7505a8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   | `-IntegerLiteral 0x24e4d7509d8 <col:25> 'int' 0
|   |   |-IfStmt 0x24e4d750b30 <line:213:9, line:214:22>
|   |   | |-OpaqueValueExpr 0x24e4d750b18 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x24e4d750b08 <col:13, col:22>
|   |   |   `-ImplicitCastExpr 0x24e4d750af0 <col:20, col:22> 'long' <IntegralCast>
|   |   |     `-ParenExpr 0x24e4d750ad0 <col:20, col:22> 'int'
|   |   |       `-IntegerLiteral 0x24e4d750aa8 <col:21> 'int' 0
|   |   |-BreakStmt 0x24e4d750d20 <line:216:9>
|   |   |-BinaryOperator 0x24e4d750e08 <line:218:9, col:26> 'long' '='
|   |   | |-DeclRefExpr 0x24e4d750d28 <col:9> 'long' lvalue Var 0x24e4d750640 'ret' 'long'
|   |   | `-CStyleCastExpr 0x24e4d750de0 <col:15, col:26> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x24e4d750dc8 <col:21, col:26> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     `-MemberExpr 0x24e4d750d80 <col:21, col:26> 'int' lvalue ->obuf_len 0x24e4d74ccd8
|   |   |       `-ImplicitCastExpr 0x24e4d750d68 <col:21> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x24e4d750d48 <col:21> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d7505a8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |-BreakStmt 0x24e4d750e28 <line:219:9>
|   |   |-BinaryOperator 0x24e4d750f10 <line:221:9, col:26> 'long' '='
|   |   | |-DeclRefExpr 0x24e4d750e30 <col:9> 'long' lvalue Var 0x24e4d750640 'ret' 'long'
|   |   | `-CStyleCastExpr 0x24e4d750ee8 <col:15, col:26> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x24e4d750ed0 <col:21, col:26> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     `-MemberExpr 0x24e4d750e88 <col:21, col:26> 'int' lvalue ->obuf_len 0x24e4d74ccd8
|   |   |       `-ImplicitCastExpr 0x24e4d750e70 <col:21> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x24e4d750e50 <col:21> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d7505a8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |-IfStmt 0x24e4d759248 <line:222:9, line:226:9>
|   |   | |-BinaryOperator 0x24e4d750fa8 <line:222:13, col:20> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x24e4d750f78 <col:13> 'long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x24e4d750f30 <col:13> 'long' lvalue Var 0x24e4d750640 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x24e4d750f90 <col:20> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x24e4d750f50 <col:20> 'int' 0
|   |   | `-CompoundStmt 0x24e4d759230 <col:23, line:226:9>
|   |   |   `-IfStmt 0x24e4d7510d8 <line:223:13, line:224:26>
|   |   |     |-OpaqueValueExpr 0x24e4d7510c0 <<invalid sloc>> '_Bool'
|   |   |     `-ReturnStmt 0x24e4d7510b0 <col:17, col:26>
|   |   |       `-ImplicitCastExpr 0x24e4d751098 <col:24, col:26> 'long' <IntegralCast>
|   |   |         `-ParenExpr 0x24e4d751078 <col:24, col:26> 'int'
|   |   |           `-IntegerLiteral 0x24e4d751050 <col:25> 'int' 0
|   |   |-BreakStmt 0x24e4d759260 <line:227:9>
|   |   |-BinaryOperator 0x24e4d759318 <line:229:9, col:20> 'int' '='
|   |   | |-DeclRefExpr 0x24e4d759268 <col:9> 'int' lvalue Var 0x24e4d750848 'obs' 'int'
|   |   | `-CStyleCastExpr 0x24e4d7592f0 <col:15, col:20> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x24e4d7592d8 <col:20> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x24e4d7592a0 <col:20> 'long' lvalue ParmVar 0x24e4d750390 'num' 'long'
|   |   |-BinaryOperator 0x24e4d7593f0 <line:230:9, col:18> 'char *' '='
|   |   | |-DeclRefExpr 0x24e4d759338 <col:9> 'char *' lvalue Var 0x24e4d750718 'p' 'char *'
|   |   | `-ImplicitCastExpr 0x24e4d7593d8 <col:13, col:18> 'char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x24e4d7593a8 <col:13, col:18> 'char *' lvalue ->obuf 0x24e4d74cbf8
|   |   |     `-ImplicitCastExpr 0x24e4d759390 <col:13> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x24e4d759370 <col:13> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d7505a8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |-IfStmt 0x24e4d7598d8 <line:231:9, line:235:9>
|   |   | |-BinaryOperator 0x24e4d7595f0 <line:231:13, col:70> 'int' '&&'
|   |   | | |-ParenExpr 0x24e4d7594d8 <col:13, col:43> 'int'
|   |   | | | `-BinaryOperator 0x24e4d7594b8 <col:14, line:26:38> 'int' '>'
|   |   | | |   |-ImplicitCastExpr 0x24e4d7594a0 <line:231:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x24e4d759410 <col:14> 'int' lvalue Var 0x24e4d750848 'obs' 'int'
|   |   | | |   `-BinaryOperator 0x24e4d759480 <line:26:33, col:38> 'int' '*'
|   |   | | |     |-IntegerLiteral 0x24e4d759430 <col:33> 'int' 1024
|   |   | | |     `-IntegerLiteral 0x24e4d759458 <col:38> 'int' 10
|   |   | | `-ParenExpr 0x24e4d7595d0 <line:231:48, col:70> 'int'
|   |   | |   `-BinaryOperator 0x24e4d7595b0 <col:49, col:61> 'int' '!='
|   |   | |     |-ImplicitCastExpr 0x24e4d759580 <col:49> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x24e4d7594f8 <col:49> 'int' lvalue Var 0x24e4d750848 'obs' 'int'
|   |   | |     `-ImplicitCastExpr 0x24e4d759598 <col:56, col:61> 'int' <LValueToRValue>
|   |   | |       `-MemberExpr 0x24e4d759550 <col:56, col:61> 'int' lvalue ->obuf_size 0x24e4d74cc68
|   |   | |         `-ImplicitCastExpr 0x24e4d759538 <col:56> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   | |           `-DeclRefExpr 0x24e4d759518 <col:56> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d7505a8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   | `-CompoundStmt 0x24e4d7598b8 <col:73, line:235:9>
|   |   |   |-BinaryOperator 0x24e4d759720 <line:232:13, col:40> 'char *' '='
|   |   |   | |-DeclRefExpr 0x24e4d759610 <col:13> 'char *' lvalue Var 0x24e4d750718 'p' 'char *'
|   |   |   | `-ImplicitCastExpr 0x24e4d759708 <col:17, col:40> 'char *' <IntegralToPointer>
|   |   |   |   `-CallExpr 0x24e4d7596e0 <col:17, col:40> 'int'
|   |   |   |     |-ImplicitCastExpr 0x24e4d7596c8 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x24e4d759630 <col:17> 'int ()' Function 0x24e4d74f130 'OPENSSL_malloc' 'int ()'
|   |   |   |     `-CStyleCastExpr 0x24e4d7596a0 <col:32, col:37> 'int' <IntegralCast>
|   |   |   |       `-ImplicitCastExpr 0x24e4d759688 <col:37> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |   |         `-DeclRefExpr 0x24e4d759650 <col:37> 'long' lvalue ParmVar 0x24e4d750390 'num' 'long'
|   |   |   `-IfStmt 0x24e4d7598a0 <line:233:13, line:234:22>
|   |   |     |-BinaryOperator 0x24e4d759818 <line:233:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x24e4d7597e8 <.//openssl//file_jk/before\crypto\bio\bf_lbuf.c:233:17> 'char *' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x24e4d759740 <col:17> 'char *' lvalue Var 0x24e4d750718 'p' 'char *'
|   |   |     | `-ImplicitCastExpr 0x24e4d759800 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |   |     |   `-ParenExpr 0x24e4d7597c8 <col:17, col:27> 'void *'
|   |   |     |     `-CStyleCastExpr 0x24e4d7597a0 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     |       `-IntegerLiteral 0x24e4d759760 <col:26> 'int' 0
|   |   |     `-GotoStmt 0x24e4d759888 <.//openssl//file_jk/before\crypto\bio\bf_lbuf.c:234:17, col:22> 'malloc_error' 0x24e4d759838
|   |   |-IfStmt 0x24e4d75a060 <line:236:9, line:244:9>
|   |   | |-BinaryOperator 0x24e4d7599a8 <line:236:13, col:26> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x24e4d759978 <col:13, col:18> 'char *' <LValueToRValue>
|   |   | | | `-MemberExpr 0x24e4d759928 <col:13, col:18> 'char *' lvalue ->obuf 0x24e4d74cbf8
|   |   | | |   `-ImplicitCastExpr 0x24e4d759910 <col:13> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x24e4d7598f0 <col:13> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d7505a8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   | | `-ImplicitCastExpr 0x24e4d759990 <col:26> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x24e4d759958 <col:26> 'char *' lvalue Var 0x24e4d750718 'p' 'char *'
|   |   | `-CompoundStmt 0x24e4d75a028 <col:29, line:244:9>
|   |   |   |-IfStmt 0x24e4d759b78 <line:237:13, line:239:13>
|   |   |   | |-BinaryOperator 0x24e4d759a80 <line:237:17, col:33> 'int' '>'
|   |   |   | | |-ImplicitCastExpr 0x24e4d759a50 <col:17, col:22> 'int' <LValueToRValue>
|   |   |   | | | `-MemberExpr 0x24e4d759a00 <col:17, col:22> 'int' lvalue ->obuf_len 0x24e4d74ccd8
|   |   |   | | |   `-ImplicitCastExpr 0x24e4d7599e8 <col:17> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |   | | |     `-DeclRefExpr 0x24e4d7599c8 <col:17> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d7505a8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |   | | `-ImplicitCastExpr 0x24e4d759a68 <col:33> 'int' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x24e4d759a30 <col:33> 'int' lvalue Var 0x24e4d750848 'obs' 'int'
|   |   |   | `-CompoundStmt 0x24e4d759b60 <col:38, line:239:13>
|   |   |   |   `-BinaryOperator 0x24e4d759b40 <line:238:17, col:33> 'int' '='
|   |   |   |     |-MemberExpr 0x24e4d759ad8 <col:17, col:22> 'int' lvalue ->obuf_len 0x24e4d74ccd8
|   |   |   |     | `-ImplicitCastExpr 0x24e4d759ac0 <col:17> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |   |     |   `-DeclRefExpr 0x24e4d759aa0 <col:17> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d7505a8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |   |     `-ImplicitCastExpr 0x24e4d759b28 <col:33> 'int' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x24e4d759b08 <col:33> 'int' lvalue Var 0x24e4d750848 'obs' 'int'
|   |   |   |-CallExpr 0x24e4d759d00 <line:240:13, col:47> 'void *'
|   |   |   | |-ImplicitCastExpr 0x24e4d759ce8 <col:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x24e4d759b90 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x24e4d74d5c0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   |   | |-ImplicitCastExpr 0x24e4d759d50 <col:20> 'void *' <BitCast>
|   |   |   | | `-ImplicitCastExpr 0x24e4d759d38 <col:20> 'char *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x24e4d759bb0 <col:20> 'char *' lvalue Var 0x24e4d750718 'p' 'char *'
|   |   |   | |-ImplicitCastExpr 0x24e4d759d80 <col:23, col:28> 'const void *' <BitCast>
|   |   |   | | `-ImplicitCastExpr 0x24e4d759d68 <col:23, col:28> 'char *' <LValueToRValue>
|   |   |   | |   `-MemberExpr 0x24e4d759c08 <col:23, col:28> 'char *' lvalue ->obuf 0x24e4d74cbf8
|   |   |   | |     `-ImplicitCastExpr 0x24e4d759bf0 <col:23> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |   | |       `-DeclRefExpr 0x24e4d759bd0 <col:23> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d7505a8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |   | `-ImplicitCastExpr 0x24e4d759db0 <col:34, col:39> 'unsigned long long' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x24e4d759d98 <col:34, col:39> 'int' <LValueToRValue>
|   |   |   |     `-MemberExpr 0x24e4d759c70 <col:34, col:39> 'int' lvalue ->obuf_len 0x24e4d74ccd8
|   |   |   |       `-ImplicitCastExpr 0x24e4d759c58 <col:34> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x24e4d759c38 <col:34> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d7505a8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |   |-CallExpr 0x24e4d759e68 <line:241:13, col:35> 'int'
|   |   |   | |-ImplicitCastExpr 0x24e4d759e50 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x24e4d759dc8 <col:13> 'int ()' Function 0x24e4d74f790 'OPENSSL_free' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x24e4d759e90 <col:26, col:31> 'char *' <LValueToRValue>
|   |   |   |   `-MemberExpr 0x24e4d759e20 <col:26, col:31> 'char *' lvalue ->obuf 0x24e4d74cbf8
|   |   |   |     `-ImplicitCastExpr 0x24e4d759e08 <col:26> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x24e4d759de8 <col:26> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d7505a8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |   |-BinaryOperator 0x24e4d759f48 <line:242:13, col:25> 'char *' '='
|   |   |   | |-MemberExpr 0x24e4d759ee0 <col:13, col:18> 'char *' lvalue ->obuf 0x24e4d74cbf8
|   |   |   | | `-ImplicitCastExpr 0x24e4d759ec8 <col:13> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x24e4d759ea8 <col:13> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d7505a8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |   | `-ImplicitCastExpr 0x24e4d759f30 <col:25> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x24e4d759f10 <col:25> 'char *' lvalue Var 0x24e4d750718 'p' 'char *'
|   |   |   `-BinaryOperator 0x24e4d75a008 <line:243:13, col:30> 'int' '='
|   |   |     |-MemberExpr 0x24e4d759fa0 <col:13, col:18> 'int' lvalue ->obuf_size 0x24e4d74cc68
|   |   |     | `-ImplicitCastExpr 0x24e4d759f88 <col:13> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x24e4d759f68 <col:13> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d7505a8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |     `-ImplicitCastExpr 0x24e4d759ff0 <col:30> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x24e4d759fd0 <col:30> 'int' lvalue Var 0x24e4d750848 'obs' 'int'
|   |   |-BreakStmt 0x24e4d75a078 <line:245:9>
|   |   |-IfStmt 0x24e4d75a190 <line:247:9, line:248:22>
|   |   | |-OpaqueValueExpr 0x24e4d75a178 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x24e4d75a168 <col:13, col:22>
|   |   |   `-ImplicitCastExpr 0x24e4d75a150 <col:20, col:22> 'long' <IntegralCast>
|   |   |     `-ParenExpr 0x24e4d75a130 <col:20, col:22> 'int'
|   |   |       `-IntegerLiteral 0x24e4d75a108 <col:21> 'int' 0
|   |   |-BreakStmt 0x24e4d753230 <line:252:9>
|   |   |-IfStmt 0x24e4d753348 <line:255:9, line:256:22>
|   |   | |-OpaqueValueExpr 0x24e4d753330 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x24e4d753320 <col:13, col:22>
|   |   |   `-ImplicitCastExpr 0x24e4d753308 <col:20, col:22> 'long' <IntegralCast>
|   |   |     `-ParenExpr 0x24e4d7532e8 <col:20, col:22> 'int'
|   |   |       `-IntegerLiteral 0x24e4d7532c0 <col:21> 'int' 0
|   |   |-IfStmt 0x24e4d7534e8 <line:257:9, line:260:9>
|   |   | |-BinaryOperator 0x24e4d753408 <line:257:13, col:30> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x24e4d7533f0 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x24e4d753398 <col:13, col:18> 'int' lvalue ->obuf_len 0x24e4d74ccd8
|   |   | | |   `-ImplicitCastExpr 0x24e4d753380 <col:13> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x24e4d753360 <col:13> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d7505a8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   | | `-IntegerLiteral 0x24e4d7533c8 <col:30> 'int' 0
|   |   | `-CompoundStmt 0x24e4d7534d0 <col:33, line:260:9>
|   |   |   `-BreakStmt 0x24e4d7534c8 <line:259:13>
|   |   |-ForStmt 0x24e4d753e70 <line:262:9, line:276:9>
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | `-CompoundStmt 0x24e4d753e58 <line:262:18, line:276:9>
|   |   |   `-IfStmt 0x24e4d753e30 <line:264:13, line:275:13> has_else
|   |   |     |-BinaryOperator 0x24e4d7535c8 <line:264:17, col:33> 'int' '>'
|   |   |     | |-ImplicitCastExpr 0x24e4d7535b0 <col:17, col:22> 'int' <LValueToRValue>
|   |   |     | | `-MemberExpr 0x24e4d753558 <col:17, col:22> 'int' lvalue ->obuf_len 0x24e4d74ccd8
|   |   |     | |   `-ImplicitCastExpr 0x24e4d753540 <col:17> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |     | |     `-DeclRefExpr 0x24e4d753520 <col:17> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d7505a8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |     | `-IntegerLiteral 0x24e4d753588 <col:33> 'int' 0
|   |   |     |-CompoundStmt 0x24e4d753d30 <col:36, line:272:13>
|   |   |     | |-IfStmt 0x24e4d753858 <line:267:17, line:268:36>
|   |   |     | | |-BinaryOperator 0x24e4d753790 <line:267:21, col:26> 'int' '<='
|   |   |     | | | |-ImplicitCastExpr 0x24e4d753778 <col:21> 'int' <LValueToRValue>
|   |   |     | | | | `-DeclRefExpr 0x24e4d753730 <col:21> 'int' lvalue Var 0x24e4d7507b0 'r' 'int'
|   |   |     | | | `-IntegerLiteral 0x24e4d753750 <col:26> 'int' 0
|   |   |     | | `-ReturnStmt 0x24e4d753848 <line:268:21, col:36>
|   |   |     | |   `-ParenExpr 0x24e4d753828 <col:28, col:36> 'long'
|   |   |     | |     `-CStyleCastExpr 0x24e4d753800 <col:29, col:35> 'long' <IntegralCast>
|   |   |     | |       `-ImplicitCastExpr 0x24e4d7537e8 <col:35> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     | |         `-DeclRefExpr 0x24e4d7537b0 <col:35> 'int' lvalue Var 0x24e4d7507b0 'r' 'int'
|   |   |     | |-IfStmt 0x24e4d753c48 <line:269:17, line:270:72>
|   |   |     | | |-BinaryOperator 0x24e4d753928 <line:269:21, col:30> 'int' '<'
|   |   |     | | | |-ImplicitCastExpr 0x24e4d7538f8 <col:21> 'int' <LValueToRValue>
|   |   |     | | | | `-DeclRefExpr 0x24e4d753870 <col:21> 'int' lvalue Var 0x24e4d7507b0 'r' 'int'
|   |   |     | | | `-ImplicitCastExpr 0x24e4d753910 <col:25, col:30> 'int' <LValueToRValue>
|   |   |     | | |   `-MemberExpr 0x24e4d7538c8 <col:25, col:30> 'int' lvalue ->obuf_len 0x24e4d74ccd8
|   |   |     | | |     `-ImplicitCastExpr 0x24e4d7538b0 <col:25> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |     | | |       `-DeclRefExpr 0x24e4d753890 <col:25> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d7505a8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |     | | `-CallExpr 0x24e4d753bb0 <line:270:21, col:72> 'void *'
|   |   |     | |   |-ImplicitCastExpr 0x24e4d753b98 <col:21> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   |     | |   | `-DeclRefExpr 0x24e4d753948 <col:21> 'void *(void *, const void *, unsigned long long)' Function 0x24e4d755c68 'memmove' 'void *(void *, const void *, unsigned long long)'
|   |   |     | |   |-ImplicitCastExpr 0x24e4d753c00 <col:29, col:34> 'void *' <BitCast>
|   |   |     | |   | `-ImplicitCastExpr 0x24e4d753be8 <col:29, col:34> 'char *' <LValueToRValue>
|   |   |     | |   |   `-MemberExpr 0x24e4d7539a0 <col:29, col:34> 'char *' lvalue ->obuf 0x24e4d74cbf8
|   |   |     | |   |     `-ImplicitCastExpr 0x24e4d753988 <col:29> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |     | |   |       `-DeclRefExpr 0x24e4d753968 <col:29> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d7505a8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |     | |   |-ImplicitCastExpr 0x24e4d753c18 <col:40, col:52> 'const void *' <BitCast>
|   |   |     | |   | `-BinaryOperator 0x24e4d753a88 <col:40, col:52> 'char *' '+'
|   |   |     | |   |   |-ImplicitCastExpr 0x24e4d753a58 <col:40, col:45> 'char *' <LValueToRValue>
|   |   |     | |   |   | `-MemberExpr 0x24e4d753a08 <col:40, col:45> 'char *' lvalue ->obuf 0x24e4d74cbf8
|   |   |     | |   |   |   `-ImplicitCastExpr 0x24e4d7539f0 <col:40> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |     | |   |   |     `-DeclRefExpr 0x24e4d7539d0 <col:40> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d7505a8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |     | |   |   `-ImplicitCastExpr 0x24e4d753a70 <col:52> 'int' <LValueToRValue>
|   |   |     | |   |     `-DeclRefExpr 0x24e4d753a38 <col:52> 'int' lvalue Var 0x24e4d7507b0 'r' 'int'
|   |   |     | |   `-ImplicitCastExpr 0x24e4d753c30 <col:55, col:71> 'unsigned long long' <IntegralCast>
|   |   |     | |     `-BinaryOperator 0x24e4d753b60 <col:55, col:71> 'int' '-'
|   |   |     | |       |-ImplicitCastExpr 0x24e4d753b30 <col:55, col:60> 'int' <LValueToRValue>
|   |   |     | |       | `-MemberExpr 0x24e4d753ae0 <col:55, col:60> 'int' lvalue ->obuf_len 0x24e4d74ccd8
|   |   |     | |       |   `-ImplicitCastExpr 0x24e4d753ac8 <col:55> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |     | |       |     `-DeclRefExpr 0x24e4d753aa8 <col:55> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d7505a8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |     | |       `-ImplicitCastExpr 0x24e4d753b48 <col:71> 'int' <LValueToRValue>
|   |   |     | |         `-DeclRefExpr 0x24e4d753b10 <col:71> 'int' lvalue Var 0x24e4d7507b0 'r' 'int'
|   |   |     | `-CompoundAssignOperator 0x24e4d753d00 <line:271:17, col:34> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |   |-MemberExpr 0x24e4d753c98 <col:17, col:22> 'int' lvalue ->obuf_len 0x24e4d74ccd8
|   |   |     |   | `-ImplicitCastExpr 0x24e4d753c80 <col:17> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |     |   |   `-DeclRefExpr 0x24e4d753c60 <col:17> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d7505a8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |     |   `-ImplicitCastExpr 0x24e4d753ce8 <col:34> 'int' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x24e4d753cc8 <col:34> 'int' lvalue Var 0x24e4d7507b0 'r' 'int'
|   |   |     `-CompoundStmt 0x24e4d753e10 <line:272:20, line:275:13>
|   |   |       |-BinaryOperator 0x24e4d753de8 <line:273:17, col:33> 'int' '='
|   |   |       | |-MemberExpr 0x24e4d753d90 <col:17, col:22> 'int' lvalue ->obuf_len 0x24e4d74ccd8
|   |   |       | | `-ImplicitCastExpr 0x24e4d753d78 <col:17> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |       | |   `-DeclRefExpr 0x24e4d753d58 <col:17> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x24e4d7505a8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |       | `-IntegerLiteral 0x24e4d753dc0 <col:33> 'int' 0
|   |   |       `-BreakStmt 0x24e4d753e08 <line:274:17>
|   |   |-BreakStmt 0x24e4d753f48 <line:278:9>
|   |   |-IfStmt 0x24e4d7571b0 <line:281:9, line:282:19>
|   |   | |-OpaqueValueExpr 0x24e4d754148 <<invalid sloc>> '_Bool'
|   |   | `-BinaryOperator 0x24e4d754128 <col:13, col:19> 'long' '='
|   |   |   |-DeclRefExpr 0x24e4d7540c8 <col:13> 'long' lvalue Var 0x24e4d750640 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x24e4d754110 <col:19> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x24e4d7540e8 <col:19> 'int' 0
|   |   |-BreakStmt 0x24e4d7571c8 <line:283:9>
|   |   |-DefaultStmt 0x24e4d7572f8 <line:284:5, line:286:22>
|   |   | `-IfStmt 0x24e4d7572e0 <line:285:9, line:286:22>
|   |   |   |-OpaqueValueExpr 0x24e4d7572c8 <<invalid sloc>> '_Bool'
|   |   |   `-ReturnStmt 0x24e4d7572b8 <col:13, col:22>
|   |   |     `-ImplicitCastExpr 0x24e4d7572a0 <col:20, col:22> 'long' <IntegralCast>
|   |   |       `-ParenExpr 0x24e4d757280 <col:20, col:22> 'int'
|   |   |         `-IntegerLiteral 0x24e4d757258 <col:21> 'int' 0
|   |   `-BreakStmt 0x24e4d7573b8 <line:288:9>
|   |-ReturnStmt 0x24e4d7574e0 <line:290:5, col:16>
|   | `-ImplicitCastExpr 0x24e4d7574c8 <col:12, col:16> 'long' <LValueToRValue>
|   |   `-ParenExpr 0x24e4d7574a8 <col:12, col:16> 'long' lvalue
|   |     `-DeclRefExpr 0x24e4d757488 <col:13> 'long' lvalue Var 0x24e4d750640 'ret' 'long'
|   |-LabelStmt 0x24e4d757608 <line:291:2, col:14> 'malloc_error'
|   | `-NullStmt 0x24e4d757600 <col:14>
|   `-ReturnStmt 0x24e4d757680 <line:293:5, col:14>
|     `-ImplicitCastExpr 0x24e4d757668 <col:12, col:14> 'long' <IntegralCast>
|       `-ParenExpr 0x24e4d757648 <col:12, col:14> 'int'
|         `-IntegerLiteral 0x24e4d757620 <col:13> 'int' 0
|-FunctionDecl 0x24e4d7578a8 <line:296:1, line:308:1> line:296:13 invalid linebuffer_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x24e4d757700 <col:38, col:43> col:43 invalid b 'int *'
| |-ParmVarDecl 0x24e4d757780 <col:46, col:50> col:50 used cmd 'int'
| |-ParmVarDecl 0x24e4d757800 <col:55, col:68> col:68 invalid fp 'int *'
| `-CompoundStmt 0x24e4d757e08 <line:297:1, line:308:1>
|   |-DeclStmt 0x24e4d757a38 <line:298:5, col:17>
|   | `-VarDecl 0x24e4d757990 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x24e4d757a20 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x24e4d7579f8 <col:16> 'int' 1
|   |-IfStmt 0x24e4d757b60 <line:300:5, line:301:18>
|   | |-OpaqueValueExpr 0x24e4d757b48 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x24e4d757b38 <col:9, col:18>
|   |   `-ImplicitCastExpr 0x24e4d757b20 <col:16, col:18> 'long' <IntegralCast>
|   |     `-ParenExpr 0x24e4d757b00 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x24e4d757ad8 <col:17> 'int' 0
|   |-SwitchStmt 0x24e4d757bc8 <line:302:5, line:306:5>
|   | |-ImplicitCastExpr 0x24e4d757bb0 <line:302:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x24e4d757b78 <col:13> 'int' lvalue ParmVar 0x24e4d757780 'cmd' 'int'
|   | `-CompoundStmt 0x24e4d757d80 <col:18, line:306:5>
|   |   |-DefaultStmt 0x24e4d757d58 <line:303:5, col:12>
|   |   | `-NullStmt 0x24e4d757d50 <col:12>
|   |   `-BreakStmt 0x24e4d757d78 <line:305:9>
|   `-ReturnStmt 0x24e4d757df8 <line:307:5, col:16>
|     `-ImplicitCastExpr 0x24e4d757de0 <col:12, col:16> 'long' <LValueToRValue>
|       `-ParenExpr 0x24e4d757dc0 <col:12, col:16> 'long' lvalue
|         `-DeclRefExpr 0x24e4d757da0 <col:13> 'long' lvalue Var 0x24e4d757990 'ret' 'long'
|-FunctionDecl 0x24e4d757ff8 <line:310:1, line:315:1> line:310:12 invalid linebuffer_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x24e4d757e50 <col:28, col:33> col:33 invalid b 'int *'
| |-ParmVarDecl 0x24e4d757ed0 <col:36, col:42> col:42 used buf 'char *'
| |-ParmVarDecl 0x24e4d757f50 <col:47, col:51> col:51 used size 'int'
| `-CompoundStmt 0x24e4d758370 <line:311:1, line:315:1>
|   `-IfStmt 0x24e4d7581d8 <line:312:5, line:313:18>
|     |-OpaqueValueExpr 0x24e4d7581c0 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x24e4d758198 <col:9, col:18>
|       `-ParenExpr 0x24e4d758178 <col:16, col:18> 'int'
|         `-IntegerLiteral 0x24e4d758150 <col:17> 'int' 0
|-FunctionDecl 0x24e4d7584c0 <line:317:1, line:320:1> line:317:12 invalid linebuffer_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x24e4d7583a0 <col:28, col:33> col:33 invalid b 'int *'
| |-ParmVarDecl 0x24e4d758420 <col:36, col:48> col:48 used str 'const char *'
| `-CompoundStmt 0x24e4d7587f0 <line:318:1, line:320:1>
`-FunctionDecl 0x24e4d7585f0 <line:319:38> col:38 implicit used strlen 'unsigned long long (const char *)' extern
  `-ParmVarDecl 0x24e4d758690 <<invalid sloc>> <invalid sloc> 'const char *'
