TranslationUnitDecl 0x20228bc3488 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x20228bc3d20 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x20228bc3a20 '__int128'
|-TypedefDecl 0x20228bc3d90 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x20228bc3a40 'unsigned __int128'
|-TypedefDecl 0x20228bc40c8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x20228bc3e80 'struct __NSConstantString_tag'
|   `-Record 0x20228bc3de8 '__NSConstantString_tag'
|-TypedefDecl 0x20228bc4138 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x20228bc3660 'unsigned long long'
|-TypedefDecl 0x20228bc41d0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x20228bc4190 'char *'
|   `-BuiltinType 0x20228bc3520 'char'
|-TypedefDecl 0x20228bc4240 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x20228bc4190 'char *'
|   `-BuiltinType 0x20228bc3520 'char'
|-TypedefDecl 0x20228bc4300 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x20228bc3660 'unsigned long long'
|-TypedefDecl 0x20228bc4370 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x20228bc4190 'char *'
|   `-BuiltinType 0x20228bc3520 'char'
|-FunctionDecl 0x2022a6db7e0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2022a6db880 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x2022a6db8f0 <col:21> Implicit
|-FunctionDecl 0x2022a6db948 prev 0x2022a6db7e0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2022a6db670 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x2022a6dba38 <col:21> Inherited Implicit
|-TypedefDecl 0x2022a6dba78 prev 0x20228bc4138 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x20228bc3660 'unsigned long long'
|-TypedefDecl 0x2022a6dbb20 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x2022a6dbaf0 'size_t' sugar
|   |-Typedef 0x2022a6dba78 'size_t'
|   `-BuiltinType 0x20228bc3660 'unsigned long long'
|-TypedefDecl 0x2022a6dbb90 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x20228bc35c0 'long long'
|-TypedefDecl 0x2022a6dbc00 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x20228bc35c0 'long long'
|-TypedefDecl 0x2022a6dbc70 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x20228bc3600 'unsigned short'
|-TypedefDecl 0x2022a6dbce0 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x20228bc3600 'unsigned short'
|-TypedefDecl 0x2022a6dbd50 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x20228bc3600 'unsigned short'
|-TypedefDecl 0x2022a6dbdc0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x20228bc3580 'int'
|-TypedefDecl 0x2022a6dbe30 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x20228bc35a0 'long'
|-TypedefDecl 0x2022a6dbea0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x20228bc35c0 'long long'
|-TypedefDecl 0x2022a6dbf30 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x2022a6dbf00 '__time64_t' sugar
|   |-Typedef 0x2022a6dbea0 '__time64_t'
|   `-BuiltinType 0x20228bc35c0 'long long'
|-FunctionDecl 0x2022a6dc0a8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x2022a6dc2c8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x2022a71a850 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x2022a6dc408 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x2022a6dc480 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x2022a6dc4f8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x2022a6dc578 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x2022a71a5f0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x2022a71a930 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x2022a71a9f0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x2022a71ab60 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x2022a71ab10 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x2022a71aab0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x2022a71a9d0 'struct threadlocaleinfostruct'
|       `-Record 0x2022a7286d0 'threadlocaleinfostruct'
|-TypedefDecl 0x2022a71ac70 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x2022a71ac20 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x2022a71abc0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x2022a71aa90 'struct threadmbcinfostruct'
|       `-Record 0x2022a71a9f0 'threadmbcinfostruct'
|-RecordDecl 0x2022a71acc8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x2022a71ad80 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x2022a71ae40 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2022a71aed0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x2022a71af60 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x2022a71b018 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x2022a71afc0 'struct localeinfo_struct' sugar
|   `-RecordType 0x2022a71ae20 'struct localeinfo_struct'
|     `-Record 0x2022a71ad80 'localeinfo_struct'
|-TypedefDecl 0x2022a71b0f0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x2022a71b0a0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x2022a71afc0 'struct localeinfo_struct' sugar
|     `-RecordType 0x2022a71ae20 'struct localeinfo_struct'
|       `-Record 0x2022a71ad80 'localeinfo_struct'
|-RecordDecl 0x2022a71b168 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x2022a71b220 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2022a71b298 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x2022a71b358 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x2022a71b3f0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x2022a71b460 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x2022a71b518 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x2022a71b4c0 'struct localerefcount' sugar
|   `-RecordType 0x2022a71b200 'struct localerefcount'
|     `-Record 0x2022a71b168 'localerefcount'
|-RecordDecl 0x2022a7286d0 prev 0x2022a71a930 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x2022a728750 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2022a7287c8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x2022a728838 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x2022a7288a8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x2022a728918 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x2022a728ad8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x2022a728b48 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x2022a728bb8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x2022a728c28 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x2022a728c98 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x2022a728d08 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x2022a728d60 parent 0x20228bc3488 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x2022a728ef0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x2022a728f60 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x2022a728fd0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x2022a729040 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x2022a7290e0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x2022a729150 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x2022a729260 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x2022a729398 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x2022a729448 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x2022a7293f0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x2022a71a9d0 'struct threadlocaleinfostruct'
|     `-Record 0x2022a7286d0 'threadlocaleinfostruct'
|-RecordDecl 0x2022a7294e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x2022a7295a0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2022a729618 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x2022a721660 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x2022a7216d0 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x2022a721740 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x2022a7217b0 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x2022a721820 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x2022a721890 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x2022a721900 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x2022a7219b0 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x2022a721960 'struct _iobuf' sugar
|   `-RecordType 0x2022a729580 'struct _iobuf'
|     `-Record 0x2022a7294e0 '_iobuf'
|-FunctionDecl 0x2022a721be8 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x2022a721cb8 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x20228bc35c0 'long long'
|-FunctionDecl 0x2022a721e98 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2022a721d20 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x2022a722190 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2022a721f70 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x2022a721fe8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x2022a722540 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x2022a722270 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x2022a7222f0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x2022a722370 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x2022a72a860 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2022a72a6f0 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x2022a72aa90 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x2022a72a950 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x2022a72ac40 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2022a72ab60 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x2022a72ae30 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2022a72b128 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x2022a72af00 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x2022a72af80 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x2022a72b2e0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2022a72b200 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x2022a72b490 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2022a72b3b0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x2022a72b640 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2022a72b560 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x2022a72b808 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2022a72b728 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x2022a72b998 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2022a72bd00 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x2022a72ba60 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x2022a72bb58 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x2022a72c0b8 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x2022a72bde0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x2022a72be60 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x2022a72bed8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x2022a72c278 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2022a72c198 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x2022a72c540 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x2022a72c350 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x2022a72c3d0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x2022a724690 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2022a724a88 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x2022a724b28 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2022a724b90 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2022a724c08 prev 0x2022a724a88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x2022a724860 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x2022a7248e0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x2022a724cb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a725130 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x2022a724e60 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x2022a724ee0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x2022a724f60 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x2022a725450 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x2022a7254f0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x2022a725558 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2022a7255d0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x2022a732770 prev 0x2022a725450 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2022a725210 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2022a725290 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x2022a732868 <col:40> Inherited printf 2 3
|-FunctionDecl 0x2022a732a30 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2022a7328b0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x2022a732930 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x2022a732c88 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2022a732b10 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x2022a732b88 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x2022a732eb8 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2022a732d68 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x2022a7331b0 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x2022a732f90 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x2022a733008 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x2022a733648 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x2022a7336e8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2022a731760 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2022a7317c8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x2022a731830 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x2022a7318b8 prev 0x2022a733648 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x2022a733290 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x2022a733308 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a733380 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2022a7333f8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x2022a731dc0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2022a7319a8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x2022a731a20 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a731a98 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a731b10 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2022a731b88 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x2022a732280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x2022a731fb0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x2022a732030 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x2022a7320a8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x2022a732338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a7307f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x2022a732480 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x2022a732500 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x2022a732580 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x2022a7325f8 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x2022a730ba0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x2022a730c40 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x2022a730ca8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2022a730d20 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x2022a730d88 prev 0x2022a730ba0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x2022a7309d8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x2022a730a58 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x2022a730f68 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x2022a730e38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a7313a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7310a8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x2022a731128 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x2022a7311c0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2022a731460 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a72d720 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2022a7315a0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x2022a731620 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x2022a72da10 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a72d7f8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2022a72d878 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2022a72d8f0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a72dd70 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x2022a72daf0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x2022a72dbc8 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x2022a72e128 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x2022a72de48 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x2022a72dec8 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x2022a72df48 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x2022a72e388 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x2022a72e208 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x2022a7337c8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x2022a72e458 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2022a72e4d8 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x2022a72e558 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x2022a733a28 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x2022a7338a8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x2022a733ee8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x2022a733f88 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2022a733ff0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2022a734058 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x2022a7340c0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x2022a734148 prev 0x2022a733ee8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x2022a733b30 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x2022a733ba8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a733c20 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2022a733c98 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x2022a734310 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2022a734230 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x2022a7344a0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2022a734628 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2022a72c8d0 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x2022a7346f8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x2022a72c720 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2022a72cbf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2022a72cab0 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x2022a72cca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a72cec0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2022a72cde0 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x2022a72d0e0 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x2022a72cf98 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x2022a72d290 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2022a72d1b0 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x2022a72d4e0 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x2022a72d368 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x2022a72d3e8 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x2022a72f740 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x2022a72f7e0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2022a72f850 <col:40> Implicit printf 1 2
|-FunctionDecl 0x2022a72f8b8 prev 0x2022a72f740 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x2022a72d5c0 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x2022a72f9a8 <col:40> Inherited printf 1 2
|-FunctionDecl 0x2022a72fad8 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2022a72f9f8 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x2022a72fd28 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2022a72fbb0 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x2022a72fc28 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x2022a72fee8 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2022a72fe08 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x2022a730108 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2022a72ffc0 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x2022a730358 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2022a7301e0 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x2022a730258 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x2022a730518 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2022a730438 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x2022a784100 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2022a7305f0 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x2022a730670 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x2022a7842c0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2022a7841e0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x2022a784550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x2022a784470 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x2022a7845f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x2022a7847f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2022a784718 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x2022a784980 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2022a784c28 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x2022a784cc8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2022a784d38 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x2022a784da0 prev 0x2022a784c28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x2022a784b10 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x2022a784f78 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x2022a784e48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a782320 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7820e8 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x2022a782160 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2022a7823d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a7825f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2022a782518 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x2022a782848 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7826d0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x2022a782748 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a782c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x2022a7829e0 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x2022a782a60 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x2022a782cb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a782ee0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2022a782e00 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x2022a785188 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x2022a785040 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x2022a785370 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x2022a7857c0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x2022a785438 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2022a7854b8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x2022a785538 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x2022a7855b0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2022a785c40 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x2022a7858b0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x2022a785928 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7859a0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2022a785a20 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x2022a786050 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2022a785d30 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2022a785da8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2022a785e28 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x2022a786218 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2022a786138 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x2022a7865f0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x2022a786690 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2022a7866f8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2022a786770 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x2022a7867d8 prev 0x2022a7865f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x2022a7863b0 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x2022a786430 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x2022a7869b8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x2022a786888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a786da8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a786ac8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x2022a786b48 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x2022a786bc0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2022a786e60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a7800f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x2022a786fa8 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x2022a77fff0 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x2022a7803e8 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7801d0 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x2022a780250 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x2022a7802c8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a780878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2022a780590 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x2022a780608 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a780688 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x2022a780930 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a780f00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a780b70 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x2022a780be8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a780c68 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x2022a780ce0 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2022a77efe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a77f340 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2022a77f128 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x2022a77f1a0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2022a77f220 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x2022a77f6d8 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a77f428 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x2022a77f4a0 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a77f520 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x2022a77f598 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a77f938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x2022a77f9d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a77fc90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x2022a77fb20 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x2022a783020 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x2022a77fd68 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x2022a77fde0 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2022a7832a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2022a7831c0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x2022a783348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a783608 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2022a783490 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x2022a783508 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x2022a783a20 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2022a783ac0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x2022a783b28 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2022a783b90 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2022a783c10 <col:40> Implicit printf 2 0
|-FunctionDecl 0x2022a783c78 prev 0x2022a783a20 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2022a7836e0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x2022a783760 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x2022a7837d8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2022a783d78 <col:40> Inherited printf 2 0
|-FunctionDecl 0x2022a787060 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2022a787100 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x2022a787168 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2022a7871d0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2022a787250 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x2022a7872b8 prev 0x2022a787060 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2022a783dc0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2022a783e40 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x2022a783eb8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2022a7873b8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x2022a787618 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2022a787400 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2022a787480 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x2022a7874f8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a787910 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2022a7876f8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2022a787778 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x2022a7877f0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a787c58 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2022a787cf8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2022a787d60 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2022a787dd8 <col:40> Implicit printf 1 0
|-FunctionDecl 0x2022a787e40 prev 0x2022a787c58 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2022a7879f8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x2022a787a70 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2022a787f38 <col:40> Inherited printf 1 0
|-FunctionDecl 0x2022a7881a8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2022a788248 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2022a7882b0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2022a788328 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x2022a788390 prev 0x2022a7881a8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2022a787f88 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x2022a788070 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2022a788488 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x2022a788650 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2022a7884d8 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x2022a788550 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a7888a8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2022a788730 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x2022a7887a8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a788e08 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2022a788ea8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2022a788f10 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2022a788f78 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2022a788fe0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2022a781000 <col:77> Implicit printf 3 0
|-FunctionDecl 0x2022a781068 prev 0x2022a788e08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2022a788a48 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x2022a788ac0 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a788b40 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x2022a788bb8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x2022a781258 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x2022a781128 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a7816c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2022a7812a8 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x2022a781320 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a781398 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a781418 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x2022a781490 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a781b08 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2022a7817c0 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x2022a781838 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7818b0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a781930 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x2022a7819a8 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a781ed8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2022a781cc0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x2022a781d38 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a781db8 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x2022a781f90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a78b510 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2022a78b260 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x2022a78b2d8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a78b358 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x2022a78b3d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x2022a78b5d0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a78b9c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2022a78b718 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x2022a78b790 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a78b810 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x2022a78b888 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a78bd88 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x2022a78bab8 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x2022a78bb38 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x2022a78bbb0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a78c150 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x2022a78c1f0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2022a78c258 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2022a78c2d0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x2022a78c338 prev 0x2022a78c150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x2022a78bf30 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x2022a78bfb0 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x2022a78c518 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x2022a78c3e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a78c940 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2022a78c9e0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2022a78ca48 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2022a78cab0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2022a78cb30 <col:94> Implicit printf 2 0
|-FunctionDecl 0x2022a78cb98 prev 0x2022a78c940 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2022a78c628 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x2022a78c6a8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x2022a78c720 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x2022a78cd80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x2022a78cc50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a78d0c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2022a78d160 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2022a78d1c8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2022a78d230 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2022a78d2b0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x2022a78d318 prev 0x2022a78d0c0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2022a78cdd0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x2022a78ce50 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x2022a78cec8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2022a78d418 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x2022a78d5e0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2022a78d468 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x2022a78d4e0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a78d8d8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2022a78d6c0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x2022a78d738 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2022a78d7b8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x2022a78dc70 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2022a78d9c0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x2022a78da38 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a78dab8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x2022a78db30 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a78ded8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2022a78dd58 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x2022a78ddd8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x2022a78e0d0 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2022a78dfb8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x2022a78e3c0 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2022a78e1a8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x2022a78e220 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2022a78e2a0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x2022a78e6b8 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2022a78e4a0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2022a78e520 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x2022a78e598 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a78e918 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2022a78e7a0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x2022a78e818 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a78eca8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2022a78e9f8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x2022a78ea70 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a78eaf0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x2022a78eb68 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a78ee78 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2022a78ed98 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x2022a78f0e0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2022a78ef50 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x2022a78efc8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a78f2a0 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2022a78f1c0 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x2022a78f430 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2022a78f678 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a78f500 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x2022a78f578 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a78f8d0 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a78f758 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2022a78f7d0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a78fb28 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a78f9b0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2022a78fa28 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a78fed8 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a78fc08 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x2022a78fc80 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2022a78fcf8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a790210 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a78ffc0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2022a790038 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2022a7900f0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a790508 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a7902f8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2022a790370 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2022a7903e8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a790800 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7905e8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2022a790668 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x2022a7906e0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a790af8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7908e0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2022a790960 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2022a7909d8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a790df0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a790bd8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2022a790c58 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2022a790cd0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a78a1f0 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a790ed0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2022a790f50 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x2022a790fc8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2022a791040 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a78a588 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a78a2d8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2022a78a358 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x2022a78a3d0 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2022a78a448 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a78a920 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a78a670 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2022a78a6f0 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x2022a78a768 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2022a78a7e0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a78adb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a78aad0 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x2022a78ab50 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x2022a78abc8 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2022a78ae70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a791410 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a78afb8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x2022a791100 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a791180 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x2022a7911f8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a7917b0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a791500 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x2022a791578 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7915f8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x2022a791670 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a791d00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a7919a0 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x2022a791a20 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x2022a791a98 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2022a791b10 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2022a791dc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a793358 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a791f08 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x2022a791f80 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a792000 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x2022a792078 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2022a793120 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a793798 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a793450 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2022a7934c8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a793548 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x2022a7935c0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2022a793638 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a793a08 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a793890 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2022a793908 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a793c60 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a793ae8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x2022a793b60 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a793f50 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a793d40 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2022a793db8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2022a793e30 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a795270 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a794038 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x2022a7940b0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2022a795150 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a7956c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a795418 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x2022a795490 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a795510 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x2022a795588 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2022a795788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a795b80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7958d0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x2022a795948 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7959c8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x2022a795a40 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a792110 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a795c70 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2022a795ce8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a795d60 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a795de0 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x2022a795e58 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a792650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a792308 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x2022a792380 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a792400 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x2022a792478 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2022a7924f0 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2022a792718 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a792b98 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a792868 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x2022a7928e0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a792960 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x2022a7929d8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2022a792a50 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a7961b0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a792c90 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x2022a792d08 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a792d80 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a792e00 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x2022a792e78 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2022a792ef0 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a796570 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x2022a7962a8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2022a796320 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x2022a7963a0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x2022a7967e0 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2022a796670 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x2022a7969f8 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x2022a796cd8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2022a796ac0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2022a796b38 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x2022a796f20 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x2022a796db0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2022a797160 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2022a796ff0 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x2022a7972e8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x2022a797520 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2022a7973b0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2022a797428 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x2022a7976d0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x2022a7975f8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2022a797978 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x2022a7977a0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2022a797818 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x2022a797d20 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x2022a797a50 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2022a797ad0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x2022a797b48 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x2022a798020 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2022a797e00 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2022a797e78 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2022a798328 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x2022a7980f8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x2022a798180 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2022a798630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2022a7984c0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x2022a7986d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a798998 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x2022a798818 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x2022a798ca0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2022a798a68 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x2022a798ae0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x2022a798ef0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2022a798d78 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x2022a798df0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x2022a799180 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2022a798fc8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x2022a799330 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2022a799250 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x2022a7994e0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2022a799400 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x2022a799878 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2022a7995b0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2022a799628 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a7996a0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a799b68 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2022a799958 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x2022a7999d0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a799a48 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a799e58 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2022a799c48 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2022a799cc0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a799d38 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a794130 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2022a799f38 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2022a799fb0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a79a028 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a794430 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2022a794210 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a794288 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a794680 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2022a794508 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a794580 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a7948d0 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2022a794758 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a7947d0 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a794b20 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2022a7949a8 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a794a20 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a794ed8 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2022a794bf8 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2022a794c70 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2022a794ce8 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x2022a79d3d0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2022a794fb8 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2022a795030 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7950a8 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a79d1c0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a79d788 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2022a79d4b8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2022a79d530 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a79d5a8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a79da78 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2022a79d868 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x2022a79d8e0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a79d958 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a79dd68 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2022a79db58 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2022a79dbd0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2022a79dc48 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x2022a79e0f0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2022a79de48 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2022a79dec0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a79df38 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a79dfb0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a79a540 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2022a79a1b8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2022a79a230 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a79a2a8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2022a79a320 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x2022a79aa48 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2022a79a628 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2022a79a6a0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a79a718 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a79a790 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a79a808 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a79ae08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2022a79abf8 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2022a79ac70 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a79ace8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2022a79aec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a79c3e0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2022a79b0c0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2022a79c1b0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a79c228 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2022a79c2a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x2022a79c4a0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a79c758 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2022a79c5e0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x2022a79c658 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x2022a79c910 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2022a79c830 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x2022a79cbf0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2022a79c9e0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2022a79ca58 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a79cad0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a79ce48 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2022a79ccd0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a79cd48 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a7a2040 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2022a79cf20 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2022a79cf98 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2022a79d010 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x2022a7a23c8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2022a7a2120 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2022a7a2198 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7a2210 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a7a2288 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a7a2590 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2022a7a24b0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x2022a7a27d8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2022a7a2660 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a7a26d8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a7a2ae0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7a28b0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a7a2928 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a7a2d30 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7a2bb8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a7a2c30 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a7a2f80 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7a2e08 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a7a2e80 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a7a0318 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a7a0048 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2022a7a00c0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2022a7a0138 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a7a0608 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a7a03f8 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2022a7a0470 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2022a7a04e8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a7a08f8 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a7a06e8 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2022a7a0760 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2022a7a07d8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a7a0cb8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7a09d8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2022a7a0a50 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a7a0ac8 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a7a3050 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7a0d98 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2022a7a0e10 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a7a0e88 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a7a3340 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7a3130 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2022a7a31a8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a7a3220 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a7a3790 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a7a3420 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2022a7a3498 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2022a7a3510 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2022a7a3588 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a7a3b20 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a7a3878 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x2022a7a38f0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2022a7a3968 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2022a7a39e0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a7a3eb0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a7a3c08 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x2022a7a3c80 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2022a7a3cf8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2022a7a3d70 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a7a4370 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7a3f98 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2022a7a4060 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7a40d8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a7a4150 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a7a4700 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7a4458 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2022a7a44d0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7a4548 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a7a45c0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a7a4a90 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7a47e8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2022a7a4860 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7a48d8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a7a4950 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a7a4f98 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a7a4b78 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2022a7a4bf0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7a4c68 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2022a7a4ce0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2022a7a4d58 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a7a63e8 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a7a60a8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2022a7a6120 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7a6198 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2022a7a6210 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2022a7a6288 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a7a6818 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a7a64d8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2022a7a6550 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7a65c8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2022a7a6640 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2022a7a66b8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a7a6a80 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7a6908 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a7a6980 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a7a6cd0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7a6b58 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a7a6bd0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a7a6fb8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a7a6da8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2022a7a6e20 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2022a7a6e98 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a7a8438 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7a8190 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2022a7a8208 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7a8280 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2022a7a82f8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2022a7a84f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a7a8a68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7a8640 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2022a7a86b8 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7a8730 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7a87a8 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a7a8820 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a7a8fa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a7a8c60 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2022a7a8cd8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7a8d50 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2022a7a8dc8 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2022a7a8e40 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2022a7a7090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a7a76a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a7a71d8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2022a7a7250 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7a72c8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7a7340 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2022a7a73b8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2022a7a7430 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a7a7ba0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2022a7a7968 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2022a7a79e0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x2022a7a7c50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2022a7a7d68 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2022a7a1298 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2022a7a8020 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2022a7a1040 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2022a7a10b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x2022a7a1350 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2022a7a1468 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2022a7a1a08 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7a1728 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2022a7a17a0 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2022a7a1818 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x2022a7a1ac0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2022a7a1be0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2022a7ab2e0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a7a1ea0 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2022a7a1f18 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2022a7a1f90 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2022a7ab0d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x2022a7ab3a0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2022a7ab4c0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2022a7ab7c8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x2022a7ab5e8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x2022a7ab660 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7ab6d8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x2022a7b03c0 <line:37:1, line:44:1>
|   |-DeclStmt 0x2022a7ab910 <line:38:5, col:21>
|   | `-VarDecl 0x2022a7ab8a8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x2022a7ab9a8 <line:39:5, col:13>
|   | `-VarDecl 0x2022a7ab940 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x2022a7abd00 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x2022a7abce8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2022a7abc00 <col:34> '<builtin fn type>' Function 0x2022a7aba98 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x2022a7abc38 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x2022a7ab8a8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x2022a7abc70 <col:29> 'const wchar_t *' lvalue ParmVar 0x2022a7ab6d8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x2022a7abfc0 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x2022a7abd30 <col:5> 'int' lvalue Var 0x2022a7ab940 '_Ret' 'int'
|   | `-CallExpr 0x2022a7abf00 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x2022a7abee8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2022a7abd68 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2022a7a4f98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x2022a7abf48 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2022a7abd88 <col:27> 'wchar_t *' lvalue ParmVar 0x2022a7ab5e8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x2022a7abf60 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2022a7abda8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2022a7ab660 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x2022a7abf78 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2022a7abdc8 <col:44> 'const wchar_t *' lvalue ParmVar 0x2022a7ab6d8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x2022a7abf90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x2022a7abe50 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x2022a7abe28 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x2022a7abde8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x2022a7abfa8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2022a7abe70 <col:59> 'va_list':'char *' lvalue Var 0x2022a7ab8a8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x2022a7b0350 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x2022a7b0338 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2022a7b0288 <col:34> '<builtin fn type>' Function 0x2022a7b0120 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x2022a7b02c0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x2022a7ab8a8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x2022a7b03b0 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x2022a7b0398 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2022a7b0378 <col:12> 'int' lvalue Var 0x2022a7ab940 '_Ret' 'int'
|-FunctionDecl 0x2022a7aba98 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x2022a7abb38 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x2022a7abba8 <col:34> Implicit
|-FunctionDecl 0x2022a7b0120 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x2022a7b01c0 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x2022a7b0230 <col:34> Implicit
|-FunctionDecl 0x2022a7b06b8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x2022a7b0410 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x2022a7b0488 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7b0500 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2022a7b0578 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x2022a7b09a0 <line:50:1, line:52:1>
|   `-ReturnStmt 0x2022a7b0990 <line:51:5, col:62>
|     `-CallExpr 0x2022a7b08d0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x2022a7b08b8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2022a7b0790 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2022a7a4f98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x2022a7b0918 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2022a7b07b0 <col:27> 'wchar_t *' lvalue ParmVar 0x2022a7b0410 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x2022a7b0930 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x2022a7b07d0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2022a7b0488 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x2022a7b0948 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2022a7b07f0 <col:44> 'const wchar_t *' lvalue ParmVar 0x2022a7b0500 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x2022a7b0960 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x2022a7b0878 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x2022a7b0850 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x2022a7b0810 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x2022a7b0978 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x2022a7b0898 <col:59> 'va_list':'char *' lvalue ParmVar 0x2022a7b0578 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x2022a7b0c40 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x2022a7b09c8 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x2022a7b0a40 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7b0ab8 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2022a7b0b30 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x2022a7a9158 <line:61:1, line:68:1>
|   |-DeclStmt 0x2022a7b0d90 <line:62:5, col:21>
|   | `-VarDecl 0x2022a7b0d28 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x2022a7b0e28 <line:63:5, col:13>
|   | `-VarDecl 0x2022a7b0dc0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x2022a7b0ed0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x2022a7b0eb8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2022a7b0e40 <col:34> '<builtin fn type>' Function 0x2022a7aba98 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x2022a7b0e60 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x2022a7b0d28 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x2022a7b0e98 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2022a7b0b30 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x2022a7b10d0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x2022a7b0f00 <col:5> 'int' lvalue Var 0x2022a7b0dc0 '_Ret' 'int'
|   | `-CallExpr 0x2022a7b1010 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x2022a7b0ff8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2022a7b0f38 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2022a7a4f98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x2022a7b1058 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2022a7b0f58 <col:27> 'wchar_t *' lvalue ParmVar 0x2022a7b09c8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x2022a7b1070 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2022a7b0f78 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2022a7b0a40 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x2022a7b1088 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2022a7b0f98 <col:44> 'const wchar_t *' lvalue ParmVar 0x2022a7b0ab8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x2022a7b10a0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2022a7b0fb8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2022a7b0b30 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x2022a7b10b8 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2022a7b0fd8 <col:64> 'va_list':'char *' lvalue Var 0x2022a7b0d28 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x2022a7a90e8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x2022a7a90d0 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2022a7b10f0 <col:34> '<builtin fn type>' Function 0x2022a7b0120 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x2022a7a90b0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x2022a7b0d28 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x2022a7a9148 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x2022a7a9130 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2022a7a9110 <col:12> 'int' lvalue Var 0x2022a7b0dc0 '_Ret' 'int'
|-FunctionDecl 0x2022a7a94e8 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x2022a7a91a8 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x2022a7a9220 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7a9298 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2022a7a9310 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2022a7a9388 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x2022a7a9770 <line:74:1, line:76:1>
|   `-ReturnStmt 0x2022a7a9760 <line:75:5, col:67>
|     `-CallExpr 0x2022a7a96a0 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x2022a7a9688 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2022a7a95c8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2022a7a4f98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x2022a7a96e8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2022a7a95e8 <col:27> 'wchar_t *' lvalue ParmVar 0x2022a7a91a8 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x2022a7a9700 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x2022a7a9608 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2022a7a9220 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x2022a7a9718 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2022a7a9628 <col:44> 'const wchar_t *' lvalue ParmVar 0x2022a7a9298 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x2022a7a9730 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x2022a7a9648 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2022a7a9310 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x2022a7a9748 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x2022a7a9668 <col:64> 'va_list':'char *' lvalue ParmVar 0x2022a7a9388 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x2022a7a99b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2022a7a9798 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x2022a7a9810 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x2022a7a9c08 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2022a7a9a90 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a7a9b08 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a7a9ef0 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2022a7a9ce0 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2022a7a9d58 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2022a7a9dd0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2022a7b12a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2022a7b1130 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x2022a7b11a8 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2022a7b1358 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a7b1768 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7b1558 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x2022a7b15d0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2022a7b1648 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2022a7b1820 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a7b1ad8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2022a7b1960 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x2022a7b19d8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x2022a7b1dc0 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7b1bb0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2022a7b1c28 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a7b1ca0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a7ae170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2022a7b1f60 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2022a7b1fd8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2022a7ae220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a7ae6f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7ae420 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2022a7ae498 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2022a7ae510 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2022a7ae7b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a7aea68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2022a7ae8f0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2022a7ae968 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x2022a7aed50 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7aeb40 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2022a7aebb8 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a7aec30 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a7ac1c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2022a7aeef0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2022a7aef68 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7aefe0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2022a7ac280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a7ac800 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7ac480 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2022a7ac4f8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7ac570 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2022a7ac5e8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2022a7ac8c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a7acc10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2022a7aca00 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2022a7aca78 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2022a7acaf0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x2022a7acf98 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7accf0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2022a7acd68 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7acde0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a7ace58 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a7aa270 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x2022a7aa190 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2022a7aa318 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a7aa690 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7aa518 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2022a7aa590 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2022a7aa740 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a7aa960 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2022a7aa880 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x2022a7aaba8 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2022a7aaa30 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2022a7aaaa8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2022a7aaea8 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x2022a7aac88 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x2022a7aad00 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x2022a7ad298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2022a7ab040 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2022a7ad0f0 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x2022a7ad348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a7ad750 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2022a7ad490 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x2022a7ad508 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x2022a7ad580 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x2022a7adbb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2022a7ad8f0 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2022a7ad968 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x2022a7ad9e0 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x2022a7adc68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a7b51b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2022a7addb0 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x2022a7ade28 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2022a7adea0 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x2022a7adf18 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x2022a7b5410 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x2022a7b52a0 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x2022a7b5650 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2022a7b54e0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x2022a7b5558 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x2022a7b5808 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x2022a7b5728 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x2022a7b5af8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2022a7b58d8 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x2022a7b5950 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2022a7b5d68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2022a7b5c90 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x2022a7b5e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2022a7b6028 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2022a7b5f50 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x2022a7b7288 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2022a7b60f8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2022a7b7190 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2022a7b74d0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x2022a7b7360 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2022a7b73d8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2022a7b7680 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2022a7b75a8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x2022a7b7828 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2022a7b7750 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x2022a7b79d8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2022a7b78f8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x2022a7b7b88 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2022a7b7aa8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x2022a7b7f00 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2022a7b7c60 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x2022a7b7cd8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7b7d50 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2022a7b7dc8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x2022a7b6350 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2022a7b7ff0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x2022a7b8068 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7b80e0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7b6180 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2022a7b61f8 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x2022a7b6660 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x2022a7b6440 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2022a7b64c0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x2022a7b6540 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x2022a7b6820 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x2022a7b6740 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x2022a7b6b10 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x2022a7b68f0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x2022a7b6970 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x2022a7b69f0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x2022a7b6cd0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x2022a7b6bf0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x2022a7b7048 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2022a7b6da8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x2022a7b6e20 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2022a7b6e98 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2022a7b6f10 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x2022a7b9328 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2022a7b91b0 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x2022a7b9228 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x2022a7b9660 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x2022a7b94e0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x2022a7b9560 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x2022a7b9710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x2022a7b99c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2022a7b9a68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x2022a7b9da8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x2022a7b9c30 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x2022a7b9cb0 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x2022a7b9e58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x2022a7b4160 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2022a7b4200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x2022a7b44a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x2022a7b43c0 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x2022a7b4548 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x2022a7b47c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2022a7b4868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x2022a7b4b10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x2022a7b4a30 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x2022a7b4bb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x2022a7b4e98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x2022a7b4db8 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x2022a7b4f40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x2022a7b22b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2022a7b2140 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x2022a7b21b8 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x2022a7b2368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x2022a7b2628 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2022a7b26c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x2022a7b2900 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:31:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x2022a7b2b10 <line:34:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x2022a7b29d0 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x2022a7b2d60 <line:35:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x2022a7b2be8 <col:34, col:40> col:40 _Value 'int *'
|-RecordDecl 0x2022a7b2e20 <.//openssl//file_jk/before\crypto\bio/bio_lcl.h:64:1, line:71:1> line:64:8 struct bio_addrinfo_st definition
| |-FieldDecl 0x2022a7b2ef8 <line:65:5, col:9> col:9 bai_family 'int'
| |-FieldDecl 0x2022a7b2f68 <line:66:5, col:9> col:9 bai_socktype 'int'
| |-FieldDecl 0x2022a7b2fd8 <line:67:5, col:9> col:9 bai_protocol 'int'
| |-FieldDecl 0x2022a7b3040 <line:68:5, col:12> col:12 bai_addrlen 'size_t':'unsigned long long'
| |-RecordDecl 0x2022a7b3098 parent 0x20228bc3488 <line:69:5, col:12> col:12 struct sockaddr
| |-FieldDecl 0x2022a7c9320 <col:5, col:22> col:22 bai_addr 'struct sockaddr *'
| `-FieldDecl 0x2022a7c9430 <line:70:5, col:29> col:29 bai_next 'struct bio_addrinfo_st *'
|-RecordDecl 0x2022a7c9488 <line:74:1, line:83:1> line:74:7 invalid union bio_addr_st definition
| |-FieldDecl 0x2022a7c9590 <line:75:5, col:21> col:21 invalid sa 'struct sockaddr':'struct sockaddr'
| |-RecordDecl 0x2022a7c95e8 parent 0x20228bc3488 <line:79:5, col:12> col:12 struct sockaddr_in
| `-FieldDecl 0x2022a7c9708 <col:5, col:24> col:24 invalid s_in 'struct sockaddr_in':'struct sockaddr_in'
|-RecordDecl 0x2022a7c9760 <line:91:9, line:112:1> line:91:16 struct bio_f_buffer_ctx_struct definition
| |-FieldDecl 0x2022a7c9838 <line:104:5, col:9> col:9 ibuf_size 'int'
| |-FieldDecl 0x2022a7c98a8 <line:105:5, col:9> col:9 obuf_size 'int'
| |-FieldDecl 0x2022a7c9918 <line:106:5, col:11> col:11 ibuf 'char *'
| |-FieldDecl 0x2022a7c9988 <line:107:5, col:9> col:9 ibuf_len 'int'
| |-FieldDecl 0x2022a7c99f8 <line:108:5, col:9> col:9 ibuf_off 'int'
| |-FieldDecl 0x2022a7c9a68 <line:109:5, col:11> col:11 obuf 'char *'
| |-FieldDecl 0x2022a7c9ad8 <line:110:5, col:9> col:9 obuf_len 'int'
| `-FieldDecl 0x2022a7c9b48 <line:111:5, col:9> col:9 obuf_off 'int'
|-TypedefDecl 0x2022a7c9bf8 <line:91:1, line:112:3> col:3 BIO_F_BUFFER_CTX 'struct bio_f_buffer_ctx_struct':'struct bio_f_buffer_ctx_struct'
| `-ElaboratedType 0x2022a7c9ba0 'struct bio_f_buffer_ctx_struct' sugar
|   `-RecordType 0x2022a7c9800 'struct bio_f_buffer_ctx_struct'
|     `-Record 0x2022a7c9760 'bio_f_buffer_ctx_struct'
|-RecordDecl 0x2022a7c9c68 <line:114:1, line:132:1> line:114:8 invalid struct bio_st definition
| |-FieldDecl 0x2022a7c9d38 <line:115:5, col:23> col:23 invalid method 'const int *'
| |-FieldDecl 0x2022a7c52b0 <line:117:5, col:74> col:12 callback 'long (*)(struct bio_st *, int, const char *, int, long, long)'
| |-FieldDecl 0x2022a7c5320 <line:118:5, col:11> col:11 cb_arg 'char *'
| |-FieldDecl 0x2022a7c5390 <line:119:5, col:9> col:9 init 'int'
| |-FieldDecl 0x2022a7c5400 <line:120:5, col:9> col:9 shutdown 'int'
| |-FieldDecl 0x2022a7c5470 <line:121:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x2022a7c54e0 <line:122:5, col:9> col:9 retry_reason 'int'
| |-FieldDecl 0x2022a7c5550 <line:123:5, col:9> col:9 num 'int'
| |-FieldDecl 0x2022a7c55c0 <line:124:5, col:11> col:11 ptr 'void *'
| |-FieldDecl 0x2022a7c5640 <line:125:5, col:20> col:20 next_bio 'struct bio_st *'
| |-FieldDecl 0x2022a7c56c0 <line:126:5, col:20> col:20 prev_bio 'struct bio_st *'
| |-FieldDecl 0x2022a7c5730 <line:127:5, col:9> col:9 references 'int'
| |-FieldDecl 0x2022a7c57a0 <line:128:5, col:14> col:14 invalid num_read 'int'
| |-FieldDecl 0x2022a7c5810 <line:129:5, col:14> col:14 invalid num_write 'int'
| |-FieldDecl 0x2022a7c5880 <line:130:5, col:20> col:20 invalid ex_data 'int'
| `-FieldDecl 0x2022a7c58f0 <line:131:5, col:20> col:20 invalid lock 'int *'
|-VarDecl 0x2022a7c5960 <line:139:1, col:23> col:23 invalid bio_lookup_lock 'int *' extern
|-FunctionDecl 0x2022a7c5bf0 <line:141:1, col:58> col:5 invalid BIO_ADDR_make 'int (int *, const struct sockaddr *)'
| |-ParmVarDecl 0x2022a7c59e0 <col:19, col:29> col:29 invalid ap 'int *'
| `-ParmVarDecl 0x2022a7c5ad0 <col:33, col:56> col:56 sa 'const struct sockaddr *'
|-FunctionDecl 0x2022a7c5dc0 <line:142:1, col:60> col:24 invalid BIO_ADDR_sockaddr 'const struct sockaddr *(const int *)'
| `-ParmVarDecl 0x2022a7c5cb8 <col:42, col:58> col:58 invalid ap 'const int *'
|-FunctionDecl 0x2022a7c5fc0 <line:143:1, col:56> col:18 invalid BIO_ADDR_sockaddr_noconst 'struct sockaddr *(int *)'
| `-ParmVarDecl 0x2022a7c5e80 <col:44, col:54> col:54 invalid ap 'int *'
|-FunctionDecl 0x2022a7c6150 <line:144:1, col:52> col:11 invalid BIO_ADDR_sockaddr_size 'int (const int *)'
| `-ParmVarDecl 0x2022a7c6080 <col:34, col:50> col:50 invalid ap 'const int *'
|-FunctionDecl 0x2022a7c72c8 <line:145:1, col:61> col:11 invalid BIO_ADDRINFO_sockaddr_size 'int (const int *)'
| `-ParmVarDecl 0x2022a7c7230 <col:38, col:58> col:58 invalid bai 'const int *'
|-FunctionDecl 0x2022a7c7430 <line:146:1, col:69> col:24 invalid BIO_ADDRINFO_sockaddr 'const struct sockaddr *(const int *)'
| `-ParmVarDecl 0x2022a7c7388 <col:46, col:66> col:66 invalid bai 'const int *'
|-VarDecl 0x2022a7c74f0 <line:149:1, col:23> col:23 invalid bio_type_lock 'int *' extern
|-FunctionDecl 0x2022a7c75f0 <line:151:1, col:31> col:6 bio_sock_cleanup_int 'void (void)'
|-RecordDecl 0x2022a7c76a8 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:16:9, line:34:1> line:16:16 invalid struct bio_accept_st definition
| |-FieldDecl 0x2022a7c7778 <line:17:5, col:9> col:9 referenced state 'int'
| |-FieldDecl 0x2022a7c77e8 <line:18:5, col:9> col:9 referenced accept_family 'int'
| |-FieldDecl 0x2022a7c7858 <line:19:5, col:9> col:9 referenced bind_mode 'int'
| |-FieldDecl 0x2022a7c78c8 <line:20:5, col:9> col:9 referenced accepted_mode 'int'
| |-FieldDecl 0x2022a7c7938 <line:21:5, col:11> col:11 referenced param_addr 'char *'
| |-FieldDecl 0x2022a7c79a8 <line:22:5, col:11> col:11 referenced param_serv 'char *'
| |-FieldDecl 0x2022a7c7a18 <line:24:5, col:9> col:9 referenced accept_sock 'int'
| |-FieldDecl 0x2022a7c7a88 <line:26:5, col:19> col:19 invalid addr_first 'int *'
| |-FieldDecl 0x2022a7c7af8 <line:27:5, col:25> col:25 invalid addr_iter 'const int *'
| |-FieldDecl 0x2022a7c7b68 <line:28:5, col:14> col:14 invalid cache_accepting_addr 'int'
| |-FieldDecl 0x2022a7c7bd8 <line:29:5, col:11> col:11 referenced cache_accepting_name 'char *'
| |-FieldDecl 0x2022a7c7c48 <col:5, col:34> col:34 referenced cache_accepting_serv 'char *'
| |-FieldDecl 0x2022a7c7cb8 <line:30:5, col:14> col:14 invalid cache_peer_addr 'int'
| |-FieldDecl 0x2022a7c7d28 <line:31:5, col:11> col:11 referenced cache_peer_name 'char *'
| |-FieldDecl 0x2022a7c7d98 <col:5, col:29> col:29 referenced cache_peer_serv 'char *'
| `-FieldDecl 0x2022a7c7e08 <line:33:5, col:10> col:10 invalid bio_chain 'int *'
|-TypedefDecl 0x2022a7c7eb8 <line:16:1, line:34:3> col:3 referenced BIO_ACCEPT 'struct bio_accept_st':'struct bio_accept_st'
| `-ElaboratedType 0x2022a7c7e60 'struct bio_accept_st' sugar
|   `-RecordType 0x2022a7c7740 'struct bio_accept_st'
|     `-Record 0x2022a7c76a8 'bio_accept_st'
|-FunctionDecl 0x2022a7c8130 <line:36:1, col:55> col:12 invalid acpt_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x2022a7c7f40 <col:23, col:28> col:28 invalid h 'int *'
| |-ParmVarDecl 0x2022a7c7fc0 <col:31, col:43> col:43 buf 'const char *'
| `-ParmVarDecl 0x2022a7c8040 <col:48, col:52> col:52 num 'int'
|-FunctionDecl 0x2022a7d14a0 <line:37:1, col:49> col:12 invalid acpt_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x2022a7d12b0 <col:22, col:27> col:27 invalid h 'int *'
| |-ParmVarDecl 0x2022a7d1330 <col:30, col:36> col:36 buf 'char *'
| `-ParmVarDecl 0x2022a7d13b0 <col:41, col:45> col:45 size 'int'
|-FunctionDecl 0x2022a7d16d0 <line:38:1, col:45> col:12 invalid acpt_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x2022a7d1570 <col:22, col:27> col:27 invalid h 'int *'
| `-ParmVarDecl 0x2022a7d15f0 <col:30, col:42> col:42 str 'const char *'
|-FunctionDecl 0x2022a7d1a10 <line:39:1, col:61> col:13 invalid acpt_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x2022a7d1798 <col:23, col:28> col:28 invalid h 'int *'
| |-ParmVarDecl 0x2022a7d1818 <col:31, col:35> col:35 cmd 'int'
| |-ParmVarDecl 0x2022a7d1898 <col:40, col:45> col:45 arg1 'long'
| `-ParmVarDecl 0x2022a7d1918 <col:51, col:57> col:57 arg2 'void *'
|-FunctionDecl 0x2022a7d1b80 <line:40:1, col:27> col:12 invalid acpt_new 'int (int *)' static
| `-ParmVarDecl 0x2022a7d1ae8 <col:21, col:26> col:26 invalid h 'int *'
|-FunctionDecl 0x2022a7d1cd8 <line:41:1, col:31> col:12 invalid acpt_free 'int (int *)' static
| `-ParmVarDecl 0x2022a7d1c40 <col:22, col:27> col:27 invalid data 'int *'
|-FunctionDecl 0x2022a7d1fa0 <line:42:1, col:44> col:12 invalid acpt_state 'int (int *, BIO_ACCEPT *)' static
| |-ParmVarDecl 0x2022a7d1d98 <col:23, col:28> col:28 invalid b 'int *'
| `-ParmVarDecl 0x2022a7d1e88 <col:31, col:43> col:43 c 'BIO_ACCEPT *'
|-FunctionDecl 0x2022a7d2128 <line:43:1, col:40> col:13 invalid acpt_close_socket 'void (int *)' static
| `-ParmVarDecl 0x2022a7d2068 <col:31, col:36> col:36 invalid data 'int *'
|-FunctionDecl 0x2022a7cf2b0 <line:44:1, col:39> col:20 used BIO_ACCEPT_new 'BIO_ACCEPT *(void)' static
|-FunctionDecl 0x2022a7cf488 <line:45:1, col:42> col:13 used BIO_ACCEPT_free 'void (BIO_ACCEPT *)' static
| `-ParmVarDecl 0x2022a7cf378 <col:29, col:41> col:41 a 'BIO_ACCEPT *'
|-VarDecl 0x2022a7cf560 <line:54:1, col:25> col:25 invalid methods_acceptp 'const int' static
|-FunctionDecl 0x2022a7cf810 <line:67:1, line:70:1> line:67:19 invalid BIO_s_accept 'const int *(void)'
| `-CompoundStmt 0x2022a7cf8c8 <line:68:1, line:70:1>
|-FunctionDecl 0x2022a7cf988 <line:72:1, line:85:1> line:72:12 invalid acpt_new 'int (int *)' static
| |-ParmVarDecl 0x2022a7cf8f0 <col:21, col:26> col:26 invalid bi 'int *'
| `-CompoundStmt 0x2022a7cff28 <line:73:1, line:85:1>
|   |-DeclStmt 0x2022a7cfac0 <line:74:5, col:19>
|   | `-VarDecl 0x2022a7cfa58 <col:5, col:17> col:17 used ba 'BIO_ACCEPT *'
|   |-IfStmt 0x2022a7cfd68 <line:79:5, line:80:18>
|   | |-BinaryOperator 0x2022a7cfcf0 <line:79:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ParenExpr 0x2022a7cfc30 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:79:9, col:31> 'BIO_ACCEPT *'
|   | | | `-BinaryOperator 0x2022a7cfc10 <col:10, col:30> 'BIO_ACCEPT *' '='
|   | | |   |-DeclRefExpr 0x2022a7cfb28 <col:10> 'BIO_ACCEPT *' lvalue Var 0x2022a7cfa58 'ba' 'BIO_ACCEPT *'
|   | | |   `-CallExpr 0x2022a7cfbf0 <col:15, col:30> 'BIO_ACCEPT *'
|   | | |     `-ImplicitCastExpr 0x2022a7cfbd8 <col:15> 'BIO_ACCEPT *(*)(void)' <FunctionToPointerDecay>
|   | | |       `-DeclRefExpr 0x2022a7cfb60 <col:15> 'BIO_ACCEPT *(void)' Function 0x2022a7cf2b0 'BIO_ACCEPT_new' 'BIO_ACCEPT *(void)'
|   | | `-ImplicitCastExpr 0x2022a7cfcd8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_ACCEPT *' <BitCast>
|   | |   `-ParenExpr 0x2022a7cfcb8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2022a7cfc90 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2022a7cfc50 <col:26> 'int' 0
|   | `-ReturnStmt 0x2022a7cfd58 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:80:9, col:18>
|   |   `-ParenExpr 0x2022a7cfd38 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x2022a7cfd10 <col:17> 'int' 0
|   |-BinaryOperator 0x2022a7cfe88 <line:82:5, line:47:42> 'int' '='
|   | |-MemberExpr 0x2022a7cfe30 <line:82:5, col:9> 'int' lvalue ->state 0x2022a7c7778
|   | | `-ImplicitCastExpr 0x2022a7cfe18 <col:5> 'BIO_ACCEPT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2022a7cfdf8 <col:5> 'BIO_ACCEPT *' lvalue Var 0x2022a7cfa58 'ba' 'BIO_ACCEPT *'
|   | `-IntegerLiteral 0x2022a7cfe60 <line:47:42> 'int' 1
|   `-ReturnStmt 0x2022a7cff18 <line:84:5, col:14>
|     `-ParenExpr 0x2022a7cfef8 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x2022a7cfed0 <col:13> 'int' 1
|-FunctionDecl 0x2022a7cfff0 prev 0x2022a7cf2b0 <line:87:1, line:96:1> line:87:20 used BIO_ACCEPT_new 'BIO_ACCEPT *(void)' static
| `-CompoundStmt 0x2022a7cd6c0 <line:88:1, line:96:1>
|   |-DeclStmt 0x2022a7d0108 <line:89:5, col:20>
|   | `-VarDecl 0x2022a7d00a0 <col:5, col:17> col:17 used ret 'BIO_ACCEPT *'
|   |-IfStmt 0x2022a7cd570 <line:91:5, line:92:21>
|   | |-BinaryOperator 0x2022a7cd480 <line:91:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ParenExpr 0x2022a7cd3c0 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:91:9, col:44> 'BIO_ACCEPT *'
|   | | | `-BinaryOperator 0x2022a7cd3a0 <col:10, col:43> 'BIO_ACCEPT *' '='
|   | | |   |-DeclRefExpr 0x2022a7d0120 <col:10> 'BIO_ACCEPT *' lvalue Var 0x2022a7d00a0 'ret' 'BIO_ACCEPT *'
|   | | |   `-ImplicitCastExpr 0x2022a7cd388 <col:16, col:43> 'BIO_ACCEPT *' <IntegralToPointer>
|   | | |     `-CallExpr 0x2022a7cd360 <col:16, col:43> 'int'
|   | | |       |-ImplicitCastExpr 0x2022a7cd348 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x2022a7cd270 <col:16> 'int ()' Function 0x2022a7d01b0 'OPENSSL_zalloc' 'int ()'
|   | | |       `-UnaryExprOrTypeTraitExpr 0x2022a7cd300 <col:31, col:42> 'unsigned long long' sizeof
|   | | |         `-ParenExpr 0x2022a7cd2e0 <col:37, col:42> 'BIO_ACCEPT':'struct bio_accept_st' lvalue
|   | | |           `-UnaryOperator 0x2022a7cd2c8 <col:38, col:39> 'BIO_ACCEPT':'struct bio_accept_st' lvalue prefix '*' cannot overflow
|   | | |             `-ImplicitCastExpr 0x2022a7cd2b0 <col:39> 'BIO_ACCEPT *' <LValueToRValue>
|   | | |               `-DeclRefExpr 0x2022a7cd290 <col:39> 'BIO_ACCEPT *' lvalue Var 0x2022a7d00a0 'ret' 'BIO_ACCEPT *' non_odr_use_unevaluated
|   | | `-ImplicitCastExpr 0x2022a7cd468 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_ACCEPT *' <BitCast>
|   | |   `-ParenExpr 0x2022a7cd448 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2022a7cd420 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2022a7cd3e0 <col:26> 'int' 0
|   | `-ReturnStmt 0x2022a7cd560 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:92:9, col:21>
|   |   `-ImplicitCastExpr 0x2022a7cd548 <col:16, col:21> 'BIO_ACCEPT *' <NullToPointer>
|   |     `-ParenExpr 0x2022a7cd528 <col:16, col:21> 'void *'
|   |       `-ParenExpr 0x2022a7cd508 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x2022a7cd4e0 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x2022a7cd4a0 <col:26> 'int' 0
|   `-ReturnStmt 0x2022a7cd6b0 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:95:5, col:16>
|     `-ImplicitCastExpr 0x2022a7cd698 <col:12, col:16> 'BIO_ACCEPT *' <LValueToRValue>
|       `-ParenExpr 0x2022a7cd678 <col:12, col:16> 'BIO_ACCEPT *' lvalue
|         `-DeclRefExpr 0x2022a7cd658 <col:13> 'BIO_ACCEPT *' lvalue Var 0x2022a7d00a0 'ret' 'BIO_ACCEPT *'
|-FunctionDecl 0x2022a7cd7a0 prev 0x2022a7cf488 <line:98:1, line:112:1> line:98:13 used BIO_ACCEPT_free 'void (BIO_ACCEPT *)' static
| |-ParmVarDecl 0x2022a7cd6f8 <col:29, col:41> col:41 used a 'BIO_ACCEPT *'
| `-CompoundStmt 0x2022a7ce2d8 <line:99:1, line:112:1>
|   |-IfStmt 0x2022a7cd950 <line:100:5, line:101:9>
|   | |-BinaryOperator 0x2022a7cd920 <line:100:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x2022a7cd8f0 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:100:9> 'BIO_ACCEPT *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2022a7cd848 <col:9> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cd6f8 'a' 'BIO_ACCEPT *'
|   | | `-ImplicitCastExpr 0x2022a7cd908 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_ACCEPT *' <BitCast>
|   | |   `-ParenExpr 0x2022a7cd8d0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2022a7cd8a8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2022a7cd868 <col:26> 'int' 0
|   | `-ReturnStmt 0x2022a7cd940 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:101:9>
|   |-CallExpr 0x2022a7cdaf8 <line:103:5, col:31> 'int'
|   | |-ImplicitCastExpr 0x2022a7cdae0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2022a7cda58 <col:5> 'int ()' Function 0x2022a7cd990 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x2022a7cdb20 <col:18, col:21> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x2022a7cdab0 <col:18, col:21> 'char *' lvalue ->param_addr 0x2022a7c7938
|   |     `-ImplicitCastExpr 0x2022a7cda98 <col:18> 'BIO_ACCEPT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2022a7cda78 <col:18> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cd6f8 'a' 'BIO_ACCEPT *'
|   |-CallExpr 0x2022a7cdbd8 <line:104:5, col:31> 'int'
|   | |-ImplicitCastExpr 0x2022a7cdbc0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2022a7cdb38 <col:5> 'int ()' Function 0x2022a7cd990 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x2022a7cdc00 <col:18, col:21> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x2022a7cdb90 <col:18, col:21> 'char *' lvalue ->param_serv 0x2022a7c79a8
|   |     `-ImplicitCastExpr 0x2022a7cdb78 <col:18> 'BIO_ACCEPT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2022a7cdb58 <col:18> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cd6f8 'a' 'BIO_ACCEPT *'
|   |-CallExpr 0x2022a7cde00 <line:106:5, col:41> 'int'
|   | |-ImplicitCastExpr 0x2022a7cdde8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2022a7cdd60 <col:5> 'int ()' Function 0x2022a7cd990 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x2022a7cde28 <col:18, col:21> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x2022a7cddb8 <col:18, col:21> 'char *' lvalue ->cache_accepting_name 0x2022a7c7bd8
|   |     `-ImplicitCastExpr 0x2022a7cdda0 <col:18> 'BIO_ACCEPT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2022a7cdd80 <col:18> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cd6f8 'a' 'BIO_ACCEPT *'
|   |-CallExpr 0x2022a7cdee0 <line:107:5, col:41> 'int'
|   | |-ImplicitCastExpr 0x2022a7cdec8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2022a7cde40 <col:5> 'int ()' Function 0x2022a7cd990 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x2022a7cdf08 <col:18, col:21> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x2022a7cde98 <col:18, col:21> 'char *' lvalue ->cache_accepting_serv 0x2022a7c7c48
|   |     `-ImplicitCastExpr 0x2022a7cde80 <col:18> 'BIO_ACCEPT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2022a7cde60 <col:18> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cd6f8 'a' 'BIO_ACCEPT *'
|   |-CallExpr 0x2022a7cdfc0 <line:108:5, col:36> 'int'
|   | |-ImplicitCastExpr 0x2022a7cdfa8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2022a7cdf20 <col:5> 'int ()' Function 0x2022a7cd990 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x2022a7cdfe8 <col:18, col:21> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x2022a7cdf78 <col:18, col:21> 'char *' lvalue ->cache_peer_name 0x2022a7c7d28
|   |     `-ImplicitCastExpr 0x2022a7cdf60 <col:18> 'BIO_ACCEPT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2022a7cdf40 <col:18> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cd6f8 'a' 'BIO_ACCEPT *'
|   |-CallExpr 0x2022a7ce0a0 <line:109:5, col:36> 'int'
|   | |-ImplicitCastExpr 0x2022a7ce088 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2022a7ce000 <col:5> 'int ()' Function 0x2022a7cd990 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x2022a7ce0c8 <col:18, col:21> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x2022a7ce058 <col:18, col:21> 'char *' lvalue ->cache_peer_serv 0x2022a7c7d98
|   |     `-ImplicitCastExpr 0x2022a7ce040 <col:18> 'BIO_ACCEPT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2022a7ce020 <col:18> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cd6f8 'a' 'BIO_ACCEPT *'
|   `-CallExpr 0x2022a7ce298 <line:111:5, col:19> 'int'
|     |-ImplicitCastExpr 0x2022a7ce280 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x2022a7ce228 <col:5> 'int ()' Function 0x2022a7cd990 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x2022a7ce2c0 <col:18> 'BIO_ACCEPT *' <LValueToRValue>
|       `-DeclRefExpr 0x2022a7ce248 <col:18> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cd6f8 'a' 'BIO_ACCEPT *'
|-FunctionDecl 0x2022a7ce3d0 <line:114:1, line:125:1> line:114:13 invalid acpt_close_socket 'void (int *)' static
| |-ParmVarDecl 0x2022a7ce340 <col:31, col:36> col:36 invalid bio 'int *'
| `-CompoundStmt 0x2022a7cea48 <line:115:1, line:125:1>
|   |-DeclStmt 0x2022a7ce508 <line:116:5, col:18>
|   | `-VarDecl 0x2022a7ce4a0 <col:5, col:17> col:17 used c 'BIO_ACCEPT *'
|   `-IfStmt 0x2022a7cea30 <line:119:5, line:124:5>
|     |-OpaqueValueExpr 0x2022a7cea18 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x2022a7ce9f8 <line:119:48, line:124:5>
|       |-CallExpr 0x2022a7ce778 <line:120:9, col:35> 'int'
|       | |-ImplicitCastExpr 0x2022a7ce760 <col:9> 'int (*)()' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x2022a7ce6b0 <col:9> 'int ()' Function 0x2022a7ce5e8 'shutdown' 'int ()'
|       | |-ImplicitCastExpr 0x2022a7ce7a8 <col:18, col:21> 'int' <LValueToRValue>
|       | | `-MemberExpr 0x2022a7ce708 <col:18, col:21> 'int' lvalue ->accept_sock 0x2022a7c7a18
|       | |   `-ImplicitCastExpr 0x2022a7ce6f0 <col:18> 'BIO_ACCEPT *' <LValueToRValue>
|       | |     `-DeclRefExpr 0x2022a7ce6d0 <col:18> 'BIO_ACCEPT *' lvalue Var 0x2022a7ce4a0 'c' 'BIO_ACCEPT *'
|       | `-IntegerLiteral 0x2022a7ce738 <col:34> 'int' 2
|       `-CallExpr 0x2022a7ce950 <line:121:9, col:35> 'int'
|         |-ImplicitCastExpr 0x2022a7ce938 <col:9> 'int (*)()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x2022a7ce8b0 <col:9> 'int ()' Function 0x2022a7ce7e8 'closesocket' 'int ()'
|         `-ImplicitCastExpr 0x2022a7ce978 <col:21, col:24> 'int' <LValueToRValue>
|           `-MemberExpr 0x2022a7ce908 <col:21, col:24> 'int' lvalue ->accept_sock 0x2022a7c7a18
|             `-ImplicitCastExpr 0x2022a7ce8f0 <col:21> 'BIO_ACCEPT *' <LValueToRValue>
|               `-DeclRefExpr 0x2022a7ce8d0 <col:21> 'BIO_ACCEPT *' lvalue Var 0x2022a7ce4a0 'c' 'BIO_ACCEPT *'
|-FunctionDecl 0x2022a7ceb18 <line:127:1, line:143:1> line:127:12 invalid acpt_free 'int (int *)' static
| |-ParmVarDecl 0x2022a7cea80 <col:22, col:27> col:27 invalid a 'int *'
| `-CompoundStmt 0x2022a7cf018 <line:128:1, line:143:1>
|   |-DeclStmt 0x2022a7cec50 <line:129:5, col:21>
|   | `-VarDecl 0x2022a7cebe8 <col:5, col:17> col:17 used data 'BIO_ACCEPT *'
|   |-IfStmt 0x2022a7ced60 <line:131:5, line:132:18>
|   | |-OpaqueValueExpr 0x2022a7ced48 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2022a7ced38 <col:9, col:18>
|   |   `-ParenExpr 0x2022a7ced18 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x2022a7cecf0 <col:17> 'int' 0
|   |-IfStmt 0x2022a7cefa8 <line:135:5, line:141:5>
|   | |-OpaqueValueExpr 0x2022a7cef90 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2022a7cef78 <line:135:22, line:141:5>
|   |   `-CallExpr 0x2022a7cee60 <line:137:9, col:29> 'void'
|   |     |-ImplicitCastExpr 0x2022a7cee48 <col:9> 'void (*)(BIO_ACCEPT *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2022a7cedb0 <col:9> 'void (BIO_ACCEPT *)' Function 0x2022a7cd7a0 'BIO_ACCEPT_free' 'void (BIO_ACCEPT *)'
|   |     `-ImplicitCastExpr 0x2022a7cee88 <col:25> 'BIO_ACCEPT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2022a7cedd0 <col:25> 'BIO_ACCEPT *' lvalue Var 0x2022a7cebe8 'data' 'BIO_ACCEPT *'
|   `-ReturnStmt 0x2022a7cf008 <line:142:5, col:14>
|     `-ParenExpr 0x2022a7cefe8 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x2022a7cefc0 <col:13> 'int' 1
|-FunctionDecl 0x2022a7cf178 <line:145:1, line:350:1> line:145:12 invalid acpt_state 'int (int *, BIO_ACCEPT *)' static
| |-ParmVarDecl 0x2022a7cf060 <col:23, col:28> col:28 invalid b 'int *'
| |-ParmVarDecl 0x2022a7cf0d8 <col:31, col:43> col:43 used c 'BIO_ACCEPT *'
| `-CompoundStmt 0x2022a7d8130 <line:146:1, line:350:1>
|   |-DeclStmt 0x2022a7d0480 <line:148:5, col:25>
|   | |-VarDecl 0x2022a7d0300 <col:5, col:14> col:9 used s 'int' cinit
|   | | `-UnaryOperator 0x2022a7d0390 <col:13, col:14> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x2022a7d0368 <col:14> 'int' 1
|   | `-VarDecl 0x2022a7d03c0 <col:5, col:24> col:17 used ret 'int' cinit
|   |   `-UnaryOperator 0x2022a7d0450 <col:23, col:24> 'int' prefix '-'
|   |     `-IntegerLiteral 0x2022a7d0428 <col:24> 'int' 1
|   |-ForStmt 0x2022a7d7e60 <line:150:5, line:341:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x2022a7d7e48 <line:150:14, line:341:5>
|   |   `-SwitchStmt 0x2022a7d0530 <line:151:9, line:340:9>
|   |     |-ImplicitCastExpr 0x2022a7d0518 <line:151:17, col:20> 'int' <LValueToRValue>
|   |     | `-MemberExpr 0x2022a7d04e8 <col:17, col:20> 'int' lvalue ->state 0x2022a7c7778
|   |     |   `-ImplicitCastExpr 0x2022a7d04d0 <col:17> 'BIO_ACCEPT *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x2022a7d0498 <col:17> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |     `-CompoundStmt 0x2022a7d7cd8 <col:27, line:340:9>
|   |       |-CaseStmt 0x2022a7d0590 <line:152:9, line:159:13>
|   |       | |-ConstantExpr 0x2022a7d0578 <line:47:42> 'int'
|   |       | | `-IntegerLiteral 0x2022a7d0550 <col:42> 'int' 1
|   |       | `-IfStmt 0x2022a7d0d40 <line:153:13, line:159:13>
|   |       |   |-BinaryOperator 0x2022a7d0838 <line:153:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '&&'
|   |       |   | |-BinaryOperator 0x2022a7d06d8 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:153:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |       |   | | |-ImplicitCastExpr 0x2022a7d06a8 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:153:17, col:20> 'char *' <LValueToRValue>
|   |       |   | | | `-MemberExpr 0x2022a7d05f0 <col:17, col:20> 'char *' lvalue ->param_addr 0x2022a7c7938
|   |       |   | | |   `-ImplicitCastExpr 0x2022a7d05d8 <col:17> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |   | | |     `-DeclRefExpr 0x2022a7d05b8 <col:17> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       |   | | `-ImplicitCastExpr 0x2022a7d06c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |       |   | |   `-ParenExpr 0x2022a7d0688 <col:17, col:27> 'void *'
|   |       |   | |     `-CStyleCastExpr 0x2022a7d0660 <col:18, col:26> 'void *' <NullToPointer>
|   |       |   | |       `-IntegerLiteral 0x2022a7d0620 <col:26> 'int' 0
|   |       |   | `-BinaryOperator 0x2022a7d0818 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:153:42, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |       |   |   |-ImplicitCastExpr 0x2022a7d07e8 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:153:42, col:45> 'char *' <LValueToRValue>
|   |       |   |   | `-MemberExpr 0x2022a7d0730 <col:42, col:45> 'char *' lvalue ->param_serv 0x2022a7c79a8
|   |       |   |   |   `-ImplicitCastExpr 0x2022a7d0718 <col:42> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |   |   |     `-DeclRefExpr 0x2022a7d06f8 <col:42> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       |   |   `-ImplicitCastExpr 0x2022a7d0800 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |       |   |     `-ParenExpr 0x2022a7d07c8 <col:17, col:27> 'void *'
|   |       |   |       `-CStyleCastExpr 0x2022a7d07a0 <col:18, col:26> 'void *' <NullToPointer>
|   |       |   |         `-IntegerLiteral 0x2022a7d0760 <col:26> 'int' 0
|   |       |   `-CompoundStmt 0x2022a7d0d20 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:153:65, line:159:13>
|   |       |     |-CallExpr 0x2022a7d0c10 <line:155:17, line:157:62> 'int'
|   |       |     | |-ImplicitCastExpr 0x2022a7d0bf8 <line:155:17> 'int (*)()' <FunctionToPointerDecay>
|   |       |     | | `-DeclRefExpr 0x2022a7d0a58 <col:17> 'int ()' Function 0x2022a7d0990 'ERR_add_error_data' 'int ()'
|   |       |     | |-IntegerLiteral 0x2022a7d0a78 <col:36> 'int' 4
|   |       |     | |-ImplicitCastExpr 0x2022a7d0c58 <line:156:36> 'char *' <ArrayToPointerDecay>
|   |       |     | | `-StringLiteral 0x2022a7d0ad8 <col:36> 'char [10]' lvalue "hostname="
|   |       |     | |-ImplicitCastExpr 0x2022a7d0c70 <col:49, col:52> 'char *' <LValueToRValue>
|   |       |     | | `-MemberExpr 0x2022a7d0b38 <col:49, col:52> 'char *' lvalue ->param_addr 0x2022a7c7938
|   |       |     | |   `-ImplicitCastExpr 0x2022a7d0b20 <col:49> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |     | |     `-DeclRefExpr 0x2022a7d0b00 <col:49> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       |     | |-ImplicitCastExpr 0x2022a7d0c88 <line:157:36> 'char *' <ArrayToPointerDecay>
|   |       |     | | `-StringLiteral 0x2022a7d0b68 <col:36> 'char [10]' lvalue " service="
|   |       |     | `-ImplicitCastExpr 0x2022a7d0ca0 <col:49, col:52> 'char *' <LValueToRValue>
|   |       |     |   `-MemberExpr 0x2022a7d0bc8 <col:49, col:52> 'char *' lvalue ->param_serv 0x2022a7c79a8
|   |       |     |     `-ImplicitCastExpr 0x2022a7d0bb0 <col:49> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |     |       `-DeclRefExpr 0x2022a7d0b90 <col:49> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       |     `-GotoStmt 0x2022a7d0d08 <line:158:17, col:22> 'exit_loop' 0x2022a7d0cb8
|   |       |-CallExpr 0x2022a7d0df8 <line:165:13, col:49> 'int'
|   |       | |-ImplicitCastExpr 0x2022a7d0de0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x2022a7d0d58 <col:13> 'int ()' Function 0x2022a7cd990 'OPENSSL_free' 'int ()'
|   |       | `-ImplicitCastExpr 0x2022a7d0e20 <col:26, col:29> 'char *' <LValueToRValue>
|   |       |   `-MemberExpr 0x2022a7d0db0 <col:26, col:29> 'char *' lvalue ->cache_accepting_name 0x2022a7c7bd8
|   |       |     `-ImplicitCastExpr 0x2022a7d0d98 <col:26> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x2022a7d0d78 <col:26> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       |-BinaryOperator 0x2022a7d0f40 <line:166:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'char *' '='
|   |       | |-MemberExpr 0x2022a7d0e70 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:166:13, col:16> 'char *' lvalue ->cache_accepting_name 0x2022a7c7bd8
|   |       | | `-ImplicitCastExpr 0x2022a7d0e58 <col:13> 'BIO_ACCEPT *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x2022a7d0e38 <col:13> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       | `-ImplicitCastExpr 0x2022a7d0f28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |       |   `-ParenExpr 0x2022a7d0f08 <col:17, col:27> 'void *'
|   |       |     `-CStyleCastExpr 0x2022a7d0ee0 <col:18, col:26> 'void *' <NullToPointer>
|   |       |       `-IntegerLiteral 0x2022a7d0ea0 <col:26> 'int' 0
|   |       |-CallExpr 0x2022a7d1000 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:167:13, col:49> 'int'
|   |       | |-ImplicitCastExpr 0x2022a7d0fe8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x2022a7d0f60 <col:13> 'int ()' Function 0x2022a7cd990 'OPENSSL_free' 'int ()'
|   |       | `-ImplicitCastExpr 0x2022a7d1028 <col:26, col:29> 'char *' <LValueToRValue>
|   |       |   `-MemberExpr 0x2022a7d0fb8 <col:26, col:29> 'char *' lvalue ->cache_accepting_serv 0x2022a7c7c48
|   |       |     `-ImplicitCastExpr 0x2022a7d0fa0 <col:26> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x2022a7d0f80 <col:26> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       |-BinaryOperator 0x2022a7d1148 <line:168:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'char *' '='
|   |       | |-MemberExpr 0x2022a7d1078 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:168:13, col:16> 'char *' lvalue ->cache_accepting_serv 0x2022a7c7c48
|   |       | | `-ImplicitCastExpr 0x2022a7d1060 <col:13> 'BIO_ACCEPT *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x2022a7d1040 <col:13> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       | `-ImplicitCastExpr 0x2022a7d1130 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |       |   `-ParenExpr 0x2022a7d1110 <col:17, col:27> 'void *'
|   |       |     `-CStyleCastExpr 0x2022a7d10e8 <col:18, col:26> 'void *' <NullToPointer>
|   |       |       `-IntegerLiteral 0x2022a7d10a8 <col:26> 'int' 0
|   |       |-CallExpr 0x2022a7d1208 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:169:13, col:44> 'int'
|   |       | |-ImplicitCastExpr 0x2022a7d11f0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x2022a7d1168 <col:13> 'int ()' Function 0x2022a7cd990 'OPENSSL_free' 'int ()'
|   |       | `-ImplicitCastExpr 0x2022a7d1230 <col:26, col:29> 'char *' <LValueToRValue>
|   |       |   `-MemberExpr 0x2022a7d11c0 <col:26, col:29> 'char *' lvalue ->cache_peer_name 0x2022a7c7d28
|   |       |     `-ImplicitCastExpr 0x2022a7d11a8 <col:26> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x2022a7d1188 <col:26> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       |-BinaryOperator 0x2022a7ca310 <line:170:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'char *' '='
|   |       | |-MemberExpr 0x2022a7ca240 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:170:13, col:16> 'char *' lvalue ->cache_peer_name 0x2022a7c7d28
|   |       | | `-ImplicitCastExpr 0x2022a7d1268 <col:13> 'BIO_ACCEPT *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x2022a7d1248 <col:13> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       | `-ImplicitCastExpr 0x2022a7ca2f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |       |   `-ParenExpr 0x2022a7ca2d8 <col:17, col:27> 'void *'
|   |       |     `-CStyleCastExpr 0x2022a7ca2b0 <col:18, col:26> 'void *' <NullToPointer>
|   |       |       `-IntegerLiteral 0x2022a7ca270 <col:26> 'int' 0
|   |       |-CallExpr 0x2022a7ca3d0 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:171:13, col:44> 'int'
|   |       | |-ImplicitCastExpr 0x2022a7ca3b8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x2022a7ca330 <col:13> 'int ()' Function 0x2022a7cd990 'OPENSSL_free' 'int ()'
|   |       | `-ImplicitCastExpr 0x2022a7ca3f8 <col:26, col:29> 'char *' <LValueToRValue>
|   |       |   `-MemberExpr 0x2022a7ca388 <col:26, col:29> 'char *' lvalue ->cache_peer_serv 0x2022a7c7d98
|   |       |     `-ImplicitCastExpr 0x2022a7ca370 <col:26> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x2022a7ca350 <col:26> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       |-BinaryOperator 0x2022a7ca518 <line:172:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'char *' '='
|   |       | |-MemberExpr 0x2022a7ca448 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:172:13, col:16> 'char *' lvalue ->cache_peer_serv 0x2022a7c7d98
|   |       | | `-ImplicitCastExpr 0x2022a7ca430 <col:13> 'BIO_ACCEPT *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x2022a7ca410 <col:13> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       | `-ImplicitCastExpr 0x2022a7ca500 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |       |   `-ParenExpr 0x2022a7ca4e0 <col:17, col:27> 'void *'
|   |       |     `-CStyleCastExpr 0x2022a7ca4b8 <col:18, col:26> 'void *' <NullToPointer>
|   |       |       `-IntegerLiteral 0x2022a7ca478 <col:26> 'int' 0
|   |       |-BinaryOperator 0x2022a7ca5c8 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:174:13, line:48:42> 'int' '='
|   |       | |-MemberExpr 0x2022a7ca570 <line:174:13, col:16> 'int' lvalue ->state 0x2022a7c7778
|   |       | | `-ImplicitCastExpr 0x2022a7ca558 <col:13> 'BIO_ACCEPT *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x2022a7ca538 <col:13> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       | `-IntegerLiteral 0x2022a7ca5a0 <line:48:42> 'int' 2
|   |       |-BreakStmt 0x2022a7ca5e8 <line:175:13>
|   |       |-CaseStmt 0x2022a7ca630 <line:177:9, line:207:13>
|   |       | |-ConstantExpr 0x2022a7ca618 <line:48:42> 'int'
|   |       | | `-IntegerLiteral 0x2022a7ca5f0 <col:42> 'int' 2
|   |       | `-CompoundStmt 0x2022a7cabd8 <line:178:13, line:207:13>
|   |       |   |-DeclStmt 0x2022a7ca6d8 <line:179:17, col:39>
|   |       |   | `-VarDecl 0x2022a7ca670 <col:17, col:21> col:21 used family 'int'
|   |       |   |-SwitchStmt 0x2022a7ca770 <line:180:17, line:203:17>
|   |       |   | |-ImplicitCastExpr 0x2022a7ca758 <line:180:25, col:28> 'int' <LValueToRValue>
|   |       |   | | `-MemberExpr 0x2022a7ca728 <col:25, col:28> 'int' lvalue ->accept_family 0x2022a7c77e8
|   |       |   | |   `-ImplicitCastExpr 0x2022a7ca710 <col:25> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |   | |     `-DeclRefExpr 0x2022a7ca6f0 <col:25> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       |   | `-CompoundStmt 0x2022a7ca8f0 <col:43, line:203:17>
|   |       |   |   |-IfStmt 0x2022a7ca808 <line:182:21, line:192:21>
|   |       |   |   | |-IntegerLiteral 0x2022a7ca790 <line:182:25> 'int' 1
|   |       |   |   | `-CompoundStmt 0x2022a7ca7f0 <col:28, line:192:21>
|   |       |   |   |   `-GotoStmt 0x2022a7ca7d8 <line:191:25, col:30> 'exit_loop' 0x2022a7d0cb8
|   |       |   |   |-BreakStmt 0x2022a7ca820 <line:193:21>
|   |       |   |   |-BreakStmt 0x2022a7ca860 <line:196:21>
|   |       |   |   |-BreakStmt 0x2022a7ca888 <line:199:21>
|   |       |   |   |-DefaultStmt 0x2022a7ca8b8 <line:200:17, col:24>
|   |       |   |   | `-NullStmt 0x2022a7ca8b0 <col:24>
|   |       |   |   `-GotoStmt 0x2022a7ca8d8 <line:202:21, col:26> 'exit_loop' 0x2022a7d0cb8
|   |       |   `-IfStmt 0x2022a7cabc0 <line:204:17, line:206:26>
|   |       |     |-OpaqueValueExpr 0x2022a7caba8 <<invalid sloc>> '_Bool'
|   |       |     `-GotoStmt 0x2022a7cab90 <col:21, col:26> 'exit_loop' 0x2022a7d0cb8
|   |       |-IfStmt 0x2022a7cad28 <line:208:13, line:211:13>
|   |       | |-OpaqueValueExpr 0x2022a7cad10 <<invalid sloc>> '_Bool'
|   |       | `-CompoundStmt 0x2022a7cacf8 <line:208:40, line:211:13>
|   |       |   `-GotoStmt 0x2022a7cace0 <line:210:17, col:22> 'exit_loop' 0x2022a7d0cb8
|   |       |-BinaryOperator 0x2022a7cae40 <line:216:13, line:49:42> 'int' '='
|   |       | |-MemberExpr 0x2022a7cade8 <line:216:13, col:16> 'int' lvalue ->state 0x2022a7c7778
|   |       | | `-ImplicitCastExpr 0x2022a7cadd0 <col:13> 'BIO_ACCEPT *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x2022a7cadb0 <col:13> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       | `-IntegerLiteral 0x2022a7cae18 <line:49:42> 'int' 3
|   |       |-BreakStmt 0x2022a7cae60 <line:217:13>
|   |       |-CaseStmt 0x2022a7caea8 <line:219:9, <invalid sloc>>
|   |       | |-ConstantExpr 0x2022a7cae90 <line:49:42> 'int'
|   |       | | `-IntegerLiteral 0x2022a7cae68 <col:42> 'int' 3
|   |       | `-NullStmt 0x2022a7d64e0 <<invalid sloc>>
|   |       |-IfStmt 0x2022a7d69f8 <line:223:13, line:230:13>
|   |       | |-OpaqueValueExpr 0x2022a7d69e0 <<invalid sloc>> '_Bool'
|   |       | `-CompoundStmt 0x2022a7d69c0 <line:223:45, line:230:13>
|   |       |   |-CallExpr 0x2022a7d68e0 <line:225:17, line:227:62> 'int'
|   |       |   | |-ImplicitCastExpr 0x2022a7d68c8 <line:225:17> 'int (*)()' <FunctionToPointerDecay>
|   |       |   | | `-DeclRefExpr 0x2022a7d6760 <col:17> 'int ()' Function 0x2022a7d0990 'ERR_add_error_data' 'int ()'
|   |       |   | |-IntegerLiteral 0x2022a7d6780 <col:36> 'int' 4
|   |       |   | |-ImplicitCastExpr 0x2022a7d6928 <line:226:36> 'char *' <ArrayToPointerDecay>
|   |       |   | | `-StringLiteral 0x2022a7d67a8 <col:36> 'char [10]' lvalue "hostname="
|   |       |   | |-ImplicitCastExpr 0x2022a7d6940 <col:49, col:52> 'char *' <LValueToRValue>
|   |       |   | | `-MemberExpr 0x2022a7d6808 <col:49, col:52> 'char *' lvalue ->param_addr 0x2022a7c7938
|   |       |   | |   `-ImplicitCastExpr 0x2022a7d67f0 <col:49> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |   | |     `-DeclRefExpr 0x2022a7d67d0 <col:49> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       |   | |-ImplicitCastExpr 0x2022a7d6958 <line:227:36> 'char *' <ArrayToPointerDecay>
|   |       |   | | `-StringLiteral 0x2022a7d6838 <col:36> 'char [10]' lvalue " service="
|   |       |   | `-ImplicitCastExpr 0x2022a7d6970 <col:49, col:52> 'char *' <LValueToRValue>
|   |       |   |   `-MemberExpr 0x2022a7d6898 <col:49, col:52> 'char *' lvalue ->param_serv 0x2022a7c79a8
|   |       |   |     `-ImplicitCastExpr 0x2022a7d6880 <col:49> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |   |       `-DeclRefExpr 0x2022a7d6860 <col:49> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       |   `-GotoStmt 0x2022a7d69a8 <line:229:17, col:22> 'exit_loop' 0x2022a7d0cb8
|   |       |-BinaryOperator 0x2022a7d6ab0 <line:231:13, col:30> 'int' '='
|   |       | |-MemberExpr 0x2022a7d6a48 <col:13, col:16> 'int' lvalue ->accept_sock 0x2022a7c7a18
|   |       | | `-ImplicitCastExpr 0x2022a7d6a30 <col:13> 'BIO_ACCEPT *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x2022a7d6a10 <col:13> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       | `-ImplicitCastExpr 0x2022a7d6a98 <col:30> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x2022a7d6a78 <col:30> 'int' lvalue Var 0x2022a7d03c0 'ret' 'int'
|   |       |-BinaryOperator 0x2022a7d6b80 <line:233:13, line:50:42> 'int' '='
|   |       | |-MemberExpr 0x2022a7d6b28 <line:233:13, col:16> 'int' lvalue ->state 0x2022a7c7778
|   |       | | `-ImplicitCastExpr 0x2022a7d6b10 <col:13> 'BIO_ACCEPT *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x2022a7d6af0 <col:13> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       | `-IntegerLiteral 0x2022a7d6b58 <line:50:42> 'int' 4
|   |       |-BreakStmt 0x2022a7d6ba0 <line:234:13>
|   |       |-CaseStmt 0x2022a7d6be8 <line:236:9, line:244:13>
|   |       | |-ConstantExpr 0x2022a7d6bd0 <line:50:42> 'int'
|   |       | | `-IntegerLiteral 0x2022a7d6ba8 <col:42> 'int' 4
|   |       | `-CompoundStmt 0x2022a7d7170 <line:237:13, line:244:13>
|   |       |   `-IfStmt 0x2022a7d7158 <line:238:17, line:243:17>
|   |       |     |-OpaqueValueExpr 0x2022a7d7140 <<invalid sloc>> '_Bool'
|   |       |     `-CompoundStmt 0x2022a7d7120 <line:240:48, line:243:17>
|   |       |       |-CallExpr 0x2022a7d70c8 <line:241:21, col:51> 'int'
|   |       |       | |-ImplicitCastExpr 0x2022a7d70b0 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |       |       | | `-DeclRefExpr 0x2022a7d7028 <col:21> 'int ()' Function 0x2022a7d6f60 'BIO_closesocket' 'int ()'
|   |       |       | `-ImplicitCastExpr 0x2022a7d70f0 <col:37, col:40> 'int' <LValueToRValue>
|   |       |       |   `-MemberExpr 0x2022a7d7080 <col:37, col:40> 'int' lvalue ->accept_sock 0x2022a7c7a18
|   |       |       |     `-ImplicitCastExpr 0x2022a7d7068 <col:37> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |       |       `-DeclRefExpr 0x2022a7d7048 <col:37> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       |       `-GotoStmt 0x2022a7d7108 <line:242:21, col:26> 'exit_loop' 0x2022a7d0cb8
|   |       |-CompoundStmt 0x2022a7d4608 <line:246:13, line:255:13>
|   |       | |-DeclStmt 0x2022a7d42f8 <line:247:17, col:43>
|   |       | | |-RecordDecl 0x2022a7d7188 <col:17, col:23> col:23 union BIO_sock_info_u
|   |       | | `-VarDecl 0x2022a7d7298 <col:17, col:39> col:39 invalid info 'union BIO_sock_info_u':'union BIO_sock_info_u'
|   |       | `-IfStmt 0x2022a7d45f0 <line:250:17, line:254:17>
|   |       |   |-OpaqueValueExpr 0x2022a7d45d8 <<invalid sloc>> '_Bool'
|   |       |   `-CompoundStmt 0x2022a7d45b8 <line:251:44, line:254:17>
|   |       |     |-CallExpr 0x2022a7d4560 <line:252:21, col:51> 'int'
|   |       |     | |-ImplicitCastExpr 0x2022a7d4548 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |       |     | | `-DeclRefExpr 0x2022a7d44c0 <col:21> 'int ()' Function 0x2022a7d6f60 'BIO_closesocket' 'int ()'
|   |       |     | `-ImplicitCastExpr 0x2022a7d4588 <col:37, col:40> 'int' <LValueToRValue>
|   |       |     |   `-MemberExpr 0x2022a7d4518 <col:37, col:40> 'int' lvalue ->accept_sock 0x2022a7c7a18
|   |       |     |     `-ImplicitCastExpr 0x2022a7d4500 <col:37> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |     |       `-DeclRefExpr 0x2022a7d44e0 <col:37> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       |     `-GotoStmt 0x2022a7d45a0 <line:253:21, col:26> 'exit_loop' 0x2022a7d0cb8
|   |       |-BinaryOperator 0x2022a7d4a68 <line:261:13, line:51:42> 'int' '='
|   |       | |-MemberExpr 0x2022a7d4a10 <line:261:13, col:16> 'int' lvalue ->state 0x2022a7c7778
|   |       | | `-ImplicitCastExpr 0x2022a7d49f8 <col:13> 'BIO_ACCEPT *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x2022a7d49d8 <col:13> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       | `-IntegerLiteral 0x2022a7d4a40 <line:51:42> 'int' 5
|   |       |-BinaryOperator 0x2022a7d4b00 <line:262:13, col:18> 'int' '='
|   |       | |-DeclRefExpr 0x2022a7d4a88 <col:13> 'int' lvalue Var 0x2022a7d0300 's' 'int'
|   |       | `-UnaryOperator 0x2022a7d4ae8 <col:17, col:18> 'int' prefix '-'
|   |       |   `-IntegerLiteral 0x2022a7d4ac0 <col:18> 'int' 1
|   |       |-BinaryOperator 0x2022a7d4b68 <line:263:13, col:19> 'int' '='
|   |       | |-DeclRefExpr 0x2022a7d4b20 <col:13> 'int' lvalue Var 0x2022a7d03c0 'ret' 'int'
|   |       | `-IntegerLiteral 0x2022a7d4b40 <col:19> 'int' 1
|   |       |-GotoStmt 0x2022a7d4bd8 <line:264:13, col:18> 'end' 0x2022a7d4b88
|   |       |-CaseStmt 0x2022a7d4c30 <line:266:9, line:270:13>
|   |       | |-ConstantExpr 0x2022a7d4c18 <line:51:42> 'int'
|   |       | | `-IntegerLiteral 0x2022a7d4bf0 <col:42> 'int' 5
|   |       | `-IfStmt 0x2022a7d4dd0 <line:267:13, line:270:13>
|   |       |   |-OpaqueValueExpr 0x2022a7d4db8 <<invalid sloc>> '_Bool'
|   |       |   `-CompoundStmt 0x2022a7d4d98 <line:267:38, line:270:13>
|   |       |     |-BinaryOperator 0x2022a7d4d70 <line:268:17, line:52:42> 'int' '='
|   |       |     | |-MemberExpr 0x2022a7d4d18 <line:268:17, col:20> 'int' lvalue ->state 0x2022a7c7778
|   |       |     | | `-ImplicitCastExpr 0x2022a7d4d00 <col:17> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |     | |   `-DeclRefExpr 0x2022a7d4ce0 <col:17> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       |     | `-IntegerLiteral 0x2022a7d4d48 <line:52:42> 'int' 6
|   |       |     `-BreakStmt 0x2022a7d4d90 <line:269:17>
|   |       |-CallExpr 0x2022a7d4fc0 <line:274:13, col:44> 'int'
|   |       | |-ImplicitCastExpr 0x2022a7d4fa8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x2022a7d4f20 <col:13> 'int ()' Function 0x2022a7cd990 'OPENSSL_free' 'int ()'
|   |       | `-ImplicitCastExpr 0x2022a7d4fe8 <col:26, col:29> 'char *' <LValueToRValue>
|   |       |   `-MemberExpr 0x2022a7d4f78 <col:26, col:29> 'char *' lvalue ->cache_peer_name 0x2022a7c7d28
|   |       |     `-ImplicitCastExpr 0x2022a7d4f60 <col:26> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x2022a7d4f40 <col:26> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       |-BinaryOperator 0x2022a7d5108 <line:275:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'char *' '='
|   |       | |-MemberExpr 0x2022a7d5038 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:275:13, col:16> 'char *' lvalue ->cache_peer_name 0x2022a7c7d28
|   |       | | `-ImplicitCastExpr 0x2022a7d5020 <col:13> 'BIO_ACCEPT *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x2022a7d5000 <col:13> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       | `-ImplicitCastExpr 0x2022a7d50f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |       |   `-ParenExpr 0x2022a7d50d0 <col:17, col:27> 'void *'
|   |       |     `-CStyleCastExpr 0x2022a7d50a8 <col:18, col:26> 'void *' <NullToPointer>
|   |       |       `-IntegerLiteral 0x2022a7d5068 <col:26> 'int' 0
|   |       |-CallExpr 0x2022a7d51c8 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:276:13, col:44> 'int'
|   |       | |-ImplicitCastExpr 0x2022a7d51b0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x2022a7d5128 <col:13> 'int ()' Function 0x2022a7cd990 'OPENSSL_free' 'int ()'
|   |       | `-ImplicitCastExpr 0x2022a7d51f0 <col:26, col:29> 'char *' <LValueToRValue>
|   |       |   `-MemberExpr 0x2022a7d5180 <col:26, col:29> 'char *' lvalue ->cache_peer_serv 0x2022a7c7d98
|   |       |     `-ImplicitCastExpr 0x2022a7d5168 <col:26> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x2022a7d5148 <col:26> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       |-BinaryOperator 0x2022a7d5328 <line:277:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'char *' '='
|   |       | |-MemberExpr 0x2022a7d5240 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:277:13, col:16> 'char *' lvalue ->cache_peer_serv 0x2022a7c7d98
|   |       | | `-ImplicitCastExpr 0x2022a7d5228 <col:13> 'BIO_ACCEPT *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x2022a7d5208 <col:13> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       | `-ImplicitCastExpr 0x2022a7d5310 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |       |   `-ParenExpr 0x2022a7d52f0 <col:17, col:27> 'void *'
|   |       |     `-CStyleCastExpr 0x2022a7d52b0 <col:18, col:26> 'void *' <NullToPointer>
|   |       |       `-IntegerLiteral 0x2022a7d5270 <col:26> 'int' 0
|   |       |-IfStmt 0x2022a7d58f8 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:285:13, line:291:13>
|   |       | |-BinaryOperator 0x2022a7d55e0 <line:285:17, col:21> 'int' '<'
|   |       | | |-ImplicitCastExpr 0x2022a7d55c8 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x2022a7d5580 <col:17> 'int' lvalue Var 0x2022a7d0300 's' 'int'
|   |       | | `-IntegerLiteral 0x2022a7d55a0 <col:21> 'int' 0
|   |       | `-CompoundStmt 0x2022a7d58e0 <col:24, line:291:13>
|   |       |   `-IfStmt 0x2022a7d58c8 <line:286:17, line:290:17>
|   |       |     |-CallExpr 0x2022a7d5748 <line:286:21, col:44> 'int'
|   |       |     | |-ImplicitCastExpr 0x2022a7d5730 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |       |     | | `-DeclRefExpr 0x2022a7d56f0 <col:21> 'int ()' Function 0x2022a7d5628 'BIO_sock_should_retry' 'int ()'
|   |       |     | `-ImplicitCastExpr 0x2022a7d5770 <col:43> 'int' <LValueToRValue>
|   |       |     |   `-DeclRefExpr 0x2022a7d5710 <col:43> 'int' lvalue Var 0x2022a7d0300 's' 'int'
|   |       |     `-CompoundStmt 0x2022a7d58b0 <col:47, line:290:17>
|   |       |       `-GotoStmt 0x2022a7d5898 <line:289:21, col:26> 'end' 0x2022a7d4b88
|   |       |-IfStmt 0x2022a7d5a40 <line:294:13, line:297:13>
|   |       | |-BinaryOperator 0x2022a7d5970 <line:294:17, col:21> 'int' '<'
|   |       | | |-ImplicitCastExpr 0x2022a7d5958 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x2022a7d5910 <col:17> 'int' lvalue Var 0x2022a7d0300 's' 'int'
|   |       | | `-IntegerLiteral 0x2022a7d5930 <col:21> 'int' 0
|   |       | `-CompoundStmt 0x2022a7d5a20 <col:24, line:297:13>
|   |       |   |-BinaryOperator 0x2022a7d59e8 <line:295:17, col:23> 'int' '='
|   |       |   | |-DeclRefExpr 0x2022a7d5990 <col:17> 'int' lvalue Var 0x2022a7d03c0 'ret' 'int'
|   |       |   | `-ImplicitCastExpr 0x2022a7d59d0 <col:23> 'int' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x2022a7d59b0 <col:23> 'int' lvalue Var 0x2022a7d0300 's' 'int'
|   |       |   `-GotoStmt 0x2022a7d5a08 <line:296:17, col:22> 'exit_loop' 0x2022a7d0cb8
|   |       |-IfStmt 0x2022a7d5c40 <line:300:13, line:301:22>
|   |       | |-OpaqueValueExpr 0x2022a7d5c28 <<invalid sloc>> '_Bool'
|   |       | `-GotoStmt 0x2022a7d5c10 <col:17, col:22> 'exit_loop' 0x2022a7d0cb8
|   |       |-IfStmt 0x2022a7d7530 <line:310:13, line:316:13>
|   |       | |-OpaqueValueExpr 0x2022a7d7518 <<invalid sloc>> '_Bool'
|   |       | `-CompoundStmt 0x2022a7d74f8 <line:310:39, line:316:13>
|   |       |   |-IfStmt 0x2022a7d7388 <line:311:17, line:312:26>
|   |       |   | |-OpaqueValueExpr 0x2022a7d7370 <<invalid sloc>> '_Bool'
|   |       |   | `-GotoStmt 0x2022a7d7358 <col:21, col:26> 'exit_loop' 0x2022a7d0cb8
|   |       |   `-IfStmt 0x2022a7d74e0 <line:313:17, line:314:26>
|   |       |     |-OpaqueValueExpr 0x2022a7d74c8 <<invalid sloc>> '_Bool'
|   |       |     `-GotoStmt 0x2022a7d74b0 <col:21, col:26> 'exit_loop' 0x2022a7d0cb8
|   |       |-IfStmt 0x2022a7d7620 <line:317:13, line:318:22>
|   |       | |-OpaqueValueExpr 0x2022a7d7608 <<invalid sloc>> '_Bool'
|   |       | `-GotoStmt 0x2022a7d75f0 <col:17, col:22> 'exit_loop' 0x2022a7d0cb8
|   |       |-BinaryOperator 0x2022a7d7898 <line:324:13, line:52:42> 'int' '='
|   |       | |-MemberExpr 0x2022a7d7840 <line:324:13, col:16> 'int' lvalue ->state 0x2022a7c7778
|   |       | | `-ImplicitCastExpr 0x2022a7d7828 <col:13> 'BIO_ACCEPT *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x2022a7d7808 <col:13> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       | `-IntegerLiteral 0x2022a7d7870 <line:52:42> 'int' 6
|   |       |-BinaryOperator 0x2022a7d7988 <line:326:13, col:19> 'int' '='
|   |       | |-DeclRefExpr 0x2022a7d7940 <col:13> 'int' lvalue Var 0x2022a7d03c0 'ret' 'int'
|   |       | `-IntegerLiteral 0x2022a7d7960 <col:19> 'int' 1
|   |       |-GotoStmt 0x2022a7d79a8 <line:327:13, col:18> 'end' 0x2022a7d4b88
|   |       |-CaseStmt 0x2022a7d7a00 <line:329:9, line:333:13>
|   |       | |-ConstantExpr 0x2022a7d79e8 <line:52:42> 'int'
|   |       | | `-IntegerLiteral 0x2022a7d79c0 <col:42> 'int' 6
|   |       | `-IfStmt 0x2022a7d7ba0 <line:330:13, line:333:13>
|   |       |   |-OpaqueValueExpr 0x2022a7d7b88 <<invalid sloc>> '_Bool'
|   |       |   `-CompoundStmt 0x2022a7d7b68 <line:330:38, line:333:13>
|   |       |     |-BinaryOperator 0x2022a7d7b40 <line:331:17, line:51:42> 'int' '='
|   |       |     | |-MemberExpr 0x2022a7d7ae8 <line:331:17, col:20> 'int' lvalue ->state 0x2022a7c7778
|   |       |     | | `-ImplicitCastExpr 0x2022a7d7ad0 <col:17> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |     | |   `-DeclRefExpr 0x2022a7d7ab0 <col:17> 'BIO_ACCEPT *' lvalue ParmVar 0x2022a7cf0d8 'c' 'BIO_ACCEPT *'
|   |       |     | `-IntegerLiteral 0x2022a7d7b18 <line:51:42> 'int' 5
|   |       |     `-BreakStmt 0x2022a7d7b60 <line:332:17>
|   |       |-BinaryOperator 0x2022a7d7c00 <line:334:13, col:19> 'int' '='
|   |       | |-DeclRefExpr 0x2022a7d7bb8 <col:13> 'int' lvalue Var 0x2022a7d03c0 'ret' 'int'
|   |       | `-IntegerLiteral 0x2022a7d7bd8 <col:19> 'int' 1
|   |       |-GotoStmt 0x2022a7d7c20 <line:335:13, col:18> 'end' 0x2022a7d4b88
|   |       |-DefaultStmt 0x2022a7d7ca0 <line:337:9, line:338:19>
|   |       | `-BinaryOperator 0x2022a7d7c80 <col:13, col:19> 'int' '='
|   |       |   |-DeclRefExpr 0x2022a7d7c38 <col:13> 'int' lvalue Var 0x2022a7d03c0 'ret' 'int'
|   |       |   `-IntegerLiteral 0x2022a7d7c58 <col:19> 'int' 0
|   |       `-GotoStmt 0x2022a7d7cc0 <line:339:13, col:18> 'end' 0x2022a7d4b88
|   |-LabelStmt 0x2022a7d80b8 <line:343:3, line:347:26> 'exit_loop'
|   | `-IfStmt 0x2022a7d8090 <line:344:5, line:347:26> has_else
|   |   |-OpaqueValueExpr 0x2022a7d8078 <<invalid sloc>> '_Bool'
|   |   |-NullStmt 0x2022a7d8070 <line:345:9>
|   |   `-IfStmt 0x2022a7d8058 <line:346:10, line:347:26>
|   |     |-BinaryOperator 0x2022a7d7fa0 <line:346:14, col:19> 'int' '>='
|   |     | |-ImplicitCastExpr 0x2022a7d7f88 <col:14> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2022a7d7f40 <col:14> 'int' lvalue Var 0x2022a7d0300 's' 'int'
|   |     | `-IntegerLiteral 0x2022a7d7f60 <col:19> 'int' 0
|   |     `-CallExpr 0x2022a7d8018 <line:347:9, col:26> 'int'
|   |       |-ImplicitCastExpr 0x2022a7d8000 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x2022a7d7fc0 <col:9> 'int ()' Function 0x2022a7d6f60 'BIO_closesocket' 'int ()'
|   |       `-ImplicitCastExpr 0x2022a7d8040 <col:25> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x2022a7d7fe0 <col:25> 'int' lvalue Var 0x2022a7d0300 's' 'int'
|   `-LabelStmt 0x2022a7d8118 <line:348:3, line:349:12> 'end'
|     `-ReturnStmt 0x2022a7d8108 <col:5, col:12>
|       `-ImplicitCastExpr 0x2022a7d80f0 <col:12> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x2022a7d80d0 <col:12> 'int' lvalue Var 0x2022a7d03c0 'ret' 'int'
|-FunctionDecl 0x2022a7d9370 <line:352:1, line:369:1> line:352:12 invalid acpt_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x2022a7d8178 <col:22, col:27> col:27 invalid b 'int *'
| |-ParmVarDecl 0x2022a7d81f8 <col:30, col:36> col:36 used out 'char *'
| |-ParmVarDecl 0x2022a7d8278 <col:41, col:45> col:45 used outl 'int'
| `-CompoundStmt 0x2022a7d9af8 <line:353:1, line:369:1>
|   |-DeclStmt 0x2022a7d94e8 <line:354:5, col:16>
|   | `-VarDecl 0x2022a7d9458 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x2022a7d94c0 <col:15> 'int' 0
|   |-DeclStmt 0x2022a7d9578 <line:355:5, col:21>
|   | `-VarDecl 0x2022a7d9510 <col:5, col:17> col:17 used data 'BIO_ACCEPT *'
|   `-ReturnStmt 0x2022a7d9ae8 <line:368:5, col:16>
|     `-ImplicitCastExpr 0x2022a7d9ad0 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x2022a7d9ab0 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x2022a7d9a90 <col:13> 'int' lvalue Var 0x2022a7d9458 'ret' 'int'
|-FunctionDecl 0x2022a7d9ce0 <line:371:1, line:388:1> line:371:12 invalid acpt_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x2022a7d9b38 <col:23, col:28> col:28 invalid b 'int *'
| |-ParmVarDecl 0x2022a7d9bb8 <col:31, col:43> col:43 used in 'const char *'
| |-ParmVarDecl 0x2022a7d9c38 <col:47, col:51> col:51 used inl 'int'
| `-CompoundStmt 0x2022a7d22e8 <line:372:1, line:388:1>
|   |-DeclStmt 0x2022a7d9e30 <line:373:5, col:12>
|   | `-VarDecl 0x2022a7d9dc8 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x2022a7d9ec0 <line:374:5, col:21>
|   | `-VarDecl 0x2022a7d9e58 <col:5, col:17> col:17 used data 'BIO_ACCEPT *'
|   `-ReturnStmt 0x2022a7d22d8 <line:387:5, col:16>
|     `-ImplicitCastExpr 0x2022a7d22c0 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x2022a7da308 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x2022a7da2e8 <col:13> 'int' lvalue Var 0x2022a7d9dc8 'ret' 'int'
|-FunctionDecl 0x2022a7d2558 <line:390:1, line:538:1> line:390:13 invalid acpt_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x2022a7d2328 <col:23, col:28> col:28 invalid b 'int *'
| |-ParmVarDecl 0x2022a7d23a8 <col:31, col:35> col:35 used cmd 'int'
| |-ParmVarDecl 0x2022a7d2428 <col:40, col:45> col:45 used num 'long'
| |-ParmVarDecl 0x2022a7d24a8 <col:50, col:56> col:56 used ptr 'void *'
| `-CompoundStmt 0x2022a7e2208 <line:391:1, line:538:1>
|   |-DeclStmt 0x2022a7d26b0 <line:392:5, col:12>
|   | `-VarDecl 0x2022a7d2648 <col:5, col:10> col:10 used ip 'int *'
|   |-DeclStmt 0x2022a7d2788 <line:393:5, col:17>
|   | `-VarDecl 0x2022a7d26e0 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x2022a7d2770 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x2022a7d2748 <col:16> 'int' 1
|   |-DeclStmt 0x2022a7d2818 <line:394:5, col:21>
|   | `-VarDecl 0x2022a7d27b0 <col:5, col:17> col:17 used data 'BIO_ACCEPT *'
|   |-DeclStmt 0x2022a7d28b0 <line:395:5, col:14>
|   | `-VarDecl 0x2022a7d2848 <col:5, col:12> col:12 used pp 'char **'
|   |-SwitchStmt 0x2022a7d2950 <line:399:5, line:536:5>
|   | |-ImplicitCastExpr 0x2022a7d2938 <line:399:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x2022a7d2900 <col:13> 'int' lvalue ParmVar 0x2022a7d23a8 'cmd' 'int'
|   | `-CompoundStmt 0x2022a7e20c8 <col:18, line:536:5>
|   |   |-BinaryOperator 0x2022a7d29e8 <line:401:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x2022a7d2970 <col:9> 'long' lvalue Var 0x2022a7d26e0 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x2022a7d29d0 <col:15> 'long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x2022a7d29a8 <col:15> 'int' 0
|   |   |-BinaryOperator 0x2022a7d2a98 <line:402:9, line:47:42> 'int' '='
|   |   | |-MemberExpr 0x2022a7d2a40 <line:402:9, col:15> 'int' lvalue ->state 0x2022a7c7778
|   |   | | `-ImplicitCastExpr 0x2022a7d2a28 <col:9> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2022a7d2a08 <col:9> 'BIO_ACCEPT *' lvalue Var 0x2022a7d27b0 'data' 'BIO_ACCEPT *'
|   |   | `-IntegerLiteral 0x2022a7d2a70 <line:47:42> 'int' 1
|   |   |-BreakStmt 0x2022a7d2bf8 <line:407:9>
|   |   |-BreakStmt 0x2022a7d2c40 <line:411:9>
|   |   |-IfStmt 0x2022a7db020 <line:413:9, line:445:9> has_else
|   |   | |-BinaryOperator 0x2022a7d2d20 <line:413:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x2022a7d2d08 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:413:13> 'void *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2022a7d2c48 <col:13> 'void *' lvalue ParmVar 0x2022a7d24a8 'ptr' 'void *'
|   |   | | `-ParenExpr 0x2022a7d2ce8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |   | |   `-CStyleCastExpr 0x2022a7d2cc0 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |     `-IntegerLiteral 0x2022a7d2c80 <col:26> 'int' 0
|   |   | |-CompoundStmt 0x2022a7daec8 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:413:26, line:441:9>
|   |   | | `-IfStmt 0x2022a7daea0 <line:414:13, line:440:13> has_else
|   |   | |   |-BinaryOperator 0x2022a7d2dd0 <line:414:17, col:24> 'int' '=='
|   |   | |   | |-ImplicitCastExpr 0x2022a7d2da0 <col:17> 'long' <LValueToRValue>
|   |   | |   | | `-DeclRefExpr 0x2022a7d2d40 <col:17> 'long' lvalue ParmVar 0x2022a7d2428 'num' 'long'
|   |   | |   | `-ImplicitCastExpr 0x2022a7d2db8 <col:24> 'long' <IntegralCast>
|   |   | |   |   `-IntegerLiteral 0x2022a7d2d78 <col:24> 'int' 0
|   |   | |   |-CompoundStmt 0x2022a7da5d0 <col:27, line:429:13>
|   |   | |   | |-DeclStmt 0x2022a7d2ef0 <line:415:17, col:51>
|   |   | |   | | `-VarDecl 0x2022a7d2e08 <col:17, col:41> col:23 used hold_serv 'char *' cinit
|   |   | |   | |   `-ImplicitCastExpr 0x2022a7d2ed8 <col:35, col:41> 'char *' <LValueToRValue>
|   |   | |   | |     `-MemberExpr 0x2022a7d2ea8 <col:35, col:41> 'char *' lvalue ->param_serv 0x2022a7c79a8
|   |   | |   | |       `-ImplicitCastExpr 0x2022a7d2e90 <col:35> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |   | |         `-DeclRefExpr 0x2022a7d2e70 <col:35> 'BIO_ACCEPT *' lvalue Var 0x2022a7d27b0 'data' 'BIO_ACCEPT *'
|   |   | |   | |-CallExpr 0x2022a7d2fa8 <line:420:17, col:46> 'int'
|   |   | |   | | |-ImplicitCastExpr 0x2022a7d2f90 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   | |   | | | `-DeclRefExpr 0x2022a7d2f08 <col:17> 'int ()' Function 0x2022a7cd990 'OPENSSL_free' 'int ()'
|   |   | |   | | `-ImplicitCastExpr 0x2022a7d2fd0 <col:30, col:36> 'char *' <LValueToRValue>
|   |   | |   | |   `-MemberExpr 0x2022a7d2f60 <col:30, col:36> 'char *' lvalue ->param_addr 0x2022a7c7938
|   |   | |   | |     `-ImplicitCastExpr 0x2022a7d2f48 <col:30> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |   | |       `-DeclRefExpr 0x2022a7d2f28 <col:30> 'BIO_ACCEPT *' lvalue Var 0x2022a7d27b0 'data' 'BIO_ACCEPT *'
|   |   | |   | |-BinaryOperator 0x2022a7d30f0 <line:421:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'char *' '='
|   |   | |   | | |-MemberExpr 0x2022a7d3020 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:421:17, col:23> 'char *' lvalue ->param_addr 0x2022a7c7938
|   |   | |   | | | `-ImplicitCastExpr 0x2022a7d3008 <col:17> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |   | | |   `-DeclRefExpr 0x2022a7d2fe8 <col:17> 'BIO_ACCEPT *' lvalue Var 0x2022a7d27b0 'data' 'BIO_ACCEPT *'
|   |   | |   | | `-ImplicitCastExpr 0x2022a7d30d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |   | |   | |   `-ParenExpr 0x2022a7d30b8 <col:17, col:27> 'void *'
|   |   | |   | |     `-CStyleCastExpr 0x2022a7d3090 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |   | |       `-IntegerLiteral 0x2022a7d3050 <col:26> 'int' 0
|   |   | |   | `-IfStmt 0x2022a7da590 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:426:17, line:427:43>
|   |   | |   |   |-BinaryOperator 0x2022a7da4d8 <line:426:21, col:40> 'int' '!='
|   |   | |   |   | |-ImplicitCastExpr 0x2022a7da4a8 <col:21> 'char *' <LValueToRValue>
|   |   | |   |   | | `-DeclRefExpr 0x2022a7da408 <col:21> 'char *' lvalue Var 0x2022a7d2e08 'hold_serv' 'char *'
|   |   | |   |   | `-ImplicitCastExpr 0x2022a7da4c0 <col:34, col:40> 'char *' <LValueToRValue>
|   |   | |   |   |   `-MemberExpr 0x2022a7da478 <col:34, col:40> 'char *' lvalue ->param_serv 0x2022a7c79a8
|   |   | |   |   |     `-ImplicitCastExpr 0x2022a7da460 <col:34> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |   |   |       `-DeclRefExpr 0x2022a7da440 <col:34> 'BIO_ACCEPT *' lvalue Var 0x2022a7d27b0 'data' 'BIO_ACCEPT *'
|   |   | |   |   `-CallExpr 0x2022a7da550 <line:427:21, col:43> 'int'
|   |   | |   |     |-ImplicitCastExpr 0x2022a7da538 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |   | |   |     | `-DeclRefExpr 0x2022a7da4f8 <col:21> 'int ()' Function 0x2022a7cd990 'OPENSSL_free' 'int ()'
|   |   | |   |     `-ImplicitCastExpr 0x2022a7da578 <col:34> 'char *' <LValueToRValue>
|   |   | |   |       `-DeclRefExpr 0x2022a7da518 <col:34> 'char *' lvalue Var 0x2022a7d2e08 'hold_serv' 'char *'
|   |   | |   `-IfStmt 0x2022a7dae78 <line:429:20, line:440:13> has_else
|   |   | |     |-BinaryOperator 0x2022a7da678 <line:429:24, col:31> 'int' '=='
|   |   | |     | |-ImplicitCastExpr 0x2022a7da648 <col:24> 'long' <LValueToRValue>
|   |   | |     | | `-DeclRefExpr 0x2022a7da600 <col:24> 'long' lvalue ParmVar 0x2022a7d2428 'num' 'long'
|   |   | |     | `-ImplicitCastExpr 0x2022a7da660 <col:31> 'long' <IntegralCast>
|   |   | |     |   `-IntegerLiteral 0x2022a7da620 <col:31> 'int' 1
|   |   | |     |-CompoundStmt 0x2022a7da9c8 <col:34, line:433:13>
|   |   | |     | |-CallExpr 0x2022a7da738 <line:430:17, col:46> 'int'
|   |   | |     | | |-ImplicitCastExpr 0x2022a7da720 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   | |     | | | `-DeclRefExpr 0x2022a7da698 <col:17> 'int ()' Function 0x2022a7cd990 'OPENSSL_free' 'int ()'
|   |   | |     | | `-ImplicitCastExpr 0x2022a7da760 <col:30, col:36> 'char *' <LValueToRValue>
|   |   | |     | |   `-MemberExpr 0x2022a7da6f0 <col:30, col:36> 'char *' lvalue ->param_serv 0x2022a7c79a8
|   |   | |     | |     `-ImplicitCastExpr 0x2022a7da6d8 <col:30> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |     | |       `-DeclRefExpr 0x2022a7da6b8 <col:30> 'BIO_ACCEPT *' lvalue Var 0x2022a7d27b0 'data' 'BIO_ACCEPT *'
|   |   | |     | `-BinaryOperator 0x2022a7da980 <line:431:17, col:50> 'char *' '='
|   |   | |     |   |-MemberExpr 0x2022a7da7b0 <col:17, col:23> 'char *' lvalue ->param_serv 0x2022a7c79a8
|   |   | |     |   | `-ImplicitCastExpr 0x2022a7da798 <col:17> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |     |   |   `-DeclRefExpr 0x2022a7da778 <col:17> 'BIO_ACCEPT *' lvalue Var 0x2022a7d27b0 'data' 'BIO_ACCEPT *'
|   |   | |     |   `-ImplicitCastExpr 0x2022a7da968 <col:36, col:50> 'char *' <IntegralToPointer>
|   |   | |     |     `-CallExpr 0x2022a7da928 <col:36, col:50> 'int'
|   |   | |     |       |-ImplicitCastExpr 0x2022a7da910 <col:36> 'int (*)()' <FunctionToPointerDecay>
|   |   | |     |       | `-DeclRefExpr 0x2022a7da8d0 <col:36> 'int ()' Function 0x2022a7da808 'BUF_strdup' 'int ()'
|   |   | |     |       `-ImplicitCastExpr 0x2022a7da950 <col:47> 'void *' <LValueToRValue>
|   |   | |     |         `-DeclRefExpr 0x2022a7da8f0 <col:47> 'void *' lvalue ParmVar 0x2022a7d24a8 'ptr' 'void *'
|   |   | |     `-IfStmt 0x2022a7dae50 <line:433:20, line:440:13> has_else
|   |   | |       |-BinaryOperator 0x2022a7daa60 <line:433:24, col:31> 'int' '=='
|   |   | |       | |-ImplicitCastExpr 0x2022a7daa30 <col:24> 'long' <LValueToRValue>
|   |   | |       | | `-DeclRefExpr 0x2022a7da9e8 <col:24> 'long' lvalue ParmVar 0x2022a7d2428 'num' 'long'
|   |   | |       | `-ImplicitCastExpr 0x2022a7daa48 <col:31> 'long' <IntegralCast>
|   |   | |       |   `-IntegerLiteral 0x2022a7daa08 <col:31> 'int' 2
|   |   | |       |-CompoundStmt 0x2022a7daae8 <col:34, line:435:13>
|   |   | |       `-IfStmt 0x2022a7dae28 <col:20, line:440:13> has_else
|   |   | |         |-BinaryOperator 0x2022a7dab70 <line:435:24, col:31> 'int' '=='
|   |   | |         | |-ImplicitCastExpr 0x2022a7dab40 <col:24> 'long' <LValueToRValue>
|   |   | |         | | `-DeclRefExpr 0x2022a7daaf8 <col:24> 'long' lvalue ParmVar 0x2022a7d2428 'num' 'long'
|   |   | |         | `-ImplicitCastExpr 0x2022a7dab58 <col:31> 'long' <IntegralCast>
|   |   | |         |   `-IntegerLiteral 0x2022a7dab18 <col:31> 'int' 3
|   |   | |         |-CompoundStmt 0x2022a7dac20 <col:34, line:438:13>
|   |   | |         `-IfStmt 0x2022a7dae10 <col:20, line:440:13>
|   |   | |           |-BinaryOperator 0x2022a7daca8 <line:438:24, col:31> 'int' '=='
|   |   | |           | |-ImplicitCastExpr 0x2022a7dac78 <col:24> 'long' <LValueToRValue>
|   |   | |           | | `-DeclRefExpr 0x2022a7dac30 <col:24> 'long' lvalue ParmVar 0x2022a7d2428 'num' 'long'
|   |   | |           | `-ImplicitCastExpr 0x2022a7dac90 <col:31> 'long' <IntegralCast>
|   |   | |           |   `-IntegerLiteral 0x2022a7dac50 <col:31> 'int' 4
|   |   | |           `-CompoundStmt 0x2022a7dadf8 <col:34, line:440:13>
|   |   | |             `-BinaryOperator 0x2022a7dadd8 <line:439:17, col:47> 'int' '='
|   |   | |               |-MemberExpr 0x2022a7dad00 <col:17, col:23> 'int' lvalue ->accept_family 0x2022a7c77e8
|   |   | |               | `-ImplicitCastExpr 0x2022a7dace8 <col:17> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |               |   `-DeclRefExpr 0x2022a7dacc8 <col:17> 'BIO_ACCEPT *' lvalue Var 0x2022a7d27b0 'data' 'BIO_ACCEPT *'
|   |   | |               `-ImplicitCastExpr 0x2022a7dadc0 <col:39, col:47> 'int' <LValueToRValue>
|   |   | |                 `-UnaryOperator 0x2022a7dada8 <col:39, col:47> 'int' lvalue prefix '*' cannot overflow
|   |   | |                   `-CStyleCastExpr 0x2022a7dad80 <col:40, col:47> 'int *' <BitCast>
|   |   | |                     `-ImplicitCastExpr 0x2022a7dad68 <col:47> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   | |                       `-DeclRefExpr 0x2022a7dad30 <col:47> 'void *' lvalue ParmVar 0x2022a7d24a8 'ptr' 'void *'
|   |   | `-CompoundStmt 0x2022a7db008 <line:441:16, line:445:9>
|   |   |   `-IfStmt 0x2022a7daff0 <line:442:13, line:444:13>
|   |   |     |-BinaryOperator 0x2022a7daf58 <line:442:17, col:24> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x2022a7daf28 <col:17> 'long' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x2022a7daee0 <col:17> 'long' lvalue ParmVar 0x2022a7d2428 'num' 'long'
|   |   |     | `-ImplicitCastExpr 0x2022a7daf40 <col:24> 'long' <IntegralCast>
|   |   |     |   `-IntegerLiteral 0x2022a7daf00 <col:24> 'int' 2
|   |   |     `-CompoundStmt 0x2022a7dafe0 <col:27, line:444:13>
|   |   |-BreakStmt 0x2022a7db048 <line:446:9>
|   |   |-BreakStmt 0x2022a7db1b8 <line:452:9>
|   |   |-BinaryOperator 0x2022a7d3328 <line:457:9, line:51:42> 'int' '='
|   |   | |-MemberExpr 0x2022a7d32d0 <line:457:9, col:15> 'int' lvalue ->state 0x2022a7c7778
|   |   | | `-ImplicitCastExpr 0x2022a7db320 <col:9> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2022a7db300 <col:9> 'BIO_ACCEPT *' lvalue Var 0x2022a7d27b0 'data' 'BIO_ACCEPT *'
|   |   | `-IntegerLiteral 0x2022a7d3300 <line:51:42> 'int' 5
|   |   |-BreakStmt 0x2022a7d33e8 <line:460:9>
|   |   |-IfStmt 0x2022a7d3870 <line:462:9, line:468:20> has_else
|   |   | |-OpaqueValueExpr 0x2022a7d3858 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x2022a7d3798 <line:462:22, line:467:9>
|   |   | | |-BinaryOperator 0x2022a7d34a0 <line:463:13, col:25> 'int *' '='
|   |   | | | |-DeclRefExpr 0x2022a7d33f0 <col:13> 'int *' lvalue Var 0x2022a7d2648 'ip' 'int *'
|   |   | | | `-CStyleCastExpr 0x2022a7d3478 <col:18, col:25> 'int *' <BitCast>
|   |   | | |   `-ImplicitCastExpr 0x2022a7d3460 <col:25> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   | | |     `-DeclRefExpr 0x2022a7d3428 <col:25> 'void *' lvalue ParmVar 0x2022a7d24a8 'ptr' 'void *'
|   |   | | |-IfStmt 0x2022a7d36a8 <line:464:13, line:465:29>
|   |   | | | |-BinaryOperator 0x2022a7d3598 <line:464:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | | | | |-ImplicitCastExpr 0x2022a7d3568 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:464:17> 'int *' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x2022a7d34c0 <col:17> 'int *' lvalue Var 0x2022a7d2648 'ip' 'int *'
|   |   | | | | `-ImplicitCastExpr 0x2022a7d3580 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'int *' <BitCast>
|   |   | | | |   `-ParenExpr 0x2022a7d3548 <col:17, col:27> 'void *'
|   |   | | | |     `-CStyleCastExpr 0x2022a7d3520 <col:18, col:26> 'void *' <NullToPointer>
|   |   | | | |       `-IntegerLiteral 0x2022a7d34e0 <col:26> 'int' 0
|   |   | | | `-BinaryOperator 0x2022a7d3688 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:465:17, col:29> 'int' '='
|   |   | | |   |-UnaryOperator 0x2022a7d35f0 <col:17, col:18> 'int' lvalue prefix '*' cannot overflow
|   |   | | |   | `-ImplicitCastExpr 0x2022a7d35d8 <col:18> 'int *' <LValueToRValue>
|   |   | | |   |   `-DeclRefExpr 0x2022a7d35b8 <col:18> 'int *' lvalue Var 0x2022a7d2648 'ip' 'int *'
|   |   | | |   `-ImplicitCastExpr 0x2022a7d3670 <col:23, col:29> 'int' <LValueToRValue>
|   |   | | |     `-MemberExpr 0x2022a7d3640 <col:23, col:29> 'int' lvalue ->accept_sock 0x2022a7c7a18
|   |   | | |       `-ImplicitCastExpr 0x2022a7d3628 <col:23> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | | |         `-DeclRefExpr 0x2022a7d3608 <col:23> 'BIO_ACCEPT *' lvalue Var 0x2022a7d27b0 'data' 'BIO_ACCEPT *'
|   |   | | `-BinaryOperator 0x2022a7d3778 <line:466:13, col:25> 'long' '='
|   |   | |   |-DeclRefExpr 0x2022a7d36c0 <col:13> 'long' lvalue Var 0x2022a7d26e0 'ret' 'long'
|   |   | |   `-ImplicitCastExpr 0x2022a7d3760 <col:19, col:25> 'long' <IntegralCast>
|   |   | |     `-ImplicitCastExpr 0x2022a7d3748 <col:19, col:25> 'int' <LValueToRValue>
|   |   | |       `-MemberExpr 0x2022a7d3718 <col:19, col:25> 'int' lvalue ->accept_sock 0x2022a7c7a18
|   |   | |         `-ImplicitCastExpr 0x2022a7d3700 <col:19> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |           `-DeclRefExpr 0x2022a7d36e0 <col:19> 'BIO_ACCEPT *' lvalue Var 0x2022a7d27b0 'data' 'BIO_ACCEPT *'
|   |   | `-BinaryOperator 0x2022a7d3838 <line:468:13, col:20> 'long' '='
|   |   |   |-DeclRefExpr 0x2022a7d37c0 <col:13> 'long' lvalue Var 0x2022a7d26e0 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x2022a7d3820 <col:19, col:20> 'long' <IntegralCast>
|   |   |     `-UnaryOperator 0x2022a7d3808 <col:19, col:20> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x2022a7d37e0 <col:20> 'int' 1
|   |   |-BreakStmt 0x2022a7d3898 <line:469:9>
|   |   |-IfStmt 0x2022a7e1ca0 <line:471:9, line:504:20> has_else
|   |   | |-OpaqueValueExpr 0x2022a7e1c88 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x2022a7e1bd8 <line:471:22, line:503:9>
|   |   | | `-IfStmt 0x2022a7e1bb0 <line:472:13, line:502:24> has_else
|   |   | |   |-BinaryOperator 0x2022a7d3a18 <line:472:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '&&'
|   |   | |   | |-BinaryOperator 0x2022a7d3918 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:472:17, col:24> 'int' '=='
|   |   | |   | | |-ImplicitCastExpr 0x2022a7d38e8 <col:17> 'long' <LValueToRValue>
|   |   | |   | | | `-DeclRefExpr 0x2022a7d38a0 <col:17> 'long' lvalue ParmVar 0x2022a7d2428 'num' 'long'
|   |   | |   | | `-ImplicitCastExpr 0x2022a7d3900 <col:24> 'long' <IntegralCast>
|   |   | |   | |   `-IntegerLiteral 0x2022a7d38c0 <col:24> 'int' 0
|   |   | |   | `-BinaryOperator 0x2022a7d39f8 <col:29, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | |   |   |-ImplicitCastExpr 0x2022a7d39e0 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:472:29> 'void *' <LValueToRValue>
|   |   | |   |   | `-DeclRefExpr 0x2022a7d3938 <col:29> 'void *' lvalue ParmVar 0x2022a7d24a8 'ptr' 'void *'
|   |   | |   |   `-ParenExpr 0x2022a7d39c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |   | |   |     `-CStyleCastExpr 0x2022a7d3998 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |   |       `-IntegerLiteral 0x2022a7d3958 <col:26> 'int' 0
|   |   | |   |-CompoundStmt 0x2022a7d3bf8 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:472:42, line:475:13>
|   |   | |   | |-BinaryOperator 0x2022a7d3ae8 <line:473:17, col:31> 'char **' '='
|   |   | |   | | |-DeclRefExpr 0x2022a7d3a38 <col:17> 'char **' lvalue Var 0x2022a7d2848 'pp' 'char **'
|   |   | |   | | `-CStyleCastExpr 0x2022a7d3ac0 <col:22, col:31> 'char **' <BitCast>
|   |   | |   | |   `-ImplicitCastExpr 0x2022a7d3aa8 <col:31> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   | |   | |     `-DeclRefExpr 0x2022a7d3a70 <col:31> 'void *' lvalue ParmVar 0x2022a7d24a8 'ptr' 'void *'
|   |   | |   | `-BinaryOperator 0x2022a7d3bd8 <line:474:17, col:29> 'char *' '='
|   |   | |   |   |-UnaryOperator 0x2022a7d3b40 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
|   |   | |   |   | `-ImplicitCastExpr 0x2022a7d3b28 <col:18> 'char **' <LValueToRValue>
|   |   | |   |   |   `-DeclRefExpr 0x2022a7d3b08 <col:18> 'char **' lvalue Var 0x2022a7d2848 'pp' 'char **'
|   |   | |   |   `-ImplicitCastExpr 0x2022a7d3bc0 <col:23, col:29> 'char *' <LValueToRValue>
|   |   | |   |     `-MemberExpr 0x2022a7d3b90 <col:23, col:29> 'char *' lvalue ->cache_accepting_name 0x2022a7c7bd8
|   |   | |   |       `-ImplicitCastExpr 0x2022a7d3b78 <col:23> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |   |         `-DeclRefExpr 0x2022a7d3b58 <col:23> 'BIO_ACCEPT *' lvalue Var 0x2022a7d27b0 'data' 'BIO_ACCEPT *'
|   |   | |   `-IfStmt 0x2022a7e1b88 <line:475:20, line:502:24> has_else
|   |   | |     |-BinaryOperator 0x2022a7d3d90 <line:475:24, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '&&'
|   |   | |     | |-BinaryOperator 0x2022a7d3c90 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:475:24, col:31> 'int' '=='
|   |   | |     | | |-ImplicitCastExpr 0x2022a7d3c60 <col:24> 'long' <LValueToRValue>
|   |   | |     | | | `-DeclRefExpr 0x2022a7d3c18 <col:24> 'long' lvalue ParmVar 0x2022a7d2428 'num' 'long'
|   |   | |     | | `-ImplicitCastExpr 0x2022a7d3c78 <col:31> 'long' <IntegralCast>
|   |   | |     | |   `-IntegerLiteral 0x2022a7d3c38 <col:31> 'int' 1
|   |   | |     | `-BinaryOperator 0x2022a7d3d70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | |     |   |-ImplicitCastExpr 0x2022a7d3d58 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:475:36> 'void *' <LValueToRValue>
|   |   | |     |   | `-DeclRefExpr 0x2022a7d3cb0 <col:36> 'void *' lvalue ParmVar 0x2022a7d24a8 'ptr' 'void *'
|   |   | |     |   `-ParenExpr 0x2022a7d3d38 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |   | |     |     `-CStyleCastExpr 0x2022a7d3d10 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |     |       `-IntegerLiteral 0x2022a7d3cd0 <col:26> 'int' 0
|   |   | |     |-CompoundStmt 0x2022a7d3f58 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:475:49, line:478:13>
|   |   | |     | |-BinaryOperator 0x2022a7d3e48 <line:476:17, col:31> 'char **' '='
|   |   | |     | | |-DeclRefExpr 0x2022a7d3db0 <col:17> 'char **' lvalue Var 0x2022a7d2848 'pp' 'char **'
|   |   | |     | | `-CStyleCastExpr 0x2022a7d3e20 <col:22, col:31> 'char **' <BitCast>
|   |   | |     | |   `-ImplicitCastExpr 0x2022a7d3e08 <col:31> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   | |     | |     `-DeclRefExpr 0x2022a7d3dd0 <col:31> 'void *' lvalue ParmVar 0x2022a7d24a8 'ptr' 'void *'
|   |   | |     | `-BinaryOperator 0x2022a7d3f38 <line:477:17, col:29> 'char *' '='
|   |   | |     |   |-UnaryOperator 0x2022a7d3ea0 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
|   |   | |     |   | `-ImplicitCastExpr 0x2022a7d3e88 <col:18> 'char **' <LValueToRValue>
|   |   | |     |   |   `-DeclRefExpr 0x2022a7d3e68 <col:18> 'char **' lvalue Var 0x2022a7d2848 'pp' 'char **'
|   |   | |     |   `-ImplicitCastExpr 0x2022a7d3f20 <col:23, col:29> 'char *' <LValueToRValue>
|   |   | |     |     `-MemberExpr 0x2022a7d3ef0 <col:23, col:29> 'char *' lvalue ->cache_accepting_serv 0x2022a7c7c48
|   |   | |     |       `-ImplicitCastExpr 0x2022a7d3ed8 <col:23> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |     |         `-DeclRefExpr 0x2022a7d3eb8 <col:23> 'BIO_ACCEPT *' lvalue Var 0x2022a7d27b0 'data' 'BIO_ACCEPT *'
|   |   | |     `-IfStmt 0x2022a7e1b60 <line:478:20, line:502:24> has_else
|   |   | |       |-BinaryOperator 0x2022a7d40f0 <line:478:24, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '&&'
|   |   | |       | |-BinaryOperator 0x2022a7d3ff0 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:478:24, col:31> 'int' '=='
|   |   | |       | | |-ImplicitCastExpr 0x2022a7d3fc0 <col:24> 'long' <LValueToRValue>
|   |   | |       | | | `-DeclRefExpr 0x2022a7d3f78 <col:24> 'long' lvalue ParmVar 0x2022a7d2428 'num' 'long'
|   |   | |       | | `-ImplicitCastExpr 0x2022a7d3fd8 <col:31> 'long' <IntegralCast>
|   |   | |       | |   `-IntegerLiteral 0x2022a7d3f98 <col:31> 'int' 2
|   |   | |       | `-BinaryOperator 0x2022a7d40d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | |       |   |-ImplicitCastExpr 0x2022a7d40b8 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:478:36> 'void *' <LValueToRValue>
|   |   | |       |   | `-DeclRefExpr 0x2022a7d4010 <col:36> 'void *' lvalue ParmVar 0x2022a7d24a8 'ptr' 'void *'
|   |   | |       |   `-ParenExpr 0x2022a7d4098 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |   | |       |     `-CStyleCastExpr 0x2022a7d4070 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       |       `-IntegerLiteral 0x2022a7d4030 <col:26> 'int' 0
|   |   | |       |-CompoundStmt 0x2022a7e13b0 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:478:49, line:481:13>
|   |   | |       | |-BinaryOperator 0x2022a7d41a8 <line:479:17, col:31> 'char **' '='
|   |   | |       | | |-DeclRefExpr 0x2022a7d4110 <col:17> 'char **' lvalue Var 0x2022a7d2848 'pp' 'char **'
|   |   | |       | | `-CStyleCastExpr 0x2022a7d4180 <col:22, col:31> 'char **' <BitCast>
|   |   | |       | |   `-ImplicitCastExpr 0x2022a7d4168 <col:31> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   | |       | |     `-DeclRefExpr 0x2022a7d4130 <col:31> 'void *' lvalue ParmVar 0x2022a7d24a8 'ptr' 'void *'
|   |   | |       | `-BinaryOperator 0x2022a7d4298 <line:480:17, col:29> 'char *' '='
|   |   | |       |   |-UnaryOperator 0x2022a7d4200 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
|   |   | |       |   | `-ImplicitCastExpr 0x2022a7d41e8 <col:18> 'char **' <LValueToRValue>
|   |   | |       |   |   `-DeclRefExpr 0x2022a7d41c8 <col:18> 'char **' lvalue Var 0x2022a7d2848 'pp' 'char **'
|   |   | |       |   `-ImplicitCastExpr 0x2022a7d4280 <col:23, col:29> 'char *' <LValueToRValue>
|   |   | |       |     `-MemberExpr 0x2022a7d4250 <col:23, col:29> 'char *' lvalue ->cache_peer_name 0x2022a7c7d28
|   |   | |       |       `-ImplicitCastExpr 0x2022a7d4238 <col:23> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |       |         `-DeclRefExpr 0x2022a7d4218 <col:23> 'BIO_ACCEPT *' lvalue Var 0x2022a7d27b0 'data' 'BIO_ACCEPT *'
|   |   | |       `-IfStmt 0x2022a7e1b38 <line:481:20, line:502:24> has_else
|   |   | |         |-BinaryOperator 0x2022a7e1548 <line:481:24, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '&&'
|   |   | |         | |-BinaryOperator 0x2022a7e1448 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:481:24, col:31> 'int' '=='
|   |   | |         | | |-ImplicitCastExpr 0x2022a7e1418 <col:24> 'long' <LValueToRValue>
|   |   | |         | | | `-DeclRefExpr 0x2022a7e13d0 <col:24> 'long' lvalue ParmVar 0x2022a7d2428 'num' 'long'
|   |   | |         | | `-ImplicitCastExpr 0x2022a7e1430 <col:31> 'long' <IntegralCast>
|   |   | |         | |   `-IntegerLiteral 0x2022a7e13f0 <col:31> 'int' 3
|   |   | |         | `-BinaryOperator 0x2022a7e1528 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | |         |   |-ImplicitCastExpr 0x2022a7e1510 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:481:36> 'void *' <LValueToRValue>
|   |   | |         |   | `-DeclRefExpr 0x2022a7e1468 <col:36> 'void *' lvalue ParmVar 0x2022a7d24a8 'ptr' 'void *'
|   |   | |         |   `-ParenExpr 0x2022a7e14f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |   | |         |     `-CStyleCastExpr 0x2022a7e14c8 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |         |       `-IntegerLiteral 0x2022a7e1488 <col:26> 'int' 0
|   |   | |         |-CompoundStmt 0x2022a7e1710 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:481:49, line:484:13>
|   |   | |         | |-BinaryOperator 0x2022a7e1600 <line:482:17, col:31> 'char **' '='
|   |   | |         | | |-DeclRefExpr 0x2022a7e1568 <col:17> 'char **' lvalue Var 0x2022a7d2848 'pp' 'char **'
|   |   | |         | | `-CStyleCastExpr 0x2022a7e15d8 <col:22, col:31> 'char **' <BitCast>
|   |   | |         | |   `-ImplicitCastExpr 0x2022a7e15c0 <col:31> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   | |         | |     `-DeclRefExpr 0x2022a7e1588 <col:31> 'void *' lvalue ParmVar 0x2022a7d24a8 'ptr' 'void *'
|   |   | |         | `-BinaryOperator 0x2022a7e16f0 <line:483:17, col:29> 'char *' '='
|   |   | |         |   |-UnaryOperator 0x2022a7e1658 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
|   |   | |         |   | `-ImplicitCastExpr 0x2022a7e1640 <col:18> 'char **' <LValueToRValue>
|   |   | |         |   |   `-DeclRefExpr 0x2022a7e1620 <col:18> 'char **' lvalue Var 0x2022a7d2848 'pp' 'char **'
|   |   | |         |   `-ImplicitCastExpr 0x2022a7e16d8 <col:23, col:29> 'char *' <LValueToRValue>
|   |   | |         |     `-MemberExpr 0x2022a7e16a8 <col:23, col:29> 'char *' lvalue ->cache_peer_serv 0x2022a7c7d98
|   |   | |         |       `-ImplicitCastExpr 0x2022a7e1690 <col:23> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |         |         `-DeclRefExpr 0x2022a7e1670 <col:23> 'BIO_ACCEPT *' lvalue Var 0x2022a7d27b0 'data' 'BIO_ACCEPT *'
|   |   | |         `-IfStmt 0x2022a7e1b10 <line:484:20, line:502:24> has_else
|   |   | |           |-BinaryOperator 0x2022a7e17a8 <line:484:24, col:31> 'int' '=='
|   |   | |           | |-ImplicitCastExpr 0x2022a7e1778 <col:24> 'long' <LValueToRValue>
|   |   | |           | | `-DeclRefExpr 0x2022a7e1730 <col:24> 'long' lvalue ParmVar 0x2022a7d2428 'num' 'long'
|   |   | |           | `-ImplicitCastExpr 0x2022a7e1790 <col:31> 'long' <IntegralCast>
|   |   | |           |   `-IntegerLiteral 0x2022a7e1750 <col:31> 'int' 4
|   |   | |           |-CompoundStmt 0x2022a7e1a68 <col:34, line:501:13>
|   |   | |           `-BinaryOperator 0x2022a7e1af0 <line:502:17, col:24> 'long' '='
|   |   | |             |-DeclRefExpr 0x2022a7e1a78 <col:17> 'long' lvalue Var 0x2022a7d26e0 'ret' 'long'
|   |   | |             `-ImplicitCastExpr 0x2022a7e1ad8 <col:23, col:24> 'long' <IntegralCast>
|   |   | |               `-UnaryOperator 0x2022a7e1ac0 <col:23, col:24> 'int' prefix '-'
|   |   | |                 `-IntegerLiteral 0x2022a7e1a98 <col:24> 'int' 1
|   |   | `-BinaryOperator 0x2022a7e1c68 <line:504:13, col:20> 'long' '='
|   |   |   |-DeclRefExpr 0x2022a7e1bf0 <col:13> 'long' lvalue Var 0x2022a7d26e0 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x2022a7e1c50 <col:19, col:20> 'long' <IntegralCast>
|   |   |     `-UnaryOperator 0x2022a7e1c38 <col:19, col:20> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x2022a7e1c10 <col:20> 'int' 1
|   |   |-BreakStmt 0x2022a7e1cc8 <line:505:9>
|   |   |-BreakStmt 0x2022a7e1cf0 <line:508:9>
|   |   |-BreakStmt 0x2022a7e1d70 <line:511:9>
|   |   |-BinaryOperator 0x2022a7e1dd8 <line:514:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x2022a7e1d78 <col:9> 'long' lvalue Var 0x2022a7d26e0 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x2022a7e1dc0 <col:15> 'long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x2022a7e1d98 <col:15> 'int' 0
|   |   |-BreakStmt 0x2022a7e1df8 <line:515:9>
|   |   |-BreakStmt 0x2022a7e1e00 <line:517:9>
|   |   |-BinaryOperator 0x2022a7e1ee8 <line:519:9, col:32> 'int' '='
|   |   | |-MemberExpr 0x2022a7e1e40 <col:9, col:15> 'int' lvalue ->bind_mode 0x2022a7c7858
|   |   | | `-ImplicitCastExpr 0x2022a7e1e28 <col:9> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2022a7e1e08 <col:9> 'BIO_ACCEPT *' lvalue Var 0x2022a7d27b0 'data' 'BIO_ACCEPT *'
|   |   | `-CStyleCastExpr 0x2022a7e1ec0 <col:27, col:32> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x2022a7e1ea8 <col:32> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x2022a7e1e70 <col:32> 'long' lvalue ParmVar 0x2022a7d2428 'num' 'long'
|   |   |-BreakStmt 0x2022a7e1f08 <line:520:9>
|   |   |-BinaryOperator 0x2022a7e1ff0 <line:522:9, col:27> 'long' '='
|   |   | |-DeclRefExpr 0x2022a7e1f10 <col:9> 'long' lvalue Var 0x2022a7d26e0 'ret' 'long'
|   |   | `-CStyleCastExpr 0x2022a7e1fc8 <col:15, col:27> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x2022a7e1fb0 <col:21, col:27> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     `-MemberExpr 0x2022a7e1f68 <col:21, col:27> 'int' lvalue ->bind_mode 0x2022a7c7858
|   |   |       `-ImplicitCastExpr 0x2022a7e1f50 <col:21> 'BIO_ACCEPT *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x2022a7e1f30 <col:21> 'BIO_ACCEPT *' lvalue Var 0x2022a7d27b0 'data' 'BIO_ACCEPT *'
|   |   |-BreakStmt 0x2022a7e2010 <line:523:9>
|   |   |-BreakStmt 0x2022a7e2018 <line:531:9>
|   |   |-DefaultStmt 0x2022a7e20a0 <line:533:5, line:534:15>
|   |   | `-BinaryOperator 0x2022a7e2080 <col:9, col:15> 'long' '='
|   |   |   |-DeclRefExpr 0x2022a7e2020 <col:9> 'long' lvalue Var 0x2022a7d26e0 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x2022a7e2068 <col:15> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x2022a7e2040 <col:15> 'int' 0
|   |   `-BreakStmt 0x2022a7e20c0 <line:535:9>
|   `-ReturnStmt 0x2022a7e21f8 <line:537:5, col:16>
|     `-ImplicitCastExpr 0x2022a7e21e0 <col:12, col:16> 'long' <LValueToRValue>
|       `-ParenExpr 0x2022a7e21c0 <col:12, col:16> 'long' lvalue
|         `-DeclRefExpr 0x2022a7e21a0 <col:13> 'long' lvalue Var 0x2022a7d26e0 'ret' 'long'
|-FunctionDecl 0x2022a7df390 <line:540:1, line:547:1> line:540:12 invalid acpt_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x2022a7e2260 <col:22, col:27> col:27 invalid bp 'int *'
| |-ParmVarDecl 0x2022a7e22e0 <col:31, col:43> col:43 used str 'const char *'
| `-CompoundStmt 0x2022a7df928 <line:541:1, line:547:1>
|   |-DeclStmt 0x2022a7df570 <line:542:5, col:15>
|   | |-VarDecl 0x2022a7df470 <col:5, col:9> col:9 used n 'int'
|   | `-VarDecl 0x2022a7df4f0 <col:5, col:12> col:12 used ret 'int'
|   |-BinaryOperator 0x2022a7df828 <line:544:5, col:19> 'int' '='
|   | |-DeclRefExpr 0x2022a7df588 <col:5> 'int' lvalue Var 0x2022a7df470 'n' 'int'
|   | `-ImplicitCastExpr 0x2022a7df810 <col:9, col:19> 'int' <IntegralCast>
|   |   `-CallExpr 0x2022a7df7d0 <col:9, col:19> 'unsigned long long'
|   |     |-ImplicitCastExpr 0x2022a7df7b8 <col:9> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2022a7df700 <col:9> 'unsigned long long (const char *)' Function 0x2022a7df5f0 'strlen' 'unsigned long long (const char *)'
|   |     `-ImplicitCastExpr 0x2022a7df7f8 <col:16> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2022a7df738 <col:16> 'const char *' lvalue ParmVar 0x2022a7e22e0 'str' 'const char *'
|   `-ReturnStmt 0x2022a7df918 <line:546:5, col:16>
|     `-ImplicitCastExpr 0x2022a7df900 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x2022a7df8e0 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x2022a7df8c0 <col:13> 'int' lvalue Var 0x2022a7df4f0 'ret' 'int'
|-FunctionDecl 0x2022a7df5f0 <line:544:9> col:9 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x2022a7df690 <<invalid sloc>> <invalid sloc> 'const char *'
`-FunctionDecl 0x2022a7dfa50 <line:549:1, line:560:1> line:549:6 invalid BIO_new_accept 'int *(const char *)'
  |-ParmVarDecl 0x2022a7df968 <col:21, col:33> col:33 used str 'const char *'
  `-CompoundStmt 0x2022a7dffc8 <line:550:1, line:560:1>
    |-IfStmt 0x2022a7dfd90 <line:554:5, line:555:21>
    | |-OpaqueValueExpr 0x2022a7dfd78 <<invalid sloc>> '_Bool'
    | `-ReturnStmt 0x2022a7dfd68 <col:9, col:21>
    |   `-ImplicitCastExpr 0x2022a7dfd50 <col:16, col:21> 'int *' <NullToPointer>
    |     `-ParenExpr 0x2022a7dfd30 <col:16, col:21> 'void *'
    |       `-ParenExpr 0x2022a7dfd10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
    |         `-CStyleCastExpr 0x2022a7dfce8 <col:18, col:26> 'void *' <NullToPointer>
    |           `-IntegerLiteral 0x2022a7dfca8 <col:26> 'int' 0
    `-ReturnStmt 0x2022a7dffb8 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:559:5, col:17>
      `-ImplicitCastExpr 0x2022a7dffa0 <col:12, col:17> 'int *' <NullToPointer>
        `-ParenExpr 0x2022a7dff80 <col:12, col:17> 'void *'
          `-ParenExpr 0x2022a7dff60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
            `-CStyleCastExpr 0x2022a7dff38 <col:18, col:26> 'void *' <NullToPointer>
              `-IntegerLiteral 0x2022a7dfef8 <col:26> 'int' 0
