TranslationUnitDecl 0x1c2e55c6748 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1c2e55c6fe0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1c2e55c6ce0 '__int128'
|-TypedefDecl 0x1c2e55c7050 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1c2e55c6d00 'unsigned __int128'
|-TypedefDecl 0x1c2e55c7388 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1c2e55c7140 'struct __NSConstantString_tag'
|   `-Record 0x1c2e55c70a8 '__NSConstantString_tag'
|-TypedefDecl 0x1c2e55c73f8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1c2e55c6920 'unsigned long long'
|-TypedefDecl 0x1c2e55c7490 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1c2e55c7450 'char *'
|   `-BuiltinType 0x1c2e55c67e0 'char'
|-TypedefDecl 0x1c2e55c7500 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1c2e55c7450 'char *'
|   `-BuiltinType 0x1c2e55c67e0 'char'
|-TypedefDecl 0x1c2e55c75c0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1c2e55c6920 'unsigned long long'
|-TypedefDecl 0x1c2e55c7630 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1c2e55c7450 'char *'
|   `-BuiltinType 0x1c2e55c67e0 'char'
|-FunctionDecl 0x1c2e7076220 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1c2e70762c0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1c2e7076330 <col:21> Implicit
|-FunctionDecl 0x1c2e7076388 prev 0x1c2e7076220 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1c2e70760b0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1c2e7076478 <col:21> Inherited Implicit
|-TypedefDecl 0x1c2e70764b8 prev 0x1c2e55c73f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1c2e55c6920 'unsigned long long'
|-TypedefDecl 0x1c2e7076560 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1c2e7076530 'size_t' sugar
|   |-Typedef 0x1c2e70764b8 'size_t'
|   `-BuiltinType 0x1c2e55c6920 'unsigned long long'
|-TypedefDecl 0x1c2e70765d0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1c2e55c6880 'long long'
|-TypedefDecl 0x1c2e7076640 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1c2e55c6880 'long long'
|-TypedefDecl 0x1c2e70766b0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1c2e55c68c0 'unsigned short'
|-TypedefDecl 0x1c2e7076720 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1c2e55c68c0 'unsigned short'
|-TypedefDecl 0x1c2e7076790 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1c2e55c68c0 'unsigned short'
|-TypedefDecl 0x1c2e7076800 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1c2e55c6840 'int'
|-TypedefDecl 0x1c2e7076870 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1c2e55c6860 'long'
|-TypedefDecl 0x1c2e70768e0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1c2e55c6880 'long long'
|-TypedefDecl 0x1c2e7076970 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1c2e7076940 '__time64_t' sugar
|   |-Typedef 0x1c2e70768e0 '__time64_t'
|   `-BuiltinType 0x1c2e55c6880 'long long'
|-FunctionDecl 0x1c2e7076ae8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1c2e7076d08 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1c2e70acfa0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1c2e7076e48 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1c2e7076ec0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1c2e7076f38 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1c2e7076fb8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1c2e70acd40 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1c2e70ad080 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1c2e70ad140 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1c2e70ad2b0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1c2e70ad260 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1c2e70ad200 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1c2e70ad120 'struct threadlocaleinfostruct'
|       `-Record 0x1c2e70bbe30 'threadlocaleinfostruct'
|-TypedefDecl 0x1c2e70ad3c0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1c2e70ad370 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1c2e70ad310 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1c2e70ad1e0 'struct threadmbcinfostruct'
|       `-Record 0x1c2e70ad140 'threadmbcinfostruct'
|-RecordDecl 0x1c2e70ad418 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1c2e70ad4d0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1c2e70ad590 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1c2e70ad620 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1c2e70ad6b0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1c2e70ad768 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1c2e70ad710 'struct localeinfo_struct' sugar
|   `-RecordType 0x1c2e70ad570 'struct localeinfo_struct'
|     `-Record 0x1c2e70ad4d0 'localeinfo_struct'
|-TypedefDecl 0x1c2e70ad840 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1c2e70ad7f0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1c2e70ad710 'struct localeinfo_struct' sugar
|     `-RecordType 0x1c2e70ad570 'struct localeinfo_struct'
|       `-Record 0x1c2e70ad4d0 'localeinfo_struct'
|-RecordDecl 0x1c2e70ad8b8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1c2e70ad970 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1c2e70ad9e8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1c2e70adaa8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1c2e70adb40 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1c2e70adbb0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1c2e70adc68 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1c2e70adc10 'struct localerefcount' sugar
|   `-RecordType 0x1c2e70ad950 'struct localerefcount'
|     `-Record 0x1c2e70ad8b8 'localerefcount'
|-RecordDecl 0x1c2e70bbe30 prev 0x1c2e70ad080 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1c2e70bbeb0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1c2e70bbf28 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1c2e70bbf98 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1c2e70bc008 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1c2e70bc078 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1c2e70bc238 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1c2e70bc2a8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1c2e70bc318 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1c2e70bc388 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1c2e70bc3f8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1c2e70bc468 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1c2e70bc4c0 parent 0x1c2e55c6748 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1c2e70bc650 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1c2e70bc6c0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1c2e70bc730 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1c2e70bc7a0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1c2e70bc840 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1c2e70bc8b0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1c2e70bc9c0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1c2e70bcaf8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1c2e70bcba8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1c2e70bcb50 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1c2e70ad120 'struct threadlocaleinfostruct'
|     `-Record 0x1c2e70bbe30 'threadlocaleinfostruct'
|-RecordDecl 0x1c2e70bcc40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x1c2e70bcd00 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1c2e70bcd78 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x1c2e70b7df0 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x1c2e70b7e60 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x1c2e70b7ed0 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x1c2e70b7f40 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x1c2e70b7fb0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x1c2e70b8020 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x1c2e70b8090 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x1c2e70b8140 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x1c2e70b80f0 'struct _iobuf' sugar
|   `-RecordType 0x1c2e70bcce0 'struct _iobuf'
|     `-Record 0x1c2e70bcc40 '_iobuf'
|-FunctionDecl 0x1c2e70b8378 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x1c2e70b8448 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1c2e55c6880 'long long'
|-FunctionDecl 0x1c2e70b8628 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c2e70b84b0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x1c2e70b8920 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c2e70b8700 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x1c2e70b8778 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1c2e70b8cd0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x1c2e70b8a00 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x1c2e70b8a80 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x1c2e70b8b00 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x1c2e70c3010 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1c2e70c2ea0 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x1c2e70c3240 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x1c2e70c3100 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1c2e70c33f0 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c2e70c3310 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x1c2e70c35e0 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c2e70c38d8 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1c2e70c36b0 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x1c2e70c3730 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x1c2e70c3a90 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c2e70c39b0 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x1c2e70c3c40 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c2e70c3b60 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x1c2e70c3df0 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c2e70c3d10 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1c2e70c3fb8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c2e70c3ed8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x1c2e70c4148 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c2e70c44b0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x1c2e70c4210 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1c2e70c4308 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x1c2e70c4868 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x1c2e70c4590 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x1c2e70c4610 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x1c2e70c4688 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x1c2e70c4a28 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c2e70c4948 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1c2e70c4cf0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1c2e70c4b00 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x1c2e70c4b80 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x1c2e70bfe70 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c2e70c0268 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x1c2e70c0308 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1c2e70c0370 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1c2e70c03e8 prev 0x1c2e70c0268 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1c2e70c0040 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x1c2e70c00c0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x1c2e70c0498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e70c0910 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x1c2e70c0640 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x1c2e70c06c0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x1c2e70c0740 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x1c2e70c0c30 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x1c2e70c0cd0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1c2e70c0d38 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1c2e70c0db0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x1c2e70bce40 prev 0x1c2e70c0c30 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1c2e70c09f0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1c2e70c0a70 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x1c2e70bcf38 <col:40> Inherited printf 2 3
|-FunctionDecl 0x1c2e70bd100 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1c2e70bcf80 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1c2e70bd000 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1c2e70bd358 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c2e70bd1e0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x1c2e70bd258 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x1c2e70bd588 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c2e70bd438 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x1c2e70bd880 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x1c2e70bd660 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1c2e70bd6d8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x1c2e70bdd18 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1c2e70bddb8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1c2e70c5ed0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1c2e70c5f38 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1c2e70c5fa0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1c2e70c6028 prev 0x1c2e70bdd18 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1c2e70bd960 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x1c2e70bd9d8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e70bda50 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c2e70bdac8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x1c2e70c6530 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1c2e70c6118 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x1c2e70c6190 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e70c6208 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e70c6280 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c2e70c62f8 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x1c2e70c69f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1c2e70c6720 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x1c2e70c67a0 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x1c2e70c6818 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x1c2e70c6aa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e70c1f38 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1c2e70c6bf0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1c2e70c6c70 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x1c2e70c6cf0 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x1c2e70c6d68 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x1c2e70c22e0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1c2e70c2380 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1c2e70c23e8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1c2e70c2460 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1c2e70c24c8 prev 0x1c2e70c22e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1c2e70c2118 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x1c2e70c2198 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x1c2e70c26a8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1c2e70c2578 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e70c2ae8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e70c27e8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x1c2e70c2868 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x1c2e70c2900 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c2e70c2ba0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e70c4ec0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1c2e70c2ce0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1c2e70c2d60 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1c2e70c51b0 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e70c4f98 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1c2e70c5018 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1c2e70c5090 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e70c5510 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x1c2e70c5290 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1c2e70c5368 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x1c2e70c58c8 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1c2e70c55e8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x1c2e70c5668 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x1c2e70c56e8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x1c2e70c5b28 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1c2e70c59a8 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x1c2e70beea8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1c2e70c5bf8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1c2e70c5c78 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x1c2e70c5cf8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x1c2e70bf108 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1c2e70bef88 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1c2e70bf5c8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1c2e70bf668 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1c2e70bf6d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1c2e70bf738 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1c2e70bf7a0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1c2e70bf828 prev 0x1c2e70bf5c8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1c2e70bf210 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x1c2e70bf288 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e70bf300 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c2e70bf378 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x1c2e70bf9f0 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c2e70bf910 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1c2e70bfb80 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c2e70bfd08 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c2e70c80b0 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x1c2e70bfdd8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x1c2e70c7f00 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1c2e70c83d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1c2e70c8290 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x1c2e70c8480 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e70c86a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c2e70c85c0 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x1c2e70c88c0 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1c2e70c8778 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1c2e70c8a70 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c2e70c8990 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x1c2e70c8cc0 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1c2e70c8b48 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x1c2e70c8bc8 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x1c2e70c0e80 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1c2e70c0f20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1c2e70c0f90 <col:40> Implicit printf 1 2
|-FunctionDecl 0x1c2e70c0ff8 prev 0x1c2e70c0e80 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x1c2e70c8da0 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x1c2e70c10e8 <col:40> Inherited printf 1 2
|-FunctionDecl 0x1c2e70c1218 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1c2e70c1138 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x1c2e70c1468 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c2e70c12f0 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x1c2e70c1368 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1c2e70c1628 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c2e70c1548 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x1c2e70c1848 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1c2e70c1700 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x1c2e70c1a98 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c2e70c1920 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x1c2e70c1998 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1c2e70c1c58 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1c2e70c1b78 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1c2e7115110 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1c2e70c1d30 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x1c2e70c1db0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1c2e71152d0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1c2e71151f0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1c2e7115560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1c2e7115480 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1c2e7115608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1c2e7115800 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1c2e7115728 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1c2e7115990 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c2e7115c38 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1c2e7115cd8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1c2e7115d48 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1c2e7115db0 prev 0x1c2e7115c38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1c2e7115b20 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1c2e7115f88 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1c2e7115e58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e7119390 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e7119158 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1c2e71191d0 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c2e7119440 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e7119668 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1c2e7119588 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x1c2e71198b8 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e7119740 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1c2e71197b8 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e7119c78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x1c2e7119a50 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x1c2e7119ad0 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x1c2e7119d28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e7119f50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c2e7119e70 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x1c2e7116198 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1c2e7116050 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x1c2e7116380 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x1c2e71167d0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x1c2e7116448 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1c2e71164c8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x1c2e7116548 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x1c2e71165c0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1c2e7116c50 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c2e71168c0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x1c2e7116938 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e71169b0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c2e7116a30 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x1c2e7118070 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c2e7116d40 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1c2e7116db8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c2e7116e38 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x1c2e7118238 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1c2e7118158 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x1c2e7118610 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1c2e71186b0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1c2e7118718 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1c2e7118790 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1c2e71187f8 prev 0x1c2e7118610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1c2e71183d0 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x1c2e7118450 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x1c2e71189d8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1c2e71188a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e7118dc8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e7118ae8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x1c2e7118b68 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x1c2e7118be0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c2e7118e80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e7117160 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x1c2e7118fc8 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x1c2e7117060 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x1c2e7117458 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e7117240 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x1c2e71172c0 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1c2e7117338 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e71178e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c2e7117600 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x1c2e7117678 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e71176f8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x1c2e71179a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e7117f70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e7117be0 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x1c2e7117c58 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7117cd8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x1c2e7117d50 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c2e711a090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e711a3f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c2e711a1d8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x1c2e711a250 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c2e711a2d0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x1c2e711a788 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e711a4d8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x1c2e711a550 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e711a5d0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x1c2e711a648 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e711a9e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x1c2e711aa88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e711ad40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x1c2e711abd0 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x1c2e7113020 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x1c2e711ae18 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x1c2e711ae90 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1c2e71132a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1c2e71131c0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x1c2e7113348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e7113608 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c2e7113490 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x1c2e7113508 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x1c2e7113a20 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c2e7113ac0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1c2e7113b28 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1c2e7113b90 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c2e7113c10 <col:40> Implicit printf 2 0
|-FunctionDecl 0x1c2e7113c78 prev 0x1c2e7113a20 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1c2e71136e0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1c2e7113760 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x1c2e71137d8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1c2e7113d78 <col:40> Inherited printf 2 0
|-FunctionDecl 0x1c2e7114030 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c2e71140d0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1c2e7114138 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1c2e71141a0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c2e7114220 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1c2e7114288 prev 0x1c2e7114030 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1c2e7113dc0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1c2e7113e40 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1c2e7113eb8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1c2e7114388 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1c2e71145e8 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1c2e71143d0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1c2e7114450 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1c2e71144c8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e71148e0 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1c2e71146c8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1c2e7114748 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1c2e71147c0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e7114c28 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c2e7114cc8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1c2e7114d30 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c2e7114da8 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1c2e7114e10 prev 0x1c2e7114c28 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1c2e71149c8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1c2e7114a40 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1c2e7114f08 <col:40> Inherited printf 1 0
|-FunctionDecl 0x1c2e711e208 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c2e711e2a8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1c2e711e310 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c2e711e388 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x1c2e711e3f0 prev 0x1c2e711e208 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1c2e7114f58 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x1c2e711e0d0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1c2e711e4e8 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x1c2e711e6b0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1c2e711e538 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x1c2e711e5b0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e711e908 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1c2e711e790 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1c2e711e808 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e711ee68 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c2e711ef08 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1c2e711ef70 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1c2e711efd8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1c2e711f040 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c2e711f0e0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1c2e711f148 prev 0x1c2e711ee68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1c2e711eaa8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x1c2e711eb20 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e711eba0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1c2e711ec18 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1c2e711f338 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1c2e711f208 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e711f7a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c2e711f388 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1c2e711f400 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e711f478 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e711f4f8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1c2e711f570 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e711fbe8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c2e711f8a0 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1c2e711f918 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e711f990 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e711fa10 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1c2e711fa88 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e711ffb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c2e711fda0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1c2e711fe18 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e711fe98 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1c2e7120070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e7120560 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c2e71202b0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1c2e7120328 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e71203a8 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1c2e7120420 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1c2e7120620 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e7120a18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c2e7120768 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1c2e71207e0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7120860 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1c2e71208d8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e7120dd8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1c2e7120b08 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1c2e7120b88 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1c2e7120c00 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e71211a0 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1c2e7121240 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1c2e71212a8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1c2e7121320 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1c2e7121388 prev 0x1c2e71211a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1c2e7120f80 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1c2e7121000 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1c2e7121568 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1c2e7121438 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e7121990 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c2e7121a30 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1c2e7121a98 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1c2e7121b00 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c2e7121b80 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1c2e7121be8 prev 0x1c2e7121990 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1c2e7121678 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1c2e71216f8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1c2e7121770 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1c2e7121dd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1c2e7121ca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e711d0c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c2e711d160 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1c2e711d1c8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1c2e711d230 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c2e711d2b0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1c2e711d318 prev 0x1c2e711d0c0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1c2e7121e20 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1c2e7121ea0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1c2e7121f18 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1c2e711d418 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1c2e711d5e0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1c2e711d468 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1c2e711d4e0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e711d8d8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c2e711d6c0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1c2e711d738 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c2e711d7b8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1c2e711dc70 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c2e711d9c0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1c2e711da38 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e711dab8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1c2e711db30 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e711ded8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1c2e711dd58 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1c2e711ddd8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1c2e7122110 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1c2e711dfb8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1c2e7122400 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c2e71221e8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1c2e7122260 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c2e71222e0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1c2e71226f8 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1c2e71224e0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1c2e7122560 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1c2e71225d8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e7122958 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1c2e71227e0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1c2e7122858 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e7122ce8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c2e7122a38 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1c2e7122ab0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7122b30 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1c2e7122ba8 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e7122eb8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1c2e7122dd8 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1c2e7123120 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1c2e7122f90 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1c2e7123008 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e71232e0 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c2e7123200 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1c2e7123470 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c2e71236b8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e7123540 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1c2e71235b8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e7123910 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e7123798 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1c2e7123810 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e7123b68 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e71239f0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1c2e7123a68 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e7123f18 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e7123c48 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1c2e7123cc0 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c2e7123d38 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e711c1d0 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e7124000 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1c2e7124078 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c2e711c0b0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e711c4c8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e711c2b8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1c2e711c330 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c2e711c3a8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e711c7c0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e711c5a8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1c2e711c628 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x1c2e711c6a0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e711cab8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e711c8a0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1c2e711c920 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1c2e711c998 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e711cdb0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e711cb98 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1c2e711cc18 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1c2e711cc90 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e71262b0 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e711ce90 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1c2e711cf10 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x1c2e711cf88 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c2e711d000 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e7126648 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e7126398 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1c2e7126418 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1c2e7126490 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c2e7126508 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e71269e0 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e7126730 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1c2e71267b0 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1c2e7126828 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c2e71268a0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e7126e78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e7126b90 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1c2e7126c10 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1c2e7126c88 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c2e7126f30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e7128480 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e7127078 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1c2e7128170 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e71281f0 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x1c2e7128268 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e7128820 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e7128570 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1c2e71285e8 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7128668 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1c2e71286e0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e7128d70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e7128a10 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x1c2e7128a90 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x1c2e7128b08 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1c2e7128b80 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1c2e7128e30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e712b3d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e7128f78 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1c2e7128ff0 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7129070 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x1c2e71290e8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c2e712b1a0 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e712b818 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e712b4d0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1c2e712b548 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e712b5c8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x1c2e712b640 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c2e712b6b8 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e712ba88 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e712b910 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1c2e712b988 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e712bce0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e712bb68 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x1c2e712bbe0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e712bfd0 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e712bdc0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1c2e712be38 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c2e712beb0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e7127290 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e712c0b8 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x1c2e712c130 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c2e7127170 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e71276e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e7127438 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1c2e71274b0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7127530 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1c2e71275a8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c2e71277a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e7127ba0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e71278f0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1c2e7127968 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e71279e8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1c2e7127a60 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e7124130 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e7127c90 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1c2e7127d08 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7127d80 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7127e00 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1c2e7127e78 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e7124670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e7124328 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x1c2e71243a0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7124420 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x1c2e7124498 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1c2e7124510 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1c2e7124738 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e7124bb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e7124888 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1c2e7124900 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7124980 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x1c2e71249f8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c2e7124a70 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e71291e0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e7124cb0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1c2e7124d28 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7124da0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7124e20 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1c2e7124e98 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c2e7124f10 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e71295a0 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1c2e71292d8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1c2e7129350 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1c2e71293d0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1c2e7129810 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1c2e71296a0 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1c2e7129a28 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1c2e7129d08 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1c2e7129af0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1c2e7129b68 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1c2e7129f50 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1c2e7129de0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1c2e712a190 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1c2e712a020 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x1c2e712a318 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1c2e712a550 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1c2e712a3e0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1c2e712a458 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x1c2e712a700 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1c2e712a628 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1c2e712a9a8 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1c2e712a7d0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1c2e712a848 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1c2e712ad50 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x1c2e712aa80 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1c2e712ab00 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x1c2e712ab78 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x1c2e712b050 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1c2e712ae30 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1c2e712aea8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1c2e71252f8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1c2e712b128 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1c2e7125150 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1c2e7125600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1c2e7125490 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1c2e71256a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e7125968 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1c2e71257e8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1c2e7125c70 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c2e7125a38 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1c2e7125ab0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1c2e7125ec0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c2e7125d48 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1c2e7125dc0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1c2e712d1c0 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c2e7125f98 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1c2e712d370 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c2e712d290 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1c2e712d520 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c2e712d440 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1c2e712d8b8 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c2e712d5f0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1c2e712d668 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e712d6e0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e712dba8 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c2e712d998 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1c2e712da10 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e712da88 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e712de98 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c2e712dc88 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1c2e712dd00 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e712dd78 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e712e1d0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c2e712df78 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1c2e712dff0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e712e068 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e712e4d0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c2e712e2b0 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e712e328 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e712e720 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c2e712e5a8 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e712e620 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e712e970 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c2e712e7f8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e712e870 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e712ebc0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c2e712ea48 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e712eac0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e712ef78 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c2e712ec98 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1c2e712ed10 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c2e712ed88 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1c2e712f3f0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c2e712f058 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1c2e712f0d0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e712f148 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e712f1e0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e712f7a8 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c2e712f4d8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c2e712f550 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e712f5c8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e712fa98 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c2e712f888 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1c2e712f900 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e712f978 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e712fd88 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c2e712fb78 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c2e712fbf0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c2e712fc68 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1c2e7130110 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c2e712fe68 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c2e712fee0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e712ff58 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e712ffd0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e71305a0 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c2e7130218 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c2e7130290 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7130308 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c2e7130380 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1c2e7130aa8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c2e7130688 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c2e7130700 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7130778 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e71307f0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e7130868 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e7130e68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c2e7130c58 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c2e7130cd0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7130d48 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1c2e7130f20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e7131430 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c2e7131120 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c2e7131200 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7131278 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c2e71312f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1c2e71314f0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e71317a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c2e7131630 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1c2e71316a8 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1c2e7131960 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c2e7131880 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1c2e7131c40 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c2e7131a30 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1c2e7131aa8 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e7131b20 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e7131e98 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c2e7131d20 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e7131d98 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e7139090 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c2e7131f70 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c2e7131fe8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c2e7132060 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x1c2e7139418 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c2e7139170 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c2e71391e8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7139260 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e71392d8 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e71395e0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c2e7139500 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x1c2e7139828 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c2e71396b0 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e7139728 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e7139b30 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e7139900 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e7139978 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e7139d80 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e7139c08 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e7139c80 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e7139fd0 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e7139e58 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e7139ed0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e713a398 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e713a0c8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c2e713a140 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c2e713a1b8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e713a688 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e713a478 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c2e713a4f0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c2e713a568 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e713a978 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e713a768 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c2e713a7e0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c2e713a858 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e713ad38 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e713aa58 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1c2e713aad0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e713ab48 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e7138080 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e713ae18 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1c2e713ae90 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e713af08 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e7138370 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e7138160 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1c2e71381d8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e7138250 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e71387c0 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e7138450 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1c2e71384c8 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c2e7138540 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c2e71385b8 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e7138b50 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e71388a8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1c2e7138920 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c2e7138998 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c2e7138a10 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e7138ee0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e7138c38 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1c2e7138cb0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c2e7138d28 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c2e7138da0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e7133340 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e7138fc8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c2e7133030 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e71330a8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e7133120 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e71336d0 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e7133428 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c2e71334a0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7133518 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e7133590 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e7133a60 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e71337b8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c2e7133830 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e71338a8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e7133920 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e7133f68 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e7133b48 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c2e7133bc0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7133c38 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c2e7133cb0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c2e7133d28 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e713b418 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e713b0d8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c2e713b150 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e713b1c8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c2e713b240 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c2e713b2b8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e713b848 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e713b508 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c2e713b580 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e713b5f8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c2e713b670 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c2e713b6e8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e713bab0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e713b938 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e713b9b0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e713bd00 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e713bb88 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e713bc00 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e713bfe8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e713bdd8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c2e713be50 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c2e713bec8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e71353e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e7135140 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c2e71351b8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7135230 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c2e71352a8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c2e71354a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e7135a18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e71355f0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c2e7135668 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e71356e0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7135758 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e71357d0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e7135f50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e7135c10 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c2e7135c88 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7135d00 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c2e7135d78 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1c2e7135df0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1c2e713c0c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e713c6d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e713c208 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c2e713c280 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e713c2f8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e713c370 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c2e713c3e8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c2e713c460 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e713cbd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c2e713c998 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c2e713ca10 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x1c2e713cc80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1c2e713cd98 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1c2e713d338 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c2e713d050 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c2e713d0e0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c2e713d158 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1c2e713d3f0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1c2e713d508 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1c2e713daa8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e713d7c8 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c2e713d840 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c2e713d8b8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x1c2e713db60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1c2e713dc80 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1c2e7136270 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e713df40 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c2e713dfb8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c2e713e030 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1c2e7136060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1c2e7136330 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1c2e7136450 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1c2e7136758 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1c2e7136578 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1c2e71365f0 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7136668 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x1c2e7137310 <line:37:1, line:44:1>
|   |-DeclStmt 0x1c2e71368a0 <line:38:5, col:21>
|   | `-VarDecl 0x1c2e7136838 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1c2e7136938 <line:39:5, col:13>
|   | `-VarDecl 0x1c2e71368d0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1c2e7136c90 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1c2e7136c78 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1c2e7136b90 <col:34> '<builtin fn type>' Function 0x1c2e7136a28 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1c2e7136bc8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1c2e7136838 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1c2e7136c00 <col:29> 'const wchar_t *' lvalue ParmVar 0x1c2e7136668 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1c2e7136f50 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1c2e7136cc0 <col:5> 'int' lvalue Var 0x1c2e71368d0 '_Ret' 'int'
|   | `-CallExpr 0x1c2e7136e90 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1c2e7136e78 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1c2e7136cf8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1c2e7133f68 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1c2e7136ed8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c2e7136d18 <col:27> 'wchar_t *' lvalue ParmVar 0x1c2e7136578 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1c2e7136ef0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c2e7136d38 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1c2e71365f0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1c2e7136f08 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c2e7136d58 <col:44> 'const wchar_t *' lvalue ParmVar 0x1c2e7136668 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1c2e7136f20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1c2e7136de0 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1c2e7136db8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1c2e7136d78 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1c2e7136f38 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1c2e7136e00 <col:59> 'va_list':'char *' lvalue Var 0x1c2e7136838 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1c2e71372a0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1c2e7137288 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1c2e71371d8 <col:34> '<builtin fn type>' Function 0x1c2e7137070 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1c2e7137210 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1c2e7136838 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1c2e7137300 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x1c2e71372e8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1c2e71372c8 <col:12> 'int' lvalue Var 0x1c2e71368d0 '_Ret' 'int'
|-FunctionDecl 0x1c2e7136a28 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1c2e7136ac8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1c2e7136b38 <col:34> Implicit
|-FunctionDecl 0x1c2e7137070 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1c2e7137110 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1c2e7137180 <col:34> Implicit
|-FunctionDecl 0x1c2e7137608 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x1c2e7137360 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x1c2e71373d8 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7137450 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c2e71374c8 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1c2e71378f0 <line:50:1, line:52:1>
|   `-ReturnStmt 0x1c2e71378e0 <line:51:5, col:62>
|     `-CallExpr 0x1c2e7137820 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x1c2e7137808 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1c2e71376e0 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1c2e7133f68 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1c2e7137868 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c2e7137700 <col:27> 'wchar_t *' lvalue ParmVar 0x1c2e7137360 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1c2e7137880 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1c2e7137720 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1c2e71373d8 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1c2e7137898 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c2e7137740 <col:44> 'const wchar_t *' lvalue ParmVar 0x1c2e7137450 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1c2e71378b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x1c2e71377c8 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x1c2e71377a0 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x1c2e7137760 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x1c2e71378c8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1c2e71377e8 <col:59> 'va_list':'char *' lvalue ParmVar 0x1c2e71374c8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1c2e7137b90 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x1c2e7137918 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x1c2e7137990 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7137a08 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c2e7137a80 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1c2e71441e8 <line:61:1, line:68:1>
|   |-DeclStmt 0x1c2e7137ce0 <line:62:5, col:21>
|   | `-VarDecl 0x1c2e7137c78 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1c2e7137d78 <line:63:5, col:13>
|   | `-VarDecl 0x1c2e7137d10 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1c2e7137e20 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1c2e7137e08 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1c2e7137d90 <col:34> '<builtin fn type>' Function 0x1c2e7136a28 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1c2e7137db0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x1c2e7137c78 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1c2e7137de8 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1c2e7137a80 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x1c2e7138020 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x1c2e7137e50 <col:5> 'int' lvalue Var 0x1c2e7137d10 '_Ret' 'int'
|   | `-CallExpr 0x1c2e7137f60 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1c2e7137f48 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1c2e7137e88 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1c2e7133f68 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1c2e7137fa8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c2e7137ea8 <col:27> 'wchar_t *' lvalue ParmVar 0x1c2e7137918 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1c2e7137fc0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c2e7137ec8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1c2e7137990 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1c2e7137fd8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c2e7137ee8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1c2e7137a08 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1c2e7137ff0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c2e7137f08 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1c2e7137a80 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x1c2e7138008 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1c2e7137f28 <col:64> 'va_list':'char *' lvalue Var 0x1c2e7137c78 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1c2e7144178 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1c2e7144160 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1c2e7138040 <col:34> '<builtin fn type>' Function 0x1c2e7137070 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1c2e7144140 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x1c2e7137c78 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1c2e71441d8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1c2e71441c0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1c2e71441a0 <col:12> 'int' lvalue Var 0x1c2e7137d10 '_Ret' 'int'
|-FunctionDecl 0x1c2e7144578 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1c2e7144238 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1c2e71442b0 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7144328 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c2e71443a0 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1c2e7144418 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1c2e7144800 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1c2e71447f0 <line:75:5, col:67>
|     `-CallExpr 0x1c2e7144730 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1c2e7144718 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1c2e7144658 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1c2e7133f68 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1c2e7144778 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c2e7144678 <col:27> 'wchar_t *' lvalue ParmVar 0x1c2e7144238 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1c2e7144790 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1c2e7144698 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1c2e71442b0 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1c2e71447a8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c2e71446b8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1c2e7144328 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1c2e71447c0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c2e71446d8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1c2e71443a0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1c2e71447d8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1c2e71446f8 <col:64> 'va_list':'char *' lvalue ParmVar 0x1c2e7144418 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1c2e7144a48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1c2e7144828 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1c2e71448a0 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1c2e7144c98 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c2e7144b20 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e7144b98 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e7144f80 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c2e7144d70 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c2e7144de8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c2e7144e60 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c2e71452c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c2e7145150 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1c2e71451c8 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1c2e7145378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e7145788 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e7145578 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1c2e71455f0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c2e7145668 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c2e7145840 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e7145af8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c2e7145980 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1c2e71459f8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1c2e7145de0 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e7145bd0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1c2e7145c48 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e7145cc0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e71461d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c2e7145f80 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c2e7145ff8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1c2e7146280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e7146758 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e7146480 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c2e71464f8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c2e7146570 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c2e7146810 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e7146ac8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c2e7146950 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1c2e71469c8 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1c2e7146db0 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e7146ba0 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c2e7146c18 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e7146c90 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e713f1d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c2e7146f50 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c2e7146fc8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7147040 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1c2e713f290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e713f810 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e713f490 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c2e713f508 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e713f580 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c2e713f5f8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c2e713f8d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e713fc20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c2e713fa10 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c2e713fa88 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c2e713fb00 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1c2e713ffa8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e713fd00 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c2e713fd78 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e713fdf0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e713fe68 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e7147320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1c2e7147240 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1c2e71473c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e7147740 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e71475c8 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c2e7147640 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c2e71477f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e7147a10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c2e7147930 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1c2e7147c58 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c2e7147ae0 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c2e7147b58 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c2e7147f58 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1c2e7147d38 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1c2e7147db0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x1c2e71412b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1c2e71480f0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1c2e7141110 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x1c2e7141368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e7141770 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1c2e71414b0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1c2e7141528 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1c2e71415a0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x1c2e7141bd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1c2e7141910 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1c2e7141988 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x1c2e7141a00 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x1c2e7141c88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e7143178 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1c2e7141dd0 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x1c2e7141e48 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1c2e7141ec0 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1c2e7141f38 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x1c2e71433d0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1c2e7143260 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1c2e7143610 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1c2e71434a0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x1c2e7143518 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x1c2e71437c8 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1c2e71436e8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x1c2e7143ab8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1c2e7143898 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x1c2e7143910 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1c2e7143d28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1c2e7143c50 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1c2e7143dd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c2e7143fe8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1c2e7143f10 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1c2e7148278 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1c2e71440b8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1c2e7148180 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1c2e71484c0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1c2e7148350 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1c2e71483c8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1c2e7148670 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1c2e7148598 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1c2e7148818 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1c2e7148740 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1c2e71489c8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c2e71488e8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1c2e7148b78 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c2e7148a98 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1c2e7148ef0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1c2e7148c50 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1c2e7148cc8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7148d40 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c2e7148db8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1c2e71422f0 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1c2e7148fe0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1c2e7149058 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e71490d0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7142120 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c2e7142198 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1c2e7142600 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1c2e71423e0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1c2e7142460 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1c2e71424e0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1c2e71427c0 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1c2e71426e0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1c2e7142ab0 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1c2e7142890 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1c2e7142910 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1c2e7142990 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1c2e7142c70 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1c2e7142b90 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1c2e7142fe8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1c2e7142d48 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1c2e7142dc0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c2e7142e38 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c2e7142eb0 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1c2e7151388 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c2e7151210 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1c2e7151288 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1c2e71516c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1c2e7151540 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1c2e71515c0 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1c2e7151770 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1c2e7151a28 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1c2e7151ac8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1c2e7151e08 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1c2e7151c90 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1c2e7151d10 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1c2e7151eb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1c2e714f1f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1c2e714f290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1c2e714f530 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1c2e714f450 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1c2e714f5d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1c2e714f858 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1c2e714f8f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1c2e714fba0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1c2e714fac0 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1c2e714fc48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1c2e714ff28 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1c2e714fe48 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1c2e714ffd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1c2e714b328 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c2e714b1b0 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1c2e714b228 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1c2e714b3d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1c2e714b698 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1c2e714b738 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x1c2e714b970 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:31:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x1c2e714bb80 <line:34:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x1c2e714ba40 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x1c2e714bdd0 <line:35:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1c2e714bc58 <col:34, col:40> col:40 _Value 'int *'
|-RecordDecl 0x1c2e714be90 <.//openssl//file_jk/before\crypto\bio/bio_lcl.h:64:1, line:71:1> line:64:8 struct bio_addrinfo_st definition
| |-FieldDecl 0x1c2e714bf68 <line:65:5, col:9> col:9 bai_family 'int'
| |-FieldDecl 0x1c2e714bfd8 <line:66:5, col:9> col:9 bai_socktype 'int'
| |-FieldDecl 0x1c2e714c048 <line:67:5, col:9> col:9 bai_protocol 'int'
| |-FieldDecl 0x1c2e714c0b0 <line:68:5, col:12> col:12 bai_addrlen 'size_t':'unsigned long long'
| |-RecordDecl 0x1c2e714c108 parent 0x1c2e55c6748 <line:69:5, col:12> col:12 struct sockaddr
| |-FieldDecl 0x1c2e715ceb0 <col:5, col:22> col:22 bai_addr 'struct sockaddr *'
| `-FieldDecl 0x1c2e715cfc0 <line:70:5, col:29> col:29 bai_next 'struct bio_addrinfo_st *'
|-RecordDecl 0x1c2e715d018 <line:74:1, line:83:1> line:74:7 invalid union bio_addr_st definition
| |-FieldDecl 0x1c2e715d120 <line:75:5, col:21> col:21 invalid sa 'struct sockaddr':'struct sockaddr'
| |-RecordDecl 0x1c2e715d178 parent 0x1c2e55c6748 <line:79:5, col:12> col:12 struct sockaddr_in
| `-FieldDecl 0x1c2e715d298 <col:5, col:24> col:24 invalid s_in 'struct sockaddr_in':'struct sockaddr_in'
|-RecordDecl 0x1c2e715d2f0 <line:91:9, line:112:1> line:91:16 struct bio_f_buffer_ctx_struct definition
| |-FieldDecl 0x1c2e715d3c8 <line:104:5, col:9> col:9 ibuf_size 'int'
| |-FieldDecl 0x1c2e715d438 <line:105:5, col:9> col:9 obuf_size 'int'
| |-FieldDecl 0x1c2e715d4a8 <line:106:5, col:11> col:11 ibuf 'char *'
| |-FieldDecl 0x1c2e715d518 <line:107:5, col:9> col:9 ibuf_len 'int'
| |-FieldDecl 0x1c2e715d588 <line:108:5, col:9> col:9 ibuf_off 'int'
| |-FieldDecl 0x1c2e715d5f8 <line:109:5, col:11> col:11 obuf 'char *'
| |-FieldDecl 0x1c2e715d668 <line:110:5, col:9> col:9 obuf_len 'int'
| `-FieldDecl 0x1c2e715d6d8 <line:111:5, col:9> col:9 obuf_off 'int'
|-TypedefDecl 0x1c2e715d788 <line:91:1, line:112:3> col:3 BIO_F_BUFFER_CTX 'struct bio_f_buffer_ctx_struct':'struct bio_f_buffer_ctx_struct'
| `-ElaboratedType 0x1c2e715d730 'struct bio_f_buffer_ctx_struct' sugar
|   `-RecordType 0x1c2e715d390 'struct bio_f_buffer_ctx_struct'
|     `-Record 0x1c2e715d2f0 'bio_f_buffer_ctx_struct'
|-RecordDecl 0x1c2e715d7f8 <line:114:1, line:132:1> line:114:8 invalid struct bio_st definition
| |-FieldDecl 0x1c2e715d8c8 <line:115:5, col:23> col:23 invalid method 'const int *'
| |-FieldDecl 0x1c2e7156e20 <line:117:5, col:74> col:12 callback 'long (*)(struct bio_st *, int, const char *, int, long, long)'
| |-FieldDecl 0x1c2e7156e90 <line:118:5, col:11> col:11 cb_arg 'char *'
| |-FieldDecl 0x1c2e7156f00 <line:119:5, col:9> col:9 init 'int'
| |-FieldDecl 0x1c2e7156f70 <line:120:5, col:9> col:9 shutdown 'int'
| |-FieldDecl 0x1c2e7156fe0 <line:121:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x1c2e7157050 <line:122:5, col:9> col:9 retry_reason 'int'
| |-FieldDecl 0x1c2e71570c0 <line:123:5, col:9> col:9 num 'int'
| |-FieldDecl 0x1c2e7157130 <line:124:5, col:11> col:11 ptr 'void *'
| |-FieldDecl 0x1c2e71571b0 <line:125:5, col:20> col:20 next_bio 'struct bio_st *'
| |-FieldDecl 0x1c2e7157230 <line:126:5, col:20> col:20 prev_bio 'struct bio_st *'
| |-FieldDecl 0x1c2e71572a0 <line:127:5, col:9> col:9 references 'int'
| |-FieldDecl 0x1c2e7157310 <line:128:5, col:14> col:14 invalid num_read 'int'
| |-FieldDecl 0x1c2e7157380 <line:129:5, col:14> col:14 invalid num_write 'int'
| |-FieldDecl 0x1c2e71573f0 <line:130:5, col:20> col:20 invalid ex_data 'int'
| `-FieldDecl 0x1c2e7157460 <line:131:5, col:20> col:20 invalid lock 'int *'
|-VarDecl 0x1c2e71574d0 <line:139:1, col:23> col:23 invalid bio_lookup_lock 'int *' extern
|-FunctionDecl 0x1c2e7157760 <line:141:1, col:58> col:5 invalid BIO_ADDR_make 'int (int *, const struct sockaddr *)'
| |-ParmVarDecl 0x1c2e7157550 <col:19, col:29> col:29 invalid ap 'int *'
| `-ParmVarDecl 0x1c2e7157640 <col:33, col:56> col:56 sa 'const struct sockaddr *'
|-FunctionDecl 0x1c2e7157930 <line:142:1, col:60> col:24 invalid BIO_ADDR_sockaddr 'const struct sockaddr *(const int *)'
| `-ParmVarDecl 0x1c2e7157828 <col:42, col:58> col:58 invalid ap 'const int *'
|-FunctionDecl 0x1c2e7157b30 <line:143:1, col:56> col:18 invalid BIO_ADDR_sockaddr_noconst 'struct sockaddr *(int *)'
| `-ParmVarDecl 0x1c2e71579f0 <col:44, col:54> col:54 invalid ap 'int *'
|-FunctionDecl 0x1c2e7157cc0 <line:144:1, col:52> col:11 invalid BIO_ADDR_sockaddr_size 'int (const int *)'
| `-ParmVarDecl 0x1c2e7157bf0 <col:34, col:50> col:50 invalid ap 'const int *'
|-FunctionDecl 0x1c2e7157e28 <line:145:1, col:61> col:11 invalid BIO_ADDRINFO_sockaddr_size 'int (const int *)'
| `-ParmVarDecl 0x1c2e7157d90 <col:38, col:58> col:58 invalid bai 'const int *'
|-FunctionDecl 0x1c2e7157f90 <line:146:1, col:69> col:24 invalid BIO_ADDRINFO_sockaddr 'const struct sockaddr *(const int *)'
| `-ParmVarDecl 0x1c2e7157ee8 <col:46, col:66> col:66 invalid bai 'const int *'
|-VarDecl 0x1c2e7158050 <line:149:1, col:23> col:23 invalid bio_type_lock 'int *' extern
|-FunctionDecl 0x1c2e7158150 <line:151:1, col:31> col:6 bio_sock_cleanup_int 'void (void)'
|-RecordDecl 0x1c2e7158208 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:16:9, line:34:1> line:16:16 invalid struct bio_accept_st definition
| |-FieldDecl 0x1c2e71582d8 <line:17:5, col:9> col:9 referenced state 'int'
| |-FieldDecl 0x1c2e7158348 <line:18:5, col:9> col:9 referenced accept_family 'int'
| |-FieldDecl 0x1c2e71583b8 <line:19:5, col:9> col:9 referenced bind_mode 'int'
| |-FieldDecl 0x1c2e7158428 <line:20:5, col:9> col:9 referenced accepted_mode 'int'
| |-FieldDecl 0x1c2e7158498 <line:21:5, col:11> col:11 referenced param_addr 'char *'
| |-FieldDecl 0x1c2e7158508 <line:22:5, col:11> col:11 referenced param_serv 'char *'
| |-FieldDecl 0x1c2e7158578 <line:24:5, col:9> col:9 referenced accept_sock 'int'
| |-FieldDecl 0x1c2e71585e8 <line:26:5, col:19> col:19 invalid addr_first 'int *'
| |-FieldDecl 0x1c2e7158658 <line:27:5, col:25> col:25 invalid addr_iter 'const int *'
| |-FieldDecl 0x1c2e71586c8 <line:28:5, col:14> col:14 invalid cache_accepting_addr 'int'
| |-FieldDecl 0x1c2e7158738 <line:29:5, col:11> col:11 referenced cache_accepting_name 'char *'
| |-FieldDecl 0x1c2e71587a8 <col:5, col:34> col:34 referenced cache_accepting_serv 'char *'
| |-FieldDecl 0x1c2e7158818 <line:30:5, col:14> col:14 invalid cache_peer_addr 'int'
| |-FieldDecl 0x1c2e7158888 <line:31:5, col:11> col:11 referenced cache_peer_name 'char *'
| |-FieldDecl 0x1c2e71588f8 <col:5, col:29> col:29 referenced cache_peer_serv 'char *'
| `-FieldDecl 0x1c2e7158968 <line:33:5, col:10> col:10 invalid bio_chain 'int *'
|-TypedefDecl 0x1c2e7158a18 <line:16:1, line:34:3> col:3 referenced BIO_ACCEPT 'struct bio_accept_st':'struct bio_accept_st'
| `-ElaboratedType 0x1c2e71589c0 'struct bio_accept_st' sugar
|   `-RecordType 0x1c2e71582a0 'struct bio_accept_st'
|     `-Record 0x1c2e7158208 'bio_accept_st'
|-FunctionDecl 0x1c2e7158c90 <line:36:1, col:55> col:12 invalid acpt_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x1c2e7158aa0 <col:23, col:28> col:28 invalid h 'int *'
| |-ParmVarDecl 0x1c2e7158b20 <col:31, col:43> col:43 buf 'const char *'
| `-ParmVarDecl 0x1c2e7158ba0 <col:48, col:52> col:52 num 'int'
|-FunctionDecl 0x1c2e7158f70 <line:37:1, col:49> col:12 invalid acpt_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1c2e7158d80 <col:22, col:27> col:27 invalid h 'int *'
| |-ParmVarDecl 0x1c2e7158e00 <col:30, col:36> col:36 buf 'char *'
| `-ParmVarDecl 0x1c2e7158e80 <col:41, col:45> col:45 size 'int'
|-FunctionDecl 0x1c2e71591a0 <line:38:1, col:45> col:12 invalid acpt_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x1c2e7159040 <col:22, col:27> col:27 invalid h 'int *'
| `-ParmVarDecl 0x1c2e71590c0 <col:30, col:42> col:42 str 'const char *'
|-FunctionDecl 0x1c2e71594e0 <line:39:1, col:61> col:13 invalid acpt_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x1c2e7159268 <col:23, col:28> col:28 invalid h 'int *'
| |-ParmVarDecl 0x1c2e71592e8 <col:31, col:35> col:35 cmd 'int'
| |-ParmVarDecl 0x1c2e7159368 <col:40, col:45> col:45 arg1 'long'
| `-ParmVarDecl 0x1c2e71593e8 <col:51, col:57> col:57 arg2 'void *'
|-FunctionDecl 0x1c2e7159650 <line:40:1, col:27> col:12 invalid acpt_new 'int (int *)' static
| `-ParmVarDecl 0x1c2e71595b8 <col:21, col:26> col:26 invalid h 'int *'
|-FunctionDecl 0x1c2e71597a8 <line:41:1, col:31> col:12 invalid acpt_free 'int (int *)' static
| `-ParmVarDecl 0x1c2e7159710 <col:22, col:27> col:27 invalid data 'int *'
|-FunctionDecl 0x1c2e7159a70 <line:42:1, col:44> col:12 invalid acpt_state 'int (int *, BIO_ACCEPT *)' static
| |-ParmVarDecl 0x1c2e7159868 <col:23, col:28> col:28 invalid b 'int *'
| `-ParmVarDecl 0x1c2e7159958 <col:31, col:43> col:43 c 'BIO_ACCEPT *'
|-FunctionDecl 0x1c2e7159bf8 <line:43:1, col:40> col:13 invalid acpt_close_socket 'void (int *)' static
| `-ParmVarDecl 0x1c2e7159b38 <col:31, col:36> col:36 invalid data 'int *'
|-FunctionDecl 0x1c2e7164e60 <line:44:1, col:39> col:20 used BIO_ACCEPT_new 'BIO_ACCEPT *(void)' static
|-FunctionDecl 0x1c2e7165038 <line:45:1, col:42> col:13 used BIO_ACCEPT_free 'void (BIO_ACCEPT *)' static
| `-ParmVarDecl 0x1c2e7164f28 <col:29, col:41> col:41 a 'BIO_ACCEPT *'
|-VarDecl 0x1c2e7165110 <line:54:1, col:25> col:25 invalid methods_acceptp 'const int' static
|-FunctionDecl 0x1c2e71653c0 <line:67:1, line:70:1> line:67:19 invalid BIO_s_accept 'const int *(void)'
| `-CompoundStmt 0x1c2e7165478 <line:68:1, line:70:1>
|-FunctionDecl 0x1c2e7165538 <line:72:1, line:85:1> line:72:12 invalid acpt_new 'int (int *)' static
| |-ParmVarDecl 0x1c2e71654a0 <col:21, col:26> col:26 invalid bi 'int *'
| `-CompoundStmt 0x1c2e7165ad8 <line:73:1, line:85:1>
|   |-DeclStmt 0x1c2e7165670 <line:74:5, col:19>
|   | `-VarDecl 0x1c2e7165608 <col:5, col:17> col:17 used ba 'BIO_ACCEPT *'
|   |-IfStmt 0x1c2e7165918 <line:79:5, line:80:18>
|   | |-BinaryOperator 0x1c2e71658a0 <line:79:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ParenExpr 0x1c2e71657e0 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:79:9, col:31> 'BIO_ACCEPT *'
|   | | | `-BinaryOperator 0x1c2e71657c0 <col:10, col:30> 'BIO_ACCEPT *' '='
|   | | |   |-DeclRefExpr 0x1c2e71656d8 <col:10> 'BIO_ACCEPT *' lvalue Var 0x1c2e7165608 'ba' 'BIO_ACCEPT *'
|   | | |   `-CallExpr 0x1c2e71657a0 <col:15, col:30> 'BIO_ACCEPT *'
|   | | |     `-ImplicitCastExpr 0x1c2e7165788 <col:15> 'BIO_ACCEPT *(*)(void)' <FunctionToPointerDecay>
|   | | |       `-DeclRefExpr 0x1c2e7165710 <col:15> 'BIO_ACCEPT *(void)' Function 0x1c2e7164e60 'BIO_ACCEPT_new' 'BIO_ACCEPT *(void)'
|   | | `-ImplicitCastExpr 0x1c2e7165888 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_ACCEPT *' <BitCast>
|   | |   `-ParenExpr 0x1c2e7165868 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1c2e7165840 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1c2e7165800 <col:26> 'int' 0
|   | `-ReturnStmt 0x1c2e7165908 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:80:9, col:18>
|   |   `-ParenExpr 0x1c2e71658e8 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1c2e71658c0 <col:17> 'int' 0
|   |-BinaryOperator 0x1c2e7165a38 <line:82:5, line:47:42> 'int' '='
|   | |-MemberExpr 0x1c2e71659e0 <line:82:5, col:9> 'int' lvalue ->state 0x1c2e71582d8
|   | | `-ImplicitCastExpr 0x1c2e71659c8 <col:5> 'BIO_ACCEPT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1c2e71659a8 <col:5> 'BIO_ACCEPT *' lvalue Var 0x1c2e7165608 'ba' 'BIO_ACCEPT *'
|   | `-IntegerLiteral 0x1c2e7165a10 <line:47:42> 'int' 1
|   `-ReturnStmt 0x1c2e7165ac8 <line:84:5, col:14>
|     `-ParenExpr 0x1c2e7165aa8 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x1c2e7165a80 <col:13> 'int' 1
|-FunctionDecl 0x1c2e7165ba0 prev 0x1c2e7164e60 <line:87:1, line:96:1> line:87:20 used BIO_ACCEPT_new 'BIO_ACCEPT *(void)' static
| `-CompoundStmt 0x1c2e7163270 <line:88:1, line:96:1>
|   |-DeclStmt 0x1c2e7165cb8 <line:89:5, col:20>
|   | `-VarDecl 0x1c2e7165c50 <col:5, col:17> col:17 used ret 'BIO_ACCEPT *'
|   |-IfStmt 0x1c2e7163120 <line:91:5, line:92:21>
|   | |-BinaryOperator 0x1c2e7163030 <line:91:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ParenExpr 0x1c2e7162f70 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:91:9, col:44> 'BIO_ACCEPT *'
|   | | | `-BinaryOperator 0x1c2e7162f50 <col:10, col:43> 'BIO_ACCEPT *' '='
|   | | |   |-DeclRefExpr 0x1c2e7165cd0 <col:10> 'BIO_ACCEPT *' lvalue Var 0x1c2e7165c50 'ret' 'BIO_ACCEPT *'
|   | | |   `-ImplicitCastExpr 0x1c2e7162f38 <col:16, col:43> 'BIO_ACCEPT *' <IntegralToPointer>
|   | | |     `-CallExpr 0x1c2e7162f10 <col:16, col:43> 'int'
|   | | |       |-ImplicitCastExpr 0x1c2e7162ef8 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x1c2e7162e20 <col:16> 'int ()' Function 0x1c2e7165d60 'OPENSSL_zalloc' 'int ()'
|   | | |       `-UnaryExprOrTypeTraitExpr 0x1c2e7162eb0 <col:31, col:42> 'unsigned long long' sizeof
|   | | |         `-ParenExpr 0x1c2e7162e90 <col:37, col:42> 'BIO_ACCEPT':'struct bio_accept_st' lvalue
|   | | |           `-UnaryOperator 0x1c2e7162e78 <col:38, col:39> 'BIO_ACCEPT':'struct bio_accept_st' lvalue prefix '*' cannot overflow
|   | | |             `-ImplicitCastExpr 0x1c2e7162e60 <col:39> 'BIO_ACCEPT *' <LValueToRValue>
|   | | |               `-DeclRefExpr 0x1c2e7162e40 <col:39> 'BIO_ACCEPT *' lvalue Var 0x1c2e7165c50 'ret' 'BIO_ACCEPT *' non_odr_use_unevaluated
|   | | `-ImplicitCastExpr 0x1c2e7163018 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_ACCEPT *' <BitCast>
|   | |   `-ParenExpr 0x1c2e7162ff8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1c2e7162fd0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1c2e7162f90 <col:26> 'int' 0
|   | `-ReturnStmt 0x1c2e7163110 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:92:9, col:21>
|   |   `-ImplicitCastExpr 0x1c2e71630f8 <col:16, col:21> 'BIO_ACCEPT *' <NullToPointer>
|   |     `-ParenExpr 0x1c2e71630d8 <col:16, col:21> 'void *'
|   |       `-ParenExpr 0x1c2e71630b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x1c2e7163090 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x1c2e7163050 <col:26> 'int' 0
|   `-ReturnStmt 0x1c2e7163260 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:95:5, col:16>
|     `-ImplicitCastExpr 0x1c2e7163248 <col:12, col:16> 'BIO_ACCEPT *' <LValueToRValue>
|       `-ParenExpr 0x1c2e7163228 <col:12, col:16> 'BIO_ACCEPT *' lvalue
|         `-DeclRefExpr 0x1c2e7163208 <col:13> 'BIO_ACCEPT *' lvalue Var 0x1c2e7165c50 'ret' 'BIO_ACCEPT *'
|-FunctionDecl 0x1c2e7163350 prev 0x1c2e7165038 <line:98:1, line:112:1> line:98:13 used BIO_ACCEPT_free 'void (BIO_ACCEPT *)' static
| |-ParmVarDecl 0x1c2e71632a8 <col:29, col:41> col:41 used a 'BIO_ACCEPT *'
| `-CompoundStmt 0x1c2e7163e88 <line:99:1, line:112:1>
|   |-IfStmt 0x1c2e7163500 <line:100:5, line:101:9>
|   | |-BinaryOperator 0x1c2e71634d0 <line:100:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1c2e71634a0 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:100:9> 'BIO_ACCEPT *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c2e71633f8 <col:9> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e71632a8 'a' 'BIO_ACCEPT *'
|   | | `-ImplicitCastExpr 0x1c2e71634b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_ACCEPT *' <BitCast>
|   | |   `-ParenExpr 0x1c2e7163480 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1c2e7163458 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1c2e7163418 <col:26> 'int' 0
|   | `-ReturnStmt 0x1c2e71634f0 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:101:9>
|   |-CallExpr 0x1c2e71636a8 <line:103:5, col:31> 'int'
|   | |-ImplicitCastExpr 0x1c2e7163690 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1c2e7163608 <col:5> 'int ()' Function 0x1c2e7163540 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1c2e71636d0 <col:18, col:21> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x1c2e7163660 <col:18, col:21> 'char *' lvalue ->param_addr 0x1c2e7158498
|   |     `-ImplicitCastExpr 0x1c2e7163648 <col:18> 'BIO_ACCEPT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1c2e7163628 <col:18> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e71632a8 'a' 'BIO_ACCEPT *'
|   |-CallExpr 0x1c2e7163788 <line:104:5, col:31> 'int'
|   | |-ImplicitCastExpr 0x1c2e7163770 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1c2e71636e8 <col:5> 'int ()' Function 0x1c2e7163540 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1c2e71637b0 <col:18, col:21> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x1c2e7163740 <col:18, col:21> 'char *' lvalue ->param_serv 0x1c2e7158508
|   |     `-ImplicitCastExpr 0x1c2e7163728 <col:18> 'BIO_ACCEPT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1c2e7163708 <col:18> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e71632a8 'a' 'BIO_ACCEPT *'
|   |-CallExpr 0x1c2e71639b0 <line:106:5, col:41> 'int'
|   | |-ImplicitCastExpr 0x1c2e7163998 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1c2e7163910 <col:5> 'int ()' Function 0x1c2e7163540 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1c2e71639d8 <col:18, col:21> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x1c2e7163968 <col:18, col:21> 'char *' lvalue ->cache_accepting_name 0x1c2e7158738
|   |     `-ImplicitCastExpr 0x1c2e7163950 <col:18> 'BIO_ACCEPT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1c2e7163930 <col:18> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e71632a8 'a' 'BIO_ACCEPT *'
|   |-CallExpr 0x1c2e7163a90 <line:107:5, col:41> 'int'
|   | |-ImplicitCastExpr 0x1c2e7163a78 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1c2e71639f0 <col:5> 'int ()' Function 0x1c2e7163540 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1c2e7163ab8 <col:18, col:21> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x1c2e7163a48 <col:18, col:21> 'char *' lvalue ->cache_accepting_serv 0x1c2e71587a8
|   |     `-ImplicitCastExpr 0x1c2e7163a30 <col:18> 'BIO_ACCEPT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1c2e7163a10 <col:18> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e71632a8 'a' 'BIO_ACCEPT *'
|   |-CallExpr 0x1c2e7163b70 <line:108:5, col:36> 'int'
|   | |-ImplicitCastExpr 0x1c2e7163b58 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1c2e7163ad0 <col:5> 'int ()' Function 0x1c2e7163540 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1c2e7163b98 <col:18, col:21> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x1c2e7163b28 <col:18, col:21> 'char *' lvalue ->cache_peer_name 0x1c2e7158888
|   |     `-ImplicitCastExpr 0x1c2e7163b10 <col:18> 'BIO_ACCEPT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1c2e7163af0 <col:18> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e71632a8 'a' 'BIO_ACCEPT *'
|   |-CallExpr 0x1c2e7163c50 <line:109:5, col:36> 'int'
|   | |-ImplicitCastExpr 0x1c2e7163c38 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1c2e7163bb0 <col:5> 'int ()' Function 0x1c2e7163540 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1c2e7163c78 <col:18, col:21> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x1c2e7163c08 <col:18, col:21> 'char *' lvalue ->cache_peer_serv 0x1c2e71588f8
|   |     `-ImplicitCastExpr 0x1c2e7163bf0 <col:18> 'BIO_ACCEPT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1c2e7163bd0 <col:18> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e71632a8 'a' 'BIO_ACCEPT *'
|   `-CallExpr 0x1c2e7163e48 <line:111:5, col:19> 'int'
|     |-ImplicitCastExpr 0x1c2e7163e30 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1c2e7163dd8 <col:5> 'int ()' Function 0x1c2e7163540 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x1c2e7163e70 <col:18> 'BIO_ACCEPT *' <LValueToRValue>
|       `-DeclRefExpr 0x1c2e7163df8 <col:18> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e71632a8 'a' 'BIO_ACCEPT *'
|-FunctionDecl 0x1c2e7163f80 <line:114:1, line:125:1> line:114:13 invalid acpt_close_socket 'void (int *)' static
| |-ParmVarDecl 0x1c2e7163ef0 <col:31, col:36> col:36 invalid bio 'int *'
| `-CompoundStmt 0x1c2e71645f8 <line:115:1, line:125:1>
|   |-DeclStmt 0x1c2e71640b8 <line:116:5, col:18>
|   | `-VarDecl 0x1c2e7164050 <col:5, col:17> col:17 used c 'BIO_ACCEPT *'
|   `-IfStmt 0x1c2e71645e0 <line:119:5, line:124:5>
|     |-OpaqueValueExpr 0x1c2e71645c8 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x1c2e71645a8 <line:119:48, line:124:5>
|       |-CallExpr 0x1c2e7164328 <line:120:9, col:35> 'int'
|       | |-ImplicitCastExpr 0x1c2e7164310 <col:9> 'int (*)()' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x1c2e7164260 <col:9> 'int ()' Function 0x1c2e7164198 'shutdown' 'int ()'
|       | |-ImplicitCastExpr 0x1c2e7164358 <col:18, col:21> 'int' <LValueToRValue>
|       | | `-MemberExpr 0x1c2e71642b8 <col:18, col:21> 'int' lvalue ->accept_sock 0x1c2e7158578
|       | |   `-ImplicitCastExpr 0x1c2e71642a0 <col:18> 'BIO_ACCEPT *' <LValueToRValue>
|       | |     `-DeclRefExpr 0x1c2e7164280 <col:18> 'BIO_ACCEPT *' lvalue Var 0x1c2e7164050 'c' 'BIO_ACCEPT *'
|       | `-IntegerLiteral 0x1c2e71642e8 <col:34> 'int' 2
|       `-CallExpr 0x1c2e7164500 <line:121:9, col:35> 'int'
|         |-ImplicitCastExpr 0x1c2e71644e8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1c2e7164460 <col:9> 'int ()' Function 0x1c2e7164398 'closesocket' 'int ()'
|         `-ImplicitCastExpr 0x1c2e7164528 <col:21, col:24> 'int' <LValueToRValue>
|           `-MemberExpr 0x1c2e71644b8 <col:21, col:24> 'int' lvalue ->accept_sock 0x1c2e7158578
|             `-ImplicitCastExpr 0x1c2e71644a0 <col:21> 'BIO_ACCEPT *' <LValueToRValue>
|               `-DeclRefExpr 0x1c2e7164480 <col:21> 'BIO_ACCEPT *' lvalue Var 0x1c2e7164050 'c' 'BIO_ACCEPT *'
|-FunctionDecl 0x1c2e71646c8 <line:127:1, line:143:1> line:127:12 invalid acpt_free 'int (int *)' static
| |-ParmVarDecl 0x1c2e7164630 <col:22, col:27> col:27 invalid a 'int *'
| `-CompoundStmt 0x1c2e7164bc8 <line:128:1, line:143:1>
|   |-DeclStmt 0x1c2e7164800 <line:129:5, col:21>
|   | `-VarDecl 0x1c2e7164798 <col:5, col:17> col:17 used data 'BIO_ACCEPT *'
|   |-IfStmt 0x1c2e7164910 <line:131:5, line:132:18>
|   | |-OpaqueValueExpr 0x1c2e71648f8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1c2e71648e8 <col:9, col:18>
|   |   `-ParenExpr 0x1c2e71648c8 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1c2e71648a0 <col:17> 'int' 0
|   |-IfStmt 0x1c2e7164b58 <line:135:5, line:141:5>
|   | |-OpaqueValueExpr 0x1c2e7164b40 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1c2e7164b28 <line:135:22, line:141:5>
|   |   `-CallExpr 0x1c2e7164a10 <line:137:9, col:29> 'void'
|   |     |-ImplicitCastExpr 0x1c2e71649f8 <col:9> 'void (*)(BIO_ACCEPT *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1c2e7164960 <col:9> 'void (BIO_ACCEPT *)' Function 0x1c2e7163350 'BIO_ACCEPT_free' 'void (BIO_ACCEPT *)'
|   |     `-ImplicitCastExpr 0x1c2e7164a38 <col:25> 'BIO_ACCEPT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1c2e7164980 <col:25> 'BIO_ACCEPT *' lvalue Var 0x1c2e7164798 'data' 'BIO_ACCEPT *'
|   `-ReturnStmt 0x1c2e7164bb8 <line:142:5, col:14>
|     `-ParenExpr 0x1c2e7164b98 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x1c2e7164b70 <col:13> 'int' 1
|-FunctionDecl 0x1c2e7164d28 <line:145:1, line:350:1> line:145:12 invalid acpt_state 'int (int *, BIO_ACCEPT *)' static
| |-ParmVarDecl 0x1c2e7164c10 <col:23, col:28> col:28 invalid b 'int *'
| |-ParmVarDecl 0x1c2e7164c88 <col:31, col:43> col:43 used c 'BIO_ACCEPT *'
| `-CompoundStmt 0x1c2e716dce0 <line:146:1, line:350:1>
|   |-DeclStmt 0x1c2e7167040 <line:148:5, col:25>
|   | |-VarDecl 0x1c2e7166ec0 <col:5, col:14> col:9 used s 'int' cinit
|   | | `-UnaryOperator 0x1c2e7166f50 <col:13, col:14> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x1c2e7166f28 <col:14> 'int' 1
|   | `-VarDecl 0x1c2e7166f80 <col:5, col:24> col:17 used ret 'int' cinit
|   |   `-UnaryOperator 0x1c2e7167010 <col:23, col:24> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1c2e7166fe8 <col:24> 'int' 1
|   |-ForStmt 0x1c2e716da10 <line:150:5, line:341:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x1c2e716d9f8 <line:150:14, line:341:5>
|   |   `-SwitchStmt 0x1c2e71670f0 <line:151:9, line:340:9>
|   |     |-ImplicitCastExpr 0x1c2e71670d8 <line:151:17, col:20> 'int' <LValueToRValue>
|   |     | `-MemberExpr 0x1c2e71670a8 <col:17, col:20> 'int' lvalue ->state 0x1c2e71582d8
|   |     |   `-ImplicitCastExpr 0x1c2e7167090 <col:17> 'BIO_ACCEPT *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1c2e7167058 <col:17> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |     `-CompoundStmt 0x1c2e716d888 <col:27, line:340:9>
|   |       |-CaseStmt 0x1c2e7167150 <line:152:9, line:159:13>
|   |       | |-ConstantExpr 0x1c2e7167138 <line:47:42> 'int'
|   |       | | `-IntegerLiteral 0x1c2e7167110 <col:42> 'int' 1
|   |       | `-IfStmt 0x1c2e7167900 <line:153:13, line:159:13>
|   |       |   |-BinaryOperator 0x1c2e71673f8 <line:153:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '&&'
|   |       |   | |-BinaryOperator 0x1c2e7167298 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:153:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |       |   | | |-ImplicitCastExpr 0x1c2e7167268 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:153:17, col:20> 'char *' <LValueToRValue>
|   |       |   | | | `-MemberExpr 0x1c2e71671b0 <col:17, col:20> 'char *' lvalue ->param_addr 0x1c2e7158498
|   |       |   | | |   `-ImplicitCastExpr 0x1c2e7167198 <col:17> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |   | | |     `-DeclRefExpr 0x1c2e7167178 <col:17> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       |   | | `-ImplicitCastExpr 0x1c2e7167280 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |       |   | |   `-ParenExpr 0x1c2e7167248 <col:17, col:27> 'void *'
|   |       |   | |     `-CStyleCastExpr 0x1c2e7167220 <col:18, col:26> 'void *' <NullToPointer>
|   |       |   | |       `-IntegerLiteral 0x1c2e71671e0 <col:26> 'int' 0
|   |       |   | `-BinaryOperator 0x1c2e71673d8 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:153:42, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |       |   |   |-ImplicitCastExpr 0x1c2e71673a8 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:153:42, col:45> 'char *' <LValueToRValue>
|   |       |   |   | `-MemberExpr 0x1c2e71672f0 <col:42, col:45> 'char *' lvalue ->param_serv 0x1c2e7158508
|   |       |   |   |   `-ImplicitCastExpr 0x1c2e71672d8 <col:42> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |   |   |     `-DeclRefExpr 0x1c2e71672b8 <col:42> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       |   |   `-ImplicitCastExpr 0x1c2e71673c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |       |   |     `-ParenExpr 0x1c2e7167388 <col:17, col:27> 'void *'
|   |       |   |       `-CStyleCastExpr 0x1c2e7167360 <col:18, col:26> 'void *' <NullToPointer>
|   |       |   |         `-IntegerLiteral 0x1c2e7167320 <col:26> 'int' 0
|   |       |   `-CompoundStmt 0x1c2e71678e0 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:153:65, line:159:13>
|   |       |     |-CallExpr 0x1c2e71677d0 <line:155:17, line:157:62> 'int'
|   |       |     | |-ImplicitCastExpr 0x1c2e71677b8 <line:155:17> 'int (*)()' <FunctionToPointerDecay>
|   |       |     | | `-DeclRefExpr 0x1c2e7167618 <col:17> 'int ()' Function 0x1c2e7167550 'ERR_add_error_data' 'int ()'
|   |       |     | |-IntegerLiteral 0x1c2e7167638 <col:36> 'int' 4
|   |       |     | |-ImplicitCastExpr 0x1c2e7167818 <line:156:36> 'char *' <ArrayToPointerDecay>
|   |       |     | | `-StringLiteral 0x1c2e7167698 <col:36> 'char [10]' lvalue "hostname="
|   |       |     | |-ImplicitCastExpr 0x1c2e7167830 <col:49, col:52> 'char *' <LValueToRValue>
|   |       |     | | `-MemberExpr 0x1c2e71676f8 <col:49, col:52> 'char *' lvalue ->param_addr 0x1c2e7158498
|   |       |     | |   `-ImplicitCastExpr 0x1c2e71676e0 <col:49> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |     | |     `-DeclRefExpr 0x1c2e71676c0 <col:49> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       |     | |-ImplicitCastExpr 0x1c2e7167848 <line:157:36> 'char *' <ArrayToPointerDecay>
|   |       |     | | `-StringLiteral 0x1c2e7167728 <col:36> 'char [10]' lvalue " service="
|   |       |     | `-ImplicitCastExpr 0x1c2e7167860 <col:49, col:52> 'char *' <LValueToRValue>
|   |       |     |   `-MemberExpr 0x1c2e7167788 <col:49, col:52> 'char *' lvalue ->param_serv 0x1c2e7158508
|   |       |     |     `-ImplicitCastExpr 0x1c2e7167770 <col:49> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |     |       `-DeclRefExpr 0x1c2e7167750 <col:49> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       |     `-GotoStmt 0x1c2e71678c8 <line:158:17, col:22> 'exit_loop' 0x1c2e7167878
|   |       |-CallExpr 0x1c2e71679b8 <line:165:13, col:49> 'int'
|   |       | |-ImplicitCastExpr 0x1c2e71679a0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x1c2e7167918 <col:13> 'int ()' Function 0x1c2e7163540 'OPENSSL_free' 'int ()'
|   |       | `-ImplicitCastExpr 0x1c2e71679e0 <col:26, col:29> 'char *' <LValueToRValue>
|   |       |   `-MemberExpr 0x1c2e7167970 <col:26, col:29> 'char *' lvalue ->cache_accepting_name 0x1c2e7158738
|   |       |     `-ImplicitCastExpr 0x1c2e7167958 <col:26> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x1c2e7167938 <col:26> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       |-BinaryOperator 0x1c2e7167b00 <line:166:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'char *' '='
|   |       | |-MemberExpr 0x1c2e7167a30 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:166:13, col:16> 'char *' lvalue ->cache_accepting_name 0x1c2e7158738
|   |       | | `-ImplicitCastExpr 0x1c2e7167a18 <col:13> 'BIO_ACCEPT *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1c2e71679f8 <col:13> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       | `-ImplicitCastExpr 0x1c2e7167ae8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |       |   `-ParenExpr 0x1c2e7167ac8 <col:17, col:27> 'void *'
|   |       |     `-CStyleCastExpr 0x1c2e7167aa0 <col:18, col:26> 'void *' <NullToPointer>
|   |       |       `-IntegerLiteral 0x1c2e7167a60 <col:26> 'int' 0
|   |       |-CallExpr 0x1c2e7167bc0 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:167:13, col:49> 'int'
|   |       | |-ImplicitCastExpr 0x1c2e7167ba8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x1c2e7167b20 <col:13> 'int ()' Function 0x1c2e7163540 'OPENSSL_free' 'int ()'
|   |       | `-ImplicitCastExpr 0x1c2e7167be8 <col:26, col:29> 'char *' <LValueToRValue>
|   |       |   `-MemberExpr 0x1c2e7167b78 <col:26, col:29> 'char *' lvalue ->cache_accepting_serv 0x1c2e71587a8
|   |       |     `-ImplicitCastExpr 0x1c2e7167b60 <col:26> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x1c2e7167b40 <col:26> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       |-BinaryOperator 0x1c2e7167d08 <line:168:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'char *' '='
|   |       | |-MemberExpr 0x1c2e7167c38 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:168:13, col:16> 'char *' lvalue ->cache_accepting_serv 0x1c2e71587a8
|   |       | | `-ImplicitCastExpr 0x1c2e7167c20 <col:13> 'BIO_ACCEPT *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1c2e7167c00 <col:13> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       | `-ImplicitCastExpr 0x1c2e7167cf0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |       |   `-ParenExpr 0x1c2e7167cd0 <col:17, col:27> 'void *'
|   |       |     `-CStyleCastExpr 0x1c2e7167ca8 <col:18, col:26> 'void *' <NullToPointer>
|   |       |       `-IntegerLiteral 0x1c2e7167c68 <col:26> 'int' 0
|   |       |-CallExpr 0x1c2e7167dc8 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:169:13, col:44> 'int'
|   |       | |-ImplicitCastExpr 0x1c2e7167db0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x1c2e7167d28 <col:13> 'int ()' Function 0x1c2e7163540 'OPENSSL_free' 'int ()'
|   |       | `-ImplicitCastExpr 0x1c2e7167df0 <col:26, col:29> 'char *' <LValueToRValue>
|   |       |   `-MemberExpr 0x1c2e7167d80 <col:26, col:29> 'char *' lvalue ->cache_peer_name 0x1c2e7158888
|   |       |     `-ImplicitCastExpr 0x1c2e7167d68 <col:26> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x1c2e7167d48 <col:26> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       |-BinaryOperator 0x1c2e7167f40 <line:170:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'char *' '='
|   |       | |-MemberExpr 0x1c2e7167e70 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:170:13, col:16> 'char *' lvalue ->cache_peer_name 0x1c2e7158888
|   |       | | `-ImplicitCastExpr 0x1c2e7167e28 <col:13> 'BIO_ACCEPT *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1c2e7167e08 <col:13> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       | `-ImplicitCastExpr 0x1c2e7167f28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |       |   `-ParenExpr 0x1c2e7167f08 <col:17, col:27> 'void *'
|   |       |     `-CStyleCastExpr 0x1c2e7167ee0 <col:18, col:26> 'void *' <NullToPointer>
|   |       |       `-IntegerLiteral 0x1c2e7167ea0 <col:26> 'int' 0
|   |       |-CallExpr 0x1c2e7168000 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:171:13, col:44> 'int'
|   |       | |-ImplicitCastExpr 0x1c2e7167fe8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x1c2e7167f60 <col:13> 'int ()' Function 0x1c2e7163540 'OPENSSL_free' 'int ()'
|   |       | `-ImplicitCastExpr 0x1c2e7168028 <col:26, col:29> 'char *' <LValueToRValue>
|   |       |   `-MemberExpr 0x1c2e7167fb8 <col:26, col:29> 'char *' lvalue ->cache_peer_serv 0x1c2e71588f8
|   |       |     `-ImplicitCastExpr 0x1c2e7167fa0 <col:26> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x1c2e7167f80 <col:26> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       |-BinaryOperator 0x1c2e7168148 <line:172:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'char *' '='
|   |       | |-MemberExpr 0x1c2e7168078 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:172:13, col:16> 'char *' lvalue ->cache_peer_serv 0x1c2e71588f8
|   |       | | `-ImplicitCastExpr 0x1c2e7168060 <col:13> 'BIO_ACCEPT *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1c2e7168040 <col:13> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       | `-ImplicitCastExpr 0x1c2e7168130 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |       |   `-ParenExpr 0x1c2e7168110 <col:17, col:27> 'void *'
|   |       |     `-CStyleCastExpr 0x1c2e71680e8 <col:18, col:26> 'void *' <NullToPointer>
|   |       |       `-IntegerLiteral 0x1c2e71680a8 <col:26> 'int' 0
|   |       |-BinaryOperator 0x1c2e71681f8 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:174:13, line:48:42> 'int' '='
|   |       | |-MemberExpr 0x1c2e71681a0 <line:174:13, col:16> 'int' lvalue ->state 0x1c2e71582d8
|   |       | | `-ImplicitCastExpr 0x1c2e7168188 <col:13> 'BIO_ACCEPT *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1c2e7168168 <col:13> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       | `-IntegerLiteral 0x1c2e71681d0 <line:48:42> 'int' 2
|   |       |-BreakStmt 0x1c2e7168218 <line:175:13>
|   |       |-CaseStmt 0x1c2e7168260 <line:177:9, line:207:13>
|   |       | |-ConstantExpr 0x1c2e7168248 <line:48:42> 'int'
|   |       | | `-IntegerLiteral 0x1c2e7168220 <col:42> 'int' 2
|   |       | `-CompoundStmt 0x1c2e7168808 <line:178:13, line:207:13>
|   |       |   |-DeclStmt 0x1c2e7168308 <line:179:17, col:39>
|   |       |   | `-VarDecl 0x1c2e71682a0 <col:17, col:21> col:21 used family 'int'
|   |       |   |-SwitchStmt 0x1c2e71683a0 <line:180:17, line:203:17>
|   |       |   | |-ImplicitCastExpr 0x1c2e7168388 <line:180:25, col:28> 'int' <LValueToRValue>
|   |       |   | | `-MemberExpr 0x1c2e7168358 <col:25, col:28> 'int' lvalue ->accept_family 0x1c2e7158348
|   |       |   | |   `-ImplicitCastExpr 0x1c2e7168340 <col:25> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |   | |     `-DeclRefExpr 0x1c2e7168320 <col:25> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       |   | `-CompoundStmt 0x1c2e7168520 <col:43, line:203:17>
|   |       |   |   |-IfStmt 0x1c2e7168438 <line:182:21, line:192:21>
|   |       |   |   | |-IntegerLiteral 0x1c2e71683c0 <line:182:25> 'int' 1
|   |       |   |   | `-CompoundStmt 0x1c2e7168420 <col:28, line:192:21>
|   |       |   |   |   `-GotoStmt 0x1c2e7168408 <line:191:25, col:30> 'exit_loop' 0x1c2e7167878
|   |       |   |   |-BreakStmt 0x1c2e7168450 <line:193:21>
|   |       |   |   |-BreakStmt 0x1c2e7168490 <line:196:21>
|   |       |   |   |-BreakStmt 0x1c2e71684b8 <line:199:21>
|   |       |   |   |-DefaultStmt 0x1c2e71684e8 <line:200:17, col:24>
|   |       |   |   | `-NullStmt 0x1c2e71684e0 <col:24>
|   |       |   |   `-GotoStmt 0x1c2e7168508 <line:202:21, col:26> 'exit_loop' 0x1c2e7167878
|   |       |   `-IfStmt 0x1c2e71687f0 <line:204:17, line:206:26>
|   |       |     |-OpaqueValueExpr 0x1c2e71687d8 <<invalid sloc>> '_Bool'
|   |       |     `-GotoStmt 0x1c2e71687c0 <col:21, col:26> 'exit_loop' 0x1c2e7167878
|   |       |-IfStmt 0x1c2e7168958 <line:208:13, line:211:13>
|   |       | |-OpaqueValueExpr 0x1c2e7168940 <<invalid sloc>> '_Bool'
|   |       | `-CompoundStmt 0x1c2e7168928 <line:208:40, line:211:13>
|   |       |   `-GotoStmt 0x1c2e7168910 <line:210:17, col:22> 'exit_loop' 0x1c2e7167878
|   |       |-BinaryOperator 0x1c2e7168a70 <line:216:13, line:49:42> 'int' '='
|   |       | |-MemberExpr 0x1c2e7168a18 <line:216:13, col:16> 'int' lvalue ->state 0x1c2e71582d8
|   |       | | `-ImplicitCastExpr 0x1c2e7168a00 <col:13> 'BIO_ACCEPT *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1c2e71689e0 <col:13> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       | `-IntegerLiteral 0x1c2e7168a48 <line:49:42> 'int' 3
|   |       |-BreakStmt 0x1c2e7168a90 <line:217:13>
|   |       |-CaseStmt 0x1c2e7168ad8 <line:219:9, <invalid sloc>>
|   |       | |-ConstantExpr 0x1c2e7168ac0 <line:49:42> 'int'
|   |       | | `-IntegerLiteral 0x1c2e7168a98 <col:42> 'int' 3
|   |       | `-NullStmt 0x1c2e7161ff0 <<invalid sloc>>
|   |       |-IfStmt 0x1c2e7162508 <line:223:13, line:230:13>
|   |       | |-OpaqueValueExpr 0x1c2e71624f0 <<invalid sloc>> '_Bool'
|   |       | `-CompoundStmt 0x1c2e71624d0 <line:223:45, line:230:13>
|   |       |   |-CallExpr 0x1c2e71623f0 <line:225:17, line:227:62> 'int'
|   |       |   | |-ImplicitCastExpr 0x1c2e71623d8 <line:225:17> 'int (*)()' <FunctionToPointerDecay>
|   |       |   | | `-DeclRefExpr 0x1c2e7162270 <col:17> 'int ()' Function 0x1c2e7167550 'ERR_add_error_data' 'int ()'
|   |       |   | |-IntegerLiteral 0x1c2e7162290 <col:36> 'int' 4
|   |       |   | |-ImplicitCastExpr 0x1c2e7162438 <line:226:36> 'char *' <ArrayToPointerDecay>
|   |       |   | | `-StringLiteral 0x1c2e71622b8 <col:36> 'char [10]' lvalue "hostname="
|   |       |   | |-ImplicitCastExpr 0x1c2e7162450 <col:49, col:52> 'char *' <LValueToRValue>
|   |       |   | | `-MemberExpr 0x1c2e7162318 <col:49, col:52> 'char *' lvalue ->param_addr 0x1c2e7158498
|   |       |   | |   `-ImplicitCastExpr 0x1c2e7162300 <col:49> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |   | |     `-DeclRefExpr 0x1c2e71622e0 <col:49> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       |   | |-ImplicitCastExpr 0x1c2e7162468 <line:227:36> 'char *' <ArrayToPointerDecay>
|   |       |   | | `-StringLiteral 0x1c2e7162348 <col:36> 'char [10]' lvalue " service="
|   |       |   | `-ImplicitCastExpr 0x1c2e7162480 <col:49, col:52> 'char *' <LValueToRValue>
|   |       |   |   `-MemberExpr 0x1c2e71623a8 <col:49, col:52> 'char *' lvalue ->param_serv 0x1c2e7158508
|   |       |   |     `-ImplicitCastExpr 0x1c2e7162390 <col:49> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |   |       `-DeclRefExpr 0x1c2e7162370 <col:49> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       |   `-GotoStmt 0x1c2e71624b8 <line:229:17, col:22> 'exit_loop' 0x1c2e7167878
|   |       |-BinaryOperator 0x1c2e71625c0 <line:231:13, col:30> 'int' '='
|   |       | |-MemberExpr 0x1c2e7162558 <col:13, col:16> 'int' lvalue ->accept_sock 0x1c2e7158578
|   |       | | `-ImplicitCastExpr 0x1c2e7162540 <col:13> 'BIO_ACCEPT *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1c2e7162520 <col:13> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       | `-ImplicitCastExpr 0x1c2e71625a8 <col:30> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1c2e7162588 <col:30> 'int' lvalue Var 0x1c2e7166f80 'ret' 'int'
|   |       |-BinaryOperator 0x1c2e7162690 <line:233:13, line:50:42> 'int' '='
|   |       | |-MemberExpr 0x1c2e7162638 <line:233:13, col:16> 'int' lvalue ->state 0x1c2e71582d8
|   |       | | `-ImplicitCastExpr 0x1c2e7162620 <col:13> 'BIO_ACCEPT *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1c2e7162600 <col:13> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       | `-IntegerLiteral 0x1c2e7162668 <line:50:42> 'int' 4
|   |       |-BreakStmt 0x1c2e71626b0 <line:234:13>
|   |       |-CaseStmt 0x1c2e71626f8 <line:236:9, line:244:13>
|   |       | |-ConstantExpr 0x1c2e71626e0 <line:50:42> 'int'
|   |       | | `-IntegerLiteral 0x1c2e71626b8 <col:42> 'int' 4
|   |       | `-CompoundStmt 0x1c2e7162c80 <line:237:13, line:244:13>
|   |       |   `-IfStmt 0x1c2e7162c68 <line:238:17, line:243:17>
|   |       |     |-OpaqueValueExpr 0x1c2e7162c50 <<invalid sloc>> '_Bool'
|   |       |     `-CompoundStmt 0x1c2e7162c30 <line:240:48, line:243:17>
|   |       |       |-CallExpr 0x1c2e7162bd8 <line:241:21, col:51> 'int'
|   |       |       | |-ImplicitCastExpr 0x1c2e7162bc0 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |       |       | | `-DeclRefExpr 0x1c2e7162b38 <col:21> 'int ()' Function 0x1c2e7162a70 'BIO_closesocket' 'int ()'
|   |       |       | `-ImplicitCastExpr 0x1c2e7162c00 <col:37, col:40> 'int' <LValueToRValue>
|   |       |       |   `-MemberExpr 0x1c2e7162b90 <col:37, col:40> 'int' lvalue ->accept_sock 0x1c2e7158578
|   |       |       |     `-ImplicitCastExpr 0x1c2e7162b78 <col:37> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |       |       `-DeclRefExpr 0x1c2e7162b58 <col:37> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       |       `-GotoStmt 0x1c2e7162c18 <line:242:21, col:26> 'exit_loop' 0x1c2e7167878
|   |       |-CompoundStmt 0x1c2e716a1b8 <line:246:13, line:255:13>
|   |       | |-DeclStmt 0x1c2e7169ea8 <line:247:17, col:43>
|   |       | | |-RecordDecl 0x1c2e7162c98 <col:17, col:23> col:23 union BIO_sock_info_u
|   |       | | `-VarDecl 0x1c2e7162da8 <col:17, col:39> col:39 invalid info 'union BIO_sock_info_u':'union BIO_sock_info_u'
|   |       | `-IfStmt 0x1c2e716a1a0 <line:250:17, line:254:17>
|   |       |   |-OpaqueValueExpr 0x1c2e716a188 <<invalid sloc>> '_Bool'
|   |       |   `-CompoundStmt 0x1c2e716a168 <line:251:44, line:254:17>
|   |       |     |-CallExpr 0x1c2e716a110 <line:252:21, col:51> 'int'
|   |       |     | |-ImplicitCastExpr 0x1c2e716a0f8 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |       |     | | `-DeclRefExpr 0x1c2e716a070 <col:21> 'int ()' Function 0x1c2e7162a70 'BIO_closesocket' 'int ()'
|   |       |     | `-ImplicitCastExpr 0x1c2e716a138 <col:37, col:40> 'int' <LValueToRValue>
|   |       |     |   `-MemberExpr 0x1c2e716a0c8 <col:37, col:40> 'int' lvalue ->accept_sock 0x1c2e7158578
|   |       |     |     `-ImplicitCastExpr 0x1c2e716a0b0 <col:37> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |     |       `-DeclRefExpr 0x1c2e716a090 <col:37> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       |     `-GotoStmt 0x1c2e716a150 <line:253:21, col:26> 'exit_loop' 0x1c2e7167878
|   |       |-BinaryOperator 0x1c2e716a618 <line:261:13, line:51:42> 'int' '='
|   |       | |-MemberExpr 0x1c2e716a5c0 <line:261:13, col:16> 'int' lvalue ->state 0x1c2e71582d8
|   |       | | `-ImplicitCastExpr 0x1c2e716a5a8 <col:13> 'BIO_ACCEPT *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1c2e716a588 <col:13> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       | `-IntegerLiteral 0x1c2e716a5f0 <line:51:42> 'int' 5
|   |       |-BinaryOperator 0x1c2e716a6b0 <line:262:13, col:18> 'int' '='
|   |       | |-DeclRefExpr 0x1c2e716a638 <col:13> 'int' lvalue Var 0x1c2e7166ec0 's' 'int'
|   |       | `-UnaryOperator 0x1c2e716a698 <col:17, col:18> 'int' prefix '-'
|   |       |   `-IntegerLiteral 0x1c2e716a670 <col:18> 'int' 1
|   |       |-BinaryOperator 0x1c2e716a718 <line:263:13, col:19> 'int' '='
|   |       | |-DeclRefExpr 0x1c2e716a6d0 <col:13> 'int' lvalue Var 0x1c2e7166f80 'ret' 'int'
|   |       | `-IntegerLiteral 0x1c2e716a6f0 <col:19> 'int' 1
|   |       |-GotoStmt 0x1c2e716a788 <line:264:13, col:18> 'end' 0x1c2e716a738
|   |       |-CaseStmt 0x1c2e716a7e0 <line:266:9, line:270:13>
|   |       | |-ConstantExpr 0x1c2e716a7c8 <line:51:42> 'int'
|   |       | | `-IntegerLiteral 0x1c2e716a7a0 <col:42> 'int' 5
|   |       | `-IfStmt 0x1c2e716a980 <line:267:13, line:270:13>
|   |       |   |-OpaqueValueExpr 0x1c2e716a968 <<invalid sloc>> '_Bool'
|   |       |   `-CompoundStmt 0x1c2e716a948 <line:267:38, line:270:13>
|   |       |     |-BinaryOperator 0x1c2e716a920 <line:268:17, line:52:42> 'int' '='
|   |       |     | |-MemberExpr 0x1c2e716a8c8 <line:268:17, col:20> 'int' lvalue ->state 0x1c2e71582d8
|   |       |     | | `-ImplicitCastExpr 0x1c2e716a8b0 <col:17> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |     | |   `-DeclRefExpr 0x1c2e716a890 <col:17> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       |     | `-IntegerLiteral 0x1c2e716a8f8 <line:52:42> 'int' 6
|   |       |     `-BreakStmt 0x1c2e716a940 <line:269:17>
|   |       |-CallExpr 0x1c2e716ab70 <line:274:13, col:44> 'int'
|   |       | |-ImplicitCastExpr 0x1c2e716ab58 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x1c2e716aad0 <col:13> 'int ()' Function 0x1c2e7163540 'OPENSSL_free' 'int ()'
|   |       | `-ImplicitCastExpr 0x1c2e716ab98 <col:26, col:29> 'char *' <LValueToRValue>
|   |       |   `-MemberExpr 0x1c2e716ab28 <col:26, col:29> 'char *' lvalue ->cache_peer_name 0x1c2e7158888
|   |       |     `-ImplicitCastExpr 0x1c2e716ab10 <col:26> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x1c2e716aaf0 <col:26> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       |-BinaryOperator 0x1c2e716acb8 <line:275:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'char *' '='
|   |       | |-MemberExpr 0x1c2e716abe8 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:275:13, col:16> 'char *' lvalue ->cache_peer_name 0x1c2e7158888
|   |       | | `-ImplicitCastExpr 0x1c2e716abd0 <col:13> 'BIO_ACCEPT *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1c2e716abb0 <col:13> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       | `-ImplicitCastExpr 0x1c2e716aca0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |       |   `-ParenExpr 0x1c2e716ac80 <col:17, col:27> 'void *'
|   |       |     `-CStyleCastExpr 0x1c2e716ac58 <col:18, col:26> 'void *' <NullToPointer>
|   |       |       `-IntegerLiteral 0x1c2e716ac18 <col:26> 'int' 0
|   |       |-CallExpr 0x1c2e716ad78 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:276:13, col:44> 'int'
|   |       | |-ImplicitCastExpr 0x1c2e716ad60 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x1c2e716acd8 <col:13> 'int ()' Function 0x1c2e7163540 'OPENSSL_free' 'int ()'
|   |       | `-ImplicitCastExpr 0x1c2e716ada0 <col:26, col:29> 'char *' <LValueToRValue>
|   |       |   `-MemberExpr 0x1c2e716ad30 <col:26, col:29> 'char *' lvalue ->cache_peer_serv 0x1c2e71588f8
|   |       |     `-ImplicitCastExpr 0x1c2e716ad18 <col:26> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x1c2e716acf8 <col:26> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       |-BinaryOperator 0x1c2e7165e88 <line:277:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'char *' '='
|   |       | |-MemberExpr 0x1c2e716adf0 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:277:13, col:16> 'char *' lvalue ->cache_peer_serv 0x1c2e71588f8
|   |       | | `-ImplicitCastExpr 0x1c2e716add8 <col:13> 'BIO_ACCEPT *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1c2e716adb8 <col:13> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       | `-ImplicitCastExpr 0x1c2e7165e70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |       |   `-ParenExpr 0x1c2e7165e50 <col:17, col:27> 'void *'
|   |       |     `-CStyleCastExpr 0x1c2e716ae60 <col:18, col:26> 'void *' <NullToPointer>
|   |       |       `-IntegerLiteral 0x1c2e716ae20 <col:26> 'int' 0
|   |       |-IfStmt 0x1c2e7166458 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:285:13, line:291:13>
|   |       | |-BinaryOperator 0x1c2e7166140 <line:285:17, col:21> 'int' '<'
|   |       | | |-ImplicitCastExpr 0x1c2e7166128 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x1c2e71660e0 <col:17> 'int' lvalue Var 0x1c2e7166ec0 's' 'int'
|   |       | | `-IntegerLiteral 0x1c2e7166100 <col:21> 'int' 0
|   |       | `-CompoundStmt 0x1c2e7166440 <col:24, line:291:13>
|   |       |   `-IfStmt 0x1c2e7166428 <line:286:17, line:290:17>
|   |       |     |-CallExpr 0x1c2e71662a8 <line:286:21, col:44> 'int'
|   |       |     | |-ImplicitCastExpr 0x1c2e7166290 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |       |     | | `-DeclRefExpr 0x1c2e7166250 <col:21> 'int ()' Function 0x1c2e7166188 'BIO_sock_should_retry' 'int ()'
|   |       |     | `-ImplicitCastExpr 0x1c2e71662d0 <col:43> 'int' <LValueToRValue>
|   |       |     |   `-DeclRefExpr 0x1c2e7166270 <col:43> 'int' lvalue Var 0x1c2e7166ec0 's' 'int'
|   |       |     `-CompoundStmt 0x1c2e7166410 <col:47, line:290:17>
|   |       |       `-GotoStmt 0x1c2e71663f8 <line:289:21, col:26> 'end' 0x1c2e716a738
|   |       |-IfStmt 0x1c2e71665a0 <line:294:13, line:297:13>
|   |       | |-BinaryOperator 0x1c2e71664d0 <line:294:17, col:21> 'int' '<'
|   |       | | |-ImplicitCastExpr 0x1c2e71664b8 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x1c2e7166470 <col:17> 'int' lvalue Var 0x1c2e7166ec0 's' 'int'
|   |       | | `-IntegerLiteral 0x1c2e7166490 <col:21> 'int' 0
|   |       | `-CompoundStmt 0x1c2e7166580 <col:24, line:297:13>
|   |       |   |-BinaryOperator 0x1c2e7166548 <line:295:17, col:23> 'int' '='
|   |       |   | |-DeclRefExpr 0x1c2e71664f0 <col:17> 'int' lvalue Var 0x1c2e7166f80 'ret' 'int'
|   |       |   | `-ImplicitCastExpr 0x1c2e7166530 <col:23> 'int' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x1c2e7166510 <col:23> 'int' lvalue Var 0x1c2e7166ec0 's' 'int'
|   |       |   `-GotoStmt 0x1c2e7166568 <line:296:17, col:22> 'exit_loop' 0x1c2e7167878
|   |       |-IfStmt 0x1c2e71667a0 <line:300:13, line:301:22>
|   |       | |-OpaqueValueExpr 0x1c2e7166788 <<invalid sloc>> '_Bool'
|   |       | `-GotoStmt 0x1c2e7166770 <col:17, col:22> 'exit_loop' 0x1c2e7167878
|   |       |-IfStmt 0x1c2e716d0e0 <line:310:13, line:316:13>
|   |       | |-OpaqueValueExpr 0x1c2e716d0c8 <<invalid sloc>> '_Bool'
|   |       | `-CompoundStmt 0x1c2e716d0a8 <line:310:39, line:316:13>
|   |       |   |-IfStmt 0x1c2e716cf38 <line:311:17, line:312:26>
|   |       |   | |-OpaqueValueExpr 0x1c2e716cf20 <<invalid sloc>> '_Bool'
|   |       |   | `-GotoStmt 0x1c2e716cf08 <col:21, col:26> 'exit_loop' 0x1c2e7167878
|   |       |   `-IfStmt 0x1c2e716d090 <line:313:17, line:314:26>
|   |       |     |-OpaqueValueExpr 0x1c2e716d078 <<invalid sloc>> '_Bool'
|   |       |     `-GotoStmt 0x1c2e716d060 <col:21, col:26> 'exit_loop' 0x1c2e7167878
|   |       |-IfStmt 0x1c2e716d1d0 <line:317:13, line:318:22>
|   |       | |-OpaqueValueExpr 0x1c2e716d1b8 <<invalid sloc>> '_Bool'
|   |       | `-GotoStmt 0x1c2e716d1a0 <col:17, col:22> 'exit_loop' 0x1c2e7167878
|   |       |-BinaryOperator 0x1c2e716d448 <line:324:13, line:52:42> 'int' '='
|   |       | |-MemberExpr 0x1c2e716d3f0 <line:324:13, col:16> 'int' lvalue ->state 0x1c2e71582d8
|   |       | | `-ImplicitCastExpr 0x1c2e716d3d8 <col:13> 'BIO_ACCEPT *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1c2e716d3b8 <col:13> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       | `-IntegerLiteral 0x1c2e716d420 <line:52:42> 'int' 6
|   |       |-BinaryOperator 0x1c2e716d538 <line:326:13, col:19> 'int' '='
|   |       | |-DeclRefExpr 0x1c2e716d4f0 <col:13> 'int' lvalue Var 0x1c2e7166f80 'ret' 'int'
|   |       | `-IntegerLiteral 0x1c2e716d510 <col:19> 'int' 1
|   |       |-GotoStmt 0x1c2e716d558 <line:327:13, col:18> 'end' 0x1c2e716a738
|   |       |-CaseStmt 0x1c2e716d5b0 <line:329:9, line:333:13>
|   |       | |-ConstantExpr 0x1c2e716d598 <line:52:42> 'int'
|   |       | | `-IntegerLiteral 0x1c2e716d570 <col:42> 'int' 6
|   |       | `-IfStmt 0x1c2e716d750 <line:330:13, line:333:13>
|   |       |   |-OpaqueValueExpr 0x1c2e716d738 <<invalid sloc>> '_Bool'
|   |       |   `-CompoundStmt 0x1c2e716d718 <line:330:38, line:333:13>
|   |       |     |-BinaryOperator 0x1c2e716d6f0 <line:331:17, line:51:42> 'int' '='
|   |       |     | |-MemberExpr 0x1c2e716d698 <line:331:17, col:20> 'int' lvalue ->state 0x1c2e71582d8
|   |       |     | | `-ImplicitCastExpr 0x1c2e716d680 <col:17> 'BIO_ACCEPT *' <LValueToRValue>
|   |       |     | |   `-DeclRefExpr 0x1c2e716d660 <col:17> 'BIO_ACCEPT *' lvalue ParmVar 0x1c2e7164c88 'c' 'BIO_ACCEPT *'
|   |       |     | `-IntegerLiteral 0x1c2e716d6c8 <line:51:42> 'int' 5
|   |       |     `-BreakStmt 0x1c2e716d710 <line:332:17>
|   |       |-BinaryOperator 0x1c2e716d7b0 <line:334:13, col:19> 'int' '='
|   |       | |-DeclRefExpr 0x1c2e716d768 <col:13> 'int' lvalue Var 0x1c2e7166f80 'ret' 'int'
|   |       | `-IntegerLiteral 0x1c2e716d788 <col:19> 'int' 1
|   |       |-GotoStmt 0x1c2e716d7d0 <line:335:13, col:18> 'end' 0x1c2e716a738
|   |       |-DefaultStmt 0x1c2e716d850 <line:337:9, line:338:19>
|   |       | `-BinaryOperator 0x1c2e716d830 <col:13, col:19> 'int' '='
|   |       |   |-DeclRefExpr 0x1c2e716d7e8 <col:13> 'int' lvalue Var 0x1c2e7166f80 'ret' 'int'
|   |       |   `-IntegerLiteral 0x1c2e716d808 <col:19> 'int' 0
|   |       `-GotoStmt 0x1c2e716d870 <line:339:13, col:18> 'end' 0x1c2e716a738
|   |-LabelStmt 0x1c2e716dc68 <line:343:3, line:347:26> 'exit_loop'
|   | `-IfStmt 0x1c2e716dc40 <line:344:5, line:347:26> has_else
|   |   |-OpaqueValueExpr 0x1c2e716dc28 <<invalid sloc>> '_Bool'
|   |   |-NullStmt 0x1c2e716dc20 <line:345:9>
|   |   `-IfStmt 0x1c2e716dc08 <line:346:10, line:347:26>
|   |     |-BinaryOperator 0x1c2e716db50 <line:346:14, col:19> 'int' '>='
|   |     | |-ImplicitCastExpr 0x1c2e716db38 <col:14> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1c2e716daf0 <col:14> 'int' lvalue Var 0x1c2e7166ec0 's' 'int'
|   |     | `-IntegerLiteral 0x1c2e716db10 <col:19> 'int' 0
|   |     `-CallExpr 0x1c2e716dbc8 <line:347:9, col:26> 'int'
|   |       |-ImplicitCastExpr 0x1c2e716dbb0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1c2e716db70 <col:9> 'int ()' Function 0x1c2e7162a70 'BIO_closesocket' 'int ()'
|   |       `-ImplicitCastExpr 0x1c2e716dbf0 <col:25> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x1c2e716db90 <col:25> 'int' lvalue Var 0x1c2e7166ec0 's' 'int'
|   `-LabelStmt 0x1c2e716dcc8 <line:348:3, line:349:12> 'end'
|     `-ReturnStmt 0x1c2e716dcb8 <col:5, col:12>
|       `-ImplicitCastExpr 0x1c2e716dca0 <col:12> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x1c2e716dc80 <col:12> 'int' lvalue Var 0x1c2e7166f80 'ret' 'int'
|-FunctionDecl 0x1c2e716ef20 <line:352:1, line:369:1> line:352:12 invalid acpt_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1c2e716dd28 <col:22, col:27> col:27 invalid b 'int *'
| |-ParmVarDecl 0x1c2e716dda8 <col:30, col:36> col:36 used out 'char *'
| |-ParmVarDecl 0x1c2e716de28 <col:41, col:45> col:45 used outl 'int'
| `-CompoundStmt 0x1c2e716f6a8 <line:353:1, line:369:1>
|   |-DeclStmt 0x1c2e716f098 <line:354:5, col:16>
|   | `-VarDecl 0x1c2e716f008 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1c2e716f070 <col:15> 'int' 0
|   |-DeclStmt 0x1c2e716f128 <line:355:5, col:21>
|   | `-VarDecl 0x1c2e716f0c0 <col:5, col:17> col:17 used data 'BIO_ACCEPT *'
|   `-ReturnStmt 0x1c2e716f698 <line:368:5, col:16>
|     `-ImplicitCastExpr 0x1c2e716f680 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x1c2e716f660 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x1c2e716f640 <col:13> 'int' lvalue Var 0x1c2e716f008 'ret' 'int'
|-FunctionDecl 0x1c2e716f890 <line:371:1, line:388:1> line:371:12 invalid acpt_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x1c2e716f6e8 <col:23, col:28> col:28 invalid b 'int *'
| |-ParmVarDecl 0x1c2e716f768 <col:31, col:43> col:43 used in 'const char *'
| |-ParmVarDecl 0x1c2e716f7e8 <col:47, col:51> col:51 used inl 'int'
| `-CompoundStmt 0x1c2e7170f28 <line:372:1, line:388:1>
|   |-DeclStmt 0x1c2e716f9e0 <line:373:5, col:12>
|   | `-VarDecl 0x1c2e716f978 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x1c2e716fa70 <line:374:5, col:21>
|   | `-VarDecl 0x1c2e716fa08 <col:5, col:17> col:17 used data 'BIO_ACCEPT *'
|   `-ReturnStmt 0x1c2e7170f18 <line:387:5, col:16>
|     `-ImplicitCastExpr 0x1c2e7170f00 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x1c2e716feb8 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x1c2e716fe98 <col:13> 'int' lvalue Var 0x1c2e716f978 'ret' 'int'
|-FunctionDecl 0x1c2e7171198 <line:390:1, line:538:1> line:390:13 invalid acpt_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x1c2e7170f68 <col:23, col:28> col:28 invalid b 'int *'
| |-ParmVarDecl 0x1c2e7170fe8 <col:31, col:35> col:35 used cmd 'int'
| |-ParmVarDecl 0x1c2e7171068 <col:40, col:45> col:45 used num 'long'
| |-ParmVarDecl 0x1c2e71710e8 <col:50, col:56> col:56 used ptr 'void *'
| `-CompoundStmt 0x1c2e716ed28 <line:391:1, line:538:1>
|   |-DeclStmt 0x1c2e71712f0 <line:392:5, col:12>
|   | `-VarDecl 0x1c2e7171288 <col:5, col:10> col:10 used ip 'int *'
|   |-DeclStmt 0x1c2e71713c8 <line:393:5, col:17>
|   | `-VarDecl 0x1c2e7171320 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x1c2e71713b0 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1c2e7171388 <col:16> 'int' 1
|   |-DeclStmt 0x1c2e7171458 <line:394:5, col:21>
|   | `-VarDecl 0x1c2e71713f0 <col:5, col:17> col:17 used data 'BIO_ACCEPT *'
|   |-DeclStmt 0x1c2e71714f0 <line:395:5, col:14>
|   | `-VarDecl 0x1c2e7171488 <col:5, col:12> col:12 used pp 'char **'
|   |-SwitchStmt 0x1c2e7171590 <line:399:5, line:536:5>
|   | |-ImplicitCastExpr 0x1c2e7171578 <line:399:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1c2e7171540 <col:13> 'int' lvalue ParmVar 0x1c2e7170fe8 'cmd' 'int'
|   | `-CompoundStmt 0x1c2e716ebe8 <col:18, line:536:5>
|   |   |-BinaryOperator 0x1c2e7171628 <line:401:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x1c2e71715b0 <col:9> 'long' lvalue Var 0x1c2e7171320 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x1c2e7171610 <col:15> 'long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1c2e71715e8 <col:15> 'int' 0
|   |   |-BinaryOperator 0x1c2e71716d8 <line:402:9, line:47:42> 'int' '='
|   |   | |-MemberExpr 0x1c2e7171680 <line:402:9, col:15> 'int' lvalue ->state 0x1c2e71582d8
|   |   | | `-ImplicitCastExpr 0x1c2e7171668 <col:9> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1c2e7171648 <col:9> 'BIO_ACCEPT *' lvalue Var 0x1c2e71713f0 'data' 'BIO_ACCEPT *'
|   |   | `-IntegerLiteral 0x1c2e71716b0 <line:47:42> 'int' 1
|   |   |-BreakStmt 0x1c2e7171838 <line:407:9>
|   |   |-BreakStmt 0x1c2e7171880 <line:411:9>
|   |   |-IfStmt 0x1c2e716cb90 <line:413:9, line:445:9> has_else
|   |   | |-BinaryOperator 0x1c2e7171960 <line:413:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1c2e7171948 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:413:13> 'void *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1c2e7171888 <col:13> 'void *' lvalue ParmVar 0x1c2e71710e8 'ptr' 'void *'
|   |   | | `-ParenExpr 0x1c2e7171928 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |   | |   `-CStyleCastExpr 0x1c2e7171900 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |     `-IntegerLiteral 0x1c2e71718c0 <col:26> 'int' 0
|   |   | |-CompoundStmt 0x1c2e716ca38 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:413:26, line:441:9>
|   |   | | `-IfStmt 0x1c2e716ca10 <line:414:13, line:440:13> has_else
|   |   | |   |-BinaryOperator 0x1c2e7171a10 <line:414:17, col:24> 'int' '=='
|   |   | |   | |-ImplicitCastExpr 0x1c2e71719e0 <col:17> 'long' <LValueToRValue>
|   |   | |   | | `-DeclRefExpr 0x1c2e7171980 <col:17> 'long' lvalue ParmVar 0x1c2e7171068 'num' 'long'
|   |   | |   | `-ImplicitCastExpr 0x1c2e71719f8 <col:24> 'long' <IntegralCast>
|   |   | |   |   `-IntegerLiteral 0x1c2e71719b8 <col:24> 'int' 0
|   |   | |   |-CompoundStmt 0x1c2e716c140 <col:27, line:429:13>
|   |   | |   | |-DeclStmt 0x1c2e7171b30 <line:415:17, col:51>
|   |   | |   | | `-VarDecl 0x1c2e7171a48 <col:17, col:41> col:23 used hold_serv 'char *' cinit
|   |   | |   | |   `-ImplicitCastExpr 0x1c2e7171b18 <col:35, col:41> 'char *' <LValueToRValue>
|   |   | |   | |     `-MemberExpr 0x1c2e7171ae8 <col:35, col:41> 'char *' lvalue ->param_serv 0x1c2e7158508
|   |   | |   | |       `-ImplicitCastExpr 0x1c2e7171ad0 <col:35> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |   | |         `-DeclRefExpr 0x1c2e7171ab0 <col:35> 'BIO_ACCEPT *' lvalue Var 0x1c2e71713f0 'data' 'BIO_ACCEPT *'
|   |   | |   | |-CallExpr 0x1c2e7171be8 <line:420:17, col:46> 'int'
|   |   | |   | | |-ImplicitCastExpr 0x1c2e7171bd0 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   | |   | | | `-DeclRefExpr 0x1c2e7171b48 <col:17> 'int ()' Function 0x1c2e7163540 'OPENSSL_free' 'int ()'
|   |   | |   | | `-ImplicitCastExpr 0x1c2e7171c10 <col:30, col:36> 'char *' <LValueToRValue>
|   |   | |   | |   `-MemberExpr 0x1c2e7171ba0 <col:30, col:36> 'char *' lvalue ->param_addr 0x1c2e7158498
|   |   | |   | |     `-ImplicitCastExpr 0x1c2e7171b88 <col:30> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |   | |       `-DeclRefExpr 0x1c2e7171b68 <col:30> 'BIO_ACCEPT *' lvalue Var 0x1c2e71713f0 'data' 'BIO_ACCEPT *'
|   |   | |   | |-BinaryOperator 0x1c2e7171d30 <line:421:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'char *' '='
|   |   | |   | | |-MemberExpr 0x1c2e7171c60 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:421:17, col:23> 'char *' lvalue ->param_addr 0x1c2e7158498
|   |   | |   | | | `-ImplicitCastExpr 0x1c2e7171c48 <col:17> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |   | | |   `-DeclRefExpr 0x1c2e7171c28 <col:17> 'BIO_ACCEPT *' lvalue Var 0x1c2e71713f0 'data' 'BIO_ACCEPT *'
|   |   | |   | | `-ImplicitCastExpr 0x1c2e7171d18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |   | |   | |   `-ParenExpr 0x1c2e7171cf8 <col:17, col:27> 'void *'
|   |   | |   | |     `-CStyleCastExpr 0x1c2e7171cd0 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |   | |       `-IntegerLiteral 0x1c2e7171c90 <col:26> 'int' 0
|   |   | |   | `-IfStmt 0x1c2e716c100 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:426:17, line:427:43>
|   |   | |   |   |-BinaryOperator 0x1c2e716c048 <line:426:21, col:40> 'int' '!='
|   |   | |   |   | |-ImplicitCastExpr 0x1c2e716c018 <col:21> 'char *' <LValueToRValue>
|   |   | |   |   | | `-DeclRefExpr 0x1c2e716bf78 <col:21> 'char *' lvalue Var 0x1c2e7171a48 'hold_serv' 'char *'
|   |   | |   |   | `-ImplicitCastExpr 0x1c2e716c030 <col:34, col:40> 'char *' <LValueToRValue>
|   |   | |   |   |   `-MemberExpr 0x1c2e716bfe8 <col:34, col:40> 'char *' lvalue ->param_serv 0x1c2e7158508
|   |   | |   |   |     `-ImplicitCastExpr 0x1c2e716bfd0 <col:34> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |   |   |       `-DeclRefExpr 0x1c2e716bfb0 <col:34> 'BIO_ACCEPT *' lvalue Var 0x1c2e71713f0 'data' 'BIO_ACCEPT *'
|   |   | |   |   `-CallExpr 0x1c2e716c0c0 <line:427:21, col:43> 'int'
|   |   | |   |     |-ImplicitCastExpr 0x1c2e716c0a8 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |   | |   |     | `-DeclRefExpr 0x1c2e716c068 <col:21> 'int ()' Function 0x1c2e7163540 'OPENSSL_free' 'int ()'
|   |   | |   |     `-ImplicitCastExpr 0x1c2e716c0e8 <col:34> 'char *' <LValueToRValue>
|   |   | |   |       `-DeclRefExpr 0x1c2e716c088 <col:34> 'char *' lvalue Var 0x1c2e7171a48 'hold_serv' 'char *'
|   |   | |   `-IfStmt 0x1c2e716c9e8 <line:429:20, line:440:13> has_else
|   |   | |     |-BinaryOperator 0x1c2e716c1e8 <line:429:24, col:31> 'int' '=='
|   |   | |     | |-ImplicitCastExpr 0x1c2e716c1b8 <col:24> 'long' <LValueToRValue>
|   |   | |     | | `-DeclRefExpr 0x1c2e716c170 <col:24> 'long' lvalue ParmVar 0x1c2e7171068 'num' 'long'
|   |   | |     | `-ImplicitCastExpr 0x1c2e716c1d0 <col:31> 'long' <IntegralCast>
|   |   | |     |   `-IntegerLiteral 0x1c2e716c190 <col:31> 'int' 1
|   |   | |     |-CompoundStmt 0x1c2e716c538 <col:34, line:433:13>
|   |   | |     | |-CallExpr 0x1c2e716c2a8 <line:430:17, col:46> 'int'
|   |   | |     | | |-ImplicitCastExpr 0x1c2e716c290 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   | |     | | | `-DeclRefExpr 0x1c2e716c208 <col:17> 'int ()' Function 0x1c2e7163540 'OPENSSL_free' 'int ()'
|   |   | |     | | `-ImplicitCastExpr 0x1c2e716c2d0 <col:30, col:36> 'char *' <LValueToRValue>
|   |   | |     | |   `-MemberExpr 0x1c2e716c260 <col:30, col:36> 'char *' lvalue ->param_serv 0x1c2e7158508
|   |   | |     | |     `-ImplicitCastExpr 0x1c2e716c248 <col:30> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |     | |       `-DeclRefExpr 0x1c2e716c228 <col:30> 'BIO_ACCEPT *' lvalue Var 0x1c2e71713f0 'data' 'BIO_ACCEPT *'
|   |   | |     | `-BinaryOperator 0x1c2e716c4f0 <line:431:17, col:50> 'char *' '='
|   |   | |     |   |-MemberExpr 0x1c2e716c320 <col:17, col:23> 'char *' lvalue ->param_serv 0x1c2e7158508
|   |   | |     |   | `-ImplicitCastExpr 0x1c2e716c308 <col:17> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |     |   |   `-DeclRefExpr 0x1c2e716c2e8 <col:17> 'BIO_ACCEPT *' lvalue Var 0x1c2e71713f0 'data' 'BIO_ACCEPT *'
|   |   | |     |   `-ImplicitCastExpr 0x1c2e716c4d8 <col:36, col:50> 'char *' <IntegralToPointer>
|   |   | |     |     `-CallExpr 0x1c2e716c498 <col:36, col:50> 'int'
|   |   | |     |       |-ImplicitCastExpr 0x1c2e716c480 <col:36> 'int (*)()' <FunctionToPointerDecay>
|   |   | |     |       | `-DeclRefExpr 0x1c2e716c440 <col:36> 'int ()' Function 0x1c2e716c378 'BUF_strdup' 'int ()'
|   |   | |     |       `-ImplicitCastExpr 0x1c2e716c4c0 <col:47> 'void *' <LValueToRValue>
|   |   | |     |         `-DeclRefExpr 0x1c2e716c460 <col:47> 'void *' lvalue ParmVar 0x1c2e71710e8 'ptr' 'void *'
|   |   | |     `-IfStmt 0x1c2e716c9c0 <line:433:20, line:440:13> has_else
|   |   | |       |-BinaryOperator 0x1c2e716c5d0 <line:433:24, col:31> 'int' '=='
|   |   | |       | |-ImplicitCastExpr 0x1c2e716c5a0 <col:24> 'long' <LValueToRValue>
|   |   | |       | | `-DeclRefExpr 0x1c2e716c558 <col:24> 'long' lvalue ParmVar 0x1c2e7171068 'num' 'long'
|   |   | |       | `-ImplicitCastExpr 0x1c2e716c5b8 <col:31> 'long' <IntegralCast>
|   |   | |       |   `-IntegerLiteral 0x1c2e716c578 <col:31> 'int' 2
|   |   | |       |-CompoundStmt 0x1c2e716c658 <col:34, line:435:13>
|   |   | |       `-IfStmt 0x1c2e716c998 <col:20, line:440:13> has_else
|   |   | |         |-BinaryOperator 0x1c2e716c6e0 <line:435:24, col:31> 'int' '=='
|   |   | |         | |-ImplicitCastExpr 0x1c2e716c6b0 <col:24> 'long' <LValueToRValue>
|   |   | |         | | `-DeclRefExpr 0x1c2e716c668 <col:24> 'long' lvalue ParmVar 0x1c2e7171068 'num' 'long'
|   |   | |         | `-ImplicitCastExpr 0x1c2e716c6c8 <col:31> 'long' <IntegralCast>
|   |   | |         |   `-IntegerLiteral 0x1c2e716c688 <col:31> 'int' 3
|   |   | |         |-CompoundStmt 0x1c2e716c790 <col:34, line:438:13>
|   |   | |         `-IfStmt 0x1c2e716c980 <col:20, line:440:13>
|   |   | |           |-BinaryOperator 0x1c2e716c818 <line:438:24, col:31> 'int' '=='
|   |   | |           | |-ImplicitCastExpr 0x1c2e716c7e8 <col:24> 'long' <LValueToRValue>
|   |   | |           | | `-DeclRefExpr 0x1c2e716c7a0 <col:24> 'long' lvalue ParmVar 0x1c2e7171068 'num' 'long'
|   |   | |           | `-ImplicitCastExpr 0x1c2e716c800 <col:31> 'long' <IntegralCast>
|   |   | |           |   `-IntegerLiteral 0x1c2e716c7c0 <col:31> 'int' 4
|   |   | |           `-CompoundStmt 0x1c2e716c968 <col:34, line:440:13>
|   |   | |             `-BinaryOperator 0x1c2e716c948 <line:439:17, col:47> 'int' '='
|   |   | |               |-MemberExpr 0x1c2e716c870 <col:17, col:23> 'int' lvalue ->accept_family 0x1c2e7158348
|   |   | |               | `-ImplicitCastExpr 0x1c2e716c858 <col:17> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |               |   `-DeclRefExpr 0x1c2e716c838 <col:17> 'BIO_ACCEPT *' lvalue Var 0x1c2e71713f0 'data' 'BIO_ACCEPT *'
|   |   | |               `-ImplicitCastExpr 0x1c2e716c930 <col:39, col:47> 'int' <LValueToRValue>
|   |   | |                 `-UnaryOperator 0x1c2e716c918 <col:39, col:47> 'int' lvalue prefix '*' cannot overflow
|   |   | |                   `-CStyleCastExpr 0x1c2e716c8f0 <col:40, col:47> 'int *' <BitCast>
|   |   | |                     `-ImplicitCastExpr 0x1c2e716c8d8 <col:47> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   | |                       `-DeclRefExpr 0x1c2e716c8a0 <col:47> 'void *' lvalue ParmVar 0x1c2e71710e8 'ptr' 'void *'
|   |   | `-CompoundStmt 0x1c2e716cb78 <line:441:16, line:445:9>
|   |   |   `-IfStmt 0x1c2e716cb60 <line:442:13, line:444:13>
|   |   |     |-BinaryOperator 0x1c2e716cac8 <line:442:17, col:24> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x1c2e716ca98 <col:17> 'long' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x1c2e716ca50 <col:17> 'long' lvalue ParmVar 0x1c2e7171068 'num' 'long'
|   |   |     | `-ImplicitCastExpr 0x1c2e716cab0 <col:24> 'long' <IntegralCast>
|   |   |     |   `-IntegerLiteral 0x1c2e716ca70 <col:24> 'int' 2
|   |   |     `-CompoundStmt 0x1c2e716cb50 <col:27, line:444:13>
|   |   |-BreakStmt 0x1c2e716cbb8 <line:446:9>
|   |   |-BreakStmt 0x1c2e716cd28 <line:452:9>
|   |   |-BinaryOperator 0x1c2e716ff48 <line:457:9, line:51:42> 'int' '='
|   |   | |-MemberExpr 0x1c2e716fef0 <line:457:9, col:15> 'int' lvalue ->state 0x1c2e71582d8
|   |   | | `-ImplicitCastExpr 0x1c2e716ce90 <col:9> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1c2e716ce70 <col:9> 'BIO_ACCEPT *' lvalue Var 0x1c2e71713f0 'data' 'BIO_ACCEPT *'
|   |   | `-IntegerLiteral 0x1c2e716ff20 <line:51:42> 'int' 5
|   |   |-BreakStmt 0x1c2e7170008 <line:460:9>
|   |   |-IfStmt 0x1c2e7170490 <line:462:9, line:468:20> has_else
|   |   | |-OpaqueValueExpr 0x1c2e7170478 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x1c2e71703b8 <line:462:22, line:467:9>
|   |   | | |-BinaryOperator 0x1c2e71700c0 <line:463:13, col:25> 'int *' '='
|   |   | | | |-DeclRefExpr 0x1c2e7170010 <col:13> 'int *' lvalue Var 0x1c2e7171288 'ip' 'int *'
|   |   | | | `-CStyleCastExpr 0x1c2e7170098 <col:18, col:25> 'int *' <BitCast>
|   |   | | |   `-ImplicitCastExpr 0x1c2e7170080 <col:25> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   | | |     `-DeclRefExpr 0x1c2e7170048 <col:25> 'void *' lvalue ParmVar 0x1c2e71710e8 'ptr' 'void *'
|   |   | | |-IfStmt 0x1c2e71702c8 <line:464:13, line:465:29>
|   |   | | | |-BinaryOperator 0x1c2e71701b8 <line:464:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | | | | |-ImplicitCastExpr 0x1c2e7170188 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:464:17> 'int *' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x1c2e71700e0 <col:17> 'int *' lvalue Var 0x1c2e7171288 'ip' 'int *'
|   |   | | | | `-ImplicitCastExpr 0x1c2e71701a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'int *' <BitCast>
|   |   | | | |   `-ParenExpr 0x1c2e7170168 <col:17, col:27> 'void *'
|   |   | | | |     `-CStyleCastExpr 0x1c2e7170140 <col:18, col:26> 'void *' <NullToPointer>
|   |   | | | |       `-IntegerLiteral 0x1c2e7170100 <col:26> 'int' 0
|   |   | | | `-BinaryOperator 0x1c2e71702a8 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:465:17, col:29> 'int' '='
|   |   | | |   |-UnaryOperator 0x1c2e7170210 <col:17, col:18> 'int' lvalue prefix '*' cannot overflow
|   |   | | |   | `-ImplicitCastExpr 0x1c2e71701f8 <col:18> 'int *' <LValueToRValue>
|   |   | | |   |   `-DeclRefExpr 0x1c2e71701d8 <col:18> 'int *' lvalue Var 0x1c2e7171288 'ip' 'int *'
|   |   | | |   `-ImplicitCastExpr 0x1c2e7170290 <col:23, col:29> 'int' <LValueToRValue>
|   |   | | |     `-MemberExpr 0x1c2e7170260 <col:23, col:29> 'int' lvalue ->accept_sock 0x1c2e7158578
|   |   | | |       `-ImplicitCastExpr 0x1c2e7170248 <col:23> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | | |         `-DeclRefExpr 0x1c2e7170228 <col:23> 'BIO_ACCEPT *' lvalue Var 0x1c2e71713f0 'data' 'BIO_ACCEPT *'
|   |   | | `-BinaryOperator 0x1c2e7170398 <line:466:13, col:25> 'long' '='
|   |   | |   |-DeclRefExpr 0x1c2e71702e0 <col:13> 'long' lvalue Var 0x1c2e7171320 'ret' 'long'
|   |   | |   `-ImplicitCastExpr 0x1c2e7170380 <col:19, col:25> 'long' <IntegralCast>
|   |   | |     `-ImplicitCastExpr 0x1c2e7170368 <col:19, col:25> 'int' <LValueToRValue>
|   |   | |       `-MemberExpr 0x1c2e7170338 <col:19, col:25> 'int' lvalue ->accept_sock 0x1c2e7158578
|   |   | |         `-ImplicitCastExpr 0x1c2e7170320 <col:19> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |           `-DeclRefExpr 0x1c2e7170300 <col:19> 'BIO_ACCEPT *' lvalue Var 0x1c2e71713f0 'data' 'BIO_ACCEPT *'
|   |   | `-BinaryOperator 0x1c2e7170458 <line:468:13, col:20> 'long' '='
|   |   |   |-DeclRefExpr 0x1c2e71703e0 <col:13> 'long' lvalue Var 0x1c2e7171320 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x1c2e7170440 <col:19, col:20> 'long' <IntegralCast>
|   |   |     `-UnaryOperator 0x1c2e7170428 <col:19, col:20> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x1c2e7170400 <col:20> 'int' 1
|   |   |-BreakStmt 0x1c2e71704b8 <line:469:9>
|   |   |-IfStmt 0x1c2e716e7c0 <line:471:9, line:504:20> has_else
|   |   | |-OpaqueValueExpr 0x1c2e716e7a8 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x1c2e716e6f8 <line:471:22, line:503:9>
|   |   | | `-IfStmt 0x1c2e716e6d0 <line:472:13, line:502:24> has_else
|   |   | |   |-BinaryOperator 0x1c2e7170638 <line:472:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '&&'
|   |   | |   | |-BinaryOperator 0x1c2e7170538 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:472:17, col:24> 'int' '=='
|   |   | |   | | |-ImplicitCastExpr 0x1c2e7170508 <col:17> 'long' <LValueToRValue>
|   |   | |   | | | `-DeclRefExpr 0x1c2e71704c0 <col:17> 'long' lvalue ParmVar 0x1c2e7171068 'num' 'long'
|   |   | |   | | `-ImplicitCastExpr 0x1c2e7170520 <col:24> 'long' <IntegralCast>
|   |   | |   | |   `-IntegerLiteral 0x1c2e71704e0 <col:24> 'int' 0
|   |   | |   | `-BinaryOperator 0x1c2e7170618 <col:29, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | |   |   |-ImplicitCastExpr 0x1c2e7170600 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:472:29> 'void *' <LValueToRValue>
|   |   | |   |   | `-DeclRefExpr 0x1c2e7170558 <col:29> 'void *' lvalue ParmVar 0x1c2e71710e8 'ptr' 'void *'
|   |   | |   |   `-ParenExpr 0x1c2e71705e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |   | |   |     `-CStyleCastExpr 0x1c2e71705b8 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |   |       `-IntegerLiteral 0x1c2e7170578 <col:26> 'int' 0
|   |   | |   |-CompoundStmt 0x1c2e7170818 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:472:42, line:475:13>
|   |   | |   | |-BinaryOperator 0x1c2e7170708 <line:473:17, col:31> 'char **' '='
|   |   | |   | | |-DeclRefExpr 0x1c2e7170658 <col:17> 'char **' lvalue Var 0x1c2e7171488 'pp' 'char **'
|   |   | |   | | `-CStyleCastExpr 0x1c2e71706e0 <col:22, col:31> 'char **' <BitCast>
|   |   | |   | |   `-ImplicitCastExpr 0x1c2e71706c8 <col:31> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   | |   | |     `-DeclRefExpr 0x1c2e7170690 <col:31> 'void *' lvalue ParmVar 0x1c2e71710e8 'ptr' 'void *'
|   |   | |   | `-BinaryOperator 0x1c2e71707f8 <line:474:17, col:29> 'char *' '='
|   |   | |   |   |-UnaryOperator 0x1c2e7170760 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
|   |   | |   |   | `-ImplicitCastExpr 0x1c2e7170748 <col:18> 'char **' <LValueToRValue>
|   |   | |   |   |   `-DeclRefExpr 0x1c2e7170728 <col:18> 'char **' lvalue Var 0x1c2e7171488 'pp' 'char **'
|   |   | |   |   `-ImplicitCastExpr 0x1c2e71707e0 <col:23, col:29> 'char *' <LValueToRValue>
|   |   | |   |     `-MemberExpr 0x1c2e71707b0 <col:23, col:29> 'char *' lvalue ->cache_accepting_name 0x1c2e7158738
|   |   | |   |       `-ImplicitCastExpr 0x1c2e7170798 <col:23> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |   |         `-DeclRefExpr 0x1c2e7170778 <col:23> 'BIO_ACCEPT *' lvalue Var 0x1c2e71713f0 'data' 'BIO_ACCEPT *'
|   |   | |   `-IfStmt 0x1c2e716e6a8 <line:475:20, line:502:24> has_else
|   |   | |     |-BinaryOperator 0x1c2e71709b0 <line:475:24, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '&&'
|   |   | |     | |-BinaryOperator 0x1c2e71708b0 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:475:24, col:31> 'int' '=='
|   |   | |     | | |-ImplicitCastExpr 0x1c2e7170880 <col:24> 'long' <LValueToRValue>
|   |   | |     | | | `-DeclRefExpr 0x1c2e7170838 <col:24> 'long' lvalue ParmVar 0x1c2e7171068 'num' 'long'
|   |   | |     | | `-ImplicitCastExpr 0x1c2e7170898 <col:31> 'long' <IntegralCast>
|   |   | |     | |   `-IntegerLiteral 0x1c2e7170858 <col:31> 'int' 1
|   |   | |     | `-BinaryOperator 0x1c2e7170990 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | |     |   |-ImplicitCastExpr 0x1c2e7170978 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:475:36> 'void *' <LValueToRValue>
|   |   | |     |   | `-DeclRefExpr 0x1c2e71708d0 <col:36> 'void *' lvalue ParmVar 0x1c2e71710e8 'ptr' 'void *'
|   |   | |     |   `-ParenExpr 0x1c2e7170958 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |   | |     |     `-CStyleCastExpr 0x1c2e7170930 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |     |       `-IntegerLiteral 0x1c2e71708f0 <col:26> 'int' 0
|   |   | |     |-CompoundStmt 0x1c2e7170b78 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:475:49, line:478:13>
|   |   | |     | |-BinaryOperator 0x1c2e7170a68 <line:476:17, col:31> 'char **' '='
|   |   | |     | | |-DeclRefExpr 0x1c2e71709d0 <col:17> 'char **' lvalue Var 0x1c2e7171488 'pp' 'char **'
|   |   | |     | | `-CStyleCastExpr 0x1c2e7170a40 <col:22, col:31> 'char **' <BitCast>
|   |   | |     | |   `-ImplicitCastExpr 0x1c2e7170a28 <col:31> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   | |     | |     `-DeclRefExpr 0x1c2e71709f0 <col:31> 'void *' lvalue ParmVar 0x1c2e71710e8 'ptr' 'void *'
|   |   | |     | `-BinaryOperator 0x1c2e7170b58 <line:477:17, col:29> 'char *' '='
|   |   | |     |   |-UnaryOperator 0x1c2e7170ac0 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
|   |   | |     |   | `-ImplicitCastExpr 0x1c2e7170aa8 <col:18> 'char **' <LValueToRValue>
|   |   | |     |   |   `-DeclRefExpr 0x1c2e7170a88 <col:18> 'char **' lvalue Var 0x1c2e7171488 'pp' 'char **'
|   |   | |     |   `-ImplicitCastExpr 0x1c2e7170b40 <col:23, col:29> 'char *' <LValueToRValue>
|   |   | |     |     `-MemberExpr 0x1c2e7170b10 <col:23, col:29> 'char *' lvalue ->cache_accepting_serv 0x1c2e71587a8
|   |   | |     |       `-ImplicitCastExpr 0x1c2e7170af8 <col:23> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |     |         `-DeclRefExpr 0x1c2e7170ad8 <col:23> 'BIO_ACCEPT *' lvalue Var 0x1c2e71713f0 'data' 'BIO_ACCEPT *'
|   |   | |     `-IfStmt 0x1c2e716e680 <line:478:20, line:502:24> has_else
|   |   | |       |-BinaryOperator 0x1c2e7170d10 <line:478:24, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '&&'
|   |   | |       | |-BinaryOperator 0x1c2e7170c10 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:478:24, col:31> 'int' '=='
|   |   | |       | | |-ImplicitCastExpr 0x1c2e7170be0 <col:24> 'long' <LValueToRValue>
|   |   | |       | | | `-DeclRefExpr 0x1c2e7170b98 <col:24> 'long' lvalue ParmVar 0x1c2e7171068 'num' 'long'
|   |   | |       | | `-ImplicitCastExpr 0x1c2e7170bf8 <col:31> 'long' <IntegralCast>
|   |   | |       | |   `-IntegerLiteral 0x1c2e7170bb8 <col:31> 'int' 2
|   |   | |       | `-BinaryOperator 0x1c2e7170cf0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | |       |   |-ImplicitCastExpr 0x1c2e7170cd8 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:478:36> 'void *' <LValueToRValue>
|   |   | |       |   | `-DeclRefExpr 0x1c2e7170c30 <col:36> 'void *' lvalue ParmVar 0x1c2e71710e8 'ptr' 'void *'
|   |   | |       |   `-ParenExpr 0x1c2e7170cb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |   | |       |     `-CStyleCastExpr 0x1c2e7170c90 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       |       `-IntegerLiteral 0x1c2e7170c50 <col:26> 'int' 0
|   |   | |       |-CompoundStmt 0x1c2e716ded0 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:478:49, line:481:13>
|   |   | |       | |-BinaryOperator 0x1c2e7170dc8 <line:479:17, col:31> 'char **' '='
|   |   | |       | | |-DeclRefExpr 0x1c2e7170d30 <col:17> 'char **' lvalue Var 0x1c2e7171488 'pp' 'char **'
|   |   | |       | | `-CStyleCastExpr 0x1c2e7170da0 <col:22, col:31> 'char **' <BitCast>
|   |   | |       | |   `-ImplicitCastExpr 0x1c2e7170d88 <col:31> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   | |       | |     `-DeclRefExpr 0x1c2e7170d50 <col:31> 'void *' lvalue ParmVar 0x1c2e71710e8 'ptr' 'void *'
|   |   | |       | `-BinaryOperator 0x1c2e7170eb8 <line:480:17, col:29> 'char *' '='
|   |   | |       |   |-UnaryOperator 0x1c2e7170e20 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
|   |   | |       |   | `-ImplicitCastExpr 0x1c2e7170e08 <col:18> 'char **' <LValueToRValue>
|   |   | |       |   |   `-DeclRefExpr 0x1c2e7170de8 <col:18> 'char **' lvalue Var 0x1c2e7171488 'pp' 'char **'
|   |   | |       |   `-ImplicitCastExpr 0x1c2e7170ea0 <col:23, col:29> 'char *' <LValueToRValue>
|   |   | |       |     `-MemberExpr 0x1c2e7170e70 <col:23, col:29> 'char *' lvalue ->cache_peer_name 0x1c2e7158888
|   |   | |       |       `-ImplicitCastExpr 0x1c2e7170e58 <col:23> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |       |         `-DeclRefExpr 0x1c2e7170e38 <col:23> 'BIO_ACCEPT *' lvalue Var 0x1c2e71713f0 'data' 'BIO_ACCEPT *'
|   |   | |       `-IfStmt 0x1c2e716e658 <line:481:20, line:502:24> has_else
|   |   | |         |-BinaryOperator 0x1c2e716e068 <line:481:24, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '&&'
|   |   | |         | |-BinaryOperator 0x1c2e716df68 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:481:24, col:31> 'int' '=='
|   |   | |         | | |-ImplicitCastExpr 0x1c2e716df38 <col:24> 'long' <LValueToRValue>
|   |   | |         | | | `-DeclRefExpr 0x1c2e716def0 <col:24> 'long' lvalue ParmVar 0x1c2e7171068 'num' 'long'
|   |   | |         | | `-ImplicitCastExpr 0x1c2e716df50 <col:31> 'long' <IntegralCast>
|   |   | |         | |   `-IntegerLiteral 0x1c2e716df10 <col:31> 'int' 3
|   |   | |         | `-BinaryOperator 0x1c2e716e048 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | |         |   |-ImplicitCastExpr 0x1c2e716e030 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:481:36> 'void *' <LValueToRValue>
|   |   | |         |   | `-DeclRefExpr 0x1c2e716df88 <col:36> 'void *' lvalue ParmVar 0x1c2e71710e8 'ptr' 'void *'
|   |   | |         |   `-ParenExpr 0x1c2e716e010 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |   | |         |     `-CStyleCastExpr 0x1c2e716dfe8 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |         |       `-IntegerLiteral 0x1c2e716dfa8 <col:26> 'int' 0
|   |   | |         |-CompoundStmt 0x1c2e716e230 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:481:49, line:484:13>
|   |   | |         | |-BinaryOperator 0x1c2e716e120 <line:482:17, col:31> 'char **' '='
|   |   | |         | | |-DeclRefExpr 0x1c2e716e088 <col:17> 'char **' lvalue Var 0x1c2e7171488 'pp' 'char **'
|   |   | |         | | `-CStyleCastExpr 0x1c2e716e0f8 <col:22, col:31> 'char **' <BitCast>
|   |   | |         | |   `-ImplicitCastExpr 0x1c2e716e0e0 <col:31> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   | |         | |     `-DeclRefExpr 0x1c2e716e0a8 <col:31> 'void *' lvalue ParmVar 0x1c2e71710e8 'ptr' 'void *'
|   |   | |         | `-BinaryOperator 0x1c2e716e210 <line:483:17, col:29> 'char *' '='
|   |   | |         |   |-UnaryOperator 0x1c2e716e178 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
|   |   | |         |   | `-ImplicitCastExpr 0x1c2e716e160 <col:18> 'char **' <LValueToRValue>
|   |   | |         |   |   `-DeclRefExpr 0x1c2e716e140 <col:18> 'char **' lvalue Var 0x1c2e7171488 'pp' 'char **'
|   |   | |         |   `-ImplicitCastExpr 0x1c2e716e1f8 <col:23, col:29> 'char *' <LValueToRValue>
|   |   | |         |     `-MemberExpr 0x1c2e716e1c8 <col:23, col:29> 'char *' lvalue ->cache_peer_serv 0x1c2e71588f8
|   |   | |         |       `-ImplicitCastExpr 0x1c2e716e1b0 <col:23> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |         |         `-DeclRefExpr 0x1c2e716e190 <col:23> 'BIO_ACCEPT *' lvalue Var 0x1c2e71713f0 'data' 'BIO_ACCEPT *'
|   |   | |         `-IfStmt 0x1c2e716e630 <line:484:20, line:502:24> has_else
|   |   | |           |-BinaryOperator 0x1c2e716e2c8 <line:484:24, col:31> 'int' '=='
|   |   | |           | |-ImplicitCastExpr 0x1c2e716e298 <col:24> 'long' <LValueToRValue>
|   |   | |           | | `-DeclRefExpr 0x1c2e716e250 <col:24> 'long' lvalue ParmVar 0x1c2e7171068 'num' 'long'
|   |   | |           | `-ImplicitCastExpr 0x1c2e716e2b0 <col:31> 'long' <IntegralCast>
|   |   | |           |   `-IntegerLiteral 0x1c2e716e270 <col:31> 'int' 4
|   |   | |           |-CompoundStmt 0x1c2e716e588 <col:34, line:501:13>
|   |   | |           `-BinaryOperator 0x1c2e716e610 <line:502:17, col:24> 'long' '='
|   |   | |             |-DeclRefExpr 0x1c2e716e598 <col:17> 'long' lvalue Var 0x1c2e7171320 'ret' 'long'
|   |   | |             `-ImplicitCastExpr 0x1c2e716e5f8 <col:23, col:24> 'long' <IntegralCast>
|   |   | |               `-UnaryOperator 0x1c2e716e5e0 <col:23, col:24> 'int' prefix '-'
|   |   | |                 `-IntegerLiteral 0x1c2e716e5b8 <col:24> 'int' 1
|   |   | `-BinaryOperator 0x1c2e716e788 <line:504:13, col:20> 'long' '='
|   |   |   |-DeclRefExpr 0x1c2e716e710 <col:13> 'long' lvalue Var 0x1c2e7171320 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x1c2e716e770 <col:19, col:20> 'long' <IntegralCast>
|   |   |     `-UnaryOperator 0x1c2e716e758 <col:19, col:20> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x1c2e716e730 <col:20> 'int' 1
|   |   |-BreakStmt 0x1c2e716e7e8 <line:505:9>
|   |   |-BreakStmt 0x1c2e716e810 <line:508:9>
|   |   |-BreakStmt 0x1c2e716e890 <line:511:9>
|   |   |-BinaryOperator 0x1c2e716e8f8 <line:514:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x1c2e716e898 <col:9> 'long' lvalue Var 0x1c2e7171320 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x1c2e716e8e0 <col:15> 'long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1c2e716e8b8 <col:15> 'int' 0
|   |   |-BreakStmt 0x1c2e716e918 <line:515:9>
|   |   |-BreakStmt 0x1c2e716e920 <line:517:9>
|   |   |-BinaryOperator 0x1c2e716ea08 <line:519:9, col:32> 'int' '='
|   |   | |-MemberExpr 0x1c2e716e960 <col:9, col:15> 'int' lvalue ->bind_mode 0x1c2e71583b8
|   |   | | `-ImplicitCastExpr 0x1c2e716e948 <col:9> 'BIO_ACCEPT *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1c2e716e928 <col:9> 'BIO_ACCEPT *' lvalue Var 0x1c2e71713f0 'data' 'BIO_ACCEPT *'
|   |   | `-CStyleCastExpr 0x1c2e716e9e0 <col:27, col:32> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1c2e716e9c8 <col:32> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x1c2e716e990 <col:32> 'long' lvalue ParmVar 0x1c2e7171068 'num' 'long'
|   |   |-BreakStmt 0x1c2e716ea28 <line:520:9>
|   |   |-BinaryOperator 0x1c2e716eb10 <line:522:9, col:27> 'long' '='
|   |   | |-DeclRefExpr 0x1c2e716ea30 <col:9> 'long' lvalue Var 0x1c2e7171320 'ret' 'long'
|   |   | `-CStyleCastExpr 0x1c2e716eae8 <col:15, col:27> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1c2e716ead0 <col:21, col:27> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     `-MemberExpr 0x1c2e716ea88 <col:21, col:27> 'int' lvalue ->bind_mode 0x1c2e71583b8
|   |   |       `-ImplicitCastExpr 0x1c2e716ea70 <col:21> 'BIO_ACCEPT *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1c2e716ea50 <col:21> 'BIO_ACCEPT *' lvalue Var 0x1c2e71713f0 'data' 'BIO_ACCEPT *'
|   |   |-BreakStmt 0x1c2e716eb30 <line:523:9>
|   |   |-BreakStmt 0x1c2e716eb38 <line:531:9>
|   |   |-DefaultStmt 0x1c2e716ebc0 <line:533:5, line:534:15>
|   |   | `-BinaryOperator 0x1c2e716eba0 <col:9, col:15> 'long' '='
|   |   |   |-DeclRefExpr 0x1c2e716eb40 <col:9> 'long' lvalue Var 0x1c2e7171320 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x1c2e716eb88 <col:15> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x1c2e716eb60 <col:15> 'int' 0
|   |   `-BreakStmt 0x1c2e716ebe0 <line:535:9>
|   `-ReturnStmt 0x1c2e716ed18 <line:537:5, col:16>
|     `-ImplicitCastExpr 0x1c2e716ed00 <col:12, col:16> 'long' <LValueToRValue>
|       `-ParenExpr 0x1c2e716ece0 <col:12, col:16> 'long' lvalue
|         `-DeclRefExpr 0x1c2e716ecc0 <col:13> 'long' lvalue Var 0x1c2e7171320 'ret' 'long'
|-FunctionDecl 0x1c2e7171f10 <line:540:1, line:547:1> line:540:12 invalid acpt_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x1c2e716ed80 <col:22, col:27> col:27 invalid bp 'int *'
| |-ParmVarDecl 0x1c2e716ee00 <col:31, col:43> col:43 used str 'const char *'
| `-CompoundStmt 0x1c2e71724a8 <line:541:1, line:547:1>
|   |-DeclStmt 0x1c2e71720f0 <line:542:5, col:15>
|   | |-VarDecl 0x1c2e7171ff0 <col:5, col:9> col:9 used n 'int'
|   | `-VarDecl 0x1c2e7172070 <col:5, col:12> col:12 used ret 'int'
|   |-BinaryOperator 0x1c2e71723a8 <line:544:5, col:19> 'int' '='
|   | |-DeclRefExpr 0x1c2e7172108 <col:5> 'int' lvalue Var 0x1c2e7171ff0 'n' 'int'
|   | `-ImplicitCastExpr 0x1c2e7172390 <col:9, col:19> 'int' <IntegralCast>
|   |   `-CallExpr 0x1c2e7172350 <col:9, col:19> 'unsigned long long'
|   |     |-ImplicitCastExpr 0x1c2e7172338 <col:9> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1c2e7172280 <col:9> 'unsigned long long (const char *)' Function 0x1c2e7172170 'strlen' 'unsigned long long (const char *)'
|   |     `-ImplicitCastExpr 0x1c2e7172378 <col:16> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1c2e71722b8 <col:16> 'const char *' lvalue ParmVar 0x1c2e716ee00 'str' 'const char *'
|   `-ReturnStmt 0x1c2e7172498 <line:546:5, col:16>
|     `-ImplicitCastExpr 0x1c2e7172480 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x1c2e7172460 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x1c2e7172440 <col:13> 'int' lvalue Var 0x1c2e7172070 'ret' 'int'
|-FunctionDecl 0x1c2e7172170 <line:544:9> col:9 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1c2e7172210 <<invalid sloc>> <invalid sloc> 'const char *'
`-FunctionDecl 0x1c2e71725d0 <line:549:1, line:560:1> line:549:6 invalid BIO_new_accept 'int *(const char *)'
  |-ParmVarDecl 0x1c2e71724e8 <col:21, col:33> col:33 used str 'const char *'
  `-CompoundStmt 0x1c2e7172b48 <line:550:1, line:560:1>
    |-IfStmt 0x1c2e7172910 <line:554:5, line:555:21>
    | |-OpaqueValueExpr 0x1c2e71728f8 <<invalid sloc>> '_Bool'
    | `-ReturnStmt 0x1c2e71728e8 <col:9, col:21>
    |   `-ImplicitCastExpr 0x1c2e71728d0 <col:16, col:21> 'int *' <NullToPointer>
    |     `-ParenExpr 0x1c2e71728b0 <col:16, col:21> 'void *'
    |       `-ParenExpr 0x1c2e7172890 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
    |         `-CStyleCastExpr 0x1c2e7172868 <col:18, col:26> 'void *' <NullToPointer>
    |           `-IntegerLiteral 0x1c2e7172828 <col:26> 'int' 0
    `-ReturnStmt 0x1c2e7172b38 <.//openssl//file_jk/before\crypto\bio\bss_acpt.c:559:5, col:17>
      `-ImplicitCastExpr 0x1c2e7172b20 <col:12, col:17> 'int *' <NullToPointer>
        `-ParenExpr 0x1c2e7172b00 <col:12, col:17> 'void *'
          `-ParenExpr 0x1c2e7172ae0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
            `-CStyleCastExpr 0x1c2e7172ab8 <col:18, col:26> 'void *' <NullToPointer>
              `-IntegerLiteral 0x1c2e7172a78 <col:26> 'int' 0
