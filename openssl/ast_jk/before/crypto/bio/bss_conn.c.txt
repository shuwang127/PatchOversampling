TranslationUnitDecl 0x230fcbb1c38 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x230fcbb24d0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x230fcbb21d0 '__int128'
|-TypedefDecl 0x230fcbb2540 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x230fcbb21f0 'unsigned __int128'
|-TypedefDecl 0x230fcbb2878 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x230fcbb2630 'struct __NSConstantString_tag'
|   `-Record 0x230fcbb2598 '__NSConstantString_tag'
|-TypedefDecl 0x230fcbb28e8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x230fcbb1e10 'unsigned long long'
|-TypedefDecl 0x230fcbb2980 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x230fcbb2940 'char *'
|   `-BuiltinType 0x230fcbb1cd0 'char'
|-TypedefDecl 0x230fcbb29f0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x230fcbb2940 'char *'
|   `-BuiltinType 0x230fcbb1cd0 'char'
|-TypedefDecl 0x230fcbb2ab0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x230fcbb1e10 'unsigned long long'
|-TypedefDecl 0x230fcbb2b20 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x230fcbb2940 'char *'
|   `-BuiltinType 0x230fcbb1cd0 'char'
|-FunctionDecl 0x230fe5a93c0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x230fe5a9460 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x230fe5a94d0 <col:21> Implicit
|-FunctionDecl 0x230fe5a9528 prev 0x230fe5a93c0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x230fe5a9250 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x230fe5a9618 <col:21> Inherited Implicit
|-TypedefDecl 0x230fe5a9658 prev 0x230fcbb28e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x230fcbb1e10 'unsigned long long'
|-TypedefDecl 0x230fe5a9700 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x230fe5a96d0 'size_t' sugar
|   |-Typedef 0x230fe5a9658 'size_t'
|   `-BuiltinType 0x230fcbb1e10 'unsigned long long'
|-TypedefDecl 0x230fe5a9770 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x230fcbb1d70 'long long'
|-TypedefDecl 0x230fe5a97e0 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x230fcbb1d70 'long long'
|-TypedefDecl 0x230fe5a9850 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x230fcbb1db0 'unsigned short'
|-TypedefDecl 0x230fe5a98c0 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x230fcbb1db0 'unsigned short'
|-TypedefDecl 0x230fe5a9930 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x230fcbb1db0 'unsigned short'
|-TypedefDecl 0x230fe5a99a0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x230fcbb1d30 'int'
|-TypedefDecl 0x230fe5a9a10 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x230fcbb1d50 'long'
|-TypedefDecl 0x230fe5a9a80 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x230fcbb1d70 'long long'
|-TypedefDecl 0x230fe5a9b10 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x230fe5a9ae0 '__time64_t' sugar
|   |-Typedef 0x230fe5a9a80 '__time64_t'
|   `-BuiltinType 0x230fcbb1d70 'long long'
|-FunctionDecl 0x230fe5a9c88 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x230fe5a9ea8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x230fe5ea0b0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x230fe5a9fe8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x230fe5aa060 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x230fe5aa0d8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x230fe5aa158 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x230fe5e9e50 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x230fe5ea190 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x230fe5ea250 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x230fe5ea3c0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x230fe5ea370 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x230fe5ea310 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x230fe5ea230 'struct threadlocaleinfostruct'
|       `-Record 0x230fe5f4f00 'threadlocaleinfostruct'
|-TypedefDecl 0x230fe5ea4d0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x230fe5ea480 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x230fe5ea420 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x230fe5ea2f0 'struct threadmbcinfostruct'
|       `-Record 0x230fe5ea250 'threadmbcinfostruct'
|-RecordDecl 0x230fe5ea528 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x230fe5ea5e0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x230fe5ea6a0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x230fe5ea730 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x230fe5ea7c0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x230fe5ea878 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x230fe5ea820 'struct localeinfo_struct' sugar
|   `-RecordType 0x230fe5ea680 'struct localeinfo_struct'
|     `-Record 0x230fe5ea5e0 'localeinfo_struct'
|-TypedefDecl 0x230fe5ea950 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x230fe5ea900 'struct localeinfo_struct *'
|   `-ElaboratedType 0x230fe5ea820 'struct localeinfo_struct' sugar
|     `-RecordType 0x230fe5ea680 'struct localeinfo_struct'
|       `-Record 0x230fe5ea5e0 'localeinfo_struct'
|-RecordDecl 0x230fe5ea9c8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x230fe5eaa80 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x230fe5eaaf8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x230fe5eabb8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x230fe5eac50 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x230fe5eacc0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x230fe5ead78 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x230fe5ead20 'struct localerefcount' sugar
|   `-RecordType 0x230fe5eaa60 'struct localerefcount'
|     `-Record 0x230fe5ea9c8 'localerefcount'
|-RecordDecl 0x230fe5f4f00 prev 0x230fe5ea190 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x230fe5f4f80 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x230fe5f4ff8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x230fe5f5068 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x230fe5f50d8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x230fe5f5148 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x230fe5f5308 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x230fe5f5378 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x230fe5f53e8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x230fe5f5458 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x230fe5f54c8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x230fe5f5538 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x230fe5f5590 parent 0x230fcbb1c38 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x230fe5f5720 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x230fe5f5790 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x230fe5f5800 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x230fe5f5870 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x230fe5f5910 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x230fe5f5980 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x230fe5f5a90 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x230fe5f5bc8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x230fe5f5c78 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x230fe5f5c20 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x230fe5ea230 'struct threadlocaleinfostruct'
|     `-Record 0x230fe5f4f00 'threadlocaleinfostruct'
|-RecordDecl 0x230fe5f5d10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x230fe5f5dd0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x230fe5f5e48 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x230fe5f5f10 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x230fe5f5f80 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x230fe5f5ff0 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x230fe5f6060 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x230fe5f60d0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x230fe5f6140 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x230fe5f61b0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x230fe5f6260 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x230fe5f6210 'struct _iobuf' sugar
|   `-RecordType 0x230fe5f5db0 'struct _iobuf'
|     `-Record 0x230fe5f5d10 '_iobuf'
|-FunctionDecl 0x230fe5f6498 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x230fe5f6568 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x230fcbb1d70 'long long'
|-FunctionDecl 0x230fe5f6748 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x230fe5f65d0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x230fe5f6a40 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x230fe5f6820 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x230fe5f6898 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x230fe5f6df0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x230fe5f6b20 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x230fe5f6ba0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x230fe5f6c20 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x230fe5fd0f0 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x230fe5fcf80 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x230fe5fd320 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x230fe5fd1e0 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x230fe5fd4d0 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x230fe5fd3f0 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x230fe5fd6c0 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x230fe5fd9b8 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x230fe5fd790 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x230fe5fd810 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x230fe5fdb70 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x230fe5fda90 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x230fe5fdd20 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x230fe5fdc40 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x230fe5fded0 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x230fe5fddf0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x230fe5fa058 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x230fe5f9f78 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x230fe5fa1e8 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x230fe5fa550 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x230fe5fa2b0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x230fe5fa3a8 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x230fe5fa908 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x230fe5fa630 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x230fe5fa6b0 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x230fe5fa728 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x230fe5faac8 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x230fe5fa9e8 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x230fe5fad90 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x230fe5faba0 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x230fe5fac20 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x230fe5fdf90 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x230fe5fe388 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x230fe5fe428 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x230fe5fe490 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x230fe5fe508 prev 0x230fe5fe388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x230fe5fe160 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x230fe5fe1e0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x230fe5fe5b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe5fea30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x230fe5fe760 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x230fe5fe7e0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x230fe5fe860 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x230fe5fed50 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x230fe5fedf0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x230fe5fee58 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x230fe5feed0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x230fe5f6f20 prev 0x230fe5fed50 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x230fe5feb10 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x230fe5feb90 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x230fe5f7018 <col:40> Inherited printf 2 3
|-FunctionDecl 0x230fe5f71e0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x230fe5f7060 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x230fe5f70e0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x230fe5f7438 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x230fe5f72c0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x230fe5f7338 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x230fe5f7668 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x230fe5f7518 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x230fe5f7960 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x230fe5f7740 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x230fe5f77b8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x230fe5f7df8 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x230fe5f7e98 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x230fe5fefa0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x230fe5ff008 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x230fe5ff070 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x230fe5ff0f8 prev 0x230fe5f7df8 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x230fe5f7a40 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x230fe5f7ab8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe5f7b30 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x230fe5f7ba8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x230fe5ff600 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x230fe5ff1e8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x230fe5ff260 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe5ff2d8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe5ff350 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x230fe5ff3c8 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x230fe5ffac0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x230fe5ff7f0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x230fe5ff870 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x230fe5ff8e8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x230fe5ffb78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe5f8fe8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x230fe5ffcc0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x230fe5ffd40 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x230fe5ffdc0 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x230fe5ffe38 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x230fe5f9390 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x230fe5f9430 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x230fe5f9498 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x230fe5f9510 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x230fe5f9578 prev 0x230fe5f9390 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x230fe5f91c8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x230fe5f9248 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x230fe5f9758 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x230fe5f9628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe5f9b98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe5f9898 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x230fe5f9918 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x230fe5f99b0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x230fe5f9c50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe5f7f30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x230fe5f9d90 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x230fe5f9e10 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x230fe5f8220 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe5f8008 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x230fe5f8088 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x230fe5f8100 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe5f8580 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x230fe5f8300 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x230fe5f83d8 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x230fe5f8938 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x230fe5f8658 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x230fe5f86d8 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x230fe5f8758 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x230fe5f8b98 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x230fe5f8a18 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x230fe602018 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x230fe5f8c68 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x230fe5f8ce8 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x230fe5f8d68 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x230fe602278 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x230fe6020f8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x230fe602738 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x230fe6027d8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x230fe602840 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x230fe6028a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x230fe602910 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x230fe602998 prev 0x230fe602738 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x230fe602380 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x230fe6023f8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe602470 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x230fe6024e8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x230fe602b60 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x230fe602a80 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x230fe602cf0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x230fe602e78 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x230fe601180 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x230fe602f48 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x230fe600fd0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x230fe6014a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x230fe601360 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x230fe601550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe601770 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x230fe601690 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x230fe601990 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x230fe601848 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x230fe601b40 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x230fe601a60 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x230fe601d90 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x230fe601c18 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x230fe601c98 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x230fe602fe0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x230fe603080 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x230fe6030f0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x230fe603158 prev 0x230fe602fe0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x230fe601e70 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x230fe603248 <col:40> Inherited printf 1 2
|-FunctionDecl 0x230fe603378 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x230fe603298 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x230fe6035c8 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x230fe603450 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x230fe6034c8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x230fe603788 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x230fe6036a8 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x230fe6039a8 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x230fe603860 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x230fe603bf8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x230fe603a80 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x230fe603af8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x230fe603db8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x230fe603cd8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x230fe64ec30 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x230fe603e90 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x230fe603f10 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x230fe64edf0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x230fe64ed10 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x230fe64f080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x230fe64efa0 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x230fe64f128 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x230fe64f320 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x230fe64f248 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x230fe64f4b0 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x230fe64f758 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x230fe64f7f8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x230fe64f868 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x230fe64f8d0 prev 0x230fe64f758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x230fe64f640 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x230fe64faa8 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x230fe64f978 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe651ea0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe651c68 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x230fe651ce0 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x230fe651f50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe652178 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x230fe652098 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x230fe6523c8 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe652250 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x230fe6522c8 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe652788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x230fe652560 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x230fe6525e0 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x230fe652838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe652a60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x230fe652980 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x230fe64dc98 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x230fe64db50 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x230fe64de80 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x230fe64e2d0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x230fe64df48 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x230fe64dfc8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x230fe64e048 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x230fe64e0c0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x230fe64e750 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x230fe64e3c0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x230fe64e438 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe64e4b0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x230fe64e530 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x230fe655bd0 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x230fe64e840 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x230fe64e8b8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x230fe64e938 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x230fe655d98 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x230fe655cb8 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x230fe656170 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x230fe656210 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x230fe656278 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x230fe6562f0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x230fe656358 prev 0x230fe656170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x230fe655f30 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x230fe655fb0 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x230fe656538 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x230fe656408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe656928 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe656648 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x230fe6566c8 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x230fe656740 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x230fe6569e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe652ca0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x230fe656b28 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x230fe652ba0 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x230fe652f98 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe652d80 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x230fe652e00 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x230fe652e78 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe653428 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x230fe653140 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x230fe6531b8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe653238 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x230fe6534e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe653ab0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe653720 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x230fe653798 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe653818 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x230fe653890 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x230fe654bc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe654f20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x230fe654d08 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x230fe654d80 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x230fe654e00 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x230fe6552b8 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe655008 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x230fe655080 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe655100 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x230fe655178 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe655518 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x230fe6555b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe655870 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x230fe655700 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x230fe653bb0 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x230fe655948 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x230fe6559c0 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x230fe653e30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x230fe653d50 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x230fe653ed8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe654198 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x230fe654020 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x230fe654098 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x230fe6545b0 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x230fe654650 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x230fe6546b8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x230fe654720 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x230fe6547a0 <col:40> Implicit printf 2 0
|-FunctionDecl 0x230fe654808 prev 0x230fe6545b0 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x230fe654270 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x230fe6542f0 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x230fe654368 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x230fe654908 <col:40> Inherited printf 2 0
|-FunctionDecl 0x230fe650b80 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x230fe650c20 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x230fe650c88 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x230fe650cf0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x230fe650d70 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x230fe650dd8 prev 0x230fe650b80 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x230fe654950 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x230fe6549d0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x230fe654a48 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x230fe650ed8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x230fe651138 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x230fe650f20 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x230fe650fa0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x230fe651018 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe651430 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x230fe651218 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x230fe651298 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x230fe651310 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe651778 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x230fe651818 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x230fe651880 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x230fe6518f8 <col:40> Implicit printf 1 0
|-FunctionDecl 0x230fe651960 prev 0x230fe651778 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x230fe651518 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x230fe651590 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x230fe651a58 <col:40> Inherited printf 1 0
|-FunctionDecl 0x230fe656d18 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x230fe656db8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x230fe656e20 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x230fe656e98 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x230fe656f00 prev 0x230fe656d18 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x230fe651aa8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x230fe656be0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x230fe656ff8 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x230fe6571c0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x230fe657048 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x230fe6570c0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe657418 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x230fe6572a0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x230fe657318 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe657978 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x230fe657a18 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x230fe657a80 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x230fe657ae8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x230fe657b50 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x230fe64fb70 <col:77> Implicit printf 3 0
|-FunctionDecl 0x230fe64fbd8 prev 0x230fe657978 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x230fe6575b8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x230fe657630 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe6576b0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x230fe657728 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x230fe64fdc8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x230fe64fc98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe650238 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x230fe64fe18 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x230fe64fe90 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe64ff08 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe64ff88 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x230fe650000 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe650678 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x230fe650330 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x230fe6503a8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe650420 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe6504a0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x230fe650518 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe650a48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x230fe650830 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x230fe6508a8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe650928 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x230fe650b00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe65d0b0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x230fe65ce00 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x230fe65ce78 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe65cef8 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x230fe65cf70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x230fe65d170 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe65d568 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x230fe65d2b8 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x230fe65d330 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe65d3b0 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x230fe65d428 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe65d928 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x230fe65d658 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x230fe65d6d8 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x230fe65d750 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe658ca0 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x230fe658d40 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x230fe658da8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x230fe658e20 <col:85> Implicit printf 2 3
|-FunctionDecl 0x230fe658e88 prev 0x230fe658ca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x230fe65dad0 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x230fe65db50 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x230fe659068 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x230fe658f38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe659490 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x230fe659530 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x230fe659598 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x230fe659600 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x230fe659680 <col:94> Implicit printf 2 0
|-FunctionDecl 0x230fe6596e8 prev 0x230fe659490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x230fe659178 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x230fe6591f8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x230fe659270 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x230fe6598d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x230fe6597a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe65dc50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x230fe65dcf0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x230fe65dd58 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x230fe65ddc0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x230fe65de40 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x230fe65dea8 prev 0x230fe65dc50 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x230fe659920 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x230fe6599a0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x230fe659a18 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x230fe65dfa8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x230fe65e170 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x230fe65dff8 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x230fe65e070 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe65e468 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x230fe65e250 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x230fe65e2c8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x230fe65e348 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x230fe65e800 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x230fe65e550 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x230fe65e5c8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe65e648 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x230fe65e6c0 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe65ea68 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x230fe65e8e8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x230fe65e968 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x230fe65ec60 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x230fe65eb48 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x230fe65ef50 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x230fe65ed38 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x230fe65edb0 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x230fe65ee30 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x230fe65f248 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x230fe65f030 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x230fe65f0b0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x230fe65f128 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe65f4a8 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x230fe65f330 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x230fe65f3a8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe65f838 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x230fe65f588 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x230fe65f600 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe65f680 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x230fe65f6f8 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe65fa08 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x230fe65f928 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x230fe659c10 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x230fe65fae0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x230fe65fb58 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe659dd0 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x230fe659cf0 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x230fe659f60 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x230fe65a1a8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe65a030 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x230fe65a0a8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe65a400 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe65a288 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x230fe65a300 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe65a658 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe65a4e0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x230fe65a558 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe65aa08 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe65a738 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x230fe65a7b0 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x230fe65a828 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe657d10 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe65aaf0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x230fe65ab68 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x230fe657bf0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe658008 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe657df8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x230fe657e70 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x230fe657ee8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe658300 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe6580e8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x230fe658168 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x230fe6581e0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe6585f8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe6583e0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x230fe658460 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x230fe6584d8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe6588f0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe6586d8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x230fe658758 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x230fe6587d0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe65fdd0 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe6589d0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x230fe658a50 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x230fe658ac8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x230fe658b40 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe660168 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe65feb8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x230fe65ff38 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x230fe65ffb0 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x230fe660028 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe660500 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe660250 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x230fe6602d0 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x230fe660348 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x230fe6603c0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe660998 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe6606b0 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x230fe660730 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x230fe6607a8 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x230fe660a50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe660f90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe660b98 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x230fe660c80 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe660d00 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x230fe660d78 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe661330 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe661080 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x230fe6610f8 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe661178 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x230fe6611f0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe661880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe661520 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x230fe6615a0 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x230fe661618 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x230fe661690 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x230fe661940 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe65be68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe661a88 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x230fe661b00 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe661b80 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x230fe661bf8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x230fe65bc30 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe65c2a8 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe65bf60 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x230fe65bfd8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe65c058 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x230fe65c0d0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x230fe65c148 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe65c518 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe65c3a0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x230fe65c418 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe65c770 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe65c5f8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x230fe65c670 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe65ca60 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe65c850 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x230fe65c8c8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x230fe65c940 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe662dd0 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe65cb48 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x230fe65cbc0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x230fe662cb0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe663228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe662f78 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x230fe662ff0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe663070 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x230fe6630e8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x230fe6632e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe6636e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe663430 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x230fe6634a8 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe663528 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x230fe6635a0 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe668d00 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe6637d0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x230fe663848 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe6638c0 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe663940 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x230fe6639b8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe669240 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe668ef8 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x230fe668f70 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe668ff0 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x230fe669068 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x230fe6690e0 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x230fe669308 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe669788 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe669458 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x230fe6694d0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe669550 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x230fe6695c8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x230fe669640 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe663d10 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe669880 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x230fe6698f8 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe669970 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe6699f0 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x230fe669a68 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x230fe669ae0 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe6640d0 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x230fe663e08 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x230fe663e80 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x230fe663f00 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x230fe664340 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x230fe6641d0 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x230fe664558 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x230fe664838 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x230fe664620 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x230fe664698 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x230fe664a80 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x230fe664910 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x230fe664cc0 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x230fe664b50 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x230fe664e48 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x230fe665080 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x230fe664f10 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x230fe664f88 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x230fe665230 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x230fe665158 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x230fe6654d8 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x230fe665300 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x230fe665378 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x230fe665880 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x230fe6655b0 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x230fe665630 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x230fe6656a8 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x230fe665b80 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x230fe665960 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x230fe6659d8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x230fe666e98 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x230fe665c58 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x230fe666cf0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x230fe6671a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x230fe667030 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x230fe667248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe667508 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x230fe667388 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x230fe667810 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x230fe6675d8 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x230fe667650 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x230fe667a60 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x230fe6678e8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x230fe667960 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x230fe661c90 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x230fe667b38 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x230fe661e40 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x230fe661d60 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x230fe661ff0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x230fe661f10 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x230fe662388 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x230fe6620c0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x230fe662138 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe6621b0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe662678 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x230fe662468 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x230fe6624e0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe662558 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe662968 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x230fe662758 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x230fe6627d0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe662848 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe66bd30 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x230fe662a48 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x230fe662ac0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe662b38 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe66c030 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x230fe66be10 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe66be88 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe66c280 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x230fe66c108 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe66c180 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe66c4d0 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x230fe66c358 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe66c3d0 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe66c720 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x230fe66c5a8 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe66c620 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe66cad8 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x230fe66c7f8 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x230fe66c870 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x230fe66c8e8 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x230fe667f00 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x230fe66cbb8 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x230fe66cc30 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe66cca8 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe667cf0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe6682b8 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x230fe667fe8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x230fe668060 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe6680d8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe6685a8 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x230fe668398 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x230fe668410 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe668488 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe668898 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x230fe668688 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x230fe668700 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x230fe668778 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x230fe668c20 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x230fe668978 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x230fe6689f0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe668a68 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe668ae0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe66a0c0 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x230fe669d38 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x230fe669db0 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe669e28 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x230fe669ea0 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x230fe66a5c8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x230fe66a1a8 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x230fe66a220 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe66a298 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe66a310 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe66a388 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe66a988 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x230fe66a778 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x230fe66a7f0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe66a868 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x230fe66aa40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe66af50 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x230fe66ac40 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x230fe66ad20 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe66ad98 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x230fe66ae10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x230fe66b010 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe66b2c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x230fe66b150 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x230fe66b1c8 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x230fe66b480 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x230fe66b3a0 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x230fe66b760 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x230fe66b550 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x230fe66b5c8 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe66b640 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe66b9b8 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x230fe66b840 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe66b8b8 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe633bf0 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x230fe66ba90 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x230fe66bb08 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x230fe66bb80 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x230fe633f78 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x230fe633cd0 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x230fe633d48 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe633dc0 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe633e38 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe634140 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x230fe634060 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x230fe634388 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x230fe634210 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe634288 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe634690 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe634460 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe6344d8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe6348e0 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe634768 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe6347e0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe634b30 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe6349b8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe634a30 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe62ce78 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe62cba8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x230fe62cc20 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x230fe62cc98 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe62d168 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe62cf58 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x230fe62cfd0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x230fe62d048 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe62d458 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe62d248 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x230fe62d2c0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x230fe62d338 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe62d818 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe62d538 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x230fe62d5b0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe62d628 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe634c00 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe62d8f8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x230fe62d970 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe62d9e8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe634ef0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe634ce0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x230fe634d58 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe634dd0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe635340 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe634fd0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x230fe635048 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x230fe6350c0 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x230fe635138 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe6356d0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe635428 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x230fe6354a0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x230fe635518 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x230fe635590 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe635a60 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe6357b8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x230fe635830 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x230fe6358a8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x230fe635920 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe62dea0 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe635b48 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x230fe62db90 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe62dc08 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe62dc80 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe62e230 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe62df88 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x230fe62e000 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe62e078 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe62e0f0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe62e5c0 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe62e318 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x230fe62e390 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe62e408 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe62e480 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe62eac8 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe62e6a8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x230fe62e720 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe62e798 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x230fe62e810 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x230fe62e888 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe635f78 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe635c38 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x230fe635cb0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe635d28 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x230fe635da0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x230fe635e18 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe6363a8 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe636068 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x230fe6360e0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe636158 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x230fe6361d0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x230fe636248 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe636610 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe636498 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe636510 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe636860 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe6366e8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe636760 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe636b48 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe636938 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x230fe6369b0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x230fe636a28 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe62ef38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe62ec90 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x230fe62ed08 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe62ed80 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x230fe62edf8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x230fe62eff8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe62f568 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe62f140 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x230fe62f1b8 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe62f230 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe62f2a8 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe62f320 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe62faa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe62f760 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x230fe62f7d8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe62f850 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x230fe62f8c8 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x230fe62f940 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x230fe636c20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe637230 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe636d68 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x230fe636de0 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe636e58 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe636ed0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x230fe636f48 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x230fe636fc0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe637730 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x230fe6374f8 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x230fe637570 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x230fe6377e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x230fe6378f8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x230fe630e28 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x230fe637bb0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x230fe630bd0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x230fe630c48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x230fe630ee0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x230fe630ff8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x230fe631598 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe6312b8 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x230fe631330 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x230fe6313a8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x230fe631650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x230fe631770 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x230fe637e40 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe631a30 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x230fe631aa8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x230fe631b20 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x230fe637c30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x230fe637f00 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x230fe638020 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x230fe638328 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x230fe638148 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x230fe6381c0 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe638238 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x230fe631e70 <line:37:1, line:44:1>
|   |-DeclStmt 0x230fe638470 <line:38:5, col:21>
|   | `-VarDecl 0x230fe638408 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x230fe638508 <line:39:5, col:13>
|   | `-VarDecl 0x230fe6384a0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x230fe638860 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x230fe638848 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x230fe638760 <col:34> '<builtin fn type>' Function 0x230fe6385f8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x230fe638798 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x230fe638408 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x230fe6387d0 <col:29> 'const wchar_t *' lvalue ParmVar 0x230fe638238 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x230fe638b20 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x230fe638890 <col:5> 'int' lvalue Var 0x230fe6384a0 '_Ret' 'int'
|   | `-CallExpr 0x230fe638a60 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x230fe638a48 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x230fe6388c8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x230fe62eac8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x230fe638aa8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x230fe6388e8 <col:27> 'wchar_t *' lvalue ParmVar 0x230fe638148 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x230fe638ac0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x230fe638908 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x230fe6381c0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x230fe638ad8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x230fe638928 <col:44> 'const wchar_t *' lvalue ParmVar 0x230fe638238 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x230fe638af0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x230fe6389b0 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x230fe638988 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x230fe638948 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x230fe638b08 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x230fe6389d0 <col:59> 'va_list':'char *' lvalue Var 0x230fe638408 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x230fe631e00 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x230fe631de8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x230fe631d38 <col:34> '<builtin fn type>' Function 0x230fe631bd0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x230fe631d70 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x230fe638408 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x230fe631e60 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x230fe631e48 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x230fe631e28 <col:12> 'int' lvalue Var 0x230fe6384a0 '_Ret' 'int'
|-FunctionDecl 0x230fe6385f8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x230fe638698 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x230fe638708 <col:34> Implicit
|-FunctionDecl 0x230fe631bd0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x230fe631c70 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x230fe631ce0 <col:34> Implicit
|-FunctionDecl 0x230fe632168 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x230fe631ec0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x230fe631f38 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe631fb0 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x230fe632028 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x230fe632450 <line:50:1, line:52:1>
|   `-ReturnStmt 0x230fe632440 <line:51:5, col:62>
|     `-CallExpr 0x230fe632380 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x230fe632368 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x230fe632240 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x230fe62eac8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x230fe6323c8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x230fe632260 <col:27> 'wchar_t *' lvalue ParmVar 0x230fe631ec0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x230fe6323e0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x230fe632280 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x230fe631f38 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x230fe6323f8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x230fe6322a0 <col:44> 'const wchar_t *' lvalue ParmVar 0x230fe631fb0 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x230fe632410 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x230fe632328 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x230fe632300 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x230fe6322c0 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x230fe632428 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x230fe632348 <col:59> 'va_list':'char *' lvalue ParmVar 0x230fe632028 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x230fe6326f0 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x230fe632478 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x230fe6324f0 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe632568 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x230fe6325e0 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x230fe639cf8 <line:61:1, line:68:1>
|   |-DeclStmt 0x230fe632840 <line:62:5, col:21>
|   | `-VarDecl 0x230fe6327d8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x230fe6328d8 <line:63:5, col:13>
|   | `-VarDecl 0x230fe632870 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x230fe632980 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x230fe632968 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x230fe6328f0 <col:34> '<builtin fn type>' Function 0x230fe6385f8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x230fe632910 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x230fe6327d8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x230fe632948 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x230fe6325e0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x230fe632b80 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x230fe6329b0 <col:5> 'int' lvalue Var 0x230fe632870 '_Ret' 'int'
|   | `-CallExpr 0x230fe632ac0 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x230fe632aa8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x230fe6329e8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x230fe62eac8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x230fe632b08 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x230fe632a08 <col:27> 'wchar_t *' lvalue ParmVar 0x230fe632478 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x230fe632b20 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x230fe632a28 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x230fe6324f0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x230fe632b38 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x230fe632a48 <col:44> 'const wchar_t *' lvalue ParmVar 0x230fe632568 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x230fe632b50 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x230fe632a68 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x230fe6325e0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x230fe632b68 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x230fe632a88 <col:64> 'va_list':'char *' lvalue Var 0x230fe6327d8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x230fe639c88 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x230fe639c70 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x230fe632ba0 <col:34> '<builtin fn type>' Function 0x230fe631bd0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x230fe639c50 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x230fe6327d8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x230fe639ce8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x230fe639cd0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x230fe639cb0 <col:12> 'int' lvalue Var 0x230fe632870 '_Ret' 'int'
|-FunctionDecl 0x230fe63a088 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x230fe639d48 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x230fe639dc0 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe639e38 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x230fe639eb0 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x230fe639f28 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x230fe63a310 <line:74:1, line:76:1>
|   `-ReturnStmt 0x230fe63a300 <line:75:5, col:67>
|     `-CallExpr 0x230fe63a240 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x230fe63a228 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x230fe63a168 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x230fe62eac8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x230fe63a288 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x230fe63a188 <col:27> 'wchar_t *' lvalue ParmVar 0x230fe639d48 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x230fe63a2a0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x230fe63a1a8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x230fe639dc0 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x230fe63a2b8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x230fe63a1c8 <col:44> 'const wchar_t *' lvalue ParmVar 0x230fe639e38 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x230fe63a2d0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x230fe63a1e8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x230fe639eb0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x230fe63a2e8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x230fe63a208 <col:64> 'va_list':'char *' lvalue ParmVar 0x230fe639f28 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x230fe63a558 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x230fe63a338 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x230fe63a3b0 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x230fe63a7a8 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x230fe63a630 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe63a6a8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe63aa90 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x230fe63a880 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x230fe63a8f8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x230fe63a970 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x230fe632d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x230fe632be0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x230fe632c58 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x230fe632e08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe633218 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe633008 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x230fe633080 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x230fe6330f8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x230fe6332d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe633588 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x230fe633410 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x230fe633488 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x230fe633870 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe633660 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x230fe6336d8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe633750 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe63fd20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x230fe633a10 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x230fe633a88 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x230fe63fdd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe6402a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe63ffd0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x230fe640048 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x230fe6400c0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x230fe640360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe640618 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x230fe6404a0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x230fe640518 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x230fe640900 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe6406f0 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x230fe640768 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe6407e0 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe63ed88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x230fe640aa0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x230fe640b18 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe640b90 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x230fe63ee40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe63f3c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe63f040 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x230fe63f0b8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe63f130 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x230fe63f1a8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x230fe63f480 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe63f7d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x230fe63f5c0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x230fe63f638 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x230fe63f6b0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x230fe63fb58 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe63f8b0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x230fe63f928 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe63f9a0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe63fa18 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe63ae10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x230fe63ad30 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x230fe63aeb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe63b230 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe63b0b8 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x230fe63b130 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x230fe63b2e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe63b500 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x230fe63b420 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x230fe63b748 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x230fe63b5d0 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x230fe63b648 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x230fe63ba48 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x230fe63b828 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x230fe63b8a0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x230fe642e88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x230fe63bbe0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x230fe642ce0 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x230fe642f38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe643340 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x230fe643080 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x230fe6430f8 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x230fe643170 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x230fe6437a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x230fe6434e0 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x230fe643558 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x230fe6435d0 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x230fe643858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe641d18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x230fe6439a0 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x230fe643a18 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x230fe643a90 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x230fe643b08 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x230fe641f70 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x230fe641e00 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x230fe6421b0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x230fe642040 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x230fe6420b8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x230fe642368 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x230fe642288 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x230fe642658 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x230fe642438 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x230fe6424b0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x230fe6428c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x230fe6427f0 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x230fe642970 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x230fe642b88 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x230fe642ab0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x230fe63bd68 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x230fe642c58 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x230fe63bc70 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x230fe63bfb0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x230fe63be40 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x230fe63beb8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x230fe63c160 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x230fe63c088 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x230fe63c308 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x230fe63c230 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x230fe63c4b8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x230fe63c3d8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x230fe63c668 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x230fe63c588 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x230fe63c9e0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x230fe63c740 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x230fe63c7b8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe63c830 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x230fe63c8a8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x230fe63ce50 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x230fe63cad0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x230fe63cb48 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe63cbc0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe63cc80 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x230fe63ccf8 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x230fe63d160 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x230fe63cf40 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x230fe63cfc0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x230fe63d040 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x230fe63d320 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x230fe63d240 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x230fe63d610 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x230fe63d3f0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x230fe63d470 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x230fe63d4f0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x230fe63d7d0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x230fe63d6f0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x230fe63db48 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x230fe63d8a8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x230fe63d920 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x230fe63d998 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x230fe63da10 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x230fe644e78 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x230fe644d00 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x230fe644d78 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x230fe6451b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x230fe645030 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x230fe6450b0 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x230fe645260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x230fe645518 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x230fe6455b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x230fe6458f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x230fe645780 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x230fe645800 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x230fe6459a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x230fe63dc90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x230fe63dd30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x230fe63dfd0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x230fe63def0 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x230fe63e078 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x230fe63e2f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x230fe63e398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x230fe63e640 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x230fe63e560 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x230fe63e6e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x230fe63e9c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x230fe63e8e8 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x230fe63ea70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x230fe647ea8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x230fe647d30 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x230fe647da8 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x230fe647f58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x230fe648218 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x230fe6482b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x230fe6484f0 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:31:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x230fe648700 <line:34:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x230fe6485c0 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x230fe648950 <line:35:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x230fe6487d8 <col:34, col:40> col:40 _Value 'int *'
|-RecordDecl 0x230fe648a10 <.//openssl//file_jk/before\crypto\bio/bio_lcl.h:64:1, line:71:1> line:64:8 struct bio_addrinfo_st definition
| |-FieldDecl 0x230fe648ae8 <line:65:5, col:9> col:9 bai_family 'int'
| |-FieldDecl 0x230fe648b58 <line:66:5, col:9> col:9 bai_socktype 'int'
| |-FieldDecl 0x230fe648bc8 <line:67:5, col:9> col:9 bai_protocol 'int'
| |-FieldDecl 0x230fe648c30 <line:68:5, col:12> col:12 bai_addrlen 'size_t':'unsigned long long'
| |-RecordDecl 0x230fe648c88 parent 0x230fcbb1c38 <line:69:5, col:12> col:12 struct sockaddr
| |-FieldDecl 0x230fe69c160 <col:5, col:22> col:22 bai_addr 'struct sockaddr *'
| `-FieldDecl 0x230fe69c270 <line:70:5, col:29> col:29 bai_next 'struct bio_addrinfo_st *'
|-RecordDecl 0x230fe69c2c8 <line:74:1, line:83:1> line:74:7 invalid union bio_addr_st definition
| |-FieldDecl 0x230fe69c3d0 <line:75:5, col:21> col:21 invalid sa 'struct sockaddr':'struct sockaddr'
| |-RecordDecl 0x230fe69c428 parent 0x230fcbb1c38 <line:79:5, col:12> col:12 struct sockaddr_in
| `-FieldDecl 0x230fe69c548 <col:5, col:24> col:24 invalid s_in 'struct sockaddr_in':'struct sockaddr_in'
|-RecordDecl 0x230fe69c5a0 <line:91:9, line:112:1> line:91:16 struct bio_f_buffer_ctx_struct definition
| |-FieldDecl 0x230fe69c678 <line:104:5, col:9> col:9 ibuf_size 'int'
| |-FieldDecl 0x230fe69c6e8 <line:105:5, col:9> col:9 obuf_size 'int'
| |-FieldDecl 0x230fe69c758 <line:106:5, col:11> col:11 ibuf 'char *'
| |-FieldDecl 0x230fe69c7c8 <line:107:5, col:9> col:9 ibuf_len 'int'
| |-FieldDecl 0x230fe69c838 <line:108:5, col:9> col:9 ibuf_off 'int'
| |-FieldDecl 0x230fe69c8a8 <line:109:5, col:11> col:11 obuf 'char *'
| |-FieldDecl 0x230fe69c918 <line:110:5, col:9> col:9 obuf_len 'int'
| `-FieldDecl 0x230fe69c988 <line:111:5, col:9> col:9 obuf_off 'int'
|-TypedefDecl 0x230fe69ca38 <line:91:1, line:112:3> col:3 BIO_F_BUFFER_CTX 'struct bio_f_buffer_ctx_struct':'struct bio_f_buffer_ctx_struct'
| `-ElaboratedType 0x230fe69c9e0 'struct bio_f_buffer_ctx_struct' sugar
|   `-RecordType 0x230fe69c640 'struct bio_f_buffer_ctx_struct'
|     `-Record 0x230fe69c5a0 'bio_f_buffer_ctx_struct'
|-RecordDecl 0x230fe69caa8 <line:114:1, line:132:1> line:114:8 invalid struct bio_st definition
| |-FieldDecl 0x230fe69cb78 <line:115:5, col:23> col:23 invalid method 'const int *'
| |-FieldDecl 0x230fe69d140 <line:117:5, col:74> col:12 callback 'long (*)(struct bio_st *, int, const char *, int, long, long)'
| |-FieldDecl 0x230fe69d1b0 <line:118:5, col:11> col:11 cb_arg 'char *'
| |-FieldDecl 0x230fe69d220 <line:119:5, col:9> col:9 init 'int'
| |-FieldDecl 0x230fe69d290 <line:120:5, col:9> col:9 shutdown 'int'
| |-FieldDecl 0x230fe69d300 <line:121:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x230fe69d370 <line:122:5, col:9> col:9 retry_reason 'int'
| |-FieldDecl 0x230fe69d3e0 <line:123:5, col:9> col:9 num 'int'
| |-FieldDecl 0x230fe69d450 <line:124:5, col:11> col:11 ptr 'void *'
| |-FieldDecl 0x230fe69d4d0 <line:125:5, col:20> col:20 next_bio 'struct bio_st *'
| |-FieldDecl 0x230fe69d550 <line:126:5, col:20> col:20 prev_bio 'struct bio_st *'
| |-FieldDecl 0x230fe69d5c0 <line:127:5, col:9> col:9 references 'int'
| |-FieldDecl 0x230fe69d630 <line:128:5, col:14> col:14 invalid num_read 'int'
| |-FieldDecl 0x230fe69d6a0 <line:129:5, col:14> col:14 invalid num_write 'int'
| |-FieldDecl 0x230fe69d710 <line:130:5, col:20> col:20 invalid ex_data 'int'
| `-FieldDecl 0x230fe69d780 <line:131:5, col:20> col:20 invalid lock 'int *'
|-VarDecl 0x230fe69d7f0 <line:139:1, col:23> col:23 invalid bio_lookup_lock 'int *' extern
|-FunctionDecl 0x230fe69da80 <line:141:1, col:58> col:5 invalid BIO_ADDR_make 'int (int *, const struct sockaddr *)'
| |-ParmVarDecl 0x230fe69d870 <col:19, col:29> col:29 invalid ap 'int *'
| `-ParmVarDecl 0x230fe69d960 <col:33, col:56> col:56 sa 'const struct sockaddr *'
|-FunctionDecl 0x230fe69dc50 <line:142:1, col:60> col:24 invalid BIO_ADDR_sockaddr 'const struct sockaddr *(const int *)'
| `-ParmVarDecl 0x230fe69db48 <col:42, col:58> col:58 invalid ap 'const int *'
|-FunctionDecl 0x230fe69de50 <line:143:1, col:56> col:18 invalid BIO_ADDR_sockaddr_noconst 'struct sockaddr *(int *)'
| `-ParmVarDecl 0x230fe69dd10 <col:44, col:54> col:54 invalid ap 'int *'
|-FunctionDecl 0x230fe69dfe0 <line:144:1, col:52> col:11 invalid BIO_ADDR_sockaddr_size 'int (const int *)'
| `-ParmVarDecl 0x230fe69df10 <col:34, col:50> col:50 invalid ap 'const int *'
|-FunctionDecl 0x230fe69e148 <line:145:1, col:61> col:11 invalid BIO_ADDRINFO_sockaddr_size 'int (const int *)'
| `-ParmVarDecl 0x230fe69e0b0 <col:38, col:58> col:58 invalid bai 'const int *'
|-FunctionDecl 0x230fe69e2b0 <line:146:1, col:69> col:24 invalid BIO_ADDRINFO_sockaddr 'const struct sockaddr *(const int *)'
| `-ParmVarDecl 0x230fe69e208 <col:46, col:66> col:66 invalid bai 'const int *'
|-VarDecl 0x230fe69e370 <line:149:1, col:23> col:23 invalid bio_type_lock 'int *' extern
|-FunctionDecl 0x230fe69e470 <line:151:1, col:31> col:6 bio_sock_cleanup_int 'void (void)'
|-RecordDecl 0x230fe69e528 <.//openssl//file_jk/before\crypto\bio\bss_conn.c:17:9, line:36:1> line:17:16 invalid struct bio_connect_st definition
| |-FieldDecl 0x230fe69e5f8 <line:18:5, col:9> col:9 referenced state 'int'
| |-FieldDecl 0x230fe69e668 <line:19:5, col:9> col:9 referenced connect_family 'int'
| |-FieldDecl 0x230fe69e6d8 <line:20:5, col:11> col:11 referenced param_hostname 'char *'
| |-FieldDecl 0x230fe69e748 <line:21:5, col:11> col:11 referenced param_service 'char *'
| |-FieldDecl 0x230fe69e7b8 <line:22:5, col:9> col:9 referenced connect_mode 'int'
| |-FieldDecl 0x230fe69e828 <line:24:5, col:19> col:19 invalid addr_first 'int *'
| |-FieldDecl 0x230fe69e898 <line:25:5, col:25> col:25 invalid addr_iter 'const int *'
| `-FieldDecl 0x230fe69e908 <line:35:5, col:18> col:18 invalid info_callback 'int *'
|-TypedefDecl 0x230fe69e9b8 <line:17:1, line:36:3> col:3 referenced BIO_CONNECT 'struct bio_connect_st':'struct bio_connect_st'
| `-ElaboratedType 0x230fe69e960 'struct bio_connect_st' sugar
|   `-RecordType 0x230fe69e5c0 'struct bio_connect_st'
|     `-Record 0x230fe69e528 'bio_connect_st'
|-FunctionDecl 0x230fe69ec30 <line:38:1, col:55> col:12 invalid conn_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x230fe69ea40 <col:23, col:28> col:28 invalid h 'int *'
| |-ParmVarDecl 0x230fe69eac0 <col:31, col:43> col:43 buf 'const char *'
| `-ParmVarDecl 0x230fe69eb40 <col:48, col:52> col:52 num 'int'
|-FunctionDecl 0x230fe69eef0 <line:39:1, col:49> col:12 invalid conn_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x230fe69ed00 <col:22, col:27> col:27 invalid h 'int *'
| |-ParmVarDecl 0x230fe69ed80 <col:30, col:36> col:36 buf 'char *'
| `-ParmVarDecl 0x230fe69ee00 <col:41, col:45> col:45 size 'int'
|-FunctionDecl 0x230fe6a41d0 <line:40:1, col:45> col:12 invalid conn_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x230fe69efc0 <col:22, col:27> col:27 invalid h 'int *'
| `-ParmVarDecl 0x230fe6a40f0 <col:30, col:42> col:42 str 'const char *'
|-FunctionDecl 0x230fe6a4510 <line:41:1, col:61> col:13 invalid conn_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x230fe6a4298 <col:23, col:28> col:28 invalid h 'int *'
| |-ParmVarDecl 0x230fe6a4318 <col:31, col:35> col:35 cmd 'int'
| |-ParmVarDecl 0x230fe6a4398 <col:40, col:45> col:45 arg1 'long'
| `-ParmVarDecl 0x230fe6a4418 <col:51, col:57> col:57 arg2 'void *'
|-FunctionDecl 0x230fe6a4680 <line:42:1, col:27> col:12 invalid conn_new 'int (int *)' static
| `-ParmVarDecl 0x230fe6a45e8 <col:21, col:26> col:26 invalid h 'int *'
|-FunctionDecl 0x230fe6a47d8 <line:43:1, col:31> col:12 invalid conn_free 'int (int *)' static
| `-ParmVarDecl 0x230fe6a4740 <col:22, col:27> col:27 invalid data 'int *'
|-FunctionDecl 0x230fe6a4a80 <line:44:1, col:62> col:13 invalid conn_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x230fe6a4898 <col:32, col:37> col:37 invalid h 'int *'
| |-ParmVarDecl 0x230fe6a4918 <col:40, col:44> col:44 cmd 'int'
| `-ParmVarDecl 0x230fe6a4998 <col:49, <invalid sloc>> col:62 invalid 'int *'
|-FunctionDecl 0x230fe6a4d60 <line:46:1, col:45> col:12 invalid conn_state 'int (int *, BIO_CONNECT *)' static
| |-ParmVarDecl 0x230fe6a4b50 <col:23, col:28> col:28 invalid b 'int *'
| `-ParmVarDecl 0x230fe6a4c48 <col:31, col:44> col:44 c 'BIO_CONNECT *'
|-FunctionDecl 0x230fe6a4ee8 <line:47:1, col:40> col:13 invalid conn_close_socket 'void (int *)' static
| `-ParmVarDecl 0x230fe6a4e28 <col:31, col:36> col:36 invalid data 'int *'
|-FunctionDecl 0x230fe6a5100 <line:48:1, col:34> col:14 used BIO_CONNECT_new 'BIO_CONNECT *(void)'
|-FunctionDecl 0x230fe6a52d8 <line:49:1, col:37> col:6 used BIO_CONNECT_free 'void (BIO_CONNECT *)'
| `-ParmVarDecl 0x230fe6a51c8 <col:23, col:36> col:36 a 'BIO_CONNECT *'
|-VarDecl 0x230fe6a53b0 <line:58:1, col:25> col:25 invalid methods_connectp 'const int' static
|-FunctionDecl 0x230fe6a5638 <line:71:1, line:216:1> line:71:12 invalid conn_state 'int (int *, BIO_CONNECT *)' static
| |-ParmVarDecl 0x230fe6a5520 <col:23, col:28> col:28 invalid b 'int *'
| |-ParmVarDecl 0x230fe6a5598 <col:31, col:44> col:44 used c 'BIO_CONNECT *'
| `-CompoundStmt 0x230fe6a0840 <line:72:1, line:216:1>
|   |-DeclStmt 0x230fe6a5858 <line:73:5, col:20>
|   | |-VarDecl 0x230fe6a5718 <col:5, col:16> col:9 used ret 'int' cinit
|   | | `-UnaryOperator 0x230fe6a57a8 <col:15, col:16> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x230fe6a5780 <col:16> 'int' 1
|   | `-VarDecl 0x230fe6a57d8 <col:5, col:19> col:19 used i 'int'
|   |-ForStmt 0x230fe6a0618 <line:79:5, line:208:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x230fe6a05f8 <line:79:14, line:208:5>
|   |   |-SwitchStmt 0x230fe6a5a88 <line:80:9, line:202:9>
|   |   | |-ImplicitCastExpr 0x230fe6a5a70 <line:80:17, col:20> 'int' <LValueToRValue>
|   |   | | `-MemberExpr 0x230fe6a5a40 <col:17, col:20> 'int' lvalue ->state 0x230fe69e5f8
|   |   | |   `-ImplicitCastExpr 0x230fe6a5a28 <col:17> 'BIO_CONNECT *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x230fe6a5a08 <col:17> 'BIO_CONNECT *' lvalue ParmVar 0x230fe6a5598 'c' 'BIO_CONNECT *'
|   |   | `-CompoundStmt 0x230fe6a0200 <col:27, line:202:9>
|   |   |   |-CaseStmt 0x230fe6a5ae8 <line:81:9, line:88:13>
|   |   |   | |-ConstantExpr 0x230fe6a5ad0 <line:51:42> 'int'
|   |   |   | | `-IntegerLiteral 0x230fe6a5aa8 <col:42> 'int' 1
|   |   |   | `-IfStmt 0x230fe6a12c0 <line:82:13, line:88:13>
|   |   |   |   |-BinaryOperator 0x230fe6a5d90 <line:82:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '&&'
|   |   |   |   | |-BinaryOperator 0x230fe6a5c30 <.//openssl//file_jk/before\crypto\bio\bss_conn.c:82:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |   |   |   | | |-ImplicitCastExpr 0x230fe6a5c00 <.//openssl//file_jk/before\crypto\bio\bss_conn.c:82:17, col:20> 'char *' <LValueToRValue>
|   |   |   |   | | | `-MemberExpr 0x230fe6a5b48 <col:17, col:20> 'char *' lvalue ->param_hostname 0x230fe69e6d8
|   |   |   |   | | |   `-ImplicitCastExpr 0x230fe6a5b30 <col:17> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   |   | | |     `-DeclRefExpr 0x230fe6a5b10 <col:17> 'BIO_CONNECT *' lvalue ParmVar 0x230fe6a5598 'c' 'BIO_CONNECT *'
|   |   |   |   | | `-ImplicitCastExpr 0x230fe6a5c18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |   |   |   | |   `-ParenExpr 0x230fe6a5be0 <col:17, col:27> 'void *'
|   |   |   |   | |     `-CStyleCastExpr 0x230fe6a5bb8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |   |   | |       `-IntegerLiteral 0x230fe6a5b78 <col:26> 'int' 0
|   |   |   |   | `-BinaryOperator 0x230fe6a5d70 <.//openssl//file_jk/before\crypto\bio\bss_conn.c:82:46, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |   |   |   |   |-ImplicitCastExpr 0x230fe6a5d40 <.//openssl//file_jk/before\crypto\bio\bss_conn.c:82:46, col:49> 'char *' <LValueToRValue>
|   |   |   |   |   | `-MemberExpr 0x230fe6a5c88 <col:46, col:49> 'char *' lvalue ->param_service 0x230fe69e748
|   |   |   |   |   |   `-ImplicitCastExpr 0x230fe6a5c70 <col:46> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   |   |   |     `-DeclRefExpr 0x230fe6a5c50 <col:46> 'BIO_CONNECT *' lvalue ParmVar 0x230fe6a5598 'c' 'BIO_CONNECT *'
|   |   |   |   |   `-ImplicitCastExpr 0x230fe6a5d58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |   |   |   |     `-ParenExpr 0x230fe6a5d20 <col:17, col:27> 'void *'
|   |   |   |   |       `-CStyleCastExpr 0x230fe6a5cf8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |   |   |         `-IntegerLiteral 0x230fe6a5cb8 <col:26> 'int' 0
|   |   |   |   `-CompoundStmt 0x230fe6a12a0 <.//openssl//file_jk/before\crypto\bio\bss_conn.c:82:72, line:88:13>
|   |   |   |     |-CallExpr 0x230fe6a1190 <line:84:17, line:86:65> 'int'
|   |   |   |     | |-ImplicitCastExpr 0x230fe6a1178 <line:84:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |     | | `-DeclRefExpr 0x230fe6a5fd8 <col:17> 'int ()' Function 0x230fe6a5f10 'ERR_add_error_data' 'int ()'
|   |   |   |     | |-IntegerLiteral 0x230fe6a5ff8 <col:36> 'int' 4
|   |   |   |     | |-ImplicitCastExpr 0x230fe6a11d8 <line:85:36> 'char *' <ArrayToPointerDecay>
|   |   |   |     | | `-StringLiteral 0x230fe6a6058 <col:36> 'char [10]' lvalue "hostname="
|   |   |   |     | |-ImplicitCastExpr 0x230fe6a11f0 <col:49, col:52> 'char *' <LValueToRValue>
|   |   |   |     | | `-MemberExpr 0x230fe6a60b8 <col:49, col:52> 'char *' lvalue ->param_hostname 0x230fe69e6d8
|   |   |   |     | |   `-ImplicitCastExpr 0x230fe6a60a0 <col:49> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   |     | |     `-DeclRefExpr 0x230fe6a6080 <col:49> 'BIO_CONNECT *' lvalue ParmVar 0x230fe6a5598 'c' 'BIO_CONNECT *'
|   |   |   |     | |-ImplicitCastExpr 0x230fe6a1208 <line:86:36> 'char *' <ArrayToPointerDecay>
|   |   |   |     | | `-StringLiteral 0x230fe6a10c0 <col:36> 'char [10]' lvalue " service="
|   |   |   |     | `-ImplicitCastExpr 0x230fe6a1220 <col:49, col:52> 'char *' <LValueToRValue>
|   |   |   |     |   `-MemberExpr 0x230fe6a1120 <col:49, col:52> 'char *' lvalue ->param_service 0x230fe69e748
|   |   |   |     |     `-ImplicitCastExpr 0x230fe6a1108 <col:49> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   |     |       `-DeclRefExpr 0x230fe6a10e8 <col:49> 'BIO_CONNECT *' lvalue ParmVar 0x230fe6a5598 'c' 'BIO_CONNECT *'
|   |   |   |     `-GotoStmt 0x230fe6a1288 <line:87:17, col:22> 'exit_loop' 0x230fe6a1238
|   |   |   |-BinaryOperator 0x230fe6a1368 <line:89:13, line:52:42> 'int' '='
|   |   |   | |-MemberExpr 0x230fe6a1310 <line:89:13, col:16> 'int' lvalue ->state 0x230fe69e5f8
|   |   |   | | `-ImplicitCastExpr 0x230fe6a12f8 <col:13> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x230fe6a12d8 <col:13> 'BIO_CONNECT *' lvalue ParmVar 0x230fe6a5598 'c' 'BIO_CONNECT *'
|   |   |   | `-IntegerLiteral 0x230fe6a1340 <line:52:42> 'int' 2
|   |   |   |-BreakStmt 0x230fe6a1388 <line:90:13>
|   |   |   |-CaseStmt 0x230fe6a13d0 <line:92:9, line:123:13>
|   |   |   | |-ConstantExpr 0x230fe6a13b8 <line:52:42> 'int'
|   |   |   | | `-IntegerLiteral 0x230fe6a1390 <col:42> 'int' 2
|   |   |   | `-CompoundStmt 0x230fe6a1978 <line:93:13, line:123:13>
|   |   |   |   |-DeclStmt 0x230fe6a1478 <line:94:17, col:39>
|   |   |   |   | `-VarDecl 0x230fe6a1410 <col:17, col:21> col:21 used family 'int'
|   |   |   |   |-SwitchStmt 0x230fe6a1510 <line:95:17, line:118:17>
|   |   |   |   | |-ImplicitCastExpr 0x230fe6a14f8 <line:95:25, col:28> 'int' <LValueToRValue>
|   |   |   |   | | `-MemberExpr 0x230fe6a14c8 <col:25, col:28> 'int' lvalue ->connect_family 0x230fe69e668
|   |   |   |   | |   `-ImplicitCastExpr 0x230fe6a14b0 <col:25> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   |   | |     `-DeclRefExpr 0x230fe6a1490 <col:25> 'BIO_CONNECT *' lvalue ParmVar 0x230fe6a5598 'c' 'BIO_CONNECT *'
|   |   |   |   | `-CompoundStmt 0x230fe6a1690 <col:44, line:118:17>
|   |   |   |   |   |-IfStmt 0x230fe6a15a8 <line:97:21, line:107:21>
|   |   |   |   |   | |-IntegerLiteral 0x230fe6a1530 <line:97:25> 'int' 1
|   |   |   |   |   | `-CompoundStmt 0x230fe6a1590 <col:28, line:107:21>
|   |   |   |   |   |   `-GotoStmt 0x230fe6a1578 <line:106:25, col:30> 'exit_loop' 0x230fe6a1238
|   |   |   |   |   |-BreakStmt 0x230fe6a15c0 <line:108:21>
|   |   |   |   |   |-BreakStmt 0x230fe6a1600 <line:111:21>
|   |   |   |   |   |-BreakStmt 0x230fe6a1628 <line:114:21>
|   |   |   |   |   |-DefaultStmt 0x230fe6a1658 <line:115:17, col:24>
|   |   |   |   |   | `-NullStmt 0x230fe6a1650 <col:24>
|   |   |   |   |   `-GotoStmt 0x230fe6a1678 <line:117:21, col:26> 'exit_loop' 0x230fe6a1238
|   |   |   |   `-IfStmt 0x230fe6a1960 <line:119:17, line:122:26>
|   |   |   |     |-OpaqueValueExpr 0x230fe6a1948 <<invalid sloc>> '_Bool'
|   |   |   |     `-GotoStmt 0x230fe6a1930 <col:21, col:26> 'exit_loop' 0x230fe6a1238
|   |   |   |-IfStmt 0x230fe6a1ac8 <line:124:13, line:127:13>
|   |   |   | |-OpaqueValueExpr 0x230fe6a1ab0 <<invalid sloc>> '_Bool'
|   |   |   | `-CompoundStmt 0x230fe6a1a98 <line:124:40, line:127:13>
|   |   |   |   `-GotoStmt 0x230fe6a1a80 <line:126:17, col:22> 'exit_loop' 0x230fe6a1238
|   |   |   |-BinaryOperator 0x230fe6a1be0 <line:129:13, line:53:42> 'int' '='
|   |   |   | |-MemberExpr 0x230fe6a1b88 <line:129:13, col:16> 'int' lvalue ->state 0x230fe69e5f8
|   |   |   | | `-ImplicitCastExpr 0x230fe6a1b70 <col:13> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x230fe6a1b50 <col:13> 'BIO_CONNECT *' lvalue ParmVar 0x230fe6a5598 'c' 'BIO_CONNECT *'
|   |   |   | `-IntegerLiteral 0x230fe6a1bb8 <line:53:42> 'int' 3
|   |   |   |-BreakStmt 0x230fe6a1c00 <line:130:13>
|   |   |   |-CaseStmt 0x230fe6a1c48 <line:132:9, <invalid sloc>>
|   |   |   | |-ConstantExpr 0x230fe6a1c30 <line:53:42> 'int'
|   |   |   | | `-IntegerLiteral 0x230fe6a1c08 <col:42> 'int' 3
|   |   |   | `-NullStmt 0x230fe69f1e8 <<invalid sloc>>
|   |   |   |-IfStmt 0x230fe69f700 <line:136:13, line:143:13>
|   |   |   | |-OpaqueValueExpr 0x230fe69f6e8 <<invalid sloc>> '_Bool'
|   |   |   | `-CompoundStmt 0x230fe69f6c8 <line:136:45, line:143:13>
|   |   |   |   |-CallExpr 0x230fe69f5e8 <line:138:17, line:140:65> 'int'
|   |   |   |   | |-ImplicitCastExpr 0x230fe69f5d0 <line:138:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |   | | `-DeclRefExpr 0x230fe69f468 <col:17> 'int ()' Function 0x230fe6a5f10 'ERR_add_error_data' 'int ()'
|   |   |   |   | |-IntegerLiteral 0x230fe69f488 <col:36> 'int' 4
|   |   |   |   | |-ImplicitCastExpr 0x230fe69f630 <line:139:36> 'char *' <ArrayToPointerDecay>
|   |   |   |   | | `-StringLiteral 0x230fe69f4b0 <col:36> 'char [10]' lvalue "hostname="
|   |   |   |   | |-ImplicitCastExpr 0x230fe69f648 <col:49, col:52> 'char *' <LValueToRValue>
|   |   |   |   | | `-MemberExpr 0x230fe69f510 <col:49, col:52> 'char *' lvalue ->param_hostname 0x230fe69e6d8
|   |   |   |   | |   `-ImplicitCastExpr 0x230fe69f4f8 <col:49> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   |   | |     `-DeclRefExpr 0x230fe69f4d8 <col:49> 'BIO_CONNECT *' lvalue ParmVar 0x230fe6a5598 'c' 'BIO_CONNECT *'
|   |   |   |   | |-ImplicitCastExpr 0x230fe69f660 <line:140:36> 'char *' <ArrayToPointerDecay>
|   |   |   |   | | `-StringLiteral 0x230fe69f540 <col:36> 'char [10]' lvalue " service="
|   |   |   |   | `-ImplicitCastExpr 0x230fe69f678 <col:49, col:52> 'char *' <LValueToRValue>
|   |   |   |   |   `-MemberExpr 0x230fe69f5a0 <col:49, col:52> 'char *' lvalue ->param_service 0x230fe69e748
|   |   |   |   |     `-ImplicitCastExpr 0x230fe69f588 <col:49> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   |   |       `-DeclRefExpr 0x230fe69f568 <col:49> 'BIO_CONNECT *' lvalue ParmVar 0x230fe6a5598 'c' 'BIO_CONNECT *'
|   |   |   |   `-GotoStmt 0x230fe69f6b0 <line:142:17, col:22> 'exit_loop' 0x230fe6a1238
|   |   |   |-BinaryOperator 0x230fe69f7c8 <line:145:13, line:54:42> 'int' '='
|   |   |   | |-MemberExpr 0x230fe69f770 <line:145:13, col:16> 'int' lvalue ->state 0x230fe69e5f8
|   |   |   | | `-ImplicitCastExpr 0x230fe69f758 <col:13> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x230fe69f738 <col:13> 'BIO_CONNECT *' lvalue ParmVar 0x230fe6a5598 'c' 'BIO_CONNECT *'
|   |   |   | `-IntegerLiteral 0x230fe69f7a0 <line:54:42> 'int' 4
|   |   |   |-BreakStmt 0x230fe69f7e8 <line:146:13>
|   |   |   |-CaseStmt 0x230fe69f830 <line:148:9, <invalid sloc>>
|   |   |   | |-ConstantExpr 0x230fe69f818 <line:54:42> 'int'
|   |   |   | | `-IntegerLiteral 0x230fe69f7f0 <col:42> 'int' 4
|   |   |   | `-NullStmt 0x230fe69f968 <<invalid sloc>>
|   |   |   |-IfStmt 0x230fe6a7af0 <line:153:13, line:178:13> has_else
|   |   |   | |-BinaryOperator 0x230fe69fcd8 <line:153:17, col:24> 'int' '=='
|   |   |   | | |-ImplicitCastExpr 0x230fe69fcc0 <col:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x230fe69fc78 <col:17> 'int' lvalue Var 0x230fe6a5718 'ret' 'int'
|   |   |   | | `-IntegerLiteral 0x230fe69fc98 <col:24> 'int' 0
|   |   |   | |-CompoundStmt 0x230fe6a7a08 <col:27, line:176:13>
|   |   |   | | |-IfStmt 0x230fe6a79c8 <line:154:17, line:174:17> has_else
|   |   |   | | | |-CallExpr 0x230fe69fe40 <line:154:21, col:46> 'int'
|   |   |   | | | | |-ImplicitCastExpr 0x230fe69fe28 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | | | | `-DeclRefExpr 0x230fe69fde8 <col:21> 'int ()' Function 0x230fe69fd20 'BIO_sock_should_retry' 'int ()'
|   |   |   | | | | `-ImplicitCastExpr 0x230fe69fe68 <col:43> 'int' <LValueToRValue>
|   |   |   | | | |   `-DeclRefExpr 0x230fe69fe08 <col:43> 'int' lvalue Var 0x230fe6a5718 'ret' 'int'
|   |   |   | | | |-CompoundStmt 0x230fe6a7240 <col:49, line:159:17>
|   |   |   | | | | |-BinaryOperator 0x230fe6a0020 <line:156:21, line:56:42> 'int' '='
|   |   |   | | | | | |-MemberExpr 0x230fe69ffc8 <line:156:21, col:24> 'int' lvalue ->state 0x230fe69e5f8
|   |   |   | | | | | | `-ImplicitCastExpr 0x230fe69ffb0 <col:21> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   | | | | | |   `-DeclRefExpr 0x230fe69ff90 <col:21> 'BIO_CONNECT *' lvalue ParmVar 0x230fe6a5598 'c' 'BIO_CONNECT *'
|   |   |   | | | | | `-IntegerLiteral 0x230fe69fff8 <line:56:42> 'int' 6
|   |   |   | | | | `-CallExpr 0x230fe6a7220 <line:158:21, col:37> 'int'
|   |   |   | | | |   `-ImplicitCastExpr 0x230fe6a7208 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | | |     `-DeclRefExpr 0x230fe6a71e8 <col:21> 'int ()' Function 0x230fe6a7120 'ERR_clear_error' 'int ()'
|   |   |   | | | `-IfStmt 0x230fe6a79a0 <line:159:24, line:174:17> has_else
|   |   |   | | |   |-OpaqueValueExpr 0x230fe6a7988 <<invalid sloc>> '_Bool'
|   |   |   | | |   |-CompoundStmt 0x230fe6a7688 <line:160:37, line:168:17>
|   |   |   | | |   | |-BinaryOperator 0x230fe6a7608 <line:165:21, line:53:42> 'int' '='
|   |   |   | | |   | | |-MemberExpr 0x230fe6a75b0 <line:165:21, col:24> 'int' lvalue ->state 0x230fe69e5f8
|   |   |   | | |   | | | `-ImplicitCastExpr 0x230fe6a7598 <col:21> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   | | |   | | |   `-DeclRefExpr 0x230fe6a7578 <col:21> 'BIO_CONNECT *' lvalue ParmVar 0x230fe6a5598 'c' 'BIO_CONNECT *'
|   |   |   | | |   | | `-IntegerLiteral 0x230fe6a75e0 <line:53:42> 'int' 3
|   |   |   | | |   | |-CallExpr 0x230fe6a7660 <line:166:21, col:37> 'int'
|   |   |   | | |   | | `-ImplicitCastExpr 0x230fe6a7648 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | |   | |   `-DeclRefExpr 0x230fe6a7628 <col:21> 'int ()' Function 0x230fe6a7120 'ERR_clear_error' 'int ()'
|   |   |   | | |   | `-BreakStmt 0x230fe6a7680 <line:167:21>
|   |   |   | | |   `-CompoundStmt 0x230fe6a7970 <line:168:24, line:174:17>
|   |   |   | | |     `-CallExpr 0x230fe6a78a8 <line:170:21, line:172:69> 'int'
|   |   |   | | |       |-ImplicitCastExpr 0x230fe6a7890 <line:170:21> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | |       | `-DeclRefExpr 0x230fe6a7728 <col:21> 'int ()' Function 0x230fe6a5f10 'ERR_add_error_data' 'int ()'
|   |   |   | | |       |-IntegerLiteral 0x230fe6a7748 <col:40> 'int' 4
|   |   |   | | |       |-ImplicitCastExpr 0x230fe6a78f0 <line:171:40> 'char *' <ArrayToPointerDecay>
|   |   |   | | |       | `-StringLiteral 0x230fe6a7770 <col:40> 'char [10]' lvalue "hostname="
|   |   |   | | |       |-ImplicitCastExpr 0x230fe6a7908 <col:53, col:56> 'char *' <LValueToRValue>
|   |   |   | | |       | `-MemberExpr 0x230fe6a77d0 <col:53, col:56> 'char *' lvalue ->param_hostname 0x230fe69e6d8
|   |   |   | | |       |   `-ImplicitCastExpr 0x230fe6a77b8 <col:53> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   | | |       |     `-DeclRefExpr 0x230fe6a7798 <col:53> 'BIO_CONNECT *' lvalue ParmVar 0x230fe6a5598 'c' 'BIO_CONNECT *'
|   |   |   | | |       |-ImplicitCastExpr 0x230fe6a7920 <line:172:40> 'char *' <ArrayToPointerDecay>
|   |   |   | | |       | `-StringLiteral 0x230fe6a7800 <col:40> 'char [10]' lvalue " service="
|   |   |   | | |       `-ImplicitCastExpr 0x230fe6a7938 <col:53, col:56> 'char *' <LValueToRValue>
|   |   |   | | |         `-MemberExpr 0x230fe6a7860 <col:53, col:56> 'char *' lvalue ->param_service 0x230fe69e748
|   |   |   | | |           `-ImplicitCastExpr 0x230fe6a7848 <col:53> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   | | |             `-DeclRefExpr 0x230fe6a7828 <col:53> 'BIO_CONNECT *' lvalue ParmVar 0x230fe6a5598 'c' 'BIO_CONNECT *'
|   |   |   | | `-GotoStmt 0x230fe6a79f0 <line:175:17, col:22> 'exit_loop' 0x230fe6a1238
|   |   |   | `-CompoundStmt 0x230fe6a7ad8 <line:176:20, line:178:13>
|   |   |   |   `-BinaryOperator 0x230fe6a7ab8 <line:177:17, line:55:42> 'int' '='
|   |   |   |     |-MemberExpr 0x230fe6a7a60 <line:177:17, col:20> 'int' lvalue ->state 0x230fe69e5f8
|   |   |   |     | `-ImplicitCastExpr 0x230fe6a7a48 <col:17> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   |     |   `-DeclRefExpr 0x230fe6a7a28 <col:17> 'BIO_CONNECT *' lvalue ParmVar 0x230fe6a5598 'c' 'BIO_CONNECT *'
|   |   |   |     `-IntegerLiteral 0x230fe6a7a90 <line:55:42> 'int' 5
|   |   |   |-BreakStmt 0x230fe6a7b18 <line:179:13>
|   |   |   |-CaseStmt 0x230fe6a7b60 <line:181:9, <invalid sloc>>
|   |   |   | |-ConstantExpr 0x230fe6a7b48 <line:56:42> 'int'
|   |   |   | | `-IntegerLiteral 0x230fe6a7b20 <col:42> 'int' 6
|   |   |   | `-NullStmt 0x230fe6a7cd0 <<invalid sloc>>
|   |   |   |-IfStmt 0x230fe6a00b0 <line:183:13, line:55:42> has_else
|   |   |   | |-ImplicitCastExpr 0x230fe6a7cf8 <line:183:17> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x230fe6a7cd8 <col:17> 'int' lvalue Var 0x230fe6a57d8 'i' 'int'
|   |   |   | |-CompoundStmt 0x230fe6a8038 <col:20, line:192:13>
|   |   |   | | |-CallExpr 0x230fe6a7ef0 <line:186:17, line:188:65> 'int'
|   |   |   | | | |-ImplicitCastExpr 0x230fe6a7ed8 <line:186:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | | | `-DeclRefExpr 0x230fe6a7d70 <col:17> 'int ()' Function 0x230fe6a5f10 'ERR_add_error_data' 'int ()'
|   |   |   | | | |-IntegerLiteral 0x230fe6a7d90 <col:36> 'int' 4
|   |   |   | | | |-ImplicitCastExpr 0x230fe6a7f38 <line:187:36> 'char *' <ArrayToPointerDecay>
|   |   |   | | | | `-StringLiteral 0x230fe6a7db8 <col:36> 'char [10]' lvalue "hostname="
|   |   |   | | | |-ImplicitCastExpr 0x230fe6a7f50 <col:49, col:52> 'char *' <LValueToRValue>
|   |   |   | | | | `-MemberExpr 0x230fe6a7e18 <col:49, col:52> 'char *' lvalue ->param_hostname 0x230fe69e6d8
|   |   |   | | | |   `-ImplicitCastExpr 0x230fe6a7e00 <col:49> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   | | | |     `-DeclRefExpr 0x230fe6a7de0 <col:49> 'BIO_CONNECT *' lvalue ParmVar 0x230fe6a5598 'c' 'BIO_CONNECT *'
|   |   |   | | | |-ImplicitCastExpr 0x230fe6a7f68 <line:188:36> 'char *' <ArrayToPointerDecay>
|   |   |   | | | | `-StringLiteral 0x230fe6a7e48 <col:36> 'char [10]' lvalue " service="
|   |   |   | | | `-ImplicitCastExpr 0x230fe6a7f80 <col:49, col:52> 'char *' <LValueToRValue>
|   |   |   | | |   `-MemberExpr 0x230fe6a7ea8 <col:49, col:52> 'char *' lvalue ->param_service 0x230fe69e748
|   |   |   | | |     `-ImplicitCastExpr 0x230fe6a7e90 <col:49> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   | | |       `-DeclRefExpr 0x230fe6a7e70 <col:49> 'BIO_CONNECT *' lvalue ParmVar 0x230fe6a5598 'c' 'BIO_CONNECT *'
|   |   |   | | |-BinaryOperator 0x230fe6a8000 <line:190:17, col:23> 'int' '='
|   |   |   | | | |-DeclRefExpr 0x230fe6a7fb8 <col:17> 'int' lvalue Var 0x230fe6a5718 'ret' 'int'
|   |   |   | | | `-IntegerLiteral 0x230fe6a7fd8 <col:23> 'int' 0
|   |   |   | | `-GotoStmt 0x230fe6a8020 <line:191:17, col:22> 'exit_loop' 0x230fe6a1238
|   |   |   | `-BinaryOperator 0x230fe6a80f0 <line:193:17, line:55:42> 'int' '='
|   |   |   |   |-MemberExpr 0x230fe6a8098 <line:193:17, col:20> 'int' lvalue ->state 0x230fe69e5f8
|   |   |   |   | `-ImplicitCastExpr 0x230fe6a8080 <col:17> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x230fe6a8060 <col:17> 'BIO_CONNECT *' lvalue ParmVar 0x230fe6a5598 'c' 'BIO_CONNECT *'
|   |   |   |   `-IntegerLiteral 0x230fe6a80c8 <line:55:42> 'int' 5
|   |   |   |-BreakStmt 0x230fe6a00d8 <line:194:13>
|   |   |   |-CaseStmt 0x230fe6a0120 <line:196:9, line:197:19>
|   |   |   | |-ConstantExpr 0x230fe6a0108 <line:55:42> 'int'
|   |   |   | | `-IntegerLiteral 0x230fe6a00e0 <col:42> 'int' 5
|   |   |   | `-BinaryOperator 0x230fe6a0190 <line:197:13, col:19> 'int' '='
|   |   |   |   |-DeclRefExpr 0x230fe6a0148 <col:13> 'int' lvalue Var 0x230fe6a5718 'ret' 'int'
|   |   |   |   `-IntegerLiteral 0x230fe6a0168 <col:19> 'int' 1
|   |   |   |-GotoStmt 0x230fe6a01b0 <line:198:13, col:18> 'exit_loop' 0x230fe6a1238
|   |   |   `-DefaultStmt 0x230fe6a01e0 <line:199:9, line:201:18>
|   |   |     `-GotoStmt 0x230fe6a01c8 <col:13, col:18> 'exit_loop' 0x230fe6a1238
|   |   `-IfStmt 0x230fe6a05e0 <line:204:9, line:207:9>
|   |     |-OpaqueValueExpr 0x230fe6a05c8 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x230fe6a05b0 <line:204:25, line:207:9>
|   |       `-IfStmt 0x230fe6a0598 <line:205:13, line:206:22>
|   |         |-OpaqueValueExpr 0x230fe6a0580 <<invalid sloc>> '_Bool'
|   |         `-GotoStmt 0x230fe6a0568 <col:17, col:22> 'end' 0x230fe6a0518
|   |-LabelStmt 0x230fe6a07a8 <line:211:2, col:11> 'exit_loop'
|   | `-NullStmt 0x230fe6a07a0 <col:11>
|   `-LabelStmt 0x230fe6a0828 <line:214:2, line:215:16> 'end'
|     `-ReturnStmt 0x230fe6a0818 <col:5, col:16>
|       `-ImplicitCastExpr 0x230fe6a0800 <col:12, col:16> 'int' <LValueToRValue>
|         `-ParenExpr 0x230fe6a07e0 <col:12, col:16> 'int' lvalue
|           `-DeclRefExpr 0x230fe6a07c0 <col:13> 'int' lvalue Var 0x230fe6a5718 'ret' 'int'
|-FunctionDecl 0x230fe6a0908 prev 0x230fe6a5100 <line:218:1, line:227:1> line:218:14 used BIO_CONNECT_new 'BIO_CONNECT *(void)'
| `-CompoundStmt 0x230fe6a0fd0 <line:219:1, line:227:1>
|   |-DeclStmt 0x230fe6a0a20 <line:220:5, col:21>
|   | `-VarDecl 0x230fe6a09b8 <col:5, col:18> col:18 used ret 'BIO_CONNECT *'
|   |-IfStmt 0x230fe6a0e38 <line:222:5, line:223:21>
|   | |-BinaryOperator 0x230fe6a0d48 <line:222:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ParenExpr 0x230fe6a0c88 <.//openssl//file_jk/before\crypto\bio\bss_conn.c:222:9, col:44> 'BIO_CONNECT *'
|   | | | `-BinaryOperator 0x230fe6a0c68 <col:10, col:43> 'BIO_CONNECT *' '='
|   | | |   |-DeclRefExpr 0x230fe6a0a38 <col:10> 'BIO_CONNECT *' lvalue Var 0x230fe6a09b8 'ret' 'BIO_CONNECT *'
|   | | |   `-ImplicitCastExpr 0x230fe6a0c50 <col:16, col:43> 'BIO_CONNECT *' <IntegralToPointer>
|   | | |     `-CallExpr 0x230fe6a0c28 <col:16, col:43> 'int'
|   | | |       |-ImplicitCastExpr 0x230fe6a0c10 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x230fe6a0b60 <col:16> 'int ()' Function 0x230fe6a0a98 'OPENSSL_zalloc' 'int ()'
|   | | |       `-UnaryExprOrTypeTraitExpr 0x230fe6a0bf0 <col:31, col:42> 'unsigned long long' sizeof
|   | | |         `-ParenExpr 0x230fe6a0bd0 <col:37, col:42> 'BIO_CONNECT':'struct bio_connect_st' lvalue
|   | | |           `-UnaryOperator 0x230fe6a0bb8 <col:38, col:39> 'BIO_CONNECT':'struct bio_connect_st' lvalue prefix '*' cannot overflow
|   | | |             `-ImplicitCastExpr 0x230fe6a0ba0 <col:39> 'BIO_CONNECT *' <LValueToRValue>
|   | | |               `-DeclRefExpr 0x230fe6a0b80 <col:39> 'BIO_CONNECT *' lvalue Var 0x230fe6a09b8 'ret' 'BIO_CONNECT *' non_odr_use_unevaluated
|   | | `-ImplicitCastExpr 0x230fe6a0d30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_CONNECT *' <BitCast>
|   | |   `-ParenExpr 0x230fe6a0d10 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x230fe6a0ce8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x230fe6a0ca8 <col:26> 'int' 0
|   | `-ReturnStmt 0x230fe6a0e28 <.//openssl//file_jk/before\crypto\bio\bss_conn.c:223:9, col:21>
|   |   `-ImplicitCastExpr 0x230fe6a0e10 <col:16, col:21> 'BIO_CONNECT *' <NullToPointer>
|   |     `-ParenExpr 0x230fe6a0df0 <col:16, col:21> 'void *'
|   |       `-ParenExpr 0x230fe6a0dd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x230fe6a0da8 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x230fe6a0d68 <col:26> 'int' 0
|   |-BinaryOperator 0x230fe6a0ee0 <.//openssl//file_jk/before\crypto\bio\bss_conn.c:224:5, line:51:42> 'int' '='
|   | |-MemberExpr 0x230fe6a0e88 <line:224:5, col:10> 'int' lvalue ->state 0x230fe69e5f8
|   | | `-ImplicitCastExpr 0x230fe6a0e70 <col:5> 'BIO_CONNECT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x230fe6a0e50 <col:5> 'BIO_CONNECT *' lvalue Var 0x230fe6a09b8 'ret' 'BIO_CONNECT *'
|   | `-IntegerLiteral 0x230fe6a0eb8 <line:51:42> 'int' 1
|   `-ReturnStmt 0x230fe6a0fc0 <line:226:5, col:16>
|     `-ImplicitCastExpr 0x230fe6a0fa8 <col:12, col:16> 'BIO_CONNECT *' <LValueToRValue>
|       `-ParenExpr 0x230fe6a0f88 <col:12, col:16> 'BIO_CONNECT *' lvalue
|         `-DeclRefExpr 0x230fe6a0f68 <col:13> 'BIO_CONNECT *' lvalue Var 0x230fe6a09b8 'ret' 'BIO_CONNECT *'
|-FunctionDecl 0x230fe6aa178 prev 0x230fe6a52d8 <line:229:1, line:238:1> line:229:6 used BIO_CONNECT_free 'void (BIO_CONNECT *)'
| |-ParmVarDecl 0x230fe6a1010 <col:23, col:36> col:36 used a 'BIO_CONNECT *'
| `-CompoundStmt 0x230fe6aa7d0 <line:230:1, line:238:1>
|   |-IfStmt 0x230fe6aa328 <line:231:5, line:232:9>
|   | |-BinaryOperator 0x230fe6aa2f8 <line:231:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x230fe6aa2c8 <.//openssl//file_jk/before\crypto\bio\bss_conn.c:231:9> 'BIO_CONNECT *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x230fe6aa220 <col:9> 'BIO_CONNECT *' lvalue ParmVar 0x230fe6a1010 'a' 'BIO_CONNECT *'
|   | | `-ImplicitCastExpr 0x230fe6aa2e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_CONNECT *' <BitCast>
|   | |   `-ParenExpr 0x230fe6aa2a8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x230fe6aa280 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x230fe6aa240 <col:26> 'int' 0
|   | `-ReturnStmt 0x230fe6aa318 <.//openssl//file_jk/before\crypto\bio\bss_conn.c:232:9>
|   |-CallExpr 0x230fe6aa4d0 <line:234:5, col:35> 'int'
|   | |-ImplicitCastExpr 0x230fe6aa4b8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x230fe6aa430 <col:5> 'int ()' Function 0x230fe6aa368 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x230fe6aa4f8 <col:18, col:21> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x230fe6aa488 <col:18, col:21> 'char *' lvalue ->param_hostname 0x230fe69e6d8
|   |     `-ImplicitCastExpr 0x230fe6aa470 <col:18> 'BIO_CONNECT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x230fe6aa450 <col:18> 'BIO_CONNECT *' lvalue ParmVar 0x230fe6a1010 'a' 'BIO_CONNECT *'
|   |-CallExpr 0x230fe6aa5b0 <line:235:5, col:34> 'int'
|   | |-ImplicitCastExpr 0x230fe6aa598 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x230fe6aa510 <col:5> 'int ()' Function 0x230fe6aa368 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x230fe6aa5d8 <col:18, col:21> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x230fe6aa568 <col:18, col:21> 'char *' lvalue ->param_service 0x230fe69e748
|   |     `-ImplicitCastExpr 0x230fe6aa550 <col:18> 'BIO_CONNECT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x230fe6aa530 <col:18> 'BIO_CONNECT *' lvalue ParmVar 0x230fe6a1010 'a' 'BIO_CONNECT *'
|   `-CallExpr 0x230fe6aa790 <line:237:5, col:19> 'int'
|     |-ImplicitCastExpr 0x230fe6aa778 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x230fe6aa738 <col:5> 'int ()' Function 0x230fe6aa368 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x230fe6aa7b8 <col:18> 'BIO_CONNECT *' <LValueToRValue>
|       `-DeclRefExpr 0x230fe6aa758 <col:18> 'BIO_CONNECT *' lvalue ParmVar 0x230fe6a1010 'a' 'BIO_CONNECT *'
|-FunctionDecl 0x230fe6aa8d0 <line:240:1, line:243:1> line:240:19 invalid BIO_s_connect 'const int *(void)'
| `-CompoundStmt 0x230fe6aa988 <line:241:1, line:243:1>
|-FunctionDecl 0x230fe6aaa48 <line:245:1, line:254:1> line:245:12 invalid conn_new 'int (int *)' static
| |-ParmVarDecl 0x230fe6aa9b0 <col:21, col:26> col:26 invalid bi 'int *'
| `-CompoundStmt 0x230fe6aadc8 <line:246:1, line:254:1>
|   `-IfStmt 0x230fe6aada0 <line:250:5, line:253:18> has_else
|     |-OpaqueValueExpr 0x230fe6aad88 <<invalid sloc>> '_Bool'
|     |-ReturnStmt 0x230fe6aad20 <line:251:9, col:18>
|     | `-ParenExpr 0x230fe6aad00 <col:16, col:18> 'int'
|     |   `-IntegerLiteral 0x230fe6aacd8 <col:17> 'int' 0
|     `-ReturnStmt 0x230fe6aad78 <line:253:9, col:18>
|       `-ParenExpr 0x230fe6aad58 <col:16, col:18> 'int'
|         `-IntegerLiteral 0x230fe6aad30 <col:17> 'int' 1
|-FunctionDecl 0x230fe6aae88 <line:256:1, line:268:1> line:256:13 invalid conn_close_socket 'void (int *)' static
| |-ParmVarDecl 0x230fe6aadf8 <col:31, col:36> col:36 invalid bio 'int *'
| `-CompoundStmt 0x230fe6af310 <line:257:1, line:268:1>
|   |-DeclStmt 0x230fe6aafc0 <line:258:5, col:19>
|   | `-VarDecl 0x230fe6aaf58 <col:5, col:18> col:18 used c 'BIO_CONNECT *'
|   `-IfStmt 0x230fe6af2f8 <line:261:5, line:267:5>
|     |-OpaqueValueExpr 0x230fe6af2e0 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x230fe6af2d0 <line:261:42, line:267:5>
|-FunctionDecl 0x230fe6af3e0 <line:270:1, line:286:1> line:270:12 invalid conn_free 'int (int *)' static
| |-ParmVarDecl 0x230fe6af348 <col:22, col:27> col:27 invalid a 'int *'
| `-CompoundStmt 0x230fe6af8e8 <line:271:1, line:286:1>
|   |-DeclStmt 0x230fe6af518 <line:272:5, col:22>
|   | `-VarDecl 0x230fe6af4b0 <col:5, col:18> col:18 used data 'BIO_CONNECT *'
|   |-IfStmt 0x230fe6af628 <line:274:5, line:275:18>
|   | |-OpaqueValueExpr 0x230fe6af610 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x230fe6af600 <col:9, col:18>
|   |   `-ParenExpr 0x230fe6af5e0 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x230fe6af5b8 <col:17> 'int' 0
|   |-IfStmt 0x230fe6af878 <line:278:5, line:284:5>
|   | |-OpaqueValueExpr 0x230fe6af860 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x230fe6af848 <line:278:22, line:284:5>
|   |   `-CallExpr 0x230fe6af730 <line:280:9, col:30> 'void'
|   |     |-ImplicitCastExpr 0x230fe6af718 <col:9> 'void (*)(BIO_CONNECT *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x230fe6af678 <col:9> 'void (BIO_CONNECT *)' Function 0x230fe6aa178 'BIO_CONNECT_free' 'void (BIO_CONNECT *)'
|   |     `-ImplicitCastExpr 0x230fe6af758 <col:26> 'BIO_CONNECT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x230fe6af698 <col:26> 'BIO_CONNECT *' lvalue Var 0x230fe6af4b0 'data' 'BIO_CONNECT *'
|   `-ReturnStmt 0x230fe6af8d8 <line:285:5, col:14>
|     `-ParenExpr 0x230fe6af8b8 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x230fe6af890 <col:13> 'int' 1
|-FunctionDecl 0x230fe6afad8 <line:288:1, line:310:1> line:288:12 invalid conn_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x230fe6af930 <col:22, col:27> col:27 invalid b 'int *'
| |-ParmVarDecl 0x230fe6af9b0 <col:30, col:36> col:36 used out 'char *'
| |-ParmVarDecl 0x230fe6afa30 <col:41, col:45> col:45 used outl 'int'
| `-CompoundStmt 0x230fe6a8600 <line:289:1, line:310:1>
|   |-DeclStmt 0x230fe6afc50 <line:290:5, col:16>
|   | `-VarDecl 0x230fe6afbc0 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x230fe6afc28 <col:15> 'int' 0
|   |-DeclStmt 0x230fe6afce0 <line:291:5, col:22>
|   | `-VarDecl 0x230fe6afc78 <col:5, col:18> col:18 used data 'BIO_CONNECT *'
|   |-IfStmt 0x230fe6aff68 <line:294:5, line:298:5>
|   | |-BinaryOperator 0x230fe6afdd8 <line:294:9, line:55:42> 'int' '!='
|   | | |-ImplicitCastExpr 0x230fe6afdc0 <line:294:9, col:15> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x230fe6afd68 <col:9, col:15> 'int' lvalue ->state 0x230fe69e5f8
|   | | |   `-ImplicitCastExpr 0x230fe6afd50 <col:9> 'BIO_CONNECT *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x230fe6afd30 <col:9> 'BIO_CONNECT *' lvalue Var 0x230fe6afc78 'data' 'BIO_CONNECT *'
|   | | `-IntegerLiteral 0x230fe6afd98 <line:55:42> 'int' 5
|   | `-CompoundStmt 0x230fe6aff50 <line:294:39, line:298:5>
|   |   `-IfStmt 0x230fe6aff38 <line:296:9, line:297:24>
|   |     |-BinaryOperator 0x230fe6afeb0 <line:296:13, col:20> 'int' '<='
|   |     | |-ImplicitCastExpr 0x230fe6afe98 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x230fe6afe50 <col:13> 'int' lvalue Var 0x230fe6afbc0 'ret' 'int'
|   |     | `-IntegerLiteral 0x230fe6afe70 <col:20> 'int' 0
|   |     `-ReturnStmt 0x230fe6aff28 <line:297:13, col:24>
|   |       `-ImplicitCastExpr 0x230fe6aff10 <col:20, col:24> 'int' <LValueToRValue>
|   |         `-ParenExpr 0x230fe6afef0 <col:20, col:24> 'int' lvalue
|   |           `-DeclRefExpr 0x230fe6afed0 <col:21> 'int' lvalue Var 0x230fe6afbc0 'ret' 'int'
|   |-IfStmt 0x230fe6a8580 <line:300:5, line:308:5>
|   | |-BinaryOperator 0x230fe6b0070 <line:300:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x230fe6b0040 <.//openssl//file_jk/before\crypto\bio\bss_conn.c:300:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x230fe6aff80 <col:9> 'char *' lvalue ParmVar 0x230fe6af9b0 'out' 'char *'
|   | | `-ImplicitCastExpr 0x230fe6b0058 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x230fe6b0020 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x230fe6afff8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x230fe6affb8 <col:26> 'int' 0
|   | `-CompoundStmt 0x230fe6a8560 <.//openssl//file_jk/before\crypto\bio\bss_conn.c:300:22, line:308:5>
|   |   |-CallExpr 0x230fe6a8148 <line:301:9, col:28> 'int'
|   |   | `-ImplicitCastExpr 0x230fe6a8130 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x230fe6b0180 <col:9> 'int ()' Function 0x230fe6b00b8 'clear_socket_error' 'int ()'
|   |   `-IfStmt 0x230fe6a8548 <line:304:9, line:307:9>
|   |     |-BinaryOperator 0x230fe6a8370 <line:304:13, col:20> 'int' '<='
|   |     | |-ImplicitCastExpr 0x230fe6a8358 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x230fe6a8310 <col:13> 'int' lvalue Var 0x230fe6afbc0 'ret' 'int'
|   |     | `-IntegerLiteral 0x230fe6a8330 <col:20> 'int' 0
|   |     `-CompoundStmt 0x230fe6a8538 <col:23, line:307:9>
|   `-ReturnStmt 0x230fe6a85f0 <line:309:5, col:16>
|     `-ImplicitCastExpr 0x230fe6a85d8 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x230fe6a85b8 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x230fe6a8598 <col:13> 'int' lvalue Var 0x230fe6afbc0 'ret' 'int'
|-FunctionDecl 0x230fe6a87f8 <line:312:1, line:332:1> line:312:12 invalid conn_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x230fe6a8650 <col:23, col:28> col:28 invalid b 'int *'
| |-ParmVarDecl 0x230fe6a86d0 <col:31, col:43> col:43 used in 'const char *'
| |-ParmVarDecl 0x230fe6a8750 <col:47, col:51> col:51 used inl 'int'
| `-CompoundStmt 0x230fe6ac198 <line:313:1, line:332:1>
|   |-DeclStmt 0x230fe6a8948 <line:314:5, col:12>
|   | `-VarDecl 0x230fe6a88e0 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x230fe6a89d8 <line:315:5, col:22>
|   | `-VarDecl 0x230fe6a8970 <col:5, col:18> col:18 used data 'BIO_CONNECT *'
|   |-IfStmt 0x230fe6a8c60 <line:318:5, line:322:5>
|   | |-BinaryOperator 0x230fe6a8ad0 <line:318:9, line:55:42> 'int' '!='
|   | | |-ImplicitCastExpr 0x230fe6a8ab8 <line:318:9, col:15> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x230fe6a8a60 <col:9, col:15> 'int' lvalue ->state 0x230fe69e5f8
|   | | |   `-ImplicitCastExpr 0x230fe6a8a48 <col:9> 'BIO_CONNECT *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x230fe6a8a28 <col:9> 'BIO_CONNECT *' lvalue Var 0x230fe6a8970 'data' 'BIO_CONNECT *'
|   | | `-IntegerLiteral 0x230fe6a8a90 <line:55:42> 'int' 5
|   | `-CompoundStmt 0x230fe6a8c48 <line:318:39, line:322:5>
|   |   `-IfStmt 0x230fe6a8c30 <line:320:9, line:321:24>
|   |     |-BinaryOperator 0x230fe6a8ba8 <line:320:13, col:20> 'int' '<='
|   |     | |-ImplicitCastExpr 0x230fe6a8b90 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x230fe6a8b48 <col:13> 'int' lvalue Var 0x230fe6a88e0 'ret' 'int'
|   |     | `-IntegerLiteral 0x230fe6a8b68 <col:20> 'int' 0
|   |     `-ReturnStmt 0x230fe6a8c20 <line:321:13, col:24>
|   |       `-ImplicitCastExpr 0x230fe6a8c08 <col:20, col:24> 'int' <LValueToRValue>
|   |         `-ParenExpr 0x230fe6a8be8 <col:20, col:24> 'int' lvalue
|   |           `-DeclRefExpr 0x230fe6a8bc8 <col:21> 'int' lvalue Var 0x230fe6a88e0 'ret' 'int'
|   |-CallExpr 0x230fe6a8cb0 <line:324:5, col:24> 'int'
|   | `-ImplicitCastExpr 0x230fe6a8c98 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x230fe6a8c78 <col:5> 'int ()' Function 0x230fe6b00b8 'clear_socket_error' 'int ()'
|   |-IfStmt 0x230fe6a90c8 <line:327:5, line:330:5>
|   | |-BinaryOperator 0x230fe6a8ef0 <line:327:9, col:16> 'int' '<='
|   | | |-ImplicitCastExpr 0x230fe6a8ed8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x230fe6a8e90 <col:9> 'int' lvalue Var 0x230fe6a88e0 'ret' 'int'
|   | | `-IntegerLiteral 0x230fe6a8eb0 <col:16> 'int' 0
|   | `-CompoundStmt 0x230fe6a90b8 <col:19, line:330:5>
|   `-ReturnStmt 0x230fe6ac188 <line:331:5, col:16>
|     `-ImplicitCastExpr 0x230fe6ac170 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x230fe6a9100 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x230fe6a90e0 <col:13> 'int' lvalue Var 0x230fe6a88e0 'ret' 'int'
|-FunctionDecl 0x230fe6ac420 <line:334:1, line:499:1> line:334:13 invalid conn_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x230fe6ac1f0 <col:23, col:28> col:28 invalid b 'int *'
| |-ParmVarDecl 0x230fe6ac270 <col:31, col:35> col:35 used cmd 'int'
| |-ParmVarDecl 0x230fe6ac2f0 <col:40, col:45> col:45 used num 'long'
| |-ParmVarDecl 0x230fe6ac370 <col:50, col:56> col:56 used ptr 'void *'
| `-CompoundStmt 0x230fe6a9290 <line:335:1, line:499:1>
|   |-DeclStmt 0x230fe6ac578 <line:337:5, col:12>
|   | `-VarDecl 0x230fe6ac510 <col:5, col:10> col:10 used ip 'int *'
|   |-DeclStmt 0x230fe6ac6d8 <line:338:5, col:29>
|   | `-VarDecl 0x230fe6ac5d0 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\bio\bss_conn.c:338:18 used pptr 'const char **' cinit
|   |   `-ImplicitCastExpr 0x230fe6ac6c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char **' <NullToPointer>
|   |     `-ParenExpr 0x230fe6ac6a0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x230fe6ac678 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x230fe6ac638 <col:26> 'int' 0
|   |-DeclStmt 0x230fe6ac7b0 <.//openssl//file_jk/before\crypto\bio\bss_conn.c:339:5, col:17>
|   | `-VarDecl 0x230fe6ac708 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x230fe6ac798 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x230fe6ac770 <col:16> 'int' 1
|   |-DeclStmt 0x230fe6ac840 <line:340:5, col:22>
|   | `-VarDecl 0x230fe6ac7d8 <col:5, col:18> col:18 used data 'BIO_CONNECT *'
|   |-SwitchStmt 0x230fe6ac8e0 <line:344:5, line:497:5>
|   | |-ImplicitCastExpr 0x230fe6ac8c8 <line:344:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x230fe6ac890 <col:13> 'int' lvalue ParmVar 0x230fe6ac270 'cmd' 'int'
|   | `-CompoundStmt 0x230fe6a9140 <col:18, line:497:5>
|   |   |-BinaryOperator 0x230fe6ac978 <line:346:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x230fe6ac900 <col:9> 'long' lvalue Var 0x230fe6ac708 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x230fe6ac960 <col:15> 'long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x230fe6ac938 <col:15> 'int' 0
|   |   |-BinaryOperator 0x230fe6aca28 <line:347:9, line:51:42> 'int' '='
|   |   | |-MemberExpr 0x230fe6ac9d0 <line:347:9, col:15> 'int' lvalue ->state 0x230fe69e5f8
|   |   | | `-ImplicitCastExpr 0x230fe6ac9b8 <col:9> 'BIO_CONNECT *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x230fe6ac998 <col:9> 'BIO_CONNECT *' lvalue Var 0x230fe6ac7d8 'data' 'BIO_CONNECT *'
|   |   | `-IntegerLiteral 0x230fe6aca00 <line:51:42> 'int' 1
|   |   |-BreakStmt 0x230fe6acb88 <line:352:9>
|   |   |-IfStmt 0x230fe6acd20 <line:355:9, line:358:19> has_else
|   |   | |-BinaryOperator 0x230fe6acc38 <line:355:13, line:55:42> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x230fe6acc20 <line:355:13, col:19> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x230fe6acbc8 <col:13, col:19> 'int' lvalue ->state 0x230fe69e5f8
|   |   | | |   `-ImplicitCastExpr 0x230fe6acbb0 <col:13> 'BIO_CONNECT *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x230fe6acb90 <col:13> 'BIO_CONNECT *' lvalue Var 0x230fe6ac7d8 'data' 'BIO_CONNECT *'
|   |   | | `-IntegerLiteral 0x230fe6acbf8 <line:55:42> 'int' 5
|   |   | |-NullStmt 0x230fe6acd18 <line:356:13>
|   |   | `-BinaryOperator 0x230fe6accf8 <line:358:13, col:19> 'long' '='
|   |   |   |-DeclRefExpr 0x230fe6acc98 <col:13> 'long' lvalue Var 0x230fe6ac708 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x230fe6acce0 <col:19> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x230fe6accb8 <col:19> 'int' 1
|   |   |-BreakStmt 0x230fe6acd48 <line:359:9>
|   |   |-IfStmt 0x230fe6ad948 <line:361:9, line:391:9> has_else
|   |   | |-BinaryOperator 0x230fe6ace28 <line:361:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x230fe6ace10 <.//openssl//file_jk/before\crypto\bio\bss_conn.c:361:13> 'void *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x230fe6acd50 <col:13> 'void *' lvalue ParmVar 0x230fe6ac370 'ptr' 'void *'
|   |   | | `-ParenExpr 0x230fe6acdf0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |   | |   `-CStyleCastExpr 0x230fe6acdc8 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |     `-IntegerLiteral 0x230fe6acd88 <col:26> 'int' 0
|   |   | |-CompoundStmt 0x230fe6ad890 <.//openssl//file_jk/before\crypto\bio\bss_conn.c:361:26, line:389:9>
|   |   | | |-BinaryOperator 0x230fe6acef8 <line:362:13, col:35> 'const char **' '='
|   |   | | | |-DeclRefExpr 0x230fe6ace48 <col:13> 'const char **' lvalue Var 0x230fe6ac5d0 'pptr' 'const char **'
|   |   | | | `-CStyleCastExpr 0x230fe6aced0 <col:20, col:35> 'const char **' <BitCast>
|   |   | | |   `-ImplicitCastExpr 0x230fe6aceb8 <col:35> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   | | |     `-DeclRefExpr 0x230fe6ace80 <col:35> 'void *' lvalue ParmVar 0x230fe6ac370 'ptr' 'void *'
|   |   | | `-IfStmt 0x230fe6ad868 <line:363:13, line:388:13> has_else
|   |   | |   |-BinaryOperator 0x230fe6acfa8 <line:363:17, col:24> 'int' '=='
|   |   | |   | |-ImplicitCastExpr 0x230fe6acf78 <col:17> 'long' <LValueToRValue>
|   |   | |   | | `-DeclRefExpr 0x230fe6acf18 <col:17> 'long' lvalue ParmVar 0x230fe6ac2f0 'num' 'long'
|   |   | |   | `-ImplicitCastExpr 0x230fe6acf90 <col:24> 'long' <IntegralCast>
|   |   | |   |   `-IntegerLiteral 0x230fe6acf50 <col:24> 'int' 0
|   |   | |   |-CompoundStmt 0x230fe6ad0d0 <col:27, line:365:13>
|   |   | |   | `-BinaryOperator 0x230fe6ad0b0 <line:364:17, col:31> 'const char *' '='
|   |   | |   |   |-UnaryOperator 0x230fe6ad000 <col:17, col:18> 'const char *' lvalue prefix '*' cannot overflow
|   |   | |   |   | `-ImplicitCastExpr 0x230fe6acfe8 <col:18> 'const char **' <LValueToRValue>
|   |   | |   |   |   `-DeclRefExpr 0x230fe6acfc8 <col:18> 'const char **' lvalue Var 0x230fe6ac5d0 'pptr' 'const char **'
|   |   | |   |   `-ImplicitCastExpr 0x230fe6ad098 <col:25, col:31> 'const char *' <NoOp>
|   |   | |   |     `-ImplicitCastExpr 0x230fe6ad080 <col:25, col:31> 'char *' <LValueToRValue>
|   |   | |   |       `-MemberExpr 0x230fe6ad050 <col:25, col:31> 'char *' lvalue ->param_hostname 0x230fe69e6d8
|   |   | |   |         `-ImplicitCastExpr 0x230fe6ad038 <col:25> 'BIO_CONNECT *' <LValueToRValue>
|   |   | |   |           `-DeclRefExpr 0x230fe6ad018 <col:25> 'BIO_CONNECT *' lvalue Var 0x230fe6ac7d8 'data' 'BIO_CONNECT *'
|   |   | |   `-IfStmt 0x230fe6ad840 <line:365:20, line:388:13> has_else
|   |   | |     |-BinaryOperator 0x230fe6ad180 <line:365:24, col:31> 'int' '=='
|   |   | |     | |-ImplicitCastExpr 0x230fe6ad130 <col:24> 'long' <LValueToRValue>
|   |   | |     | | `-DeclRefExpr 0x230fe6ad0e8 <col:24> 'long' lvalue ParmVar 0x230fe6ac2f0 'num' 'long'
|   |   | |     | `-ImplicitCastExpr 0x230fe6ad148 <col:31> 'long' <IntegralCast>
|   |   | |     |   `-IntegerLiteral 0x230fe6ad108 <col:31> 'int' 1
|   |   | |     |-CompoundStmt 0x230fe6ad2a8 <col:34, line:367:13>
|   |   | |     | `-BinaryOperator 0x230fe6ad288 <line:366:17, col:31> 'const char *' '='
|   |   | |     |   |-UnaryOperator 0x230fe6ad1d8 <col:17, col:18> 'const char *' lvalue prefix '*' cannot overflow
|   |   | |     |   | `-ImplicitCastExpr 0x230fe6ad1c0 <col:18> 'const char **' <LValueToRValue>
|   |   | |     |   |   `-DeclRefExpr 0x230fe6ad1a0 <col:18> 'const char **' lvalue Var 0x230fe6ac5d0 'pptr' 'const char **'
|   |   | |     |   `-ImplicitCastExpr 0x230fe6ad270 <col:25, col:31> 'const char *' <NoOp>
|   |   | |     |     `-ImplicitCastExpr 0x230fe6ad258 <col:25, col:31> 'char *' <LValueToRValue>
|   |   | |     |       `-MemberExpr 0x230fe6ad228 <col:25, col:31> 'char *' lvalue ->param_service 0x230fe69e748
|   |   | |     |         `-ImplicitCastExpr 0x230fe6ad210 <col:25> 'BIO_CONNECT *' <LValueToRValue>
|   |   | |     |           `-DeclRefExpr 0x230fe6ad1f0 <col:25> 'BIO_CONNECT *' lvalue Var 0x230fe6ac7d8 'data' 'BIO_CONNECT *'
|   |   | |     `-IfStmt 0x230fe6ad818 <line:367:20, line:388:13> has_else
|   |   | |       |-BinaryOperator 0x230fe6ad338 <line:367:24, col:31> 'int' '=='
|   |   | |       | |-ImplicitCastExpr 0x230fe6ad308 <col:24> 'long' <LValueToRValue>
|   |   | |       | | `-DeclRefExpr 0x230fe6ad2c0 <col:24> 'long' lvalue ParmVar 0x230fe6ac2f0 'num' 'long'
|   |   | |       | `-ImplicitCastExpr 0x230fe6ad320 <col:31> 'long' <IntegralCast>
|   |   | |       |   `-IntegerLiteral 0x230fe6ad2e0 <col:31> 'int' 2
|   |   | |       |-CompoundStmt 0x230fe6ad400 <col:34, line:369:13>
|   |   | |       `-IfStmt 0x230fe6ad7f0 <col:20, line:388:13> has_else
|   |   | |         |-BinaryOperator 0x230fe6ad488 <line:369:24, col:31> 'int' '=='
|   |   | |         | |-ImplicitCastExpr 0x230fe6ad458 <col:24> 'long' <LValueToRValue>
|   |   | |         | | `-DeclRefExpr 0x230fe6ad410 <col:24> 'long' lvalue ParmVar 0x230fe6ac2f0 'num' 'long'
|   |   | |         | `-ImplicitCastExpr 0x230fe6ad470 <col:31> 'long' <IntegralCast>
|   |   | |         |   `-IntegerLiteral 0x230fe6ad430 <col:31> 'int' 3
|   |   | |         |-CompoundStmt 0x230fe6ad748 <col:34, line:386:13>
|   |   | |         `-CompoundStmt 0x230fe6ad7d8 <col:20, line:388:13>
|   |   | |           `-BinaryOperator 0x230fe6ad7b8 <line:387:17, col:23> 'long' '='
|   |   | |             |-DeclRefExpr 0x230fe6ad758 <col:17> 'long' lvalue Var 0x230fe6ac708 'ret' 'long'
|   |   | |             `-ImplicitCastExpr 0x230fe6ad7a0 <col:23> 'long' <IntegralCast>
|   |   | |               `-IntegerLiteral 0x230fe6ad778 <col:23> 'int' 0
|   |   | `-CompoundStmt 0x230fe6ad930 <line:389:16, line:391:9>
|   |   |   `-BinaryOperator 0x230fe6ad910 <line:390:13, col:19> 'long' '='
|   |   |     |-DeclRefExpr 0x230fe6ad8b0 <col:13> 'long' lvalue Var 0x230fe6ac708 'ret' 'long'
|   |   |     `-ImplicitCastExpr 0x230fe6ad8f8 <col:19> 'long' <IntegralCast>
|   |   |       `-IntegerLiteral 0x230fe6ad8d0 <col:19> 'int' 0
|   |   |-BreakStmt 0x230fe6ad970 <line:392:9>
|   |   |-IfStmt 0x230fe6af028 <line:394:9, line:427:9>
|   |   | |-BinaryOperator 0x230fe6ada38 <line:394:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x230fe6ada20 <.//openssl//file_jk/before\crypto\bio\bss_conn.c:394:13> 'void *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x230fe6ad978 <col:13> 'void *' lvalue ParmVar 0x230fe6ac370 'ptr' 'void *'
|   |   | | `-ParenExpr 0x230fe6ada00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |   | |   `-CStyleCastExpr 0x230fe6ad9d8 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |     `-IntegerLiteral 0x230fe6ad998 <col:26> 'int' 0
|   |   | `-CompoundStmt 0x230fe6af010 <.//openssl//file_jk/before\crypto\bio\bss_conn.c:394:26, line:427:9>
|   |   |   `-IfStmt 0x230fe6aefe8 <line:396:13, line:426:13> has_else
|   |   |     |-BinaryOperator 0x230fe6adaf8 <line:396:17, col:24> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x230fe6adac8 <col:17> 'long' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x230fe6ada80 <col:17> 'long' lvalue ParmVar 0x230fe6ac2f0 'num' 'long'
|   |   |     | `-ImplicitCastExpr 0x230fe6adae0 <col:24> 'long' <IntegralCast>
|   |   |     |   `-IntegerLiteral 0x230fe6adaa0 <col:24> 'int' 0
|   |   |     |-CompoundStmt 0x230fe6ae240 <col:27, line:410:13>
|   |   |     | |-DeclStmt 0x230fe6adc18 <line:397:17, col:57>
|   |   |     | | `-VarDecl 0x230fe6adb30 <col:17, col:44> col:23 used hold_service 'char *' cinit
|   |   |     | |   `-ImplicitCastExpr 0x230fe6adc00 <col:38, col:44> 'char *' <LValueToRValue>
|   |   |     | |     `-MemberExpr 0x230fe6adbd0 <col:38, col:44> 'char *' lvalue ->param_service 0x230fe69e748
|   |   |     | |       `-ImplicitCastExpr 0x230fe6adbb8 <col:38> 'BIO_CONNECT *' <LValueToRValue>
|   |   |     | |         `-DeclRefExpr 0x230fe6adb98 <col:38> 'BIO_CONNECT *' lvalue Var 0x230fe6ac7d8 'data' 'BIO_CONNECT *'
|   |   |     | |-CallExpr 0x230fe6adcd0 <line:402:17, col:50> 'int'
|   |   |     | | |-ImplicitCastExpr 0x230fe6adcb8 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | | | `-DeclRefExpr 0x230fe6adc30 <col:17> 'int ()' Function 0x230fe6aa368 'OPENSSL_free' 'int ()'
|   |   |     | | `-ImplicitCastExpr 0x230fe6adcf8 <col:30, col:36> 'char *' <LValueToRValue>
|   |   |     | |   `-MemberExpr 0x230fe6adc88 <col:30, col:36> 'char *' lvalue ->param_hostname 0x230fe69e6d8
|   |   |     | |     `-ImplicitCastExpr 0x230fe6adc70 <col:30> 'BIO_CONNECT *' <LValueToRValue>
|   |   |     | |       `-DeclRefExpr 0x230fe6adc50 <col:30> 'BIO_CONNECT *' lvalue Var 0x230fe6ac7d8 'data' 'BIO_CONNECT *'
|   |   |     | |-BinaryOperator 0x230fe6ade18 <line:403:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'char *' '='
|   |   |     | | |-MemberExpr 0x230fe6add48 <.//openssl//file_jk/before\crypto\bio\bss_conn.c:403:17, col:23> 'char *' lvalue ->param_hostname 0x230fe69e6d8
|   |   |     | | | `-ImplicitCastExpr 0x230fe6add30 <col:17> 'BIO_CONNECT *' <LValueToRValue>
|   |   |     | | |   `-DeclRefExpr 0x230fe6add10 <col:17> 'BIO_CONNECT *' lvalue Var 0x230fe6ac7d8 'data' 'BIO_CONNECT *'
|   |   |     | | `-ImplicitCastExpr 0x230fe6ade00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |   |     | |   `-ParenExpr 0x230fe6adde0 <col:17, col:27> 'void *'
|   |   |     | |     `-CStyleCastExpr 0x230fe6addb8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     | |       `-IntegerLiteral 0x230fe6add78 <col:26> 'int' 0
|   |   |     | `-IfStmt 0x230fe6ae228 <.//openssl//file_jk/before\crypto\bio\bss_conn.c:408:17, line:409:46>
|   |   |     |   |-BinaryOperator 0x230fe6ae158 <line:408:21, col:43> 'int' '!='
|   |   |     |   | |-ImplicitCastExpr 0x230fe6ae128 <col:21> 'char *' <LValueToRValue>
|   |   |     |   | | `-DeclRefExpr 0x230fe6ae088 <col:21> 'char *' lvalue Var 0x230fe6adb30 'hold_service' 'char *'
|   |   |     |   | `-ImplicitCastExpr 0x230fe6ae140 <col:37, col:43> 'char *' <LValueToRValue>
|   |   |     |   |   `-MemberExpr 0x230fe6ae0f8 <col:37, col:43> 'char *' lvalue ->param_service 0x230fe69e748
|   |   |     |   |     `-ImplicitCastExpr 0x230fe6ae0e0 <col:37> 'BIO_CONNECT *' <LValueToRValue>
|   |   |     |   |       `-DeclRefExpr 0x230fe6ae0c0 <col:37> 'BIO_CONNECT *' lvalue Var 0x230fe6ac7d8 'data' 'BIO_CONNECT *'
|   |   |     |   `-CallExpr 0x230fe6ae1e8 <line:409:21, col:46> 'int'
|   |   |     |     |-ImplicitCastExpr 0x230fe6ae1d0 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |   |     |     | `-DeclRefExpr 0x230fe6ae190 <col:21> 'int ()' Function 0x230fe6aa368 'OPENSSL_free' 'int ()'
|   |   |     |     `-ImplicitCastExpr 0x230fe6ae210 <col:34> 'char *' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x230fe6ae1b0 <col:34> 'char *' lvalue Var 0x230fe6adb30 'hold_service' 'char *'
|   |   |     `-IfStmt 0x230fe6aefc0 <line:410:20, line:426:13> has_else
|   |   |       |-BinaryOperator 0x230fe6ae2e8 <line:410:24, col:31> 'int' '=='
|   |   |       | |-ImplicitCastExpr 0x230fe6ae2b8 <col:24> 'long' <LValueToRValue>
|   |   |       | | `-DeclRefExpr 0x230fe6ae270 <col:24> 'long' lvalue ParmVar 0x230fe6ac2f0 'num' 'long'
|   |   |       | `-ImplicitCastExpr 0x230fe6ae2d0 <col:31> 'long' <IntegralCast>
|   |   |       |   `-IntegerLiteral 0x230fe6ae290 <col:31> 'int' 1
|   |   |       |-CompoundStmt 0x230fe6ae610 <col:34, line:413:13>
|   |   |       | |-CallExpr 0x230fe6ae3a8 <line:411:17, col:49> 'int'
|   |   |       | | |-ImplicitCastExpr 0x230fe6ae390 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | | | `-DeclRefExpr 0x230fe6ae308 <col:17> 'int ()' Function 0x230fe6aa368 'OPENSSL_free' 'int ()'
|   |   |       | | `-ImplicitCastExpr 0x230fe6ae3d0 <col:30, col:36> 'char *' <LValueToRValue>
|   |   |       | |   `-MemberExpr 0x230fe6ae360 <col:30, col:36> 'char *' lvalue ->param_service 0x230fe69e748
|   |   |       | |     `-ImplicitCastExpr 0x230fe6ae348 <col:30> 'BIO_CONNECT *' <LValueToRValue>
|   |   |       | |       `-DeclRefExpr 0x230fe6ae328 <col:30> 'BIO_CONNECT *' lvalue Var 0x230fe6ac7d8 'data' 'BIO_CONNECT *'
|   |   |       | `-BinaryOperator 0x230fe6ae5f0 <line:412:17, col:53> 'char *' '='
|   |   |       |   |-MemberExpr 0x230fe6ae420 <col:17, col:23> 'char *' lvalue ->param_service 0x230fe69e748
|   |   |       |   | `-ImplicitCastExpr 0x230fe6ae408 <col:17> 'BIO_CONNECT *' <LValueToRValue>
|   |   |       |   |   `-DeclRefExpr 0x230fe6ae3e8 <col:17> 'BIO_CONNECT *' lvalue Var 0x230fe6ac7d8 'data' 'BIO_CONNECT *'
|   |   |       |   `-ImplicitCastExpr 0x230fe6ae5d8 <col:39, col:53> 'char *' <IntegralToPointer>
|   |   |       |     `-CallExpr 0x230fe6ae598 <col:39, col:53> 'int'
|   |   |       |       |-ImplicitCastExpr 0x230fe6ae580 <col:39> 'int (*)()' <FunctionToPointerDecay>
|   |   |       |       | `-DeclRefExpr 0x230fe6ae540 <col:39> 'int ()' Function 0x230fe6ae478 'BUF_strdup' 'int ()'
|   |   |       |       `-ImplicitCastExpr 0x230fe6ae5c0 <col:50> 'void *' <LValueToRValue>
|   |   |       |         `-DeclRefExpr 0x230fe6ae560 <col:50> 'void *' lvalue ParmVar 0x230fe6ac370 'ptr' 'void *'
|   |   |       `-IfStmt 0x230fe6aef98 <line:413:20, line:426:13> has_else
|   |   |         |-BinaryOperator 0x230fe6ae6a8 <line:413:24, col:31> 'int' '=='
|   |   |         | |-ImplicitCastExpr 0x230fe6ae678 <col:24> 'long' <LValueToRValue>
|   |   |         | | `-DeclRefExpr 0x230fe6ae630 <col:24> 'long' lvalue ParmVar 0x230fe6ac2f0 'num' 'long'
|   |   |         | `-ImplicitCastExpr 0x230fe6ae690 <col:31> 'long' <IntegralCast>
|   |   |         |   `-IntegerLiteral 0x230fe6ae650 <col:31> 'int' 2
|   |   |         |-CompoundStmt 0x230fe6aecd8 <col:34, line:422:13>
|   |   |         | |-DeclStmt 0x230fe6ae748 <line:414:17, col:61>
|   |   |         | | `-VarDecl 0x230fe6ae6e0 <col:17, col:33> col:33 invalid addr 'const int *'
|   |   |         | `-IfStmt 0x230fe6aecc0 <line:415:17, line:421:17>
|   |   |         |   |-ImplicitCastExpr 0x230fe6ae780 <line:415:21> 'long' <LValueToRValue>
|   |   |         |   | `-DeclRefExpr 0x230fe6ae760 <col:21> 'long' lvalue Var 0x230fe6ac708 'ret' 'long'
|   |   |         |   `-CompoundStmt 0x230fe6aecb0 <col:26, line:421:17>
|   |   |         `-IfStmt 0x230fe6aef70 <line:422:20, line:426:13> has_else
|   |   |           |-BinaryOperator 0x230fe6aed70 <line:422:24, col:31> 'int' '=='
|   |   |           | |-ImplicitCastExpr 0x230fe6aed40 <col:24> 'long' <LValueToRValue>
|   |   |           | | `-DeclRefExpr 0x230fe6aecf8 <col:24> 'long' lvalue ParmVar 0x230fe6ac2f0 'num' 'long'
|   |   |           | `-ImplicitCastExpr 0x230fe6aed58 <col:31> 'long' <IntegralCast>
|   |   |           |   `-IntegerLiteral 0x230fe6aed18 <col:31> 'int' 3
|   |   |           |-CompoundStmt 0x230fe6aeec0 <col:34, line:424:13>
|   |   |           | `-BinaryOperator 0x230fe6aeea0 <line:423:17, col:48> 'int' '='
|   |   |           |   |-MemberExpr 0x230fe6aedc8 <col:17, col:23> 'int' lvalue ->connect_family 0x230fe69e668
|   |   |           |   | `-ImplicitCastExpr 0x230fe6aedb0 <col:17> 'BIO_CONNECT *' <LValueToRValue>
|   |   |           |   |   `-DeclRefExpr 0x230fe6aed90 <col:17> 'BIO_CONNECT *' lvalue Var 0x230fe6ac7d8 'data' 'BIO_CONNECT *'
|   |   |           |   `-ImplicitCastExpr 0x230fe6aee88 <col:40, col:48> 'int' <LValueToRValue>
|   |   |           |     `-UnaryOperator 0x230fe6aee70 <col:40, col:48> 'int' lvalue prefix '*' cannot overflow
|   |   |           |       `-CStyleCastExpr 0x230fe6aee48 <col:41, col:48> 'int *' <BitCast>
|   |   |           |         `-ImplicitCastExpr 0x230fe6aee30 <col:48> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   |           |           `-DeclRefExpr 0x230fe6aedf8 <col:48> 'void *' lvalue ParmVar 0x230fe6ac370 'ptr' 'void *'
|   |   |           `-CompoundStmt 0x230fe6aef58 <line:424:20, line:426:13>
|   |   |             `-BinaryOperator 0x230fe6aef38 <line:425:17, col:23> 'long' '='
|   |   |               |-DeclRefExpr 0x230fe6aeed8 <col:17> 'long' lvalue Var 0x230fe6ac708 'ret' 'long'
|   |   |               `-ImplicitCastExpr 0x230fe6aef20 <col:23> 'long' <IntegralCast>
|   |   |                 `-IntegerLiteral 0x230fe6aeef8 <col:23> 'int' 0
|   |   |-BreakStmt 0x230fe6af040 <line:428:9>
|   |   |-BreakStmt 0x230fe6b01e0 <line:434:9>
|   |   |-BinaryOperator 0x230fe6b02c8 <line:436:9, col:35> 'int' '='
|   |   | |-MemberExpr 0x230fe6b0220 <col:9, col:15> 'int' lvalue ->connect_mode 0x230fe69e7b8
|   |   | | `-ImplicitCastExpr 0x230fe6b0208 <col:9> 'BIO_CONNECT *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x230fe6b01e8 <col:9> 'BIO_CONNECT *' lvalue Var 0x230fe6ac7d8 'data' 'BIO_CONNECT *'
|   |   | `-CStyleCastExpr 0x230fe6b02a0 <col:30, col:35> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x230fe6b0288 <col:35> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x230fe6b0250 <col:35> 'long' lvalue ParmVar 0x230fe6ac2f0 'num' 'long'
|   |   |-BreakStmt 0x230fe6b02e8 <line:437:9>
|   |   |-IfStmt 0x230fe6b05f0 <line:439:9, line:445:20> has_else
|   |   | |-OpaqueValueExpr 0x230fe6b05d8 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x230fe6b0528 <line:439:22, line:444:9>
|   |   | | `-BinaryOperator 0x230fe6b03a0 <line:440:13, col:25> 'int *' '='
|   |   | |   |-DeclRefExpr 0x230fe6b02f0 <col:13> 'int *' lvalue Var 0x230fe6ac510 'ip' 'int *'
|   |   | |   `-CStyleCastExpr 0x230fe6b0378 <col:18, col:25> 'int *' <BitCast>
|   |   | |     `-ImplicitCastExpr 0x230fe6b0360 <col:25> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   | |       `-DeclRefExpr 0x230fe6b0328 <col:25> 'void *' lvalue ParmVar 0x230fe6ac370 'ptr' 'void *'
|   |   | `-BinaryOperator 0x230fe6b05b8 <line:445:13, col:20> 'long' '='
|   |   |   |-DeclRefExpr 0x230fe6b0540 <col:13> 'long' lvalue Var 0x230fe6ac708 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x230fe6b05a0 <col:19, col:20> 'long' <IntegralCast>
|   |   |     `-UnaryOperator 0x230fe6b0588 <col:19, col:20> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x230fe6b0560 <col:20> 'int' 1
|   |   |-BreakStmt 0x230fe6b0618 <line:446:9>
|   |   |-BreakStmt 0x230fe6b0640 <line:449:9>
|   |   |-BreakStmt 0x230fe6b06c0 <line:452:9>
|   |   |-BinaryOperator 0x230fe6b0728 <line:455:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x230fe6b06c8 <col:9> 'long' lvalue Var 0x230fe6ac708 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x230fe6b0710 <col:15> 'long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x230fe6b06e8 <col:15> 'int' 0
|   |   |-BreakStmt 0x230fe6b0748 <line:456:9>
|   |   |-BreakStmt 0x230fe6b0750 <line:458:9>
|   |   |-CompoundStmt 0x230fe6b0f80 <line:460:9, line:473:9>
|   |   |-BreakStmt 0x230fe6b0f90 <line:474:9>
|   |   |-CompoundStmt 0x230fe6b1018 <line:476:9, line:484:9>
|   |   | `-BinaryOperator 0x230fe6b0ff8 <line:482:13, col:19> 'long' '='
|   |   |   |-DeclRefExpr 0x230fe6b0f98 <col:13> 'long' lvalue Var 0x230fe6ac708 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x230fe6b0fe0 <col:19> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x230fe6b0fb8 <col:19> 'int' 0
|   |   |-BreakStmt 0x230fe6b1030 <line:485:9>
|   |   |-CompoundStmt 0x230fe6b1070 <line:487:9, line:492:9>
|   |   |-BreakStmt 0x230fe6b1080 <line:493:9>
|   |   |-DefaultStmt 0x230fe6b1108 <line:494:5, line:495:15>
|   |   | `-BinaryOperator 0x230fe6b10e8 <col:9, col:15> 'long' '='
|   |   |   |-DeclRefExpr 0x230fe6b1088 <col:9> 'long' lvalue Var 0x230fe6ac708 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x230fe6b10d0 <col:15> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x230fe6b10a8 <col:15> 'int' 0
|   |   `-BreakStmt 0x230fe6b1128 <line:496:9>
|   `-ReturnStmt 0x230fe6a9280 <line:498:5, col:16>
|     `-ImplicitCastExpr 0x230fe6a9268 <col:12, col:16> 'long' <LValueToRValue>
|       `-ParenExpr 0x230fe6a9248 <col:12, col:16> 'long' lvalue
|         `-DeclRefExpr 0x230fe6a9228 <col:13> 'long' lvalue Var 0x230fe6ac708 'ret' 'long'
|-FunctionDecl 0x230fe6a9490 <line:501:1, line:519:1> line:501:13 invalid conn_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x230fe6a92e8 <col:32, col:37> col:37 invalid b 'int *'
| |-ParmVarDecl 0x230fe6a9368 <col:40, col:44> col:44 used cmd 'int'
| |-ParmVarDecl 0x230fe6a93e8 <col:49, col:62> col:62 invalid fp 'int *'
| `-CompoundStmt 0x230fe6a9918 <line:502:1, line:519:1>
|   |-DeclStmt 0x230fe6a9620 <line:503:5, col:17>
|   | `-VarDecl 0x230fe6a9578 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x230fe6a9608 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x230fe6a95e0 <col:16> 'int' 1
|   |-DeclStmt 0x230fe6a96b0 <line:504:5, col:22>
|   | `-VarDecl 0x230fe6a9648 <col:5, col:18> col:18 used data 'BIO_CONNECT *'
|   |-SwitchStmt 0x230fe6a9750 <line:508:5, line:517:5>
|   | |-ImplicitCastExpr 0x230fe6a9738 <line:508:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x230fe6a9700 <col:13> 'int' lvalue ParmVar 0x230fe6a9368 'cmd' 'int'
|   | `-CompoundStmt 0x230fe6a9880 <col:18, line:517:5>
|   |   |-CompoundStmt 0x230fe6a97a8 <line:510:9, line:512:9>
|   |   |-BreakStmt 0x230fe6a97b8 <line:513:9>
|   |   |-DefaultStmt 0x230fe6a9858 <line:514:5, line:515:15>
|   |   | `-BinaryOperator 0x230fe6a9838 <col:9, col:15> 'long' '='
|   |   |   |-DeclRefExpr 0x230fe6a97c0 <col:9> 'long' lvalue Var 0x230fe6a9578 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x230fe6a9820 <col:15> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x230fe6a97f8 <col:15> 'int' 0
|   |   `-BreakStmt 0x230fe6a9878 <line:516:9>
|   `-ReturnStmt 0x230fe6a9908 <line:518:5, col:16>
|     `-ImplicitCastExpr 0x230fe6a98f0 <col:12, col:16> 'long' <LValueToRValue>
|       `-ParenExpr 0x230fe6a98d0 <col:12, col:16> 'long' lvalue
|         `-DeclRefExpr 0x230fe6a98b0 <col:13> 'long' lvalue Var 0x230fe6a9578 'ret' 'long'
|-FunctionDecl 0x230fe6a9a80 <line:521:1, line:528:1> line:521:12 invalid conn_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x230fe6a9960 <col:22, col:27> col:27 invalid bp 'int *'
| |-ParmVarDecl 0x230fe6a99e0 <col:31, col:43> col:43 used str 'const char *'
| `-CompoundStmt 0x230fe6aa018 <line:522:1, line:528:1>
|   |-DeclStmt 0x230fe6a9c60 <line:523:5, col:15>
|   | |-VarDecl 0x230fe6a9b60 <col:5, col:9> col:9 used n 'int'
|   | `-VarDecl 0x230fe6a9be0 <col:5, col:12> col:12 used ret 'int'
|   |-BinaryOperator 0x230fe6a9f18 <line:525:5, col:19> 'int' '='
|   | |-DeclRefExpr 0x230fe6a9c78 <col:5> 'int' lvalue Var 0x230fe6a9b60 'n' 'int'
|   | `-ImplicitCastExpr 0x230fe6a9f00 <col:9, col:19> 'int' <IntegralCast>
|   |   `-CallExpr 0x230fe6a9ec0 <col:9, col:19> 'unsigned long long'
|   |     |-ImplicitCastExpr 0x230fe6a9ea8 <col:9> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x230fe6a9df0 <col:9> 'unsigned long long (const char *)' Function 0x230fe6a9ce0 'strlen' 'unsigned long long (const char *)'
|   |     `-ImplicitCastExpr 0x230fe6a9ee8 <col:16> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x230fe6a9e28 <col:16> 'const char *' lvalue ParmVar 0x230fe6a99e0 'str' 'const char *'
|   `-ReturnStmt 0x230fe6aa008 <line:527:5, col:16>
|     `-ImplicitCastExpr 0x230fe6a9ff0 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x230fe6a9fd0 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x230fe6a9fb0 <col:13> 'int' lvalue Var 0x230fe6a9be0 'ret' 'int'
|-FunctionDecl 0x230fe6a9ce0 <line:525:9> col:9 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x230fe6a9d80 <<invalid sloc>> <invalid sloc> 'const char *'
`-FunctionDecl 0x230fe6b11c0 <line:530:1, line:541:1> line:530:6 invalid BIO_new_connect 'int *(const char *)'
  |-ParmVarDecl 0x230fe6aa058 <col:22, col:34> col:34 used str 'const char *'
  `-CompoundStmt 0x230fe6b1738 <line:531:1, line:541:1>
    |-IfStmt 0x230fe6b1500 <line:535:5, line:536:21>
    | |-OpaqueValueExpr 0x230fe6b14e8 <<invalid sloc>> '_Bool'
    | `-ReturnStmt 0x230fe6b14d8 <col:9, col:21>
    |   `-ImplicitCastExpr 0x230fe6b14c0 <col:16, col:21> 'int *' <NullToPointer>
    |     `-ParenExpr 0x230fe6b14a0 <col:16, col:21> 'void *'
    |       `-ParenExpr 0x230fe6b1480 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
    |         `-CStyleCastExpr 0x230fe6b1458 <col:18, col:26> 'void *' <NullToPointer>
    |           `-IntegerLiteral 0x230fe6b1418 <col:26> 'int' 0
    `-ReturnStmt 0x230fe6b1728 <.//openssl//file_jk/before\crypto\bio\bss_conn.c:540:5, col:17>
      `-ImplicitCastExpr 0x230fe6b1710 <col:12, col:17> 'int *' <NullToPointer>
        `-ParenExpr 0x230fe6b16f0 <col:12, col:17> 'void *'
          `-ParenExpr 0x230fe6b16d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
            `-CStyleCastExpr 0x230fe6b16a8 <col:18, col:26> 'void *' <NullToPointer>
              `-IntegerLiteral 0x230fe6b1668 <col:26> 'int' 0
