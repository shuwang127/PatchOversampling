TranslationUnitDecl 0x1d9ee911678 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1d9ee911f10 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1d9ee911c10 '__int128'
|-TypedefDecl 0x1d9ee911f80 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1d9ee911c30 'unsigned __int128'
|-TypedefDecl 0x1d9ee9122b8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1d9ee912070 'struct __NSConstantString_tag'
|   `-Record 0x1d9ee911fd8 '__NSConstantString_tag'
|-TypedefDecl 0x1d9ee912328 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1d9ee911850 'unsigned long long'
|-TypedefDecl 0x1d9ee9123c0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1d9ee912380 'char *'
|   `-BuiltinType 0x1d9ee911710 'char'
|-TypedefDecl 0x1d9ee912430 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1d9ee912380 'char *'
|   `-BuiltinType 0x1d9ee911710 'char'
|-TypedefDecl 0x1d9ee9124f0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1d9ee911850 'unsigned long long'
|-TypedefDecl 0x1d9ee912560 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1d9ee912380 'char *'
|   `-BuiltinType 0x1d9ee911710 'char'
|-FunctionDecl 0x1d9f044c420 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1d9f044c4c0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1d9f044c530 <col:21> Implicit
|-FunctionDecl 0x1d9f044c588 prev 0x1d9f044c420 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1d9f044c2b0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1d9f044c678 <col:21> Inherited Implicit
|-TypedefDecl 0x1d9f044c6b8 prev 0x1d9ee912328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1d9ee911850 'unsigned long long'
|-TypedefDecl 0x1d9f044c760 <line:503:1, col:16> col:16 rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1d9f044c730 'size_t' sugar
|   |-Typedef 0x1d9f044c6b8 'size_t'
|   `-BuiltinType 0x1d9ee911850 'unsigned long long'
|-TypedefDecl 0x1d9f044c7d0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1d9ee9117b0 'long long'
|-TypedefDecl 0x1d9f044c840 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1d9ee9117b0 'long long'
|-TypedefDecl 0x1d9f044c8b0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1d9ee9117f0 'unsigned short'
|-TypedefDecl 0x1d9f044c920 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x1d9ee9117f0 'unsigned short'
|-TypedefDecl 0x1d9f044c990 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1d9ee9117f0 'unsigned short'
|-TypedefDecl 0x1d9f044ca00 <line:563:1, col:13> col:13 errno_t 'int'
| `-BuiltinType 0x1d9ee911770 'int'
|-TypedefDecl 0x1d9f044ca70 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1d9ee911790 'long'
|-TypedefDecl 0x1d9f044cae0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1d9ee9117b0 'long long'
|-TypedefDecl 0x1d9f044cb70 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1d9f044cb40 '__time64_t' sugar
|   |-Typedef 0x1d9f044cae0 '__time64_t'
|   `-BuiltinType 0x1d9ee9117b0 'long long'
|-FunctionDecl 0x1d9f044cce8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1d9f044cf08 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1d9f04867e0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1d9f044d048 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1d9f044d0c0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1d9f044d138 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1d9f044d1b8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1d9f0486580 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1d9f04868c0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1d9f0486980 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1d9f0486af0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1d9f0486aa0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1d9f0486a40 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1d9f0486960 'struct threadlocaleinfostruct'
|       `-Record 0x1d9f0490620 'threadlocaleinfostruct'
|-TypedefDecl 0x1d9f0486c00 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1d9f0486bb0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1d9f0486b50 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1d9f0486a20 'struct threadmbcinfostruct'
|       `-Record 0x1d9f0486980 'threadmbcinfostruct'
|-RecordDecl 0x1d9f0486c58 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1d9f0486d10 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1d9f0486dd0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1d9f0486e60 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1d9f0486ef0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1d9f0486fa8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1d9f0486f50 'struct localeinfo_struct' sugar
|   `-RecordType 0x1d9f0486db0 'struct localeinfo_struct'
|     `-Record 0x1d9f0486d10 'localeinfo_struct'
|-TypedefDecl 0x1d9f0487080 <line:2078:1, line:2082:21> col:21 _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1d9f0487030 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1d9f0486f50 'struct localeinfo_struct' sugar
|     `-RecordType 0x1d9f0486db0 'struct localeinfo_struct'
|       `-Record 0x1d9f0486d10 'localeinfo_struct'
|-RecordDecl 0x1d9f04870f8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1d9f04871b0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1d9f0487228 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1d9f04872e8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1d9f0487380 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1d9f04873f0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1d9f04874a8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1d9f0487450 'struct localerefcount' sugar
|   `-RecordType 0x1d9f0487190 'struct localerefcount'
|     `-Record 0x1d9f04870f8 'localerefcount'
|-RecordDecl 0x1d9f0490620 prev 0x1d9f04868c0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1d9f04906a0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1d9f0490718 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1d9f0490788 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1d9f04907f8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1d9f0490868 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1d9f0490a28 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1d9f0490a98 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1d9f0490b08 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1d9f0490b78 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1d9f0490be8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1d9f0490c58 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1d9f0490cb0 parent 0x1d9ee911678 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1d9f0490e40 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1d9f0490eb0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1d9f0490f20 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1d9f0490f90 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1d9f0491030 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1d9f04910a0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1d9f04911b0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1d9f04912e8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1d9f0491398 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1d9f0491340 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1d9f0486960 'struct threadlocaleinfostruct'
|     `-Record 0x1d9f0490620 'threadlocaleinfostruct'
|-FunctionDecl 0x1d9f0495750 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:35:9, col:112> col:22 _wassert 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
| |-ParmVarDecl 0x1d9f0491418 <col:38, col:54> col:54 _Message 'const wchar_t *'
| |-ParmVarDecl 0x1d9f0491490 <col:71, col:86> col:86 _File 'const wchar_t *'
| `-ParmVarDecl 0x1d9f0491510 <col:98, col:107> col:107 _Line 'unsigned int'
|-FunctionDecl 0x1d9f0495ab0 <.//openssl//file_jk/before\crypto\bn/bn_lcl.h:220:1, line:221:37> line:220:10 invalid bn_mul_add_words 'int (int *, const int *, int, int)'
| |-ParmVarDecl 0x1d9f0495838 <col:27, col:37> col:37 invalid rp 'int *'
| |-ParmVarDecl 0x1d9f04958b8 <col:41, col:57> col:57 invalid ap 'const int *'
| |-ParmVarDecl 0x1d9f0495938 <col:61, col:65> col:65 num 'int'
| `-ParmVarDecl 0x1d9f04959b8 <line:221:27, col:36> col:36 invalid w 'int'
|-FunctionDecl 0x1d9f0495db8 <line:222:1, col:76> col:10 invalid bn_mul_words 'int (int *, const int *, int, int)'
| |-ParmVarDecl 0x1d9f0495b88 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x1d9f0495c08 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x1d9f0495c88 <col:57, col:61> col:61 num 'int'
| `-ParmVarDecl 0x1d9f0495d08 <col:66, col:75> col:75 invalid w 'int'
|-FunctionDecl 0x1d9f0496078 <line:223:1, col:60> col:6 invalid bn_sqr_words 'void (int *, const int *, int)'
| |-ParmVarDecl 0x1d9f0495e90 <col:19, col:29> col:29 invalid rp 'int *'
| |-ParmVarDecl 0x1d9f0495f10 <col:33, col:49> col:49 invalid ap 'const int *'
| `-ParmVarDecl 0x1d9f0495f90 <col:53, col:57> col:57 num 'int'
|-FunctionDecl 0x1d9f0496330 <line:224:1, col:57> col:10 invalid bn_div_words 'int (int, int, int)'
| |-ParmVarDecl 0x1d9f0496148 <col:23, col:32> col:32 invalid h 'int'
| |-ParmVarDecl 0x1d9f04961c8 <col:35, col:44> col:44 invalid l 'int'
| `-ParmVarDecl 0x1d9f0496248 <col:47, col:56> col:56 invalid d 'int'
|-FunctionDecl 0x1d9f048f658 <line:225:1, line:226:30> line:225:10 invalid bn_add_words 'int (int *, const int *, const int *, int)'
| |-ParmVarDecl 0x1d9f0496400 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x1d9f0496480 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x1d9f0496500 <col:57, col:73> col:73 invalid bp 'const int *'
| `-ParmVarDecl 0x1d9f0496580 <line:226:23, col:27> col:27 num 'int'
|-FunctionDecl 0x1d9f048f960 <line:227:1, line:228:30> line:227:10 invalid bn_sub_words 'int (int *, const int *, const int *, int)'
| |-ParmVarDecl 0x1d9f048f730 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x1d9f048f7b0 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x1d9f048f830 <col:57, col:73> col:73 invalid bp 'const int *'
| `-ParmVarDecl 0x1d9f048f8b0 <line:228:23, col:27> col:27 num 'int'
|-RecordDecl 0x1d9f048fa20 <line:230:1, line:238:1> line:230:8 invalid struct bignum_st definition
| |-FieldDecl 0x1d9f048faf8 <line:231:5, col:15> col:15 invalid d 'int *'
| |-FieldDecl 0x1d9f048fb68 <line:233:5, col:9> col:9 top 'int'
| |-FieldDecl 0x1d9f048fbd8 <line:235:5, col:9> col:9 dmax 'int'
| |-FieldDecl 0x1d9f048fc48 <line:236:5, col:9> col:9 neg 'int'
| `-FieldDecl 0x1d9f048fcb8 <line:237:5, col:9> col:9 flags 'int'
|-RecordDecl 0x1d9f048fd10 <line:241:1, line:252:1> line:241:8 invalid struct bn_mont_ctx_st definition
| |-FieldDecl 0x1d9f048fde8 <line:242:5, col:9> col:9 ri 'int'
| |-FieldDecl 0x1d9f048fe58 <line:243:5, col:12> col:12 invalid RR 'int'
| |-FieldDecl 0x1d9f048fec8 <line:245:5, col:12> col:12 invalid N 'int'
| |-FieldDecl 0x1d9f048ff38 <line:246:5, col:12> col:12 invalid Ni 'int'
| |-FieldDecl 0x1d9f0490030 <line:248:5, <invalid sloc>> col:14 invalid n0 'int [2]'
| `-FieldDecl 0x1d9f04900a0 <line:251:5, col:9> col:9 flags 'int'
|-RecordDecl 0x1d9f04900f8 <line:258:1, line:264:1> line:258:8 invalid struct bn_recp_ctx_st definition
| |-FieldDecl 0x1d9f04901c8 <line:259:5, col:12> col:12 invalid N 'int'
| |-FieldDecl 0x1d9f0490238 <line:260:5, col:12> col:12 invalid Nr 'int'
| |-FieldDecl 0x1d9f04902a8 <line:261:5, col:9> col:9 num_bits 'int'
| |-FieldDecl 0x1d9f0490318 <line:262:5, col:9> col:9 shift 'int'
| `-FieldDecl 0x1d9f0490388 <line:263:5, col:9> col:9 flags 'int'
|-RecordDecl 0x1d9f04903e0 <line:267:1, line:276:1> line:267:8 struct bn_gencb_st definition
| |-FieldDecl 0x1d9f04904b8 <line:268:5, col:18> col:18 ver 'unsigned int'
| |-FieldDecl 0x1d9f0490528 <line:269:5, col:11> col:11 arg 'void *'
| |-RecordDecl 0x1d9f0490580 <line:270:5, line:275:5> line:270:5 union definition
| | |-FieldDecl 0x1d9f049a990 <line:272:9, col:39> col:16 cb_1 'void (*)(int, int, void *)'
| | `-FieldDecl 0x1d9f049ac88 <line:274:9, col:42> col:15 cb_2 'int (*)(int, int, int *)'
| `-FieldDecl 0x1d9f049ad38 <line:270:5, line:275:7> col:7 cb 'union (anonymous union at .//openssl//file_jk/before\crypto\bn/bn_lcl.h:270:5)':'union bn_gencb_st::(anonymous at .//openssl//file_jk/before\crypto\bn/bn_lcl.h:270:5)'
|-FunctionDecl 0x1d9f049aec8 <line:649:1, col:40> col:6 invalid BN_RECP_CTX_init 'void (int *)'
| `-ParmVarDecl 0x1d9f049ae08 <col:23, col:36> col:36 invalid recp 'int *'
|-FunctionDecl 0x1d9f049b018 <line:650:1, col:39> col:6 invalid BN_MONT_CTX_init 'void (int *)'
| `-ParmVarDecl 0x1d9f049af88 <col:23, col:36> col:36 invalid ctx 'int *'
|-FunctionDecl 0x1d9f049b168 <line:652:1, col:23> col:6 invalid bn_init 'void (int *)'
| `-ParmVarDecl 0x1d9f049b0d8 <col:14, col:22> col:22 invalid a 'int *'
|-FunctionDecl 0x1d9f049b528 <line:653:1, col:73> col:6 invalid bn_mul_normal 'void (int *, int *, int, int *, int)'
| |-ParmVarDecl 0x1d9f049b228 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1d9f049b2a8 <col:33, col:43> col:43 invalid a 'int *'
| |-ParmVarDecl 0x1d9f049b328 <col:46, col:50> col:50 na 'int'
| |-ParmVarDecl 0x1d9f049b3a8 <col:54, col:64> col:64 invalid b 'int *'
| `-ParmVarDecl 0x1d9f049b428 <col:67, col:71> col:71 nb 'int'
|-FunctionDecl 0x1d9f04977f8 <line:654:1, col:57> col:6 invalid bn_mul_comba8 'void (int *, int *, int *)'
| |-ParmVarDecl 0x1d9f049b608 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1d9f0497690 <col:33, col:43> col:43 invalid a 'int *'
| `-ParmVarDecl 0x1d9f0497710 <col:46, col:56> col:56 invalid b 'int *'
|-FunctionDecl 0x1d9f0497a68 <line:655:1, col:57> col:6 invalid bn_mul_comba4 'void (int *, int *, int *)'
| |-ParmVarDecl 0x1d9f04978c8 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1d9f0497948 <col:33, col:43> col:43 invalid a 'int *'
| `-ParmVarDecl 0x1d9f04979c8 <col:46, col:56> col:56 invalid b 'int *'
|-FunctionDecl 0x1d9f0497da8 <line:656:1, col:72> col:6 invalid bn_sqr_normal 'void (int *, const int *, int, int *)'
| |-ParmVarDecl 0x1d9f0497b38 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1d9f0497bb8 <col:33, col:49> col:49 invalid a 'const int *'
| |-ParmVarDecl 0x1d9f0497c38 <col:52, col:56> col:56 n 'int'
| `-ParmVarDecl 0x1d9f0497cb8 <col:59, col:69> col:69 invalid tmp 'int *'
|-FunctionDecl 0x1d9f0497fd8 <line:657:1, col:50> col:6 invalid bn_sqr_comba8 'void (int *, const int *)'
| |-ParmVarDecl 0x1d9f0497e80 <col:20, col:30> col:30 invalid r 'int *'
| `-ParmVarDecl 0x1d9f0497f00 <col:33, col:49> col:49 invalid a 'const int *'
|-FunctionDecl 0x1d9f04981b8 <line:658:1, col:50> col:6 invalid bn_sqr_comba4 'void (int *, const int *)'
| |-ParmVarDecl 0x1d9f04980a0 <col:20, col:30> col:30 invalid r 'int *'
| `-ParmVarDecl 0x1d9f0498120 <col:33, col:49> col:49 invalid a 'const int *'
|-FunctionDecl 0x1d9f0498470 <line:659:1, col:61> col:5 invalid bn_cmp_words 'int (const int *, const int *, int)'
| |-ParmVarDecl 0x1d9f0498280 <col:18, col:34> col:34 invalid a 'const int *'
| |-ParmVarDecl 0x1d9f0498300 <col:37, col:53> col:53 invalid b 'const int *'
| `-ParmVarDecl 0x1d9f0498380 <col:56, col:60> col:60 n 'int'
|-FunctionDecl 0x1d9f049d870 <line:660:1, col:75> col:5 invalid bn_cmp_part_words 'int (const int *, const int *, int, int)'
| |-ParmVarDecl 0x1d9f0498540 <col:23, col:39> col:39 invalid a 'const int *'
| |-ParmVarDecl 0x1d9f04985c0 <col:42, col:58> col:58 invalid b 'const int *'
| |-ParmVarDecl 0x1d9f049d6f0 <col:61, col:65> col:65 cl 'int'
| `-ParmVarDecl 0x1d9f049d770 <col:69, col:73> col:73 dl 'int'
|-FunctionDecl 0x1d9f049dd68 <line:661:1, line:662:52> line:661:6 invalid bn_mul_recursive 'void (int *, int *, int *, int, int, int, int *)'
| |-ParmVarDecl 0x1d9f049d948 <col:23, col:33> col:33 invalid r 'int *'
| |-ParmVarDecl 0x1d9f049d9c8 <col:36, col:46> col:46 invalid a 'int *'
| |-ParmVarDecl 0x1d9f049da48 <col:49, col:59> col:59 invalid b 'int *'
| |-ParmVarDecl 0x1d9f049dac8 <col:62, col:66> col:66 n2 'int'
| |-ParmVarDecl 0x1d9f049db48 <line:662:23, col:27> col:27 dna 'int'
| |-ParmVarDecl 0x1d9f049dbc8 <col:32, col:36> col:36 dnb 'int'
| `-ParmVarDecl 0x1d9f049dc48 <col:41, col:51> col:51 invalid t 'int *'
|-FunctionDecl 0x1d9f049e218 <line:663:1, line:664:64> line:663:6 invalid bn_mul_part_recursive 'void (int *, int *, int *, int, int, int, int *)'
| |-ParmVarDecl 0x1d9f049de58 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x1d9f049ded8 <col:41, col:51> col:51 invalid a 'int *'
| |-ParmVarDecl 0x1d9f049df58 <col:54, col:64> col:64 invalid b 'int *'
| |-ParmVarDecl 0x1d9f049dfd8 <line:664:28, col:32> col:32 n 'int'
| |-ParmVarDecl 0x1d9f049e058 <col:35, col:39> col:39 tna 'int'
| |-ParmVarDecl 0x1d9f049e0d8 <col:44, col:48> col:48 tnb 'int'
| `-ParmVarDecl 0x1d9f049e158 <col:53, col:63> col:63 invalid t 'int *'
|-FunctionDecl 0x1d9f049e530 <line:665:1, col:74> col:6 invalid bn_sqr_recursive 'void (int *, const int *, int, int *)'
| |-ParmVarDecl 0x1d9f049e308 <col:23, col:33> col:33 invalid r 'int *'
| |-ParmVarDecl 0x1d9f049e388 <col:36, col:52> col:52 invalid a 'const int *'
| |-ParmVarDecl 0x1d9f049e408 <col:55, col:59> col:59 n2 'int'
| `-ParmVarDecl 0x1d9f049e488 <col:63, col:73> col:73 invalid t 'int *'
|-FunctionDecl 0x1d9f049f898 <line:666:1, col:68> col:6 invalid bn_mul_low_normal 'void (int *, int *, int *, int)'
| |-ParmVarDecl 0x1d9f049e608 <col:24, col:34> col:34 invalid r 'int *'
| |-ParmVarDecl 0x1d9f049e688 <col:37, col:47> col:47 invalid a 'int *'
| |-ParmVarDecl 0x1d9f049f728 <col:50, col:60> col:60 invalid b 'int *'
| `-ParmVarDecl 0x1d9f049f7a8 <col:63, col:67> col:67 n 'int'
|-FunctionDecl 0x1d9f049fc78 <line:667:1, line:668:38> line:667:6 invalid bn_mul_low_recursive 'void (int *, int *, int *, int, int *)'
| |-ParmVarDecl 0x1d9f049f970 <col:27, col:37> col:37 invalid r 'int *'
| |-ParmVarDecl 0x1d9f049f9f0 <col:40, col:50> col:50 invalid a 'int *'
| |-ParmVarDecl 0x1d9f049fa70 <col:53, col:63> col:63 invalid b 'int *'
| |-ParmVarDecl 0x1d9f049faf0 <col:66, col:70> col:70 n2 'int'
| `-ParmVarDecl 0x1d9f049fb70 <line:668:27, col:37> col:37 invalid t 'int *'
|-FunctionDecl 0x1d9f04a00e8 <line:669:1, line:670:29> line:669:6 invalid bn_mul_high 'void (int *, int *, int *, int *, int, int *)'
| |-ParmVarDecl 0x1d9f049fd58 <col:18, col:28> col:28 invalid r 'int *'
| |-ParmVarDecl 0x1d9f049fdd8 <col:31, col:41> col:41 invalid a 'int *'
| |-ParmVarDecl 0x1d9f049fe58 <col:44, col:54> col:54 invalid b 'int *'
| |-ParmVarDecl 0x1d9f049fed8 <col:57, col:67> col:67 invalid l 'int *'
| |-ParmVarDecl 0x1d9f049ff58 <col:70, col:74> col:74 n2 'int'
| `-ParmVarDecl 0x1d9f049ffd8 <line:670:18, col:28> col:28 invalid t 'int *'
|-FunctionDecl 0x1d9f04a04e0 <line:671:1, line:672:42> line:671:10 invalid bn_add_part_words 'int (int *, const int *, const int *, int, int)'
| |-ParmVarDecl 0x1d9f04a01d0 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x1d9f04a0250 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x1d9f04a02d0 <col:60, col:76> col:76 invalid b 'const int *'
| |-ParmVarDecl 0x1d9f04a0350 <line:672:28, col:32> col:32 cl 'int'
| `-ParmVarDecl 0x1d9f04a03d0 <col:36, col:40> col:40 dl 'int'
|-FunctionDecl 0x1d9f0499868 <line:673:1, line:674:42> line:673:10 invalid bn_sub_part_words 'int (int *, const int *, const int *, int, int)'
| |-ParmVarDecl 0x1d9f04a05c0 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x1d9f04a0640 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x1d9f04996b0 <col:60, col:76> col:76 invalid b 'const int *'
| |-ParmVarDecl 0x1d9f0499730 <line:674:28, col:32> col:32 cl 'int'
| `-ParmVarDecl 0x1d9f04997b0 <col:36, col:40> col:40 dl 'int'
|-FunctionDecl 0x1d9f0499ce0 <line:675:1, line:676:64> line:675:5 invalid bn_mul_mont 'int (int *, const int *, const int *, const int *, const int *, int)'
| |-ParmVarDecl 0x1d9f0499948 <col:17, col:27> col:27 invalid rp 'int *'
| |-ParmVarDecl 0x1d9f04999c8 <col:31, col:47> col:47 invalid ap 'const int *'
| |-ParmVarDecl 0x1d9f0499a48 <col:51, col:67> col:67 invalid bp 'const int *'
| |-ParmVarDecl 0x1d9f0499ac8 <line:676:17, col:33> col:33 invalid np 'const int *'
| |-ParmVarDecl 0x1d9f0499b48 <col:37, col:53> col:53 invalid n0 'const int *'
| `-ParmVarDecl 0x1d9f0499bc8 <col:57, col:61> col:61 num 'int'
|-FunctionDecl 0x1d9f049a0d0 <line:678:1, line:680:38> line:678:9 invalid int_bn_mod_inverse 'int *(int *, const int *, const int *, int *, int *)'
| |-ParmVarDecl 0x1d9f0499dc8 <col:28, col:36> col:36 invalid in 'int *'
| |-ParmVarDecl 0x1d9f0499e48 <line:679:28, col:42> col:42 invalid a 'const int *'
| |-ParmVarDecl 0x1d9f0499ec8 <col:45, col:59> col:59 invalid n 'const int *'
| |-ParmVarDecl 0x1d9f0499f48 <col:62, col:70> col:70 invalid ctx 'int *'
| `-ParmVarDecl 0x1d9f0499fc8 <line:680:28, col:33> col:33 noinv 'int *'
|-FunctionDecl 0x1d9f049a4c0 <line:682:1, line:683:75> line:682:5 invalid bn_probable_prime_dh 'int (int *, int, const int *, const int *, int *)'
| |-ParmVarDecl 0x1d9f049a1b0 <col:26, col:34> col:34 invalid rnd 'int *'
| |-ParmVarDecl 0x1d9f049a230 <col:39, col:43> col:43 bits 'int'
| |-ParmVarDecl 0x1d9f049a2b0 <line:683:26, col:40> col:40 invalid add 'const int *'
| |-ParmVarDecl 0x1d9f049a330 <col:45, col:59> col:59 invalid rem 'const int *'
| `-ParmVarDecl 0x1d9f049a3b0 <col:64, col:72> col:72 invalid ctx 'int *'
|-FunctionDecl 0x1d9f0498790 <line:684:1, col:66> col:5 invalid bn_probable_prime_dh_retry 'int (int *, int, int *)'
| |-ParmVarDecl 0x1d9f049a5a0 <col:32, col:40> col:40 invalid rnd 'int *'
| |-ParmVarDecl 0x1d9f049a620 <col:45, col:49> col:49 bits 'int'
| `-ParmVarDecl 0x1d9f04986a0 <col:55, col:63> col:63 invalid ctx 'int *'
|-FunctionDecl 0x1d9f0498a08 <line:685:1, col:68> col:5 invalid bn_probable_prime_dh_coprime 'int (int *, int, int *)'
| |-ParmVarDecl 0x1d9f0498860 <col:34, col:42> col:42 invalid rnd 'int *'
| |-ParmVarDecl 0x1d9f04988e0 <col:47, col:51> col:51 bits 'int'
| `-ParmVarDecl 0x1d9f0498960 <col:57, col:65> col:65 invalid ctx 'int *'
`-VarDecl 0x1d9f0498ad8 <line:687:1, col:20> col:20 invalid BIGNUM 'int' static
