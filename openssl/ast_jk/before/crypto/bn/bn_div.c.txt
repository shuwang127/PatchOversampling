TranslationUnitDecl 0x1670cfe57a8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1670cfe6040 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1670cfe5d40 '__int128'
|-TypedefDecl 0x1670cfe60b0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1670cfe5d60 'unsigned __int128'
|-TypedefDecl 0x1670cfe63e8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1670cfe61a0 'struct __NSConstantString_tag'
|   `-Record 0x1670cfe6108 '__NSConstantString_tag'
|-TypedefDecl 0x1670cfe6458 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1670cfe5980 'unsigned long long'
|-TypedefDecl 0x1670cfe64f0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1670cfe64b0 'char *'
|   `-BuiltinType 0x1670cfe5840 'char'
|-TypedefDecl 0x1670cfe6560 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1670cfe64b0 'char *'
|   `-BuiltinType 0x1670cfe5840 'char'
|-FunctionDecl 0x1670e7ef850 <.//openssl//file_jk/before\crypto\bn/bn_lcl.h:220:1, line:221:37> line:220:10 invalid bn_mul_add_words 'int (int *, const int *, int, int)'
| |-ParmVarDecl 0x1670cfe6600 <col:27, col:37> col:37 invalid rp 'int *'
| |-ParmVarDecl 0x1670cfe6680 <col:41, col:57> col:57 invalid ap 'const int *'
| |-ParmVarDecl 0x1670cfe6700 <col:61, col:65> col:65 num 'int'
| `-ParmVarDecl 0x1670e7ef750 <line:221:27, col:36> col:36 invalid w 'int'
|-FunctionDecl 0x1670e7efb58 <line:222:1, col:76> col:10 invalid bn_mul_words 'int (int *, const int *, int, int)'
| |-ParmVarDecl 0x1670e7ef928 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x1670e7ef9a8 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x1670e7efa28 <col:57, col:61> col:61 num 'int'
| `-ParmVarDecl 0x1670e7efaa8 <col:66, col:75> col:75 invalid w 'int'
|-FunctionDecl 0x1670e7efe18 <line:223:1, col:60> col:6 invalid bn_sqr_words 'void (int *, const int *, int)'
| |-ParmVarDecl 0x1670e7efc30 <col:19, col:29> col:29 invalid rp 'int *'
| |-ParmVarDecl 0x1670e7efcb0 <col:33, col:49> col:49 invalid ap 'const int *'
| `-ParmVarDecl 0x1670e7efd30 <col:53, col:57> col:57 num 'int'
|-FunctionDecl 0x1670e7f00d0 <line:224:1, col:57> col:10 invalid bn_div_words 'int (int, int, int)'
| |-ParmVarDecl 0x1670e7efee8 <col:23, col:32> col:32 invalid h 'int'
| |-ParmVarDecl 0x1670e7eff68 <col:35, col:44> col:44 invalid l 'int'
| `-ParmVarDecl 0x1670e7effe8 <col:47, col:56> col:56 invalid d 'int'
|-FunctionDecl 0x1670e7f0420 <line:225:1, line:226:30> line:225:10 invalid bn_add_words 'int (int *, const int *, const int *, int)'
| |-ParmVarDecl 0x1670e7f01a0 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x1670e7f0220 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x1670e7f02a0 <col:57, col:73> col:73 invalid bp 'const int *'
| `-ParmVarDecl 0x1670e7f0320 <line:226:23, col:27> col:27 num 'int'
|-FunctionDecl 0x1670e7f47a0 <line:227:1, line:228:30> line:227:10 invalid bn_sub_words 'int (int *, const int *, const int *, int)'
| |-ParmVarDecl 0x1670e7f04f8 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x1670e7f0578 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x1670e7f05f8 <col:57, col:73> col:73 invalid bp 'const int *'
| `-ParmVarDecl 0x1670e7f0678 <line:228:23, col:27> col:27 num 'int'
|-RecordDecl 0x1670e7f4860 <line:230:1, line:238:1> line:230:8 invalid struct bignum_st definition
| |-FieldDecl 0x1670e7f4938 <line:231:5, col:15> col:15 invalid d 'int *'
| |-FieldDecl 0x1670e7f49a8 <line:233:5, col:9> col:9 top 'int'
| |-FieldDecl 0x1670e7f4a18 <line:235:5, col:9> col:9 dmax 'int'
| |-FieldDecl 0x1670e7f4a88 <line:236:5, col:9> col:9 neg 'int'
| `-FieldDecl 0x1670e7f4af8 <line:237:5, col:9> col:9 flags 'int'
|-RecordDecl 0x1670e7f4b50 <line:241:1, line:252:1> line:241:8 invalid struct bn_mont_ctx_st definition
| |-FieldDecl 0x1670e7f4c28 <line:242:5, col:9> col:9 ri 'int'
| |-FieldDecl 0x1670e7f4c98 <line:243:5, col:12> col:12 invalid RR 'int'
| |-FieldDecl 0x1670e7f4d08 <line:245:5, col:12> col:12 invalid N 'int'
| |-FieldDecl 0x1670e7f4d78 <line:246:5, col:12> col:12 invalid Ni 'int'
| |-FieldDecl 0x1670e7f4e70 <line:248:5, <invalid sloc>> col:14 invalid n0 'int [2]'
| `-FieldDecl 0x1670e7f4ee0 <line:251:5, col:9> col:9 flags 'int'
|-RecordDecl 0x1670e7f4f38 <line:258:1, line:264:1> line:258:8 invalid struct bn_recp_ctx_st definition
| |-FieldDecl 0x1670e7f5008 <line:259:5, col:12> col:12 invalid N 'int'
| |-FieldDecl 0x1670e7f5078 <line:260:5, col:12> col:12 invalid Nr 'int'
| |-FieldDecl 0x1670e7f50e8 <line:261:5, col:9> col:9 num_bits 'int'
| |-FieldDecl 0x1670e7f5158 <line:262:5, col:9> col:9 shift 'int'
| `-FieldDecl 0x1670e7f51c8 <line:263:5, col:9> col:9 flags 'int'
|-RecordDecl 0x1670e7f5220 <line:267:1, line:276:1> line:267:8 struct bn_gencb_st definition
| |-FieldDecl 0x1670e7f52f8 <line:268:5, col:18> col:18 ver 'unsigned int'
| |-FieldDecl 0x1670e7f5368 <line:269:5, col:11> col:11 arg 'void *'
| |-RecordDecl 0x1670e7f53c0 <line:270:5, line:275:5> line:270:5 union definition
| | |-FieldDecl 0x1670e7f5710 <line:272:9, col:39> col:16 cb_1 'void (*)(int, int, void *)'
| | `-FieldDecl 0x1670e7f3a18 <line:274:9, col:42> col:15 cb_2 'int (*)(int, int, int *)'
| `-FieldDecl 0x1670e7f3ac8 <line:270:5, line:275:7> col:7 cb 'union (anonymous union at .//openssl//file_jk/before\crypto\bn/bn_lcl.h:270:5)':'union bn_gencb_st::(anonymous at .//openssl//file_jk/before\crypto\bn/bn_lcl.h:270:5)'
|-FunctionDecl 0x1670e7f3c58 <line:649:1, col:40> col:6 invalid BN_RECP_CTX_init 'void (int *)'
| `-ParmVarDecl 0x1670e7f3b98 <col:23, col:36> col:36 invalid recp 'int *'
|-FunctionDecl 0x1670e7f3da8 <line:650:1, col:39> col:6 invalid BN_MONT_CTX_init 'void (int *)'
| `-ParmVarDecl 0x1670e7f3d18 <col:23, col:36> col:36 invalid ctx 'int *'
|-FunctionDecl 0x1670e7f3ef8 <line:652:1, col:23> col:6 invalid bn_init 'void (int *)'
| `-ParmVarDecl 0x1670e7f3e68 <col:14, col:22> col:22 invalid a 'int *'
|-FunctionDecl 0x1670e7f42b8 <line:653:1, col:73> col:6 invalid bn_mul_normal 'void (int *, int *, int, int *, int)'
| |-ParmVarDecl 0x1670e7f3fb8 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1670e7f4038 <col:33, col:43> col:43 invalid a 'int *'
| |-ParmVarDecl 0x1670e7f40b8 <col:46, col:50> col:50 na 'int'
| |-ParmVarDecl 0x1670e7f4138 <col:54, col:64> col:64 invalid b 'int *'
| `-ParmVarDecl 0x1670e7f41b8 <col:67, col:71> col:71 nb 'int'
|-FunctionDecl 0x1670e7f4578 <line:654:1, col:57> col:6 invalid bn_mul_comba8 'void (int *, int *, int *)'
| |-ParmVarDecl 0x1670e7f4398 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1670e7f4418 <col:33, col:43> col:43 invalid a 'int *'
| `-ParmVarDecl 0x1670e7f4498 <col:46, col:56> col:56 invalid b 'int *'
|-FunctionDecl 0x1670e7f0800 <line:655:1, col:57> col:6 invalid bn_mul_comba4 'void (int *, int *, int *)'
| |-ParmVarDecl 0x1670e7f4648 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1670e7f46c8 <col:33, col:43> col:43 invalid a 'int *'
| `-ParmVarDecl 0x1670e7f0760 <col:46, col:56> col:56 invalid b 'int *'
|-FunctionDecl 0x1670e7f0b48 <line:656:1, col:72> col:6 invalid bn_sqr_normal 'void (int *, const int *, int, int *)'
| |-ParmVarDecl 0x1670e7f08d0 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1670e7f0950 <col:33, col:49> col:49 invalid a 'const int *'
| |-ParmVarDecl 0x1670e7f09d0 <col:52, col:56> col:56 n 'int'
| `-ParmVarDecl 0x1670e7f0a50 <col:59, col:69> col:69 invalid tmp 'int *'
|-FunctionDecl 0x1670e7f0d78 <line:657:1, col:50> col:6 invalid bn_sqr_comba8 'void (int *, const int *)'
| |-ParmVarDecl 0x1670e7f0c20 <col:20, col:30> col:30 invalid r 'int *'
| `-ParmVarDecl 0x1670e7f0ca0 <col:33, col:49> col:49 invalid a 'const int *'
|-FunctionDecl 0x1670e7f0f58 <line:658:1, col:50> col:6 invalid bn_sqr_comba4 'void (int *, const int *)'
| |-ParmVarDecl 0x1670e7f0e40 <col:20, col:30> col:30 invalid r 'int *'
| `-ParmVarDecl 0x1670e7f0ec0 <col:33, col:49> col:49 invalid a 'const int *'
|-FunctionDecl 0x1670e7f1210 <line:659:1, col:61> col:5 invalid bn_cmp_words 'int (const int *, const int *, int)'
| |-ParmVarDecl 0x1670e7f1020 <col:18, col:34> col:34 invalid a 'const int *'
| |-ParmVarDecl 0x1670e7f10a0 <col:37, col:53> col:53 invalid b 'const int *'
| `-ParmVarDecl 0x1670e7f1120 <col:56, col:60> col:60 n 'int'
|-FunctionDecl 0x1670e7f1560 <line:660:1, col:75> col:5 invalid bn_cmp_part_words 'int (const int *, const int *, int, int)'
| |-ParmVarDecl 0x1670e7f12e0 <col:23, col:39> col:39 invalid a 'const int *'
| |-ParmVarDecl 0x1670e7f1360 <col:42, col:58> col:58 invalid b 'const int *'
| |-ParmVarDecl 0x1670e7f13e0 <col:61, col:65> col:65 cl 'int'
| `-ParmVarDecl 0x1670e7f1460 <col:69, col:73> col:73 dl 'int'
|-FunctionDecl 0x1670e8065d8 <line:661:1, line:662:52> line:661:6 invalid bn_mul_recursive 'void (int *, int *, int *, int, int, int, int *)'
| |-ParmVarDecl 0x1670e7f1638 <col:23, col:33> col:33 invalid r 'int *'
| |-ParmVarDecl 0x1670e7f16b8 <col:36, col:46> col:46 invalid a 'int *'
| |-ParmVarDecl 0x1670e8062b0 <col:49, col:59> col:59 invalid b 'int *'
| |-ParmVarDecl 0x1670e806330 <col:62, col:66> col:66 n2 'int'
| |-ParmVarDecl 0x1670e8063b0 <line:662:23, col:27> col:27 dna 'int'
| |-ParmVarDecl 0x1670e806430 <col:32, col:36> col:36 dnb 'int'
| `-ParmVarDecl 0x1670e8064b0 <col:41, col:51> col:51 invalid t 'int *'
|-FunctionDecl 0x1670e806a88 <line:663:1, line:664:64> line:663:6 invalid bn_mul_part_recursive 'void (int *, int *, int *, int, int, int, int *)'
| |-ParmVarDecl 0x1670e8066c8 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x1670e806748 <col:41, col:51> col:51 invalid a 'int *'
| |-ParmVarDecl 0x1670e8067c8 <col:54, col:64> col:64 invalid b 'int *'
| |-ParmVarDecl 0x1670e806848 <line:664:28, col:32> col:32 n 'int'
| |-ParmVarDecl 0x1670e8068c8 <col:35, col:39> col:39 tna 'int'
| |-ParmVarDecl 0x1670e806948 <col:44, col:48> col:48 tnb 'int'
| `-ParmVarDecl 0x1670e8069c8 <col:53, col:63> col:63 invalid t 'int *'
|-FunctionDecl 0x1670e806da0 <line:665:1, col:74> col:6 invalid bn_sqr_recursive 'void (int *, const int *, int, int *)'
| |-ParmVarDecl 0x1670e806b78 <col:23, col:33> col:33 invalid r 'int *'
| |-ParmVarDecl 0x1670e806bf8 <col:36, col:52> col:52 invalid a 'const int *'
| |-ParmVarDecl 0x1670e806c78 <col:55, col:59> col:59 n2 'int'
| `-ParmVarDecl 0x1670e806cf8 <col:63, col:73> col:73 invalid t 'int *'
|-FunctionDecl 0x1670e8070e8 <line:666:1, col:68> col:6 invalid bn_mul_low_normal 'void (int *, int *, int *, int)'
| |-ParmVarDecl 0x1670e806e78 <col:24, col:34> col:34 invalid r 'int *'
| |-ParmVarDecl 0x1670e806ef8 <col:37, col:47> col:47 invalid a 'int *'
| |-ParmVarDecl 0x1670e806f78 <col:50, col:60> col:60 invalid b 'int *'
| `-ParmVarDecl 0x1670e806ff8 <col:63, col:67> col:67 n 'int'
|-FunctionDecl 0x1670e8044a8 <line:667:1, line:668:38> line:667:6 invalid bn_mul_low_recursive 'void (int *, int *, int *, int, int *)'
| |-ParmVarDecl 0x1670e8071c0 <col:27, col:37> col:37 invalid r 'int *'
| |-ParmVarDecl 0x1670e807240 <col:40, col:50> col:50 invalid a 'int *'
| |-ParmVarDecl 0x1670e8042a8 <col:53, col:63> col:63 invalid b 'int *'
| |-ParmVarDecl 0x1670e804328 <col:66, col:70> col:70 n2 'int'
| `-ParmVarDecl 0x1670e8043a8 <line:668:27, col:37> col:37 invalid t 'int *'
|-FunctionDecl 0x1670e804918 <line:669:1, line:670:29> line:669:6 invalid bn_mul_high 'void (int *, int *, int *, int *, int, int *)'
| |-ParmVarDecl 0x1670e804588 <col:18, col:28> col:28 invalid r 'int *'
| |-ParmVarDecl 0x1670e804608 <col:31, col:41> col:41 invalid a 'int *'
| |-ParmVarDecl 0x1670e804688 <col:44, col:54> col:54 invalid b 'int *'
| |-ParmVarDecl 0x1670e804708 <col:57, col:67> col:67 invalid l 'int *'
| |-ParmVarDecl 0x1670e804788 <col:70, col:74> col:74 n2 'int'
| `-ParmVarDecl 0x1670e804808 <line:670:18, col:28> col:28 invalid t 'int *'
|-FunctionDecl 0x1670e804d10 <line:671:1, line:672:42> line:671:10 invalid bn_add_part_words 'int (int *, const int *, const int *, int, int)'
| |-ParmVarDecl 0x1670e804a00 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x1670e804a80 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x1670e804b00 <col:60, col:76> col:76 invalid b 'const int *'
| |-ParmVarDecl 0x1670e804b80 <line:672:28, col:32> col:32 cl 'int'
| `-ParmVarDecl 0x1670e804c00 <col:36, col:40> col:40 dl 'int'
|-FunctionDecl 0x1670e8050a8 <line:673:1, line:674:42> line:673:10 invalid bn_sub_part_words 'int (int *, const int *, const int *, int, int)'
| |-ParmVarDecl 0x1670e804df0 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x1670e804e70 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x1670e804ef0 <col:60, col:76> col:76 invalid b 'const int *'
| |-ParmVarDecl 0x1670e804f70 <line:674:28, col:32> col:32 cl 'int'
| `-ParmVarDecl 0x1670e804ff0 <col:36, col:40> col:40 dl 'int'
|-FunctionDecl 0x1670e807560 <line:675:1, line:676:64> line:675:5 invalid bn_mul_mont 'int (int *, const int *, const int *, const int *, const int *, int)'
| |-ParmVarDecl 0x1670e805188 <col:17, col:27> col:27 invalid rp 'int *'
| |-ParmVarDecl 0x1670e805208 <col:31, col:47> col:47 invalid ap 'const int *'
| |-ParmVarDecl 0x1670e8072c0 <col:51, col:67> col:67 invalid bp 'const int *'
| |-ParmVarDecl 0x1670e807340 <line:676:17, col:33> col:33 invalid np 'const int *'
| |-ParmVarDecl 0x1670e8073c0 <col:37, col:53> col:53 invalid n0 'const int *'
| `-ParmVarDecl 0x1670e807440 <col:57, col:61> col:61 num 'int'
|-FunctionDecl 0x1670e807950 <line:678:1, line:680:38> line:678:9 invalid int_bn_mod_inverse 'int *(int *, const int *, const int *, int *, int *)'
| |-ParmVarDecl 0x1670e807648 <col:28, col:36> col:36 invalid in 'int *'
| |-ParmVarDecl 0x1670e8076c8 <line:679:28, col:42> col:42 invalid a 'const int *'
| |-ParmVarDecl 0x1670e807748 <col:45, col:59> col:59 invalid n 'const int *'
| |-ParmVarDecl 0x1670e8077c8 <col:62, col:70> col:70 invalid ctx 'int *'
| `-ParmVarDecl 0x1670e807848 <line:680:28, col:33> col:33 noinv 'int *'
|-FunctionDecl 0x1670e807d40 <line:682:1, line:683:75> line:682:5 invalid bn_probable_prime_dh 'int (int *, int, const int *, const int *, int *)'
| |-ParmVarDecl 0x1670e807a30 <col:26, col:34> col:34 invalid rnd 'int *'
| |-ParmVarDecl 0x1670e807ab0 <col:39, col:43> col:43 bits 'int'
| |-ParmVarDecl 0x1670e807b30 <line:683:26, col:40> col:40 invalid add 'const int *'
| |-ParmVarDecl 0x1670e807bb0 <col:45, col:59> col:59 invalid rem 'const int *'
| `-ParmVarDecl 0x1670e807c30 <col:64, col:72> col:72 invalid ctx 'int *'
|-FunctionDecl 0x1670e808010 <line:684:1, col:66> col:5 invalid bn_probable_prime_dh_retry 'int (int *, int, int *)'
| |-ParmVarDecl 0x1670e807e20 <col:32, col:40> col:40 invalid rnd 'int *'
| |-ParmVarDecl 0x1670e807ea0 <col:45, col:49> col:49 bits 'int'
| `-ParmVarDecl 0x1670e807f20 <col:55, col:63> col:63 invalid ctx 'int *'
|-FunctionDecl 0x1670e8052a0 <line:685:1, col:68> col:5 invalid bn_probable_prime_dh_coprime 'int (int *, int, int *)'
| |-ParmVarDecl 0x1670e8080e0 <col:34, col:42> col:42 invalid rnd 'int *'
| |-ParmVarDecl 0x1670e808160 <col:47, col:51> col:51 bits 'int'
| `-ParmVarDecl 0x1670e8081e0 <col:57, col:65> col:65 invalid ctx 'int *'
`-VarDecl 0x1670e805370 <line:687:1, col:20> col:20 invalid BIGNUM 'int' static
