TranslationUnitDecl 0x1faa2206dc8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1faa2207660 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1faa2207360 '__int128'
|-TypedefDecl 0x1faa22076d0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1faa2207380 'unsigned __int128'
|-TypedefDecl 0x1faa2207a08 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1faa22077c0 'struct __NSConstantString_tag'
|   `-Record 0x1faa2207728 '__NSConstantString_tag'
|-TypedefDecl 0x1faa2207a78 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1faa2206fa0 'unsigned long long'
|-TypedefDecl 0x1faa2207b10 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1faa2207ad0 'char *'
|   `-BuiltinType 0x1faa2206e60 'char'
|-TypedefDecl 0x1faa2207b80 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1faa2207ad0 'char *'
|   `-BuiltinType 0x1faa2206e60 'char'
|-TypedefDecl 0x1faa2207c40 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1faa2206fa0 'unsigned long long'
|-TypedefDecl 0x1faa2207cb0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1faa2207ad0 'char *'
|   `-BuiltinType 0x1faa2206e60 'char'
|-FunctionDecl 0x1faa3d02850 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1faa3d028f0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1faa3d02960 <col:21> Implicit
|-FunctionDecl 0x1faa3d029b8 prev 0x1faa3d02850 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1faa3d026e0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1faa3d02aa8 <col:21> Inherited Implicit
|-TypedefDecl 0x1faa3d02ae8 prev 0x1faa2207a78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1faa2206fa0 'unsigned long long'
|-TypedefDecl 0x1faa3d02b90 <line:503:1, col:16> col:16 rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1faa3d02b60 'size_t' sugar
|   |-Typedef 0x1faa3d02ae8 'size_t'
|   `-BuiltinType 0x1faa2206fa0 'unsigned long long'
|-TypedefDecl 0x1faa3d02c00 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1faa2206f00 'long long'
|-TypedefDecl 0x1faa3d02c70 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1faa2206f00 'long long'
|-TypedefDecl 0x1faa3d02ce0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1faa2206f40 'unsigned short'
|-TypedefDecl 0x1faa3d02d50 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x1faa2206f40 'unsigned short'
|-TypedefDecl 0x1faa3d02dc0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1faa2206f40 'unsigned short'
|-TypedefDecl 0x1faa3d02e30 <line:563:1, col:13> col:13 errno_t 'int'
| `-BuiltinType 0x1faa2206ec0 'int'
|-TypedefDecl 0x1faa3d02ea0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1faa2206ee0 'long'
|-TypedefDecl 0x1faa3d02f10 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1faa2206f00 'long long'
|-TypedefDecl 0x1faa3d02fa0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1faa3d02f70 '__time64_t' sugar
|   |-Typedef 0x1faa3d02f10 '__time64_t'
|   `-BuiltinType 0x1faa2206f00 'long long'
|-FunctionDecl 0x1faa3d03118 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1faa3d03338 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1faa3d39930 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1faa3d03478 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1faa3d034f0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1faa3d03568 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1faa3d035e8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1faa3d396d0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1faa3d39a10 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1faa3d39ad0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1faa3d39c40 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1faa3d39bf0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1faa3d39b90 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1faa3d39ab0 'struct threadlocaleinfostruct'
|       `-Record 0x1faa3d43770 'threadlocaleinfostruct'
|-TypedefDecl 0x1faa3d39d50 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1faa3d39d00 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1faa3d39ca0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1faa3d39b70 'struct threadmbcinfostruct'
|       `-Record 0x1faa3d39ad0 'threadmbcinfostruct'
|-RecordDecl 0x1faa3d39da8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1faa3d39e60 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1faa3d39f20 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1faa3d39fb0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1faa3d3a040 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1faa3d3a0f8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1faa3d3a0a0 'struct localeinfo_struct' sugar
|   `-RecordType 0x1faa3d39f00 'struct localeinfo_struct'
|     `-Record 0x1faa3d39e60 'localeinfo_struct'
|-TypedefDecl 0x1faa3d3a1d0 <line:2078:1, line:2082:21> col:21 _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1faa3d3a180 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1faa3d3a0a0 'struct localeinfo_struct' sugar
|     `-RecordType 0x1faa3d39f00 'struct localeinfo_struct'
|       `-Record 0x1faa3d39e60 'localeinfo_struct'
|-RecordDecl 0x1faa3d3a248 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1faa3d3a300 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1faa3d3a378 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1faa3d3a438 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1faa3d3a4d0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1faa3d3a540 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1faa3d3a5f8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1faa3d3a5a0 'struct localerefcount' sugar
|   `-RecordType 0x1faa3d3a2e0 'struct localerefcount'
|     `-Record 0x1faa3d3a248 'localerefcount'
|-RecordDecl 0x1faa3d43770 prev 0x1faa3d39a10 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1faa3d437f0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1faa3d43868 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1faa3d438d8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1faa3d43948 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1faa3d439b8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1faa3d43b78 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1faa3d43be8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1faa3d43c58 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1faa3d43cc8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1faa3d43d38 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1faa3d43da8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1faa3d43e00 parent 0x1faa2206dc8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1faa3d43f90 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1faa3d44000 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1faa3d44070 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1faa3d440e0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1faa3d44180 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1faa3d441f0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1faa3d44300 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1faa3d44438 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1faa3d444e8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1faa3d44490 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1faa3d39ab0 'struct threadlocaleinfostruct'
|     `-Record 0x1faa3d43770 'threadlocaleinfostruct'
|-FunctionDecl 0x1faa3d44860 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:35:9, col:112> col:22 _wassert 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
| |-ParmVarDecl 0x1faa3d44568 <col:38, col:54> col:54 _Message 'const wchar_t *'
| |-ParmVarDecl 0x1faa3d445e0 <col:71, col:86> col:86 _File 'const wchar_t *'
| `-ParmVarDecl 0x1faa3d44660 <col:98, col:107> col:107 _Line 'unsigned int'
|-FunctionDecl 0x1faa3d44bc0 <.//openssl//file_jk/before\crypto\bn/bn_lcl.h:220:1, line:221:37> line:220:10 invalid bn_mul_add_words 'int (int *, const int *, int, int)'
| |-ParmVarDecl 0x1faa3d44948 <col:27, col:37> col:37 invalid rp 'int *'
| |-ParmVarDecl 0x1faa3d449c8 <col:41, col:57> col:57 invalid ap 'const int *'
| |-ParmVarDecl 0x1faa3d44a48 <col:61, col:65> col:65 num 'int'
| `-ParmVarDecl 0x1faa3d44ac8 <line:221:27, col:36> col:36 invalid w 'int'
|-FunctionDecl 0x1faa3d44ec8 <line:222:1, col:76> col:10 invalid bn_mul_words 'int (int *, const int *, int, int)'
| |-ParmVarDecl 0x1faa3d44c98 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x1faa3d44d18 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x1faa3d44d98 <col:57, col:61> col:61 num 'int'
| `-ParmVarDecl 0x1faa3d44e18 <col:66, col:75> col:75 invalid w 'int'
|-FunctionDecl 0x1faa3d45188 <line:223:1, col:60> col:6 invalid bn_sqr_words 'void (int *, const int *, int)'
| |-ParmVarDecl 0x1faa3d44fa0 <col:19, col:29> col:29 invalid rp 'int *'
| |-ParmVarDecl 0x1faa3d45020 <col:33, col:49> col:49 invalid ap 'const int *'
| `-ParmVarDecl 0x1faa3d450a0 <col:53, col:57> col:57 num 'int'
|-FunctionDecl 0x1faa3d45440 <line:224:1, col:57> col:10 invalid bn_div_words 'int (int, int, int)'
| |-ParmVarDecl 0x1faa3d45258 <col:23, col:32> col:32 invalid h 'int'
| |-ParmVarDecl 0x1faa3d452d8 <col:35, col:44> col:44 invalid l 'int'
| `-ParmVarDecl 0x1faa3d45358 <col:47, col:56> col:56 invalid d 'int'
|-FunctionDecl 0x1faa3d4c848 <line:225:1, line:226:30> line:225:10 invalid bn_add_words 'int (int *, const int *, const int *, int)'
| |-ParmVarDecl 0x1faa3d45510 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x1faa3d45590 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x1faa3d45610 <col:57, col:73> col:73 invalid bp 'const int *'
| `-ParmVarDecl 0x1faa3d45690 <line:226:23, col:27> col:27 num 'int'
|-FunctionDecl 0x1faa3d4cb50 <line:227:1, line:228:30> line:227:10 invalid bn_sub_words 'int (int *, const int *, const int *, int)'
| |-ParmVarDecl 0x1faa3d4c920 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x1faa3d4c9a0 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x1faa3d4ca20 <col:57, col:73> col:73 invalid bp 'const int *'
| `-ParmVarDecl 0x1faa3d4caa0 <line:228:23, col:27> col:27 num 'int'
|-RecordDecl 0x1faa3d4cc10 <line:230:1, line:238:1> line:230:8 invalid struct bignum_st definition
| |-FieldDecl 0x1faa3d4cce8 <line:231:5, col:15> col:15 invalid d 'int *'
| |-FieldDecl 0x1faa3d4cd58 <line:233:5, col:9> col:9 top 'int'
| |-FieldDecl 0x1faa3d4cdc8 <line:235:5, col:9> col:9 dmax 'int'
| |-FieldDecl 0x1faa3d4ce38 <line:236:5, col:9> col:9 neg 'int'
| `-FieldDecl 0x1faa3d4cea8 <line:237:5, col:9> col:9 flags 'int'
|-RecordDecl 0x1faa3d4cf00 <line:241:1, line:252:1> line:241:8 invalid struct bn_mont_ctx_st definition
| |-FieldDecl 0x1faa3d4cfd8 <line:242:5, col:9> col:9 ri 'int'
| |-FieldDecl 0x1faa3d4d048 <line:243:5, col:12> col:12 invalid RR 'int'
| |-FieldDecl 0x1faa3d4d0b8 <line:245:5, col:12> col:12 invalid N 'int'
| |-FieldDecl 0x1faa3d4d128 <line:246:5, col:12> col:12 invalid Ni 'int'
| |-FieldDecl 0x1faa3d4d220 <line:248:5, <invalid sloc>> col:14 invalid n0 'int [2]'
| `-FieldDecl 0x1faa3d4d290 <line:251:5, col:9> col:9 flags 'int'
|-RecordDecl 0x1faa3d4d2e8 <line:258:1, line:264:1> line:258:8 invalid struct bn_recp_ctx_st definition
| |-FieldDecl 0x1faa3d4d3b8 <line:259:5, col:12> col:12 invalid N 'int'
| |-FieldDecl 0x1faa3d4d428 <line:260:5, col:12> col:12 invalid Nr 'int'
| |-FieldDecl 0x1faa3d4d498 <line:261:5, col:9> col:9 num_bits 'int'
| |-FieldDecl 0x1faa3d4d508 <line:262:5, col:9> col:9 shift 'int'
| `-FieldDecl 0x1faa3d4d578 <line:263:5, col:9> col:9 flags 'int'
|-RecordDecl 0x1faa3d4d5d0 <line:267:1, line:276:1> line:267:8 struct bn_gencb_st definition
| |-FieldDecl 0x1faa3d4d6a8 <line:268:5, col:18> col:18 ver 'unsigned int'
| |-FieldDecl 0x1faa3d4d718 <line:269:5, col:11> col:11 arg 'void *'
| |-RecordDecl 0x1faa3d4d770 <line:270:5, line:275:5> line:270:5 union definition
| | |-FieldDecl 0x1faa3d4dae0 <line:272:9, col:39> col:16 cb_1 'void (*)(int, int, void *)'
| | `-FieldDecl 0x1faa3d4ddd8 <line:274:9, col:42> col:15 cb_2 'int (*)(int, int, int *)'
| `-FieldDecl 0x1faa3d4de88 <line:270:5, line:275:7> col:7 cb 'union (anonymous union at .//openssl//file_jk/before\crypto\bn/bn_lcl.h:270:5)':'union bn_gencb_st::(anonymous at .//openssl//file_jk/before\crypto\bn/bn_lcl.h:270:5)'
|-FunctionDecl 0x1faa3d4e018 <line:649:1, col:40> col:6 invalid BN_RECP_CTX_init 'void (int *)'
| `-ParmVarDecl 0x1faa3d4df58 <col:23, col:36> col:36 invalid recp 'int *'
|-FunctionDecl 0x1faa3d4e168 <line:650:1, col:39> col:6 invalid BN_MONT_CTX_init 'void (int *)'
| `-ParmVarDecl 0x1faa3d4e0d8 <col:23, col:36> col:36 invalid ctx 'int *'
|-FunctionDecl 0x1faa3d4e2b8 <line:652:1, col:23> col:6 invalid bn_init 'void (int *)'
| `-ParmVarDecl 0x1faa3d4e228 <col:14, col:22> col:22 invalid a 'int *'
|-FunctionDecl 0x1faa3d4e678 <line:653:1, col:73> col:6 invalid bn_mul_normal 'void (int *, int *, int, int *, int)'
| |-ParmVarDecl 0x1faa3d4e378 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1faa3d4e3f8 <col:33, col:43> col:43 invalid a 'int *'
| |-ParmVarDecl 0x1faa3d4e478 <col:46, col:50> col:50 na 'int'
| |-ParmVarDecl 0x1faa3d4e4f8 <col:54, col:64> col:64 invalid b 'int *'
| `-ParmVarDecl 0x1faa3d4e578 <col:67, col:71> col:71 nb 'int'
|-FunctionDecl 0x1faa3d47918 <line:654:1, col:57> col:6 invalid bn_mul_comba8 'void (int *, int *, int *)'
| |-ParmVarDecl 0x1faa3d4e758 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1faa3d477b0 <col:33, col:43> col:43 invalid a 'int *'
| `-ParmVarDecl 0x1faa3d47830 <col:46, col:56> col:56 invalid b 'int *'
|-FunctionDecl 0x1faa3d47b88 <line:655:1, col:57> col:6 invalid bn_mul_comba4 'void (int *, int *, int *)'
| |-ParmVarDecl 0x1faa3d479e8 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1faa3d47a68 <col:33, col:43> col:43 invalid a 'int *'
| `-ParmVarDecl 0x1faa3d47ae8 <col:46, col:56> col:56 invalid b 'int *'
|-FunctionDecl 0x1faa3d47ec8 <line:656:1, col:72> col:6 invalid bn_sqr_normal 'void (int *, const int *, int, int *)'
| |-ParmVarDecl 0x1faa3d47c58 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1faa3d47cd8 <col:33, col:49> col:49 invalid a 'const int *'
| |-ParmVarDecl 0x1faa3d47d58 <col:52, col:56> col:56 n 'int'
| `-ParmVarDecl 0x1faa3d47dd8 <col:59, col:69> col:69 invalid tmp 'int *'
|-FunctionDecl 0x1faa3d480f8 <line:657:1, col:50> col:6 invalid bn_sqr_comba8 'void (int *, const int *)'
| |-ParmVarDecl 0x1faa3d47fa0 <col:20, col:30> col:30 invalid r 'int *'
| `-ParmVarDecl 0x1faa3d48020 <col:33, col:49> col:49 invalid a 'const int *'
|-FunctionDecl 0x1faa3d482d8 <line:658:1, col:50> col:6 invalid bn_sqr_comba4 'void (int *, const int *)'
| |-ParmVarDecl 0x1faa3d481c0 <col:20, col:30> col:30 invalid r 'int *'
| `-ParmVarDecl 0x1faa3d48240 <col:33, col:49> col:49 invalid a 'const int *'
|-FunctionDecl 0x1faa3d48590 <line:659:1, col:61> col:5 invalid bn_cmp_words 'int (const int *, const int *, int)'
| |-ParmVarDecl 0x1faa3d483a0 <col:18, col:34> col:34 invalid a 'const int *'
| |-ParmVarDecl 0x1faa3d48420 <col:37, col:53> col:53 invalid b 'const int *'
| `-ParmVarDecl 0x1faa3d484a0 <col:56, col:60> col:60 n 'int'
|-FunctionDecl 0x1faa3d4f9b0 <line:660:1, col:75> col:5 invalid bn_cmp_part_words 'int (const int *, const int *, int, int)'
| |-ParmVarDecl 0x1faa3d48660 <col:23, col:39> col:39 invalid a 'const int *'
| |-ParmVarDecl 0x1faa3d486e0 <col:42, col:58> col:58 invalid b 'const int *'
| |-ParmVarDecl 0x1faa3d4f830 <col:61, col:65> col:65 cl 'int'
| `-ParmVarDecl 0x1faa3d4f8b0 <col:69, col:73> col:73 dl 'int'
|-FunctionDecl 0x1faa3d4fea8 <line:661:1, line:662:52> line:661:6 invalid bn_mul_recursive 'void (int *, int *, int *, int, int, int, int *)'
| |-ParmVarDecl 0x1faa3d4fa88 <col:23, col:33> col:33 invalid r 'int *'
| |-ParmVarDecl 0x1faa3d4fb08 <col:36, col:46> col:46 invalid a 'int *'
| |-ParmVarDecl 0x1faa3d4fb88 <col:49, col:59> col:59 invalid b 'int *'
| |-ParmVarDecl 0x1faa3d4fc08 <col:62, col:66> col:66 n2 'int'
| |-ParmVarDecl 0x1faa3d4fc88 <line:662:23, col:27> col:27 dna 'int'
| |-ParmVarDecl 0x1faa3d4fd08 <col:32, col:36> col:36 dnb 'int'
| `-ParmVarDecl 0x1faa3d4fd88 <col:41, col:51> col:51 invalid t 'int *'
|-FunctionDecl 0x1faa3d50358 <line:663:1, line:664:64> line:663:6 invalid bn_mul_part_recursive 'void (int *, int *, int *, int, int, int, int *)'
| |-ParmVarDecl 0x1faa3d4ff98 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x1faa3d50018 <col:41, col:51> col:51 invalid a 'int *'
| |-ParmVarDecl 0x1faa3d50098 <col:54, col:64> col:64 invalid b 'int *'
| |-ParmVarDecl 0x1faa3d50118 <line:664:28, col:32> col:32 n 'int'
| |-ParmVarDecl 0x1faa3d50198 <col:35, col:39> col:39 tna 'int'
| |-ParmVarDecl 0x1faa3d50218 <col:44, col:48> col:48 tnb 'int'
| `-ParmVarDecl 0x1faa3d50298 <col:53, col:63> col:63 invalid t 'int *'
|-FunctionDecl 0x1faa3d50670 <line:665:1, col:74> col:6 invalid bn_sqr_recursive 'void (int *, const int *, int, int *)'
| |-ParmVarDecl 0x1faa3d50448 <col:23, col:33> col:33 invalid r 'int *'
| |-ParmVarDecl 0x1faa3d504c8 <col:36, col:52> col:52 invalid a 'const int *'
| |-ParmVarDecl 0x1faa3d50548 <col:55, col:59> col:59 n2 'int'
| `-ParmVarDecl 0x1faa3d505c8 <col:63, col:73> col:73 invalid t 'int *'
|-FunctionDecl 0x1faa3d509c8 <line:666:1, col:68> col:6 invalid bn_mul_low_normal 'void (int *, int *, int *, int)'
| |-ParmVarDecl 0x1faa3d50748 <col:24, col:34> col:34 invalid r 'int *'
| |-ParmVarDecl 0x1faa3d507c8 <col:37, col:47> col:47 invalid a 'int *'
| |-ParmVarDecl 0x1faa3d50858 <col:50, col:60> col:60 invalid b 'int *'
| `-ParmVarDecl 0x1faa3d508d8 <col:63, col:67> col:67 n 'int'
|-FunctionDecl 0x1faa3d50da8 <line:667:1, line:668:38> line:667:6 invalid bn_mul_low_recursive 'void (int *, int *, int *, int, int *)'
| |-ParmVarDecl 0x1faa3d50aa0 <col:27, col:37> col:37 invalid r 'int *'
| |-ParmVarDecl 0x1faa3d50b20 <col:40, col:50> col:50 invalid a 'int *'
| |-ParmVarDecl 0x1faa3d50ba0 <col:53, col:63> col:63 invalid b 'int *'
| |-ParmVarDecl 0x1faa3d50c20 <col:66, col:70> col:70 n2 'int'
| `-ParmVarDecl 0x1faa3d50ca0 <line:668:27, col:37> col:37 invalid t 'int *'
|-FunctionDecl 0x1faa3d51218 <line:669:1, line:670:29> line:669:6 invalid bn_mul_high 'void (int *, int *, int *, int *, int, int *)'
| |-ParmVarDecl 0x1faa3d50e88 <col:18, col:28> col:28 invalid r 'int *'
| |-ParmVarDecl 0x1faa3d50f08 <col:31, col:41> col:41 invalid a 'int *'
| |-ParmVarDecl 0x1faa3d50f88 <col:44, col:54> col:54 invalid b 'int *'
| |-ParmVarDecl 0x1faa3d51008 <col:57, col:67> col:67 invalid l 'int *'
| |-ParmVarDecl 0x1faa3d51088 <col:70, col:74> col:74 n2 'int'
| `-ParmVarDecl 0x1faa3d51108 <line:670:18, col:28> col:28 invalid t 'int *'
|-FunctionDecl 0x1faa3d51610 <line:671:1, line:672:42> line:671:10 invalid bn_add_part_words 'int (int *, const int *, const int *, int, int)'
| |-ParmVarDecl 0x1faa3d51300 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x1faa3d51380 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x1faa3d51400 <col:60, col:76> col:76 invalid b 'const int *'
| |-ParmVarDecl 0x1faa3d51480 <line:672:28, col:32> col:32 cl 'int'
| `-ParmVarDecl 0x1faa3d51500 <col:36, col:40> col:40 dl 'int'
|-FunctionDecl 0x1faa3d51a08 <line:673:1, line:674:42> line:673:10 invalid bn_sub_part_words 'int (int *, const int *, const int *, int, int)'
| |-ParmVarDecl 0x1faa3d516f0 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x1faa3d51770 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x1faa3d51850 <col:60, col:76> col:76 invalid b 'const int *'
| |-ParmVarDecl 0x1faa3d518d0 <line:674:28, col:32> col:32 cl 'int'
| `-ParmVarDecl 0x1faa3d51950 <col:36, col:40> col:40 dl 'int'
|-FunctionDecl 0x1faa3d51e80 <line:675:1, line:676:64> line:675:5 invalid bn_mul_mont 'int (int *, const int *, const int *, const int *, const int *, int)'
| |-ParmVarDecl 0x1faa3d51ae8 <col:17, col:27> col:27 invalid rp 'int *'
| |-ParmVarDecl 0x1faa3d51b68 <col:31, col:47> col:47 invalid ap 'const int *'
| |-ParmVarDecl 0x1faa3d51be8 <col:51, col:67> col:67 invalid bp 'const int *'
| |-ParmVarDecl 0x1faa3d51c68 <line:676:17, col:33> col:33 invalid np 'const int *'
| |-ParmVarDecl 0x1faa3d51ce8 <col:37, col:53> col:53 invalid n0 'const int *'
| `-ParmVarDecl 0x1faa3d51d68 <col:57, col:61> col:61 num 'int'
|-FunctionDecl 0x1faa3d52270 <line:678:1, line:680:38> line:678:9 invalid int_bn_mod_inverse 'int *(int *, const int *, const int *, int *, int *)'
| |-ParmVarDecl 0x1faa3d51f68 <col:28, col:36> col:36 invalid in 'int *'
| |-ParmVarDecl 0x1faa3d51fe8 <line:679:28, col:42> col:42 invalid a 'const int *'
| |-ParmVarDecl 0x1faa3d52068 <col:45, col:59> col:59 invalid n 'const int *'
| |-ParmVarDecl 0x1faa3d520e8 <col:62, col:70> col:70 invalid ctx 'int *'
| `-ParmVarDecl 0x1faa3d52168 <line:680:28, col:33> col:33 noinv 'int *'
|-FunctionDecl 0x1faa3d52660 <line:682:1, line:683:75> line:682:5 invalid bn_probable_prime_dh 'int (int *, int, const int *, const int *, int *)'
| |-ParmVarDecl 0x1faa3d52350 <col:26, col:34> col:34 invalid rnd 'int *'
| |-ParmVarDecl 0x1faa3d523d0 <col:39, col:43> col:43 bits 'int'
| |-ParmVarDecl 0x1faa3d52450 <line:683:26, col:40> col:40 invalid add 'const int *'
| |-ParmVarDecl 0x1faa3d524d0 <col:45, col:59> col:59 invalid rem 'const int *'
| `-ParmVarDecl 0x1faa3d52550 <col:64, col:72> col:72 invalid ctx 'int *'
|-FunctionDecl 0x1faa3d4a8d0 <line:684:1, col:66> col:5 invalid bn_probable_prime_dh_retry 'int (int *, int, int *)'
| |-ParmVarDecl 0x1faa3d52740 <col:32, col:40> col:40 invalid rnd 'int *'
| |-ParmVarDecl 0x1faa3d527c0 <col:45, col:49> col:49 bits 'int'
| `-ParmVarDecl 0x1faa3d4a7e0 <col:55, col:63> col:63 invalid ctx 'int *'
|-FunctionDecl 0x1faa3d4ab48 <line:685:1, col:68> col:5 invalid bn_probable_prime_dh_coprime 'int (int *, int, int *)'
| |-ParmVarDecl 0x1faa3d4a9a0 <col:34, col:42> col:42 invalid rnd 'int *'
| |-ParmVarDecl 0x1faa3d4aa20 <col:47, col:51> col:51 bits 'int'
| `-ParmVarDecl 0x1faa3d4aaa0 <col:57, col:65> col:65 invalid ctx 'int *'
`-VarDecl 0x1faa3d4ac18 <line:687:1, col:20> col:20 invalid BIGNUM 'int' static
