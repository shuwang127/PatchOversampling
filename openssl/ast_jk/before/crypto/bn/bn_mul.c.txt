TranslationUnitDecl 0x26503333f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x26503334820 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x26503334520 '__int128'
|-TypedefDecl 0x26503334890 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x26503334540 'unsigned __int128'
|-TypedefDecl 0x26503334bc8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x26503334980 'struct __NSConstantString_tag'
|   `-Record 0x265033348e8 '__NSConstantString_tag'
|-TypedefDecl 0x26503334c38 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x26503334160 'unsigned long long'
|-TypedefDecl 0x26503334cd0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x26503334c90 'char *'
|   `-BuiltinType 0x26503334020 'char'
|-TypedefDecl 0x26503334d40 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x26503334c90 'char *'
|   `-BuiltinType 0x26503334020 'char'
|-TypedefDecl 0x26503334e00 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x26503334160 'unsigned long long'
|-TypedefDecl 0x26503334e70 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x26503334c90 'char *'
|   `-BuiltinType 0x26503334020 'char'
|-FunctionDecl 0x26504e0e940 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x26504e0e9e0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x26504e0ea50 <col:21> Implicit
|-FunctionDecl 0x26504e0eaa8 prev 0x26504e0e940 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x26504e0e7d0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x26504e0eb98 <col:21> Inherited Implicit
|-TypedefDecl 0x26504e0ebd8 prev 0x26503334c38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x26503334160 'unsigned long long'
|-TypedefDecl 0x26504e0ec80 <line:503:1, col:16> col:16 rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x26504e0ec50 'size_t' sugar
|   |-Typedef 0x26504e0ebd8 'size_t'
|   `-BuiltinType 0x26503334160 'unsigned long long'
|-TypedefDecl 0x26504e0ecf0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x265033340c0 'long long'
|-TypedefDecl 0x26504e0ed60 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x265033340c0 'long long'
|-TypedefDecl 0x26504e0edd0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x26503334100 'unsigned short'
|-TypedefDecl 0x26504e0ee40 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x26503334100 'unsigned short'
|-TypedefDecl 0x26504e0eeb0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x26503334100 'unsigned short'
|-TypedefDecl 0x26504e0ef20 <line:563:1, col:13> col:13 errno_t 'int'
| `-BuiltinType 0x26503334080 'int'
|-TypedefDecl 0x26504e0ef90 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x265033340a0 'long'
|-TypedefDecl 0x26504e0f000 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x265033340c0 'long long'
|-TypedefDecl 0x26504e0f090 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x26504e0f060 '__time64_t' sugar
|   |-Typedef 0x26504e0f000 '__time64_t'
|   `-BuiltinType 0x265033340c0 'long long'
|-FunctionDecl 0x26504e0f208 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x26504e0f428 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x26504e49920 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x26504e0f568 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x26504e0f5e0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x26504e0f658 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x26504e0f6d8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x26504e496c0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x26504e49a00 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x26504e49ac0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x26504e49c30 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x26504e49be0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x26504e49b80 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x26504e49aa0 'struct threadlocaleinfostruct'
|       `-Record 0x26504e54770 'threadlocaleinfostruct'
|-TypedefDecl 0x26504e49d40 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x26504e49cf0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x26504e49c90 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x26504e49b60 'struct threadmbcinfostruct'
|       `-Record 0x26504e49ac0 'threadmbcinfostruct'
|-RecordDecl 0x26504e49d98 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x26504e49e50 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x26504e49f10 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x26504e49fa0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x26504e4a030 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x26504e4a0e8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x26504e4a090 'struct localeinfo_struct' sugar
|   `-RecordType 0x26504e49ef0 'struct localeinfo_struct'
|     `-Record 0x26504e49e50 'localeinfo_struct'
|-TypedefDecl 0x26504e4a1c0 <line:2078:1, line:2082:21> col:21 _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x26504e4a170 'struct localeinfo_struct *'
|   `-ElaboratedType 0x26504e4a090 'struct localeinfo_struct' sugar
|     `-RecordType 0x26504e49ef0 'struct localeinfo_struct'
|       `-Record 0x26504e49e50 'localeinfo_struct'
|-RecordDecl 0x26504e4a238 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x26504e4a2f0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x26504e4a368 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x26504e4a428 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x26504e4a4c0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x26504e4a530 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x26504e4a5e8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x26504e4a590 'struct localerefcount' sugar
|   `-RecordType 0x26504e4a2d0 'struct localerefcount'
|     `-Record 0x26504e4a238 'localerefcount'
|-RecordDecl 0x26504e54770 prev 0x26504e49a00 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x26504e547f0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x26504e54868 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x26504e548d8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x26504e54948 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x26504e549b8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x26504e54b78 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x26504e54be8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x26504e54c58 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x26504e54cc8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x26504e54d38 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x26504e54da8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x26504e54e00 parent 0x26503333f88 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x26504e54f90 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x26504e55000 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x26504e55070 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x26504e550e0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x26504e55180 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x26504e551f0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x26504e55300 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x26504e55438 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x26504e554e8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x26504e55490 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x26504e49aa0 'struct threadlocaleinfostruct'
|     `-Record 0x26504e54770 'threadlocaleinfostruct'
|-FunctionDecl 0x26504e53840 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:35:9, col:112> col:22 _wassert 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
| |-ParmVarDecl 0x26504e55568 <col:38, col:54> col:54 _Message 'const wchar_t *'
| |-ParmVarDecl 0x26504e555e0 <col:71, col:86> col:86 _File 'const wchar_t *'
| `-ParmVarDecl 0x26504e55660 <col:98, col:107> col:107 _Line 'unsigned int'
|-FunctionDecl 0x26504e53ba0 <.//openssl//file_jk/before\crypto\bn/bn_lcl.h:220:1, line:221:37> line:220:10 invalid bn_mul_add_words 'int (int *, const int *, int, int)'
| |-ParmVarDecl 0x26504e53928 <col:27, col:37> col:37 invalid rp 'int *'
| |-ParmVarDecl 0x26504e539a8 <col:41, col:57> col:57 invalid ap 'const int *'
| |-ParmVarDecl 0x26504e53a28 <col:61, col:65> col:65 num 'int'
| `-ParmVarDecl 0x26504e53aa8 <line:221:27, col:36> col:36 invalid w 'int'
|-FunctionDecl 0x26504e53ea8 <line:222:1, col:76> col:10 invalid bn_mul_words 'int (int *, const int *, int, int)'
| |-ParmVarDecl 0x26504e53c78 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x26504e53cf8 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x26504e53d78 <col:57, col:61> col:61 num 'int'
| `-ParmVarDecl 0x26504e53df8 <col:66, col:75> col:75 invalid w 'int'
|-FunctionDecl 0x26504e54168 <line:223:1, col:60> col:6 invalid bn_sqr_words 'void (int *, const int *, int)'
| |-ParmVarDecl 0x26504e53f80 <col:19, col:29> col:29 invalid rp 'int *'
| |-ParmVarDecl 0x26504e54000 <col:33, col:49> col:49 invalid ap 'const int *'
| `-ParmVarDecl 0x26504e54080 <col:53, col:57> col:57 num 'int'
|-FunctionDecl 0x26504e54420 <line:224:1, col:57> col:10 invalid bn_div_words 'int (int, int, int)'
| |-ParmVarDecl 0x26504e54238 <col:23, col:32> col:32 invalid h 'int'
| |-ParmVarDecl 0x26504e542b8 <col:35, col:44> col:44 invalid l 'int'
| `-ParmVarDecl 0x26504e54338 <col:47, col:56> col:56 invalid d 'int'
|-FunctionDecl 0x26504e587f8 <line:225:1, line:226:30> line:225:10 invalid bn_add_words 'int (int *, const int *, const int *, int)'
| |-ParmVarDecl 0x26504e544f0 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x26504e54570 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x26504e545f0 <col:57, col:73> col:73 invalid bp 'const int *'
| `-ParmVarDecl 0x26504e54670 <line:226:23, col:27> col:27 num 'int'
|-FunctionDecl 0x26504e58b00 <line:227:1, line:228:30> line:227:10 invalid bn_sub_words 'int (int *, const int *, const int *, int)'
| |-ParmVarDecl 0x26504e588d0 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x26504e58950 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x26504e589d0 <col:57, col:73> col:73 invalid bp 'const int *'
| `-ParmVarDecl 0x26504e58a50 <line:228:23, col:27> col:27 num 'int'
|-RecordDecl 0x26504e58bc0 <line:230:1, line:238:1> line:230:8 invalid struct bignum_st definition
| |-FieldDecl 0x26504e58c98 <line:231:5, col:15> col:15 invalid d 'int *'
| |-FieldDecl 0x26504e58d08 <line:233:5, col:9> col:9 top 'int'
| |-FieldDecl 0x26504e58d78 <line:235:5, col:9> col:9 dmax 'int'
| |-FieldDecl 0x26504e58de8 <line:236:5, col:9> col:9 neg 'int'
| `-FieldDecl 0x26504e58e58 <line:237:5, col:9> col:9 flags 'int'
|-RecordDecl 0x26504e58eb0 <line:241:1, line:252:1> line:241:8 invalid struct bn_mont_ctx_st definition
| |-FieldDecl 0x26504e58f88 <line:242:5, col:9> col:9 ri 'int'
| |-FieldDecl 0x26504e58ff8 <line:243:5, col:12> col:12 invalid RR 'int'
| |-FieldDecl 0x26504e59068 <line:245:5, col:12> col:12 invalid N 'int'
| |-FieldDecl 0x26504e590d8 <line:246:5, col:12> col:12 invalid Ni 'int'
| |-FieldDecl 0x26504e591d0 <line:248:5, <invalid sloc>> col:14 invalid n0 'int [2]'
| `-FieldDecl 0x26504e59240 <line:251:5, col:9> col:9 flags 'int'
|-RecordDecl 0x26504e59298 <line:258:1, line:264:1> line:258:8 invalid struct bn_recp_ctx_st definition
| |-FieldDecl 0x26504e59368 <line:259:5, col:12> col:12 invalid N 'int'
| |-FieldDecl 0x26504e593d8 <line:260:5, col:12> col:12 invalid Nr 'int'
| |-FieldDecl 0x26504e59448 <line:261:5, col:9> col:9 num_bits 'int'
| |-FieldDecl 0x26504e594b8 <line:262:5, col:9> col:9 shift 'int'
| `-FieldDecl 0x26504e59528 <line:263:5, col:9> col:9 flags 'int'
|-RecordDecl 0x26504e59580 <line:267:1, line:276:1> line:267:8 struct bn_gencb_st definition
| |-FieldDecl 0x26504e59658 <line:268:5, col:18> col:18 ver 'unsigned int'
| |-FieldDecl 0x26504e596c8 <line:269:5, col:11> col:11 arg 'void *'
| |-RecordDecl 0x26504e59720 <line:270:5, line:275:5> line:270:5 union definition
| | |-FieldDecl 0x26504e51a10 <line:272:9, col:39> col:16 cb_1 'void (*)(int, int, void *)'
| | `-FieldDecl 0x26504e51d08 <line:274:9, col:42> col:15 cb_2 'int (*)(int, int, int *)'
| `-FieldDecl 0x26504e51db8 <line:270:5, line:275:7> col:7 cb 'union (anonymous union at .//openssl//file_jk/before\crypto\bn/bn_lcl.h:270:5)':'union bn_gencb_st::(anonymous at .//openssl//file_jk/before\crypto\bn/bn_lcl.h:270:5)'
|-FunctionDecl 0x26504e51f48 <line:649:1, col:40> col:6 invalid BN_RECP_CTX_init 'void (int *)'
| `-ParmVarDecl 0x26504e51e88 <col:23, col:36> col:36 invalid recp 'int *'
|-FunctionDecl 0x26504e52098 <line:650:1, col:39> col:6 invalid BN_MONT_CTX_init 'void (int *)'
| `-ParmVarDecl 0x26504e52008 <col:23, col:36> col:36 invalid ctx 'int *'
|-FunctionDecl 0x26504e521e8 <line:652:1, col:23> col:6 invalid bn_init 'void (int *)'
| `-ParmVarDecl 0x26504e52158 <col:14, col:22> col:22 invalid a 'int *'
|-FunctionDecl 0x26504e525a8 <line:653:1, col:73> col:6 invalid bn_mul_normal 'void (int *, int *, int, int *, int)'
| |-ParmVarDecl 0x26504e522a8 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x26504e52328 <col:33, col:43> col:43 invalid a 'int *'
| |-ParmVarDecl 0x26504e523a8 <col:46, col:50> col:50 na 'int'
| |-ParmVarDecl 0x26504e52428 <col:54, col:64> col:64 invalid b 'int *'
| `-ParmVarDecl 0x26504e524a8 <col:67, col:71> col:71 nb 'int'
|-FunctionDecl 0x26504e5d968 <line:654:1, col:57> col:6 invalid bn_mul_comba8 'void (int *, int *, int *)'
| |-ParmVarDecl 0x26504e52688 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x26504e5d800 <col:33, col:43> col:43 invalid a 'int *'
| `-ParmVarDecl 0x26504e5d880 <col:46, col:56> col:56 invalid b 'int *'
|-FunctionDecl 0x26504e5dbd8 <line:655:1, col:57> col:6 invalid bn_mul_comba4 'void (int *, int *, int *)'
| |-ParmVarDecl 0x26504e5da38 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x26504e5dab8 <col:33, col:43> col:43 invalid a 'int *'
| `-ParmVarDecl 0x26504e5db38 <col:46, col:56> col:56 invalid b 'int *'
|-FunctionDecl 0x26504e5df18 <line:656:1, col:72> col:6 invalid bn_sqr_normal 'void (int *, const int *, int, int *)'
| |-ParmVarDecl 0x26504e5dca8 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x26504e5dd28 <col:33, col:49> col:49 invalid a 'const int *'
| |-ParmVarDecl 0x26504e5dda8 <col:52, col:56> col:56 n 'int'
| `-ParmVarDecl 0x26504e5de28 <col:59, col:69> col:69 invalid tmp 'int *'
|-FunctionDecl 0x26504e5e148 <line:657:1, col:50> col:6 invalid bn_sqr_comba8 'void (int *, const int *)'
| |-ParmVarDecl 0x26504e5dff0 <col:20, col:30> col:30 invalid r 'int *'
| `-ParmVarDecl 0x26504e5e070 <col:33, col:49> col:49 invalid a 'const int *'
|-FunctionDecl 0x26504e5e328 <line:658:1, col:50> col:6 invalid bn_sqr_comba4 'void (int *, const int *)'
| |-ParmVarDecl 0x26504e5e210 <col:20, col:30> col:30 invalid r 'int *'
| `-ParmVarDecl 0x26504e5e290 <col:33, col:49> col:49 invalid a 'const int *'
|-FunctionDecl 0x26504e5e5e0 <line:659:1, col:61> col:5 invalid bn_cmp_words 'int (const int *, const int *, int)'
| |-ParmVarDecl 0x26504e5e3f0 <col:18, col:34> col:34 invalid a 'const int *'
| |-ParmVarDecl 0x26504e5e470 <col:37, col:53> col:53 invalid b 'const int *'
| `-ParmVarDecl 0x26504e5e4f0 <col:56, col:60> col:60 n 'int'
|-FunctionDecl 0x26504e5f9a0 <line:660:1, col:75> col:5 invalid bn_cmp_part_words 'int (const int *, const int *, int, int)'
| |-ParmVarDecl 0x26504e5e6b0 <col:23, col:39> col:39 invalid a 'const int *'
| |-ParmVarDecl 0x26504e5e730 <col:42, col:58> col:58 invalid b 'const int *'
| |-ParmVarDecl 0x26504e5f820 <col:61, col:65> col:65 cl 'int'
| `-ParmVarDecl 0x26504e5f8a0 <col:69, col:73> col:73 dl 'int'
|-FunctionDecl 0x26504e5fe98 <line:661:1, line:662:52> line:661:6 invalid bn_mul_recursive 'void (int *, int *, int *, int, int, int, int *)'
| |-ParmVarDecl 0x26504e5fa78 <col:23, col:33> col:33 invalid r 'int *'
| |-ParmVarDecl 0x26504e5faf8 <col:36, col:46> col:46 invalid a 'int *'
| |-ParmVarDecl 0x26504e5fb78 <col:49, col:59> col:59 invalid b 'int *'
| |-ParmVarDecl 0x26504e5fbf8 <col:62, col:66> col:66 n2 'int'
| |-ParmVarDecl 0x26504e5fc78 <line:662:23, col:27> col:27 dna 'int'
| |-ParmVarDecl 0x26504e5fcf8 <col:32, col:36> col:36 dnb 'int'
| `-ParmVarDecl 0x26504e5fd78 <col:41, col:51> col:51 invalid t 'int *'
|-FunctionDecl 0x26504e60348 <line:663:1, line:664:64> line:663:6 invalid bn_mul_part_recursive 'void (int *, int *, int *, int, int, int, int *)'
| |-ParmVarDecl 0x26504e5ff88 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x26504e60008 <col:41, col:51> col:51 invalid a 'int *'
| |-ParmVarDecl 0x26504e60088 <col:54, col:64> col:64 invalid b 'int *'
| |-ParmVarDecl 0x26504e60108 <line:664:28, col:32> col:32 n 'int'
| |-ParmVarDecl 0x26504e60188 <col:35, col:39> col:39 tna 'int'
| |-ParmVarDecl 0x26504e60208 <col:44, col:48> col:48 tnb 'int'
| `-ParmVarDecl 0x26504e60288 <col:53, col:63> col:63 invalid t 'int *'
|-FunctionDecl 0x26504e60660 <line:665:1, col:74> col:6 invalid bn_sqr_recursive 'void (int *, const int *, int, int *)'
| |-ParmVarDecl 0x26504e60438 <col:23, col:33> col:33 invalid r 'int *'
| |-ParmVarDecl 0x26504e604b8 <col:36, col:52> col:52 invalid a 'const int *'
| |-ParmVarDecl 0x26504e60538 <col:55, col:59> col:59 n2 'int'
| `-ParmVarDecl 0x26504e605b8 <col:63, col:73> col:73 invalid t 'int *'
|-FunctionDecl 0x26504e59948 <line:666:1, col:68> col:6 invalid bn_mul_low_normal 'void (int *, int *, int *, int)'
| |-ParmVarDecl 0x26504e60738 <col:24, col:34> col:34 invalid r 'int *'
| |-ParmVarDecl 0x26504e607b8 <col:37, col:47> col:47 invalid a 'int *'
| |-ParmVarDecl 0x26504e597d8 <col:50, col:60> col:60 invalid b 'int *'
| `-ParmVarDecl 0x26504e59858 <col:63, col:67> col:67 n 'int'
|-FunctionDecl 0x26504e59d28 <line:667:1, line:668:38> line:667:6 invalid bn_mul_low_recursive 'void (int *, int *, int *, int, int *)'
| |-ParmVarDecl 0x26504e59a20 <col:27, col:37> col:37 invalid r 'int *'
| |-ParmVarDecl 0x26504e59aa0 <col:40, col:50> col:50 invalid a 'int *'
| |-ParmVarDecl 0x26504e59b20 <col:53, col:63> col:63 invalid b 'int *'
| |-ParmVarDecl 0x26504e59ba0 <col:66, col:70> col:70 n2 'int'
| `-ParmVarDecl 0x26504e59c20 <line:668:27, col:37> col:37 invalid t 'int *'
|-FunctionDecl 0x26504e5a198 <line:669:1, line:670:29> line:669:6 invalid bn_mul_high 'void (int *, int *, int *, int *, int, int *)'
| |-ParmVarDecl 0x26504e59e08 <col:18, col:28> col:28 invalid r 'int *'
| |-ParmVarDecl 0x26504e59e88 <col:31, col:41> col:41 invalid a 'int *'
| |-ParmVarDecl 0x26504e59f08 <col:44, col:54> col:54 invalid b 'int *'
| |-ParmVarDecl 0x26504e59f88 <col:57, col:67> col:67 invalid l 'int *'
| |-ParmVarDecl 0x26504e5a008 <col:70, col:74> col:74 n2 'int'
| `-ParmVarDecl 0x26504e5a088 <line:670:18, col:28> col:28 invalid t 'int *'
|-FunctionDecl 0x26504e5a590 <line:671:1, line:672:42> line:671:10 invalid bn_add_part_words 'int (int *, const int *, const int *, int, int)'
| |-ParmVarDecl 0x26504e5a280 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x26504e5a300 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x26504e5a380 <col:60, col:76> col:76 invalid b 'const int *'
| |-ParmVarDecl 0x26504e5a400 <line:672:28, col:32> col:32 cl 'int'
| `-ParmVarDecl 0x26504e5a480 <col:36, col:40> col:40 dl 'int'
|-FunctionDecl 0x26504e5a988 <line:673:1, line:674:42> line:673:10 invalid bn_sub_part_words 'int (int *, const int *, const int *, int, int)'
| |-ParmVarDecl 0x26504e5a670 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x26504e5a6f0 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x26504e5a7d0 <col:60, col:76> col:76 invalid b 'const int *'
| |-ParmVarDecl 0x26504e5a850 <line:674:28, col:32> col:32 cl 'int'
| `-ParmVarDecl 0x26504e5a8d0 <col:36, col:40> col:40 dl 'int'
|-FunctionDecl 0x26504e5ae00 <line:675:1, line:676:64> line:675:5 invalid bn_mul_mont 'int (int *, const int *, const int *, const int *, const int *, int)'
| |-ParmVarDecl 0x26504e5aa68 <col:17, col:27> col:27 invalid rp 'int *'
| |-ParmVarDecl 0x26504e5aae8 <col:31, col:47> col:47 invalid ap 'const int *'
| |-ParmVarDecl 0x26504e5ab68 <col:51, col:67> col:67 invalid bp 'const int *'
| |-ParmVarDecl 0x26504e5abe8 <line:676:17, col:33> col:33 invalid np 'const int *'
| |-ParmVarDecl 0x26504e5ac68 <col:37, col:53> col:53 invalid n0 'const int *'
| `-ParmVarDecl 0x26504e5ace8 <col:57, col:61> col:61 num 'int'
|-FunctionDecl 0x26504e5b1f0 <line:678:1, line:680:38> line:678:9 invalid int_bn_mod_inverse 'int *(int *, const int *, const int *, int *, int *)'
| |-ParmVarDecl 0x26504e5aee8 <col:28, col:36> col:36 invalid in 'int *'
| |-ParmVarDecl 0x26504e5af68 <line:679:28, col:42> col:42 invalid a 'const int *'
| |-ParmVarDecl 0x26504e5afe8 <col:45, col:59> col:59 invalid n 'const int *'
| |-ParmVarDecl 0x26504e5b068 <col:62, col:70> col:70 invalid ctx 'int *'
| `-ParmVarDecl 0x26504e5b0e8 <line:680:28, col:33> col:33 noinv 'int *'
|-FunctionDecl 0x26504e5b5e0 <line:682:1, line:683:75> line:682:5 invalid bn_probable_prime_dh 'int (int *, int, const int *, const int *, int *)'
| |-ParmVarDecl 0x26504e5b2d0 <col:26, col:34> col:34 invalid rnd 'int *'
| |-ParmVarDecl 0x26504e5b350 <col:39, col:43> col:43 bits 'int'
| |-ParmVarDecl 0x26504e5b3d0 <line:683:26, col:40> col:40 invalid add 'const int *'
| |-ParmVarDecl 0x26504e5b450 <col:45, col:59> col:59 invalid rem 'const int *'
| `-ParmVarDecl 0x26504e5b4d0 <col:64, col:72> col:72 invalid ctx 'int *'
|-FunctionDecl 0x26504e5c8e0 <line:684:1, col:66> col:5 invalid bn_probable_prime_dh_retry 'int (int *, int, int *)'
| |-ParmVarDecl 0x26504e5b6c0 <col:32, col:40> col:40 invalid rnd 'int *'
| |-ParmVarDecl 0x26504e5b740 <col:45, col:49> col:49 bits 'int'
| `-ParmVarDecl 0x26504e5c7f0 <col:55, col:63> col:63 invalid ctx 'int *'
|-FunctionDecl 0x26504e5cb58 <line:685:1, col:68> col:5 invalid bn_probable_prime_dh_coprime 'int (int *, int, int *)'
| |-ParmVarDecl 0x26504e5c9b0 <col:34, col:42> col:42 invalid rnd 'int *'
| |-ParmVarDecl 0x26504e5ca30 <col:47, col:51> col:51 bits 'int'
| `-ParmVarDecl 0x26504e5cab0 <col:57, col:65> col:65 invalid ctx 'int *'
`-VarDecl 0x26504e5cc28 <line:687:1, col:20> col:20 invalid BIGNUM 'int' static
