TranslationUnitDecl 0x2049b164ff8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2049b165890 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2049b165590 '__int128'
|-TypedefDecl 0x2049b165900 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2049b1655b0 'unsigned __int128'
|-TypedefDecl 0x2049b165c38 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x2049b1659f0 'struct __NSConstantString_tag'
|   `-Record 0x2049b165958 '__NSConstantString_tag'
|-TypedefDecl 0x2049b165ca8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x2049b1651d0 'unsigned long long'
|-TypedefDecl 0x2049b165d40 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2049b165d00 'char *'
|   `-BuiltinType 0x2049b165090 'char'
|-TypedefDecl 0x2049b165db0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x2049b165d00 'char *'
|   `-BuiltinType 0x2049b165090 'char'
|-TypedefDecl 0x2049b165e70 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x2049b1651d0 'unsigned long long'
|-TypedefDecl 0x2049b165ee0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x2049b165d00 'char *'
|   `-BuiltinType 0x2049b165090 'char'
|-FunctionDecl 0x2049cc1d430 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2049cc1d4d0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x2049cc1d540 <col:21> Implicit
|-FunctionDecl 0x2049cc1d598 prev 0x2049cc1d430 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2049cc1d2c0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x2049cc1d688 <col:21> Inherited Implicit
|-TypedefDecl 0x2049cc1d6c8 prev 0x2049b165ca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x2049b1651d0 'unsigned long long'
|-TypedefDecl 0x2049cc1d770 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x2049cc1d740 'size_t' sugar
|   |-Typedef 0x2049cc1d6c8 'size_t'
|   `-BuiltinType 0x2049b1651d0 'unsigned long long'
|-TypedefDecl 0x2049cc1d7e0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x2049b165130 'long long'
|-TypedefDecl 0x2049cc1d850 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x2049b165130 'long long'
|-TypedefDecl 0x2049cc1d8c0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x2049b165170 'unsigned short'
|-TypedefDecl 0x2049cc1d930 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x2049b165170 'unsigned short'
|-TypedefDecl 0x2049cc1d9a0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x2049b165170 'unsigned short'
|-TypedefDecl 0x2049cc1da10 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x2049b1650f0 'int'
|-TypedefDecl 0x2049cc1da80 <line:567:1, col:19> col:19 referenced __time32_t 'long'
| `-BuiltinType 0x2049b165110 'long'
|-TypedefDecl 0x2049cc1daf0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x2049b165130 'long long'
|-TypedefDecl 0x2049cc1db80 <line:580:1, col:20> col:20 referenced time_t '__time64_t':'long long'
| `-TypedefType 0x2049cc1db50 '__time64_t' sugar
|   |-Typedef 0x2049cc1daf0 '__time64_t'
|   `-BuiltinType 0x2049b165130 'long long'
|-FunctionDecl 0x2049cc1dcf8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x2049cc1df18 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x2049cc594c0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x2049cc1e058 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x2049cc1e0d0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x2049cc1e148 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x2049cc1e1c8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x2049cc59260 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x2049cc595a0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x2049cc59660 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x2049cc597d0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x2049cc59780 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x2049cc59720 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x2049cc59640 'struct threadlocaleinfostruct'
|       `-Record 0x2049cc63300 'threadlocaleinfostruct'
|-TypedefDecl 0x2049cc598e0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x2049cc59890 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x2049cc59830 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x2049cc59700 'struct threadmbcinfostruct'
|       `-Record 0x2049cc59660 'threadmbcinfostruct'
|-RecordDecl 0x2049cc59938 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x2049cc599f0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x2049cc59ab0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2049cc59b40 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x2049cc59bd0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x2049cc59c88 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x2049cc59c30 'struct localeinfo_struct' sugar
|   `-RecordType 0x2049cc59a90 'struct localeinfo_struct'
|     `-Record 0x2049cc599f0 'localeinfo_struct'
|-TypedefDecl 0x2049cc59d60 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x2049cc59d10 'struct localeinfo_struct *'
|   `-ElaboratedType 0x2049cc59c30 'struct localeinfo_struct' sugar
|     `-RecordType 0x2049cc59a90 'struct localeinfo_struct'
|       `-Record 0x2049cc599f0 'localeinfo_struct'
|-RecordDecl 0x2049cc59dd8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x2049cc59e90 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2049cc59f08 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x2049cc59fc8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x2049cc5a060 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x2049cc5a0d0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x2049cc5a188 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x2049cc5a130 'struct localerefcount' sugar
|   `-RecordType 0x2049cc59e70 'struct localerefcount'
|     `-Record 0x2049cc59dd8 'localerefcount'
|-RecordDecl 0x2049cc63300 prev 0x2049cc595a0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x2049cc63380 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2049cc633f8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x2049cc63468 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x2049cc634d8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x2049cc63548 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x2049cc63708 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x2049cc63778 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x2049cc637e8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x2049cc63858 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x2049cc638c8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x2049cc63938 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x2049cc63990 parent 0x2049b164ff8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x2049cc63b20 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x2049cc63b90 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x2049cc63c00 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x2049cc63c70 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x2049cc63d10 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x2049cc63d80 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x2049cc63e90 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x2049cc63fc8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x2049cc64078 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x2049cc64020 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x2049cc59640 'struct threadlocaleinfostruct'
|     `-Record 0x2049cc63300 'threadlocaleinfostruct'
|-RecordDecl 0x2049cc64110 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x2049cc641d0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2049cc64248 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x2049cc64310 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x2049cc64380 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x2049cc643f0 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x2049cc64460 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x2049cc644d0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x2049cc64540 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x2049cc645b0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x2049cc64660 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x2049cc64610 'struct _iobuf' sugar
|   `-RecordType 0x2049cc641b0 'struct _iobuf'
|     `-Record 0x2049cc64110 '_iobuf'
|-FunctionDecl 0x2049cc64898 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x2049cc64968 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x2049b165130 'long long'
|-FunctionDecl 0x2049cc64b48 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2049cc649d0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x2049cc64e40 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2049cc64c20 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x2049cc64c98 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x2049cc651f0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x2049cc64f20 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x2049cc64fa0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x2049cc65020 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x2049cc60440 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2049cc602d0 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x2049cc60670 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x2049cc60530 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x2049cc60820 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2049cc60740 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x2049cc60a10 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2049cc60d08 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x2049cc60ae0 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x2049cc60b60 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x2049cc60ec0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2049cc60de0 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x2049cc61070 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2049cc60f90 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x2049cc61220 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2049cc61140 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x2049cc5f3c8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2049cc5f2e8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x2049cc5f558 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2049cc5f8c0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x2049cc5f620 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x2049cc5f718 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x2049cc5fc78 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x2049cc5f9a0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x2049cc5fa20 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x2049cc5fa98 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x2049cc5fe38 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2049cc5fd58 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x2049cc60100 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x2049cc5ff10 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x2049cc5ff90 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x2049cc68350 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2049cc68748 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x2049cc687e8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2049cc68850 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2049cc688c8 prev 0x2049cc68748 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x2049cc68520 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x2049cc685a0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x2049cc68978 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049cc68df0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x2049cc68b20 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x2049cc68ba0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x2049cc68c20 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x2049cc69110 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x2049cc691b0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x2049cc69218 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2049cc69290 <col:40> Implicit printf 2 3
|-FunctionDecl 0x2049cc6c390 prev 0x2049cc69110 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2049cc68ed0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2049cc68f50 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x2049cc6c488 <col:40> Inherited printf 2 3
|-FunctionDecl 0x2049cc6c650 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2049cc6c4d0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x2049cc6c550 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x2049cc6c8a8 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2049cc6c730 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x2049cc6c7a8 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x2049cc6cad8 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2049cc6c988 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x2049cc6cdd0 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x2049cc6cbb0 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x2049cc6cc28 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x2049cc6d268 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x2049cc6d308 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2049cc6a370 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2049cc6a3d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x2049cc6a440 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x2049cc6a4c8 prev 0x2049cc6d268 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x2049cc6ceb0 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x2049cc6cf28 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049cc6cfa0 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2049cc6d018 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x2049cc6a9d0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2049cc6a5b8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x2049cc6a630 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049cc6a6a8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049cc6a720 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2049cc6a798 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x2049cc6ae90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x2049cc6abc0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x2049cc6ac40 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x2049cc6acb8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x2049cc6af48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049cc6d448 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x2049cc6b090 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x2049cc6b110 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x2049cc6b190 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x2049cc6b208 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x2049cc6d7f0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x2049cc6d890 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x2049cc6d8f8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2049cc6d970 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x2049cc6d9d8 prev 0x2049cc6d7f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x2049cc6d628 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x2049cc6d6a8 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x2049cc6dbb8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x2049cc6da88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049cc6dff8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2049cc6dcf8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x2049cc6dd78 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x2049cc6de10 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2049cc6e0b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049cc6b380 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2049cc6e1f0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x2049cc6e270 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x2049cc6b670 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2049cc6b458 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2049cc6b4d8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2049cc6b550 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049cc6b9d0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x2049cc6b750 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x2049cc6b828 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x2049cc6bd88 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x2049cc6baa8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x2049cc6bb28 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x2049cc6bba8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x2049cc6bfe8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x2049cc6be68 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x2049cc6e3f8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x2049cc6c0b8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2049cc6c138 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x2049cc6c1b8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x2049cc6e658 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x2049cc6e4d8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x2049cc6eb18 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x2049cc6ebb8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2049cc6ec20 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2049cc6ec88 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x2049cc6ecf0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x2049cc6ed78 prev 0x2049cc6eb18 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x2049cc6e760 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x2049cc6e7d8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049cc6e850 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2049cc6e8c8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x2049cc6ef40 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2049cc6ee60 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x2049cc6f0d0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2049cc6f258 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2049cc6f580 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x2049cc6f328 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x2049cc6f3d0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2049cc6f8a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2049cc6f760 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x2049cc6f950 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049cc6fb70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2049cc6fa90 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x2049cc6fd90 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x2049cc6fc48 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x2049cc6ff40 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2049cc6fe60 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x2049cc70190 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x2049cc70018 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x2049cc70098 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x2049cc69360 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x2049cc69400 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2049cc69470 <col:40> Implicit printf 1 2
|-FunctionDecl 0x2049cc694d8 prev 0x2049cc69360 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x2049cc70270 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x2049cc695c8 <col:40> Inherited printf 1 2
|-FunctionDecl 0x2049cc696f8 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2049cc69618 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x2049cc69948 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2049cc697d0 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x2049cc69848 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x2049cc69b08 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2049cc69a28 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x2049cc69d28 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2049cc69be0 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x2049cc69f78 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2049cc69e00 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x2049cc69e78 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x2049cc6a138 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2049cc6a058 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x2049ccbafa0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2049cc6a210 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x2049cc6a290 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x2049ccbb160 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2049ccbb080 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x2049ccbb3f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x2049ccbb310 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x2049ccbb498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x2049ccbb690 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2049ccbb5b8 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x2049ccbb820 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2049ccbbac8 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x2049ccbbb68 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2049ccbbbd8 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x2049ccbbc40 prev 0x2049ccbbac8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x2049ccbb9b0 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x2049ccbbe18 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x2049ccbbce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccbe210 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2049ccbdfd8 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x2049ccbe050 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2049ccbe2c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccbe4e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2049ccbe408 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x2049ccbe738 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2049ccbe5c0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x2049ccbe638 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049ccbeaf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x2049ccbe8d0 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x2049ccbe950 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x2049ccbeba8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccbedd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2049ccbecf0 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x2049ccc2088 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x2049ccc1f40 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x2049ccc2270 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x2049ccc26c0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x2049ccc2338 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2049ccc23b8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x2049ccc2438 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x2049ccc24b0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2049ccc2b40 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x2049ccc27b0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x2049ccc2828 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccc28a0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2049ccc2920 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x2049ccbff20 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2049ccc2c30 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2049ccc2ca8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2049ccc2d28 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x2049ccc00e8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2049ccc0008 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x2049ccc04c0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x2049ccc0560 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2049ccc05c8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2049ccc0640 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x2049ccc06a8 prev 0x2049ccc04c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x2049ccc0280 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x2049ccc0300 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x2049ccc0888 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x2049ccc0758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccc0c78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2049ccc0998 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x2049ccc0a18 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x2049ccc0a90 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2049ccc0d30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccc1030 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x2049ccc0e78 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x2049ccc0f30 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x2049ccc1328 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2049ccc1110 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x2049ccc1190 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x2049ccc1208 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049ccc17b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2049ccc14d0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x2049ccc1548 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccc15c8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x2049ccc1870 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccc1e40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2049ccc1ab0 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x2049ccc1b28 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccc1ba8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x2049ccc1c20 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2049ccc2f50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccc32b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2049ccc3098 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x2049ccc3110 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2049ccc3190 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x2049ccc3648 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2049ccc3398 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x2049ccc3410 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccc3490 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x2049ccc3508 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049ccc38a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x2049ccc3948 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccc3c00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x2049ccc3a90 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x2049ccbbee0 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x2049ccc3cd8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x2049ccc3d50 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2049ccbc160 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2049ccbc080 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x2049ccbc208 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccbc4c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2049ccbc350 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x2049ccbc3c8 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x2049ccbc8e0 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2049ccbc980 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x2049ccbc9e8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2049ccbca50 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2049ccbcad0 <col:40> Implicit printf 2 0
|-FunctionDecl 0x2049ccbcb38 prev 0x2049ccbc8e0 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2049ccbc5a0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x2049ccbc620 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x2049ccbc698 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2049ccbcc38 <col:40> Inherited printf 2 0
|-FunctionDecl 0x2049ccc3f60 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2049ccc4000 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x2049ccc4068 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2049ccc40d0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2049ccc4150 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x2049ccc41b8 prev 0x2049ccc3f60 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2049ccbcc80 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2049ccbcd00 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x2049ccbcd78 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2049ccc42b8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x2049ccc4518 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2049ccc4300 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2049ccc4380 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x2049ccc43f8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccc4810 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2049ccc45f8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2049ccc4678 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x2049ccc46f0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccc4b58 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2049ccc4bf8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2049ccc4c60 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2049ccc4cd8 <col:40> Implicit printf 1 0
|-FunctionDecl 0x2049ccc4d40 prev 0x2049ccc4b58 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2049ccc48f8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x2049ccc4970 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2049ccc4e38 <col:40> Inherited printf 1 0
|-FunctionDecl 0x2049ccbd028 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2049ccbd0c8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2049ccbd130 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2049ccbd1a8 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x2049ccbd210 prev 0x2049ccbd028 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2049ccc4e88 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x2049ccbcef0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2049ccbd308 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x2049ccbd4d0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2049ccbd358 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x2049ccbd3d0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccbd728 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2049ccbd5b0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x2049ccbd628 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccbdc88 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2049ccbdd28 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2049ccbdd90 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2049ccbddf8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2049ccbde60 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2049ccc4f70 <col:77> Implicit printf 3 0
|-FunctionDecl 0x2049ccc4fd8 prev 0x2049ccbdc88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2049ccbd8c8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x2049ccbd940 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccbd9c0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x2049ccbda38 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x2049ccc51c8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x2049ccc5098 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccc5638 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2049ccc5218 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x2049ccc5290 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccc5308 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccc5388 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x2049ccc5400 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccc5a78 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2049ccc5730 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x2049ccc57a8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccc5820 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccc58a0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x2049ccc5918 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccc5e48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2049ccc5c30 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x2049ccc5ca8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccc5d28 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x2049ccc5f00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccc63f0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2049ccc6140 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x2049ccc61b8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccc6238 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x2049ccc62b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x2049ccc64b0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccc68a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2049ccc65f8 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x2049ccc6670 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccc66f0 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x2049ccc6768 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccc6c68 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x2049ccc6998 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x2049ccc6a18 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x2049ccc6a90 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccbefb0 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x2049ccbf050 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2049ccbf0b8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2049ccbf130 <col:85> Implicit printf 2 3
|-FunctionDecl 0x2049ccbf198 prev 0x2049ccbefb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x2049ccc6e10 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x2049ccc6e90 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x2049ccbf378 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x2049ccbf248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccbf7a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2049ccbf840 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2049ccbf8a8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2049ccbf910 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2049ccbf990 <col:94> Implicit printf 2 0
|-FunctionDecl 0x2049ccbf9f8 prev 0x2049ccbf7a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2049ccbf488 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x2049ccbf508 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x2049ccbf580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x2049ccbfbe0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x2049ccbfab0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccce000 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2049ccce0a0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2049ccce108 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2049ccce170 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2049ccce1f0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x2049ccce258 prev 0x2049ccce000 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2049ccbfc30 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x2049ccbfcb0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x2049ccbfd28 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2049ccce358 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x2049ccce520 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2049ccce3a8 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x2049ccce420 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccce818 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2049ccce600 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x2049ccce678 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2049ccce6f8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x2049cccebb0 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2049ccce900 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x2049ccce978 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccce9f8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x2049cccea70 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049cccee18 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2049cccec98 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x2049ccced18 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x2049ccccff0 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2049ccceef8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x2049cccd2e0 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2049cccd0c8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x2049cccd140 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2049cccd1c0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x2049cccd5d8 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2049cccd3c0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2049cccd440 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x2049cccd4b8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049cccd838 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2049cccd6c0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x2049cccd738 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049cccdbc8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2049cccd918 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x2049cccd990 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049cccda10 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x2049cccda88 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049cccdd98 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2049cccdcb8 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x2049ccc7fa0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2049cccde70 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x2049cccdee8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccc8160 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2049ccc8080 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x2049ccc82f0 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2049ccc8538 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2049ccc83c0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x2049ccc8438 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049ccc8790 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2049ccc8618 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2049ccc8690 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049ccc89e8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2049ccc8870 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2049ccc88e8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049ccc8d98 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049ccc8ac8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x2049ccc8b40 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2049ccc8bb8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccc70b0 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049ccc8e80 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2049ccc8ef8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2049ccc6f90 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccc73a8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049ccc7198 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2049ccc7210 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2049ccc7288 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccc76a0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2049ccc7488 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2049ccc7508 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x2049ccc7580 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049ccc7998 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2049ccc7780 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2049ccc7800 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2049ccc7878 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049ccc7c90 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2049ccc7a78 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2049ccc7af8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2049ccc7b70 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049cccf170 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049ccc7d70 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2049ccc7df0 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x2049ccc7e68 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2049ccc7ee0 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049cccf508 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049cccf258 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2049cccf2d8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x2049cccf350 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2049cccf3c8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049cccf8a0 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049cccf5f0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2049cccf670 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x2049cccf6e8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2049cccf760 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049cccfd38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2049cccfa50 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x2049cccfad0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x2049cccfb48 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2049cccfdf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccd0330 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2049cccff38 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x2049ccd0020 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccd00a0 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x2049ccd0118 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049ccd06d0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2049ccd0420 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x2049ccd0498 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccd0518 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x2049ccd0590 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049ccd0c20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049ccd08c0 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x2049ccd0940 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x2049ccd09b8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2049ccd0a30 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2049ccd0ce0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccc91e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049ccd0e28 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x2049ccd0ea0 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccd0f20 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x2049ccd0f98 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2049ccc8fb0 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccc9628 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049ccc92e0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2049ccc9358 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccc93d8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x2049ccc9450 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2049ccc94c8 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccc9898 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2049ccc9720 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2049ccc9798 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049ccc9af0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2049ccc9978 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x2049ccc99f0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049ccc9de0 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049ccc9bd0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2049ccc9c48 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2049ccc9cc0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccd1160 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049ccc9ec8 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x2049ccc9f40 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2049ccd1040 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccd15b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2049ccd1308 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x2049ccd1380 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccd1400 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x2049ccd1478 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2049ccd1678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccd1a70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2049ccd17c0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x2049ccd1838 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccd18b8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x2049ccd1930 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049ccc9fc0 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2049ccd1b60 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2049ccd1bd8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccd1c50 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccd1cd0 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x2049ccd1d48 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049ccca500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049ccca1b8 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x2049ccca230 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccca2b0 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x2049ccca328 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2049ccca3a0 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2049ccca5c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049cccaa48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049ccca718 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x2049ccca790 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccca810 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x2049ccca888 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2049ccca900 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccd20a0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049cccab40 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x2049cccabb8 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049cccac30 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049cccacb0 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x2049cccad28 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2049cccada0 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccd2460 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x2049ccd2198 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2049ccd2210 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x2049ccd2290 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x2049ccd26d0 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2049ccd2560 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x2049ccd28e8 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x2049ccd2bc8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2049ccd29b0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2049ccd2a28 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x2049ccd2e10 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x2049ccd2ca0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2049cccafd0 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2049ccd2ee0 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x2049cccb158 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x2049cccb390 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2049cccb220 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2049cccb298 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x2049cccb540 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x2049cccb468 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2049cccb7e8 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x2049cccb610 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2049cccb688 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x2049cccbb90 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x2049cccb8c0 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2049cccb940 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x2049cccb9b8 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x2049cccbe90 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2049cccbc70 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2049cccbce8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2049ccd7248 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x2049cccbf68 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x2049ccd70a0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2049ccd7550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2049ccd73e0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x2049ccd75f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccd78b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x2049ccd7738 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x2049ccd7bc0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2049ccd7988 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x2049ccd7a00 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x2049ccd7e10 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2049ccd7c98 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x2049ccd7d10 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x2049ccd80a0 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2049ccd7ee8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x2049ccd8250 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2049ccd8170 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x2049ccd8400 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2049ccd8320 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x2049ccd8798 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2049ccd84d0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2049ccd8548 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049ccd85c0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccd8a88 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2049ccd8878 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x2049ccd88f0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049ccd8968 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccd8d78 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2049ccd8b68 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2049ccd8be0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049ccd8c58 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccd3050 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2049ccd8e58 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2049ccd8ed0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049ccd8f48 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccd3350 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2049ccd3130 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049ccd31a8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccd35a0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2049ccd3428 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049ccd34a0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccd37f0 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2049ccd3678 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049ccd36f0 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccd3a40 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2049ccd38c8 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049ccd3940 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccd3df8 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2049ccd3b18 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2049ccd3b90 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2049ccd3c08 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x2049ccd4270 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2049ccd3ed8 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2049ccd3f50 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccd3fc8 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049ccd4060 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccd4628 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2049ccd4358 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2049ccd43d0 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049ccd4448 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccd4918 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2049ccd4708 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x2049ccd4780 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049ccd47f8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccd4c08 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2049ccd49f8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2049ccd4a70 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2049ccd4ae8 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x2049ccd4f90 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2049ccd4ce8 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2049ccd4d60 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccd4dd8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049ccd4e50 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccd5420 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2049ccd5098 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2049ccd5110 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccd5188 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2049ccd5200 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x2049ccd5928 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2049ccd5508 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2049ccd5580 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccd55f8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccd5670 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049ccd56e8 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccd5ce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2049ccd5ad8 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2049ccd5b50 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccd5bc8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2049ccd5da0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccd62b0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2049ccd5fa0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2049ccd6080 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccd60f8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2049ccd6170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x2049ccd6370 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccd6628 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2049ccd64b0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x2049ccd6528 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x2049ccd67e0 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2049ccd6700 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x2049ccd6ac0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2049ccd68b0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2049ccd6928 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049ccd69a0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049ccd6d18 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2049ccd6ba0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049ccd6c18 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049cc9f2d0 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2049ccd6df0 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2049ccd6e68 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2049ccd6ee0 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x2049cc9f658 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2049cc9f3b0 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2049cc9f428 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049cc9f4a0 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049cc9f518 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049cc9f820 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2049cc9f740 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x2049cc9fa68 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2049cc9f8f0 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049cc9f968 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049cc9fd70 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2049cc9fb40 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049cc9fbb8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049cc9ffc0 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2049cc9fe48 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049cc9fec0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049cca0210 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2049cca0098 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049cca0110 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049cc9b588 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049cc9b2b8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2049cc9b330 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2049cc9b3a8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049cc9b878 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049cc9b668 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2049cc9b6e0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2049cc9b758 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049cc9bb68 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049cc9b958 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2049cc9b9d0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2049cc9ba48 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049cc9bf28 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2049cc9bc48 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2049cc9bcc0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049cc9bd38 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049cca02e0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2049cc9c008 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2049cc9c080 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049cc9c0f8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049cca05d0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2049cca03c0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2049cca0438 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049cca04b0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049cca0a20 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049cca06b0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2049cca0728 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2049cca07a0 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2049cca0818 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049cca0db0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049cca0b08 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x2049cca0b80 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2049cca0bf8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2049cca0c70 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049cca1140 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049cca0e98 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x2049cca0f10 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2049cca0f88 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2049cca1000 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049cca1600 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2049cca1228 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2049cca12f0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049cca1368 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049cca13e0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049cca1990 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2049cca16e8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2049cca1760 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049cca17d8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049cca1850 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049cca1d20 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2049cca1a78 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2049cca1af0 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049cca1b68 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049cca1be0 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049cca2228 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049cca1e08 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2049cca1e80 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049cca1ef8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2049cca1f70 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2049cca1fe8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049cc9d618 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049cc9d2d8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2049cc9d350 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049cc9d3c8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2049cc9d440 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2049cc9d4b8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049cc9da48 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049cc9d708 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2049cc9d780 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049cc9d7f8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2049cc9d870 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2049cc9d8e8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049cc9dcb0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2049cc9db38 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049cc9dbb0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049cc9df00 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2049cc9dd88 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049cc9de00 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049cc9e1e8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049cc9dfd8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2049cc9e050 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2049cc9e0c8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049cc9a618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2049cc9a370 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2049cc9a3e8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049cc9a460 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2049cc9a4d8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2049cc9a6d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049cc9ac48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2049cc9a820 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2049cc9a898 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049cc9a910 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049cc9a988 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049cc9aa00 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049cc9b180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049cc9ae40 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2049cc9aeb8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049cc9af30 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2049cc9afa8 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2049cc9b020 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2049cca2300 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049cca2910 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049cca2448 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2049cca24c0 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049cca2538 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049cca25b0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2049cca2628 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2049cca26a0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049cca2e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2049cca2bd8 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2049cca2c50 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x2049cca2ec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2049cca2fd8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2049cca3578 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2049cca3290 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2049cca3320 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2049cca3398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x2049cca3630 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2049cca3748 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2049cca3ce8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2049cca3a08 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2049cca3a80 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2049cca3af8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x2049cca3da0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2049cca3ec0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2049cc9c4b0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049cca4180 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2049cca41f8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2049cca4270 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2049cc9c2a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x2049cc9c570 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2049cc9c690 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2049cc9c998 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x2049cc9c7b8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x2049cc9c830 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049cc9c8a8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x2049ccab630 <line:37:1, line:44:1>
|   |-DeclStmt 0x2049cc9cae0 <line:38:5, col:21>
|   | `-VarDecl 0x2049cc9ca78 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x2049cc9cb78 <line:39:5, col:13>
|   | `-VarDecl 0x2049cc9cb10 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x2049cc9ced0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x2049cc9ceb8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2049cc9cdd0 <col:34> '<builtin fn type>' Function 0x2049cc9cc68 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x2049cc9ce08 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x2049cc9ca78 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x2049cc9ce40 <col:29> 'const wchar_t *' lvalue ParmVar 0x2049cc9c8a8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x2049cc9d190 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x2049cc9cf00 <col:5> 'int' lvalue Var 0x2049cc9cb10 '_Ret' 'int'
|   | `-CallExpr 0x2049cc9d0d0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x2049cc9d0b8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2049cc9cf38 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2049cca2228 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x2049cc9d118 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2049cc9cf58 <col:27> 'wchar_t *' lvalue ParmVar 0x2049cc9c7b8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x2049cc9d130 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2049cc9cf78 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2049cc9c830 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x2049cc9d148 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2049cc9cf98 <col:44> 'const wchar_t *' lvalue ParmVar 0x2049cc9c8a8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x2049cc9d160 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x2049cc9d020 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x2049cc9cff8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x2049cc9cfb8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x2049cc9d178 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2049cc9d040 <col:59> 'va_list':'char *' lvalue Var 0x2049cc9ca78 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x2049ccab5c0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x2049ccab5a8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2049ccab4f8 <col:34> '<builtin fn type>' Function 0x2049ccab390 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x2049ccab530 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x2049cc9ca78 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x2049ccab620 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x2049ccab608 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2049ccab5e8 <col:12> 'int' lvalue Var 0x2049cc9cb10 '_Ret' 'int'
|-FunctionDecl 0x2049cc9cc68 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x2049cc9cd08 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x2049cc9cd78 <col:34> Implicit
|-FunctionDecl 0x2049ccab390 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x2049ccab430 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x2049ccab4a0 <col:34> Implicit
|-FunctionDecl 0x2049ccab928 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x2049ccab680 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x2049ccab6f8 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccab770 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2049ccab7e8 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x2049ccabc10 <line:50:1, line:52:1>
|   `-ReturnStmt 0x2049ccabc00 <line:51:5, col:62>
|     `-CallExpr 0x2049ccabb40 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x2049ccabb28 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2049ccaba00 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2049cca2228 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x2049ccabb88 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2049ccaba20 <col:27> 'wchar_t *' lvalue ParmVar 0x2049ccab680 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x2049ccabba0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x2049ccaba40 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2049ccab6f8 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x2049ccabbb8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2049ccaba60 <col:44> 'const wchar_t *' lvalue ParmVar 0x2049ccab770 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x2049ccabbd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x2049ccabae8 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x2049ccabac0 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x2049ccaba80 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x2049ccabbe8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x2049ccabb08 <col:59> 'va_list':'char *' lvalue ParmVar 0x2049ccab7e8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x2049ccabeb0 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x2049ccabc38 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x2049ccabcb0 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccabd28 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2049ccabda0 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x2049cca73f8 <line:61:1, line:68:1>
|   |-DeclStmt 0x2049ccac000 <line:62:5, col:21>
|   | `-VarDecl 0x2049ccabf98 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x2049ccac098 <line:63:5, col:13>
|   | `-VarDecl 0x2049ccac030 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x2049ccac140 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x2049ccac128 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2049ccac0b0 <col:34> '<builtin fn type>' Function 0x2049cc9cc68 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x2049ccac0d0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x2049ccabf98 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x2049ccac108 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2049ccabda0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x2049ccac340 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x2049ccac170 <col:5> 'int' lvalue Var 0x2049ccac030 '_Ret' 'int'
|   | `-CallExpr 0x2049ccac280 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x2049ccac268 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2049ccac1a8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2049cca2228 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x2049ccac2c8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2049ccac1c8 <col:27> 'wchar_t *' lvalue ParmVar 0x2049ccabc38 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x2049ccac2e0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2049ccac1e8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2049ccabcb0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x2049ccac2f8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2049ccac208 <col:44> 'const wchar_t *' lvalue ParmVar 0x2049ccabd28 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x2049ccac310 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2049ccac228 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2049ccabda0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x2049ccac328 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2049ccac248 <col:64> 'va_list':'char *' lvalue Var 0x2049ccabf98 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x2049cca7388 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x2049cca7370 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2049ccac360 <col:34> '<builtin fn type>' Function 0x2049ccab390 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x2049cca7350 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x2049ccabf98 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x2049cca73e8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x2049cca73d0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2049cca73b0 <col:12> 'int' lvalue Var 0x2049ccac030 '_Ret' 'int'
|-FunctionDecl 0x2049cca7788 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x2049cca7448 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x2049cca74c0 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049cca7538 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2049cca75b0 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2049cca7628 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x2049cca7a10 <line:74:1, line:76:1>
|   `-ReturnStmt 0x2049cca7a00 <line:75:5, col:67>
|     `-CallExpr 0x2049cca7940 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x2049cca7928 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2049cca7868 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2049cca2228 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x2049cca7988 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2049cca7888 <col:27> 'wchar_t *' lvalue ParmVar 0x2049cca7448 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x2049cca79a0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x2049cca78a8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2049cca74c0 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x2049cca79b8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2049cca78c8 <col:44> 'const wchar_t *' lvalue ParmVar 0x2049cca7538 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x2049cca79d0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x2049cca78e8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2049cca75b0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x2049cca79e8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x2049cca7908 <col:64> 'va_list':'char *' lvalue ParmVar 0x2049cca7628 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x2049cca7c58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2049cca7a38 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x2049cca7ab0 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x2049cca7ea8 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2049cca7d30 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049cca7da8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049cca8190 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2049cca7f80 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2049cca7ff8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2049cca8070 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2049cca84d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2049cca8360 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x2049cca83d8 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2049cca8588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049cca8998 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2049cca8788 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x2049cca8800 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2049cca8878 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2049cca8a50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049cca8d08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2049cca8b90 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x2049cca8c08 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x2049cca8ff0 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2049cca8de0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2049cca8e58 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049cca8ed0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049cca93e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2049cca9190 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2049cca9208 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2049cca9490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049cca9968 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2049cca9690 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2049cca9708 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2049cca9780 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2049cca9a20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049cca9cd8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2049cca9b60 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2049cca9bd8 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x2049cca9fc0 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2049cca9db0 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2049cca9e28 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049cca9ea0 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049ccaa468 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2049ccaa160 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2049ccaa1d8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccaa250 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2049ccaa520 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccaaaa0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2049ccaa720 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2049ccaa798 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccaa810 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2049ccaa888 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2049ccaab60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccaaeb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2049ccaaca0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2049ccaad18 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2049ccaad90 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x2049ccab238 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2049ccaaf90 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2049ccab008 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccab080 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049ccab0f8 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049cca44d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x2049cca43f0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2049cca4578 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049cca48f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2049cca4778 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2049cca47f0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2049cca49a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049cca4bc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2049cca4ae0 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x2049cca4e08 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2049cca4c90 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049cca4d08 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049cca5108 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x2049cca4ee8 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x2049cca4f60 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x2049ccac548 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2049cca52a0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2049ccac3a0 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x2049ccac5f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccaca00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2049ccac740 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x2049ccac7b8 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x2049ccac830 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x2049ccace60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2049ccacba0 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2049ccacc18 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x2049ccacc90 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x2049ccacf18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049cca6388 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2049ccad060 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x2049ccad0d8 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2049ccad150 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x2049ccad1c8 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x2049cca65e0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x2049cca6470 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x2049cca6820 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2049cca66b0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x2049cca6728 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x2049cca69d8 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x2049cca68f8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x2049cca6cc8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2049cca6aa8 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x2049cca6b20 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2049cca6f38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2049cca6e60 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x2049cca6fe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049cca71f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2049cca7120 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x2049ccb24f8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2049cca72c8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2049ccb2400 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2049ccb2740 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x2049ccb25d0 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2049ccb2648 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2049ccb28f0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2049ccb2818 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x2049ccb2a98 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2049ccb29c0 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x2049ccb2c48 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2049ccb2b68 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x2049ccb2df8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2049ccb2d18 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x2049ccb3170 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2049ccb2ed0 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x2049ccb2f48 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccb2fc0 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2049ccb3038 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x2049ccaf5a0 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2049ccb3260 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x2049ccb32d8 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccb3350 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccaf3d0 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2049ccaf448 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x2049ccaf8b0 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x2049ccaf690 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2049ccaf710 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x2049ccaf790 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x2049ccafa70 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x2049ccaf990 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x2049ccafd60 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x2049ccafb40 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x2049ccafbc0 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x2049ccafc40 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x2049ccaff20 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x2049ccafe40 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x2049ccb0298 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2049ccafff8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x2049ccb0070 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccb00e8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2049ccb0160 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x2049ccae538 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2049ccae3c0 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x2049ccae438 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x2049ccae870 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x2049ccae6f0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x2049ccae770 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x2049ccae920 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x2049ccaebd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2049ccaec78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x2049ccaefb8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x2049ccaee40 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x2049ccaeec0 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x2049ccaf068 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x2049ccb6440 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2049ccb64e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x2049ccb6780 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x2049ccb66a0 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x2049ccb6828 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x2049ccb6aa8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2049ccb6b48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x2049ccb6df0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x2049ccb6d10 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x2049ccb6e98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x2049ccb7178 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x2049ccb7098 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x2049ccb7220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x2049ccb0558 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2049ccb03e0 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x2049ccb0458 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x2049ccb0608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x2049ccb08c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2049ccb0968 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-TypedefDecl 0x2049ccb0ab8 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:89:1, col:14> col:14 referenced clock_t 'long'
| `-BuiltinType 0x2049b165110 'long'
|-RecordDecl 0x2049ccb0b10 <line:113:1, line:123:9> line:113:8 struct tm definition
| |-MaxFieldAlignmentAttr 0x2049ccb0bd0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2049ccb0c48 <line:114:9, col:13> col:13 tm_sec 'int'
| |-FieldDecl 0x2049ccb0cb8 <line:115:9, col:13> col:13 tm_min 'int'
| |-FieldDecl 0x2049ccb0d28 <line:116:9, col:13> col:13 tm_hour 'int'
| |-FieldDecl 0x2049ccb0d98 <line:117:9, col:13> col:13 tm_mday 'int'
| |-FieldDecl 0x2049ccb0e08 <line:118:9, col:13> col:13 tm_mon 'int'
| |-FieldDecl 0x2049ccb0e78 <line:119:9, col:13> col:13 tm_year 'int'
| |-FieldDecl 0x2049ccb0ee8 <line:120:9, col:13> col:13 tm_wday 'int'
| |-FieldDecl 0x2049ccb0f58 <line:121:9, col:13> col:13 tm_yday 'int'
| `-FieldDecl 0x2049ccb0fc8 <line:122:9, col:13> col:13 tm_isdst 'int'
|-FunctionDecl 0x2049ccb1210 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:147:99> col:84 __daylight 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x2049ccb12b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_daylight instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccb5650 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:151:98> col:84 __dstbias 'long *(void) __attribute__((cdecl))':'long *(void)'
| `-DeprecatedAttr 0x2049ccb56f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_dstbias instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccb59b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:155:100> col:85 __timezone 'long *(void) __attribute__((cdecl))':'long *(void)'
| `-DeprecatedAttr 0x2049ccb5a50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_timezone instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccb5d70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:159:112> col:99 __tzname 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x2049ccb5e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_tzname instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccb60d0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:162:9, col:60> col:25 _get_daylight 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x2049ccb5f58 <col:45, col:51> col:51 _Daylight 'int *'
|-FunctionDecl 0x2049ccb6320 <line:163:9, col:73> col:25 _get_dstbias 'errno_t (long *) __attribute__((cdecl))':'errno_t (long *)'
| `-ParmVarDecl 0x2049ccb61a8 <col:44, col:51> col:51 _Daylight_savings_bias 'long *'
|-FunctionDecl 0x2049ccb8538 <line:164:9, col:61> col:25 _get_timezone 'errno_t (long *) __attribute__((cdecl))':'errno_t (long *)'
| `-ParmVarDecl 0x2049ccb8460 <col:45, col:52> col:52 _Timezone 'long *'
|-FunctionDecl 0x2049ccb89e8 <line:165:9, col:150> col:25 _get_tzname 'errno_t (size_t *, char *, size_t, int) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, int)'
| |-ParmVarDecl 0x2049ccb8668 <col:43, col:51> col:51 _ReturnValue 'size_t *'
| |-ParmVarDecl 0x2049ccb86e8 <col:94, col:100> col:100 _Buffer 'char *'
| |-ParmVarDecl 0x2049ccb8760 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2049ccb87e0 <col:140, col:144> col:144 _Index 'int'
|-FunctionDecl 0x2049ccb8da8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:174:108> col:74 asctime 'char *(const struct tm *) __attribute__((cdecl))':'char *(const struct tm *)'
| |-ParmVarDecl 0x2049ccb8c30 <col:87, col:105> col:105 _Tm 'const struct tm *'
| `-DeprecatedAttr 0x2049ccb8e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using asctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccb9270 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:176:28, col:170> col:44 asctime_s 'errno_t (char *, size_t, const struct tm *) __attribute__((cdecl))':'errno_t (char *, size_t, const struct tm *)'
| |-ParmVarDecl 0x2049ccb8f98 <col:106, col:112> col:112 _Buf 'char *'
| |-ParmVarDecl 0x2049ccb9010 <col:123, col:130> col:130 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2049ccb90a0 <col:149, col:167> col:167 _Tm 'const struct tm *'
|-FunctionDecl 0x2049ccb15a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:180:98> col:60 _ctime32 'char *(const __time32_t *) __attribute__((cdecl))':'char *(const __time32_t *)'
| |-ParmVarDecl 0x2049ccb1428 <col:74, col:93> col:93 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x2049ccb1650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ctime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccb1a60 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:181:9, col:154> col:25 _ctime32_s 'errno_t (char *, size_t, const __time32_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time32_t *)'
| |-ParmVarDecl 0x2049ccb1798 <col:88, col:94> col:94 _Buf 'char *'
| |-ParmVarDecl 0x2049ccb1810 <col:105, col:112> col:112 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2049ccb1888 <col:131, col:149> col:149 _Time 'const __time32_t *'
|-FunctionDecl 0x2049ccb1ca8 <line:184:24, col:50> col:40 clock 'clock_t (void) __attribute__((cdecl))':'clock_t (void)'
|-FunctionDecl 0x2049ccb1f90 <line:185:9, col:82> col:24 _difftime32 'double (__time32_t, __time32_t) __attribute__((cdecl))':'double (__time32_t, __time32_t)'
| |-ParmVarDecl 0x2049ccb1d70 <col:41, col:52> col:52 _Time1 '__time32_t':'long'
| `-ParmVarDecl 0x2049ccb1de8 <col:65, col:76> col:76 _Time2 '__time32_t':'long'
|-FunctionDecl 0x2049ccb2318 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:187:120> col:81 _gmtime32 'struct tm *(const __time32_t *) __attribute__((cdecl))':'struct tm *(const __time32_t *)'
| |-ParmVarDecl 0x2049ccb2128 <col:96, col:115> col:115 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x2049cce8540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gmtime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049cce88b8 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:188:28, col:106> col:44 _gmtime32_s 'errno_t (struct tm *, const __time32_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time32_t *)'
| |-ParmVarDecl 0x2049cce8698 <col:61, col:72> col:72 _Tm 'struct tm *'
| `-ParmVarDecl 0x2049cce8710 <col:82, col:101> col:101 _Time 'const __time32_t *'
|-FunctionDecl 0x2049cce8b48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:190:111> col:69 _localtime32 'struct tm *(const __time32_t *) __attribute__((cdecl))':'struct tm *(const __time32_t *)'
| |-ParmVarDecl 0x2049cce8a58 <col:87, col:106> col:106 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x2049cce8bf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _localtime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049cce8ec0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:191:9, col:91> col:25 _localtime32_s 'errno_t (struct tm *, const __time32_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time32_t *)'
| |-ParmVarDecl 0x2049cce8d50 <col:46, col:57> col:57 _Tm 'struct tm *'
| `-ParmVarDecl 0x2049cce8dc8 <col:67, col:86> col:86 _Time 'const __time32_t *'
|-FunctionDecl 0x2049cce9328 <line:193:9, col:179> col:24 strftime 'size_t (char *, size_t, const char *, const struct tm *) __attribute__((cdecl))':'size_t (char *, size_t, const char *, const struct tm *)'
| |-ParmVarDecl 0x2049cce8fa0 <col:62, col:69> col:69 _Buf 'char *'
| |-ParmVarDecl 0x2049cce9018 <col:80, col:87> col:87 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049cce9098 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x2049cce9128 <col:158, col:176> col:176 _Tm 'const struct tm *'
|-FunctionDecl 0x2049ccea8a0 <line:194:9, col:199> col:24 _strftime_l 'size_t (char *, size_t, const char *, const struct tm *, _locale_t) __attribute__((cdecl))':'size_t (char *, size_t, const char *, const struct tm *, _locale_t)'
| |-ParmVarDecl 0x2049cce9418 <col:59, col:65> col:65 _Buf 'char *'
| |-ParmVarDecl 0x2049cce9490 <col:76, col:83> col:83 _Max_size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccea560 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x2049ccea5f0 <col:151, col:168> col:168 _Tm 'const struct tm *'
| `-ParmVarDecl 0x2049ccea668 <col:182, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049cceab78 <line:196:28, col:142> col:44 _strdate_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x2049ccea998 <col:106, col:112> col:112 _Buf 'char *'
| `-ParmVarDecl 0x2049cceaa10 <col:123, col:130> col:130 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x2049cceadf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:198:79 _strdate 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2049ccead18 <col:108, col:114> col:114 _Buffer 'char *'
| `-DeprecatedAttr 0x2049cceaea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strdate_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049cceb158 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:200:28, col:143> col:44 _strtime_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x2049cceafe8 <col:106, col:112> col:112 _Buf 'char *'
| `-ParmVarDecl 0x2049cceb060 <col:124, col:131> col:131 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x2049cceb3d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:202:79 _strtime 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2049cceb2f8 <col:108, col:114> col:114 _Buffer 'char *'
| `-DeprecatedAttr 0x2049cceb480 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049cceb810 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:204:9, col:64> col:28 _time32 '__time32_t (__time32_t *) __attribute__((cdecl))':'__time32_t (__time32_t *)'
| `-ParmVarDecl 0x2049cceb698 <col:46, col:59> col:59 _Time '__time32_t *'
|-FunctionDecl 0x2049cceba70 <line:205:9, col:61> col:28 _mktime32 '__time32_t (struct tm *) __attribute__((cdecl))':'__time32_t (struct tm *)'
| `-ParmVarDecl 0x2049cceb8f8 <col:46, col:58> col:58 _Tm 'struct tm *'
|-FunctionDecl 0x2049ccebc30 <line:206:9, col:63> col:28 _mkgmtime32 '__time32_t (struct tm *) __attribute__((cdecl))':'__time32_t (struct tm *)'
| `-ParmVarDecl 0x2049ccebb58 <col:48, col:60> col:60 _Tm 'struct tm *'
|-FunctionDecl 0x2049ccebdb8 <line:210:9, col:33> col:22 _tzset 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x2049ccec0a0 <line:214:24, col:97> col:39 used _difftime64 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)'
| |-ParmVarDecl 0x2049ccebe80 <col:56, col:67> col:67 _Time1 '__time64_t':'long long'
| `-ParmVarDecl 0x2049ccebef8 <col:80, col:91> col:91 _Time2 '__time64_t':'long long'
|-FunctionDecl 0x2049ccec3e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:215:98> col:60 used _ctime64 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)'
| |-ParmVarDecl 0x2049ccec268 <col:74, col:93> col:93 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x2049ccec490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ctime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccec940 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:216:9, col:132> col:25 used _ctime64_s 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)'
| |-ParmVarDecl 0x2049ccec680 <col:65, col:71> col:71 _Buf 'char *'
| |-ParmVarDecl 0x2049ccec6f8 <col:82, col:89> col:89 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2049ccec770 <col:108, col:127> col:127 _Time 'const __time64_t *'
|-FunctionDecl 0x2049ccecc68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:219:105> col:66 used _gmtime64 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |-ParmVarDecl 0x2049ccecae0 <col:81, col:100> col:100 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x2049ccecd10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gmtime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049cced088 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:220:9, col:87> col:25 used _gmtime64_s 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
| |-ParmVarDecl 0x2049ccece68 <col:43, col:54> col:54 _Tm 'struct tm *'
| `-ParmVarDecl 0x2049ccecee0 <col:64, col:82> col:82 _Time 'const __time64_t *'
|-FunctionDecl 0x2049cced318 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:222:111> col:69 used _localtime64 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |-ParmVarDecl 0x2049cced228 <col:87, col:106> col:106 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x2049cced3c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _localtime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049cced700 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:223:9, col:90> col:25 used _localtime64_s 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
| |-ParmVarDecl 0x2049cced590 <col:46, col:57> col:57 _Tm 'struct tm *'
| `-ParmVarDecl 0x2049cced608 <col:67, col:85> col:85 _Time 'const __time64_t *'
|-FunctionDecl 0x2049cced960 <line:225:9, col:61> col:28 used _mktime64 '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
| `-ParmVarDecl 0x2049cced7f0 <col:46, col:58> col:58 _Tm 'struct tm *'
|-FunctionDecl 0x2049ccedb20 <line:226:9, col:63> col:28 used _mkgmtime64 '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
| `-ParmVarDecl 0x2049cceda48 <col:48, col:60> col:60 _Tm 'struct tm *'
|-FunctionDecl 0x2049ccedd90 <line:227:9, col:64> col:28 used _time64 '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)'
| `-ParmVarDecl 0x2049ccedc18 <col:46, col:59> col:59 _Time '__time64_t *'
|-FunctionDecl 0x2049ccee0f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:231:79> col:46 _getsystime 'unsigned int (struct tm *) __attribute__((cdecl))':'unsigned int (struct tm *)'
| |-ParmVarDecl 0x2049ccedf78 <col:64, col:76> col:76 _Tm 'struct tm *'
| `-DeprecatedAttr 0x2049ccee1a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using GetLocalTime instead. See online help for details." ""
|-FunctionDecl 0x2049cce95c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:232:98> col:46 _setsystime 'unsigned int (struct tm *, unsigned int) __attribute__((cdecl))':'unsigned int (struct tm *, unsigned int)'
| |-ParmVarDecl 0x2049ccee3c8 <col:63, col:75> col:75 _Tm 'struct tm *'
| |-ParmVarDecl 0x2049ccee448 <col:80, col:89> col:89 _MilliSec 'unsigned int'
| `-DeprecatedAttr 0x2049cce9670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetLocalTime instead. See online help for details." ""
|-FunctionDecl 0x2049cce9a00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:245:100> col:64 _wasctime 'wchar_t *(const struct tm *) __attribute__((cdecl))':'wchar_t *(const struct tm *)'
| |-ParmVarDecl 0x2049cce9890 <col:79, col:97> col:97 _Tm 'const struct tm *'
| `-DeprecatedAttr 0x2049cce9aa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wasctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049cce9ec0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:246:9, col:156> col:25 _wasctime_s 'errno_t (wchar_t *, size_t, const struct tm *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const struct tm *)'
| |-ParmVarDecl 0x2049cce9be8 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x2049cce9c60 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2049cce9cf0 <col:135, col:153> col:153 _Tm 'const struct tm *'
|-FunctionDecl 0x2049ccea1d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:249:102> col:64 _wctime32 'wchar_t *(const __time32_t *) __attribute__((cdecl))':'wchar_t *(const __time32_t *)'
| |-ParmVarDecl 0x2049ccea060 <col:79, col:97> col:97 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x2049ccea278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049cce6660 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:250:9, col:159> col:25 _wctime32_s 'errno_t (wchar_t *, size_t, const __time32_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time32_t *)'
| |-ParmVarDecl 0x2049ccea3b8 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x2049ccea430 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2049ccea4a8 <col:135, col:154> col:154 _Time 'const __time32_t *'
|-FunctionDecl 0x2049cce6ac8 <line:253:9, col:186> col:24 wcsftime 'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *) __attribute__((cdecl))':'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *)'
| |-ParmVarDecl 0x2049cce6740 <col:62, col:72> col:72 _Buf 'wchar_t *'
| |-ParmVarDecl 0x2049cce67b8 <col:83, col:90> col:90 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049cce6830 <col:134, col:150> col:150 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2049cce68c0 <col:165, col:183> col:183 _Tm 'const struct tm *'
|-FunctionDecl 0x2049cce6fe0 <line:254:9, col:214> col:24 _wcsftime_l 'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *, _locale_t)'
| |-ParmVarDecl 0x2049cce6bb0 <col:65, col:75> col:75 _Buf 'wchar_t *'
| |-ParmVarDecl 0x2049cce6c28 <col:86, col:93> col:93 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049cce6ca0 <col:137, col:152> col:152 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2049cce6d30 <col:166, col:183> col:183 _Tm 'const struct tm *'
| `-ParmVarDecl 0x2049cce6da8 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2049cce7240 <line:256:9, col:128> col:25 _wstrdate_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2049cce70d0 <col:88, col:98> col:98 _Buf 'wchar_t *'
| `-ParmVarDecl 0x2049cce7148 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2049ccef5b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:258:82 _wstrdate 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2049cce73d8 <col:112, col:121> col:121 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x2049ccef658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wstrdate_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccef908 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:260:9, col:128> col:25 _wstrtime_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2049ccef798 <col:88, col:98> col:98 _Buf 'wchar_t *'
| `-ParmVarDecl 0x2049ccef810 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2049ccefb78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:262:82 _wstrtime 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2049ccefaa0 <col:112, col:121> col:121 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x2049ccefc20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wstrtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049cceff90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:264:103> col:64 used _wctime64 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)'
| |-ParmVarDecl 0x2049ccefe20 <col:79, col:98> col:98 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x2049ccf0038 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccf0440 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:265:9, col:158> col:25 used _wctime64_s 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)'
| |-ParmVarDecl 0x2049ccf0178 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x2049ccf01f0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2049ccf0268 <col:135, col:153> col:153 _Time 'const __time64_t *'
|-FunctionDecl 0x2049ccf4740 <D:\Microsoft Visual Studio 12.0\VC\include\wtime.inl:44:1, line:50:1> line:44:37 _wctime 'wchar_t *(const time_t *) __attribute__((cdecl))':'wchar_t *(const time_t *)' static inline
| |-ParmVarDecl 0x2049ccf4600 <col:45, col:60> col:60 used _Time 'const time_t *'
| `-CompoundStmt 0x2049ccf4900 <line:45:1, line:50:1>
|   `-ReturnStmt 0x2049ccf48f0 <line:48:5, col:27>
|     `-CallExpr 0x2049ccf48b0 <col:12, col:27> 'wchar_t *'
|       |-ImplicitCastExpr 0x2049ccf4898 <col:12> 'wchar_t *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2049ccf4800 <col:12> 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)' Function 0x2049cceff90 '_wctime64' 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)'
|       `-ImplicitCastExpr 0x2049ccf48d8 <col:22> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x2049ccf4820 <col:22> 'const time_t *' lvalue ParmVar 0x2049ccf4600 '_Time' 'const time_t *'
|-FunctionDecl 0x2049ccf4bb0 <line:52:1, line:55:1> line:52:35 _wctime_s 'errno_t (wchar_t *, size_t, const time_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const time_t *)' static inline
| |-ParmVarDecl 0x2049ccf4928 <col:97, col:106> col:106 used _Buffer 'wchar_t *'
| |-ParmVarDecl 0x2049ccf49a0 <col:115, col:122> col:122 used _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccf4a18 <col:136, col:151> col:151 used _Time 'const time_t *'
| `-CompoundStmt 0x2049ccf4e00 <line:53:1, line:55:1>
|   `-ReturnStmt 0x2049ccf4df0 <line:54:5, col:52>
|     `-CallExpr 0x2049ccf4d70 <col:12, col:52> 'errno_t':'int'
|       |-ImplicitCastExpr 0x2049ccf4d58 <col:12> 'errno_t (*)(wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2049ccf4c80 <col:12> 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)' Function 0x2049ccf0440 '_wctime64_s' 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)'
|       |-ImplicitCastExpr 0x2049ccf4da8 <col:24> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2049ccf4ca0 <col:24> 'wchar_t *' lvalue ParmVar 0x2049ccf4928 '_Buffer' 'wchar_t *'
|       |-ImplicitCastExpr 0x2049ccf4dc0 <col:33> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x2049ccf4cc0 <col:33> 'size_t':'unsigned long long' lvalue ParmVar 0x2049ccf49a0 '_SizeInWords' 'size_t':'unsigned long long'
|       `-ImplicitCastExpr 0x2049ccf4dd8 <col:47> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x2049ccf4ce0 <col:47> 'const time_t *' lvalue ParmVar 0x2049ccf4a18 '_Time' 'const time_t *'
|-FunctionDecl 0x2049ccf5010 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:82:1, line:85:1> line:82:34 difftime 'double (time_t, time_t) __attribute__((cdecl))':'double (time_t, time_t)' static inline
| |-ParmVarDecl 0x2049ccf4e28 <col:43, col:50> col:50 used _Time1 'time_t':'long long'
| |-ParmVarDecl 0x2049ccf4ea0 <col:58, col:65> col:65 used _Time2 'time_t':'long long'
| `-CompoundStmt 0x2049ccf5220 <line:83:1, line:85:1>
|   `-ReturnStmt 0x2049ccf5210 <line:84:5, col:37>
|     `-CallExpr 0x2049ccf51b0 <col:12, col:37> 'double'
|       |-ImplicitCastExpr 0x2049ccf5198 <col:12> 'double (*)(__time64_t, __time64_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2049ccf50d8 <col:12> 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)' Function 0x2049ccec0a0 '_difftime64' 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)'
|       |-ImplicitCastExpr 0x2049ccf51e0 <col:24> 'time_t':'long long' <LValueToRValue>
|       | `-DeclRefExpr 0x2049ccf50f8 <col:24> 'time_t':'long long' lvalue ParmVar 0x2049ccf4e28 '_Time1' 'time_t':'long long'
|       `-ImplicitCastExpr 0x2049ccf51f8 <col:31> 'time_t':'long long' <LValueToRValue>
|         `-DeclRefExpr 0x2049ccf5118 <col:31> 'time_t':'long long' lvalue ParmVar 0x2049ccf4ea0 '_Time2' 'time_t':'long long'
|-FunctionDecl 0x2049ccf5458 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:92:1> line:86:67 ctime 'char *(const time_t *) __attribute__((cdecl))':'char *(const time_t *)' static inline
| |-ParmVarDecl 0x2049ccf5308 <col:73, col:88> col:88 used _Time 'const time_t *'
| |-CompoundStmt 0x2049ccee6f0 <line:87:1, line:92:1>
| | `-ReturnStmt 0x2049ccee6e0 <line:90:5, col:26>
| |   `-CallExpr 0x2049ccee6a0 <col:12, col:26> 'char *'
| |     |-ImplicitCastExpr 0x2049ccee688 <col:12> 'char *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x2049ccee5e8 <col:12> 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)' Function 0x2049ccec3e8 '_ctime64' 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x2049ccee6c8 <col:21> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x2049ccee608 <col:21> 'const time_t *' lvalue ParmVar 0x2049ccf5308 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x2049ccf5500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using ctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccee9a0 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:94:1, line:97:1> line:94:35 ctime_s 'errno_t (char *, size_t, const time_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const time_t *)' static inline
| |-ParmVarDecl 0x2049ccee720 <col:43, col:49> col:49 used _Buffer 'char *'
| |-ParmVarDecl 0x2049ccee798 <col:58, col:65> col:65 used _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2049ccee810 <col:79, col:94> col:94 used _Time 'const time_t *'
| `-CompoundStmt 0x2049cceebf0 <line:95:1, line:97:1>
|   `-ReturnStmt 0x2049cceebe0 <line:96:5, col:51>
|     `-CallExpr 0x2049cceeb60 <col:12, col:51> 'errno_t':'int'
|       |-ImplicitCastExpr 0x2049cceeb48 <col:12> 'errno_t (*)(char *, size_t, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2049cceea70 <col:12> 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)' Function 0x2049ccec940 '_ctime64_s' 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)'
|       |-ImplicitCastExpr 0x2049cceeb98 <col:23> 'char *' <LValueToRValue>
|       | `-DeclRefExpr 0x2049cceea90 <col:23> 'char *' lvalue ParmVar 0x2049ccee720 '_Buffer' 'char *'
|       |-ImplicitCastExpr 0x2049cceebb0 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x2049cceeab0 <col:32> 'size_t':'unsigned long long' lvalue ParmVar 0x2049ccee798 '_SizeInBytes' 'size_t':'unsigned long long'
|       `-ImplicitCastExpr 0x2049cceebc8 <col:46> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x2049cceead0 <col:46> 'const time_t *' lvalue ParmVar 0x2049ccee810 '_Time' 'const time_t *'
|-FunctionDecl 0x2049cceee38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:105:1> line:99:73 gmtime 'struct tm *(const time_t *) __attribute__((cdecl))':'struct tm *(const time_t *)' static inline
| |-ParmVarDecl 0x2049cceecd8 <col:80, col:95> col:95 used _Time 'const time_t *'
| |-CompoundStmt 0x2049ccef110 <line:100:1, line:105:1>
| | `-ReturnStmt 0x2049ccef100 <line:103:5, col:27>
| |   `-CallExpr 0x2049ccef0c0 <col:12, col:27> 'struct tm *'
| |     |-ImplicitCastExpr 0x2049ccef0a8 <col:12> 'struct tm *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x2049ccef010 <col:12> 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)' Function 0x2049ccecc68 '_gmtime64' 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x2049ccef0e8 <col:22> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x2049ccef030 <col:22> 'const time_t *' lvalue ParmVar 0x2049cceecd8 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x2049cceeee0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gmtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccef328 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:107:1, line:110:1> line:107:35 gmtime_s 'errno_t (struct tm *, const time_t *) __attribute__((cdecl))':'errno_t (struct tm *, const time_t *)' static inline
| |-ParmVarDecl 0x2049ccef150 <col:44, col:56> col:56 used _Tm 'struct tm *'
| |-ParmVarDecl 0x2049ccef1c8 <col:61, col:76> col:76 used _Time 'const time_t *'
| `-CompoundStmt 0x2049ccef530 <line:108:1, line:110:1>
|   `-ReturnStmt 0x2049ccef520 <line:109:5, col:34>
|     `-CallExpr 0x2049ccef4c0 <col:12, col:34> 'errno_t':'int'
|       |-ImplicitCastExpr 0x2049ccef4a8 <col:12> 'errno_t (*)(struct tm *, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2049ccef3f0 <col:12> 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)' Function 0x2049cced088 '_gmtime64_s' 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
|       |-ImplicitCastExpr 0x2049ccef4f0 <col:24> 'struct tm *' <LValueToRValue>
|       | `-DeclRefExpr 0x2049ccef410 <col:24> 'struct tm *' lvalue ParmVar 0x2049ccef150 '_Tm' 'struct tm *'
|       `-ImplicitCastExpr 0x2049ccef508 <col:29> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x2049ccef430 <col:29> 'const time_t *' lvalue ParmVar 0x2049ccef1c8 '_Time' 'const time_t *'
|-FunctionDecl 0x2049ccf77f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:118:1> line:112:76 localtime 'struct tm *(const time_t *) __attribute__((cdecl))':'struct tm *(const time_t *)' static inline
| |-ParmVarDecl 0x2049ccf7700 <col:86, col:101> col:101 used _Time 'const time_t *'
| |-CompoundStmt 0x2049ccf7a70 <line:113:1, line:118:1>
| | `-ReturnStmt 0x2049ccf7a60 <line:116:5, col:30>
| |   `-CallExpr 0x2049ccf7a20 <col:12, col:30> 'struct tm *'
| |     |-ImplicitCastExpr 0x2049ccf7a08 <col:12> 'struct tm *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x2049ccf79c8 <col:12> 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)' Function 0x2049cced318 '_localtime64' 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x2049ccf7a48 <col:25> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x2049ccf79e8 <col:25> 'const time_t *' lvalue ParmVar 0x2049ccf7700 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x2049ccf7898 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using localtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccf7c20 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:119:1, line:122:1> line:119:35 localtime_s 'errno_t (struct tm *, const time_t *) __attribute__((cdecl))':'errno_t (struct tm *, const time_t *)' static inline
| |-ParmVarDecl 0x2049ccf7ab0 <col:47, col:59> col:59 used _Tm 'struct tm *'
| |-ParmVarDecl 0x2049ccf7b28 <col:64, col:79> col:79 used _Time 'const time_t *'
| `-CompoundStmt 0x2049ccf7dd0 <line:120:1, line:122:1>
|   `-ReturnStmt 0x2049ccf7dc0 <line:121:5, col:37>
|     `-CallExpr 0x2049ccf7d60 <col:12, col:37> 'errno_t':'int'
|       |-ImplicitCastExpr 0x2049ccf7d48 <col:12> 'errno_t (*)(struct tm *, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2049ccf7ce8 <col:12> 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)' Function 0x2049cced700 '_localtime64_s' 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
|       |-ImplicitCastExpr 0x2049ccf7d90 <col:27> 'struct tm *' <LValueToRValue>
|       | `-DeclRefExpr 0x2049ccf7d08 <col:27> 'struct tm *' lvalue ParmVar 0x2049ccf7ab0 '_Tm' 'struct tm *'
|       `-ImplicitCastExpr 0x2049ccf7da8 <col:32> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x2049ccf7d28 <col:32> 'const time_t *' lvalue ParmVar 0x2049ccf7b28 '_Time' 'const time_t *'
|-FunctionDecl 0x2049ccf7f50 <line:123:1, line:126:1> line:123:34 mktime 'time_t (struct tm *) __attribute__((cdecl))':'time_t (struct tm *)' static inline
| |-ParmVarDecl 0x2049ccf7e10 <col:41, col:53> col:53 used _Tm 'struct tm *'
| `-CompoundStmt 0x2049ccf8110 <line:124:1, line:126:1>
|   `-ReturnStmt 0x2049ccf8100 <line:125:5, col:25>
|     `-CallExpr 0x2049ccf80c0 <col:12, col:25> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x2049ccf80a8 <col:12> '__time64_t (*)(struct tm *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2049ccf8010 <col:12> '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)' Function 0x2049cced960 '_mktime64' '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
|       `-ImplicitCastExpr 0x2049ccf80e8 <col:22> 'struct tm *' <LValueToRValue>
|         `-DeclRefExpr 0x2049ccf8030 <col:22> 'struct tm *' lvalue ParmVar 0x2049ccf7e10 '_Tm' 'struct tm *'
|-FunctionDecl 0x2049ccf8228 <line:127:1, line:130:1> line:127:34 _mkgmtime 'time_t (struct tm *) __attribute__((cdecl))':'time_t (struct tm *)' static inline
| |-ParmVarDecl 0x2049ccf8150 <col:44, col:56> col:56 used _Tm 'struct tm *'
| `-CompoundStmt 0x2049ccf8390 <line:128:1, line:130:1>
|   `-ReturnStmt 0x2049ccf8380 <line:129:5, col:27>
|     `-CallExpr 0x2049ccf8340 <col:12, col:27> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x2049ccf8328 <col:12> '__time64_t (*)(struct tm *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2049ccf82e8 <col:12> '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)' Function 0x2049ccedb20 '_mkgmtime64' '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
|       `-ImplicitCastExpr 0x2049ccf8368 <col:24> 'struct tm *' <LValueToRValue>
|         `-DeclRefExpr 0x2049ccf8308 <col:24> 'struct tm *' lvalue ParmVar 0x2049ccf8150 '_Tm' 'struct tm *'
|-FunctionDecl 0x2049ccf8530 <line:131:1, line:134:1> line:131:34 time 'time_t (time_t *) __attribute__((cdecl))':'time_t (time_t *)' static inline
| |-ParmVarDecl 0x2049ccf83e8 <col:39, col:48> col:48 used _Time 'time_t *'
| `-CompoundStmt 0x2049ccf36b0 <line:132:1, line:134:1>
|   `-ReturnStmt 0x2049ccf36a0 <line:133:5, col:25>
|     `-CallExpr 0x2049ccf3660 <col:12, col:25> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x2049ccf3648 <col:12> '__time64_t (*)(__time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2049ccf85f0 <col:12> '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)' Function 0x2049ccedd90 '_time64' '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)'
|       `-ImplicitCastExpr 0x2049ccf3688 <col:20> 'time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x2049ccf8610 <col:20> 'time_t *' lvalue ParmVar 0x2049ccf83e8 '_Time' 'time_t *'
|-VarDecl 0x2049ccf37a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:291:67> col:67 daylight 'int' extern
| `-DeprecatedAttr 0x2049ccf3808 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_daylight instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x2049ccf3a10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:292:68> col:68 timezone 'long' extern
| `-DeprecatedAttr 0x2049ccf3a78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_timezone instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x2049ccf3d10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:293:76> col:68 tzname 'char *[2]' extern
| `-DeprecatedAttr 0x2049ccf3d78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_tzname instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2049ccf4010 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:297:63> col:53 tzset 'void (void) __attribute__((cdecl))':'void (void)'
| `-DeprecatedAttr 0x2049ccf40b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tzset. See online help for details." ""
|-FunctionDecl 0x2049ccf4450 <.//openssl//file_jk/before\crypto\bn/bn_lcl.h:220:1, line:221:37> line:220:10 invalid bn_mul_add_words 'int (int *, const int *, int, int)'
| |-ParmVarDecl 0x2049ccf41d8 <col:27, col:37> col:37 invalid rp 'int *'
| |-ParmVarDecl 0x2049ccf4258 <col:41, col:57> col:57 invalid ap 'const int *'
| |-ParmVarDecl 0x2049ccf42d8 <col:61, col:65> col:65 num 'int'
| `-ParmVarDecl 0x2049ccf4358 <line:221:27, col:36> col:36 invalid w 'int'
|-FunctionDecl 0x2049ccfd840 <line:222:1, col:76> col:10 invalid bn_mul_words 'int (int *, const int *, int, int)'
| |-ParmVarDecl 0x2049ccf4528 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x2049ccfd690 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x2049ccfd710 <col:57, col:61> col:61 num 'int'
| `-ParmVarDecl 0x2049ccfd790 <col:66, col:75> col:75 invalid w 'int'
|-FunctionDecl 0x2049ccfdaf8 <line:223:1, col:60> col:6 invalid bn_sqr_words 'void (int *, const int *, int)'
| |-ParmVarDecl 0x2049ccfd918 <col:19, col:29> col:29 invalid rp 'int *'
| |-ParmVarDecl 0x2049ccfd998 <col:33, col:49> col:49 invalid ap 'const int *'
| `-ParmVarDecl 0x2049ccfda18 <col:53, col:57> col:57 num 'int'
|-FunctionDecl 0x2049ccfddb0 <line:224:1, col:57> col:10 invalid bn_div_words 'int (int, int, int)'
| |-ParmVarDecl 0x2049ccfdbc8 <col:23, col:32> col:32 invalid h 'int'
| |-ParmVarDecl 0x2049ccfdc48 <col:35, col:44> col:44 invalid l 'int'
| `-ParmVarDecl 0x2049ccfdcc8 <col:47, col:56> col:56 invalid d 'int'
|-FunctionDecl 0x2049ccfe100 <line:225:1, line:226:30> line:225:10 invalid bn_add_words 'int (int *, const int *, const int *, int)'
| |-ParmVarDecl 0x2049ccfde80 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x2049ccfdf00 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x2049ccfdf80 <col:57, col:73> col:73 invalid bp 'const int *'
| `-ParmVarDecl 0x2049ccfe000 <line:226:23, col:27> col:27 num 'int'
|-FunctionDecl 0x2049ccfe408 <line:227:1, line:228:30> line:227:10 invalid bn_sub_words 'int (int *, const int *, const int *, int)'
| |-ParmVarDecl 0x2049ccfe1d8 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x2049ccfe258 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x2049ccfe2d8 <col:57, col:73> col:73 invalid bp 'const int *'
| `-ParmVarDecl 0x2049ccfe358 <line:228:23, col:27> col:27 num 'int'
|-RecordDecl 0x2049ccfe4c8 <line:230:1, line:238:1> line:230:8 invalid struct bignum_st definition
| |-FieldDecl 0x2049ccfe598 <line:231:5, col:15> col:15 invalid d 'int *'
| |-FieldDecl 0x2049ccfe608 <line:233:5, col:9> col:9 top 'int'
| |-FieldDecl 0x2049ccfb670 <line:235:5, col:9> col:9 dmax 'int'
| |-FieldDecl 0x2049ccfb6e0 <line:236:5, col:9> col:9 neg 'int'
| `-FieldDecl 0x2049ccfb750 <line:237:5, col:9> col:9 flags 'int'
|-RecordDecl 0x2049ccfb7a8 <line:241:1, line:252:1> line:241:8 invalid struct bn_mont_ctx_st definition
| |-FieldDecl 0x2049ccfb878 <line:242:5, col:9> col:9 ri 'int'
| |-FieldDecl 0x2049ccfb8e8 <line:243:5, col:12> col:12 invalid RR 'int'
| |-FieldDecl 0x2049ccfb958 <line:245:5, col:12> col:12 invalid N 'int'
| |-FieldDecl 0x2049ccfb9c8 <line:246:5, col:12> col:12 invalid Ni 'int'
| |-FieldDecl 0x2049ccfbac0 <line:248:5, <invalid sloc>> col:14 invalid n0 'int [2]'
| `-FieldDecl 0x2049ccfbb30 <line:251:5, col:9> col:9 flags 'int'
|-RecordDecl 0x2049ccfbb88 <line:258:1, line:264:1> line:258:8 invalid struct bn_recp_ctx_st definition
| |-FieldDecl 0x2049ccfbc58 <line:259:5, col:12> col:12 invalid N 'int'
| |-FieldDecl 0x2049ccfbcc8 <line:260:5, col:12> col:12 invalid Nr 'int'
| |-FieldDecl 0x2049ccfbd38 <line:261:5, col:9> col:9 num_bits 'int'
| |-FieldDecl 0x2049ccfbda8 <line:262:5, col:9> col:9 shift 'int'
| `-FieldDecl 0x2049ccfbe18 <line:263:5, col:9> col:9 flags 'int'
|-RecordDecl 0x2049ccfbe70 <line:267:1, line:276:1> line:267:8 struct bn_gencb_st definition
| |-FieldDecl 0x2049ccfbf48 <line:268:5, col:18> col:18 ver 'unsigned int'
| |-FieldDecl 0x2049ccfbfb8 <line:269:5, col:11> col:11 arg 'void *'
| |-RecordDecl 0x2049ccfc010 <line:270:5, line:275:5> line:270:5 union definition
| | |-FieldDecl 0x2049ccfc360 <line:272:9, col:39> col:16 cb_1 'void (*)(int, int, void *)'
| | `-FieldDecl 0x2049ccfa660 <line:274:9, col:42> col:15 cb_2 'int (*)(int, int, int *)'
| `-FieldDecl 0x2049ccfa718 <line:270:5, line:275:7> col:7 cb 'union (anonymous union at .//openssl//file_jk/before\crypto\bn/bn_lcl.h:270:5)':'union bn_gencb_st::(anonymous at .//openssl//file_jk/before\crypto\bn/bn_lcl.h:270:5)'
|-FunctionDecl 0x2049ccfa8a8 <line:649:1, col:40> col:6 invalid BN_RECP_CTX_init 'void (int *)'
| `-ParmVarDecl 0x2049ccfa7e8 <col:23, col:36> col:36 invalid recp 'int *'
|-FunctionDecl 0x2049ccfa9f8 <line:650:1, col:39> col:6 invalid BN_MONT_CTX_init 'void (int *)'
| `-ParmVarDecl 0x2049ccfa968 <col:23, col:36> col:36 invalid ctx 'int *'
|-FunctionDecl 0x2049ccfab48 <line:652:1, col:23> col:6 invalid bn_init 'void (int *)'
| `-ParmVarDecl 0x2049ccfaab8 <col:14, col:22> col:22 invalid a 'int *'
|-FunctionDecl 0x2049ccfaf08 <line:653:1, col:73> col:6 invalid bn_mul_normal 'void (int *, int *, int, int *, int)'
| |-ParmVarDecl 0x2049ccfac08 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x2049ccfac88 <col:33, col:43> col:43 invalid a 'int *'
| |-ParmVarDecl 0x2049ccfad08 <col:46, col:50> col:50 na 'int'
| |-ParmVarDecl 0x2049ccfad88 <col:54, col:64> col:64 invalid b 'int *'
| `-ParmVarDecl 0x2049ccfae08 <col:67, col:71> col:71 nb 'int'
|-FunctionDecl 0x2049ccfb1c8 <line:654:1, col:57> col:6 invalid bn_mul_comba8 'void (int *, int *, int *)'
| |-ParmVarDecl 0x2049ccfafe8 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x2049ccfb068 <col:33, col:43> col:43 invalid a 'int *'
| `-ParmVarDecl 0x2049ccfb0e8 <col:46, col:56> col:56 invalid b 'int *'
|-FunctionDecl 0x2049ccfb438 <line:655:1, col:57> col:6 invalid bn_mul_comba4 'void (int *, int *, int *)'
| |-ParmVarDecl 0x2049ccfb298 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x2049ccfb318 <col:33, col:43> col:43 invalid a 'int *'
| `-ParmVarDecl 0x2049ccfb398 <col:46, col:56> col:56 invalid b 'int *'
|-FunctionDecl 0x2049ccf6798 <line:656:1, col:72> col:6 invalid bn_sqr_normal 'void (int *, const int *, int, int *)'
| |-ParmVarDecl 0x2049ccfb508 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x2049ccfb588 <col:33, col:49> col:49 invalid a 'const int *'
| |-ParmVarDecl 0x2049ccf6620 <col:52, col:56> col:56 n 'int'
| `-ParmVarDecl 0x2049ccf66a0 <col:59, col:69> col:69 invalid tmp 'int *'
|-FunctionDecl 0x2049ccf69c8 <line:657:1, col:50> col:6 invalid bn_sqr_comba8 'void (int *, const int *)'
| |-ParmVarDecl 0x2049ccf6870 <col:20, col:30> col:30 invalid r 'int *'
| `-ParmVarDecl 0x2049ccf68f0 <col:33, col:49> col:49 invalid a 'const int *'
|-FunctionDecl 0x2049ccf6ba8 <line:658:1, col:50> col:6 invalid bn_sqr_comba4 'void (int *, const int *)'
| |-ParmVarDecl 0x2049ccf6a90 <col:20, col:30> col:30 invalid r 'int *'
| `-ParmVarDecl 0x2049ccf6b10 <col:33, col:49> col:49 invalid a 'const int *'
|-FunctionDecl 0x2049ccf6e60 <line:659:1, col:61> col:5 invalid bn_cmp_words 'int (const int *, const int *, int)'
| |-ParmVarDecl 0x2049ccf6c70 <col:18, col:34> col:34 invalid a 'const int *'
| |-ParmVarDecl 0x2049ccf6cf0 <col:37, col:53> col:53 invalid b 'const int *'
| `-ParmVarDecl 0x2049ccf6d70 <col:56, col:60> col:60 n 'int'
|-FunctionDecl 0x2049ccf71b0 <line:660:1, col:75> col:5 invalid bn_cmp_part_words 'int (const int *, const int *, int, int)'
| |-ParmVarDecl 0x2049ccf6f30 <col:23, col:39> col:39 invalid a 'const int *'
| |-ParmVarDecl 0x2049ccf6fb0 <col:42, col:58> col:58 invalid b 'const int *'
| |-ParmVarDecl 0x2049ccf7030 <col:61, col:65> col:65 cl 'int'
| `-ParmVarDecl 0x2049ccf70b0 <col:69, col:73> col:73 dl 'int'
|-FunctionDecl 0x2049cd02798 <line:661:1, line:662:52> line:661:6 invalid bn_mul_recursive 'void (int *, int *, int *, int, int, int, int *)'
| |-ParmVarDecl 0x2049ccf7288 <col:23, col:33> col:33 invalid r 'int *'
| |-ParmVarDecl 0x2049ccf7308 <col:36, col:46> col:46 invalid a 'int *'
| |-ParmVarDecl 0x2049ccf7388 <col:49, col:59> col:59 invalid b 'int *'
| |-ParmVarDecl 0x2049ccf7408 <col:62, col:66> col:66 n2 'int'
| |-ParmVarDecl 0x2049ccf7488 <line:662:23, col:27> col:27 dna 'int'
| |-ParmVarDecl 0x2049ccf7508 <col:32, col:36> col:36 dnb 'int'
| `-ParmVarDecl 0x2049ccf7588 <col:41, col:51> col:51 invalid t 'int *'
|-FunctionDecl 0x2049cd02c48 <line:663:1, line:664:64> line:663:6 invalid bn_mul_part_recursive 'void (int *, int *, int *, int, int, int, int *)'
| |-ParmVarDecl 0x2049cd02888 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x2049cd02908 <col:41, col:51> col:51 invalid a 'int *'
| |-ParmVarDecl 0x2049cd02988 <col:54, col:64> col:64 invalid b 'int *'
| |-ParmVarDecl 0x2049cd02a08 <line:664:28, col:32> col:32 n 'int'
| |-ParmVarDecl 0x2049cd02a88 <col:35, col:39> col:39 tna 'int'
| |-ParmVarDecl 0x2049cd02b08 <col:44, col:48> col:48 tnb 'int'
| `-ParmVarDecl 0x2049cd02b88 <col:53, col:63> col:63 invalid t 'int *'
|-FunctionDecl 0x2049cd02f60 <line:665:1, col:74> col:6 invalid bn_sqr_recursive 'void (int *, const int *, int, int *)'
| |-ParmVarDecl 0x2049cd02d38 <col:23, col:33> col:33 invalid r 'int *'
| |-ParmVarDecl 0x2049cd02db8 <col:36, col:52> col:52 invalid a 'const int *'
| |-ParmVarDecl 0x2049cd02e38 <col:55, col:59> col:59 n2 'int'
| `-ParmVarDecl 0x2049cd02eb8 <col:63, col:73> col:73 invalid t 'int *'
|-FunctionDecl 0x2049cd032a8 <line:666:1, col:68> col:6 invalid bn_mul_low_normal 'void (int *, int *, int *, int)'
| |-ParmVarDecl 0x2049cd03038 <col:24, col:34> col:34 invalid r 'int *'
| |-ParmVarDecl 0x2049cd030b8 <col:37, col:47> col:47 invalid a 'int *'
| |-ParmVarDecl 0x2049cd03138 <col:50, col:60> col:60 invalid b 'int *'
| `-ParmVarDecl 0x2049cd031b8 <col:63, col:67> col:67 n 'int'
|-FunctionDecl 0x2049cd036f0 <line:667:1, line:668:38> line:667:6 invalid bn_mul_low_recursive 'void (int *, int *, int *, int, int *)'
| |-ParmVarDecl 0x2049cd03380 <col:27, col:37> col:37 invalid r 'int *'
| |-ParmVarDecl 0x2049cd03400 <col:40, col:50> col:50 invalid a 'int *'
| |-ParmVarDecl 0x2049cd03480 <col:53, col:63> col:63 invalid b 'int *'
| |-ParmVarDecl 0x2049cd03500 <col:66, col:70> col:70 n2 'int'
| `-ParmVarDecl 0x2049cd03580 <line:668:27, col:37> col:37 invalid t 'int *'
|-FunctionDecl 0x2049cd03b68 <line:669:1, line:670:29> line:669:6 invalid bn_mul_high 'void (int *, int *, int *, int *, int, int *)'
| |-ParmVarDecl 0x2049cd037d0 <col:18, col:28> col:28 invalid r 'int *'
| |-ParmVarDecl 0x2049cd03850 <col:31, col:41> col:41 invalid a 'int *'
| |-ParmVarDecl 0x2049cd038d0 <col:44, col:54> col:54 invalid b 'int *'
| |-ParmVarDecl 0x2049cd03950 <col:57, col:67> col:67 invalid l 'int *'
| |-ParmVarDecl 0x2049cd039d0 <col:70, col:74> col:74 n2 'int'
| `-ParmVarDecl 0x2049cd03a50 <line:670:18, col:28> col:28 invalid t 'int *'
|-FunctionDecl 0x2049cd03f60 <line:671:1, line:672:42> line:671:10 invalid bn_add_part_words 'int (int *, const int *, const int *, int, int)'
| |-ParmVarDecl 0x2049cd03c50 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x2049cd03cd0 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x2049cd03d50 <col:60, col:76> col:76 invalid b 'const int *'
| |-ParmVarDecl 0x2049cd03dd0 <line:672:28, col:32> col:32 cl 'int'
| `-ParmVarDecl 0x2049cd03e50 <col:36, col:40> col:40 dl 'int'
|-FunctionDecl 0x2049cd042f8 <line:673:1, line:674:42> line:673:10 invalid bn_sub_part_words 'int (int *, const int *, const int *, int, int)'
| |-ParmVarDecl 0x2049cd04040 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x2049cd040c0 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x2049cd04140 <col:60, col:76> col:76 invalid b 'const int *'
| |-ParmVarDecl 0x2049cd041c0 <line:674:28, col:32> col:32 cl 'int'
| `-ParmVarDecl 0x2049cd04240 <col:36, col:40> col:40 dl 'int'
|-FunctionDecl 0x2049ccff760 <line:675:1, line:676:64> line:675:5 invalid bn_mul_mont 'int (int *, const int *, const int *, const int *, const int *, int)'
| |-ParmVarDecl 0x2049cd043d8 <col:17, col:27> col:27 invalid rp 'int *'
| |-ParmVarDecl 0x2049cd04458 <col:31, col:47> col:47 invalid ap 'const int *'
| |-ParmVarDecl 0x2049cd044d8 <col:51, col:67> col:67 invalid bp 'const int *'
| |-ParmVarDecl 0x2049cd04558 <line:676:17, col:33> col:33 invalid np 'const int *'
| |-ParmVarDecl 0x2049cd045d8 <col:37, col:53> col:53 invalid n0 'const int *'
| `-ParmVarDecl 0x2049cd04658 <col:57, col:61> col:61 num 'int'
|-FunctionDecl 0x2049ccffb50 <line:678:1, line:680:38> line:678:9 invalid int_bn_mod_inverse 'int *(int *, const int *, const int *, int *, int *)'
| |-ParmVarDecl 0x2049ccff848 <col:28, col:36> col:36 invalid in 'int *'
| |-ParmVarDecl 0x2049ccff8c8 <line:679:28, col:42> col:42 invalid a 'const int *'
| |-ParmVarDecl 0x2049ccff948 <col:45, col:59> col:59 invalid n 'const int *'
| |-ParmVarDecl 0x2049ccff9c8 <col:62, col:70> col:70 invalid ctx 'int *'
| `-ParmVarDecl 0x2049ccffa48 <line:680:28, col:33> col:33 noinv 'int *'
|-FunctionDecl 0x2049ccfff40 <line:682:1, line:683:75> line:682:5 invalid bn_probable_prime_dh 'int (int *, int, const int *, const int *, int *)'
| |-ParmVarDecl 0x2049ccffc30 <col:26, col:34> col:34 invalid rnd 'int *'
| |-ParmVarDecl 0x2049ccffcb0 <col:39, col:43> col:43 bits 'int'
| |-ParmVarDecl 0x2049ccffd30 <line:683:26, col:40> col:40 invalid add 'const int *'
| |-ParmVarDecl 0x2049ccffdb0 <col:45, col:59> col:59 invalid rem 'const int *'
| `-ParmVarDecl 0x2049ccffe30 <col:64, col:72> col:72 invalid ctx 'int *'
|-FunctionDecl 0x2049cd00210 <line:684:1, col:66> col:5 invalid bn_probable_prime_dh_retry 'int (int *, int, int *)'
| |-ParmVarDecl 0x2049cd00020 <col:32, col:40> col:40 invalid rnd 'int *'
| |-ParmVarDecl 0x2049cd000a0 <col:45, col:49> col:49 bits 'int'
| `-ParmVarDecl 0x2049cd00120 <col:55, col:63> col:63 invalid ctx 'int *'
|-FunctionDecl 0x2049cd00488 <line:685:1, col:68> col:5 invalid bn_probable_prime_dh_coprime 'int (int *, int, int *)'
| |-ParmVarDecl 0x2049cd002e0 <col:34, col:42> col:42 invalid rnd 'int *'
| |-ParmVarDecl 0x2049cd00360 <col:47, col:51> col:51 bits 'int'
| `-ParmVarDecl 0x2049cd003e0 <col:57, col:65> col:65 invalid ctx 'int *'
|-VarDecl 0x2049cd00558 <line:687:1, col:20> col:20 invalid BIGNUM 'int' static
|-VarDecl 0x2049ccfe6a0 <.//openssl//file_jk/before\crypto\bn/bn_prime.h:16:1, <invalid sloc>> col:22 invalid primes 'const int [2048]' static
|-FunctionDecl 0x2049cd18e80 <.//openssl//file_jk/before\crypto\bn\bn_prime.c:24:1, line:26:37> line:24:12 invalid witness 'int (int *, const int *, const int *, const int *, int, int *, int *)' static
| |-ParmVarDecl 0x2049cd18a50 <col:20, col:28> col:28 invalid w 'int *'
| |-ParmVarDecl 0x2049cd18ad0 <col:31, col:45> col:45 invalid a 'const int *'
| |-ParmVarDecl 0x2049cd18b50 <col:48, col:62> col:62 invalid a1 'const int *'
| |-ParmVarDecl 0x2049cd18bd0 <line:25:20, col:34> col:34 invalid a1_odd 'const int *'
| |-ParmVarDecl 0x2049cd18c50 <col:42, col:46> col:46 k 'int'
| |-ParmVarDecl 0x2049cd18cd0 <col:49, col:57> col:57 invalid ctx 'int *'
| `-ParmVarDecl 0x2049cd18d50 <line:26:20, col:33> col:33 invalid mont 'int *'
|-FunctionDecl 0x2049cd19118 <line:27:1, col:63> col:12 invalid probable_prime 'int (int *, int, int *)' static
| |-ParmVarDecl 0x2049cd18f70 <col:27, col:35> col:35 invalid rnd 'int *'
| |-ParmVarDecl 0x2049cd18ff0 <col:40, col:44> col:44 bits 'int'
| `-ParmVarDecl 0x2049cd19070 <col:50, col:59> col:59 invalid mods 'int *'
|-FunctionDecl 0x2049cd194a0 <line:28:1, line:30:46> line:28:12 invalid probable_prime_dh_safe 'int (int *, int, const int *, const int *, int *)' static
| |-ParmVarDecl 0x2049cd191e8 <col:35, col:43> col:43 invalid rnd 'int *'
| |-ParmVarDecl 0x2049cd19268 <col:48, col:52> col:52 bits 'int'
| |-ParmVarDecl 0x2049cd192e8 <line:29:35, col:49> col:49 invalid add 'const int *'
| |-ParmVarDecl 0x2049cd19368 <col:54, col:68> col:68 invalid rem 'const int *'
| `-ParmVarDecl 0x2049cd193e8 <line:30:35, col:43> col:43 invalid ctx 'int *'
|-VarDecl 0x2049cd19650 <line:32:1, line:71:1> line:32:18 used prime_offsets 'const int [480]' static cinit
| `-InitListExpr 0x2049cd1f7c8 <col:39, line:71:1> 'const int [480]'
|   |-IntegerLiteral 0x2049cd196b8 <line:33:5> 'int' 13
|   |-IntegerLiteral 0x2049cd196e0 <col:9> 'int' 17
|   |-IntegerLiteral 0x2049cd19708 <col:13> 'int' 19
|   |-IntegerLiteral 0x2049cd19730 <col:17> 'int' 23
|   |-IntegerLiteral 0x2049cd19758 <col:21> 'int' 29
|   |-IntegerLiteral 0x2049cd19780 <col:25> 'int' 31
|   |-IntegerLiteral 0x2049cd197a8 <col:29> 'int' 37
|   |-IntegerLiteral 0x2049cd197d0 <col:33> 'int' 41
|   |-IntegerLiteral 0x2049cd197f8 <col:37> 'int' 43
|   |-IntegerLiteral 0x2049cd14800 <col:41> 'int' 47
|   |-IntegerLiteral 0x2049cd14828 <col:45> 'int' 53
|   |-IntegerLiteral 0x2049cd14850 <col:49> 'int' 59
|   |-IntegerLiteral 0x2049cd14878 <col:53> 'int' 61
|   |-IntegerLiteral 0x2049cd148a0 <col:57> 'int' 67
|   |-IntegerLiteral 0x2049cd148c8 <col:61> 'int' 71
|   |-IntegerLiteral 0x2049cd148f0 <col:65> 'int' 73
|   |-IntegerLiteral 0x2049cd14918 <col:69> 'int' 79
|   |-IntegerLiteral 0x2049cd14940 <col:73> 'int' 83
|   |-IntegerLiteral 0x2049cd14968 <line:34:5> 'int' 89
|   |-IntegerLiteral 0x2049cd14990 <col:9> 'int' 97
|   |-IntegerLiteral 0x2049cd149b8 <col:13> 'int' 101
|   |-IntegerLiteral 0x2049cd149e0 <col:18> 'int' 103
|   |-IntegerLiteral 0x2049cd14a08 <col:23> 'int' 107
|   |-IntegerLiteral 0x2049cd14a30 <col:28> 'int' 109
|   |-IntegerLiteral 0x2049cd14a58 <col:33> 'int' 113
|   |-IntegerLiteral 0x2049cd14a80 <col:38> 'int' 127
|   |-IntegerLiteral 0x2049cd14aa8 <col:43> 'int' 131
|   |-IntegerLiteral 0x2049cd14ad0 <col:48> 'int' 137
|   |-IntegerLiteral 0x2049cd14af8 <col:53> 'int' 139
|   |-IntegerLiteral 0x2049cd14b20 <col:58> 'int' 149
|   |-IntegerLiteral 0x2049cd14b48 <col:63> 'int' 151
|   |-IntegerLiteral 0x2049cd14b70 <col:68> 'int' 157
|   |-IntegerLiteral 0x2049cd14b98 <col:73> 'int' 163
|   |-IntegerLiteral 0x2049cd14bc0 <line:35:5> 'int' 167
|   |-IntegerLiteral 0x2049cd14be8 <col:10> 'int' 169
|   |-IntegerLiteral 0x2049cd14c10 <col:15> 'int' 173
|   |-IntegerLiteral 0x2049cd14c38 <col:20> 'int' 179
|   |-IntegerLiteral 0x2049cd14c60 <col:25> 'int' 181
|   |-IntegerLiteral 0x2049cd14c88 <col:30> 'int' 191
|   |-IntegerLiteral 0x2049cd14cb0 <col:35> 'int' 193
|   |-IntegerLiteral 0x2049cd14cd8 <col:40> 'int' 197
|   |-IntegerLiteral 0x2049cd14d00 <col:45> 'int' 199
|   |-IntegerLiteral 0x2049cd14d28 <col:50> 'int' 211
|   |-IntegerLiteral 0x2049cd14d50 <col:55> 'int' 221
|   |-IntegerLiteral 0x2049cd14d78 <col:60> 'int' 223
|   |-IntegerLiteral 0x2049cd14da0 <col:65> 'int' 227
|   |-IntegerLiteral 0x2049cd14dc8 <col:70> 'int' 229
|   |-IntegerLiteral 0x2049cd14df0 <line:36:5> 'int' 233
|   |-IntegerLiteral 0x2049cd14e18 <col:10> 'int' 239
|   |-IntegerLiteral 0x2049cd14e40 <col:15> 'int' 241
|   |-IntegerLiteral 0x2049cd14e68 <col:20> 'int' 247
|   |-IntegerLiteral 0x2049cd14e90 <col:25> 'int' 251
|   |-IntegerLiteral 0x2049cd14eb8 <col:30> 'int' 257
|   |-IntegerLiteral 0x2049cd14ee0 <col:35> 'int' 263
|   |-IntegerLiteral 0x2049cd14f08 <col:40> 'int' 269
|   |-IntegerLiteral 0x2049cd14f30 <col:45> 'int' 271
|   |-IntegerLiteral 0x2049cd14f58 <col:50> 'int' 277
|   |-IntegerLiteral 0x2049cd14f80 <col:55> 'int' 281
|   |-IntegerLiteral 0x2049cd14fa8 <col:60> 'int' 283
|   |-IntegerLiteral 0x2049cd14fd0 <col:65> 'int' 289
|   |-IntegerLiteral 0x2049cd14ff8 <col:70> 'int' 293
|   |-IntegerLiteral 0x2049cd15020 <line:37:5> 'int' 299
|   |-IntegerLiteral 0x2049cd15048 <col:10> 'int' 307
|   |-IntegerLiteral 0x2049cd15070 <col:15> 'int' 311
|   |-IntegerLiteral 0x2049cd15098 <col:20> 'int' 313
|   |-IntegerLiteral 0x2049cd150c0 <col:25> 'int' 317
|   |-IntegerLiteral 0x2049cd150e8 <col:30> 'int' 323
|   |-IntegerLiteral 0x2049cd15110 <col:35> 'int' 331
|   |-IntegerLiteral 0x2049cd15138 <col:40> 'int' 337
|   |-IntegerLiteral 0x2049cd15160 <col:45> 'int' 347
|   |-IntegerLiteral 0x2049cd15188 <col:50> 'int' 349
|   |-IntegerLiteral 0x2049cd151b0 <col:55> 'int' 353
|   |-IntegerLiteral 0x2049cd151d8 <col:60> 'int' 359
|   |-IntegerLiteral 0x2049cd15200 <col:65> 'int' 361
|   |-IntegerLiteral 0x2049cd15228 <col:70> 'int' 367
|   |-IntegerLiteral 0x2049cd15250 <line:38:5> 'int' 373
|   |-IntegerLiteral 0x2049cd15278 <col:10> 'int' 377
|   |-IntegerLiteral 0x2049cd152a0 <col:15> 'int' 379
|   |-IntegerLiteral 0x2049cd152c8 <col:20> 'int' 383
|   |-IntegerLiteral 0x2049cd152f0 <col:25> 'int' 389
|   |-IntegerLiteral 0x2049cd15318 <col:30> 'int' 391
|   |-IntegerLiteral 0x2049cd15340 <col:35> 'int' 397
|   |-IntegerLiteral 0x2049cd15368 <col:40> 'int' 401
|   |-IntegerLiteral 0x2049cd15390 <col:45> 'int' 403
|   |-IntegerLiteral 0x2049cd153b8 <col:50> 'int' 409
|   |-IntegerLiteral 0x2049cd153e0 <col:55> 'int' 419
|   |-IntegerLiteral 0x2049cd15408 <col:60> 'int' 421
|   |-IntegerLiteral 0x2049cd15430 <col:65> 'int' 431
|   |-IntegerLiteral 0x2049cd15458 <col:70> 'int' 433
|   |-IntegerLiteral 0x2049cd15480 <line:39:5> 'int' 437
|   |-IntegerLiteral 0x2049cd154a8 <col:10> 'int' 439
|   |-IntegerLiteral 0x2049cd154d0 <col:15> 'int' 443
|   |-IntegerLiteral 0x2049cd154f8 <col:20> 'int' 449
|   |-IntegerLiteral 0x2049cd15520 <col:25> 'int' 457
|   |-IntegerLiteral 0x2049cd15548 <col:30> 'int' 461
|   |-IntegerLiteral 0x2049cd15570 <col:35> 'int' 463
|   |-IntegerLiteral 0x2049cd15598 <col:40> 'int' 467
|   |-IntegerLiteral 0x2049cd155c0 <col:45> 'int' 479
|   |-IntegerLiteral 0x2049cd155e8 <col:50> 'int' 481
|   |-IntegerLiteral 0x2049cd15610 <col:55> 'int' 487
|   |-IntegerLiteral 0x2049cd15638 <col:60> 'int' 491
|   |-IntegerLiteral 0x2049cd15660 <col:65> 'int' 493
|   |-IntegerLiteral 0x2049cd15688 <col:70> 'int' 499
|   |-IntegerLiteral 0x2049cd156b0 <line:40:5> 'int' 503
|   |-IntegerLiteral 0x2049cd156d8 <col:10> 'int' 509
|   |-IntegerLiteral 0x2049cd15700 <col:15> 'int' 521
|   |-IntegerLiteral 0x2049cd15728 <col:20> 'int' 523
|   |-IntegerLiteral 0x2049cd15750 <col:25> 'int' 527
|   |-IntegerLiteral 0x2049cd15778 <col:30> 'int' 529
|   |-IntegerLiteral 0x2049cd157a0 <col:35> 'int' 533
|   |-IntegerLiteral 0x2049cd157c8 <col:40> 'int' 541
|   |-IntegerLiteral 0x2049cd19850 <col:45> 'int' 547
|   |-IntegerLiteral 0x2049cd19878 <col:50> 'int' 551
|   |-IntegerLiteral 0x2049cd198a0 <col:55> 'int' 557
|   |-IntegerLiteral 0x2049cd198c8 <col:60> 'int' 559
|   |-IntegerLiteral 0x2049cd198f0 <col:65> 'int' 563
|   |-IntegerLiteral 0x2049cd19918 <col:70> 'int' 569
|   |-IntegerLiteral 0x2049cd19940 <line:41:5> 'int' 571
|   |-IntegerLiteral 0x2049cd19968 <col:10> 'int' 577
|   |-IntegerLiteral 0x2049cd19990 <col:15> 'int' 587
|   |-IntegerLiteral 0x2049cd199b8 <col:20> 'int' 589
|   |-IntegerLiteral 0x2049cd199e0 <col:25> 'int' 593
|   |-IntegerLiteral 0x2049cd19a08 <col:30> 'int' 599
|   |-IntegerLiteral 0x2049cd19a30 <col:35> 'int' 601
|   |-IntegerLiteral 0x2049cd19a58 <col:40> 'int' 607
|   |-IntegerLiteral 0x2049cd19a80 <col:45> 'int' 611
|   |-IntegerLiteral 0x2049cd19aa8 <col:50> 'int' 613
|   |-IntegerLiteral 0x2049cd19ad0 <col:55> 'int' 617
|   |-IntegerLiteral 0x2049cd19af8 <col:60> 'int' 619
|   |-IntegerLiteral 0x2049cd19b20 <col:65> 'int' 629
|   |-IntegerLiteral 0x2049cd19b48 <col:70> 'int' 631
|   |-IntegerLiteral 0x2049cd19b70 <line:42:5> 'int' 641
|   |-IntegerLiteral 0x2049cd19b98 <col:10> 'int' 643
|   |-IntegerLiteral 0x2049cd19bc0 <col:15> 'int' 647
|   |-IntegerLiteral 0x2049cd19be8 <col:20> 'int' 653
|   |-IntegerLiteral 0x2049cd19c10 <col:25> 'int' 659
|   |-IntegerLiteral 0x2049cd19c38 <col:30> 'int' 661
|   |-IntegerLiteral 0x2049cd19c60 <col:35> 'int' 667
|   |-IntegerLiteral 0x2049cd19c88 <col:40> 'int' 673
|   |-IntegerLiteral 0x2049cd19cb0 <col:45> 'int' 677
|   |-IntegerLiteral 0x2049cd19cd8 <col:50> 'int' 683
|   |-IntegerLiteral 0x2049cd19d00 <col:55> 'int' 689
|   |-IntegerLiteral 0x2049cd19d28 <col:60> 'int' 691
|   |-IntegerLiteral 0x2049cd19d50 <col:65> 'int' 697
|   |-IntegerLiteral 0x2049cd19d78 <col:70> 'int' 701
|   |-IntegerLiteral 0x2049cd19da0 <line:43:5> 'int' 703
|   |-IntegerLiteral 0x2049cd19dc8 <col:10> 'int' 709
|   |-IntegerLiteral 0x2049cd19df0 <col:15> 'int' 713
|   |-IntegerLiteral 0x2049cd19e18 <col:20> 'int' 719
|   |-IntegerLiteral 0x2049cd19e40 <col:25> 'int' 727
|   |-IntegerLiteral 0x2049cd19e68 <col:30> 'int' 731
|   |-IntegerLiteral 0x2049cd19e90 <col:35> 'int' 733
|   |-IntegerLiteral 0x2049cd19eb8 <col:40> 'int' 739
|   |-IntegerLiteral 0x2049cd19ee0 <col:45> 'int' 743
|   |-IntegerLiteral 0x2049cd19f08 <col:50> 'int' 751
|   |-IntegerLiteral 0x2049cd19f30 <col:55> 'int' 757
|   |-IntegerLiteral 0x2049cd19f58 <col:60> 'int' 761
|   |-IntegerLiteral 0x2049cd19f80 <col:65> 'int' 767
|   |-IntegerLiteral 0x2049cd19fa8 <col:70> 'int' 769
|   |-IntegerLiteral 0x2049cd19fd0 <line:44:5> 'int' 773
|   |-IntegerLiteral 0x2049cd19ff8 <col:10> 'int' 779
|   |-IntegerLiteral 0x2049cd1a020 <col:15> 'int' 787
|   |-IntegerLiteral 0x2049cd1a048 <col:20> 'int' 793
|   |-IntegerLiteral 0x2049cd1a070 <col:25> 'int' 797
|   |-IntegerLiteral 0x2049cd1a098 <col:30> 'int' 799
|   |-IntegerLiteral 0x2049cd1a0c0 <col:35> 'int' 809
|   |-IntegerLiteral 0x2049cd1a0e8 <col:40> 'int' 811
|   |-IntegerLiteral 0x2049cd1a110 <col:45> 'int' 817
|   |-IntegerLiteral 0x2049cd1a138 <col:50> 'int' 821
|   |-IntegerLiteral 0x2049cd1a160 <col:55> 'int' 823
|   |-IntegerLiteral 0x2049cd1a188 <col:60> 'int' 827
|   |-IntegerLiteral 0x2049cd1a1b0 <col:65> 'int' 829
|   |-IntegerLiteral 0x2049cd1a1d8 <col:70> 'int' 839
|   |-IntegerLiteral 0x2049cd1a200 <line:45:5> 'int' 841
|   |-IntegerLiteral 0x2049cd1a228 <col:10> 'int' 851
|   |-IntegerLiteral 0x2049cd1a250 <col:15> 'int' 853
|   |-IntegerLiteral 0x2049cd1a278 <col:20> 'int' 857
|   |-IntegerLiteral 0x2049cd1a2a0 <col:25> 'int' 859
|   |-IntegerLiteral 0x2049cd1a2c8 <col:30> 'int' 863
|   |-IntegerLiteral 0x2049cd1a2f0 <col:35> 'int' 871
|   |-IntegerLiteral 0x2049cd1a318 <col:40> 'int' 877
|   |-IntegerLiteral 0x2049cd1a340 <col:45> 'int' 881
|   |-IntegerLiteral 0x2049cd1a368 <col:50> 'int' 883
|   |-IntegerLiteral 0x2049cd1a390 <col:55> 'int' 887
|   |-IntegerLiteral 0x2049cd1a3b8 <col:60> 'int' 893
|   |-IntegerLiteral 0x2049cd1a3e0 <col:65> 'int' 899
|   |-IntegerLiteral 0x2049cd1a408 <col:70> 'int' 901
|   |-IntegerLiteral 0x2049cd1a430 <line:46:5> 'int' 907
|   |-IntegerLiteral 0x2049cd1a458 <col:10> 'int' 911
|   |-IntegerLiteral 0x2049cd1a480 <col:15> 'int' 919
|   |-IntegerLiteral 0x2049cd1a4a8 <col:20> 'int' 923
|   |-IntegerLiteral 0x2049cd1a4d0 <col:25> 'int' 929
|   |-IntegerLiteral 0x2049cd1a4f8 <col:30> 'int' 937
|   |-IntegerLiteral 0x2049cd1a520 <col:35> 'int' 941
|   |-IntegerLiteral 0x2049cd1a548 <col:40> 'int' 943
|   |-IntegerLiteral 0x2049cd1a570 <col:45> 'int' 947
|   |-IntegerLiteral 0x2049cd1a598 <col:50> 'int' 949
|   |-IntegerLiteral 0x2049cd1a5c0 <col:55> 'int' 953
|   |-IntegerLiteral 0x2049cd1a5e8 <col:60> 'int' 961
|   |-IntegerLiteral 0x2049cd1a610 <col:65> 'int' 967
|   |-IntegerLiteral 0x2049cd1a638 <col:70> 'int' 971
|   |-IntegerLiteral 0x2049cd1a660 <line:47:5> 'int' 977
|   |-IntegerLiteral 0x2049cd1a688 <col:10> 'int' 983
|   |-IntegerLiteral 0x2049cd1a6b0 <col:15> 'int' 989
|   |-IntegerLiteral 0x2049cd1a6d8 <col:20> 'int' 991
|   |-IntegerLiteral 0x2049cd1a700 <col:25> 'int' 997
|   |-IntegerLiteral 0x2049cd1a728 <col:30> 'int' 1003
|   |-IntegerLiteral 0x2049cd1a750 <col:36> 'int' 1007
|   |-IntegerLiteral 0x2049cd1a778 <col:42> 'int' 1009
|   |-IntegerLiteral 0x2049cd1a7a0 <col:48> 'int' 1013
|   |-IntegerLiteral 0x2049cd1a7c8 <col:54> 'int' 1019
|   |-IntegerLiteral 0x2049cd1a7f0 <col:60> 'int' 1021
|   |-IntegerLiteral 0x2049cd1a818 <col:66> 'int' 1027
|   |-IntegerLiteral 0x2049cd127e0 <col:72> 'int' 1031
|   |-IntegerLiteral 0x2049cd12808 <line:48:5> 'int' 1033
|   |-IntegerLiteral 0x2049cd12830 <col:11> 'int' 1037
|   |-IntegerLiteral 0x2049cd12858 <col:17> 'int' 1039
|   |-IntegerLiteral 0x2049cd12880 <col:23> 'int' 1049
|   |-IntegerLiteral 0x2049cd128a8 <col:29> 'int' 1051
|   |-IntegerLiteral 0x2049cd128d0 <col:35> 'int' 1061
|   |-IntegerLiteral 0x2049cd128f8 <col:41> 'int' 1063
|   |-IntegerLiteral 0x2049cd12920 <col:47> 'int' 1069
|   |-IntegerLiteral 0x2049cd12948 <col:53> 'int' 1073
|   |-IntegerLiteral 0x2049cd12970 <col:59> 'int' 1079
|   |-IntegerLiteral 0x2049cd12998 <col:65> 'int' 1081
|   |-IntegerLiteral 0x2049cd129c0 <col:71> 'int' 1087
|   |-IntegerLiteral 0x2049cd129e8 <line:49:5> 'int' 1091
|   |-IntegerLiteral 0x2049cd12a10 <col:11> 'int' 1093
|   |-IntegerLiteral 0x2049cd12a38 <col:17> 'int' 1097
|   |-IntegerLiteral 0x2049cd12a60 <col:23> 'int' 1103
|   |-IntegerLiteral 0x2049cd12a88 <col:29> 'int' 1109
|   |-IntegerLiteral 0x2049cd12ab0 <col:35> 'int' 1117
|   |-IntegerLiteral 0x2049cd12ad8 <col:41> 'int' 1121
|   |-IntegerLiteral 0x2049cd12b00 <col:47> 'int' 1123
|   |-IntegerLiteral 0x2049cd12b28 <col:53> 'int' 1129
|   |-IntegerLiteral 0x2049cd12b50 <col:59> 'int' 1139
|   |-IntegerLiteral 0x2049cd12b78 <col:65> 'int' 1147
|   |-IntegerLiteral 0x2049cd12ba0 <col:71> 'int' 1151
|   |-IntegerLiteral 0x2049cd12bc8 <line:50:5> 'int' 1153
|   |-IntegerLiteral 0x2049cd12bf0 <col:11> 'int' 1157
|   |-IntegerLiteral 0x2049cd12c18 <col:17> 'int' 1159
|   |-IntegerLiteral 0x2049cd12c40 <col:23> 'int' 1163
|   |-IntegerLiteral 0x2049cd12c68 <col:29> 'int' 1171
|   |-IntegerLiteral 0x2049cd12c90 <col:35> 'int' 1181
|   |-IntegerLiteral 0x2049cd12cb8 <col:41> 'int' 1187
|   |-IntegerLiteral 0x2049cd12ce0 <col:47> 'int' 1189
|   |-IntegerLiteral 0x2049cd12d08 <col:53> 'int' 1193
|   |-IntegerLiteral 0x2049cd12d30 <col:59> 'int' 1201
|   |-IntegerLiteral 0x2049cd12d58 <col:65> 'int' 1207
|   |-IntegerLiteral 0x2049cd12d80 <col:71> 'int' 1213
|   |-IntegerLiteral 0x2049cd12da8 <line:51:5> 'int' 1217
|   |-IntegerLiteral 0x2049cd12dd0 <col:11> 'int' 1219
|   |-IntegerLiteral 0x2049cd12df8 <col:17> 'int' 1223
|   |-IntegerLiteral 0x2049cd12e20 <col:23> 'int' 1229
|   |-IntegerLiteral 0x2049cd12e48 <col:29> 'int' 1231
|   |-IntegerLiteral 0x2049cd12e70 <col:35> 'int' 1237
|   |-IntegerLiteral 0x2049cd12e98 <col:41> 'int' 1241
|   |-IntegerLiteral 0x2049cd12ec0 <col:47> 'int' 1247
|   |-IntegerLiteral 0x2049cd12ee8 <col:53> 'int' 1249
|   |-IntegerLiteral 0x2049cd12f10 <col:59> 'int' 1259
|   |-IntegerLiteral 0x2049cd12f38 <col:65> 'int' 1261
|   |-IntegerLiteral 0x2049cd12f60 <col:71> 'int' 1271
|   |-IntegerLiteral 0x2049cd12f88 <line:52:5> 'int' 1273
|   |-IntegerLiteral 0x2049cd12fb0 <col:11> 'int' 1277
|   |-IntegerLiteral 0x2049cd12fd8 <col:17> 'int' 1279
|   |-IntegerLiteral 0x2049cd13000 <col:23> 'int' 1283
|   |-IntegerLiteral 0x2049cd13028 <col:29> 'int' 1289
|   |-IntegerLiteral 0x2049cd13050 <col:35> 'int' 1291
|   |-IntegerLiteral 0x2049cd13078 <col:41> 'int' 1297
|   |-IntegerLiteral 0x2049cd130a0 <col:47> 'int' 1301
|   |-IntegerLiteral 0x2049cd130c8 <col:53> 'int' 1303
|   |-IntegerLiteral 0x2049cd130f0 <col:59> 'int' 1307
|   |-IntegerLiteral 0x2049cd13118 <col:65> 'int' 1313
|   |-IntegerLiteral 0x2049cd13140 <col:71> 'int' 1319
|   |-IntegerLiteral 0x2049cd13168 <line:53:5> 'int' 1321
|   |-IntegerLiteral 0x2049cd13190 <col:11> 'int' 1327
|   |-IntegerLiteral 0x2049cd131b8 <col:17> 'int' 1333
|   |-IntegerLiteral 0x2049cd131e0 <col:23> 'int' 1339
|   |-IntegerLiteral 0x2049cd13208 <col:29> 'int' 1343
|   |-IntegerLiteral 0x2049cd13230 <col:35> 'int' 1349
|   |-IntegerLiteral 0x2049cd13258 <col:41> 'int' 1357
|   |-IntegerLiteral 0x2049cd13280 <col:47> 'int' 1361
|   |-IntegerLiteral 0x2049cd132a8 <col:53> 'int' 1363
|   |-IntegerLiteral 0x2049cd132d0 <col:59> 'int' 1367
|   |-IntegerLiteral 0x2049cd132f8 <col:65> 'int' 1369
|   |-IntegerLiteral 0x2049cd13320 <col:71> 'int' 1373
|   |-IntegerLiteral 0x2049cd13348 <line:54:5> 'int' 1381
|   |-IntegerLiteral 0x2049cd13370 <col:11> 'int' 1387
|   |-IntegerLiteral 0x2049cd13398 <col:17> 'int' 1391
|   |-IntegerLiteral 0x2049cd133c0 <col:23> 'int' 1399
|   |-IntegerLiteral 0x2049cd133e8 <col:29> 'int' 1403
|   |-IntegerLiteral 0x2049cd13410 <col:35> 'int' 1409
|   |-IntegerLiteral 0x2049cd13438 <col:41> 'int' 1411
|   |-IntegerLiteral 0x2049cd13460 <col:47> 'int' 1417
|   |-IntegerLiteral 0x2049cd13488 <col:53> 'int' 1423
|   |-IntegerLiteral 0x2049cd134b0 <col:59> 'int' 1427
|   |-IntegerLiteral 0x2049cd134d8 <col:65> 'int' 1429
|   |-IntegerLiteral 0x2049cd13500 <col:71> 'int' 1433
|   |-IntegerLiteral 0x2049cd13528 <line:55:5> 'int' 1439
|   |-IntegerLiteral 0x2049cd13550 <col:11> 'int' 1447
|   |-IntegerLiteral 0x2049cd13578 <col:17> 'int' 1451
|   |-IntegerLiteral 0x2049cd135a0 <col:23> 'int' 1453
|   |-IntegerLiteral 0x2049cd135c8 <col:29> 'int' 1457
|   |-IntegerLiteral 0x2049cd135f0 <col:35> 'int' 1459
|   |-IntegerLiteral 0x2049cd13618 <col:41> 'int' 1469
|   |-IntegerLiteral 0x2049cd13640 <col:47> 'int' 1471
|   |-IntegerLiteral 0x2049cd13668 <col:53> 'int' 1481
|   |-IntegerLiteral 0x2049cd13690 <col:59> 'int' 1483
|   |-IntegerLiteral 0x2049cd136b8 <col:65> 'int' 1487
|   |-IntegerLiteral 0x2049cd136e0 <col:71> 'int' 1489
|   |-IntegerLiteral 0x2049cd13708 <line:56:5> 'int' 1493
|   |-IntegerLiteral 0x2049cd13730 <col:11> 'int' 1499
|   |-IntegerLiteral 0x2049cd13758 <col:17> 'int' 1501
|   |-IntegerLiteral 0x2049cd13780 <col:23> 'int' 1511
|   |-IntegerLiteral 0x2049cd137a8 <col:29> 'int' 1513
|   |-IntegerLiteral 0x2049cd1b870 <col:35> 'int' 1517
|   |-IntegerLiteral 0x2049cd1b898 <col:41> 'int' 1523
|   |-IntegerLiteral 0x2049cd1b8c0 <col:47> 'int' 1531
|   |-IntegerLiteral 0x2049cd1b8e8 <col:53> 'int' 1537
|   |-IntegerLiteral 0x2049cd1b910 <col:59> 'int' 1541
|   |-IntegerLiteral 0x2049cd1b938 <col:65> 'int' 1543
|   |-IntegerLiteral 0x2049cd1b960 <col:71> 'int' 1549
|   |-IntegerLiteral 0x2049cd1b988 <line:57:5> 'int' 1553
|   |-IntegerLiteral 0x2049cd1b9b0 <col:11> 'int' 1559
|   |-IntegerLiteral 0x2049cd1b9d8 <col:17> 'int' 1567
|   |-IntegerLiteral 0x2049cd1ba00 <col:23> 'int' 1571
|   |-IntegerLiteral 0x2049cd1ba28 <col:29> 'int' 1577
|   |-IntegerLiteral 0x2049cd1ba50 <col:35> 'int' 1579
|   |-IntegerLiteral 0x2049cd1ba78 <col:41> 'int' 1583
|   |-IntegerLiteral 0x2049cd1baa0 <col:47> 'int' 1591
|   |-IntegerLiteral 0x2049cd1bac8 <col:53> 'int' 1597
|   |-IntegerLiteral 0x2049cd1baf0 <col:59> 'int' 1601
|   |-IntegerLiteral 0x2049cd1bb18 <col:65> 'int' 1607
|   |-IntegerLiteral 0x2049cd1bb40 <col:71> 'int' 1609
|   |-IntegerLiteral 0x2049cd1bb68 <line:58:5> 'int' 1613
|   |-IntegerLiteral 0x2049cd1bb90 <col:11> 'int' 1619
|   |-IntegerLiteral 0x2049cd1bbb8 <col:17> 'int' 1621
|   |-IntegerLiteral 0x2049cd1bbe0 <col:23> 'int' 1627
|   |-IntegerLiteral 0x2049cd1bc08 <col:29> 'int' 1633
|   |-IntegerLiteral 0x2049cd1bc30 <col:35> 'int' 1637
|   |-IntegerLiteral 0x2049cd1bc58 <col:41> 'int' 1643
|   |-IntegerLiteral 0x2049cd1bc80 <col:47> 'int' 1649
|   |-IntegerLiteral 0x2049cd1bca8 <col:53> 'int' 1651
|   |-IntegerLiteral 0x2049cd1bcd0 <col:59> 'int' 1657
|   |-IntegerLiteral 0x2049cd1bcf8 <col:65> 'int' 1663
|   |-IntegerLiteral 0x2049cd1bd20 <col:71> 'int' 1667
|   |-IntegerLiteral 0x2049cd1bd48 <line:59:5> 'int' 1669
|   |-IntegerLiteral 0x2049cd1bd70 <col:11> 'int' 1679
|   |-IntegerLiteral 0x2049cd1bd98 <col:17> 'int' 1681
|   |-IntegerLiteral 0x2049cd1bdc0 <col:23> 'int' 1691
|   |-IntegerLiteral 0x2049cd1bde8 <col:29> 'int' 1693
|   |-IntegerLiteral 0x2049cd1be10 <col:35> 'int' 1697
|   |-IntegerLiteral 0x2049cd1be38 <col:41> 'int' 1699
|   |-IntegerLiteral 0x2049cd1be60 <col:47> 'int' 1703
|   |-IntegerLiteral 0x2049cd1be88 <col:53> 'int' 1709
|   |-IntegerLiteral 0x2049cd1beb0 <col:59> 'int' 1711
|   |-IntegerLiteral 0x2049cd1bed8 <col:65> 'int' 1717
|   |-IntegerLiteral 0x2049cd1bf00 <col:71> 'int' 1721
|   |-IntegerLiteral 0x2049cd1bf28 <line:60:5> 'int' 1723
|   |-IntegerLiteral 0x2049cd1bf50 <col:11> 'int' 1733
|   |-IntegerLiteral 0x2049cd1bf78 <col:17> 'int' 1739
|   |-IntegerLiteral 0x2049cd1bfa0 <col:23> 'int' 1741
|   |-IntegerLiteral 0x2049cd1bfc8 <col:29> 'int' 1747
|   |-IntegerLiteral 0x2049cd1bff0 <col:35> 'int' 1751
|   |-IntegerLiteral 0x2049cd1c018 <col:41> 'int' 1753
|   |-IntegerLiteral 0x2049cd1c040 <col:47> 'int' 1759
|   |-IntegerLiteral 0x2049cd1c068 <col:53> 'int' 1763
|   |-IntegerLiteral 0x2049cd1c090 <col:59> 'int' 1769
|   |-IntegerLiteral 0x2049cd1c0b8 <col:65> 'int' 1777
|   |-IntegerLiteral 0x2049cd1c0e0 <col:71> 'int' 1781
|   |-IntegerLiteral 0x2049cd1c108 <line:61:5> 'int' 1783
|   |-IntegerLiteral 0x2049cd1c130 <col:11> 'int' 1787
|   |-IntegerLiteral 0x2049cd1c158 <col:17> 'int' 1789
|   |-IntegerLiteral 0x2049cd1c180 <col:23> 'int' 1801
|   |-IntegerLiteral 0x2049cd1c1a8 <col:29> 'int' 1807
|   |-IntegerLiteral 0x2049cd1c1d0 <col:35> 'int' 1811
|   |-IntegerLiteral 0x2049cd1c1f8 <col:41> 'int' 1817
|   |-IntegerLiteral 0x2049cd1c220 <col:47> 'int' 1819
|   |-IntegerLiteral 0x2049cd1c248 <col:53> 'int' 1823
|   |-IntegerLiteral 0x2049cd1c270 <col:59> 'int' 1829
|   |-IntegerLiteral 0x2049cd1c298 <col:65> 'int' 1831
|   |-IntegerLiteral 0x2049cd1c2c0 <col:71> 'int' 1843
|   |-IntegerLiteral 0x2049cd1c2e8 <line:62:5> 'int' 1847
|   |-IntegerLiteral 0x2049cd1c310 <col:11> 'int' 1849
|   |-IntegerLiteral 0x2049cd1c338 <col:17> 'int' 1853
|   |-IntegerLiteral 0x2049cd1c360 <col:23> 'int' 1861
|   |-IntegerLiteral 0x2049cd1c388 <col:29> 'int' 1867
|   |-IntegerLiteral 0x2049cd1c3b0 <col:35> 'int' 1871
|   |-IntegerLiteral 0x2049cd1c3d8 <col:41> 'int' 1873
|   |-IntegerLiteral 0x2049cd1c400 <col:47> 'int' 1877
|   |-IntegerLiteral 0x2049cd1c428 <col:53> 'int' 1879
|   |-IntegerLiteral 0x2049cd1c450 <col:59> 'int' 1889
|   |-IntegerLiteral 0x2049cd1c478 <col:65> 'int' 1891
|   |-IntegerLiteral 0x2049cd1c4a0 <col:71> 'int' 1901
|   |-IntegerLiteral 0x2049cd1c4c8 <line:63:5> 'int' 1907
|   |-IntegerLiteral 0x2049cd1c4f0 <col:11> 'int' 1909
|   |-IntegerLiteral 0x2049cd1c518 <col:17> 'int' 1913
|   |-IntegerLiteral 0x2049cd1c540 <col:23> 'int' 1919
|   |-IntegerLiteral 0x2049cd1c568 <col:29> 'int' 1921
|   |-IntegerLiteral 0x2049cd1c590 <col:35> 'int' 1927
|   |-IntegerLiteral 0x2049cd1c5b8 <col:41> 'int' 1931
|   |-IntegerLiteral 0x2049cd1c5e0 <col:47> 'int' 1933
|   |-IntegerLiteral 0x2049cd1c608 <col:53> 'int' 1937
|   |-IntegerLiteral 0x2049cd1c630 <col:59> 'int' 1943
|   |-IntegerLiteral 0x2049cd1c658 <col:65> 'int' 1949
|   |-IntegerLiteral 0x2049cd1c680 <col:71> 'int' 1951
|   |-IntegerLiteral 0x2049cd1c6a8 <line:64:5> 'int' 1957
|   |-IntegerLiteral 0x2049cd1c6d0 <col:11> 'int' 1961
|   |-IntegerLiteral 0x2049cd1c6f8 <col:17> 'int' 1963
|   |-IntegerLiteral 0x2049cd1c720 <col:23> 'int' 1973
|   |-IntegerLiteral 0x2049cd1c748 <col:29> 'int' 1979
|   |-IntegerLiteral 0x2049cd1c770 <col:35> 'int' 1987
|   |-IntegerLiteral 0x2049cd1c798 <col:41> 'int' 1993
|   |-IntegerLiteral 0x2049cd1c7c0 <col:47> 'int' 1997
|   |-IntegerLiteral 0x2049cd1c7e8 <col:53> 'int' 1999
|   |-IntegerLiteral 0x2049cd1c810 <col:59> 'int' 2003
|   |-IntegerLiteral 0x2049cd1c838 <col:65> 'int' 2011
|   |-IntegerLiteral 0x2049cd218d0 <col:71> 'int' 2017
|   |-IntegerLiteral 0x2049cd218f8 <line:65:5> 'int' 2021
|   |-IntegerLiteral 0x2049cd21920 <col:11> 'int' 2027
|   |-IntegerLiteral 0x2049cd21948 <col:17> 'int' 2029
|   |-IntegerLiteral 0x2049cd21970 <col:23> 'int' 2033
|   |-IntegerLiteral 0x2049cd21998 <col:29> 'int' 2039
|   |-IntegerLiteral 0x2049cd219c0 <col:35> 'int' 2041
|   |-IntegerLiteral 0x2049cd219e8 <col:41> 'int' 2047
|   |-IntegerLiteral 0x2049cd21a10 <col:47> 'int' 2053
|   |-IntegerLiteral 0x2049cd21a38 <col:53> 'int' 2059
|   |-IntegerLiteral 0x2049cd21a60 <col:59> 'int' 2063
|   |-IntegerLiteral 0x2049cd21a88 <col:65> 'int' 2069
|   |-IntegerLiteral 0x2049cd21ab0 <col:71> 'int' 2071
|   |-IntegerLiteral 0x2049cd21ad8 <line:66:5> 'int' 2077
|   |-IntegerLiteral 0x2049cd21b00 <col:11> 'int' 2081
|   |-IntegerLiteral 0x2049cd21b28 <col:17> 'int' 2083
|   |-IntegerLiteral 0x2049cd21b50 <col:23> 'int' 2087
|   |-IntegerLiteral 0x2049cd21b78 <col:29> 'int' 2089
|   |-IntegerLiteral 0x2049cd21ba0 <col:35> 'int' 2099
|   |-IntegerLiteral 0x2049cd21bc8 <col:41> 'int' 2111
|   |-IntegerLiteral 0x2049cd21bf0 <col:47> 'int' 2113
|   |-IntegerLiteral 0x2049cd21c18 <col:53> 'int' 2117
|   |-IntegerLiteral 0x2049cd21c40 <col:59> 'int' 2119
|   |-IntegerLiteral 0x2049cd21c68 <col:65> 'int' 2129
|   |-IntegerLiteral 0x2049cd21c90 <col:71> 'int' 2131
|   |-IntegerLiteral 0x2049cd21cb8 <line:67:5> 'int' 2137
|   |-IntegerLiteral 0x2049cd21ce0 <col:11> 'int' 2141
|   |-IntegerLiteral 0x2049cd21d08 <col:17> 'int' 2143
|   |-IntegerLiteral 0x2049cd21d30 <col:23> 'int' 2147
|   |-IntegerLiteral 0x2049cd21d58 <col:29> 'int' 2153
|   |-IntegerLiteral 0x2049cd21d80 <col:35> 'int' 2159
|   |-IntegerLiteral 0x2049cd21da8 <col:41> 'int' 2161
|   |-IntegerLiteral 0x2049cd21dd0 <col:47> 'int' 2171
|   |-IntegerLiteral 0x2049cd21df8 <col:53> 'int' 2173
|   |-IntegerLiteral 0x2049cd21e20 <col:59> 'int' 2179
|   |-IntegerLiteral 0x2049cd21e48 <col:65> 'int' 2183
|   |-IntegerLiteral 0x2049cd21e70 <col:71> 'int' 2197
|   |-IntegerLiteral 0x2049cd21e98 <line:68:5> 'int' 2201
|   |-IntegerLiteral 0x2049cd21ec0 <col:11> 'int' 2203
|   |-IntegerLiteral 0x2049cd21ee8 <col:17> 'int' 2207
|   |-IntegerLiteral 0x2049cd21f10 <col:23> 'int' 2209
|   |-IntegerLiteral 0x2049cd21f38 <col:29> 'int' 2213
|   |-IntegerLiteral 0x2049cd21f60 <col:35> 'int' 2221
|   |-IntegerLiteral 0x2049cd21f88 <col:41> 'int' 2227
|   |-IntegerLiteral 0x2049cd21fb0 <col:47> 'int' 2231
|   |-IntegerLiteral 0x2049cd21fd8 <col:53> 'int' 2237
|   |-IntegerLiteral 0x2049cd22000 <col:59> 'int' 2239
|   |-IntegerLiteral 0x2049cd22028 <col:65> 'int' 2243
|   |-IntegerLiteral 0x2049cd22050 <col:71> 'int' 2249
|   |-IntegerLiteral 0x2049cd22078 <line:69:5> 'int' 2251
|   |-IntegerLiteral 0x2049cd220a0 <col:11> 'int' 2257
|   |-IntegerLiteral 0x2049cd220c8 <col:17> 'int' 2263
|   |-IntegerLiteral 0x2049cd220f0 <col:23> 'int' 2267
|   |-IntegerLiteral 0x2049cd22118 <col:29> 'int' 2269
|   |-IntegerLiteral 0x2049cd22140 <col:35> 'int' 2273
|   |-IntegerLiteral 0x2049cd22168 <col:41> 'int' 2279
|   |-IntegerLiteral 0x2049cd22190 <col:47> 'int' 2281
|   |-IntegerLiteral 0x2049cd221b8 <col:53> 'int' 2287
|   |-IntegerLiteral 0x2049cd221e0 <col:59> 'int' 2291
|   |-IntegerLiteral 0x2049cd22208 <col:65> 'int' 2293
|   |-IntegerLiteral 0x2049cd22230 <col:71> 'int' 2297
|   |-IntegerLiteral 0x2049cd22258 <line:70:5> 'int' 2309
|   `-IntegerLiteral 0x2049cd22280 <col:11> 'int' 2311
|-VarDecl 0x2049cd1b778 <line:73:1, col:39> col:18 used prime_offset_count 'const int' static cinit
| `-IntegerLiteral 0x2049cd1b7e0 <col:39> 'int' 480
|-VarDecl 0x2049cd1f8b0 <line:74:1, col:37> col:18 used prime_multiplier 'const int' static cinit
| `-IntegerLiteral 0x2049cd1f918 <col:37> 'int' 2310
|-VarDecl 0x2049cd1f970 <line:75:1, col:42> col:18 used prime_multiplier_bits 'const int' static cinit
| `-IntegerLiteral 0x2049cd1f9d8 <col:42> 'int' 11
|-VarDecl 0x2049cd1fa30 <line:77:1, col:38> col:18 used first_prime_index 'const int' static cinit
| `-IntegerLiteral 0x2049cd1fa98 <col:38> 'int' 5
|-FunctionDecl 0x2049cd1fce0 <line:79:1, line:99:1> line:79:5 invalid BN_GENCB_call 'int (int *, int, int)'
| |-ParmVarDecl 0x2049cd1faf0 <col:19, col:29> col:29 invalid cb 'int *'
| |-ParmVarDecl 0x2049cd1fb70 <col:33, col:37> col:37 used a 'int'
| |-ParmVarDecl 0x2049cd1fbf0 <col:40, col:44> col:44 used b 'int'
| `-CompoundStmt 0x2049cd20060 <line:80:1, line:99:1>
|   |-IfStmt 0x2049cd1fe00 <line:82:5, line:83:16>
|   | |-OpaqueValueExpr 0x2049cd1fde8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2049cd1fdd8 <col:9, col:16>
|   |   `-IntegerLiteral 0x2049cd1fdb0 <col:16> 'int' 1
|   `-ReturnStmt 0x2049cd20050 <line:98:5, col:12>
|     `-IntegerLiteral 0x2049cd20028 <col:12> 'int' 0
|-FunctionDecl 0x2049cd20430 <line:101:1, line:192:1> line:101:5 invalid BN_generate_prime_ex 'int (int *, int, int, const int *, const int *, int *)'
| |-ParmVarDecl 0x2049cd20098 <col:26, col:34> col:34 invalid ret 'int *'
| |-ParmVarDecl 0x2049cd20118 <col:39, col:43> col:43 used bits 'int'
| |-ParmVarDecl 0x2049cd20198 <col:49, col:53> col:53 used safe 'int'
| |-ParmVarDecl 0x2049cd20218 <line:102:26, col:40> col:40 invalid add 'const int *'
| |-ParmVarDecl 0x2049cd20298 <col:45, col:59> col:59 invalid rem 'const int *'
| |-ParmVarDecl 0x2049cd20318 <col:64, col:74> col:74 invalid cb 'int *'
| `-CompoundStmt 0x2049cd22b28 <line:103:1, line:192:1>
|   |-DeclStmt 0x2049cd205c0 <line:105:5, col:18>
|   | `-VarDecl 0x2049cd20530 <col:5, col:17> col:9 used found 'int' cinit
|   |   `-IntegerLiteral 0x2049cd20598 <col:17> 'int' 0
|   |-DeclStmt 0x2049cd207a0 <line:106:5, col:21>
|   | |-VarDecl 0x2049cd205f0 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x2049cd20670 <col:5, col:12> col:12 used j 'int'
|   | `-VarDecl 0x2049cd206f0 <col:5, col:20> col:15 used c1 'int' cinit
|   |   `-IntegerLiteral 0x2049cd20758 <col:20> 'int' 0
|   |-DeclStmt 0x2049cd1db20 <line:109:5, col:48>
|   | `-VarDecl 0x2049cd1d8c8 <col:5, col:47> col:9 used checks 'int' cinit
|   |   `-CallExpr 0x2049cd1dae0 <col:18, col:47> 'int'
|   |     |-ImplicitCastExpr 0x2049cd1dac8 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2049cd1da48 <col:18> 'int ()' Function 0x2049cd1d980 'BN_prime_checks_for_size' 'int ()'
|   |     `-ImplicitCastExpr 0x2049cd1db08 <col:43> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x2049cd1da68 <col:43> 'int' lvalue ParmVar 0x2049cd20118 'bits' 'int'
|   |-IfStmt 0x2049cd1de90 <line:111:5, line:119:5> has_else
|   | |-BinaryOperator 0x2049cd1db98 <line:111:9, col:16> 'int' '<'
|   | | |-ImplicitCastExpr 0x2049cd1db80 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2049cd1db38 <col:9> 'int' lvalue ParmVar 0x2049cd20118 'bits' 'int'
|   | | `-IntegerLiteral 0x2049cd1db58 <col:16> 'int' 2
|   | |-CompoundStmt 0x2049cd1dd00 <col:19, line:115:5>
|   | | `-ReturnStmt 0x2049cd1dcf0 <line:114:9, col:16>
|   | |   `-IntegerLiteral 0x2049cd1dcc8 <col:16> 'int' 0
|   | `-IfStmt 0x2049cd1de78 <line:115:12, line:119:5>
|   |   |-BinaryOperator 0x2049cd1dde8 <line:115:16, col:29> 'int' '&&'
|   |   | |-BinaryOperator 0x2049cd1dd78 <col:16, col:24> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x2049cd1dd60 <col:16> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2049cd1dd18 <col:16> 'int' lvalue ParmVar 0x2049cd20118 'bits' 'int'
|   |   | | `-IntegerLiteral 0x2049cd1dd38 <col:24> 'int' 2
|   |   | `-ImplicitCastExpr 0x2049cd1ddd0 <col:29> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2049cd1dd98 <col:29> 'int' lvalue ParmVar 0x2049cd20198 'safe' 'int'
|   |   `-CompoundStmt 0x2049cd1de60 <col:35, line:119:5>
|   |     `-ReturnStmt 0x2049cd1de50 <line:118:9, col:16>
|   |       `-IntegerLiteral 0x2049cd1de28 <col:16> 'int' 0
|   |-IfStmt 0x2049cd1e0f8 <line:122:5, line:123:14>
|   | |-OpaqueValueExpr 0x2049cd1e0e0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2049cd1e0c8 <col:9, col:14> 'err' 0x2049cd1e078
|   |-IfStmt 0x2049cd1e310 <line:126:5, line:127:14>
|   | |-OpaqueValueExpr 0x2049cd1e2f8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2049cd1e2e0 <col:9, col:14> 'err' 0x2049cd1e078
|   |-IfStmt 0x2049cd1e578 <line:130:5, line:131:14>
|   | |-OpaqueValueExpr 0x2049cd1e560 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2049cd1e548 <col:9, col:14> 'err' 0x2049cd1e078
|   |-LabelStmt 0x2049cd20910 <line:132:2, line:145:5> 'loop'
|   | `-IfStmt 0x2049cd1e828 <line:134:5, line:145:5> has_else
|   |   |-OpaqueValueExpr 0x2049cd1e810 <<invalid sloc>> '_Bool'
|   |   |-CompoundStmt 0x2049cd1e680 <line:134:22, line:137:5>
|   |   | `-IfStmt 0x2049cd1e668 <line:135:9, line:136:18>
|   |   |   |-OpaqueValueExpr 0x2049cd1e650 <<invalid sloc>> '_Bool'
|   |   |   `-GotoStmt 0x2049cd1e638 <col:13, col:18> 'err' 0x2049cd1e078
|   |   `-CompoundStmt 0x2049cd1e7f8 <line:137:12, line:145:5>
|   |     `-IfStmt 0x2049cd1e7d0 <line:138:9, line:144:9> has_else
|   |       |-ImplicitCastExpr 0x2049cd1e6b8 <line:138:13> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x2049cd1e698 <col:13> 'int' lvalue ParmVar 0x2049cd20198 'safe' 'int'
|   |       |-CompoundStmt 0x2049cd1e738 <col:19, line:141:9>
|   |       | `-IfStmt 0x2049cd1e720 <line:139:13, line:140:22>
|   |       |   |-OpaqueValueExpr 0x2049cd1e708 <<invalid sloc>> '_Bool'
|   |       |   `-GotoStmt 0x2049cd1e6f0 <col:17, col:22> 'err' 0x2049cd1e078
|   |       `-CompoundStmt 0x2049cd1e7b8 <line:141:16, line:144:9>
|   |         `-IfStmt 0x2049cd1e7a0 <line:142:13, line:143:22>
|   |           |-OpaqueValueExpr 0x2049cd1e788 <<invalid sloc>> '_Bool'
|   |           `-GotoStmt 0x2049cd1e770 <col:17, col:22> 'err' 0x2049cd1e078
|   |-IfStmt 0x2049cd209d0 <line:147:5, line:149:14>
|   | |-OpaqueValueExpr 0x2049cd209b8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2049cd209a0 <col:9, col:14> 'err' 0x2049cd1e078
|   |-IfStmt 0x2049cd215a8 <line:151:5, line:182:5> has_else
|   | |-UnaryOperator 0x2049cd20a20 <line:151:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x2049cd20a08 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2049cd209e8 <col:10> 'int' lvalue ParmVar 0x2049cd20198 'safe' 'int'
|   | |-CompoundStmt 0x2049cd20d58 <col:16, line:157:5>
|   | | |-IfStmt 0x2049cd20c90 <line:153:9, line:154:18>
|   | | | |-BinaryOperator 0x2049cd20c58 <line:153:13, col:19> 'int' '=='
|   | | | | |-ImplicitCastExpr 0x2049cd20c40 <col:13> 'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x2049cd20be0 <col:13> 'int' lvalue Var 0x2049cd205f0 'i' 'int'
|   | | | | `-UnaryOperator 0x2049cd20c28 <col:18, col:19> 'int' prefix '-'
|   | | | |   `-IntegerLiteral 0x2049cd20c00 <col:19> 'int' 1
|   | | | `-GotoStmt 0x2049cd20c78 <line:154:13, col:18> 'err' 0x2049cd1e078
|   | | `-IfStmt 0x2049cd20d40 <line:155:9, line:156:18>
|   | |   |-BinaryOperator 0x2049cd20d08 <line:155:13, col:18> 'int' '=='
|   | |   | |-ImplicitCastExpr 0x2049cd20cf0 <col:13> 'int' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x2049cd20ca8 <col:13> 'int' lvalue Var 0x2049cd205f0 'i' 'int'
|   | |   | `-IntegerLiteral 0x2049cd20cc8 <col:18> 'int' 0
|   | |   `-GotoStmt 0x2049cd20d28 <line:156:13, col:18> 'loop' 0x2049cd208c0
|   | `-CompoundStmt 0x2049cd21588 <line:157:12, line:182:5>
|   |   |-IfStmt 0x2049cd20eb8 <line:162:9, line:163:18>
|   |   | |-OpaqueValueExpr 0x2049cd20ea0 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x2049cd20e88 <col:13, col:18> 'err' 0x2049cd1e078
|   |   `-ForStmt 0x2049cd21550 <line:165:9, line:181:9>
|   |     |-BinaryOperator 0x2049cd20f18 <line:165:14, col:18> 'int' '='
|   |     | |-DeclRefExpr 0x2049cd20ed0 <col:14> 'int' lvalue Var 0x2049cd205f0 'i' 'int'
|   |     | `-IntegerLiteral 0x2049cd20ef0 <col:18> 'int' 0
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x2049cd20fa8 <col:21, col:25> 'int' '<'
|   |     | |-ImplicitCastExpr 0x2049cd20f78 <col:21> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2049cd20f38 <col:21> 'int' lvalue Var 0x2049cd205f0 'i' 'int'
|   |     | `-ImplicitCastExpr 0x2049cd20f90 <col:25> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2049cd20f58 <col:25> 'int' lvalue Var 0x2049cd1d8c8 'checks' 'int'
|   |     |-UnaryOperator 0x2049cd20fe8 <col:33, col:34> 'int' postfix '++'
|   |     | `-DeclRefExpr 0x2049cd20fc8 <col:33> 'int' lvalue Var 0x2049cd205f0 'i' 'int'
|   |     `-CompoundStmt 0x2049cd21518 <col:38, line:181:9>
|   |       |-IfStmt 0x2049cd21158 <line:167:13, line:168:22>
|   |       | |-BinaryOperator 0x2049cd21120 <line:167:17, col:23> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x2049cd21108 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x2049cd210a8 <col:17> 'int' lvalue Var 0x2049cd20670 'j' 'int'
|   |       | | `-UnaryOperator 0x2049cd210f0 <col:22, col:23> 'int' prefix '-'
|   |       | |   `-IntegerLiteral 0x2049cd210c8 <col:23> 'int' 1
|   |       | `-GotoStmt 0x2049cd21140 <line:168:17, col:22> 'err' 0x2049cd1e078
|   |       |-IfStmt 0x2049cd21208 <line:169:13, line:170:22>
|   |       | |-BinaryOperator 0x2049cd211d0 <line:169:17, col:22> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x2049cd211b8 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x2049cd21170 <col:17> 'int' lvalue Var 0x2049cd20670 'j' 'int'
|   |       | | `-IntegerLiteral 0x2049cd21190 <col:22> 'int' 0
|   |       | `-GotoStmt 0x2049cd211f0 <line:170:17, col:22> 'loop' 0x2049cd208c0
|   |       |-IfStmt 0x2049cd21360 <line:173:13, line:174:22>
|   |       | |-BinaryOperator 0x2049cd21328 <line:173:17, col:23> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x2049cd21310 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x2049cd212b0 <col:17> 'int' lvalue Var 0x2049cd20670 'j' 'int'
|   |       | | `-UnaryOperator 0x2049cd212f8 <col:22, col:23> 'int' prefix '-'
|   |       | |   `-IntegerLiteral 0x2049cd212d0 <col:23> 'int' 1
|   |       | `-GotoStmt 0x2049cd21348 <line:174:17, col:22> 'err' 0x2049cd1e078
|   |       |-IfStmt 0x2049cd21410 <line:175:13, line:176:22>
|   |       | |-BinaryOperator 0x2049cd213d8 <line:175:17, col:22> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x2049cd213c0 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x2049cd21378 <col:17> 'int' lvalue Var 0x2049cd20670 'j' 'int'
|   |       | | `-IntegerLiteral 0x2049cd21398 <col:22> 'int' 0
|   |       | `-GotoStmt 0x2049cd213f8 <line:176:17, col:22> 'loop' 0x2049cd208c0
|   |       `-IfStmt 0x2049cd21500 <line:178:13, line:179:22>
|   |         |-OpaqueValueExpr 0x2049cd214e8 <<invalid sloc>> '_Bool'
|   |         `-GotoStmt 0x2049cd214d0 <col:17, col:22> 'err' 0x2049cd1e078
|   |-BinaryOperator 0x2049cd21630 <line:184:5, col:13> 'int' '='
|   | |-DeclRefExpr 0x2049cd215d0 <col:5> 'int' lvalue Var 0x2049cd20530 'found' 'int'
|   | `-IntegerLiteral 0x2049cd21608 <col:13> 'int' 1
|   |-LabelStmt 0x2049cd21768 <line:185:2, col:5> 'err'
|   | `-NullStmt 0x2049cd21760 <col:5>
|   |-NullStmt 0x2049cd22ad8 <line:190:22>
|   `-ReturnStmt 0x2049cd22b18 <line:191:5, col:12>
|     `-ImplicitCastExpr 0x2049cd22b00 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2049cd22ae0 <col:12> 'int' lvalue Var 0x2049cd20530 'found' 'int'
|-FunctionDecl 0x2049cd22e40 <line:194:1, line:198:1> line:194:5 invalid BN_is_prime_ex 'int (const int *, int, int *, int *)'
| |-ParmVarDecl 0x2049cd22bc0 <col:20, col:34> col:34 invalid a 'const int *'
| |-ParmVarDecl 0x2049cd22c40 <col:37, col:41> col:41 used checks 'int'
| |-ParmVarDecl 0x2049cd22cc0 <col:49, col:57> col:57 invalid ctx_passed 'int *'
| |-ParmVarDecl 0x2049cd22d40 <line:195:20, col:30> col:30 invalid cb 'int *'
| `-CompoundStmt 0x2049cd22f98 <line:196:1, line:198:1>
|-FunctionDecl 0x2049cd232d0 <line:200:1, line:294:1> line:200:5 invalid BN_is_prime_fasttest_ex 'int (const int *, int, int *, int, int *)'
| |-ParmVarDecl 0x2049cd22fc0 <col:29, col:43> col:43 invalid a 'const int *'
| |-ParmVarDecl 0x2049cd23040 <col:46, col:50> col:50 used checks 'int'
| |-ParmVarDecl 0x2049cd230c0 <col:58, col:66> col:66 invalid ctx_passed 'int *'
| |-ParmVarDecl 0x2049cd23140 <line:201:29, col:33> col:33 used do_trial_division 'int'
| |-ParmVarDecl 0x2049cd231c0 <col:52, col:62> col:62 invalid cb 'int *'
| `-CompoundStmt 0x2049cd24c40 <line:202:1, line:294:1>
|   |-DeclStmt 0x2049cd23590 <line:203:5, col:23>
|   | |-VarDecl 0x2049cd233c8 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x2049cd23448 <col:5, col:12> col:12 used j 'int'
|   | `-VarDecl 0x2049cd234c8 <col:5, col:22> col:15 used ret 'int' cinit
|   |   `-UnaryOperator 0x2049cd23558 <col:21, col:22> 'int' prefix '-'
|   |     `-IntegerLiteral 0x2049cd23530 <col:22> 'int' 1
|   |-DeclStmt 0x2049cd23628 <line:204:5, col:10>
|   | `-VarDecl 0x2049cd235c0 <col:5, col:9> col:9 used k 'int'
|   |-IfStmt 0x2049cd23a88 <line:209:5, line:210:16>
|   | |-OpaqueValueExpr 0x2049cd23a70 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2049cd23a60 <col:9, col:16>
|   |   `-IntegerLiteral 0x2049cd23a38 <col:16> 'int' 0
|   |-IfStmt 0x2049cd24270 <line:219:5, line:229:5>
|   | |-ImplicitCastExpr 0x2049cd23ea8 <line:219:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x2049cd23e70 <col:9> 'int' lvalue ParmVar 0x2049cd23140 'do_trial_division' 'int'
|   | `-CompoundStmt 0x2049cd24250 <col:28, line:229:5>
|   |   |-ForStmt 0x2049cd24168 <line:220:9, line:226:9>
|   |   | |-BinaryOperator 0x2049cd23f20 <line:220:14, col:18> 'int' '='
|   |   | | |-DeclRefExpr 0x2049cd23ec0 <col:14> 'int' lvalue Var 0x2049cd233c8 'i' 'int'
|   |   | | `-IntegerLiteral 0x2049cd23ef8 <col:18> 'int' 1
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x2049cd23fa0 <col:21, .//openssl//file_jk/before\crypto\bn/bn_prime.h:14:20> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x2049cd23f88 <.//openssl//file_jk/before\crypto\bn\bn_prime.c:220:21> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2049cd23f40 <col:21> 'int' lvalue Var 0x2049cd233c8 'i' 'int'
|   |   | | `-IntegerLiteral 0x2049cd23f60 <.//openssl//file_jk/before\crypto\bn/bn_prime.h:14:20> 'int' 2048
|   |   | |-UnaryOperator 0x2049cd23fe0 <.//openssl//file_jk/before\crypto\bn\bn_prime.c:220:36, col:37> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x2049cd23fc0 <col:36> 'int' lvalue Var 0x2049cd233c8 'i' 'int'
|   |   | `-CompoundStmt 0x2049cd24148 <col:41, line:226:9>
|   |   |   |-IfStmt 0x2049cd240a0 <line:222:13, line:223:22>
|   |   |   | |-OpaqueValueExpr 0x2049cd24088 <<invalid sloc>> '_Bool'
|   |   |   | `-GotoStmt 0x2049cd24070 <col:17, col:22> 'err' 0x2049cd24020
|   |   |   `-IfStmt 0x2049cd24130 <line:224:13, line:225:24>
|   |   |     |-OpaqueValueExpr 0x2049cd24118 <<invalid sloc>> '_Bool'
|   |   |     `-ReturnStmt 0x2049cd24108 <col:17, col:24>
|   |   |       `-IntegerLiteral 0x2049cd240e0 <col:24> 'int' 0
|   |   `-IfStmt 0x2049cd24238 <line:227:9, line:228:18>
|   |     |-OpaqueValueExpr 0x2049cd24220 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x2049cd24208 <col:13, col:18> 'err' 0x2049cd24020
|   |-IfStmt 0x2049cd24458 <line:231:5, line:234:14> has_else
|   | |-OpaqueValueExpr 0x2049cd24440 <<invalid sloc>> '_Bool'
|   | |-NullStmt 0x2049cd24438 <line:232:9>
|   | `-IfStmt 0x2049cd24420 <line:233:10, line:234:14>
|   |   |-OpaqueValueExpr 0x2049cd24408 <<invalid sloc>> '_Bool'
|   |   `-GotoStmt 0x2049cd243f0 <col:9, col:14> 'err' 0x2049cd24020
|   |-IfStmt 0x2049cd245b8 <line:240:5, line:241:14>
|   | |-OpaqueValueExpr 0x2049cd245a0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2049cd24588 <col:9, col:14> 'err' 0x2049cd24020
|   |-IfStmt 0x2049cd24710 <line:244:5, line:245:14>
|   | |-OpaqueValueExpr 0x2049cd246f8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2049cd246e0 <col:9, col:14> 'err' 0x2049cd24020
|   |-IfStmt 0x2049cd24890 <line:246:5, line:247:14>
|   | |-OpaqueValueExpr 0x2049cd24878 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2049cd24860 <col:9, col:14> 'err' 0x2049cd24020
|   |-IfStmt 0x2049cd25ac8 <line:248:5, line:251:5>
|   | |-OpaqueValueExpr 0x2049cd25ab0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2049cd25a90 <line:248:25, line:251:5>
|   |   |-BinaryOperator 0x2049cd25a58 <line:249:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x2049cd259f8 <col:9> 'int' lvalue Var 0x2049cd234c8 'ret' 'int'
|   |   | `-IntegerLiteral 0x2049cd25a30 <col:15> 'int' 0
|   |   `-GotoStmt 0x2049cd25a78 <line:250:9, col:14> 'err' 0x2049cd24020
|   |-BinaryOperator 0x2049cd25b40 <line:254:5, col:9> 'int' '='
|   | |-DeclRefExpr 0x2049cd25ae0 <col:5> 'int' lvalue Var 0x2049cd235c0 'k' 'int'
|   | `-IntegerLiteral 0x2049cd25b18 <col:9> 'int' 1
|   |-IfStmt 0x2049cd25e28 <line:257:5, line:258:14>
|   | |-OpaqueValueExpr 0x2049cd25e10 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2049cd25df8 <col:9, col:14> 'err' 0x2049cd24020
|   |-IfStmt 0x2049cd26040 <line:262:5, line:263:14>
|   | |-OpaqueValueExpr 0x2049cd26028 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2049cd26010 <col:9, col:14> 'err' 0x2049cd24020
|   |-IfStmt 0x2049cd26198 <line:264:5, line:265:14>
|   | |-OpaqueValueExpr 0x2049cd26180 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2049cd26168 <col:9, col:14> 'err' 0x2049cd24020
|   |-ForStmt 0x2049cd26890 <line:267:5, line:283:5>
|   | |-BinaryOperator 0x2049cd261f8 <line:267:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x2049cd261b0 <col:10> 'int' lvalue Var 0x2049cd233c8 'i' 'int'
|   | | `-IntegerLiteral 0x2049cd261d0 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2049cd26288 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x2049cd26258 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2049cd26218 <col:17> 'int' lvalue Var 0x2049cd233c8 'i' 'int'
|   | | `-ImplicitCastExpr 0x2049cd26270 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2049cd26238 <col:21> 'int' lvalue ParmVar 0x2049cd23040 'checks' 'int'
|   | |-UnaryOperator 0x2049cd262c8 <col:29, col:30> 'int' postfix '++'
|   | | `-DeclRefExpr 0x2049cd262a8 <col:29> 'int' lvalue Var 0x2049cd233c8 'i' 'int'
|   | `-CompoundStmt 0x2049cd26858 <col:34, line:283:5>
|   |   |-IfStmt 0x2049cd26420 <line:268:9, line:269:18>
|   |   | |-OpaqueValueExpr 0x2049cd26408 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x2049cd263f0 <col:13, col:18> 'err' 0x2049cd24020
|   |   |-IfStmt 0x2049cd265a0 <line:270:9, line:271:18>
|   |   | |-OpaqueValueExpr 0x2049cd26588 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x2049cd26570 <col:13, col:18> 'err' 0x2049cd24020
|   |   |-IfStmt 0x2049cd266c0 <line:275:9, line:276:18>
|   |   | |-BinaryOperator 0x2049cd26688 <line:275:13, col:19> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x2049cd26670 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2049cd26610 <col:13> 'int' lvalue Var 0x2049cd23448 'j' 'int'
|   |   | | `-UnaryOperator 0x2049cd26658 <col:18, col:19> 'int' prefix '-'
|   |   | |   `-IntegerLiteral 0x2049cd26630 <col:19> 'int' 1
|   |   | `-GotoStmt 0x2049cd266a8 <line:276:13, col:18> 'err' 0x2049cd24020
|   |   |-IfStmt 0x2049cd267b0 <line:277:9, line:280:9>
|   |   | |-ImplicitCastExpr 0x2049cd266f8 <line:277:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2049cd266d8 <col:13> 'int' lvalue Var 0x2049cd23448 'j' 'int'
|   |   | `-CompoundStmt 0x2049cd26790 <col:16, line:280:9>
|   |   |   |-BinaryOperator 0x2049cd26758 <line:278:13, col:19> 'int' '='
|   |   |   | |-DeclRefExpr 0x2049cd26710 <col:13> 'int' lvalue Var 0x2049cd234c8 'ret' 'int'
|   |   |   | `-IntegerLiteral 0x2049cd26730 <col:19> 'int' 0
|   |   |   `-GotoStmt 0x2049cd26778 <line:279:13, col:18> 'err' 0x2049cd24020
|   |   `-IfStmt 0x2049cd26840 <line:281:9, line:282:18>
|   |     |-OpaqueValueExpr 0x2049cd26828 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x2049cd26810 <col:13, col:18> 'err' 0x2049cd24020
|   |-BinaryOperator 0x2049cd24900 <line:284:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x2049cd268c8 <col:5> 'int' lvalue Var 0x2049cd234c8 'ret' 'int'
|   | `-IntegerLiteral 0x2049cd268e8 <col:11> 'int' 1
|   |-LabelStmt 0x2049cd24ab0 <line:285:2, line:290:5> 'err'
|   | `-IfStmt 0x2049cd24a98 <line:286:5, line:290:5>
|   |   |-OpaqueValueExpr 0x2049cd24a80 <<invalid sloc>> '_Bool'
|   |   `-CompoundStmt 0x2049cd24a70 <line:286:22, line:290:5>
|   `-ReturnStmt 0x2049cd24c30 <line:293:5, col:16>
|     `-ImplicitCastExpr 0x2049cd24c18 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x2049cd24bf8 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x2049cd24bd8 <col:13> 'int' lvalue Var 0x2049cd234c8 'ret' 'int'
|-FunctionDecl 0x2049cd24e98 <line:296:1, line:321:1> line:296:5 invalid bn_probable_prime_dh_retry 'int (int *, int, int *)'
| |-ParmVarDecl 0x2049cd24cf0 <col:32, col:40> col:40 invalid rnd 'int *'
| |-ParmVarDecl 0x2049cd24d70 <col:45, col:49> col:49 used bits 'int'
| |-ParmVarDecl 0x2049cd24df0 <col:55, col:63> col:63 invalid ctx 'int *'
| `-CompoundStmt 0x2049cd25698 <line:297:1, line:321:1>
|   |-DeclStmt 0x2049cd24fe8 <line:298:5, col:10>
|   | `-VarDecl 0x2049cd24f80 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x2049cd250a8 <line:299:5, col:16>
|   | `-VarDecl 0x2049cd25018 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x2049cd25080 <col:15> 'int' 0
|   |-LabelStmt 0x2049cd252f0 <line:301:2, line:303:14> 'loop'
|   | `-IfStmt 0x2049cd25288 <line:302:5, line:303:14>
|   |   |-OpaqueValueExpr 0x2049cd25270 <<invalid sloc>> '_Bool'
|   |   `-GotoStmt 0x2049cd25258 <col:9, col:14> 'err' 0x2049cd25208
|   |-ForStmt 0x2049cd25558 <line:307:5, line:315:5>
|   | |-BinaryOperator 0x2049cd25368 <line:307:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x2049cd25308 <col:10> 'int' lvalue Var 0x2049cd24f80 'i' 'int'
|   | | `-IntegerLiteral 0x2049cd25340 <col:14> 'int' 1
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2049cd253e8 <col:17, .//openssl//file_jk/before\crypto\bn/bn_prime.h:14:20> 'int' '<'
|   | | |-ImplicitCastExpr 0x2049cd253d0 <.//openssl//file_jk/before\crypto\bn\bn_prime.c:307:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2049cd25388 <col:17> 'int' lvalue Var 0x2049cd24f80 'i' 'int'
|   | | `-IntegerLiteral 0x2049cd253a8 <.//openssl//file_jk/before\crypto\bn/bn_prime.h:14:20> 'int' 2048
|   | |-UnaryOperator 0x2049cd25428 <.//openssl//file_jk/before\crypto\bn\bn_prime.c:307:32, col:33> 'int' postfix '++'
|   | | `-DeclRefExpr 0x2049cd25408 <col:32> 'int' lvalue Var 0x2049cd24f80 'i' 'int'
|   | `-CompoundStmt 0x2049cd25538 <col:37, line:315:5>
|   |   |-IfStmt 0x2049cd25498 <line:310:9, line:311:18>
|   |   | |-OpaqueValueExpr 0x2049cd25480 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x2049cd25468 <col:13, col:18> 'err' 0x2049cd25208
|   |   `-IfStmt 0x2049cd25520 <line:312:9, line:314:9>
|   |     |-OpaqueValueExpr 0x2049cd25508 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x2049cd254f0 <line:312:23, line:314:9>
|   |       `-GotoStmt 0x2049cd254d8 <line:313:13, col:18> 'loop' 0x2049cd252a0
|   |-BinaryOperator 0x2049cd255f0 <line:316:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x2049cd25590 <col:5> 'int' lvalue Var 0x2049cd25018 'ret' 'int'
|   | `-IntegerLiteral 0x2049cd255c8 <col:11> 'int' 1
|   |-LabelStmt 0x2049cd25618 <line:318:2, line:319:22> 'err'
|   | `-NullStmt 0x2049cd25610 <col:22>
|   `-ReturnStmt 0x2049cd25688 <line:320:5, col:16>
|     `-ImplicitCastExpr 0x2049cd25670 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x2049cd25650 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x2049cd25630 <col:13> 'int' lvalue Var 0x2049cd25018 'ret' 'int'
|-FunctionDecl 0x2049ccd90b0 <line:323:1, line:371:1> line:323:5 invalid bn_probable_prime_dh_coprime 'int (int *, int, int *)'
| |-ParmVarDecl 0x2049cd256f8 <col:34, col:42> col:42 invalid rnd 'int *'
| |-ParmVarDecl 0x2049cd25778 <col:47, col:51> col:51 used bits 'int'
| |-ParmVarDecl 0x2049cd257f8 <col:57, col:65> col:65 invalid ctx 'int *'
| `-CompoundStmt 0x2049cd49698 <line:324:1, line:371:1>
|   |-DeclStmt 0x2049ccd9200 <line:325:5, col:10>
|   | `-VarDecl 0x2049ccd9198 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x2049ccd92c0 <line:328:5, col:16>
|   | `-VarDecl 0x2049ccd9230 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x2049ccd9298 <col:15> 'int' 0
|   |-CallExpr 0x2049ccd94a8 <line:330:5, col:48> 'int'
|   | |-ImplicitCastExpr 0x2049ccd9490 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2049ccd93c8 <col:5> 'int ()' Function 0x2049ccd9300 'OPENSSL_assert' 'int ()'
|   | `-BinaryOperator 0x2049ccd9470 <col:20, col:27> 'int' '>'
|   |   |-ImplicitCastExpr 0x2049ccd9440 <col:20> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2049ccd93e8 <col:20> 'int' lvalue ParmVar 0x2049cd25778 'bits' 'int'
|   |   `-ImplicitCastExpr 0x2049ccd9458 <col:27> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x2049ccd9420 <col:27> 'const int' lvalue Var 0x2049cd1f970 'prime_multiplier_bits' 'const int'
|   |-IfStmt 0x2049ccd9660 <line:333:5, line:334:14>
|   | |-OpaqueValueExpr 0x2049ccd9648 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2049ccd9630 <col:9, col:14> 'err' 0x2049ccd95e0
|   |-IfStmt 0x2049ccd9750 <line:335:5, line:336:14>
|   | |-OpaqueValueExpr 0x2049ccd9738 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2049ccd9720 <col:9, col:14> 'err' 0x2049ccd95e0
|   |-IfStmt 0x2049ccd97d8 <line:338:5, line:339:14>
|   | |-OpaqueValueExpr 0x2049ccd97c0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2049ccd97a8 <col:9, col:14> 'err' 0x2049ccd95e0
|   |-LabelStmt 0x2049ccd9938 <line:341:2, line:344:14> 'loop'
|   | `-IfStmt 0x2049ccd98d0 <line:342:5, line:344:14>
|   |   |-OpaqueValueExpr 0x2049ccd98b8 <<invalid sloc>> '_Bool'
|   |   `-GotoStmt 0x2049ccd98a0 <col:9, col:14> 'err' 0x2049ccd95e0
|   |-IfStmt 0x2049ccd99c0 <line:345:5, line:346:14>
|   | |-OpaqueValueExpr 0x2049ccd99a8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2049ccd9990 <col:9, col:14> 'loop' 0x2049ccd98e8
|   |-IfStmt 0x2049ccd9b18 <line:347:5, line:348:14>
|   | |-OpaqueValueExpr 0x2049ccd9b00 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2049ccd9ae8 <col:9, col:14> 'err' 0x2049ccd95e0
|   |-IfStmt 0x2049ccd9de0 <line:350:5, line:352:14>
|   | |-OpaqueValueExpr 0x2049ccd9dc8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2049ccd9db0 <col:9, col:14> 'err' 0x2049ccd95e0
|   |-ForStmt 0x2049cd49550 <line:357:5, line:364:5>
|   | |-BinaryOperator 0x2049ccd9e68 <line:357:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x2049ccd9df8 <col:10> 'int' lvalue Var 0x2049ccd9198 'i' 'int'
|   | | `-ImplicitCastExpr 0x2049ccd9e50 <col:14> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2049ccd9e30 <col:14> 'const int' lvalue Var 0x2049cd1fa30 'first_prime_index' 'const int'
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2049ccd9f30 <col:33, .//openssl//file_jk/before\crypto\bn/bn_prime.h:14:20> 'int' '<'
|   | | |-ImplicitCastExpr 0x2049ccd9f18 <.//openssl//file_jk/before\crypto\bn\bn_prime.c:357:33> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2049ccd9ed0 <col:33> 'int' lvalue Var 0x2049ccd9198 'i' 'int'
|   | | `-IntegerLiteral 0x2049ccd9ef0 <.//openssl//file_jk/before\crypto\bn/bn_prime.h:14:20> 'int' 2048
|   | |-UnaryOperator 0x2049ccd9f70 <.//openssl//file_jk/before\crypto\bn\bn_prime.c:357:48, col:49> 'int' postfix '++'
|   | | `-DeclRefExpr 0x2049ccd9f50 <col:48> 'int' lvalue Var 0x2049ccd9198 'i' 'int'
|   | `-CompoundStmt 0x2049ccda068 <col:53, line:364:5>
|   |   |-IfStmt 0x2049ccd9fe0 <line:360:9, line:361:18>
|   |   | |-OpaqueValueExpr 0x2049ccd9fc8 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x2049ccd9fb0 <col:13, col:18> 'err' 0x2049ccd95e0
|   |   `-IfStmt 0x2049ccda050 <line:362:9, line:363:18>
|   |     |-OpaqueValueExpr 0x2049ccda038 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x2049ccda020 <col:13, col:18> 'loop' 0x2049ccd98e8
|   |-BinaryOperator 0x2049cd495e8 <line:365:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x2049cd49588 <col:5> 'int' lvalue Var 0x2049ccd9230 'ret' 'int'
|   | `-IntegerLiteral 0x2049cd495c0 <col:11> 'int' 1
|   |-LabelStmt 0x2049cd49630 <line:367:2, col:5> 'err'
|   | `-NullStmt 0x2049cd49628 <col:5>
|   |-NullStmt 0x2049cd49648 <line:369:22>
|   `-ReturnStmt 0x2049cd49688 <line:370:5, col:12>
|     `-ImplicitCastExpr 0x2049cd49670 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2049cd49650 <col:12> 'int' lvalue Var 0x2049ccd9230 'ret' 'int'
|-FunctionDecl 0x2049cd49b00 <line:373:1, line:398:1> line:373:12 invalid witness 'int (int *, const int *, const int *, const int *, int, int *, int *)' static
| |-ParmVarDecl 0x2049cd49738 <col:20, col:28> col:28 invalid w 'int *'
| |-ParmVarDecl 0x2049cd497b8 <col:31, col:45> col:45 invalid a 'const int *'
| |-ParmVarDecl 0x2049cd49838 <col:48, col:62> col:62 invalid a1 'const int *'
| |-ParmVarDecl 0x2049cd498b8 <line:374:20, col:34> col:34 invalid a1_odd 'const int *'
| |-ParmVarDecl 0x2049cd49938 <col:42, col:46> col:46 used k 'int'
| |-ParmVarDecl 0x2049cd499b8 <col:49, col:57> col:57 invalid ctx 'int *'
| |-ParmVarDecl 0x2049cd49a38 <line:375:20, col:33> col:33 invalid mont 'int *'
| `-CompoundStmt 0x2049cd4a340 <line:376:1, line:398:1>
|   |-IfStmt 0x2049cd49d68 <line:377:5, line:378:17>
|   | |-OpaqueValueExpr 0x2049cd49d50 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2049cd49d40 <col:9, col:17>
|   |   `-UnaryOperator 0x2049cd49d28 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x2049cd49d00 <col:17> 'int' 1
|   |-IfStmt 0x2049cd49ee0 <line:379:5, line:380:16>
|   | |-OpaqueValueExpr 0x2049cd49ec8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2049cd49eb8 <col:9, col:16>
|   |   `-IntegerLiteral 0x2049cd49e90 <col:16> 'int' 0
|   |-IfStmt 0x2049cd49f90 <line:381:5, line:382:16>
|   | |-OpaqueValueExpr 0x2049cd49f78 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2049cd49f68 <col:9, col:16>
|   |   `-IntegerLiteral 0x2049cd49f40 <col:16> 'int' 0
|   |-WhileStmt 0x2049cd4a2e8 <line:383:5, line:391:5>
|   | |-UnaryOperator 0x2049cd49fe0 <line:383:12, col:14> 'int' prefix '--'
|   | | `-DeclRefExpr 0x2049cd49fa8 <col:14> 'int' lvalue ParmVar 0x2049cd49938 'k' 'int'
|   | `-CompoundStmt 0x2049cd4a2c0 <col:17, line:391:5>
|   |   |-IfStmt 0x2049cd4a170 <line:384:9, line:385:21>
|   |   | |-OpaqueValueExpr 0x2049cd4a158 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x2049cd4a148 <col:13, col:21>
|   |   |   `-UnaryOperator 0x2049cd4a130 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x2049cd4a108 <col:21> 'int' 1
|   |   |-IfStmt 0x2049cd4a1f8 <line:386:9, line:387:20>
|   |   | |-OpaqueValueExpr 0x2049cd4a1e0 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x2049cd4a1d0 <col:13, col:20>
|   |   |   `-IntegerLiteral 0x2049cd4a1a8 <col:20> 'int' 1
|   |   `-IfStmt 0x2049cd4a2a8 <line:389:9, line:390:20>
|   |     |-OpaqueValueExpr 0x2049cd4a290 <<invalid sloc>> '_Bool'
|   |     `-ReturnStmt 0x2049cd4a280 <col:13, col:20>
|   |       `-IntegerLiteral 0x2049cd4a258 <col:20> 'int' 0
|   |-NullStmt 0x2049cd4a300 <line:396:20>
|   `-ReturnStmt 0x2049cd4a330 <line:397:5, col:12>
|     `-IntegerLiteral 0x2049cd4a308 <col:12> 'int' 1
|-FunctionDecl 0x2049cd4d590 <line:400:1, line:480:1> line:400:12 invalid probable_prime 'int (int *, int, int *)' static
| |-ParmVarDecl 0x2049cd4a398 <col:27, col:35> col:35 invalid rnd 'int *'
| |-ParmVarDecl 0x2049cd4a418 <col:40, col:44> col:44 used bits 'int'
| |-ParmVarDecl 0x2049cd4a498 <col:50, col:59> col:59 invalid mods 'int *'
| `-CompoundStmt 0x2049cd4e4a0 <line:401:1, line:480:1>
|   |-DeclStmt 0x2049cd4d6e0 <line:402:5, col:10>
|   | `-VarDecl 0x2049cd4d678 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x2049cd4d7a8 <line:405:5, col:43>
|   | `-VarDecl 0x2049cd4d708 <col:5, col:10> col:10 used is_single_word 'char'
|   |-LabelStmt 0x2049cd4d8d8 <line:407:2, line:409:18> 'again'
|   | `-IfStmt 0x2049cd4d870 <line:408:5, line:409:18>
|   |   |-OpaqueValueExpr 0x2049cd4d858 <<invalid sloc>> '_Bool'
|   |   `-ReturnStmt 0x2049cd4d848 <col:9, col:18>
|   |     `-ParenExpr 0x2049cd4d828 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x2049cd4d800 <col:17> 'int' 0
|   |-ForStmt 0x2049cd4daf0 <line:411:5, line:416:5>
|   | |-BinaryOperator 0x2049cd4d950 <line:411:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x2049cd4d8f0 <col:10> 'int' lvalue Var 0x2049cd4d678 'i' 'int'
|   | | `-IntegerLiteral 0x2049cd4d928 <col:14> 'int' 1
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2049cd4d9d0 <col:17, .//openssl//file_jk/before\crypto\bn/bn_prime.h:14:20> 'int' '<'
|   | | |-ImplicitCastExpr 0x2049cd4d9b8 <.//openssl//file_jk/before\crypto\bn\bn_prime.c:411:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2049cd4d970 <col:17> 'int' lvalue Var 0x2049cd4d678 'i' 'int'
|   | | `-IntegerLiteral 0x2049cd4d990 <.//openssl//file_jk/before\crypto\bn/bn_prime.h:14:20> 'int' 2048
|   | |-UnaryOperator 0x2049cd4da10 <.//openssl//file_jk/before\crypto\bn\bn_prime.c:411:32, col:33> 'int' postfix '++'
|   | | `-DeclRefExpr 0x2049cd4d9f0 <col:32> 'int' lvalue Var 0x2049cd4d678 'i' 'int'
|   | `-CompoundStmt 0x2049cd4dad8 <col:37, line:416:5>
|   |   `-IfStmt 0x2049cd4daa0 <line:413:9, line:414:20>
|   |     |-OpaqueValueExpr 0x2049cd4da88 <<invalid sloc>> '_Bool'
|   |     `-ReturnStmt 0x2049cd4da78 <col:13, col:20>
|   |       `-IntegerLiteral 0x2049cd4da50 <col:20> 'int' 0
|   |-IfStmt 0x2049cd4dc98 <line:421:5, line:435:5>
|   | |-ImplicitCastExpr 0x2049cd4db60 <line:421:9> 'char' <LValueToRValue>
|   | | `-DeclRefExpr 0x2049cd4db28 <col:9> 'char' lvalue Var 0x2049cd4d708 'is_single_word' 'char'
|   | `-CompoundStmt 0x2049cd4dc80 <col:25, line:435:5>
|   |   `-IfStmt 0x2049cd4dc58 <line:424:9, line:432:9> has_else
|   |     |-OpaqueValueExpr 0x2049cd4dc40 <<invalid sloc>> '_Bool'
|   |     |-CompoundStmt 0x2049cd4dbb8 <line:424:31, line:430:9>
|   |     `-CompoundStmt 0x2049cd4dc30 <col:16, line:432:9>
|   |-LabelStmt 0x2049cd4e2f8 <line:437:2, line:473:5> 'loop'
|   | `-IfStmt 0x2049cd4e2d0 <line:438:5, line:473:5> has_else
|   |   |-ImplicitCastExpr 0x2049cd4dcf8 <line:438:9> 'char' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2049cd4dcd8 <col:9> 'char' lvalue Var 0x2049cd4d708 'is_single_word' 'char'
|   |   |-CompoundStmt 0x2049cd4dff8 <col:25, line:460:5>
|   |   `-CompoundStmt 0x2049cd4e2b8 <col:12, line:473:5>
|   |     `-ForStmt 0x2049cd4e280 <line:461:9, line:472:9>
|   |       |-BinaryOperator 0x2049cd4e050 <line:461:14, col:18> 'int' '='
|   |       | |-DeclRefExpr 0x2049cd4e008 <col:14> 'int' lvalue Var 0x2049cd4d678 'i' 'int'
|   |       | `-IntegerLiteral 0x2049cd4e028 <col:18> 'int' 1
|   |       |-<<<NULL>>>
|   |       |-BinaryOperator 0x2049cd4e0d0 <col:21, .//openssl//file_jk/before\crypto\bn/bn_prime.h:14:20> 'int' '<'
|   |       | |-ImplicitCastExpr 0x2049cd4e0b8 <.//openssl//file_jk/before\crypto\bn\bn_prime.c:461:21> 'int' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x2049cd4e070 <col:21> 'int' lvalue Var 0x2049cd4d678 'i' 'int'
|   |       | `-IntegerLiteral 0x2049cd4e090 <.//openssl//file_jk/before\crypto\bn/bn_prime.h:14:20> 'int' 2048
|   |       |-UnaryOperator 0x2049cd4e110 <.//openssl//file_jk/before\crypto\bn\bn_prime.c:461:36, col:37> 'int' postfix '++'
|   |       | `-DeclRefExpr 0x2049cd4e0f0 <col:36> 'int' lvalue Var 0x2049cd4d678 'i' 'int'
|   |       `-CompoundStmt 0x2049cd4e268 <col:41, line:472:9>
|   |         `-IfStmt 0x2049cd4e250 <line:466:13, line:471:13>
|   |           |-OpaqueValueExpr 0x2049cd4e238 <<invalid sloc>> '_Bool'
|   |           `-CompoundStmt 0x2049cd4e218 <line:466:55, line:471:13>
|   |             |-IfStmt 0x2049cd4e1e8 <line:468:17, line:469:26>
|   |             | |-OpaqueValueExpr 0x2049cd4e1d0 <<invalid sloc>> '_Bool'
|   |             | `-GotoStmt 0x2049cd4e1b8 <col:21, col:26> 'again' 0x2049cd4d888
|   |             `-GotoStmt 0x2049cd4e200 <line:470:17, col:22> 'loop' 0x2049cd4df28
|   |-IfStmt 0x2049cd4e3a0 <line:474:5, line:475:18>
|   | |-OpaqueValueExpr 0x2049cd4e388 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2049cd4e378 <col:9, col:18>
|   |   `-ParenExpr 0x2049cd4e358 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x2049cd4e330 <col:17> 'int' 0
|   |-IfStmt 0x2049cd4e428 <line:476:5, line:477:14>
|   | |-OpaqueValueExpr 0x2049cd4e410 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2049cd4e3f8 <col:9, col:14> 'again' 0x2049cd4d888
|   |-NullStmt 0x2049cd4e440 <line:478:22>
|   `-ReturnStmt 0x2049cd4e490 <line:479:5, col:14>
|     `-ParenExpr 0x2049cd4e470 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x2049cd4e448 <col:13> 'int' 1
|-FunctionDecl 0x2049cd4b7c0 <line:482:1, line:529:1> line:482:5 invalid bn_probable_prime_dh 'int (int *, int, const int *, const int *, int *)'
| |-ParmVarDecl 0x2049cd4e518 <col:26, col:34> col:34 invalid rnd 'int *'
| |-ParmVarDecl 0x2049cd4b588 <col:39, col:43> col:43 used bits 'int'
| |-ParmVarDecl 0x2049cd4b608 <line:483:26, col:40> col:40 invalid add 'const int *'
| |-ParmVarDecl 0x2049cd4b688 <col:45, col:59> col:59 invalid rem 'const int *'
| |-ParmVarDecl 0x2049cd4b708 <col:64, col:72> col:72 invalid ctx 'int *'
| `-CompoundStmt 0x2049cd475e0 <line:484:1, line:529:1>
|   |-DeclStmt 0x2049cd4b9e0 <line:485:5, col:19>
|   | |-VarDecl 0x2049cd4b8b8 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x2049cd4b938 <col:5, col:18> col:12 used ret 'int' cinit
|   |   `-IntegerLiteral 0x2049cd4b9a0 <col:18> 'int' 0
|   |-IfStmt 0x2049cd4bb40 <line:489:5, line:490:14>
|   | |-OpaqueValueExpr 0x2049cd4bb28 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2049cd4bb10 <col:9, col:14> 'err' 0x2049cd4bac0
|   |-IfStmt 0x2049cd4bbe0 <line:492:5, line:493:14>
|   | |-OpaqueValueExpr 0x2049cd4bbc8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2049cd4bbb0 <col:9, col:14> 'err' 0x2049cd4bac0
|   |-IfStmt 0x2049cd4bd38 <line:497:5, line:498:14>
|   | |-OpaqueValueExpr 0x2049cd4bd20 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2049cd4bd08 <col:9, col:14> 'err' 0x2049cd4bac0
|   |-IfStmt 0x2049cd4be90 <line:499:5, line:500:14>
|   | |-OpaqueValueExpr 0x2049cd4be78 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2049cd4be60 <col:9, col:14> 'err' 0x2049cd4bac0
|   |-IfStmt 0x2049cd4c160 <line:501:5, line:507:5> has_else
|   | |-OpaqueValueExpr 0x2049cd4c148 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x2049cd4bfc0 <line:501:22, line:504:5>
|   | | `-IfStmt 0x2049cd4bfa8 <line:502:9, line:503:18>
|   | |   |-OpaqueValueExpr 0x2049cd4bf90 <<invalid sloc>> '_Bool'
|   | |   `-GotoStmt 0x2049cd4bf78 <col:13, col:18> 'err' 0x2049cd4bac0
|   | `-CompoundStmt 0x2049cd4c130 <line:504:12, line:507:5>
|   |   `-IfStmt 0x2049cd4c118 <line:505:9, line:506:18>
|   |     |-OpaqueValueExpr 0x2049cd4c100 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x2049cd4c0e8 <col:13, col:18> 'err' 0x2049cd4bac0
|   |-LabelStmt 0x2049cd4c4d0 <line:511:2, line:522:5> 'loop'
|   | `-ForStmt 0x2049cd4c498 <line:512:5, line:522:5>
|   |   |-BinaryOperator 0x2049cd4c1e8 <line:512:10, col:14> 'int' '='
|   |   | |-DeclRefExpr 0x2049cd4c188 <col:10> 'int' lvalue Var 0x2049cd4b8b8 'i' 'int'
|   |   | `-IntegerLiteral 0x2049cd4c1c0 <col:14> 'int' 1
|   |   |-<<<NULL>>>
|   |   |-BinaryOperator 0x2049cd4c268 <col:17, .//openssl//file_jk/before\crypto\bn/bn_prime.h:14:20> 'int' '<'
|   |   | |-ImplicitCastExpr 0x2049cd4c250 <.//openssl//file_jk/before\crypto\bn\bn_prime.c:512:17> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2049cd4c208 <col:17> 'int' lvalue Var 0x2049cd4b8b8 'i' 'int'
|   |   | `-IntegerLiteral 0x2049cd4c228 <.//openssl//file_jk/before\crypto\bn/bn_prime.h:14:20> 'int' 2048
|   |   |-UnaryOperator 0x2049cd4c2a8 <.//openssl//file_jk/before\crypto\bn\bn_prime.c:512:32, col:33> 'int' postfix '++'
|   |   | `-DeclRefExpr 0x2049cd4c288 <col:32> 'int' lvalue Var 0x2049cd4b8b8 'i' 'int'
|   |   `-CompoundStmt 0x2049cd4c478 <col:37, line:522:5>
|   |     |-IfStmt 0x2049cd4c318 <line:515:9, line:516:18>
|   |     | |-OpaqueValueExpr 0x2049cd4c300 <<invalid sloc>> '_Bool'
|   |     | `-GotoStmt 0x2049cd4c2e8 <col:13, col:18> 'err' 0x2049cd4bac0
|   |     `-IfStmt 0x2049cd4c460 <line:517:9, line:521:9>
|   |       |-OpaqueValueExpr 0x2049cd4c448 <<invalid sloc>> '_Bool'
|   |       `-CompoundStmt 0x2049cd4c428 <line:517:23, line:521:9>
|   |         |-IfStmt 0x2049cd4c3a8 <line:518:13, line:519:22>
|   |         | |-OpaqueValueExpr 0x2049cd4c390 <<invalid sloc>> '_Bool'
|   |         | `-GotoStmt 0x2049cd4c378 <col:17, col:22> 'err' 0x2049cd4bac0
|   |         `-GotoStmt 0x2049cd4c410 <line:520:13, col:18> 'loop' 0x2049cd4c3c0
|   |-BinaryOperator 0x2049cd4c548 <line:523:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x2049cd4c4e8 <col:5> 'int' lvalue Var 0x2049cd4b938 'ret' 'int'
|   | `-IntegerLiteral 0x2049cd4c520 <col:11> 'int' 1
|   |-LabelStmt 0x2049cd47558 <line:525:2, col:5> 'err'
|   | `-NullStmt 0x2049cd47550 <col:5>
|   |-NullStmt 0x2049cd47570 <line:527:22>
|   `-ReturnStmt 0x2049cd475d0 <line:528:5, col:16>
|     `-ImplicitCastExpr 0x2049cd475b8 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x2049cd47598 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x2049cd47578 <col:13> 'int' lvalue Var 0x2049cd4b938 'ret' 'int'
`-FunctionDecl 0x2049cd47918 <line:531:1, line:596:1> line:531:12 invalid probable_prime_dh_safe 'int (int *, int, const int *, const int *, int *)' static
  |-ParmVarDecl 0x2049cd47660 <col:35, col:43> col:43 invalid p 'int *'
  |-ParmVarDecl 0x2049cd476e0 <col:46, col:50> col:50 used bits 'int'
  |-ParmVarDecl 0x2049cd47760 <col:56, col:70> col:70 invalid padd 'const int *'
  |-ParmVarDecl 0x2049cd477e0 <line:532:35, col:49> col:49 invalid rem 'const int *'
  |-ParmVarDecl 0x2049cd47860 <col:54, col:62> col:62 invalid ctx 'int *'
  `-CompoundStmt 0x2049cd3d550 <line:533:1, line:596:1>
    |-DeclStmt 0x2049cd47b38 <line:534:5, col:19>
    | |-VarDecl 0x2049cd47a10 <col:5, col:9> col:9 used i 'int'
    | `-VarDecl 0x2049cd47a90 <col:5, col:18> col:12 used ret 'int' cinit
    |   `-IntegerLiteral 0x2049cd47af8 <col:18> 'int' 0
    |-UnaryOperator 0x2049cd47b88 <line:537:5, col:9> 'int' postfix '--'
    | `-DeclRefExpr 0x2049cd47b50 <col:5> 'int' lvalue ParmVar 0x2049cd476e0 'bits' 'int'
    |-IfStmt 0x2049cd47d28 <line:542:5, line:543:14>
    | |-OpaqueValueExpr 0x2049cd47d10 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x2049cd47cf8 <col:9, col:14> 'err' 0x2049cd47ca8
    |-IfStmt 0x2049cd47d90 <line:545:5, line:546:14>
    | |-OpaqueValueExpr 0x2049cd47d78 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x2049cd47d60 <col:9, col:14> 'err' 0x2049cd47ca8
    |-IfStmt 0x2049cd47e18 <line:548:5, line:549:14>
    | |-OpaqueValueExpr 0x2049cd47e00 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x2049cd47de8 <col:9, col:14> 'err' 0x2049cd47ca8
    |-IfStmt 0x2049cd47e80 <line:552:5, line:553:14>
    | |-OpaqueValueExpr 0x2049cd47e68 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x2049cd47e50 <col:9, col:14> 'err' 0x2049cd47ca8
    |-IfStmt 0x2049cd47ee8 <line:554:5, line:555:14>
    | |-OpaqueValueExpr 0x2049cd47ed0 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x2049cd47eb8 <col:9, col:14> 'err' 0x2049cd47ca8
    |-IfStmt 0x2049cd48138 <line:556:5, line:564:5> has_else
    | |-OpaqueValueExpr 0x2049cd48120 <<invalid sloc>> '_Bool'
    | |-CompoundStmt 0x2049cd48018 <line:556:22, line:559:5>
    | | `-IfStmt 0x2049cd48000 <line:557:9, line:558:18>
    | |   |-OpaqueValueExpr 0x2049cd47fe8 <<invalid sloc>> '_Bool'
    | |   `-GotoStmt 0x2049cd47fd0 <col:13, col:18> 'err' 0x2049cd47ca8
    | `-CompoundStmt 0x2049cd48100 <line:559:12, line:564:5>
    |   |-IfStmt 0x2049cd48080 <line:560:9, line:561:18>
    |   | |-OpaqueValueExpr 0x2049cd48068 <<invalid sloc>> '_Bool'
    |   | `-GotoStmt 0x2049cd48050 <col:13, col:18> 'err' 0x2049cd47ca8
    |   `-IfStmt 0x2049cd480e8 <line:562:9, line:563:18>
    |     |-OpaqueValueExpr 0x2049cd480d0 <<invalid sloc>> '_Bool'
    |     `-GotoStmt 0x2049cd480b8 <col:13, col:18> 'err' 0x2049cd47ca8
    |-IfStmt 0x2049cd482a0 <line:567:5, line:568:14>
    | |-OpaqueValueExpr 0x2049cd48288 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x2049cd48270 <col:9, col:14> 'err' 0x2049cd47ca8
    |-IfStmt 0x2049cd48330 <line:569:5, line:570:14>
    | |-OpaqueValueExpr 0x2049cd48318 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x2049cd48300 <col:9, col:14> 'err' 0x2049cd47ca8
    |-LabelStmt 0x2049cd3d408 <line:572:2, line:589:5> 'loop'
    | `-ForStmt 0x2049cd3d3d0 <line:573:5, line:589:5>
    |   |-BinaryOperator 0x2049cd483a8 <line:573:10, col:14> 'int' '='
    |   | |-DeclRefExpr 0x2049cd48348 <col:10> 'int' lvalue Var 0x2049cd47a10 'i' 'int'
    |   | `-IntegerLiteral 0x2049cd48380 <col:14> 'int' 1
    |   |-<<<NULL>>>
    |   |-BinaryOperator 0x2049cd48428 <col:17, .//openssl//file_jk/before\crypto\bn/bn_prime.h:14:20> 'int' '<'
    |   | |-ImplicitCastExpr 0x2049cd48410 <.//openssl//file_jk/before\crypto\bn\bn_prime.c:573:17> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x2049cd483c8 <col:17> 'int' lvalue Var 0x2049cd47a10 'i' 'int'
    |   | `-IntegerLiteral 0x2049cd483e8 <.//openssl//file_jk/before\crypto\bn/bn_prime.h:14:20> 'int' 2048
    |   |-UnaryOperator 0x2049cd48468 <.//openssl//file_jk/before\crypto\bn\bn_prime.c:573:32, col:33> 'int' postfix '++'
    |   | `-DeclRefExpr 0x2049cd48448 <col:32> 'int' lvalue Var 0x2049cd47a10 'i' 'int'
    |   `-CompoundStmt 0x2049cd3d3b0 <col:37, line:589:5>
    |     |-IfStmt 0x2049cd48500 <line:580:9, line:581:18>
    |     | |-OpaqueValueExpr 0x2049cd484e8 <<invalid sloc>> '_Bool'
    |     | `-GotoStmt 0x2049cd484d0 <col:13, col:18> 'err' 0x2049cd47ca8
    |     `-IfStmt 0x2049cd3d398 <line:582:9, line:588:9>
    |       |-OpaqueValueExpr 0x2049cd3d380 <<invalid sloc>> '_Bool'
    |       `-CompoundStmt 0x2049cd3d358 <line:582:37, line:588:9>
    |         |-IfStmt 0x2049cd3d270 <line:583:13, line:584:22>
    |         | |-OpaqueValueExpr 0x2049cd3d258 <<invalid sloc>> '_Bool'
    |         | `-GotoStmt 0x2049cd3d240 <col:17, col:22> 'err' 0x2049cd47ca8
    |         |-IfStmt 0x2049cd3d2d8 <line:585:13, line:586:22>
    |         | |-OpaqueValueExpr 0x2049cd3d2c0 <<invalid sloc>> '_Bool'
    |         | `-GotoStmt 0x2049cd3d2a8 <col:17, col:22> 'err' 0x2049cd47ca8
    |         `-GotoStmt 0x2049cd3d340 <line:587:13, col:18> 'loop' 0x2049cd3d2f0
    |-BinaryOperator 0x2049cd3d480 <line:590:5, col:11> 'int' '='
    | |-DeclRefExpr 0x2049cd3d420 <col:5> 'int' lvalue Var 0x2049cd47a90 'ret' 'int'
    | `-IntegerLiteral 0x2049cd3d458 <col:11> 'int' 1
    |-LabelStmt 0x2049cd3d4c8 <line:592:2, col:5> 'err'
    | `-NullStmt 0x2049cd3d4c0 <col:5>
    |-NullStmt 0x2049cd3d4e0 <line:594:20>
    `-ReturnStmt 0x2049cd3d540 <line:595:5, col:16>
      `-ImplicitCastExpr 0x2049cd3d528 <col:12, col:16> 'int' <LValueToRValue>
        `-ParenExpr 0x2049cd3d508 <col:12, col:16> 'int' lvalue
          `-DeclRefExpr 0x2049cd3d4e8 <col:13> 'int' lvalue Var 0x2049cd47a90 'ret' 'int'
