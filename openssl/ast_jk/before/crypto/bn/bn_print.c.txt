TranslationUnitDecl 0x2a7e54bd658 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2a7e54bdef0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2a7e54bdbf0 '__int128'
|-TypedefDecl 0x2a7e54bdf60 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2a7e54bdc10 'unsigned __int128'
|-TypedefDecl 0x2a7e54be298 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x2a7e54be050 'struct __NSConstantString_tag'
|   `-Record 0x2a7e54bdfb8 '__NSConstantString_tag'
|-TypedefDecl 0x2a7e54be308 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x2a7e54bd830 'unsigned long long'
|-TypedefDecl 0x2a7e54be3a0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2a7e54be360 'char *'
|   `-BuiltinType 0x2a7e54bd6f0 'char'
|-TypedefDecl 0x2a7e54be410 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x2a7e54be360 'char *'
|   `-BuiltinType 0x2a7e54bd6f0 'char'
|-TypedefDecl 0x2a7e54be4d0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x2a7e54bd830 'unsigned long long'
|-TypedefDecl 0x2a7e54be540 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x2a7e54be360 'char *'
|   `-BuiltinType 0x2a7e54bd6f0 'char'
|-FunctionDecl 0x2a7e6fdbe20 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2a7e6fdbec0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x2a7e6fdbf30 <col:21> Implicit
|-FunctionDecl 0x2a7e6fdbf88 prev 0x2a7e6fdbe20 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2a7e6fdbcb0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x2a7e6fdc078 <col:21> Inherited Implicit
|-TypedefDecl 0x2a7e6fdc0b8 prev 0x2a7e54be308 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x2a7e54bd830 'unsigned long long'
|-TypedefDecl 0x2a7e6fdc160 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x2a7e6fdc130 'size_t' sugar
|   |-Typedef 0x2a7e6fdc0b8 'size_t'
|   `-BuiltinType 0x2a7e54bd830 'unsigned long long'
|-TypedefDecl 0x2a7e6fdc1d0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x2a7e54bd790 'long long'
|-TypedefDecl 0x2a7e6fdc240 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x2a7e54bd790 'long long'
|-TypedefDecl 0x2a7e6fdc2b0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x2a7e54bd7d0 'unsigned short'
|-TypedefDecl 0x2a7e6fdc320 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x2a7e54bd7d0 'unsigned short'
|-TypedefDecl 0x2a7e6fdc390 <line:542:1, col:24> col:24 referenced wctype_t 'unsigned short'
| `-BuiltinType 0x2a7e54bd7d0 'unsigned short'
|-TypedefDecl 0x2a7e6fdc400 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x2a7e54bd750 'int'
|-TypedefDecl 0x2a7e6fdc470 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x2a7e54bd770 'long'
|-TypedefDecl 0x2a7e6fdc4e0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x2a7e54bd790 'long long'
|-TypedefDecl 0x2a7e6fdc570 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x2a7e6fdc540 '__time64_t' sugar
|   |-Typedef 0x2a7e6fdc4e0 '__time64_t'
|   `-BuiltinType 0x2a7e54bd790 'long long'
|-FunctionDecl 0x2a7e6fdc6e8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x2a7e6fdc908 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x2a7e7011ce0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x2a7e6fdca48 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x2a7e6fdcac0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x2a7e6fdcb38 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x2a7e6fdcbb8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x2a7e7011a80 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x2a7e7011dc0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x2a7e7011e80 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x2a7e7011ff0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x2a7e7011fa0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x2a7e7011f40 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x2a7e7011e60 'struct threadlocaleinfostruct'
|       `-Record 0x2a7e701cb30 'threadlocaleinfostruct'
|-TypedefDecl 0x2a7e7012100 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x2a7e70120b0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x2a7e7012050 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x2a7e7011f20 'struct threadmbcinfostruct'
|       `-Record 0x2a7e7011e80 'threadmbcinfostruct'
|-RecordDecl 0x2a7e7012158 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x2a7e7012210 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x2a7e70122d0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2a7e7012360 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x2a7e70123f0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x2a7e70124a8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x2a7e7012450 'struct localeinfo_struct' sugar
|   `-RecordType 0x2a7e70122b0 'struct localeinfo_struct'
|     `-Record 0x2a7e7012210 'localeinfo_struct'
|-TypedefDecl 0x2a7e7012580 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x2a7e7012530 'struct localeinfo_struct *'
|   `-ElaboratedType 0x2a7e7012450 'struct localeinfo_struct' sugar
|     `-RecordType 0x2a7e70122b0 'struct localeinfo_struct'
|       `-Record 0x2a7e7012210 'localeinfo_struct'
|-RecordDecl 0x2a7e70125f8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x2a7e70126b0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2a7e7012728 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x2a7e70127e8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x2a7e7012880 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x2a7e70128f0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x2a7e70129a8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x2a7e7012950 'struct localerefcount' sugar
|   `-RecordType 0x2a7e7012690 'struct localerefcount'
|     `-Record 0x2a7e70125f8 'localerefcount'
|-RecordDecl 0x2a7e701cb30 prev 0x2a7e7011dc0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x2a7e701cbb0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2a7e701cc28 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x2a7e701cc98 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x2a7e701cd08 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x2a7e701cd78 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x2a7e701cf38 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x2a7e701cfa8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x2a7e701d018 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x2a7e701d088 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x2a7e701d0f8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x2a7e701d168 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x2a7e701d1c0 parent 0x2a7e54bd658 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x2a7e701d350 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x2a7e701d3c0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x2a7e701d430 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x2a7e701d4a0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x2a7e701d540 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x2a7e701d5b0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x2a7e701d6c0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x2a7e701d7f8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x2a7e701d8a8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x2a7e701d850 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x2a7e7011e60 'struct threadlocaleinfostruct'
|     `-Record 0x2a7e701cb30 'threadlocaleinfostruct'
|-RecordDecl 0x2a7e701d940 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x2a7e701da00 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2a7e701da78 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x2a7e7017ae0 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x2a7e7017b50 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x2a7e7017bc0 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x2a7e7017c30 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x2a7e7017ca0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x2a7e7017d10 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x2a7e7017d80 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x2a7e7017e30 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x2a7e7017de0 'struct _iobuf' sugar
|   `-RecordType 0x2a7e701d9e0 'struct _iobuf'
|     `-Record 0x2a7e701d940 '_iobuf'
|-FunctionDecl 0x2a7e7018068 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x2a7e7018138 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x2a7e54bd790 'long long'
|-FunctionDecl 0x2a7e7018318 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2a7e70181a0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x2a7e7018610 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2a7e70183f0 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x2a7e7018468 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x2a7e70189c0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x2a7e70186f0 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x2a7e7018770 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x2a7e70187f0 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x2a7e7022d00 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2a7e7022b90 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x2a7e7022f30 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x2a7e7022df0 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x2a7e70230e0 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2a7e7023000 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x2a7e70232d0 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2a7e70235c8 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x2a7e70233a0 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x2a7e7023420 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x2a7e7023780 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2a7e70236a0 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x2a7e7023930 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2a7e7023850 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x2a7e7023ae0 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2a7e7023a00 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x2a7e7023ca8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2a7e7023bc8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x2a7e7023e38 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2a7e70241a0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x2a7e7023f00 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x2a7e7023ff8 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x2a7e7024558 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x2a7e7024280 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x2a7e7024300 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x2a7e7024378 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x2a7e7024718 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2a7e7024638 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x2a7e70249e0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x2a7e70247f0 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x2a7e7024870 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x2a7e7025bc0 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2a7e7025fb8 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x2a7e7026058 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2a7e70260c0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2a7e7026138 prev 0x2a7e7025fb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x2a7e7025d90 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x2a7e7025e10 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x2a7e70261e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e7026660 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x2a7e7026390 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x2a7e7026410 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x2a7e7026490 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x2a7e7026980 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x2a7e7026a20 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x2a7e7026a88 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2a7e7026b00 <col:40> Implicit printf 2 3
|-FunctionDecl 0x2a7e7026bd0 prev 0x2a7e7026980 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2a7e7026740 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2a7e70267c0 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x2a7e7026cc8 <col:40> Inherited printf 2 3
|-FunctionDecl 0x2a7e7026e90 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2a7e7026d10 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x2a7e7026d90 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x2a7e70270e8 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2a7e7026f70 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x2a7e7026fe8 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x2a7e7027318 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2a7e70271c8 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x2a7e7027610 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x2a7e70273f0 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x2a7e7027468 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x2a7e7027aa8 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x2a7e7027b48 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2a7e7027be0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2a7e7027c48 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x2a7e7027cb0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x2a7e7027d38 prev 0x2a7e7027aa8 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x2a7e70276f0 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x2a7e7027768 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e70277e0 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a7e7027858 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x2a7e7028240 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2a7e7027e28 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x2a7e7027ea0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e7027f18 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e7027f90 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a7e7028008 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x2a7e7028700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x2a7e7028430 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x2a7e70284b0 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x2a7e7028528 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x2a7e70287b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e7020c18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x2a7e7028900 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x2a7e7028980 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x2a7e7028a00 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x2a7e7028a78 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x2a7e7020fc0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x2a7e7021060 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x2a7e70210c8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2a7e7021140 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x2a7e70211a8 prev 0x2a7e7020fc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x2a7e7020df8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x2a7e7020e78 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x2a7e7021388 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x2a7e7021258 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e70217c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e70214c8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x2a7e7021548 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x2a7e70215e0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2a7e7021880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e7028bf0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2a7e70219c0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x2a7e7021a40 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x2a7e7028ee0 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e7028cc8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2a7e7028d48 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2a7e7028dc0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e7029240 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x2a7e7028fc0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x2a7e7029098 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x2a7e70295f8 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x2a7e7029318 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x2a7e7029398 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x2a7e7029418 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x2a7e7029858 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x2a7e70296d8 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x2a7e7029c48 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x2a7e7029928 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2a7e70299a8 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x2a7e7029a28 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x2a7e7029ea8 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x2a7e7029d28 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x2a7e702a368 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x2a7e702a408 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2a7e702a470 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2a7e702a4d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x2a7e702a540 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x2a7e702a5c8 prev 0x2a7e702a368 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x2a7e7029fb0 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x2a7e702a028 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e702a0a0 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a7e702a118 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x2a7e702a790 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2a7e702a6b0 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x2a7e702a920 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2a7e702aaa8 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2a7e702add0 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x2a7e702ab78 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x2a7e702ac20 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2a7e702b0f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2a7e702afb0 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x2a7e702b1a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e702b3c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2a7e702b2e0 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x2a7e702b5e0 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x2a7e702b498 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x2a7e702b790 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2a7e702b6b0 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x2a7e702b9e0 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x2a7e702b868 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x2a7e702b8e8 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x2a7e702bc20 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x2a7e702bcc0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2a7e702bd30 <col:40> Implicit printf 1 2
|-FunctionDecl 0x2a7e702bd98 prev 0x2a7e702bc20 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x2a7e702bac0 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x2a7e702be88 <col:40> Inherited printf 1 2
|-FunctionDecl 0x2a7e702bfb8 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2a7e702bed8 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x2a7e702c208 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2a7e702c090 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x2a7e702c108 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x2a7e702c3c8 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2a7e702c2e8 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x2a7e702c5e8 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2a7e702c4a0 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x2a7e702c838 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2a7e702c6c0 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x2a7e702c738 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x2a7e702c9f8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2a7e702c918 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x2a7e707b020 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2a7e702cad0 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x2a7e702cb50 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x2a7e707b1e0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2a7e707b100 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x2a7e707b470 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x2a7e707b390 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x2a7e707b518 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x2a7e707b710 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2a7e707b638 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x2a7e707b8a0 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2a7e707bb48 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x2a7e707bbe8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2a7e707bc58 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x2a7e707bcc0 prev 0x2a7e707bb48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x2a7e707ba30 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x2a7e707be98 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x2a7e707bd68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e707c270 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e707c038 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x2a7e707c0b0 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2a7e707c320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e707c548 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2a7e707c468 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x2a7e707c798 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e707c620 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x2a7e707c698 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e707cb58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x2a7e707c930 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x2a7e707c9b0 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x2a7e707cc08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e707ce30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2a7e707cd50 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x2a7e707d0b8 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x2a7e707cf70 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x2a7e707d2a0 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x2a7e707d6f0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x2a7e707d368 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2a7e707d3e8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x2a7e707d468 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x2a7e707d4e0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2a7e707db70 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x2a7e707d7e0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x2a7e707d858 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e707d8d0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a7e707d950 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x2a7e7079f40 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2a7e707dc60 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2a7e707dcd8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a7e707dd58 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x2a7e707a108 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2a7e707a028 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x2a7e707a4e0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x2a7e707a580 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2a7e707a5e8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2a7e707a660 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x2a7e707a6c8 prev 0x2a7e707a4e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x2a7e707a2a0 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x2a7e707a320 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x2a7e707a8a8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x2a7e707a778 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e707ac98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e707a9b8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x2a7e707aa38 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x2a7e707aab0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2a7e707ad50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e707e080 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x2a7e707ae98 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x2a7e707df80 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x2a7e707e378 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e707e160 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x2a7e707e1e0 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x2a7e707e258 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e707e808 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2a7e707e520 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x2a7e707e598 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e707e618 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x2a7e707e8c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e707ee90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e707eb00 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x2a7e707eb78 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e707ebf8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x2a7e707ec70 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2a7e707ef90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e707f2f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2a7e707f0d8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x2a7e707f150 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a7e707f1d0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x2a7e707f688 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e707f3d8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x2a7e707f450 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e707f4d0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x2a7e707f548 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e707f8e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x2a7e707f988 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e707fc40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x2a7e707fad0 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x2a7e7078f30 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x2a7e707fd18 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x2a7e707fd90 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2a7e70791b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2a7e70790d0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x2a7e7079258 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e7079518 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2a7e70793a0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x2a7e7079418 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x2a7e7079930 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2a7e70799d0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x2a7e7079a38 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2a7e7079aa0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2a7e7079b20 <col:40> Implicit printf 2 0
|-FunctionDecl 0x2a7e7079b88 prev 0x2a7e7079930 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2a7e70795f0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x2a7e7079670 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x2a7e70796e8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2a7e7079c88 <col:40> Inherited printf 2 0
|-FunctionDecl 0x2a7e7086000 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2a7e70860a0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x2a7e7086108 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2a7e7086170 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2a7e70861f0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x2a7e7086258 prev 0x2a7e7086000 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2a7e7079cd0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2a7e7079d50 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x2a7e7079dc8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2a7e7086358 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x2a7e70865b8 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2a7e70863a0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2a7e7086420 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x2a7e7086498 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e70868b0 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2a7e7086698 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2a7e7086718 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x2a7e7086790 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e7086bf8 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2a7e7086c98 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2a7e7086d00 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2a7e7086d78 <col:40> Implicit printf 1 0
|-FunctionDecl 0x2a7e7086de0 prev 0x2a7e7086bf8 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2a7e7086998 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x2a7e7086a10 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2a7e7086ed8 <col:40> Inherited printf 1 0
|-FunctionDecl 0x2a7e7087148 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2a7e70871e8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2a7e7087250 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2a7e70872c8 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x2a7e7087330 prev 0x2a7e7087148 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2a7e7086f28 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x2a7e7087010 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2a7e7087428 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x2a7e70875f0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2a7e7087478 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x2a7e70874f0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e7087848 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2a7e70876d0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x2a7e7087748 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e7087da8 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2a7e7087e48 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2a7e7087eb0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2a7e7087f18 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2a7e7087f80 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2a7e707ffa0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x2a7e7080008 prev 0x2a7e7087da8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2a7e70879e8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x2a7e7087a60 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e7087ae0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x2a7e7087b58 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x2a7e70801f8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x2a7e70800c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e7080668 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2a7e7080248 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x2a7e70802c0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e7080338 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e70803b8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x2a7e7080430 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e7080aa8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2a7e7080760 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x2a7e70807d8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e7080850 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e70808d0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x2a7e7080948 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e7080e78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2a7e7080c60 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x2a7e7080cd8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e7080d58 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x2a7e7080f30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e7082430 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2a7e7082180 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x2a7e70821f8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e7082278 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x2a7e70822f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x2a7e70824f0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e70828e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2a7e7082638 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x2a7e70826b0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e7082730 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x2a7e70827a8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e7082ca8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x2a7e70829d8 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x2a7e7082a58 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x2a7e7082ad0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e7083070 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x2a7e7083110 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2a7e7083178 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2a7e70831f0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x2a7e7083258 prev 0x2a7e7083070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x2a7e7082e50 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x2a7e7082ed0 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x2a7e7083438 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x2a7e7083308 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e7083860 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2a7e7083900 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2a7e7083968 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2a7e70839d0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2a7e7083a50 <col:94> Implicit printf 2 0
|-FunctionDecl 0x2a7e7083ab8 prev 0x2a7e7083860 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2a7e7083548 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x2a7e70835c8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x2a7e7083640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x2a7e7083ca0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x2a7e7083b70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e7080fb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2a7e7081050 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2a7e70810b8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2a7e7081120 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2a7e70811a0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x2a7e7081208 prev 0x2a7e7080fb0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2a7e7083cf0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x2a7e7083d70 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x2a7e7083de8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2a7e7081308 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x2a7e70814d0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2a7e7081358 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x2a7e70813d0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e70817c8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2a7e70815b0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x2a7e7081628 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a7e70816a8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x2a7e7081b60 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2a7e70818b0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x2a7e7081928 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e70819a8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x2a7e7081a20 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e7081dc8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2a7e7081c48 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x2a7e7081cc8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x2a7e7088020 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2a7e7081ea8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x2a7e7088310 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2a7e70880f8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x2a7e7088170 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a7e70881f0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x2a7e7088608 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2a7e70883f0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2a7e7088470 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x2a7e70884e8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e7088868 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2a7e70886f0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x2a7e7088768 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e7088bf8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2a7e7088948 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x2a7e70889c0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e7088a40 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x2a7e7088ab8 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e7088dc8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2a7e7088ce8 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x2a7e708a040 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2a7e7088ea0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x2a7e7088f18 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e708a200 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2a7e708a120 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x2a7e708a390 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2a7e708a5d8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e708a460 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x2a7e708a4d8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e708a830 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e708a6b8 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2a7e708a730 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e708aa88 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e708a910 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2a7e708a988 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e708ae38 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e708ab68 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x2a7e708abe0 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a7e708ac58 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e708b170 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e708af20 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2a7e708af98 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a7e708b050 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e708b468 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e708b258 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2a7e708b2d0 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a7e708b348 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e708b760 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e708b548 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2a7e708b5c8 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x2a7e708b640 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e708ba58 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e708b840 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2a7e708b8c0 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2a7e708b938 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e708bd50 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e708bb38 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2a7e708bbb8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2a7e708bc30 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e7085150 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e708be30 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2a7e708beb0 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x2a7e708bf28 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a7e708bfa0 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e70854e8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e7085238 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2a7e70852b8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x2a7e7085330 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a7e70853a8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e7085880 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e70855d0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2a7e7085650 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x2a7e70856c8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a7e7085740 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e7085d18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e7085a30 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x2a7e7085ab0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x2a7e7085b28 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2a7e7085dd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e70842f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e7085f18 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x2a7e7083fe0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e7084060 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x2a7e70840d8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e7084690 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e70843e0 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x2a7e7084458 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e70844d8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x2a7e7084550 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e7084be0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e7084880 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x2a7e7084900 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x2a7e7084978 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2a7e70849f0 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2a7e7084ca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e70902d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e7084de8 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x2a7e7084e60 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e7084ee0 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x2a7e7084f58 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a7e70900a0 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e7090718 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e70903d0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2a7e7090448 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e70904c8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x2a7e7090540 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a7e70905b8 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e7090988 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e7090810 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2a7e7090888 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e7090be0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e7090a68 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x2a7e7090ae0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e7090ed0 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e7090cc0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2a7e7090d38 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a7e7090db0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e7093200 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e7090fb8 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x2a7e7091030 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a7e70930e0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e7093658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e70933a8 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x2a7e7093420 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e70934a0 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x2a7e7093518 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2a7e7093718 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e7093b10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e7093860 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x2a7e70938d8 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e7093958 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x2a7e70939d0 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70910b0 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e7093c00 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2a7e7093c78 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e7093cf0 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e7093d70 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x2a7e7093de8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70915f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e70912a8 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x2a7e7091320 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e70913a0 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x2a7e7091418 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2a7e7091490 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2a7e70916b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e7091b38 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e7091808 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x2a7e7091880 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e7091900 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x2a7e7091978 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a7e70919f0 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e708f0f0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e7091c30 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x2a7e7091ca8 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e7091d20 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e7091da0 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x2a7e7091e18 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a7e7091e90 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e708f4b0 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x2a7e708f1e8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2a7e708f260 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x2a7e708f2e0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x2a7e708f720 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2a7e708f5b0 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x2a7e708f938 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x2a7e708fc18 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2a7e708fa00 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2a7e708fa78 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x2a7e708fe60 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x2a7e708fcf0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2a7e708e080 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2a7e708ff30 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x2a7e708e208 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x2a7e708e440 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2a7e708e2d0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2a7e708e348 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x2a7e708e5f0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x2a7e708e518 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2a7e708e898 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x2a7e708e6c0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2a7e708e738 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x2a7e708ec40 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x2a7e708e970 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2a7e708e9f0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x2a7e708ea68 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x2a7e708ef40 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2a7e708ed20 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2a7e708ed98 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2a7e708c218 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x2a7e708f018 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x2a7e708c070 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2a7e708c520 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2a7e708c3b0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x2a7e708c5c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e708c888 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x2a7e708c708 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x2a7e708cb90 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a7e708c958 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x2a7e708c9d0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x2a7e708cde0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a7e708cc68 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x2a7e708cce0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x2a7e7097110 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2a7e708ceb8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x2a7e70972c0 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2a7e70971e0 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x2a7e7097470 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2a7e7097390 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x2a7e7097808 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a7e7097540 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2a7e70975b8 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e7097630 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e7097af8 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a7e70978e8 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x2a7e7097960 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e70979d8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e7097de8 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a7e7097bd8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2a7e7097c50 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e7097cc8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e70920c0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a7e7097ec8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2a7e7097f40 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e7097fb8 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e70923c0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a7e70921a0 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e7092218 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e7092610 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a7e7092498 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e7092510 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e7092860 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a7e70926e8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e7092760 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e7092ab0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a7e7092938 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e70929b0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e7092e68 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a7e7092b88 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2a7e7092c00 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a7e7092c78 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x2a7e70942f0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a7e7092f48 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2a7e7092fc0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e7093038 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e70940e0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e70946a8 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a7e70943d8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2a7e7094450 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e70944c8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e7094998 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a7e7094788 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x2a7e7094800 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e7094878 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e7094c88 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a7e7094a78 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a7e7094af0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a7e7094b68 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x2a7e7095010 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a7e7094d68 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a7e7094de0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e7094e58 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e7094ed0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e70954a0 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a7e7095118 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a7e7095190 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e7095208 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a7e7095280 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x2a7e70959a8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a7e7095588 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a7e7095600 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e7095678 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e70956f0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e7095768 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e7095d68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a7e7095b58 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2a7e7095bd0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e7095c48 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2a7e7095e20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e7096330 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a7e7096020 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2a7e7096100 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e7096178 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a7e70961f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x2a7e70963f0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e70966a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a7e7096530 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x2a7e70965a8 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x2a7e7096860 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2a7e7096780 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x2a7e7096b40 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a7e7096930 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2a7e70969a8 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e7096a20 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e7096d98 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a7e7096c20 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e7096c98 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e709ffc0 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a7e7096e70 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a7e7096ee8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a7e7096f60 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x2a7e70a0348 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a7e70a00a0 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a7e70a0118 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e70a0190 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e70a0208 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e70a0510 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2a7e70a0430 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x2a7e70a0758 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a7e70a05e0 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e70a0658 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e70a0a60 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e70a0830 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e70a08a8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70a0cb0 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e70a0b38 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e70a0bb0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70a0f00 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e70a0d88 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e70a0e00 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e709e298 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e709dfc8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a7e709e040 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a7e709e0b8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e709e588 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e709e378 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a7e709e3f0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a7e709e468 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e709e878 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e709e668 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a7e709e6e0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a7e709e758 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e709ec38 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e709e958 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2a7e709e9d0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e709ea48 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e709bf80 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e709ed18 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2a7e709ed90 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e709ee08 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e709c270 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e709c060 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2a7e709c0d8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e709c150 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e709c6c0 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e709c350 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2a7e709c3c8 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a7e709c440 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a7e709c4b8 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e709ca50 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e709c7a8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x2a7e709c820 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a7e709c898 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a7e709c910 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e709cde0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e709cb38 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x2a7e709cbb0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a7e709cc28 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a7e709cca0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e709d2a0 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e709cec8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a7e709cf90 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e709d008 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e709d080 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e709d630 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e709d388 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a7e709d400 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e709d478 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e709d4f0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e709d9c0 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e709d718 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a7e709d790 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e709d808 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e709d880 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e709dec8 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e709daa8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a7e709db20 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e709db98 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a7e709dc10 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a7e709dc88 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e70a2348 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e70a2008 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a7e70a2080 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e70a20f8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a7e70a2170 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a7e70a21e8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e70a2778 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e70a2438 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a7e70a24b0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e70a2528 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a7e70a25a0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a7e70a2618 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e70a29e0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e70a2868 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e70a28e0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70a2c30 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e70a2ab8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e70a2b30 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70a2f18 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e70a2d08 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a7e70a2d80 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a7e70a2df8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e709f348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e709f0a0 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a7e709f118 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e709f190 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a7e709f208 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2a7e709f408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e709f978 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e709f550 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a7e709f5c8 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e709f640 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e709f6b8 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e709f730 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e709feb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e709fb70 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a7e709fbe8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e709fc60 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a7e709fcd8 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2a7e709fd50 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2a7e70a0fd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e70a15e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e70a1118 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a7e70a1190 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e70a1208 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e70a1280 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a7e70a12f8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a7e70a1370 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e70a1ae0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a7e70a18a8 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2a7e70a1920 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x2a7e70a1b90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2a7e70a1ca8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2a7e709b1d8 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a7e70a1f60 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2a7e709af80 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a7e709aff8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x2a7e709b290 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2a7e709b3a8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2a7e709b948 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e709b668 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2a7e709b6e0 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a7e709b758 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x2a7e709ba00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2a7e709bb20 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2a7e70a7240 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e709bde0 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2a7e709be58 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a7e709bed0 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2a7e70a7030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x2a7e70a7300 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2a7e70a7420 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2a7e70a7728 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x2a7e70a7548 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x2a7e70a75c0 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e70a7638 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x2a7e70a82e0 <line:37:1, line:44:1>
|   |-DeclStmt 0x2a7e70a7870 <line:38:5, col:21>
|   | `-VarDecl 0x2a7e70a7808 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x2a7e70a7908 <line:39:5, col:13>
|   | `-VarDecl 0x2a7e70a78a0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x2a7e70a7c60 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x2a7e70a7c48 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2a7e70a7b60 <col:34> '<builtin fn type>' Function 0x2a7e70a79f8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x2a7e70a7b98 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x2a7e70a7808 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x2a7e70a7bd0 <col:29> 'const wchar_t *' lvalue ParmVar 0x2a7e70a7638 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x2a7e70a7f20 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x2a7e70a7c90 <col:5> 'int' lvalue Var 0x2a7e70a78a0 '_Ret' 'int'
|   | `-CallExpr 0x2a7e70a7e60 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x2a7e70a7e48 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2a7e70a7cc8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2a7e709dec8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x2a7e70a7ea8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2a7e70a7ce8 <col:27> 'wchar_t *' lvalue ParmVar 0x2a7e70a7548 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x2a7e70a7ec0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2a7e70a7d08 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2a7e70a75c0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x2a7e70a7ed8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2a7e70a7d28 <col:44> 'const wchar_t *' lvalue ParmVar 0x2a7e70a7638 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x2a7e70a7ef0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x2a7e70a7db0 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x2a7e70a7d88 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x2a7e70a7d48 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x2a7e70a7f08 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2a7e70a7dd0 <col:59> 'va_list':'char *' lvalue Var 0x2a7e70a7808 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x2a7e70a8270 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x2a7e70a8258 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2a7e70a81a8 <col:34> '<builtin fn type>' Function 0x2a7e70a8040 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x2a7e70a81e0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x2a7e70a7808 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x2a7e70a82d0 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x2a7e70a82b8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2a7e70a8298 <col:12> 'int' lvalue Var 0x2a7e70a78a0 '_Ret' 'int'
|-FunctionDecl 0x2a7e70a79f8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x2a7e70a7a98 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x2a7e70a7b08 <col:34> Implicit
|-FunctionDecl 0x2a7e70a8040 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x2a7e70a80e0 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x2a7e70a8150 <col:34> Implicit
|-FunctionDecl 0x2a7e70a85d8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x2a7e70a8330 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x2a7e70a83a8 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e70a8420 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a7e70a8498 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x2a7e70a88c0 <line:50:1, line:52:1>
|   `-ReturnStmt 0x2a7e70a88b0 <line:51:5, col:62>
|     `-CallExpr 0x2a7e70a87f0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x2a7e70a87d8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2a7e70a86b0 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2a7e709dec8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x2a7e70a8838 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2a7e70a86d0 <col:27> 'wchar_t *' lvalue ParmVar 0x2a7e70a8330 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x2a7e70a8850 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x2a7e70a86f0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2a7e70a83a8 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x2a7e70a8868 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2a7e70a8710 <col:44> 'const wchar_t *' lvalue ParmVar 0x2a7e70a8420 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x2a7e70a8880 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x2a7e70a8798 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x2a7e70a8770 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x2a7e70a8730 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x2a7e70a8898 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x2a7e70a87b8 <col:59> 'va_list':'char *' lvalue ParmVar 0x2a7e70a8498 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x2a7e70a8b60 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x2a7e70a88e8 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x2a7e70a8960 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e70a89d8 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a7e70a8a50 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x2a7e70a60c8 <line:61:1, line:68:1>
|   |-DeclStmt 0x2a7e70a8cb0 <line:62:5, col:21>
|   | `-VarDecl 0x2a7e70a8c48 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x2a7e70a8d48 <line:63:5, col:13>
|   | `-VarDecl 0x2a7e70a8ce0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x2a7e70a8df0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x2a7e70a8dd8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2a7e70a8d60 <col:34> '<builtin fn type>' Function 0x2a7e70a79f8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x2a7e70a8d80 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x2a7e70a8c48 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x2a7e70a8db8 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2a7e70a8a50 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x2a7e70a8ff0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x2a7e70a8e20 <col:5> 'int' lvalue Var 0x2a7e70a8ce0 '_Ret' 'int'
|   | `-CallExpr 0x2a7e70a8f30 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x2a7e70a8f18 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2a7e70a8e58 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2a7e709dec8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x2a7e70a8f78 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2a7e70a8e78 <col:27> 'wchar_t *' lvalue ParmVar 0x2a7e70a88e8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x2a7e70a8f90 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2a7e70a8e98 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2a7e70a8960 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x2a7e70a8fa8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2a7e70a8eb8 <col:44> 'const wchar_t *' lvalue ParmVar 0x2a7e70a89d8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x2a7e70a8fc0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2a7e70a8ed8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2a7e70a8a50 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x2a7e70a8fd8 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2a7e70a8ef8 <col:64> 'va_list':'char *' lvalue Var 0x2a7e70a8c48 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x2a7e70a6058 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x2a7e70a6040 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2a7e70a9010 <col:34> '<builtin fn type>' Function 0x2a7e70a8040 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x2a7e70a6020 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x2a7e70a8c48 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x2a7e70a60b8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x2a7e70a60a0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2a7e70a6080 <col:12> 'int' lvalue Var 0x2a7e70a8ce0 '_Ret' 'int'
|-FunctionDecl 0x2a7e70a6458 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x2a7e70a6118 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x2a7e70a6190 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e70a6208 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a7e70a6280 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2a7e70a62f8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x2a7e70a66e0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x2a7e70a66d0 <line:75:5, col:67>
|     `-CallExpr 0x2a7e70a6610 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x2a7e70a65f8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2a7e70a6538 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2a7e709dec8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x2a7e70a6658 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2a7e70a6558 <col:27> 'wchar_t *' lvalue ParmVar 0x2a7e70a6118 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x2a7e70a6670 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x2a7e70a6578 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2a7e70a6190 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x2a7e70a6688 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2a7e70a6598 <col:44> 'const wchar_t *' lvalue ParmVar 0x2a7e70a6208 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x2a7e70a66a0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x2a7e70a65b8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2a7e70a6280 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x2a7e70a66b8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x2a7e70a65d8 <col:64> 'va_list':'char *' lvalue ParmVar 0x2a7e70a62f8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x2a7e70a6928 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2a7e70a6708 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x2a7e70a6780 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x2a7e70a6b78 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a7e70a6a00 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e70a6a78 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e70a6e60 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a7e70a6c50 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a7e70a6cc8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a7e70a6d40 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a7e70a5188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a7e70a5010 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x2a7e70a5088 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2a7e70a5238 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e70a5648 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e70a5438 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x2a7e70a54b0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a7e70a5528 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2a7e70a5700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e70a59b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a7e70a5840 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x2a7e70a58b8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x2a7e70a5ca0 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e70a5a90 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2a7e70a5b08 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e70a5b80 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70aa0d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a7e70a5e40 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2a7e70a5eb8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2a7e70aa180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e70aa658 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e70aa380 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2a7e70aa3f8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a7e70aa470 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2a7e70aa710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e70aa9c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a7e70aa850 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2a7e70aa8c8 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x2a7e70aacb0 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e70aaaa0 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2a7e70aab18 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e70aab90 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70a9138 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a7e70aae50 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2a7e70aaec8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e70aaf40 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2a7e70a91f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e70a9770 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e70a93f0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2a7e70a9468 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e70a94e0 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a7e70a9558 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2a7e70a9830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e70a9b80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a7e70a9970 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2a7e70a99e8 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a7e70a9a60 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x2a7e70a9f08 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e70a9c60 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2a7e70a9cd8 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e70a9d50 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e70a9dc8 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70a41b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x2a7e70a40d0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2a7e70a4258 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e70a45d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e70a4458 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a7e70a44d0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2a7e70a4680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e70a48a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2a7e70a47c0 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x2a7e70a4ae8 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a7e70a4970 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a7e70a49e8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70a4de8 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x2a7e70a4bc8 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x2a7e70a4c40 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x2a7e70ae248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2a7e70a4f80 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2a7e70ae0a0 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x2a7e70ae2f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e70ae700 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2a7e70ae440 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x2a7e70ae4b8 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x2a7e70ae530 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x2a7e70aeb60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2a7e70ae8a0 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2a7e70ae918 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x2a7e70ae990 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x2a7e70aec18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e70ab0b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2a7e70aed60 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x2a7e70aedd8 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2a7e70aee50 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x2a7e70aeec8 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x2a7e70ab310 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x2a7e70ab1a0 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x2a7e70ab550 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2a7e70ab3e0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x2a7e70ab458 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x2a7e70ab708 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x2a7e70ab628 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x2a7e70ab9f8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2a7e70ab7d8 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x2a7e70ab850 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2a7e70abc68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2a7e70abb90 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x2a7e70abd10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a7e70abf28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2a7e70abe50 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x2a7e70b21d8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2a7e70abff8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2a7e70b20e0 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2a7e70b2420 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x2a7e70b22b0 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2a7e70b2328 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2a7e70b25d0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2a7e70b24f8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x2a7e70b2778 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2a7e70b26a0 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x2a7e70b2928 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2a7e70b2848 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x2a7e70b2ad8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2a7e70b29f8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x2a7e70b2e50 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2a7e70b2bb0 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x2a7e70b2c28 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e70b2ca0 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a7e70b2d18 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x2a7e70b32c0 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2a7e70b2f40 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x2a7e70b2fb8 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e70b3030 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e70b30f0 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a7e70b3168 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x2a7e70b35d0 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x2a7e70b33b0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2a7e70b3430 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x2a7e70b34b0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x2a7e70b3790 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x2a7e70b36b0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x2a7e70b3a80 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x2a7e70b3860 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x2a7e70b38e0 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x2a7e70b3960 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x2a7e70b3c40 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x2a7e70b3b60 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x2a7e70b3fb8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2a7e70b3d18 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x2a7e70b3d90 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a7e70b3e08 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a7e70b3e80 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x2a7e70ac1f8 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2a7e70ac080 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x2a7e70ac0f8 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x2a7e70ac530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x2a7e70ac3b0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x2a7e70ac430 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x2a7e70ac5e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x2a7e70ac898 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2a7e70ac938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x2a7e70acc78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x2a7e70acb00 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x2a7e70acb80 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x2a7e70acd28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x2a7e70b00c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2a7e70b0160 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x2a7e70b0400 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x2a7e70b0320 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x2a7e70b04a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x2a7e70b0728 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2a7e70b07c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x2a7e70b0a70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x2a7e70b0990 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x2a7e70b0b18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x2a7e70b0df8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x2a7e70b0d18 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x2a7e70b0ea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x2a7e70b4278 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2a7e70b4100 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x2a7e70b4178 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x2a7e70b4328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x2a7e70b45e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2a7e70b4688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x2a7e70b48c0 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:49:9, col:58> col:40 __pctype_func 'const unsigned short *(void) __attribute__((cdecl))':'const unsigned short *(void)'
|-VarDecl 0x2a7e70b4990 <line:51:9, col:38> col:38 _pctype 'const unsigned short *' extern
|-VarDecl 0x2a7e70b4a90 <line:62:9, col:45> col:37 _wctype 'const unsigned short []' extern
|-FunctionDecl 0x2a7e70b4c88 <line:73:9, col:53> col:34 __pwctype_func 'const wctype_t *(void) __attribute__((cdecl))':'const wctype_t *(void)'
|-VarDecl 0x2a7e70b4d50 <line:75:9, col:32> col:32 _pwctype 'const wctype_t *' extern
|-FunctionDecl 0x2a7e70b4fd0 <line:119:24, col:72> col:36 _isctype 'int (int, int) __attribute__((cdecl))':'int (int, int)'
| |-ParmVarDecl 0x2a7e70b4de8 <col:50, col:54> col:54 _C 'int'
| `-ParmVarDecl 0x2a7e70b4e68 <col:63, col:67> col:67 _Type 'int'
|-FunctionDecl 0x2a7e70b63f8 <line:120:24, col:102> col:36 _isctype_l 'int (int, int, _locale_t) __attribute__((cdecl))':'int (int, int, _locale_t)'
| |-ParmVarDecl 0x2a7e70b6120 <col:52, col:56> col:56 _C 'int'
| |-ParmVarDecl 0x2a7e70b61a0 <col:65, col:69> col:69 _Type 'int'
| `-ParmVarDecl 0x2a7e70b6218 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70b65c0 <line:121:55> col:55 implicit isalpha 'int (int)' extern
| |-ParmVarDecl 0x2a7e70b6660 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x2a7e70b66d0 <col:55> Implicit
| `-PureAttr 0x2a7e70b6728 <col:55> Implicit
|-FunctionDecl 0x2a7e70b6750 prev 0x2a7e70b65c0 <col:43, col:74> col:55 isalpha 'int (int)'
| |-ParmVarDecl 0x2a7e70b64e0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x2a7e70b6840 <col:55> Inherited Implicit
| `-PureAttr 0x2a7e70b6868 <col:55> Inherited Implicit
|-FunctionDecl 0x2a7e70b6ad0 <line:122:24, col:86> col:36 _isalpha_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x2a7e70b68a8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x2a7e70b6920 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70b6c90 <line:123:55> col:55 implicit isupper 'int (int)' extern
| |-ParmVarDecl 0x2a7e70b6d30 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x2a7e70b6da0 <col:55> Implicit
| `-PureAttr 0x2a7e70b6df8 <col:55> Implicit
|-FunctionDecl 0x2a7e70b6e20 prev 0x2a7e70b6c90 <col:43, col:74> col:55 isupper 'int (int)'
| |-ParmVarDecl 0x2a7e70b6bb0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x2a7e70b6f10 <col:55> Inherited Implicit
| `-PureAttr 0x2a7e70b6f38 <col:55> Inherited Implicit
|-FunctionDecl 0x2a7e70b5110 <line:124:24, col:86> col:36 _isupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x2a7e70b6f78 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x2a7e70b6ff0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70b52d0 <line:125:55> col:55 implicit islower 'int (int)' extern
| |-ParmVarDecl 0x2a7e70b5370 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x2a7e70b53e0 <col:55> Implicit
| `-PureAttr 0x2a7e70b5438 <col:55> Implicit
|-FunctionDecl 0x2a7e70b5460 prev 0x2a7e70b52d0 <col:43, col:74> col:55 islower 'int (int)'
| |-ParmVarDecl 0x2a7e70b51f0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x2a7e70b5550 <col:55> Inherited Implicit
| `-PureAttr 0x2a7e70b5578 <col:55> Inherited Implicit
|-FunctionDecl 0x2a7e70b5730 <line:126:24, col:86> col:36 _islower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x2a7e70b55b8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x2a7e70b5630 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70b58f0 <line:127:55> col:55 implicit used isdigit 'int (int)' extern
| |-ParmVarDecl 0x2a7e70b5990 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x2a7e70b5a00 <col:55> Implicit
| `-PureAttr 0x2a7e70b5a58 <col:55> Implicit
|-FunctionDecl 0x2a7e70b5a80 prev 0x2a7e70b58f0 <col:43, col:74> col:55 used isdigit 'int (int)'
| |-ParmVarDecl 0x2a7e70b5810 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x2a7e70b5b70 <col:55> Inherited Implicit
| `-PureAttr 0x2a7e70b5b98 <col:55> Inherited Implicit
|-FunctionDecl 0x2a7e70b5d50 <line:128:24, col:86> col:36 _isdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x2a7e70b5bd8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x2a7e70b5c50 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70b5f10 <line:129:36> col:36 implicit used isxdigit 'int (int)' extern
| |-ParmVarDecl 0x2a7e70b5fb0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x2a7e70b6020 <col:36> Implicit
| `-PureAttr 0x2a7e70b6078 <col:36> Implicit
|-FunctionDecl 0x2a7e70b10d0 prev 0x2a7e70b5f10 <col:24, col:56> col:36 used isxdigit 'int (int)'
| |-ParmVarDecl 0x2a7e70b5e30 <col:50, col:54> col:54 _C 'int'
| |-NoThrowAttr 0x2a7e70b11c0 <col:36> Inherited Implicit
| `-PureAttr 0x2a7e70b11e8 <col:36> Inherited Implicit
|-FunctionDecl 0x2a7e70b13a0 <line:130:24, col:87> col:36 _isxdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x2a7e70b1228 <col:53, col:57> col:57 _C 'int'
| `-ParmVarDecl 0x2a7e70b12a0 <col:70, col:80> col:80 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70b1560 <line:131:55> col:55 implicit isspace 'int (int)' extern
| |-ParmVarDecl 0x2a7e70b1600 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x2a7e70b1670 <col:55> Implicit
| `-PureAttr 0x2a7e70b16c8 <col:55> Implicit
|-FunctionDecl 0x2a7e70b16f0 prev 0x2a7e70b1560 <col:43, col:74> col:55 isspace 'int (int)'
| |-ParmVarDecl 0x2a7e70b1480 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x2a7e70b17e0 <col:55> Inherited Implicit
| `-PureAttr 0x2a7e70b1808 <col:55> Inherited Implicit
|-FunctionDecl 0x2a7e70b19c0 <line:132:24, col:86> col:36 _isspace_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x2a7e70b1848 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x2a7e70b18c0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70b1b80 <line:133:36> col:36 implicit ispunct 'int (int)' extern
| |-ParmVarDecl 0x2a7e70b1c20 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x2a7e70b1c90 <col:36> Implicit
| `-PureAttr 0x2a7e70b1ce8 <col:36> Implicit
|-FunctionDecl 0x2a7e70b1d10 prev 0x2a7e70b1b80 <col:24, col:55> col:36 ispunct 'int (int)'
| |-ParmVarDecl 0x2a7e70b1aa0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x2a7e70b1e00 <col:36> Inherited Implicit
| `-PureAttr 0x2a7e70b1e28 <col:36> Inherited Implicit
|-FunctionDecl 0x2a7e70b1fe0 <line:134:24, col:86> col:36 _ispunct_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x2a7e70b1e68 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x2a7e70b1ee0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70be1f0 <line:135:36> col:36 implicit isblank 'int (int)' extern
| |-ParmVarDecl 0x2a7e70be290 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x2a7e70be300 <col:36> Implicit
| `-PureAttr 0x2a7e70be358 <col:36> Implicit
|-FunctionDecl 0x2a7e70be380 prev 0x2a7e70be1f0 <col:24, col:55> col:36 isblank 'int (int)'
| |-ParmVarDecl 0x2a7e70be110 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x2a7e70be470 <col:36> Inherited Implicit
| `-PureAttr 0x2a7e70be498 <col:36> Inherited Implicit
|-FunctionDecl 0x2a7e70be650 <line:136:24, col:86> col:36 _isblank_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x2a7e70be4d8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x2a7e70be550 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70be810 <line:137:55> col:55 implicit isalnum 'int (int)' extern
| |-ParmVarDecl 0x2a7e70be8b0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x2a7e70be920 <col:55> Implicit
| `-PureAttr 0x2a7e70be978 <col:55> Implicit
|-FunctionDecl 0x2a7e70be9a0 prev 0x2a7e70be810 <col:43, col:74> col:55 isalnum 'int (int)'
| |-ParmVarDecl 0x2a7e70be730 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x2a7e70bea90 <col:55> Inherited Implicit
| `-PureAttr 0x2a7e70beab8 <col:55> Inherited Implicit
|-FunctionDecl 0x2a7e70bec70 <line:138:24, col:86> col:36 _isalnum_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x2a7e70beaf8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x2a7e70beb70 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70bee30 <line:139:36> col:36 implicit isprint 'int (int)' extern
| |-ParmVarDecl 0x2a7e70beed0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x2a7e70bef40 <col:36> Implicit
| `-PureAttr 0x2a7e70bef98 <col:36> Implicit
|-FunctionDecl 0x2a7e70befc0 prev 0x2a7e70bee30 <col:24, col:55> col:36 isprint 'int (int)'
| |-ParmVarDecl 0x2a7e70bed50 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x2a7e70bf0b0 <col:36> Inherited Implicit
| `-PureAttr 0x2a7e70bf0d8 <col:36> Inherited Implicit
|-FunctionDecl 0x2a7e70c12d0 <line:140:24, col:86> col:36 _isprint_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x2a7e70c1158 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x2a7e70c11d0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70c1490 <line:141:36> col:36 implicit isgraph 'int (int)' extern
| |-ParmVarDecl 0x2a7e70c1530 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x2a7e70c15a0 <col:36> Implicit
| `-PureAttr 0x2a7e70c15f8 <col:36> Implicit
|-FunctionDecl 0x2a7e70c1620 prev 0x2a7e70c1490 <col:24, col:55> col:36 isgraph 'int (int)'
| |-ParmVarDecl 0x2a7e70c13b0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x2a7e70c1710 <col:36> Inherited Implicit
| `-PureAttr 0x2a7e70c1738 <col:36> Inherited Implicit
|-FunctionDecl 0x2a7e70c18f0 <line:142:24, col:86> col:36 _isgraph_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x2a7e70c1778 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x2a7e70c17f0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70c1ab0 <line:143:36> col:36 implicit iscntrl 'int (int)' extern
| |-ParmVarDecl 0x2a7e70c1b50 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x2a7e70c1bc0 <col:36> Implicit
| `-PureAttr 0x2a7e70c1c18 <col:36> Implicit
|-FunctionDecl 0x2a7e70c1c40 prev 0x2a7e70c1ab0 <col:24, col:55> col:36 iscntrl 'int (int)'
| |-ParmVarDecl 0x2a7e70c19d0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x2a7e70c1d30 <col:36> Inherited Implicit
| `-PureAttr 0x2a7e70c1d58 <col:36> Inherited Implicit
|-FunctionDecl 0x2a7e70c1f10 <line:144:24, col:86> col:36 _iscntrl_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x2a7e70c1d98 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x2a7e70c1e10 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70c3160 <line:145:55> col:55 implicit toupper 'int (int)' extern
| |-ParmVarDecl 0x2a7e70c3200 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x2a7e70c3270 <col:55> Implicit
| `-PureAttr 0x2a7e70c32c8 <col:55> Implicit
|-FunctionDecl 0x2a7e70c32f0 prev 0x2a7e70c3160 <col:43, col:74> col:55 toupper 'int (int)'
| |-ParmVarDecl 0x2a7e70c1ff0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x2a7e70c33e0 <col:55> Inherited Implicit
| `-PureAttr 0x2a7e70c3408 <col:55> Inherited Implicit
|-FunctionDecl 0x2a7e70c3528 <line:146:55> col:55 implicit tolower 'int (int)' extern
| |-ParmVarDecl 0x2a7e70c35c8 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x2a7e70c3638 <col:55> Implicit
| `-PureAttr 0x2a7e70c3690 <col:55> Implicit
|-FunctionDecl 0x2a7e70c36b8 prev 0x2a7e70c3528 <col:43, col:74> col:55 tolower 'int (int)'
| |-ParmVarDecl 0x2a7e70c3448 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x2a7e70c37a8 <col:55> Inherited Implicit
| `-PureAttr 0x2a7e70c37d0 <col:55> Inherited Implicit
|-FunctionDecl 0x2a7e70c38f0 <line:147:43, col:75> col:55 _tolower 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2a7e70c3810 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x2a7e70c3b40 <line:148:24, col:86> col:36 _tolower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x2a7e70c39c8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x2a7e70c3a40 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70c3d00 <line:149:43, col:75> col:55 _toupper 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2a7e70c3c20 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x2a7e70c3f50 <line:150:24, col:86> col:36 _toupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x2a7e70c3dd8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x2a7e70c3e50 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70bd100 <line:151:24, col:57> col:36 __isascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2a7e70c4030 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x2a7e70bd2b8 <line:152:24, col:57> col:36 __toascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2a7e70bd1d8 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x2a7e70bd470 <line:153:24, col:57> col:36 __iscsymf 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2a7e70bd390 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x2a7e70bd628 <line:154:24, col:56> col:36 __iscsym 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2a7e70bd548 <col:50, col:54> col:54 _C 'int'
|-FunctionDecl 0x2a7e70bd878 <line:164:24, col:59> col:36 iswalpha 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x2a7e70bd6f8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x2a7e70bdb70 <line:165:24, col:90> col:36 _iswalpha_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x2a7e70bd948 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2a7e70bd9c0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70bdd28 <line:166:24, col:59> col:36 iswupper 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x2a7e70bdc48 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x2a7e70bdf70 <line:167:24, col:90> col:36 _iswupper_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x2a7e70bddf8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2a7e70bde70 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70bf158 <line:168:24, col:59> col:36 iswlower 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x2a7e70be048 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x2a7e70bf3a0 <line:169:24, col:90> col:36 _iswlower_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x2a7e70bf228 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2a7e70bf2a0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70bf558 <line:170:24, col:59> col:36 iswdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x2a7e70bf478 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x2a7e70bf7a0 <line:171:24, col:90> col:36 _iswdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x2a7e70bf628 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2a7e70bf6a0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70bf958 <line:172:24, col:60> col:36 iswxdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x2a7e70bf878 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x2a7e70bfba0 <line:173:24, col:91> col:36 _iswxdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x2a7e70bfa28 <col:54, col:61> col:61 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2a7e70bfaa0 <col:74, col:84> col:84 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70bfd58 <line:174:24, col:59> col:36 iswspace 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x2a7e70bfc78 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x2a7e70bffa0 <line:175:24, col:90> col:36 _iswspace_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x2a7e70bfe28 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2a7e70bfea0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70c2188 <line:176:24, col:59> col:36 iswpunct 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x2a7e70c0078 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x2a7e70c23d0 <line:177:24, col:90> col:36 _iswpunct_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x2a7e70c2258 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2a7e70c22d0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70c2588 <line:178:24, col:59> col:36 iswblank 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x2a7e70c24a8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x2a7e70c27d0 <line:179:24, col:90> col:36 _iswblank_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x2a7e70c2658 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2a7e70c26d0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70c2988 <line:180:24, col:59> col:36 iswalnum 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x2a7e70c28a8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x2a7e70c2bd0 <line:181:24, col:90> col:36 _iswalnum_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x2a7e70c2a58 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2a7e70c2ad0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70c2d88 <line:182:24, col:59> col:36 iswprint 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x2a7e70c2ca8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x2a7e70c2fd0 <line:183:24, col:90> col:36 _iswprint_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x2a7e70c2e58 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2a7e70c2ed0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70bc128 <line:184:24, col:59> col:36 iswgraph 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x2a7e70c30a8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x2a7e70bc370 <line:185:24, col:90> col:36 _iswgraph_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x2a7e70bc1f8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2a7e70bc270 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70bc528 <line:186:24, col:59> col:36 iswcntrl 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x2a7e70bc448 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x2a7e70bc770 <line:187:24, col:90> col:36 _iswcntrl_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x2a7e70bc5f8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2a7e70bc670 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70bc928 <line:188:24, col:59> col:36 iswascii 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x2a7e70bc848 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x2a7e70bcb40 <line:190:24, col:62> col:39 towupper 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x2a7e70bc9f8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x2a7e70bce28 <line:191:24, col:93> col:39 _towupper_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x2a7e70bcc10 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2a7e70bcc88 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70bcfd8 <line:192:24, col:62> col:39 towlower 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x2a7e70bcf00 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x2a7e70c52f0 <line:193:24, col:93> col:39 _towlower_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x2a7e70c5180 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2a7e70c51f8 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70c55f0 <line:194:24, col:80> col:36 iswctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x2a7e70c53c8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2a7e70c5440 <col:66, col:75> col:75 _Type 'wctype_t':'unsigned short'
|-FunctionDecl 0x2a7e70c5998 <line:195:24, col:111> col:36 _iswctype_l 'int (wint_t, wctype_t, _locale_t) __attribute__((cdecl))':'int (wint_t, wctype_t, _locale_t)'
| |-ParmVarDecl 0x2a7e70c56c8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x2a7e70c5740 <col:69, col:78> col:78 _Type 'wctype_t':'unsigned short'
| `-ParmVarDecl 0x2a7e70c57b8 <col:94, col:104> col:104 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70c5b58 <line:197:24, col:61> col:36 __iswcsymf 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x2a7e70c5a78 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x2a7e70c5da0 <line:198:24, col:90> col:36 _iswcsymf_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x2a7e70c5c28 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2a7e70c5ca0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70c5f58 <line:199:24, col:60> col:36 __iswcsym 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x2a7e70c5e78 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x2a7e70c61d0 <line:200:24, col:89> col:36 _iswcsym_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x2a7e70c6028 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2a7e70c60a0 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70c6390 <line:203:24, col:58> col:36 isleadbyte 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2a7e70c62b0 <col:52, col:56> col:56 _C 'int'
|-FunctionDecl 0x2a7e70c65e0 <line:204:24, col:89> col:36 _isleadbyte_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x2a7e70c6468 <col:55, col:59> col:59 _C 'int'
| `-ParmVarDecl 0x2a7e70c64e0 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70c68f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:205:90> col:45 is_wctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x2a7e70c6778 <col:60, col:67> col:67 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x2a7e70c67f0 <col:76, col:85> col:85 _Type 'wctype_t':'unsigned short'
| `-DeprecatedAttr 0x2a7e70c69a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using iswctype instead. See online help for details." ""
|-VarDecl 0x2a7e70c6ae8 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:235:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x2a7e70c6c38 <line:239:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2a7e70c6e68 <line:240:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x2a7e70c6d00 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a7e70d32a8 <.//openssl//file_jk/before\crypto\bn/bn_lcl.h:220:1, line:221:37> line:220:10 invalid bn_mul_add_words 'int (int *, const int *, int, int)'
| |-ParmVarDecl 0x2a7e70c6f40 <col:27, col:37> col:37 invalid rp 'int *'
| |-ParmVarDecl 0x2a7e70c6fc0 <col:41, col:57> col:57 invalid ap 'const int *'
| |-ParmVarDecl 0x2a7e70c7040 <col:61, col:65> col:65 num 'int'
| `-ParmVarDecl 0x2a7e70c70c0 <line:221:27, col:36> col:36 invalid w 'int'
|-FunctionDecl 0x2a7e70d35b0 <line:222:1, col:76> col:10 invalid bn_mul_words 'int (int *, const int *, int, int)'
| |-ParmVarDecl 0x2a7e70d3380 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x2a7e70d3400 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x2a7e70d3480 <col:57, col:61> col:61 num 'int'
| `-ParmVarDecl 0x2a7e70d3500 <col:66, col:75> col:75 invalid w 'int'
|-FunctionDecl 0x2a7e70d3868 <line:223:1, col:60> col:6 invalid bn_sqr_words 'void (int *, const int *, int)'
| |-ParmVarDecl 0x2a7e70d3688 <col:19, col:29> col:29 invalid rp 'int *'
| |-ParmVarDecl 0x2a7e70d3708 <col:33, col:49> col:49 invalid ap 'const int *'
| `-ParmVarDecl 0x2a7e70d3788 <col:53, col:57> col:57 num 'int'
|-FunctionDecl 0x2a7e70d3b20 <line:224:1, col:57> col:10 invalid bn_div_words 'int (int, int, int)'
| |-ParmVarDecl 0x2a7e70d3938 <col:23, col:32> col:32 invalid h 'int'
| |-ParmVarDecl 0x2a7e70d39b8 <col:35, col:44> col:44 invalid l 'int'
| `-ParmVarDecl 0x2a7e70d3a38 <col:47, col:56> col:56 invalid d 'int'
|-FunctionDecl 0x2a7e70d3e70 <line:225:1, line:226:30> line:225:10 invalid bn_add_words 'int (int *, const int *, const int *, int)'
| |-ParmVarDecl 0x2a7e70d3bf0 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x2a7e70d3c70 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x2a7e70d3cf0 <col:57, col:73> col:73 invalid bp 'const int *'
| `-ParmVarDecl 0x2a7e70d3d70 <line:226:23, col:27> col:27 num 'int'
|-FunctionDecl 0x2a7e70d4178 <line:227:1, line:228:30> line:227:10 invalid bn_sub_words 'int (int *, const int *, const int *, int)'
| |-ParmVarDecl 0x2a7e70d3f48 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x2a7e70d3fc8 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x2a7e70d4048 <col:57, col:73> col:73 invalid bp 'const int *'
| `-ParmVarDecl 0x2a7e70d40c8 <line:228:23, col:27> col:27 num 'int'
|-RecordDecl 0x2a7e70d5280 <line:230:1, line:238:1> line:230:8 invalid struct bignum_st definition
| |-FieldDecl 0x2a7e70d5358 <line:231:5, col:15> col:15 invalid d 'int *'
| |-FieldDecl 0x2a7e70d53c8 <line:233:5, col:9> col:9 top 'int'
| |-FieldDecl 0x2a7e70d5438 <line:235:5, col:9> col:9 dmax 'int'
| |-FieldDecl 0x2a7e70d54a8 <line:236:5, col:9> col:9 neg 'int'
| `-FieldDecl 0x2a7e70d5518 <line:237:5, col:9> col:9 flags 'int'
|-RecordDecl 0x2a7e70d5570 <line:241:1, line:252:1> line:241:8 invalid struct bn_mont_ctx_st definition
| |-FieldDecl 0x2a7e70d5648 <line:242:5, col:9> col:9 ri 'int'
| |-FieldDecl 0x2a7e70d56b8 <line:243:5, col:12> col:12 invalid RR 'int'
| |-FieldDecl 0x2a7e70d5728 <line:245:5, col:12> col:12 invalid N 'int'
| |-FieldDecl 0x2a7e70d5798 <line:246:5, col:12> col:12 invalid Ni 'int'
| |-FieldDecl 0x2a7e70d5890 <line:248:5, <invalid sloc>> col:14 invalid n0 'int [2]'
| `-FieldDecl 0x2a7e70d5900 <line:251:5, col:9> col:9 flags 'int'
|-RecordDecl 0x2a7e70d5958 <line:258:1, line:264:1> line:258:8 invalid struct bn_recp_ctx_st definition
| |-FieldDecl 0x2a7e70d5a28 <line:259:5, col:12> col:12 invalid N 'int'
| |-FieldDecl 0x2a7e70d5a98 <line:260:5, col:12> col:12 invalid Nr 'int'
| |-FieldDecl 0x2a7e70d5b08 <line:261:5, col:9> col:9 num_bits 'int'
| |-FieldDecl 0x2a7e70d5b78 <line:262:5, col:9> col:9 shift 'int'
| `-FieldDecl 0x2a7e70d5be8 <line:263:5, col:9> col:9 flags 'int'
|-RecordDecl 0x2a7e70d5c40 <line:267:1, line:276:1> line:267:8 struct bn_gencb_st definition
| |-FieldDecl 0x2a7e70d5d18 <line:268:5, col:18> col:18 ver 'unsigned int'
| |-FieldDecl 0x2a7e70d5d88 <line:269:5, col:11> col:11 arg 'void *'
| |-RecordDecl 0x2a7e70d5de0 <line:270:5, line:275:5> line:270:5 union definition
| | |-FieldDecl 0x2a7e70d6130 <line:272:9, col:39> col:16 cb_1 'void (*)(int, int, void *)'
| | `-FieldDecl 0x2a7e70d4478 <line:274:9, col:42> col:15 cb_2 'int (*)(int, int, int *)'
| `-FieldDecl 0x2a7e70d4528 <line:270:5, line:275:7> col:7 cb 'union (anonymous union at .//openssl//file_jk/before\crypto\bn/bn_lcl.h:270:5)':'union bn_gencb_st::(anonymous at .//openssl//file_jk/before\crypto\bn/bn_lcl.h:270:5)'
|-FunctionDecl 0x2a7e70d46b8 <line:649:1, col:40> col:6 invalid BN_RECP_CTX_init 'void (int *)'
| `-ParmVarDecl 0x2a7e70d45f8 <col:23, col:36> col:36 invalid recp 'int *'
|-FunctionDecl 0x2a7e70d4808 <line:650:1, col:39> col:6 invalid BN_MONT_CTX_init 'void (int *)'
| `-ParmVarDecl 0x2a7e70d4778 <col:23, col:36> col:36 invalid ctx 'int *'
|-FunctionDecl 0x2a7e70d4958 <line:652:1, col:23> col:6 invalid bn_init 'void (int *)'
| `-ParmVarDecl 0x2a7e70d48c8 <col:14, col:22> col:22 invalid a 'int *'
|-FunctionDecl 0x2a7e70d4d18 <line:653:1, col:73> col:6 invalid bn_mul_normal 'void (int *, int *, int, int *, int)'
| |-ParmVarDecl 0x2a7e70d4a18 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x2a7e70d4a98 <col:33, col:43> col:43 invalid a 'int *'
| |-ParmVarDecl 0x2a7e70d4b18 <col:46, col:50> col:50 na 'int'
| |-ParmVarDecl 0x2a7e70d4b98 <col:54, col:64> col:64 invalid b 'int *'
| `-ParmVarDecl 0x2a7e70d4c18 <col:67, col:71> col:71 nb 'int'
|-FunctionDecl 0x2a7e70d4fd8 <line:654:1, col:57> col:6 invalid bn_mul_comba8 'void (int *, int *, int *)'
| |-ParmVarDecl 0x2a7e70d4df8 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x2a7e70d4e78 <col:33, col:43> col:43 invalid a 'int *'
| `-ParmVarDecl 0x2a7e70d4ef8 <col:46, col:56> col:56 invalid b 'int *'
|-FunctionDecl 0x2a7e70df320 <line:655:1, col:57> col:6 invalid bn_mul_comba4 'void (int *, int *, int *)'
| |-ParmVarDecl 0x2a7e70d50a8 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x2a7e70d5128 <col:33, col:43> col:43 invalid a 'int *'
| `-ParmVarDecl 0x2a7e70d51a8 <col:46, col:56> col:56 invalid b 'int *'
|-FunctionDecl 0x2a7e70df668 <line:656:1, col:72> col:6 invalid bn_sqr_normal 'void (int *, const int *, int, int *)'
| |-ParmVarDecl 0x2a7e70df3f0 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x2a7e70df470 <col:33, col:49> col:49 invalid a 'const int *'
| |-ParmVarDecl 0x2a7e70df4f0 <col:52, col:56> col:56 n 'int'
| `-ParmVarDecl 0x2a7e70df570 <col:59, col:69> col:69 invalid tmp 'int *'
|-FunctionDecl 0x2a7e70df898 <line:657:1, col:50> col:6 invalid bn_sqr_comba8 'void (int *, const int *)'
| |-ParmVarDecl 0x2a7e70df740 <col:20, col:30> col:30 invalid r 'int *'
| `-ParmVarDecl 0x2a7e70df7c0 <col:33, col:49> col:49 invalid a 'const int *'
|-FunctionDecl 0x2a7e70dfa78 <line:658:1, col:50> col:6 invalid bn_sqr_comba4 'void (int *, const int *)'
| |-ParmVarDecl 0x2a7e70df960 <col:20, col:30> col:30 invalid r 'int *'
| `-ParmVarDecl 0x2a7e70df9e0 <col:33, col:49> col:49 invalid a 'const int *'
|-FunctionDecl 0x2a7e70dfd30 <line:659:1, col:61> col:5 invalid bn_cmp_words 'int (const int *, const int *, int)'
| |-ParmVarDecl 0x2a7e70dfb40 <col:18, col:34> col:34 invalid a 'const int *'
| |-ParmVarDecl 0x2a7e70dfbc0 <col:37, col:53> col:53 invalid b 'const int *'
| `-ParmVarDecl 0x2a7e70dfc40 <col:56, col:60> col:60 n 'int'
|-FunctionDecl 0x2a7e70e0080 <line:660:1, col:75> col:5 invalid bn_cmp_part_words 'int (const int *, const int *, int, int)'
| |-ParmVarDecl 0x2a7e70dfe00 <col:23, col:39> col:39 invalid a 'const int *'
| |-ParmVarDecl 0x2a7e70dfe80 <col:42, col:58> col:58 invalid b 'const int *'
| |-ParmVarDecl 0x2a7e70dff00 <col:61, col:65> col:65 cl 'int'
| `-ParmVarDecl 0x2a7e70dff80 <col:69, col:73> col:73 dl 'int'
|-FunctionDecl 0x2a7e70da578 <line:661:1, line:662:52> line:661:6 invalid bn_mul_recursive 'void (int *, int *, int *, int, int, int, int *)'
| |-ParmVarDecl 0x2a7e70e0158 <col:23, col:33> col:33 invalid r 'int *'
| |-ParmVarDecl 0x2a7e70e01d8 <col:36, col:46> col:46 invalid a 'int *'
| |-ParmVarDecl 0x2a7e70e0258 <col:49, col:59> col:59 invalid b 'int *'
| |-ParmVarDecl 0x2a7e70da2d0 <col:62, col:66> col:66 n2 'int'
| |-ParmVarDecl 0x2a7e70da350 <line:662:23, col:27> col:27 dna 'int'
| |-ParmVarDecl 0x2a7e70da3d0 <col:32, col:36> col:36 dnb 'int'
| `-ParmVarDecl 0x2a7e70da450 <col:41, col:51> col:51 invalid t 'int *'
|-FunctionDecl 0x2a7e70daa28 <line:663:1, line:664:64> line:663:6 invalid bn_mul_part_recursive 'void (int *, int *, int *, int, int, int, int *)'
| |-ParmVarDecl 0x2a7e70da668 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x2a7e70da6e8 <col:41, col:51> col:51 invalid a 'int *'
| |-ParmVarDecl 0x2a7e70da768 <col:54, col:64> col:64 invalid b 'int *'
| |-ParmVarDecl 0x2a7e70da7e8 <line:664:28, col:32> col:32 n 'int'
| |-ParmVarDecl 0x2a7e70da868 <col:35, col:39> col:39 tna 'int'
| |-ParmVarDecl 0x2a7e70da8e8 <col:44, col:48> col:48 tnb 'int'
| `-ParmVarDecl 0x2a7e70da968 <col:53, col:63> col:63 invalid t 'int *'
|-FunctionDecl 0x2a7e70dad40 <line:665:1, col:74> col:6 invalid bn_sqr_recursive 'void (int *, const int *, int, int *)'
| |-ParmVarDecl 0x2a7e70dab18 <col:23, col:33> col:33 invalid r 'int *'
| |-ParmVarDecl 0x2a7e70dab98 <col:36, col:52> col:52 invalid a 'const int *'
| |-ParmVarDecl 0x2a7e70dac18 <col:55, col:59> col:59 n2 'int'
| `-ParmVarDecl 0x2a7e70dac98 <col:63, col:73> col:73 invalid t 'int *'
|-FunctionDecl 0x2a7e70db088 <line:666:1, col:68> col:6 invalid bn_mul_low_normal 'void (int *, int *, int *, int)'
| |-ParmVarDecl 0x2a7e70dae18 <col:24, col:34> col:34 invalid r 'int *'
| |-ParmVarDecl 0x2a7e70dae98 <col:37, col:47> col:47 invalid a 'int *'
| |-ParmVarDecl 0x2a7e70daf18 <col:50, col:60> col:60 invalid b 'int *'
| `-ParmVarDecl 0x2a7e70daf98 <col:63, col:67> col:67 n 'int'
|-FunctionDecl 0x2a7e70d8448 <line:667:1, line:668:38> line:667:6 invalid bn_mul_low_recursive 'void (int *, int *, int *, int, int *)'
| |-ParmVarDecl 0x2a7e70db160 <col:27, col:37> col:37 invalid r 'int *'
| |-ParmVarDecl 0x2a7e70db1e0 <col:40, col:50> col:50 invalid a 'int *'
| |-ParmVarDecl 0x2a7e70db260 <col:53, col:63> col:63 invalid b 'int *'
| |-ParmVarDecl 0x2a7e70d82c8 <col:66, col:70> col:70 n2 'int'
| `-ParmVarDecl 0x2a7e70d8348 <line:668:27, col:37> col:37 invalid t 'int *'
|-FunctionDecl 0x2a7e70d88b8 <line:669:1, line:670:29> line:669:6 invalid bn_mul_high 'void (int *, int *, int *, int *, int, int *)'
| |-ParmVarDecl 0x2a7e70d8528 <col:18, col:28> col:28 invalid r 'int *'
| |-ParmVarDecl 0x2a7e70d85a8 <col:31, col:41> col:41 invalid a 'int *'
| |-ParmVarDecl 0x2a7e70d8628 <col:44, col:54> col:54 invalid b 'int *'
| |-ParmVarDecl 0x2a7e70d86a8 <col:57, col:67> col:67 invalid l 'int *'
| |-ParmVarDecl 0x2a7e70d8728 <col:70, col:74> col:74 n2 'int'
| `-ParmVarDecl 0x2a7e70d87a8 <line:670:18, col:28> col:28 invalid t 'int *'
|-FunctionDecl 0x2a7e70d8cb0 <line:671:1, line:672:42> line:671:10 invalid bn_add_part_words 'int (int *, const int *, const int *, int, int)'
| |-ParmVarDecl 0x2a7e70d89a0 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x2a7e70d8a20 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x2a7e70d8aa0 <col:60, col:76> col:76 invalid b 'const int *'
| |-ParmVarDecl 0x2a7e70d8b20 <line:672:28, col:32> col:32 cl 'int'
| `-ParmVarDecl 0x2a7e70d8ba0 <col:36, col:40> col:40 dl 'int'
|-FunctionDecl 0x2a7e70d9048 <line:673:1, line:674:42> line:673:10 invalid bn_sub_part_words 'int (int *, const int *, const int *, int, int)'
| |-ParmVarDecl 0x2a7e70d8d90 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x2a7e70d8e10 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x2a7e70d8e90 <col:60, col:76> col:76 invalid b 'const int *'
| |-ParmVarDecl 0x2a7e70d8f10 <line:674:28, col:32> col:32 cl 'int'
| `-ParmVarDecl 0x2a7e70d8f90 <col:36, col:40> col:40 dl 'int'
|-FunctionDecl 0x2a7e70e0550 <line:675:1, line:676:64> line:675:5 invalid bn_mul_mont 'int (int *, const int *, const int *, const int *, const int *, int)'
| |-ParmVarDecl 0x2a7e70d9128 <col:17, col:27> col:27 invalid rp 'int *'
| |-ParmVarDecl 0x2a7e70d91a8 <col:31, col:47> col:47 invalid ap 'const int *'
| |-ParmVarDecl 0x2a7e70d9228 <col:51, col:67> col:67 invalid bp 'const int *'
| |-ParmVarDecl 0x2a7e70e0330 <line:676:17, col:33> col:33 invalid np 'const int *'
| |-ParmVarDecl 0x2a7e70e03b0 <col:37, col:53> col:53 invalid n0 'const int *'
| `-ParmVarDecl 0x2a7e70e0430 <col:57, col:61> col:61 num 'int'
|-FunctionDecl 0x2a7e70e0940 <line:678:1, line:680:38> line:678:9 invalid int_bn_mod_inverse 'int *(int *, const int *, const int *, int *, int *)'
| |-ParmVarDecl 0x2a7e70e0638 <col:28, col:36> col:36 invalid in 'int *'
| |-ParmVarDecl 0x2a7e70e06b8 <line:679:28, col:42> col:42 invalid a 'const int *'
| |-ParmVarDecl 0x2a7e70e0738 <col:45, col:59> col:59 invalid n 'const int *'
| |-ParmVarDecl 0x2a7e70e07b8 <col:62, col:70> col:70 invalid ctx 'int *'
| `-ParmVarDecl 0x2a7e70e0838 <line:680:28, col:33> col:33 noinv 'int *'
|-FunctionDecl 0x2a7e70e0d30 <line:682:1, line:683:75> line:682:5 invalid bn_probable_prime_dh 'int (int *, int, const int *, const int *, int *)'
| |-ParmVarDecl 0x2a7e70e0a20 <col:26, col:34> col:34 invalid rnd 'int *'
| |-ParmVarDecl 0x2a7e70e0aa0 <col:39, col:43> col:43 bits 'int'
| |-ParmVarDecl 0x2a7e70e0b20 <line:683:26, col:40> col:40 invalid add 'const int *'
| |-ParmVarDecl 0x2a7e70e0ba0 <col:45, col:59> col:59 invalid rem 'const int *'
| `-ParmVarDecl 0x2a7e70e0c20 <col:64, col:72> col:72 invalid ctx 'int *'
|-FunctionDecl 0x2a7e70e1000 <line:684:1, col:66> col:5 invalid bn_probable_prime_dh_retry 'int (int *, int, int *)'
| |-ParmVarDecl 0x2a7e70e0e10 <col:32, col:40> col:40 invalid rnd 'int *'
| |-ParmVarDecl 0x2a7e70e0e90 <col:45, col:49> col:49 bits 'int'
| `-ParmVarDecl 0x2a7e70e0f10 <col:55, col:63> col:63 invalid ctx 'int *'
|-FunctionDecl 0x2a7e70e1278 <line:685:1, col:68> col:5 invalid bn_probable_prime_dh_coprime 'int (int *, int, int *)'
| |-ParmVarDecl 0x2a7e70e10d0 <col:34, col:42> col:42 invalid rnd 'int *'
| |-ParmVarDecl 0x2a7e70e1150 <col:47, col:51> col:51 bits 'int'
| `-ParmVarDecl 0x2a7e70e11d0 <col:57, col:65> col:65 invalid ctx 'int *'
|-VarDecl 0x2a7e70d92d8 <line:687:1, col:20> col:20 invalid BIGNUM 'int' static
|-FunctionDecl 0x2a7e70d9420 <.//openssl//file_jk/before\crypto\bn\bn_print.c:20:1, line:50:1> line:20:7 invalid BN_bn2hex 'char *(const int *)'
| |-ParmVarDecl 0x2a7e70d9358 <col:17, col:31> col:31 invalid a 'const int *'
| `-CompoundStmt 0x2a7e70ddab0 <line:21:1, line:50:1>
|   |-DeclStmt 0x2a7e70d9730 <line:22:5, col:23>
|   | |-VarDecl 0x2a7e70d94f8 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x2a7e70d9578 <col:5, col:12> col:12 used j 'int'
|   | |-VarDecl 0x2a7e70d95f8 <col:5, col:15> col:15 used v 'int'
|   | `-VarDecl 0x2a7e70d9678 <col:5, col:22> col:18 used z 'int' cinit
|   |   `-IntegerLiteral 0x2a7e70d96e0 <col:22> 'int' 0
|   |-DeclStmt 0x2a7e70d97c8 <line:23:5, col:14>
|   | `-VarDecl 0x2a7e70d9760 <col:5, col:11> col:11 used buf 'char *'
|   |-DeclStmt 0x2a7e70d9860 <line:24:5, col:12>
|   | `-VarDecl 0x2a7e70d97f8 <col:5, col:11> col:11 used p 'char *'
|   |-IfStmt 0x2a7e70d9bf0 <line:26:5, line:27:34>
|   | |-OpaqueValueExpr 0x2a7e70d9bd8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2a7e70d9bc8 <col:9, col:34>
|   |   `-ImplicitCastExpr 0x2a7e70d9bb0 <col:16, col:34> 'char *' <IntegralToPointer>
|   |     `-CallExpr 0x2a7e70d9b70 <col:16, col:34> 'int'
|   |       |-ImplicitCastExpr 0x2a7e70d9b58 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x2a7e70d9aa8 <col:16> 'int ()' Function 0x2a7e70d99e0 'OPENSSL_strdup' 'int ()'
|   |       `-ImplicitCastExpr 0x2a7e70d9b98 <col:31> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x2a7e70d9b08 <col:31> 'char [2]' lvalue "0"
|   |-IfStmt 0x2a7e70da028 <line:29:5, line:32:5>
|   | |-BinaryOperator 0x2a7e70d9e78 <line:29:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x2a7e70d9e48 <.//openssl//file_jk/before\crypto\bn\bn_print.c:29:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2a7e70d9da0 <col:9> 'char *' lvalue Var 0x2a7e70d9760 'buf' 'char *'
|   | | `-ImplicitCastExpr 0x2a7e70d9e60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x2a7e70d9e28 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2a7e70d9e00 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2a7e70d9dc0 <col:26> 'int' 0
|   | `-CompoundStmt 0x2a7e70da010 <.//openssl//file_jk/before\crypto\bn\bn_print.c:29:22, line:32:5>
|   |   `-GotoStmt 0x2a7e70d9ff8 <line:31:9, col:14> 'err' 0x2a7e70d9fa8
|   |-BinaryOperator 0x2a7e70da0b0 <line:33:5, col:9> 'char *' '='
|   | |-DeclRefExpr 0x2a7e70da040 <col:5> 'char *' lvalue Var 0x2a7e70d97f8 'p' 'char *'
|   | `-ImplicitCastExpr 0x2a7e70da098 <col:9> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2a7e70da078 <col:9> 'char *' lvalue Var 0x2a7e70d9760 'buf' 'char *'
|   |-IfStmt 0x2a7e70da1a8 <line:34:5, line:35:18>
|   | |-OpaqueValueExpr 0x2a7e70da190 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x2a7e70da170 <col:9, col:18> 'char' '='
|   |   |-UnaryOperator 0x2a7e70da128 <col:9, col:14> 'char' lvalue prefix '*' cannot overflow
|   |   | `-ParenExpr 0x2a7e70da108 <col:10, col:14> 'char *'
|   |   |   `-UnaryOperator 0x2a7e70da0f0 <col:11, col:12> 'char *' postfix '++'
|   |   |     `-DeclRefExpr 0x2a7e70da0d0 <col:11> 'char *' lvalue Var 0x2a7e70d97f8 'p' 'char *'
|   |   `-ImplicitCastExpr 0x2a7e70da158 <col:18> 'char' <IntegralCast>
|   |     `-CharacterLiteral 0x2a7e70da140 <col:18> 'int' 45
|   |-ForStmt 0x2a7e70dd958 <line:36:5, line:46:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2a7e70da280 <line:36:26, col:31> 'int' '>='
|   | | |-ImplicitCastExpr 0x2a7e70da268 <col:26> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2a7e70da220 <col:26> 'int' lvalue Var 0x2a7e70d94f8 'i' 'int'
|   | | `-IntegerLiteral 0x2a7e70da240 <col:31> 'int' 0
|   | |-UnaryOperator 0x2a7e70dd300 <col:34, col:35> 'int' postfix '--'
|   | | `-DeclRefExpr 0x2a7e70da2a0 <col:34> 'int' lvalue Var 0x2a7e70d94f8 'i' 'int'
|   | `-CompoundStmt 0x2a7e70dd940 <col:39, line:46:5>
|   |   `-ForStmt 0x2a7e70dd908 <line:37:9, line:45:9>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x2a7e70dd3d8 <line:37:32, col:37> 'int' '>='
|   |     | |-ImplicitCastExpr 0x2a7e70dd3c0 <col:32> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2a7e70dd378 <col:32> 'int' lvalue Var 0x2a7e70d9578 'j' 'int'
|   |     | `-IntegerLiteral 0x2a7e70dd398 <col:37> 'int' 0
|   |     |-CompoundAssignOperator 0x2a7e70dd440 <col:40, col:45> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     | |-DeclRefExpr 0x2a7e70dd3f8 <col:40> 'int' lvalue Var 0x2a7e70d9578 'j' 'int'
|   |     | `-IntegerLiteral 0x2a7e70dd418 <col:45> 'int' 8
|   |     `-CompoundStmt 0x2a7e70dd8f0 <col:48, line:45:9>
|   |       `-IfStmt 0x2a7e70dd8d8 <line:40:13, line:44:13>
|   |         |-BinaryOperator 0x2a7e70dd658 <line:40:17, col:29> 'int' '||'
|   |         | |-ImplicitCastExpr 0x2a7e70dd640 <col:17> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x2a7e70dd568 <col:17> 'int' lvalue Var 0x2a7e70d9678 'z' 'int'
|   |         | `-ParenExpr 0x2a7e70dd620 <col:22, col:29> 'int'
|   |         |   `-BinaryOperator 0x2a7e70dd600 <col:23, col:28> 'int' '!='
|   |         |     |-ImplicitCastExpr 0x2a7e70dd5e8 <col:23> 'int' <LValueToRValue>
|   |         |     | `-DeclRefExpr 0x2a7e70dd5a0 <col:23> 'int' lvalue Var 0x2a7e70d95f8 'v' 'int'
|   |         |     `-IntegerLiteral 0x2a7e70dd5c0 <col:28> 'int' 0
|   |         `-CompoundStmt 0x2a7e70dd8c0 <col:32, line:44:13>
|   |           `-BinaryOperator 0x2a7e70dd8a0 <line:43:17, col:21> 'int' '='
|   |             |-DeclRefExpr 0x2a7e70dd858 <col:17> 'int' lvalue Var 0x2a7e70d9678 'z' 'int'
|   |             `-IntegerLiteral 0x2a7e70dd878 <col:21> 'int' 1
|   |-BinaryOperator 0x2a7e70dda10 <line:47:5, col:10> 'char' '='
|   | |-UnaryOperator 0x2a7e70dd9c8 <col:5, col:6> 'char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x2a7e70dd9b0 <col:6> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2a7e70dd990 <col:6> 'char *' lvalue Var 0x2a7e70d97f8 'p' 'char *'
|   | `-ImplicitCastExpr 0x2a7e70dd9f8 <col:10> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x2a7e70dd9e0 <col:10> 'int' 0
|   `-LabelStmt 0x2a7e70dda98 <line:48:2, line:49:16> 'err'
|     `-ReturnStmt 0x2a7e70dda88 <col:5, col:16>
|       `-ImplicitCastExpr 0x2a7e70dda70 <col:12, col:16> 'char *' <LValueToRValue>
|         `-ParenExpr 0x2a7e70dda50 <col:12, col:16> 'char *' lvalue
|           `-DeclRefExpr 0x2a7e70dda30 <col:13> 'char *' lvalue Var 0x2a7e70d9760 'buf' 'char *'
|-FunctionDecl 0x2a7e70ddbc0 <line:53:1, line:122:1> line:53:7 invalid BN_bn2dec 'char *(const int *)'
| |-ParmVarDecl 0x2a7e70ddb28 <col:17, col:31> col:31 invalid a 'const int *'
| `-CompoundStmt 0x2a7e70e1ed0 <line:54:1, line:122:1>
|   |-DeclStmt 0x2a7e70dde70 <line:55:5, col:27>
|   | |-VarDecl 0x2a7e70ddc98 <col:5, col:13> col:9 used i 'int' cinit
|   | | `-IntegerLiteral 0x2a7e70ddd00 <col:13> 'int' 0
|   | |-VarDecl 0x2a7e70ddd40 <col:5, col:16> col:16 used num 'int'
|   | `-VarDecl 0x2a7e70dddc0 <col:5, col:26> col:21 used ok 'int' cinit
|   |   `-IntegerLiteral 0x2a7e70dde28 <col:26> 'int' 0
|   |-DeclStmt 0x2a7e70ddfa8 <line:56:5, col:21>
|   | `-VarDecl 0x2a7e70ddea0 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\bn\bn_print.c:56:11 used buf 'char *' cinit
|   |   `-ImplicitCastExpr 0x2a7e70ddf90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x2a7e70ddf70 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x2a7e70ddf48 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x2a7e70ddf08 <col:26> 'int' 0
|   |-DeclStmt 0x2a7e70de040 <.//openssl//file_jk/before\crypto\bn\bn_print.c:57:5, col:12>
|   | `-VarDecl 0x2a7e70ddfd8 <col:5, col:11> col:11 used p 'char *'
|   |-DeclStmt 0x2a7e70de1e8 <line:60:5, col:20>
|   | `-VarDecl 0x2a7e70de180 <col:5, col:9> col:9 used bn_data_num 'int'
|   |-BinaryOperator 0x2a7e70de588 <line:69:5, col:37> 'int' '='
|   | |-DeclRefExpr 0x2a7e70de380 <col:5> 'int' lvalue Var 0x2a7e70ddd40 'num' 'int'
|   | `-BinaryOperator 0x2a7e70de568 <col:11, col:37> 'int' '+'
|   |   |-ParenExpr 0x2a7e70de520 <col:11, col:33> 'int'
|   |   | `-BinaryOperator 0x2a7e70de500 <col:12, col:32> 'int' '+'
|   |   |   |-BinaryOperator 0x2a7e70de4b8 <col:12, col:25> 'int' '+'
|   |   |   | |-BinaryOperator 0x2a7e70de418 <col:12, col:16> 'int' '/'
|   |   |   | | |-ImplicitCastExpr 0x2a7e70de400 <col:12> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x2a7e70de3b8 <col:12> 'int' lvalue Var 0x2a7e70ddc98 'i' 'int'
|   |   |   | | `-IntegerLiteral 0x2a7e70de3d8 <col:16> 'int' 10
|   |   |   | `-BinaryOperator 0x2a7e70de498 <col:21, col:25> 'int' '/'
|   |   |   |   |-ImplicitCastExpr 0x2a7e70de480 <col:21> 'int' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x2a7e70de438 <col:21> 'int' lvalue Var 0x2a7e70ddc98 'i' 'int'
|   |   |   |   `-IntegerLiteral 0x2a7e70de458 <col:25> 'int' 1000
|   |   |   `-IntegerLiteral 0x2a7e70de4d8 <col:32> 'int' 1
|   |   `-IntegerLiteral 0x2a7e70de540 <col:37> 'int' 1
|   |-BinaryOperator 0x2a7e70de798 <line:72:5, col:33> 'char *' '='
|   | |-DeclRefExpr 0x2a7e70de668 <col:5> 'char *' lvalue Var 0x2a7e70ddea0 'buf' 'char *'
|   | `-ImplicitCastExpr 0x2a7e70de780 <col:11, col:33> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x2a7e70de758 <col:11, col:33> 'int'
|   |     |-ImplicitCastExpr 0x2a7e70de740 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2a7e70de6a0 <col:11> 'int ()' Function 0x2a7e70d9c68 'OPENSSL_malloc' 'int ()'
|   |     `-BinaryOperator 0x2a7e70de720 <col:26, col:32> 'int' '+'
|   |       |-ImplicitCastExpr 0x2a7e70de708 <col:26> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x2a7e70de6c0 <col:26> 'int' lvalue Var 0x2a7e70ddd40 'num' 'int'
|   |       `-IntegerLiteral 0x2a7e70de6e0 <col:32> 'int' 3
|   |-IfStmt 0x2a7e70dea10 <line:73:5, line:76:5>
|   | |-OpaqueValueExpr 0x2a7e70de9f8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2a7e70de9e0 <line:73:45, line:76:5>
|   |   `-GotoStmt 0x2a7e70de9c8 <line:75:9, col:14> 'err' 0x2a7e70de978
|   |-IfStmt 0x2a7e70debf0 <line:77:5, line:78:14>
|   | |-OpaqueValueExpr 0x2a7e70debd8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2a7e70debc0 <col:9, col:14> 'err' 0x2a7e70de978
|   |-BinaryOperator 0x2a7e70dec78 <line:81:5, col:9> 'char *' '='
|   | |-DeclRefExpr 0x2a7e70dec08 <col:5> 'char *' lvalue Var 0x2a7e70ddfd8 'p' 'char *'
|   | `-ImplicitCastExpr 0x2a7e70dec60 <col:9> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2a7e70dec40 <col:9> 'char *' lvalue Var 0x2a7e70ddea0 'buf' 'char *'
|   |-IfStmt 0x2a7e70e1a08 <line:83:5, line:113:5> has_else
|   | |-OpaqueValueExpr 0x2a7e70e19f0 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x2a7e70dee38 <line:83:24, line:86:5>
|   | | |-BinaryOperator 0x2a7e70ded58 <line:84:9, col:18> 'char' '='
|   | | | |-UnaryOperator 0x2a7e70ded10 <col:9, col:14> 'char' lvalue prefix '*' cannot overflow
|   | | | | `-ParenExpr 0x2a7e70decf0 <col:10, col:14> 'char *'
|   | | | |   `-UnaryOperator 0x2a7e70decd8 <col:11, col:12> 'char *' postfix '++'
|   | | | |     `-DeclRefExpr 0x2a7e70decb8 <col:11> 'char *' lvalue Var 0x2a7e70ddfd8 'p' 'char *'
|   | | | `-ImplicitCastExpr 0x2a7e70ded40 <col:18> 'char' <IntegralCast>
|   | | |   `-CharacterLiteral 0x2a7e70ded28 <col:18> 'int' 48
|   | | `-BinaryOperator 0x2a7e70dee18 <line:85:9, col:18> 'char' '='
|   | |   |-UnaryOperator 0x2a7e70dedd0 <col:9, col:14> 'char' lvalue prefix '*' cannot overflow
|   | |   | `-ParenExpr 0x2a7e70dedb0 <col:10, col:14> 'char *'
|   | |   |   `-UnaryOperator 0x2a7e70ded98 <col:11, col:12> 'char *' postfix '++'
|   | |   |     `-DeclRefExpr 0x2a7e70ded78 <col:11> 'char *' lvalue Var 0x2a7e70ddfd8 'p' 'char *'
|   | |   `-ImplicitCastExpr 0x2a7e70dee00 <col:18> 'char' <IntegralCast>
|   | |     `-CharacterLiteral 0x2a7e70dede8 <col:18> 'int' 0
|   | `-CompoundStmt 0x2a7e70e19d0 <line:86:12, line:113:5>
|   |   |-IfStmt 0x2a7e70df020 <line:87:9, line:88:20>
|   |   | |-OpaqueValueExpr 0x2a7e70df008 <<invalid sloc>> '_Bool'
|   |   | `-BinaryOperator 0x2a7e70defe8 <col:13, col:20> 'char' '='
|   |   |   |-UnaryOperator 0x2a7e70defa0 <col:13, col:15> 'char' lvalue prefix '*' cannot overflow
|   |   |   | `-UnaryOperator 0x2a7e70def88 <col:14, col:15> 'char *' postfix '++'
|   |   |   |   `-DeclRefExpr 0x2a7e70def68 <col:14> 'char *' lvalue Var 0x2a7e70ddfd8 'p' 'char *'
|   |   |   `-ImplicitCastExpr 0x2a7e70defd0 <col:20> 'char' <IntegralCast>
|   |   |     `-CharacterLiteral 0x2a7e70defb8 <col:20> 'int' 45
|   |   `-WhileStmt 0x2a7e70e16c8 <line:105:9, line:106:14>
|   |     |-ImplicitCastExpr 0x2a7e70e1678 <line:105:16, col:17> 'char' <LValueToRValue>
|   |     | `-UnaryOperator 0x2a7e70e1660 <col:16, col:17> 'char' lvalue prefix '*' cannot overflow
|   |     |   `-ImplicitCastExpr 0x2a7e70e1648 <col:17> 'char *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x2a7e70e1628 <col:17> 'char *' lvalue Var 0x2a7e70ddfd8 'p' 'char *'
|   |     `-UnaryOperator 0x2a7e70e16b0 <line:106:13, col:14> 'char *' postfix '++'
|   |       `-DeclRefExpr 0x2a7e70e1690 <col:13> 'char *' lvalue Var 0x2a7e70ddfd8 'p' 'char *'
|   |-BinaryOperator 0x2a7e70e1a90 <line:114:5, col:10> 'int' '='
|   | |-DeclRefExpr 0x2a7e70e1a30 <col:5> 'int' lvalue Var 0x2a7e70dddc0 'ok' 'int'
|   | `-IntegerLiteral 0x2a7e70e1a68 <col:10> 'int' 1
|   |-LabelStmt 0x2a7e70e1bc8 <line:115:2, col:5> 'err'
|   | `-NullStmt 0x2a7e70e1bc0 <col:5>
|   |-IfStmt 0x2a7e70e1d70 <line:118:5, line:119:16>
|   | |-ImplicitCastExpr 0x2a7e70e1d10 <line:118:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x2a7e70e1cf0 <col:9> 'int' lvalue Var 0x2a7e70dddc0 'ok' 'int'
|   | `-ReturnStmt 0x2a7e70e1d60 <line:119:9, col:16>
|   |   `-ImplicitCastExpr 0x2a7e70e1d48 <col:16> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2a7e70e1d28 <col:16> 'char *' lvalue Var 0x2a7e70ddea0 'buf' 'char *'
|   |-CallExpr 0x2a7e70e1de0 <line:120:5, col:21> 'int'
|   | |-ImplicitCastExpr 0x2a7e70e1dc8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2a7e70e1d88 <col:5> 'int ()' Function 0x2a7e70e1ad8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x2a7e70e1e08 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2a7e70e1da8 <col:18> 'char *' lvalue Var 0x2a7e70ddea0 'buf' 'char *'
|   `-ReturnStmt 0x2a7e70e1ec0 <line:121:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|     `-ImplicitCastExpr 0x2a7e70e1ea8 <col:17, col:27> 'char *' <NullToPointer>
|       `-ParenExpr 0x2a7e70e1e88 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x2a7e70e1e60 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x2a7e70e1e20 <col:26> 'int' 0
|-FunctionDecl 0x2a7e70e2100 <.//openssl//file_jk/before\crypto\bn\bn_print.c:124:1, line:195:1> line:124:5 invalid BN_hex2bn 'int (int **, const char *)'
| |-ParmVarDecl 0x2a7e70e1fa8 <col:15, col:24> col:24 invalid bn 'int **'
| |-ParmVarDecl 0x2a7e70e2028 <col:28, col:40> col:40 used a 'const char *'
| `-CompoundStmt 0x2a7e70e3648 <line:125:1, line:195:1>
|   |-DeclStmt 0x2a7e70e2678 <line:128:5, col:34>
|   | |-VarDecl 0x2a7e70e2268 <col:5, col:15> col:9 used neg 'int' cinit
|   | | `-IntegerLiteral 0x2a7e70e22d0 <col:15> 'int' 0
|   | |-VarDecl 0x2a7e70e2350 <col:5, col:18> col:18 used h 'int'
|   | |-VarDecl 0x2a7e70e23d0 <col:5, col:21> col:21 used m 'int'
|   | |-VarDecl 0x2a7e70e2450 <col:5, col:24> col:24 used i 'int'
|   | |-VarDecl 0x2a7e70e24d0 <col:5, col:27> col:27 used j 'int'
|   | |-VarDecl 0x2a7e70e2550 <col:5, col:30> col:30 used k 'int'
|   | `-VarDecl 0x2a7e70e25d0 <col:5, col:33> col:33 used c 'int'
|   |-DeclStmt 0x2a7e70e2710 <line:129:5, col:12>
|   | `-VarDecl 0x2a7e70e26a8 <col:5, col:9> col:9 used num 'int'
|   |-IfStmt 0x2a7e70e29d8 <line:131:5, line:132:18>
|   | |-BinaryOperator 0x2a7e70e2960 <line:131:9, col:35> 'int' '||'
|   | | |-ParenExpr 0x2a7e70e2838 <col:9, col:19> 'int'
|   | | | `-BinaryOperator 0x2a7e70e2818 <col:10, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x2a7e70e27e8 <.//openssl//file_jk/before\crypto\bn\bn_print.c:131:10> 'const char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x2a7e70e2728 <col:10> 'const char *' lvalue ParmVar 0x2a7e70e2028 'a' 'const char *'
|   | | |   `-ImplicitCastExpr 0x2a7e70e2800 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |     `-ParenExpr 0x2a7e70e27c8 <col:17, col:27> 'void *'
|   | | |       `-CStyleCastExpr 0x2a7e70e27a0 <col:18, col:26> 'void *' <NullToPointer>
|   | | |         `-IntegerLiteral 0x2a7e70e2760 <col:26> 'int' 0
|   | | `-ParenExpr 0x2a7e70e2940 <.//openssl//file_jk/before\crypto\bn\bn_print.c:131:24, col:35> 'int'
|   | |   `-BinaryOperator 0x2a7e70e2920 <col:25, col:31> 'int' '=='
|   | |     |-ImplicitCastExpr 0x2a7e70e2908 <col:25, col:26> 'int' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x2a7e70e28f0 <col:25, col:26> 'char' <LValueToRValue>
|   | |     |   `-UnaryOperator 0x2a7e70e28c0 <col:25, col:26> 'const char' lvalue prefix '*' cannot overflow
|   | |     |     `-ImplicitCastExpr 0x2a7e70e28a8 <col:26> 'const char *' <LValueToRValue>
|   | |     |       `-DeclRefExpr 0x2a7e70e2888 <col:26> 'const char *' lvalue ParmVar 0x2a7e70e2028 'a' 'const char *'
|   | |     `-CharacterLiteral 0x2a7e70e28d8 <col:31> 'int' 0
|   | `-ReturnStmt 0x2a7e70e29c8 <line:132:9, col:18>
|   |   `-ParenExpr 0x2a7e70e29a8 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x2a7e70e2980 <col:17> 'int' 0
|   |-IfStmt 0x2a7e70e2b80 <line:134:5, line:137:5>
|   | |-BinaryOperator 0x2a7e70e2a88 <line:134:9, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x2a7e70e2a70 <col:9, col:10> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x2a7e70e2a58 <col:9, col:10> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x2a7e70e2a28 <col:9, col:10> 'const char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x2a7e70e2a10 <col:10> 'const char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x2a7e70e29f0 <col:10> 'const char *' lvalue ParmVar 0x2a7e70e2028 'a' 'const char *'
|   | | `-CharacterLiteral 0x2a7e70e2a40 <col:15> 'int' 45
|   | `-CompoundStmt 0x2a7e70e2b60 <col:20, line:137:5>
|   |   |-BinaryOperator 0x2a7e70e2b08 <line:135:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x2a7e70e2aa8 <col:9> 'int' lvalue Var 0x2a7e70e2268 'neg' 'int'
|   |   | `-IntegerLiteral 0x2a7e70e2ae0 <col:15> 'int' 1
|   |   `-UnaryOperator 0x2a7e70e2b48 <line:136:9, col:10> 'const char *' postfix '++'
|   |     `-DeclRefExpr 0x2a7e70e2b28 <col:9> 'const char *' lvalue ParmVar 0x2a7e70e2028 'a' 'const char *'
|   |-ForStmt 0x2a7e70e2ef0 <line:139:5, line:140:9>
|   | |-BinaryOperator 0x2a7e70e2bf8 <line:139:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x2a7e70e2b98 <col:10> 'int' lvalue Var 0x2a7e70e2450 'i' 'int'
|   | | `-IntegerLiteral 0x2a7e70e2bd0 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2a7e70e2e90 <col:17, col:65> 'int' '&&'
|   | | |-BinaryOperator 0x2a7e70e2ce0 <col:17, col:32> 'int' '<='
|   | | | |-ImplicitCastExpr 0x2a7e70e2cc8 <col:17> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2a7e70e2c18 <col:17> 'int' lvalue Var 0x2a7e70e2450 'i' 'int'
|   | | | `-ParenExpr 0x2a7e70e2ca8 <col:22, col:32> 'int'
|   | | |   `-BinaryOperator 0x2a7e70e2c88 <<built-in>:30:21, .//openssl//file_jk/before\crypto\bn\bn_print.c:139:31> 'int' '/'
|   | | |     |-IntegerLiteral 0x2a7e70e2c38 <<built-in>:30:21> 'int' 2147483647
|   | | |     `-IntegerLiteral 0x2a7e70e2c60 <.//openssl//file_jk/before\crypto\bn\bn_print.c:139:31> 'int' 4
|   | | `-CallExpr 0x2a7e70e2e50 <col:37, col:65> 'int'
|   | |   |-ImplicitCastExpr 0x2a7e70e2e38 <col:37> 'int (*)(int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2a7e70e2d00 <col:37> 'int (int)' Function 0x2a7e70b10d0 'isxdigit' 'int (int)'
|   | |   `-ImplicitCastExpr 0x2a7e70e2e78 <col:46, col:64> 'int' <IntegralCast>
|   | |     `-CStyleCastExpr 0x2a7e70e2de0 <col:46, col:64> 'unsigned char' <IntegralCast>
|   | |       `-ImplicitCastExpr 0x2a7e70e2dc8 <col:61, col:64> 'char' <LValueToRValue> part_of_explicit_cast
|   | |         `-ArraySubscriptExpr 0x2a7e70e2d90 <col:61, col:64> 'const char' lvalue
|   | |           |-ImplicitCastExpr 0x2a7e70e2d60 <col:61> 'const char *' <LValueToRValue>
|   | |           | `-DeclRefExpr 0x2a7e70e2d20 <col:61> 'const char *' lvalue ParmVar 0x2a7e70e2028 'a' 'const char *'
|   | |           `-ImplicitCastExpr 0x2a7e70e2d78 <col:63> 'int' <LValueToRValue>
|   | |             `-DeclRefExpr 0x2a7e70e2d40 <col:63> 'int' lvalue Var 0x2a7e70e2450 'i' 'int'
|   | |-UnaryOperator 0x2a7e70e2ed0 <col:68, col:69> 'int' postfix '++'
|   | | `-DeclRefExpr 0x2a7e70e2eb0 <col:68> 'int' lvalue Var 0x2a7e70e2450 'i' 'int'
|   | `-ContinueStmt 0x2a7e70e2ee8 <line:140:9>
|   |-IfStmt 0x2a7e70e30f8 <line:142:5, line:143:14>
|   | |-BinaryOperator 0x2a7e70e3070 <line:142:9, col:31> 'int' '||'
|   | | |-BinaryOperator 0x2a7e70e2f88 <col:9, col:14> 'int' '=='
|   | | | |-ImplicitCastExpr 0x2a7e70e2f70 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2a7e70e2f28 <col:9> 'int' lvalue Var 0x2a7e70e2450 'i' 'int'
|   | | | `-IntegerLiteral 0x2a7e70e2f48 <col:14> 'int' 0
|   | | `-BinaryOperator 0x2a7e70e3050 <col:19, col:31> 'int' '>'
|   | |   |-ImplicitCastExpr 0x2a7e70e3038 <col:19> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x2a7e70e2fa8 <col:19> 'int' lvalue Var 0x2a7e70e2450 'i' 'int'
|   | |   `-BinaryOperator 0x2a7e70e3018 <<built-in>:30:21, .//openssl//file_jk/before\crypto\bn\bn_print.c:142:31> 'int' '/'
|   | |     |-IntegerLiteral 0x2a7e70e2fc8 <<built-in>:30:21> 'int' 2147483647
|   | |     `-IntegerLiteral 0x2a7e70e2ff0 <.//openssl//file_jk/before\crypto\bn\bn_print.c:142:31> 'int' 4
|   | `-GotoStmt 0x2a7e70e30e0 <line:143:9, col:14> 'err' 0x2a7e70e3090
|   |-BinaryOperator 0x2a7e70e31d8 <line:145:5, col:15> 'int' '='
|   | |-DeclRefExpr 0x2a7e70e3110 <col:5> 'int' lvalue Var 0x2a7e70e26a8 'num' 'int'
|   | `-BinaryOperator 0x2a7e70e31b8 <col:11, col:15> 'int' '+'
|   |   |-ImplicitCastExpr 0x2a7e70e3188 <col:11> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2a7e70e3148 <col:11> 'int' lvalue Var 0x2a7e70e2450 'i' 'int'
|   |   `-ImplicitCastExpr 0x2a7e70e31a0 <col:15> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x2a7e70e3168 <col:15> 'int' lvalue Var 0x2a7e70e2268 'neg' 'int'
|   |-IfStmt 0x2a7e70e3300 <line:146:5, line:147:20>
|   | |-OpaqueValueExpr 0x2a7e70e32e8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2a7e70e32d8 <col:9, col:20>
|   |   `-ImplicitCastExpr 0x2a7e70e32c0 <col:16, col:20> 'int' <LValueToRValue>
|   |     `-ParenExpr 0x2a7e70e32a0 <col:16, col:20> 'int' lvalue
|   |       `-DeclRefExpr 0x2a7e70e3280 <col:17> 'int' lvalue Var 0x2a7e70e26a8 'num' 'int'
|   |-IfStmt 0x2a7e70db6e8 <line:150:5, line:156:5> has_else
|   | |-OpaqueValueExpr 0x2a7e70db6d0 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x2a7e70db598 <line:150:22, line:153:5>
|   | | `-IfStmt 0x2a7e70db580 <line:151:9, line:152:22>
|   | |   |-OpaqueValueExpr 0x2a7e70db568 <<invalid sloc>> '_Bool'
|   | |   `-ReturnStmt 0x2a7e70db558 <col:13, col:22>
|   | |     `-ParenExpr 0x2a7e70db538 <col:20, col:22> 'int'
|   | |       `-IntegerLiteral 0x2a7e70db510 <col:21> 'int' 0
|   | `-CompoundStmt 0x2a7e70db6c0 <line:153:12, line:156:5>
|   |-IfStmt 0x2a7e70db958 <line:159:5, line:160:14>
|   | |-OpaqueValueExpr 0x2a7e70db940 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2a7e70db928 <col:9, col:14> 'err' 0x2a7e70e3090
|   |-BinaryOperator 0x2a7e70db9e0 <line:162:5, col:9> 'int' '='
|   | |-DeclRefExpr 0x2a7e70db970 <col:5> 'int' lvalue Var 0x2a7e70e24d0 'j' 'int'
|   | `-ImplicitCastExpr 0x2a7e70db9c8 <col:9> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x2a7e70db9a8 <col:9> 'int' lvalue Var 0x2a7e70e2450 'i' 'int'
|   |-BinaryOperator 0x2a7e70dba60 <line:163:5, col:9> 'int' '='
|   | |-DeclRefExpr 0x2a7e70dba00 <col:5> 'int' lvalue Var 0x2a7e70e23d0 'm' 'int'
|   | `-IntegerLiteral 0x2a7e70dba38 <col:9> 'int' 0
|   |-BinaryOperator 0x2a7e70dbae0 <line:164:5, col:9> 'int' '='
|   | |-DeclRefExpr 0x2a7e70dba80 <col:5> 'int' lvalue Var 0x2a7e70e2350 'h' 'int'
|   | `-IntegerLiteral 0x2a7e70dbab8 <col:9> 'int' 0
|   |-WhileStmt 0x2a7e70dc2a8 <line:165:5, line:181:5>
|   | |-BinaryOperator 0x2a7e70dbb60 <line:165:12, col:16> 'int' '>'
|   | | |-ImplicitCastExpr 0x2a7e70dbb48 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2a7e70dbb00 <col:12> 'int' lvalue Var 0x2a7e70e24d0 'j' 'int'
|   | | `-IntegerLiteral 0x2a7e70dbb20 <col:16> 'int' 0
|   | `-CompoundStmt 0x2a7e70dc290 <col:19, line:181:5>
|   |   `-ForStmt 0x2a7e70dc210 <line:168:9, line:179:9>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     `-CompoundStmt 0x2a7e70dc1e0 <line:168:18, line:179:9>
|   |       |-BinaryOperator 0x2a7e70dbda8 <line:169:13, col:24> 'int' '='
|   |       | |-DeclRefExpr 0x2a7e70dbc58 <col:13> 'int' lvalue Var 0x2a7e70e25d0 'c' 'int'
|   |       | `-ImplicitCastExpr 0x2a7e70dbd90 <col:17, col:24> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x2a7e70dbd78 <col:17, col:24> 'char' <LValueToRValue>
|   |       |     `-ArraySubscriptExpr 0x2a7e70dbd58 <col:17, col:24> 'const char' lvalue
|   |       |       |-ImplicitCastExpr 0x2a7e70dbd40 <col:17> 'const char *' <LValueToRValue>
|   |       |       | `-DeclRefExpr 0x2a7e70dbc90 <col:17> 'const char *' lvalue ParmVar 0x2a7e70e2028 'a' 'const char *'
|   |       |       `-BinaryOperator 0x2a7e70dbd20 <col:19, col:23> 'int' '-'
|   |       |         |-ImplicitCastExpr 0x2a7e70dbcf0 <col:19> 'int' <LValueToRValue>
|   |       |         | `-DeclRefExpr 0x2a7e70dbcb0 <col:19> 'int' lvalue Var 0x2a7e70e24d0 'j' 'int'
|   |       |         `-ImplicitCastExpr 0x2a7e70dbd08 <col:23> 'int' <LValueToRValue>
|   |       |           `-DeclRefExpr 0x2a7e70dbcd0 <col:23> 'int' lvalue Var 0x2a7e70e23d0 'm' 'int'
|   |       |-BinaryOperator 0x2a7e70dbf88 <line:170:13, col:38> 'int' '='
|   |       | |-DeclRefExpr 0x2a7e70dbdc8 <col:13> 'int' lvalue Var 0x2a7e70e2550 'k' 'int'
|   |       | `-CallExpr 0x2a7e70dbf48 <col:17, col:38> 'int'
|   |       |   |-ImplicitCastExpr 0x2a7e70dbf30 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x2a7e70dbef0 <col:17> 'int ()' Function 0x2a7e70dbe28 'OPENSSL_hexchar2int' 'int ()'
|   |       |   `-ImplicitCastExpr 0x2a7e70dbf70 <col:37> 'int' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x2a7e70dbf10 <col:37> 'int' lvalue Var 0x2a7e70e25d0 'c' 'int'
|   |       |-IfStmt 0x2a7e70dc090 <line:171:13, line:172:21>
|   |       | |-BinaryOperator 0x2a7e70dc008 <line:171:17, col:21> 'int' '<'
|   |       | | |-ImplicitCastExpr 0x2a7e70dbff0 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x2a7e70dbfa8 <col:17> 'int' lvalue Var 0x2a7e70e2550 'k' 'int'
|   |       | | `-IntegerLiteral 0x2a7e70dbfc8 <col:21> 'int' 0
|   |       | `-BinaryOperator 0x2a7e70dc070 <line:172:17, col:21> 'int' '='
|   |       |   |-DeclRefExpr 0x2a7e70dc028 <col:17> 'int' lvalue Var 0x2a7e70e2550 'k' 'int'
|   |       |   `-IntegerLiteral 0x2a7e70dc048 <col:21> 'int' 0
|   |       `-IfStmt 0x2a7e70dc1c8 <line:175:13, line:178:13>
|   |         |-BinaryOperator 0x2a7e70dc150 <line:175:17, col:24> 'int' '<='
|   |         | |-UnaryOperator 0x2a7e70dc110 <col:17, col:19> 'int' prefix '--'
|   |         | | `-DeclRefExpr 0x2a7e70dc0f0 <col:19> 'int' lvalue Var 0x2a7e70e23d0 'm' 'int'
|   |         | `-IntegerLiteral 0x2a7e70dc128 <col:24> 'int' 0
|   |         `-CompoundStmt 0x2a7e70dc1b0 <col:27, line:178:13>
|   |           `-BreakStmt 0x2a7e70dc1a8 <line:177:17>
|   |-NullStmt 0x2a7e70e3470 <line:186:22>
|   |-ReturnStmt 0x2a7e70e3518 <line:190:5, col:16>
|   | `-ImplicitCastExpr 0x2a7e70e3500 <col:12, col:16> 'int' <LValueToRValue>
|   |   `-ParenExpr 0x2a7e70e34e0 <col:12, col:16> 'int' lvalue
|   |     `-DeclRefExpr 0x2a7e70e34c0 <col:13> 'int' lvalue Var 0x2a7e70e26a8 'num' 'int'
|   |-LabelStmt 0x2a7e70e35d8 <line:191:2, col:5> 'err'
|   | `-NullStmt 0x2a7e70e35d0 <col:5>
|   `-ReturnStmt 0x2a7e70e3638 <line:194:5, col:14>
|     `-ParenExpr 0x2a7e70e3618 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x2a7e70e35f0 <col:13> 'int' 0
|-FunctionDecl 0x2a7e70e3828 <line:197:1, line:265:1> line:197:5 invalid BN_dec2bn 'int (int **, const char *)'
| |-ParmVarDecl 0x2a7e70e3708 <col:15, col:24> col:24 invalid bn 'int **'
| |-ParmVarDecl 0x2a7e70e3788 <col:28, col:40> col:40 used a 'const char *'
| `-CompoundStmt 0x2a7e70eb478 <line:198:1, line:265:1>
|   |-DeclStmt 0x2a7e70e3b40 <line:201:5, col:22>
|   | |-VarDecl 0x2a7e70e3990 <col:5, col:15> col:9 used neg 'int' cinit
|   | | `-IntegerLiteral 0x2a7e70e39f8 <col:15> 'int' 0
|   | |-VarDecl 0x2a7e70e3a38 <col:5, col:18> col:18 used i 'int'
|   | `-VarDecl 0x2a7e70e3ab8 <col:5, col:21> col:21 used j 'int'
|   |-DeclStmt 0x2a7e70e3bd8 <line:202:5, col:12>
|   | `-VarDecl 0x2a7e70e3b70 <col:5, col:9> col:9 used num 'int'
|   |-IfStmt 0x2a7e70e3e70 <line:204:5, line:205:18>
|   | |-BinaryOperator 0x2a7e70e3df8 <line:204:9, col:35> 'int' '||'
|   | | |-ParenExpr 0x2a7e70e3d00 <col:9, col:19> 'int'
|   | | | `-BinaryOperator 0x2a7e70e3ce0 <col:10, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x2a7e70e3cb0 <.//openssl//file_jk/before\crypto\bn\bn_print.c:204:10> 'const char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x2a7e70e3bf0 <col:10> 'const char *' lvalue ParmVar 0x2a7e70e3788 'a' 'const char *'
|   | | |   `-ImplicitCastExpr 0x2a7e70e3cc8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |     `-ParenExpr 0x2a7e70e3c90 <col:17, col:27> 'void *'
|   | | |       `-CStyleCastExpr 0x2a7e70e3c68 <col:18, col:26> 'void *' <NullToPointer>
|   | | |         `-IntegerLiteral 0x2a7e70e3c28 <col:26> 'int' 0
|   | | `-ParenExpr 0x2a7e70e3dd8 <.//openssl//file_jk/before\crypto\bn\bn_print.c:204:24, col:35> 'int'
|   | |   `-BinaryOperator 0x2a7e70e3db8 <col:25, col:31> 'int' '=='
|   | |     |-ImplicitCastExpr 0x2a7e70e3da0 <col:25, col:26> 'int' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x2a7e70e3d88 <col:25, col:26> 'char' <LValueToRValue>
|   | |     |   `-UnaryOperator 0x2a7e70e3d58 <col:25, col:26> 'const char' lvalue prefix '*' cannot overflow
|   | |     |     `-ImplicitCastExpr 0x2a7e70e3d40 <col:26> 'const char *' <LValueToRValue>
|   | |     |       `-DeclRefExpr 0x2a7e70e3d20 <col:26> 'const char *' lvalue ParmVar 0x2a7e70e3788 'a' 'const char *'
|   | |     `-CharacterLiteral 0x2a7e70e3d70 <col:31> 'int' 0
|   | `-ReturnStmt 0x2a7e70e3e60 <line:205:9, col:18>
|   |   `-ParenExpr 0x2a7e70e3e40 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x2a7e70e3e18 <col:17> 'int' 0
|   |-IfStmt 0x2a7e70e4018 <line:206:5, line:209:5>
|   | |-BinaryOperator 0x2a7e70e3f20 <line:206:9, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x2a7e70e3f08 <col:9, col:10> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x2a7e70e3ef0 <col:9, col:10> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x2a7e70e3ec0 <col:9, col:10> 'const char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x2a7e70e3ea8 <col:10> 'const char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x2a7e70e3e88 <col:10> 'const char *' lvalue ParmVar 0x2a7e70e3788 'a' 'const char *'
|   | | `-CharacterLiteral 0x2a7e70e3ed8 <col:15> 'int' 45
|   | `-CompoundStmt 0x2a7e70e3ff8 <col:20, line:209:5>
|   |   |-BinaryOperator 0x2a7e70e3fa0 <line:207:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x2a7e70e3f40 <col:9> 'int' lvalue Var 0x2a7e70e3990 'neg' 'int'
|   |   | `-IntegerLiteral 0x2a7e70e3f78 <col:15> 'int' 1
|   |   `-UnaryOperator 0x2a7e70e3fe0 <line:208:9, col:10> 'const char *' postfix '++'
|   |     `-DeclRefExpr 0x2a7e70e3fc0 <col:9> 'const char *' lvalue ParmVar 0x2a7e70e3788 'a' 'const char *'
|   |-ForStmt 0x2a7e70e4370 <line:211:5, line:212:9>
|   | |-BinaryOperator 0x2a7e70e4090 <line:211:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x2a7e70e4030 <col:10> 'int' lvalue Var 0x2a7e70e3a38 'i' 'int'
|   | | `-IntegerLiteral 0x2a7e70e4068 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2a7e70e42f8 <col:17, col:64> 'int' '&&'
|   | | |-BinaryOperator 0x2a7e70e4178 <col:17, col:32> 'int' '<='
|   | | | |-ImplicitCastExpr 0x2a7e70e4160 <col:17> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2a7e70e40b0 <col:17> 'int' lvalue Var 0x2a7e70e3a38 'i' 'int'
|   | | | `-ParenExpr 0x2a7e70e4140 <col:22, col:32> 'int'
|   | | |   `-BinaryOperator 0x2a7e70e4120 <<built-in>:30:21, .//openssl//file_jk/before\crypto\bn\bn_print.c:211:31> 'int' '/'
|   | | |     |-IntegerLiteral 0x2a7e70e40d0 <<built-in>:30:21> 'int' 2147483647
|   | | |     `-IntegerLiteral 0x2a7e70e40f8 <.//openssl//file_jk/before\crypto\bn\bn_print.c:211:31> 'int' 4
|   | | `-CallExpr 0x2a7e70e42b8 <col:37, col:64> 'int'
|   | |   |-ImplicitCastExpr 0x2a7e70e42a0 <col:37> 'int (*)(int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2a7e70e4198 <col:37> 'int (int)' Function 0x2a7e70b5a80 'isdigit' 'int (int)'
|   | |   `-ImplicitCastExpr 0x2a7e70e42e0 <col:45, col:63> 'int' <IntegralCast>
|   | |     `-CStyleCastExpr 0x2a7e70e4278 <col:45, col:63> 'unsigned char' <IntegralCast>
|   | |       `-ImplicitCastExpr 0x2a7e70e4260 <col:60, col:63> 'char' <LValueToRValue> part_of_explicit_cast
|   | |         `-ArraySubscriptExpr 0x2a7e70e4228 <col:60, col:63> 'const char' lvalue
|   | |           |-ImplicitCastExpr 0x2a7e70e41f8 <col:60> 'const char *' <LValueToRValue>
|   | |           | `-DeclRefExpr 0x2a7e70e41b8 <col:60> 'const char *' lvalue ParmVar 0x2a7e70e3788 'a' 'const char *'
|   | |           `-ImplicitCastExpr 0x2a7e70e4210 <col:62> 'int' <LValueToRValue>
|   | |             `-DeclRefExpr 0x2a7e70e41d8 <col:62> 'int' lvalue Var 0x2a7e70e3a38 'i' 'int'
|   | |-UnaryOperator 0x2a7e70e4338 <col:67, col:68> 'int' postfix '++'
|   | | `-DeclRefExpr 0x2a7e70e4318 <col:67> 'int' lvalue Var 0x2a7e70e3a38 'i' 'int'
|   | `-ContinueStmt 0x2a7e70e4350 <line:212:9>
|   |-IfStmt 0x2a7e70e4578 <line:214:5, line:215:14>
|   | |-BinaryOperator 0x2a7e70e44f0 <line:214:9, col:31> 'int' '||'
|   | | |-BinaryOperator 0x2a7e70e4408 <col:9, col:14> 'int' '=='
|   | | | |-ImplicitCastExpr 0x2a7e70e43f0 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2a7e70e43a8 <col:9> 'int' lvalue Var 0x2a7e70e3a38 'i' 'int'
|   | | | `-IntegerLiteral 0x2a7e70e43c8 <col:14> 'int' 0
|   | | `-BinaryOperator 0x2a7e70e44d0 <col:19, col:31> 'int' '>'
|   | |   |-ImplicitCastExpr 0x2a7e70e44b8 <col:19> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x2a7e70e4428 <col:19> 'int' lvalue Var 0x2a7e70e3a38 'i' 'int'
|   | |   `-BinaryOperator 0x2a7e70e4498 <<built-in>:30:21, .//openssl//file_jk/before\crypto\bn\bn_print.c:214:31> 'int' '/'
|   | |     |-IntegerLiteral 0x2a7e70e4448 <<built-in>:30:21> 'int' 2147483647
|   | |     `-IntegerLiteral 0x2a7e70e4470 <.//openssl//file_jk/before\crypto\bn\bn_print.c:214:31> 'int' 4
|   | `-GotoStmt 0x2a7e70e4560 <line:215:9, col:14> 'err' 0x2a7e70e4510
|   |-BinaryOperator 0x2a7e70e4658 <line:217:5, col:15> 'int' '='
|   | |-DeclRefExpr 0x2a7e70e4590 <col:5> 'int' lvalue Var 0x2a7e70e3b70 'num' 'int'
|   | `-BinaryOperator 0x2a7e70e4638 <col:11, col:15> 'int' '+'
|   |   |-ImplicitCastExpr 0x2a7e70e4608 <col:11> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2a7e70e45c8 <col:11> 'int' lvalue Var 0x2a7e70e3a38 'i' 'int'
|   |   `-ImplicitCastExpr 0x2a7e70e4620 <col:15> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x2a7e70e45e8 <col:15> 'int' lvalue Var 0x2a7e70e3990 'neg' 'int'
|   |-IfStmt 0x2a7e70e4780 <line:218:5, line:219:20>
|   | |-OpaqueValueExpr 0x2a7e70e4768 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2a7e70e4758 <col:9, col:20>
|   |   `-ImplicitCastExpr 0x2a7e70e4740 <col:16, col:20> 'int' <LValueToRValue>
|   |     `-ParenExpr 0x2a7e70e4720 <col:16, col:20> 'int' lvalue
|   |       `-DeclRefExpr 0x2a7e70e4700 <col:17> 'int' lvalue Var 0x2a7e70e3b70 'num' 'int'
|   |-IfStmt 0x2a7e70e49e8 <line:225:5, line:231:5> has_else
|   | |-OpaqueValueExpr 0x2a7e70e49d0 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x2a7e70e4988 <line:225:22, line:228:5>
|   | | `-IfStmt 0x2a7e70e4970 <line:226:9, line:227:22>
|   | |   |-OpaqueValueExpr 0x2a7e70e4958 <<invalid sloc>> '_Bool'
|   | |   `-ReturnStmt 0x2a7e70e4948 <col:13, col:22>
|   | |     `-ParenExpr 0x2a7e70e4928 <col:20, col:22> 'int'
|   | |       `-IntegerLiteral 0x2a7e70e4900 <col:21> 'int' 0
|   | `-CompoundStmt 0x2a7e70e49c0 <line:228:12, line:231:5>
|   |-IfStmt 0x2a7e70e4b68 <line:234:5, line:235:14>
|   | |-OpaqueValueExpr 0x2a7e70e4b50 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2a7e70e4b38 <col:9, col:14> 'err' 0x2a7e70e4510
|   |-IfStmt 0x2a7e70e4c78 <line:238:5, line:239:13>
|   | |-OpaqueValueExpr 0x2a7e70e4c60 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x2a7e70e4c40 <col:9, col:13> 'int' '='
|   |   |-DeclRefExpr 0x2a7e70e4bf8 <col:9> 'int' lvalue Var 0x2a7e70e3ab8 'j' 'int'
|   |   `-IntegerLiteral 0x2a7e70e4c18 <col:13> 'int' 0
|   |-WhileStmt 0x2a7e70e51f0 <line:241:5, line:252:5>
|   | |-BinaryOperator 0x2a7e70e4d18 <line:241:12, col:19> 'int' '>='
|   | | |-UnaryOperator 0x2a7e70e4cd8 <col:12, col:14> 'int' prefix '--'
|   | | | `-DeclRefExpr 0x2a7e70e4cb8 <col:14> 'int' lvalue Var 0x2a7e70e3a38 'i' 'int'
|   | | `-IntegerLiteral 0x2a7e70e4cf0 <col:19> 'int' 0
|   | `-CompoundStmt 0x2a7e70e51d0 <col:22, line:252:5>
|   |   |-UnaryOperator 0x2a7e70e4e38 <line:244:9, col:10> 'const char *' postfix '++'
|   |   | `-DeclRefExpr 0x2a7e70e4e18 <col:9> 'const char *' lvalue ParmVar 0x2a7e70e3788 'a' 'const char *'
|   |   `-IfStmt 0x2a7e70e51b8 <line:245:9, line:251:9>
|   |     |-OpaqueValueExpr 0x2a7e70e51a0 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x2a7e70e5180 <line:245:32, line:251:9>
|   |       |-IfStmt 0x2a7e70e50d8 <line:246:13, line:248:22>
|   |       | |-OpaqueValueExpr 0x2a7e70e50c0 <<invalid sloc>> '_Bool'
|   |       | `-GotoStmt 0x2a7e70e50a8 <col:17, col:22> 'err' 0x2a7e70e4510
|   |       `-BinaryOperator 0x2a7e70e5160 <line:250:13, col:17> 'int' '='
|   |         |-DeclRefExpr 0x2a7e70e5118 <col:13> 'int' lvalue Var 0x2a7e70e3ab8 'j' 'int'
|   |         `-IntegerLiteral 0x2a7e70e5138 <col:17> 'int' 0
|   |-NullStmt 0x2a7e70e5228 <line:256:22>
|   |-ReturnStmt 0x2a7e70e52d0 <line:260:5, col:16>
|   | `-ImplicitCastExpr 0x2a7e70e52b8 <col:12, col:16> 'int' <LValueToRValue>
|   |   `-ParenExpr 0x2a7e70e5298 <col:12, col:16> 'int' lvalue
|   |     `-DeclRefExpr 0x2a7e70e5278 <col:13> 'int' lvalue Var 0x2a7e70e3b70 'num' 'int'
|   |-LabelStmt 0x2a7e70eb408 <line:261:2, col:5> 'err'
|   | `-NullStmt 0x2a7e70eb400 <col:5>
|   `-ReturnStmt 0x2a7e70eb468 <line:264:5, col:14>
|     `-ParenExpr 0x2a7e70eb448 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x2a7e70eb420 <col:13> 'int' 0
|-FunctionDecl 0x2a7e70eb648 <line:267:1, line:285:1> line:267:5 invalid BN_asc2bn 'int (int **, const char *)'
| |-ParmVarDecl 0x2a7e70eb528 <col:15, col:24> col:24 invalid bn 'int **'
| |-ParmVarDecl 0x2a7e70eb5a8 <col:28, col:40> col:40 used a 'const char *'
| `-CompoundStmt 0x2a7e70ebf38 <line:268:1, line:285:1>
|   |-DeclStmt 0x2a7e70eb7e0 <line:269:5, col:22>
|   | `-VarDecl 0x2a7e70eb728 <col:5, col:21> col:17 used p 'const char *' cinit
|   |   `-ImplicitCastExpr 0x2a7e70eb7c8 <col:21> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2a7e70eb790 <col:21> 'const char *' lvalue ParmVar 0x2a7e70eb5a8 'a' 'const char *'
|   |-IfStmt 0x2a7e70eb900 <line:271:5, line:272:10>
|   | |-BinaryOperator 0x2a7e70eb8a8 <line:271:9, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x2a7e70eb890 <col:9, col:10> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x2a7e70eb878 <col:9, col:10> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x2a7e70eb848 <col:9, col:10> 'const char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x2a7e70eb830 <col:10> 'const char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x2a7e70eb7f8 <col:10> 'const char *' lvalue Var 0x2a7e70eb728 'p' 'const char *'
|   | | `-CharacterLiteral 0x2a7e70eb860 <col:15> 'int' 45
|   | `-UnaryOperator 0x2a7e70eb8e8 <line:272:9, col:10> 'const char *' postfix '++'
|   |   `-DeclRefExpr 0x2a7e70eb8c8 <col:9> 'const char *' lvalue Var 0x2a7e70eb728 'p' 'const char *'
|   |-IfStmt 0x2a7e70ebdd0 <line:274:5, line:280:5> has_else
|   | |-BinaryOperator 0x2a7e70ebc10 <line:274:9, col:51> 'int' '&&'
|   | | |-BinaryOperator 0x2a7e70eb9e0 <col:9, col:17> 'int' '=='
|   | | | |-ImplicitCastExpr 0x2a7e70eb9c8 <col:9, col:12> 'int' <IntegralCast>
|   | | | | `-ImplicitCastExpr 0x2a7e70eb9b0 <col:9, col:12> 'char' <LValueToRValue>
|   | | | |   `-ArraySubscriptExpr 0x2a7e70eb978 <col:9, col:12> 'const char' lvalue
|   | | | |     |-ImplicitCastExpr 0x2a7e70eb960 <col:9> 'const char *' <LValueToRValue>
|   | | | |     | `-DeclRefExpr 0x2a7e70eb918 <col:9> 'const char *' lvalue Var 0x2a7e70eb728 'p' 'const char *'
|   | | | |     `-IntegerLiteral 0x2a7e70eb938 <col:11> 'int' 0
|   | | | `-CharacterLiteral 0x2a7e70eb998 <col:17> 'int' 48
|   | | `-ParenExpr 0x2a7e70ebbf0 <col:24, col:51> 'int'
|   | |   `-BinaryOperator 0x2a7e70ebbd0 <col:25, col:48> 'int' '||'
|   | |     |-BinaryOperator 0x2a7e70ebac8 <col:25, col:33> 'int' '=='
|   | |     | |-ImplicitCastExpr 0x2a7e70ebab0 <col:25, col:28> 'int' <IntegralCast>
|   | |     | | `-ImplicitCastExpr 0x2a7e70eba98 <col:25, col:28> 'char' <LValueToRValue>
|   | |     | |   `-ArraySubscriptExpr 0x2a7e70eba60 <col:25, col:28> 'const char' lvalue
|   | |     | |     |-ImplicitCastExpr 0x2a7e70eba48 <col:25> 'const char *' <LValueToRValue>
|   | |     | |     | `-DeclRefExpr 0x2a7e70eba00 <col:25> 'const char *' lvalue Var 0x2a7e70eb728 'p' 'const char *'
|   | |     | |     `-IntegerLiteral 0x2a7e70eba20 <col:27> 'int' 1
|   | |     | `-CharacterLiteral 0x2a7e70eba80 <col:33> 'int' 88
|   | |     `-BinaryOperator 0x2a7e70ebbb0 <col:40, col:48> 'int' '=='
|   | |       |-ImplicitCastExpr 0x2a7e70ebb98 <col:40, col:43> 'int' <IntegralCast>
|   | |       | `-ImplicitCastExpr 0x2a7e70ebb80 <col:40, col:43> 'char' <LValueToRValue>
|   | |       |   `-ArraySubscriptExpr 0x2a7e70ebb48 <col:40, col:43> 'const char' lvalue
|   | |       |     |-ImplicitCastExpr 0x2a7e70ebb30 <col:40> 'const char *' <LValueToRValue>
|   | |       |     | `-DeclRefExpr 0x2a7e70ebae8 <col:40> 'const char *' lvalue Var 0x2a7e70eb728 'p' 'const char *'
|   | |       |     `-IntegerLiteral 0x2a7e70ebb08 <col:42> 'int' 1
|   | |       `-CharacterLiteral 0x2a7e70ebb68 <col:48> 'int' 120
|   | |-CompoundStmt 0x2a7e70ebd18 <col:54, line:277:5>
|   | | `-IfStmt 0x2a7e70ebd00 <line:275:9, line:276:20>
|   | |   |-OpaqueValueExpr 0x2a7e70ebce8 <<invalid sloc>> '_Bool'
|   | |   `-ReturnStmt 0x2a7e70ebcd8 <col:13, col:20>
|   | |     `-IntegerLiteral 0x2a7e70ebcb0 <col:20> 'int' 0
|   | `-CompoundStmt 0x2a7e70ebdb8 <line:277:12, line:280:5>
|   |   `-IfStmt 0x2a7e70ebda0 <line:278:9, line:279:20>
|   |     |-OpaqueValueExpr 0x2a7e70ebd88 <<invalid sloc>> '_Bool'
|   |     `-ReturnStmt 0x2a7e70ebd78 <col:13, col:20>
|   |       `-IntegerLiteral 0x2a7e70ebd50 <col:20> 'int' 0
|   `-ReturnStmt 0x2a7e70ebf28 <line:284:5, col:12>
|     `-IntegerLiteral 0x2a7e70ebf00 <col:12> 'int' 1
|-FunctionDecl 0x2a7e70ec110 <line:288:1, line:299:1> line:288:5 invalid BN_print_fp 'int (FILE *, const int *)'
| |-ParmVarDecl 0x2a7e70ebf78 <col:17, col:23> col:23 used fp 'FILE *'
| |-ParmVarDecl 0x2a7e70ebff8 <col:27, col:41> col:41 invalid a 'const int *'
| `-CompoundStmt 0x2a7e70e6a08 <line:289:1, line:299:1>
|   |-DeclStmt 0x2a7e70ec258 <line:291:5, col:12>
|   | `-VarDecl 0x2a7e70ec1f0 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x2a7e70e65e8 <line:293:5, line:294:18>
|   | |-OpaqueValueExpr 0x2a7e70e65d0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2a7e70e65c0 <col:9, col:18>
|   |   `-ParenExpr 0x2a7e70e65a0 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x2a7e70e6578 <col:17> 'int' 0
|   `-ReturnStmt 0x2a7e70e69f8 <line:298:5, col:16>
|     `-ImplicitCastExpr 0x2a7e70e69e0 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x2a7e70e69c0 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x2a7e70e69a0 <col:13> 'int' lvalue Var 0x2a7e70ec1f0 'ret' 'int'
|-FunctionDecl 0x2a7e70e6ba0 <line:302:1, line:325:1> line:302:5 invalid BN_print 'int (int *, const int *)'
| |-ParmVarDecl 0x2a7e70e6a48 <col:14, col:19> col:19 invalid bp 'int *'
| |-ParmVarDecl 0x2a7e70e6ac8 <col:23, col:37> col:37 invalid a 'const int *'
| `-CompoundStmt 0x2a7e70e5a30 <line:303:1, line:325:1>
|   |-DeclStmt 0x2a7e70e6eb8 <line:304:5, col:23>
|   | |-VarDecl 0x2a7e70e6c80 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x2a7e70e6d00 <col:5, col:12> col:12 used j 'int'
|   | |-VarDecl 0x2a7e70e6d80 <col:5, col:15> col:15 used v 'int'
|   | `-VarDecl 0x2a7e70e6e00 <col:5, col:22> col:18 used z 'int' cinit
|   |   `-IntegerLiteral 0x2a7e70e6e68 <col:22> 'int' 0
|   |-DeclStmt 0x2a7e70e6f78 <line:305:5, col:16>
|   | `-VarDecl 0x2a7e70e6ee8 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x2a7e70e6f50 <col:15> 'int' 0
|   |-IfStmt 0x2a7e70e7190 <line:307:5, line:308:14>
|   | |-OpaqueValueExpr 0x2a7e70e7178 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2a7e70e7160 <col:9, col:14> 'end' 0x2a7e70e7110
|   |-IfStmt 0x2a7e70e7288 <line:309:5, line:310:14>
|   | |-OpaqueValueExpr 0x2a7e70e7270 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2a7e70e7258 <col:9, col:14> 'end' 0x2a7e70e7110
|   |-ForStmt 0x2a7e70e58f8 <line:311:5, line:321:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2a7e70e7360 <line:311:26, col:31> 'int' '>='
|   | | |-ImplicitCastExpr 0x2a7e70e7348 <col:26> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2a7e70e7300 <col:26> 'int' lvalue Var 0x2a7e70e6c80 'i' 'int'
|   | | `-IntegerLiteral 0x2a7e70e7320 <col:31> 'int' 0
|   | |-UnaryOperator 0x2a7e70e53a0 <col:34, col:35> 'int' postfix '--'
|   | | `-DeclRefExpr 0x2a7e70e5380 <col:34> 'int' lvalue Var 0x2a7e70e6c80 'i' 'int'
|   | `-CompoundStmt 0x2a7e70e58e0 <col:39, line:321:5>
|   |   `-ForStmt 0x2a7e70e58a8 <line:312:9, line:320:9>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x2a7e70e5478 <line:312:32, col:37> 'int' '>='
|   |     | |-ImplicitCastExpr 0x2a7e70e5460 <col:32> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2a7e70e5418 <col:32> 'int' lvalue Var 0x2a7e70e6d00 'j' 'int'
|   |     | `-IntegerLiteral 0x2a7e70e5438 <col:37> 'int' 0
|   |     |-CompoundAssignOperator 0x2a7e70e54e0 <col:40, col:45> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     | |-DeclRefExpr 0x2a7e70e5498 <col:40> 'int' lvalue Var 0x2a7e70e6d00 'j' 'int'
|   |     | `-IntegerLiteral 0x2a7e70e54b8 <col:45> 'int' 4
|   |     `-CompoundStmt 0x2a7e70e5890 <col:48, line:320:9>
|   |       `-IfStmt 0x2a7e70e5878 <line:315:13, line:319:13>
|   |         |-BinaryOperator 0x2a7e70e56f8 <line:315:17, col:29> 'int' '||'
|   |         | |-ImplicitCastExpr 0x2a7e70e56e0 <col:17> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x2a7e70e5608 <col:17> 'int' lvalue Var 0x2a7e70e6e00 'z' 'int'
|   |         | `-ParenExpr 0x2a7e70e56c0 <col:22, col:29> 'int'
|   |         |   `-BinaryOperator 0x2a7e70e56a0 <col:23, col:28> 'int' '!='
|   |         |     |-ImplicitCastExpr 0x2a7e70e5688 <col:23> 'int' <LValueToRValue>
|   |         |     | `-DeclRefExpr 0x2a7e70e5640 <col:23> 'int' lvalue Var 0x2a7e70e6d80 'v' 'int'
|   |         |     `-IntegerLiteral 0x2a7e70e5660 <col:28> 'int' 0
|   |         `-CompoundStmt 0x2a7e70e5858 <col:32, line:319:13>
|   |           |-IfStmt 0x2a7e70e57d8 <line:316:17, line:317:26>
|   |           | |-OpaqueValueExpr 0x2a7e70e57c0 <<invalid sloc>> '_Bool'
|   |           | `-GotoStmt 0x2a7e70e57a8 <col:21, col:26> 'end' 0x2a7e70e7110
|   |           `-BinaryOperator 0x2a7e70e5838 <line:318:17, col:21> 'int' '='
|   |             |-DeclRefExpr 0x2a7e70e57f0 <col:17> 'int' lvalue Var 0x2a7e70e6e00 'z' 'int'
|   |             `-IntegerLiteral 0x2a7e70e5810 <col:21> 'int' 1
|   |-BinaryOperator 0x2a7e70e5990 <line:322:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x2a7e70e5930 <col:5> 'int' lvalue Var 0x2a7e70e6ee8 'ret' 'int'
|   | `-IntegerLiteral 0x2a7e70e5968 <col:11> 'int' 1
|   `-LabelStmt 0x2a7e70e5a18 <line:323:2, line:324:16> 'end'
|     `-ReturnStmt 0x2a7e70e5a08 <col:5, col:16>
|       `-ImplicitCastExpr 0x2a7e70e59f0 <col:12, col:16> 'int' <LValueToRValue>
|         `-ParenExpr 0x2a7e70e59d0 <col:12, col:16> 'int' lvalue
|           `-DeclRefExpr 0x2a7e70e59b0 <col:13> 'int' lvalue Var 0x2a7e70e6ee8 'ret' 'int'
`-FunctionDecl 0x2a7e70e5b40 <line:327:1, line:343:1> line:327:7 BN_options 'char *(void)'
  `-CompoundStmt 0x2a7e70e6078 <line:328:1, line:343:1>
    |-DeclStmt 0x2a7e70e5ca0 <line:329:5, col:24>
    | `-VarDecl 0x2a7e70e5c10 <col:5, col:23> col:16 used init 'int' static cinit
    |   `-IntegerLiteral 0x2a7e70e5c78 <col:23> 'int' 0
    |-DeclStmt 0x2a7e70e5dc0 <line:330:5, col:25>
    | `-VarDecl 0x2a7e70e5d58 <col:5, col:24> col:17 used data 'char [16]' static
    |-IfStmt 0x2a7e70e5ff8 <line:332:5, line:341:5>
    | |-UnaryOperator 0x2a7e70e5e28 <line:332:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x2a7e70e5e10 <col:10> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x2a7e70e5dd8 <col:10> 'int' lvalue Var 0x2a7e70e5c10 'init' 'int'
    | `-CompoundStmt 0x2a7e70e5fe0 <col:16, line:341:5>
    |   `-UnaryOperator 0x2a7e70e5e60 <line:333:9, col:13> 'int' postfix '++'
    |     `-DeclRefExpr 0x2a7e70e5e40 <col:9> 'int' lvalue Var 0x2a7e70e5c10 'init' 'int'
    `-ReturnStmt 0x2a7e70e6068 <line:342:5, col:17>
      `-ImplicitCastExpr 0x2a7e70e6050 <col:12, col:17> 'char *' <ArrayToPointerDecay>
        `-ParenExpr 0x2a7e70e6030 <col:12, col:17> 'char [16]' lvalue
          `-DeclRefExpr 0x2a7e70e6010 <col:13> 'char [16]' lvalue Var 0x2a7e70e5d58 'data' 'char [16]'
