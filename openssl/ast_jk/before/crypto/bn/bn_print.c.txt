TranslationUnitDecl 0x1ec71d06f68 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1ec71d07800 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1ec71d07500 '__int128'
|-TypedefDecl 0x1ec71d07870 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1ec71d07520 'unsigned __int128'
|-TypedefDecl 0x1ec71d07ba8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1ec71d07960 'struct __NSConstantString_tag'
|   `-Record 0x1ec71d078c8 '__NSConstantString_tag'
|-TypedefDecl 0x1ec71d07c18 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1ec71d07140 'unsigned long long'
|-TypedefDecl 0x1ec71d07cb0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1ec71d07c70 'char *'
|   `-BuiltinType 0x1ec71d07000 'char'
|-TypedefDecl 0x1ec71d07d20 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1ec71d07c70 'char *'
|   `-BuiltinType 0x1ec71d07000 'char'
|-TypedefDecl 0x1ec71d07de0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1ec71d07140 'unsigned long long'
|-TypedefDecl 0x1ec71d07e50 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1ec71d07c70 'char *'
|   `-BuiltinType 0x1ec71d07000 'char'
|-FunctionDecl 0x1ec7384e3e0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1ec7384e480 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1ec7384e4f0 <col:21> Implicit
|-FunctionDecl 0x1ec7384e548 prev 0x1ec7384e3e0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1ec7384e270 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1ec7384e638 <col:21> Inherited Implicit
|-TypedefDecl 0x1ec7384e678 prev 0x1ec71d07c18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1ec71d07140 'unsigned long long'
|-TypedefDecl 0x1ec7384e720 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1ec7384e6f0 'size_t' sugar
|   |-Typedef 0x1ec7384e678 'size_t'
|   `-BuiltinType 0x1ec71d07140 'unsigned long long'
|-TypedefDecl 0x1ec7384e790 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1ec71d070a0 'long long'
|-TypedefDecl 0x1ec7384e800 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1ec71d070a0 'long long'
|-TypedefDecl 0x1ec7384e870 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1ec71d070e0 'unsigned short'
|-TypedefDecl 0x1ec7384e8e0 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1ec71d070e0 'unsigned short'
|-TypedefDecl 0x1ec7384e950 <line:542:1, col:24> col:24 referenced wctype_t 'unsigned short'
| `-BuiltinType 0x1ec71d070e0 'unsigned short'
|-TypedefDecl 0x1ec7384e9c0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1ec71d07060 'int'
|-TypedefDecl 0x1ec7384ea30 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1ec71d07080 'long'
|-TypedefDecl 0x1ec7384eaa0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1ec71d070a0 'long long'
|-TypedefDecl 0x1ec7384eb30 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1ec7384eb00 '__time64_t' sugar
|   |-Typedef 0x1ec7384eaa0 '__time64_t'
|   `-BuiltinType 0x1ec71d070a0 'long long'
|-FunctionDecl 0x1ec7384eca8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1ec7384eec8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1ec7388fcb0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1ec7384f008 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1ec7384f080 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1ec7384f0f8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1ec7384f178 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1ec7388fa50 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1ec7388fd90 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1ec7388fe50 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1ec7388ffc0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1ec7388ff70 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1ec7388ff10 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1ec7388fe30 'struct threadlocaleinfostruct'
|       `-Record 0x1ec7389ab00 'threadlocaleinfostruct'
|-TypedefDecl 0x1ec738900d0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1ec73890080 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1ec73890020 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1ec7388fef0 'struct threadmbcinfostruct'
|       `-Record 0x1ec7388fe50 'threadmbcinfostruct'
|-RecordDecl 0x1ec73890128 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1ec738901e0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1ec738902a0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ec73890330 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1ec738903c0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1ec73890478 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1ec73890420 'struct localeinfo_struct' sugar
|   `-RecordType 0x1ec73890280 'struct localeinfo_struct'
|     `-Record 0x1ec738901e0 'localeinfo_struct'
|-TypedefDecl 0x1ec73890550 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1ec73890500 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1ec73890420 'struct localeinfo_struct' sugar
|     `-RecordType 0x1ec73890280 'struct localeinfo_struct'
|       `-Record 0x1ec738901e0 'localeinfo_struct'
|-RecordDecl 0x1ec738905c8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1ec73890680 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ec738906f8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1ec738907b8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1ec73890850 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1ec738908c0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1ec73890978 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1ec73890920 'struct localerefcount' sugar
|   `-RecordType 0x1ec73890660 'struct localerefcount'
|     `-Record 0x1ec738905c8 'localerefcount'
|-RecordDecl 0x1ec7389ab00 prev 0x1ec7388fd90 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1ec7389ab80 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ec7389abf8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1ec7389ac68 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1ec7389acd8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1ec7389ad48 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1ec7389af08 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1ec7389af78 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1ec7389afe8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1ec7389b058 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1ec7389b0c8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1ec7389b138 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1ec7389b190 parent 0x1ec71d06f68 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1ec7389b320 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1ec7389b390 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1ec7389b400 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1ec7389b470 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1ec7389b510 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1ec7389b580 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1ec7389b690 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1ec7389b7c8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1ec7389b878 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1ec7389b820 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1ec7388fe30 'struct threadlocaleinfostruct'
|     `-Record 0x1ec7389ab00 'threadlocaleinfostruct'
|-RecordDecl 0x1ec7389b910 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x1ec7389b9d0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ec7389ba48 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x1ec73894aa0 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x1ec73894b10 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x1ec73894b80 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x1ec73894bf0 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x1ec73894c60 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x1ec73894cd0 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x1ec73894d40 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x1ec73894df0 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x1ec73894da0 'struct _iobuf' sugar
|   `-RecordType 0x1ec7389b9b0 'struct _iobuf'
|     `-Record 0x1ec7389b910 '_iobuf'
|-FunctionDecl 0x1ec73895028 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x1ec738950f8 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1ec71d070a0 'long long'
|-FunctionDecl 0x1ec738952d8 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ec73895160 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x1ec738955d0 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ec738953b0 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x1ec73895428 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1ec73895980 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x1ec738956b0 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x1ec73895730 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x1ec738957b0 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x1ec73895c20 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1ec73895ab0 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x1ec73895e50 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x1ec73895d10 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1ec73896000 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ec73895f20 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x1ec738961f0 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ec738964e8 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1ec738962c0 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x1ec73896340 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x1ec738966a0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ec738965c0 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x1ec73896850 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ec73896770 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x1ec73896a00 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ec73896920 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1ec738a0c68 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ec738a0b88 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x1ec738a0df8 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ec738a1160 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x1ec738a0ec0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1ec738a0fb8 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x1ec738a1518 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x1ec738a1240 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x1ec738a12c0 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x1ec738a1338 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x1ec738a16d8 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ec738a15f8 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1ec738a19a0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1ec738a17b0 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x1ec738a1830 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x1ec7389db30 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ec7389df28 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x1ec7389dfc8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ec7389e030 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ec7389e0a8 prev 0x1ec7389df28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1ec7389dd00 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x1ec7389dd80 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x1ec7389e158 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec7389e5d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x1ec7389e300 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x1ec7389e380 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x1ec7389e400 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x1ec7389e8f0 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x1ec7389e990 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1ec7389e9f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1ec7389ea70 <col:40> Implicit printf 2 3
|-FunctionDecl 0x1ec738a2b80 prev 0x1ec7389e8f0 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1ec7389e6b0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1ec7389e730 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x1ec738a2c78 <col:40> Inherited printf 2 3
|-FunctionDecl 0x1ec738a2e40 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1ec738a2cc0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1ec738a2d40 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1ec738a3098 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ec738a2f20 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x1ec738a2f98 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x1ec738a32c8 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ec738a3178 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x1ec738a35c0 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x1ec738a33a0 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1ec738a3418 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x1ec738a3a58 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1ec738a3af8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1ec738a3b90 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1ec738a3bf8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1ec738a3c60 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1ec738a3ce8 prev 0x1ec738a3a58 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1ec738a36a0 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x1ec738a3718 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec738a3790 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ec738a3808 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x1ec738a41f0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1ec738a3dd8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x1ec738a3e50 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec738a3ec8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec738a3f40 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ec738a3fb8 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x1ec738a46b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1ec738a43e0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x1ec738a4460 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x1ec738a44d8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x1ec738a4768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec738a4c48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1ec738a48b0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1ec738a4930 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x1ec738a49b0 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x1ec738a4a28 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x1ec738a4ff0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1ec738a5090 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1ec738a50f8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1ec738a5170 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1ec738a51d8 prev 0x1ec738a4ff0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1ec738a4e28 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x1ec738a4ea8 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x1ec738a53b8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1ec738a5288 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec738a57f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec738a54f8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x1ec738a5578 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x1ec738a5610 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ec738a58b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec738a5bb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1ec738a59f0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1ec738a5a70 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1ec738a5ea0 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec738a5c88 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ec738a5d08 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1ec738a5d80 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec738a6200 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x1ec738a5f80 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1ec738a6058 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x1ec738a65b8 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1ec738a62d8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x1ec738a6358 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x1ec738a63d8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x1ec738a6818 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1ec738a6698 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x1ec7389eb88 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1ec738a68e8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1ec738a6968 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x1ec738a69e8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x1ec7389ede8 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1ec7389ec68 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1ec7389f2a8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1ec7389f348 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1ec7389f3b0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1ec7389f418 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1ec7389f480 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1ec7389f508 prev 0x1ec7389f2a8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1ec7389eef0 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x1ec7389ef68 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec7389efe0 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ec7389f058 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x1ec7389f6d0 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ec7389f5f0 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1ec7389f860 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ec7389f9e8 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ec7389fd10 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x1ec7389fab8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x1ec7389fb60 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ec738a0038 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ec7389fef0 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x1ec738a00e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec738a0300 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ec738a0220 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x1ec738a0520 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1ec738a03d8 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1ec738a06d0 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ec738a05f0 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x1ec738a0920 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1ec738a07a8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x1ec738a0828 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x1ec738a1b70 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1ec738a1c10 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1ec738a1c80 <col:40> Implicit printf 1 2
|-FunctionDecl 0x1ec738a1ce8 prev 0x1ec738a1b70 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x1ec738a0a00 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x1ec738a1dd8 <col:40> Inherited printf 1 2
|-FunctionDecl 0x1ec738a1f08 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ec738a1e28 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x1ec738a2158 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ec738a1fe0 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x1ec738a2058 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1ec738a2318 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ec738a2238 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x1ec738a2538 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1ec738a23f0 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x1ec738a2788 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ec738a2610 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x1ec738a2688 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1ec738a2948 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1ec738a2868 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1ec738f1fd0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1ec738a2a20 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x1ec738a2aa0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1ec738f2190 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1ec738f20b0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1ec738f2420 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1ec738f2340 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1ec738f24c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1ec738f26c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1ec738f25e8 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1ec738f2850 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ec738f2af8 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1ec738f2b98 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1ec738f2c08 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1ec738f2c70 prev 0x1ec738f2af8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1ec738f29e0 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1ec738f2e48 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1ec738f2d18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec738f7260 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec738f7028 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1ec738f70a0 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ec738f7310 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec738f7538 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ec738f7458 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x1ec738f7788 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec738f7610 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1ec738f7688 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec738f7b48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x1ec738f7920 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x1ec738f79a0 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x1ec738f7bf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec738f7e20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ec738f7d40 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x1ec738f4068 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1ec738f3f20 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x1ec738f4250 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x1ec738f46a0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x1ec738f4318 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1ec738f4398 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x1ec738f4418 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x1ec738f4490 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ec738f4b20 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ec738f4790 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x1ec738f4808 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec738f4880 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ec738f4900 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x1ec738f5f40 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ec738f4c10 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1ec738f4c88 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ec738f4d08 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x1ec738f6108 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ec738f6028 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x1ec738f64e0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1ec738f6580 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ec738f65e8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1ec738f6660 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1ec738f66c8 prev 0x1ec738f64e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1ec738f62a0 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x1ec738f6320 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x1ec738f68a8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1ec738f6778 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec738f6c98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec738f69b8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x1ec738f6a38 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x1ec738f6ab0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ec738f6d50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec738f8060 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x1ec738f6e98 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x1ec738f7f60 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x1ec738f8358 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec738f8140 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x1ec738f81c0 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1ec738f8238 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec738f87e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ec738f8500 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x1ec738f8578 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec738f85f8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x1ec738f88a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec738f8e70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec738f8ae0 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x1ec738f8b58 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec738f8bd8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x1ec738f8c50 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ec738f4f30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec738f5290 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ec738f5078 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x1ec738f50f0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ec738f5170 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x1ec738f5628 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec738f5378 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x1ec738f53f0 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec738f5470 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x1ec738f54e8 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec738f5888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x1ec738f5928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec738f5be0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x1ec738f5a70 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x1ec738f8f70 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x1ec738f5cb8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x1ec738f5d30 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ec738f91f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ec738f9110 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x1ec738f9298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec738f9558 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ec738f93e0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x1ec738f9458 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x1ec738f9970 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ec738f9a10 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1ec738f9a78 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ec738f9ae0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ec738f9b60 <col:40> Implicit printf 2 0
|-FunctionDecl 0x1ec738f9bc8 prev 0x1ec738f9970 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1ec738f9630 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1ec738f96b0 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x1ec738f9728 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ec738f9cc8 <col:40> Inherited printf 2 0
|-FunctionDecl 0x1ec738f9f80 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ec738fa020 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1ec738fa088 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ec738fa0f0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ec738fa170 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1ec738fa1d8 prev 0x1ec738f9f80 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1ec738f9d10 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1ec738f9d90 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1ec738f9e08 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ec738fa2d8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1ec738fa538 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1ec738fa320 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1ec738fa3a0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1ec738fa418 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec738fa830 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1ec738fa618 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1ec738fa698 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1ec738fa710 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec738fab78 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ec738fac18 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ec738fac80 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ec738facf8 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1ec738fad60 prev 0x1ec738fab78 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1ec738fa918 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1ec738fa990 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ec738fae58 <col:40> Inherited printf 1 0
|-FunctionDecl 0x1ec738f3048 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ec738f30e8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ec738f3150 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ec738f31c8 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x1ec738f3230 prev 0x1ec738f3048 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1ec738faea8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x1ec738f2f10 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ec738f3328 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x1ec738f34f0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ec738f3378 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x1ec738f33f0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec738f3748 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ec738f35d0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1ec738f3648 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec738f3ca8 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ec738f3d48 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1ec738f3db0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1ec738f3e18 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ec738f3e80 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ec738fefd0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1ec738ff038 prev 0x1ec738f3ca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1ec738f38e8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x1ec738f3960 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec738f39e0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1ec738f3a58 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1ec738ff228 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1ec738ff0f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec738ff698 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ec738ff278 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1ec738ff2f0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec738ff368 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec738ff3e8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1ec738ff460 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec738ffad8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ec738ff790 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1ec738ff808 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec738ff880 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec738ff900 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1ec738ff978 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec738ffea8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ec738ffc90 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1ec738ffd08 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec738ffd88 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1ec738fff60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec73901460 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ec739011b0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1ec73901228 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec739012a8 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1ec73901320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1ec73901520 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec73901918 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ec73901668 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1ec739016e0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec73901760 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1ec739017d8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec73901cd8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1ec73901a08 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1ec73901a88 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1ec73901b00 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec73900080 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1ec73900120 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1ec73900188 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1ec73900200 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1ec73900268 prev 0x1ec73900080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1ec73901e80 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1ec73901f00 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1ec73900448 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1ec73900318 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec73900870 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ec73900910 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1ec73900978 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ec739009e0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ec73900a60 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1ec73900ac8 prev 0x1ec73900870 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1ec73900558 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1ec739005d8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1ec73900650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1ec73900cb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1ec73900b80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec738fcfb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ec738fd050 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ec738fd0b8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ec738fd120 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ec738fd1a0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1ec738fd208 prev 0x1ec738fcfb0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1ec73900d00 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1ec73900d80 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1ec73900df8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ec738fd308 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1ec738fd4d0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ec738fd358 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1ec738fd3d0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec738fd7c8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ec738fd5b0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1ec738fd628 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ec738fd6a8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1ec738fdb60 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ec738fd8b0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1ec738fd928 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec738fd9a8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1ec738fda20 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec738fddc8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1ec738fdc48 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1ec738fdcc8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1ec738faf90 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ec738fdea8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1ec738fb280 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ec738fb068 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1ec738fb0e0 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ec738fb160 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1ec738fb578 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1ec738fb360 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ec738fb3e0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1ec738fb458 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec738fb7d8 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ec738fb660 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1ec738fb6d8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec738fbb68 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ec738fb8b8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1ec738fb930 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec738fb9b0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1ec738fba28 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec738fbd38 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ec738fbc58 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1ec738fbfa0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ec738fbe10 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1ec738fbe88 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec738fc160 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ec738fc080 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1ec738fc2f0 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ec738fc538 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec738fc3c0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1ec738fc438 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec738fc790 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec738fc618 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1ec738fc690 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec738fc9e8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec738fc870 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1ec738fc8e8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec738fcd98 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec738fcac8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1ec738fcb40 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ec738fcbb8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec73903130 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec738fce80 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1ec738fcef8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ec73903010 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec73903428 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec73903218 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1ec73903290 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ec73903308 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec73903720 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec73903508 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1ec73903588 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x1ec73903600 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec73903a18 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec73903800 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ec73903880 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1ec739038f8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec73903d10 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec73903af8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ec73903b78 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1ec73903bf0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec73904180 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec73903df0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ec73903e70 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x1ec73903ee8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ec73903f60 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec73904518 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec73904268 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ec739042e8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1ec73904360 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ec739043d8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec739048b0 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec73904600 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ec73904680 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1ec739046f8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ec73904770 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec73904d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec73904a60 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1ec73904ae0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1ec73904b58 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ec73904e00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec73905340 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec73904f48 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1ec73905030 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec739050b0 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x1ec73905128 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec739056e0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec73905430 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1ec739054a8 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec73905528 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1ec739055a0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec73905c30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec739058d0 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x1ec73905950 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x1ec739059c8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ec73905a40 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1ec73905cf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec738fe1f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec73905e38 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1ec73905eb0 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec73905f30 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x1ec73905fa8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ec738fdfc0 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec738fe638 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec738fe2f0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1ec738fe368 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec738fe3e8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x1ec738fe460 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ec738fe4d8 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec738fe8a8 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec738fe730 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1ec738fe7a8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec738feb00 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec738fe988 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x1ec738fea00 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec738fedf0 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec738febe0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1ec738fec58 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ec738fecd0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec7390d1e0 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec738feed8 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x1ec738fef50 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ec7390d0c0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec7390d638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec7390d388 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1ec7390d400 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec7390d480 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1ec7390d4f8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ec7390d6f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec7390daf0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec7390d840 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1ec7390d8b8 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec7390d938 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1ec7390d9b0 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec73909070 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec7390dbe0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1ec7390dc58 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec7390dcd0 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec7390dd50 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1ec7390ddc8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec739095b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec73909268 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x1ec739092e0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec73909360 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x1ec739093d8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ec73909450 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1ec73909678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec73909af8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec739097c8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1ec73909840 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec739098c0 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x1ec73909938 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ec739099b0 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec7390a0e0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec73909bf0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1ec73909c68 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec73909ce0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec73909d60 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1ec73909dd8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ec73909e50 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec7390a4a0 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1ec7390a1d8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1ec7390a250 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1ec7390a2d0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1ec7390a710 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1ec7390a5a0 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1ec7390a928 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1ec7390ac08 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1ec7390a9f0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1ec7390aa68 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1ec7390ae50 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1ec7390ace0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1ec7390b090 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1ec7390af20 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x1ec7390b218 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1ec7390b450 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1ec7390b2e0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1ec7390b358 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x1ec7390b600 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1ec7390b528 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1ec7390b8a8 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1ec7390b6d0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ec7390b748 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1ec7390bc50 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x1ec7390b980 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ec7390ba00 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x1ec7390ba78 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x1ec7390bf50 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1ec7390bd30 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ec7390bda8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1ec73907208 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1ec7390c028 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1ec73907060 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1ec73907510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ec739073a0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1ec739075b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec73907878 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1ec739076f8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1ec73907b80 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ec73907948 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1ec739079c0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1ec73907dd0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ec73907c58 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1ec73907cd0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1ec73906040 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ec73907ea8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1ec739061f0 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ec73906110 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1ec739063a0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ec739062c0 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1ec73906738 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ec73906470 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1ec739064e8 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec73906560 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec73906a28 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ec73906818 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1ec73906890 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec73906908 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec73906d18 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ec73906b08 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ec73906b80 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec73906bf8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec7390e0c0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ec73906df8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1ec73906e70 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec73906ee8 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec7390e3c0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ec7390e1a0 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec7390e218 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec7390e610 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ec7390e498 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec7390e510 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec7390e860 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ec7390e6e8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec7390e760 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec7390eab0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ec7390e938 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec7390e9b0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec7390ee68 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ec7390eb88 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ec7390ec00 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ec7390ec78 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1ec739102f0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ec7390ef48 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ec7390efc0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec7390f038 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec739100e0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec739106a8 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ec739103d8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ec73910450 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec739104c8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec73910998 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ec73910788 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1ec73910800 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec73910878 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec73910c88 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ec73910a78 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ec73910af0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ec73910b68 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1ec73911010 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ec73910d68 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ec73910de0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec73910e58 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec73910ed0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec7390f480 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ec7390f0f8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ec7390f170 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec7390f1e8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ec7390f260 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1ec7390f988 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ec7390f568 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ec7390f5e0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec7390f658 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec7390f6d0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec7390f748 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec7390fd48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ec7390fb38 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ec7390fbb0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec7390fc28 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ec7390fe00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec7390c2d0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ec73910000 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ec7390c0a0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec7390c118 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ec7390c190 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1ec7390c390 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec7390c648 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ec7390c4d0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1ec7390c548 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1ec7390c800 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ec7390c720 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1ec7390cae0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ec7390c8d0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ec7390c948 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec7390c9c0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec7390cd38 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ec7390cbc0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec7390cc38 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec73917f80 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ec7390ce10 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ec7390ce88 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ec7390cf00 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x1ec73918308 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ec73918060 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ec739180d8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec73918150 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec739181c8 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec739184d0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ec739183f0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x1ec73918718 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ec739185a0 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec73918618 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec73918a20 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec739187f0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec73918868 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec73918c70 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec73918af8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec73918b70 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec73918ec0 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec73918d48 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec73918dc0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec73914238 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec73913f68 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ec73913fe0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ec73914058 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec73914528 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec73914318 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ec73914390 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ec73914408 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec73914818 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec73914608 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ec73914680 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ec739146f8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec73914bd8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec739148f8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ec73914970 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec739149e8 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec73916f70 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec73914cb8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ec73914d30 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec73914da8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec73917260 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec73917050 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ec739170c8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec73917140 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec739176b0 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec73917340 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ec739173b8 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ec73917430 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ec739174a8 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec73917a40 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec73917798 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1ec73917810 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ec73917888 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ec73917900 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec73917dd0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec73917b28 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1ec73917ba0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ec73917c18 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ec73917c90 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec739192a0 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec73917eb8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ec73918f90 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec73919008 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec73919080 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec73919630 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec73919388 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ec73919400 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec73919478 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec739194f0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec739199c0 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec73919718 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ec73919790 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec73919808 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec73919880 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec73919ec8 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec73919aa8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ec73919b20 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec73919b98 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ec73919c10 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ec73919c88 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec7391a308 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec73919fc8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ec7391a040 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec7391a0b8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ec7391a130 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ec7391a1a8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec7391a738 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec7391a3f8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ec7391a470 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec7391a4e8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ec7391a560 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ec7391a5d8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec7391a9a0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec7391a828 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec7391a8a0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec7391abf0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec7391aa78 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec7391aaf0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec7391aed8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec7391acc8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ec7391ad40 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ec7391adb8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec739132c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec73913020 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ec73913098 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec73913110 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ec73913188 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ec73913388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec739138f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec739134d0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ec73913548 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec739135c0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec73913638 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec739136b0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec73913e30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec73913af0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ec73913b68 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec73913be0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ec73913c58 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ec73913cd0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1ec73914f50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec73915560 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec73915098 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ec73915110 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec73915188 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec73915200 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ec73915278 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ec739152f0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec73915a60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ec73915828 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ec739158a0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x1ec73915b10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1ec73915c28 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1ec73920268 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ec73915ee0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ec73920010 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ec73920088 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1ec73920320 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1ec73920438 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1ec739209d8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec739206f8 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ec73920770 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ec739207e8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x1ec73920a90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1ec73920bb0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1ec7391e1f0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec73920e70 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ec73920ee8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ec73920f60 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ec7391dfe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1ec7391e2b0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1ec7391e3d0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1ec7391e6d8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1ec7391e4f8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1ec7391e570 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec7391e5e8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x1ec7391f290 <line:37:1, line:44:1>
|   |-DeclStmt 0x1ec7391e820 <line:38:5, col:21>
|   | `-VarDecl 0x1ec7391e7b8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1ec7391e8b8 <line:39:5, col:13>
|   | `-VarDecl 0x1ec7391e850 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1ec7391ec10 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1ec7391ebf8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1ec7391eb10 <col:34> '<builtin fn type>' Function 0x1ec7391e9a8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1ec7391eb48 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1ec7391e7b8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1ec7391eb80 <col:29> 'const wchar_t *' lvalue ParmVar 0x1ec7391e5e8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1ec7391eed0 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1ec7391ec40 <col:5> 'int' lvalue Var 0x1ec7391e850 '_Ret' 'int'
|   | `-CallExpr 0x1ec7391ee10 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1ec7391edf8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1ec7391ec78 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1ec73919ec8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1ec7391ee58 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ec7391ec98 <col:27> 'wchar_t *' lvalue ParmVar 0x1ec7391e4f8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1ec7391ee70 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ec7391ecb8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1ec7391e570 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1ec7391ee88 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ec7391ecd8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1ec7391e5e8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1ec7391eea0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1ec7391ed60 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1ec7391ed38 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1ec7391ecf8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1ec7391eeb8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ec7391ed80 <col:59> 'va_list':'char *' lvalue Var 0x1ec7391e7b8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1ec7391f220 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1ec7391f208 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1ec7391f158 <col:34> '<builtin fn type>' Function 0x1ec7391eff0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1ec7391f190 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1ec7391e7b8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1ec7391f280 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x1ec7391f268 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1ec7391f248 <col:12> 'int' lvalue Var 0x1ec7391e850 '_Ret' 'int'
|-FunctionDecl 0x1ec7391e9a8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1ec7391ea48 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1ec7391eab8 <col:34> Implicit
|-FunctionDecl 0x1ec7391eff0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1ec7391f090 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1ec7391f100 <col:34> Implicit
|-FunctionDecl 0x1ec7391f588 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x1ec7391f2e0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x1ec7391f358 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec7391f3d0 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ec7391f448 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1ec7391f870 <line:50:1, line:52:1>
|   `-ReturnStmt 0x1ec7391f860 <line:51:5, col:62>
|     `-CallExpr 0x1ec7391f7a0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x1ec7391f788 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1ec7391f660 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1ec73919ec8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1ec7391f7e8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ec7391f680 <col:27> 'wchar_t *' lvalue ParmVar 0x1ec7391f2e0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1ec7391f800 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1ec7391f6a0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1ec7391f358 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1ec7391f818 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ec7391f6c0 <col:44> 'const wchar_t *' lvalue ParmVar 0x1ec7391f3d0 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1ec7391f830 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x1ec7391f748 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x1ec7391f720 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x1ec7391f6e0 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x1ec7391f848 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1ec7391f768 <col:59> 'va_list':'char *' lvalue ParmVar 0x1ec7391f448 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1ec7391fb10 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x1ec7391f898 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x1ec7391f910 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec7391f988 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ec7391fa00 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1ec739220c8 <line:61:1, line:68:1>
|   |-DeclStmt 0x1ec7391fc60 <line:62:5, col:21>
|   | `-VarDecl 0x1ec7391fbf8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1ec7391fcf8 <line:63:5, col:13>
|   | `-VarDecl 0x1ec7391fc90 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1ec7391fda0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1ec7391fd88 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1ec7391fd10 <col:34> '<builtin fn type>' Function 0x1ec7391e9a8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1ec7391fd30 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x1ec7391fbf8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1ec7391fd68 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1ec7391fa00 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x1ec7391ffa0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x1ec7391fdd0 <col:5> 'int' lvalue Var 0x1ec7391fc90 '_Ret' 'int'
|   | `-CallExpr 0x1ec7391fee0 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1ec7391fec8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1ec7391fe08 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1ec73919ec8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1ec7391ff28 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ec7391fe28 <col:27> 'wchar_t *' lvalue ParmVar 0x1ec7391f898 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1ec7391ff40 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ec7391fe48 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1ec7391f910 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1ec7391ff58 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ec7391fe68 <col:44> 'const wchar_t *' lvalue ParmVar 0x1ec7391f988 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1ec7391ff70 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ec7391fe88 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1ec7391fa00 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x1ec7391ff88 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ec7391fea8 <col:64> 'va_list':'char *' lvalue Var 0x1ec7391fbf8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1ec73922058 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1ec73922040 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1ec7391ffc0 <col:34> '<builtin fn type>' Function 0x1ec7391eff0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1ec73922020 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x1ec7391fbf8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1ec739220b8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1ec739220a0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1ec73922080 <col:12> 'int' lvalue Var 0x1ec7391fc90 '_Ret' 'int'
|-FunctionDecl 0x1ec73922458 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1ec73922118 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1ec73922190 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec73922208 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ec73922280 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ec739222f8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1ec739226e0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1ec739226d0 <line:75:5, col:67>
|     `-CallExpr 0x1ec73922610 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1ec739225f8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1ec73922538 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1ec73919ec8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1ec73922658 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ec73922558 <col:27> 'wchar_t *' lvalue ParmVar 0x1ec73922118 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1ec73922670 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1ec73922578 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1ec73922190 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1ec73922688 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ec73922598 <col:44> 'const wchar_t *' lvalue ParmVar 0x1ec73922208 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1ec739226a0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ec739225b8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1ec73922280 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1ec739226b8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1ec739225d8 <col:64> 'va_list':'char *' lvalue ParmVar 0x1ec739222f8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1ec73922928 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ec73922708 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1ec73922780 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1ec73922b78 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ec73922a00 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec73922a78 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec73922e60 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ec73922c50 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ec73922cc8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ec73922d40 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ec7391b128 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ec7391afb0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1ec7391b028 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ec7391b1d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec7391b5e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec7391b3d8 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1ec7391b450 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ec7391b4c8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ec7391b6a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec7391b958 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ec7391b7e0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1ec7391b858 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1ec7391bc40 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec7391ba30 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ec7391baa8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec7391bb20 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec739230a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ec7391bde0 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ec7391be58 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ec73923150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec73923628 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec73923350 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ec739233c8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ec73923440 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ec739236e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec73923998 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ec73923820 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1ec73923898 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1ec73923c80 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec73923a70 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ec73923ae8 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec73923b60 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec7391c0a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ec73923e20 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ec73923e98 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec73923f10 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ec7391c160 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec7391c6e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec7391c360 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ec7391c3d8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec7391c450 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ec7391c4c8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ec7391c7a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec7391caf0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ec7391c8e0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ec7391c958 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ec7391c9d0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1ec7391ce78 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec7391cbd0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ec7391cc48 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec7391ccc0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec7391cd38 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec739241f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1ec73924110 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ec73924298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec73924610 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec73924498 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ec73924510 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ec739246c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec739248e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ec73924800 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1ec73924b28 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ec739249b0 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ec73924a28 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec73924e28 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1ec73924c08 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1ec73924c80 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x1ec7391d178 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ec73924fc0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1ec7391cfd0 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x1ec7391d228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec7391d630 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ec7391d370 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1ec7391d3e8 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1ec7391d460 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x1ec7391da90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1ec7391d7d0 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1ec7391d848 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x1ec7391d8c0 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x1ec7391db48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec7392c108 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1ec7391dc90 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x1ec7391dd08 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1ec7391dd80 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1ec7391ddf8 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x1ec7392c360 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1ec7392c1f0 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1ec7392c5a0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ec7392c430 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x1ec7392c4a8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x1ec7392c758 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1ec7392c678 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x1ec7392ca48 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1ec7392c828 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x1ec7392c8a0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1ec7392ccb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ec7392cbe0 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1ec7392cd60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ec7392cf78 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1ec7392cea0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1ec73925148 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1ec7392d048 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1ec73925050 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1ec73925390 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1ec73925220 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ec73925298 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1ec73925540 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1ec73925468 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1ec739256e8 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1ec73925610 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1ec73925898 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ec739257b8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1ec73925a48 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ec73925968 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1ec73925dc0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1ec73925b20 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1ec73925b98 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec73925c10 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ec73925c88 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1ec7392a270 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1ec73925eb0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1ec73925f28 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec73925fa0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec7392a0a0 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ec7392a118 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1ec7392a580 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1ec7392a360 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ec7392a3e0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1ec7392a460 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1ec7392a740 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1ec7392a660 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1ec7392aa30 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1ec7392a810 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1ec7392a890 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1ec7392a910 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1ec7392abf0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1ec7392ab10 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1ec7392af68 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1ec7392acc8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1ec7392ad40 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ec7392adb8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ec7392ae30 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1ec739261d8 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ec73926060 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1ec739260d8 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1ec73926510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1ec73926390 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1ec73926410 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1ec739265c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1ec73926878 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1ec73926918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1ec73926c58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1ec73926ae0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1ec73926b60 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1ec73926d08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1ec7392d0d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1ec7392d170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1ec7392d410 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1ec7392d330 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1ec7392d4b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1ec7392d738 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1ec7392d7d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1ec7392da80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1ec7392d9a0 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1ec7392db28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1ec7392de08 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1ec7392dd28 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1ec7392deb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1ec739281f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ec73928080 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1ec739280f8 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1ec739282a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1ec73928568 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1ec73928608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x1ec73928840 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:49:9, col:58> col:40 __pctype_func 'const unsigned short *(void) __attribute__((cdecl))':'const unsigned short *(void)'
|-VarDecl 0x1ec73928910 <line:51:9, col:38> col:38 _pctype 'const unsigned short *' extern
|-VarDecl 0x1ec73928a10 <line:62:9, col:45> col:37 _wctype 'const unsigned short []' extern
|-FunctionDecl 0x1ec73928c08 <line:73:9, col:53> col:34 __pwctype_func 'const wctype_t *(void) __attribute__((cdecl))':'const wctype_t *(void)'
|-VarDecl 0x1ec73928cd0 <line:75:9, col:32> col:32 _pwctype 'const wctype_t *' extern
|-FunctionDecl 0x1ec73928f50 <line:119:24, col:72> col:36 _isctype 'int (int, int) __attribute__((cdecl))':'int (int, int)'
| |-ParmVarDecl 0x1ec73928d68 <col:50, col:54> col:54 _C 'int'
| `-ParmVarDecl 0x1ec73928de8 <col:63, col:67> col:67 _Type 'int'
|-FunctionDecl 0x1ec7392f3c8 <line:120:24, col:102> col:36 _isctype_l 'int (int, int, _locale_t) __attribute__((cdecl))':'int (int, int, _locale_t)'
| |-ParmVarDecl 0x1ec7392f0f0 <col:52, col:56> col:56 _C 'int'
| |-ParmVarDecl 0x1ec7392f170 <col:65, col:69> col:69 _Type 'int'
| `-ParmVarDecl 0x1ec7392f1e8 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec7392f590 <line:121:55> col:55 implicit isalpha 'int (int)' extern
| |-ParmVarDecl 0x1ec7392f630 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ec7392f6a0 <col:55> Implicit
| `-PureAttr 0x1ec7392f6f8 <col:55> Implicit
|-FunctionDecl 0x1ec7392f720 prev 0x1ec7392f590 <col:43, col:74> col:55 isalpha 'int (int)'
| |-ParmVarDecl 0x1ec7392f4b0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ec7392f810 <col:55> Inherited Implicit
| `-PureAttr 0x1ec7392f838 <col:55> Inherited Implicit
|-FunctionDecl 0x1ec7392faa0 <line:122:24, col:86> col:36 _isalpha_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ec7392f878 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ec7392f8f0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec7392fc60 <line:123:55> col:55 implicit isupper 'int (int)' extern
| |-ParmVarDecl 0x1ec7392fd00 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ec7392fd70 <col:55> Implicit
| `-PureAttr 0x1ec7392fdc8 <col:55> Implicit
|-FunctionDecl 0x1ec7392fdf0 prev 0x1ec7392fc60 <col:43, col:74> col:55 isupper 'int (int)'
| |-ParmVarDecl 0x1ec7392fb80 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ec7392fee0 <col:55> Inherited Implicit
| `-PureAttr 0x1ec7392ff08 <col:55> Inherited Implicit
|-FunctionDecl 0x1ec73929090 <line:124:24, col:86> col:36 _isupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ec7392ff48 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ec7392ffc0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec73929250 <line:125:55> col:55 implicit islower 'int (int)' extern
| |-ParmVarDecl 0x1ec739292f0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ec73929360 <col:55> Implicit
| `-PureAttr 0x1ec739293b8 <col:55> Implicit
|-FunctionDecl 0x1ec739293e0 prev 0x1ec73929250 <col:43, col:74> col:55 islower 'int (int)'
| |-ParmVarDecl 0x1ec73929170 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ec739294d0 <col:55> Inherited Implicit
| `-PureAttr 0x1ec739294f8 <col:55> Inherited Implicit
|-FunctionDecl 0x1ec739296b0 <line:126:24, col:86> col:36 _islower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ec73929538 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ec739295b0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec73929870 <line:127:55> col:55 implicit used isdigit 'int (int)' extern
| |-ParmVarDecl 0x1ec73929910 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ec73929980 <col:55> Implicit
| `-PureAttr 0x1ec739299d8 <col:55> Implicit
|-FunctionDecl 0x1ec73929a00 prev 0x1ec73929870 <col:43, col:74> col:55 used isdigit 'int (int)'
| |-ParmVarDecl 0x1ec73929790 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ec73929af0 <col:55> Inherited Implicit
| `-PureAttr 0x1ec73929b18 <col:55> Inherited Implicit
|-FunctionDecl 0x1ec73929cd0 <line:128:24, col:86> col:36 _isdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ec73929b58 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ec73929bd0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec73929e90 <line:129:36> col:36 implicit used isxdigit 'int (int)' extern
| |-ParmVarDecl 0x1ec73929f30 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ec73929fa0 <col:36> Implicit
| `-PureAttr 0x1ec73929ff8 <col:36> Implicit
|-FunctionDecl 0x1ec73931110 prev 0x1ec73929e90 <col:24, col:56> col:36 used isxdigit 'int (int)'
| |-ParmVarDecl 0x1ec73929db0 <col:50, col:54> col:54 _C 'int'
| |-NoThrowAttr 0x1ec73931200 <col:36> Inherited Implicit
| `-PureAttr 0x1ec73931228 <col:36> Inherited Implicit
|-FunctionDecl 0x1ec739313e0 <line:130:24, col:87> col:36 _isxdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ec73931268 <col:53, col:57> col:57 _C 'int'
| `-ParmVarDecl 0x1ec739312e0 <col:70, col:80> col:80 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec739315a0 <line:131:55> col:55 implicit isspace 'int (int)' extern
| |-ParmVarDecl 0x1ec73931640 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ec739316b0 <col:55> Implicit
| `-PureAttr 0x1ec73931708 <col:55> Implicit
|-FunctionDecl 0x1ec73931730 prev 0x1ec739315a0 <col:43, col:74> col:55 isspace 'int (int)'
| |-ParmVarDecl 0x1ec739314c0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ec73931820 <col:55> Inherited Implicit
| `-PureAttr 0x1ec73931848 <col:55> Inherited Implicit
|-FunctionDecl 0x1ec73931a00 <line:132:24, col:86> col:36 _isspace_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ec73931888 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ec73931900 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec73931bc0 <line:133:36> col:36 implicit ispunct 'int (int)' extern
| |-ParmVarDecl 0x1ec73931c60 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ec73931cd0 <col:36> Implicit
| `-PureAttr 0x1ec73931d28 <col:36> Implicit
|-FunctionDecl 0x1ec73931d50 prev 0x1ec73931bc0 <col:24, col:55> col:36 ispunct 'int (int)'
| |-ParmVarDecl 0x1ec73931ae0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1ec73931e40 <col:36> Inherited Implicit
| `-PureAttr 0x1ec73931e68 <col:36> Inherited Implicit
|-FunctionDecl 0x1ec73932020 <line:134:24, col:86> col:36 _ispunct_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ec73931ea8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ec73931f20 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec7393c6f0 <line:135:36> col:36 implicit isblank 'int (int)' extern
| |-ParmVarDecl 0x1ec7393c790 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ec7393c800 <col:36> Implicit
| `-PureAttr 0x1ec7393c858 <col:36> Implicit
|-FunctionDecl 0x1ec7393c880 prev 0x1ec7393c6f0 <col:24, col:55> col:36 isblank 'int (int)'
| |-ParmVarDecl 0x1ec7393c610 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1ec7393c970 <col:36> Inherited Implicit
| `-PureAttr 0x1ec7393c998 <col:36> Inherited Implicit
|-FunctionDecl 0x1ec7393cb50 <line:136:24, col:86> col:36 _isblank_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ec7393c9d8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ec7393ca50 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec7393cd10 <line:137:55> col:55 implicit isalnum 'int (int)' extern
| |-ParmVarDecl 0x1ec7393cdb0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ec7393ce20 <col:55> Implicit
| `-PureAttr 0x1ec7393ce78 <col:55> Implicit
|-FunctionDecl 0x1ec7393cea0 prev 0x1ec7393cd10 <col:43, col:74> col:55 isalnum 'int (int)'
| |-ParmVarDecl 0x1ec7393cc30 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ec7393cf90 <col:55> Inherited Implicit
| `-PureAttr 0x1ec7393cfb8 <col:55> Inherited Implicit
|-FunctionDecl 0x1ec7393d170 <line:138:24, col:86> col:36 _isalnum_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ec7393cff8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ec7393d070 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec7393d330 <line:139:36> col:36 implicit isprint 'int (int)' extern
| |-ParmVarDecl 0x1ec7393d3d0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ec7393d440 <col:36> Implicit
| `-PureAttr 0x1ec7393d498 <col:36> Implicit
|-FunctionDecl 0x1ec7393d4c0 prev 0x1ec7393d330 <col:24, col:55> col:36 isprint 'int (int)'
| |-ParmVarDecl 0x1ec7393d250 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1ec7393d5b0 <col:36> Inherited Implicit
| `-PureAttr 0x1ec7393d5d8 <col:36> Inherited Implicit
|-FunctionDecl 0x1ec73938760 <line:140:24, col:86> col:36 _isprint_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ec739385e8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ec73938660 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec73938920 <line:141:36> col:36 implicit isgraph 'int (int)' extern
| |-ParmVarDecl 0x1ec739389c0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ec73938a30 <col:36> Implicit
| `-PureAttr 0x1ec73938a88 <col:36> Implicit
|-FunctionDecl 0x1ec73938ab0 prev 0x1ec73938920 <col:24, col:55> col:36 isgraph 'int (int)'
| |-ParmVarDecl 0x1ec73938840 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1ec73938ba0 <col:36> Inherited Implicit
| `-PureAttr 0x1ec73938bc8 <col:36> Inherited Implicit
|-FunctionDecl 0x1ec73938d80 <line:142:24, col:86> col:36 _isgraph_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ec73938c08 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ec73938c80 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec73938f40 <line:143:36> col:36 implicit iscntrl 'int (int)' extern
| |-ParmVarDecl 0x1ec73938fe0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ec73939050 <col:36> Implicit
| `-PureAttr 0x1ec739390a8 <col:36> Implicit
|-FunctionDecl 0x1ec739390d0 prev 0x1ec73938f40 <col:24, col:55> col:36 iscntrl 'int (int)'
| |-ParmVarDecl 0x1ec73938e60 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1ec739391c0 <col:36> Inherited Implicit
| `-PureAttr 0x1ec739391e8 <col:36> Inherited Implicit
|-FunctionDecl 0x1ec739393a0 <line:144:24, col:86> col:36 _iscntrl_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ec73939228 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ec739392a0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec739395e0 <line:145:55> col:55 implicit toupper 'int (int)' extern
| |-ParmVarDecl 0x1ec73939680 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ec739396f0 <col:55> Implicit
| `-PureAttr 0x1ec73939748 <col:55> Implicit
|-FunctionDecl 0x1ec73939770 prev 0x1ec739395e0 <col:43, col:74> col:55 toupper 'int (int)'
| |-ParmVarDecl 0x1ec73939480 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ec73939860 <col:55> Inherited Implicit
| `-PureAttr 0x1ec73939888 <col:55> Inherited Implicit
|-FunctionDecl 0x1ec739399a8 <line:146:55> col:55 implicit tolower 'int (int)' extern
| |-ParmVarDecl 0x1ec73939a48 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ec73939ab8 <col:55> Implicit
| `-PureAttr 0x1ec73939b10 <col:55> Implicit
|-FunctionDecl 0x1ec73939b38 prev 0x1ec739399a8 <col:43, col:74> col:55 tolower 'int (int)'
| |-ParmVarDecl 0x1ec739398c8 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ec73939c28 <col:55> Inherited Implicit
| `-PureAttr 0x1ec73939c50 <col:55> Inherited Implicit
|-FunctionDecl 0x1ec73939d70 <line:147:43, col:75> col:55 _tolower 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ec73939c90 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x1ec73939fc0 <line:148:24, col:86> col:36 _tolower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ec73939e48 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ec73939ec0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec7393a180 <line:149:43, col:75> col:55 _toupper 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ec7393a0a0 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x1ec7393a3d0 <line:150:24, col:86> col:36 _toupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ec7393a258 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ec7393a2d0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec7393a5f0 <line:151:24, col:57> col:36 __isascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ec7393a4b0 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x1ec7393a7a8 <line:152:24, col:57> col:36 __toascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ec7393a6c8 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x1ec7393a960 <line:153:24, col:57> col:36 __iscsymf 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ec7393a880 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x1ec7393ab18 <line:154:24, col:56> col:36 __iscsym 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ec7393aa38 <col:50, col:54> col:54 _C 'int'
|-FunctionDecl 0x1ec7393ad68 <line:164:24, col:59> col:36 iswalpha 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ec7393abe8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ec7393b060 <line:165:24, col:90> col:36 _iswalpha_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ec7393ae38 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ec7393aeb0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec7393b218 <line:166:24, col:59> col:36 iswupper 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ec7393b138 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ec7393b460 <line:167:24, col:90> col:36 _iswupper_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ec7393b2e8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ec7393b360 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec7393b638 <line:168:24, col:59> col:36 iswlower 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ec7393b538 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ec7393b880 <line:169:24, col:90> col:36 _iswlower_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ec7393b708 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ec7393b780 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec7393ba38 <line:170:24, col:59> col:36 iswdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ec7393b958 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ec7393bc80 <line:171:24, col:90> col:36 _iswdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ec7393bb08 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ec7393bb80 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec7393be38 <line:172:24, col:60> col:36 iswxdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ec7393bd58 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ec7393c080 <line:173:24, col:91> col:36 _iswxdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ec7393bf08 <col:54, col:61> col:61 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ec7393bf80 <col:74, col:84> col:84 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec7393c238 <line:174:24, col:59> col:36 iswspace 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ec7393c158 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ec7393c480 <line:175:24, col:90> col:36 _iswspace_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ec7393c308 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ec7393c380 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec739355d8 <line:176:24, col:59> col:36 iswpunct 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ec7393c558 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ec73935820 <line:177:24, col:90> col:36 _iswpunct_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ec739356a8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ec73935720 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec739359d8 <line:178:24, col:59> col:36 iswblank 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ec739358f8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ec73935c20 <line:179:24, col:90> col:36 _iswblank_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ec73935aa8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ec73935b20 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec73935dd8 <line:180:24, col:59> col:36 iswalnum 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ec73935cf8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ec73936020 <line:181:24, col:90> col:36 _iswalnum_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ec73935ea8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ec73935f20 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec739361d8 <line:182:24, col:59> col:36 iswprint 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ec739360f8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ec73936420 <line:183:24, col:90> col:36 _iswprint_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ec739362a8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ec73936320 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec7393d658 <line:184:24, col:59> col:36 iswgraph 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ec739364f8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ec7393d8a0 <line:185:24, col:90> col:36 _iswgraph_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ec7393d728 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ec7393d7a0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec7393da58 <line:186:24, col:59> col:36 iswcntrl 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ec7393d978 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ec7393dca0 <line:187:24, col:90> col:36 _iswcntrl_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ec7393db28 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ec7393dba0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec7393de58 <line:188:24, col:59> col:36 iswascii 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ec7393dd78 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ec7393e070 <line:190:24, col:62> col:39 towupper 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x1ec7393df28 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ec7393e358 <line:191:24, col:93> col:39 _towupper_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ec7393e140 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ec7393e1b8 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec7393e508 <line:192:24, col:62> col:39 towlower 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x1ec7393e430 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ec73936720 <line:193:24, col:93> col:39 _towlower_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ec739365b0 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ec73936628 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec73936a20 <line:194:24, col:80> col:36 iswctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x1ec739367f8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ec73936870 <col:66, col:75> col:75 _Type 'wctype_t':'unsigned short'
|-FunctionDecl 0x1ec73936dc8 <line:195:24, col:111> col:36 _iswctype_l 'int (wint_t, wctype_t, _locale_t) __attribute__((cdecl))':'int (wint_t, wctype_t, _locale_t)'
| |-ParmVarDecl 0x1ec73936af8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x1ec73936b70 <col:69, col:78> col:78 _Type 'wctype_t':'unsigned short'
| `-ParmVarDecl 0x1ec73936be8 <col:94, col:104> col:104 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec73936f88 <line:197:24, col:61> col:36 __iswcsymf 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ec73936ea8 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ec739371d0 <line:198:24, col:90> col:36 _iswcsymf_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ec73937058 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ec739370d0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec73937388 <line:199:24, col:60> col:36 __iswcsym 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ec739372a8 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ec739416a0 <line:200:24, col:89> col:36 _iswcsym_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ec73937458 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ec739374d0 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec73941860 <line:203:24, col:58> col:36 isleadbyte 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ec73941780 <col:52, col:56> col:56 _C 'int'
|-FunctionDecl 0x1ec73941ab0 <line:204:24, col:89> col:36 _isleadbyte_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ec73941938 <col:55, col:59> col:59 _C 'int'
| `-ParmVarDecl 0x1ec739419b0 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec73941dc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:205:90> col:45 is_wctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x1ec73941c48 <col:60, col:67> col:67 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x1ec73941cc0 <col:76, col:85> col:85 _Type 'wctype_t':'unsigned short'
| `-DeprecatedAttr 0x1ec73941e70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using iswctype instead. See online help for details." ""
|-VarDecl 0x1ec73941fb8 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:235:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x1ec73942108 <line:239:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ec73942338 <line:240:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x1ec739421d0 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ec7394f788 <.//openssl//file_jk/before\crypto\bn/bn_lcl.h:220:1, line:221:37> line:220:10 invalid bn_mul_add_words 'int (int *, const int *, int, int)'
| |-ParmVarDecl 0x1ec73942410 <col:27, col:37> col:37 invalid rp 'int *'
| |-ParmVarDecl 0x1ec73942490 <col:41, col:57> col:57 invalid ap 'const int *'
| |-ParmVarDecl 0x1ec73942510 <col:61, col:65> col:65 num 'int'
| `-ParmVarDecl 0x1ec73942590 <line:221:27, col:36> col:36 invalid w 'int'
|-FunctionDecl 0x1ec7394fa90 <line:222:1, col:76> col:10 invalid bn_mul_words 'int (int *, const int *, int, int)'
| |-ParmVarDecl 0x1ec7394f860 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x1ec7394f8e0 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x1ec7394f960 <col:57, col:61> col:61 num 'int'
| `-ParmVarDecl 0x1ec7394f9e0 <col:66, col:75> col:75 invalid w 'int'
|-FunctionDecl 0x1ec7394fd48 <line:223:1, col:60> col:6 invalid bn_sqr_words 'void (int *, const int *, int)'
| |-ParmVarDecl 0x1ec7394fb68 <col:19, col:29> col:29 invalid rp 'int *'
| |-ParmVarDecl 0x1ec7394fbe8 <col:33, col:49> col:49 invalid ap 'const int *'
| `-ParmVarDecl 0x1ec7394fc68 <col:53, col:57> col:57 num 'int'
|-FunctionDecl 0x1ec73950000 <line:224:1, col:57> col:10 invalid bn_div_words 'int (int, int, int)'
| |-ParmVarDecl 0x1ec7394fe18 <col:23, col:32> col:32 invalid h 'int'
| |-ParmVarDecl 0x1ec7394fe98 <col:35, col:44> col:44 invalid l 'int'
| `-ParmVarDecl 0x1ec7394ff18 <col:47, col:56> col:56 invalid d 'int'
|-FunctionDecl 0x1ec73950350 <line:225:1, line:226:30> line:225:10 invalid bn_add_words 'int (int *, const int *, const int *, int)'
| |-ParmVarDecl 0x1ec739500d0 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x1ec73950150 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x1ec739501d0 <col:57, col:73> col:73 invalid bp 'const int *'
| `-ParmVarDecl 0x1ec73950250 <line:226:23, col:27> col:27 num 'int'
|-FunctionDecl 0x1ec73950658 <line:227:1, line:228:30> line:227:10 invalid bn_sub_words 'int (int *, const int *, const int *, int)'
| |-ParmVarDecl 0x1ec73950428 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x1ec739504a8 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x1ec73950528 <col:57, col:73> col:73 invalid bp 'const int *'
| `-ParmVarDecl 0x1ec739505a8 <line:228:23, col:27> col:27 num 'int'
|-RecordDecl 0x1ec739486d0 <line:230:1, line:238:1> line:230:8 invalid struct bignum_st definition
| |-FieldDecl 0x1ec739487a8 <line:231:5, col:15> col:15 invalid d 'int *'
| |-FieldDecl 0x1ec73948818 <line:233:5, col:9> col:9 top 'int'
| |-FieldDecl 0x1ec73948888 <line:235:5, col:9> col:9 dmax 'int'
| |-FieldDecl 0x1ec739488f8 <line:236:5, col:9> col:9 neg 'int'
| `-FieldDecl 0x1ec73948968 <line:237:5, col:9> col:9 flags 'int'
|-RecordDecl 0x1ec739489c0 <line:241:1, line:252:1> line:241:8 invalid struct bn_mont_ctx_st definition
| |-FieldDecl 0x1ec73948a98 <line:242:5, col:9> col:9 ri 'int'
| |-FieldDecl 0x1ec73948b08 <line:243:5, col:12> col:12 invalid RR 'int'
| |-FieldDecl 0x1ec73948b78 <line:245:5, col:12> col:12 invalid N 'int'
| |-FieldDecl 0x1ec73948be8 <line:246:5, col:12> col:12 invalid Ni 'int'
| |-FieldDecl 0x1ec73948ce0 <line:248:5, <invalid sloc>> col:14 invalid n0 'int [2]'
| `-FieldDecl 0x1ec73948d50 <line:251:5, col:9> col:9 flags 'int'
|-RecordDecl 0x1ec73948da8 <line:258:1, line:264:1> line:258:8 invalid struct bn_recp_ctx_st definition
| |-FieldDecl 0x1ec73948e78 <line:259:5, col:12> col:12 invalid N 'int'
| |-FieldDecl 0x1ec73948ee8 <line:260:5, col:12> col:12 invalid Nr 'int'
| |-FieldDecl 0x1ec73948f58 <line:261:5, col:9> col:9 num_bits 'int'
| |-FieldDecl 0x1ec73948fc8 <line:262:5, col:9> col:9 shift 'int'
| `-FieldDecl 0x1ec73949038 <line:263:5, col:9> col:9 flags 'int'
|-RecordDecl 0x1ec73949090 <line:267:1, line:276:1> line:267:8 struct bn_gencb_st definition
| |-FieldDecl 0x1ec73949168 <line:268:5, col:18> col:18 ver 'unsigned int'
| |-FieldDecl 0x1ec739491d8 <line:269:5, col:11> col:11 arg 'void *'
| |-RecordDecl 0x1ec73949230 <line:270:5, line:275:5> line:270:5 union definition
| | |-FieldDecl 0x1ec73949580 <line:272:9, col:39> col:16 cb_1 'void (*)(int, int, void *)'
| | `-FieldDecl 0x1ec7394b908 <line:274:9, col:42> col:15 cb_2 'int (*)(int, int, int *)'
| `-FieldDecl 0x1ec7394b9b8 <line:270:5, line:275:7> col:7 cb 'union (anonymous union at .//openssl//file_jk/before\crypto\bn/bn_lcl.h:270:5)':'union bn_gencb_st::(anonymous at .//openssl//file_jk/before\crypto\bn/bn_lcl.h:270:5)'
|-FunctionDecl 0x1ec7394bb48 <line:649:1, col:40> col:6 invalid BN_RECP_CTX_init 'void (int *)'
| `-ParmVarDecl 0x1ec7394ba88 <col:23, col:36> col:36 invalid recp 'int *'
|-FunctionDecl 0x1ec7394bc98 <line:650:1, col:39> col:6 invalid BN_MONT_CTX_init 'void (int *)'
| `-ParmVarDecl 0x1ec7394bc08 <col:23, col:36> col:36 invalid ctx 'int *'
|-FunctionDecl 0x1ec7394bde8 <line:652:1, col:23> col:6 invalid bn_init 'void (int *)'
| `-ParmVarDecl 0x1ec7394bd58 <col:14, col:22> col:22 invalid a 'int *'
|-FunctionDecl 0x1ec7394c1a8 <line:653:1, col:73> col:6 invalid bn_mul_normal 'void (int *, int *, int, int *, int)'
| |-ParmVarDecl 0x1ec7394bea8 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1ec7394bf28 <col:33, col:43> col:43 invalid a 'int *'
| |-ParmVarDecl 0x1ec7394bfa8 <col:46, col:50> col:50 na 'int'
| |-ParmVarDecl 0x1ec7394c028 <col:54, col:64> col:64 invalid b 'int *'
| `-ParmVarDecl 0x1ec7394c0a8 <col:67, col:71> col:71 nb 'int'
|-FunctionDecl 0x1ec7394c468 <line:654:1, col:57> col:6 invalid bn_mul_comba8 'void (int *, int *, int *)'
| |-ParmVarDecl 0x1ec7394c288 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1ec7394c308 <col:33, col:43> col:43 invalid a 'int *'
| `-ParmVarDecl 0x1ec7394c388 <col:46, col:56> col:56 invalid b 'int *'
|-FunctionDecl 0x1ec73954790 <line:655:1, col:57> col:6 invalid bn_mul_comba4 'void (int *, int *, int *)'
| |-ParmVarDecl 0x1ec7394c538 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1ec7394c5b8 <col:33, col:43> col:43 invalid a 'int *'
| `-ParmVarDecl 0x1ec7394c638 <col:46, col:56> col:56 invalid b 'int *'
|-FunctionDecl 0x1ec73954ad8 <line:656:1, col:72> col:6 invalid bn_sqr_normal 'void (int *, const int *, int, int *)'
| |-ParmVarDecl 0x1ec73954860 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1ec739548e0 <col:33, col:49> col:49 invalid a 'const int *'
| |-ParmVarDecl 0x1ec73954960 <col:52, col:56> col:56 n 'int'
| `-ParmVarDecl 0x1ec739549e0 <col:59, col:69> col:69 invalid tmp 'int *'
|-FunctionDecl 0x1ec73954d08 <line:657:1, col:50> col:6 invalid bn_sqr_comba8 'void (int *, const int *)'
| |-ParmVarDecl 0x1ec73954bb0 <col:20, col:30> col:30 invalid r 'int *'
| `-ParmVarDecl 0x1ec73954c30 <col:33, col:49> col:49 invalid a 'const int *'
|-FunctionDecl 0x1ec73954ee8 <line:658:1, col:50> col:6 invalid bn_sqr_comba4 'void (int *, const int *)'
| |-ParmVarDecl 0x1ec73954dd0 <col:20, col:30> col:30 invalid r 'int *'
| `-ParmVarDecl 0x1ec73954e50 <col:33, col:49> col:49 invalid a 'const int *'
|-FunctionDecl 0x1ec739551a0 <line:659:1, col:61> col:5 invalid bn_cmp_words 'int (const int *, const int *, int)'
| |-ParmVarDecl 0x1ec73954fb0 <col:18, col:34> col:34 invalid a 'const int *'
| |-ParmVarDecl 0x1ec73955030 <col:37, col:53> col:53 invalid b 'const int *'
| `-ParmVarDecl 0x1ec739550b0 <col:56, col:60> col:60 n 'int'
|-FunctionDecl 0x1ec739554f0 <line:660:1, col:75> col:5 invalid bn_cmp_part_words 'int (const int *, const int *, int, int)'
| |-ParmVarDecl 0x1ec73955270 <col:23, col:39> col:39 invalid a 'const int *'
| |-ParmVarDecl 0x1ec739552f0 <col:42, col:58> col:58 invalid b 'const int *'
| |-ParmVarDecl 0x1ec73955370 <col:61, col:65> col:65 cl 'int'
| `-ParmVarDecl 0x1ec739553f0 <col:69, col:73> col:73 dl 'int'
|-FunctionDecl 0x1ec73956a58 <line:661:1, line:662:52> line:661:6 invalid bn_mul_recursive 'void (int *, int *, int *, int, int, int, int *)'
| |-ParmVarDecl 0x1ec739555c8 <col:23, col:33> col:33 invalid r 'int *'
| |-ParmVarDecl 0x1ec73955648 <col:36, col:46> col:46 invalid a 'int *'
| |-ParmVarDecl 0x1ec739556c8 <col:49, col:59> col:59 invalid b 'int *'
| |-ParmVarDecl 0x1ec739567b0 <col:62, col:66> col:66 n2 'int'
| |-ParmVarDecl 0x1ec73956830 <line:662:23, col:27> col:27 dna 'int'
| |-ParmVarDecl 0x1ec739568b0 <col:32, col:36> col:36 dnb 'int'
| `-ParmVarDecl 0x1ec73956930 <col:41, col:51> col:51 invalid t 'int *'
|-FunctionDecl 0x1ec73956f08 <line:663:1, line:664:64> line:663:6 invalid bn_mul_part_recursive 'void (int *, int *, int *, int, int, int, int *)'
| |-ParmVarDecl 0x1ec73956b48 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x1ec73956bc8 <col:41, col:51> col:51 invalid a 'int *'
| |-ParmVarDecl 0x1ec73956c48 <col:54, col:64> col:64 invalid b 'int *'
| |-ParmVarDecl 0x1ec73956cc8 <line:664:28, col:32> col:32 n 'int'
| |-ParmVarDecl 0x1ec73956d48 <col:35, col:39> col:39 tna 'int'
| |-ParmVarDecl 0x1ec73956dc8 <col:44, col:48> col:48 tnb 'int'
| `-ParmVarDecl 0x1ec73956e48 <col:53, col:63> col:63 invalid t 'int *'
|-FunctionDecl 0x1ec73957220 <line:665:1, col:74> col:6 invalid bn_sqr_recursive 'void (int *, const int *, int, int *)'
| |-ParmVarDecl 0x1ec73956ff8 <col:23, col:33> col:33 invalid r 'int *'
| |-ParmVarDecl 0x1ec73957078 <col:36, col:52> col:52 invalid a 'const int *'
| |-ParmVarDecl 0x1ec739570f8 <col:55, col:59> col:59 n2 'int'
| `-ParmVarDecl 0x1ec73957178 <col:63, col:73> col:73 invalid t 'int *'
|-FunctionDecl 0x1ec73957568 <line:666:1, col:68> col:6 invalid bn_mul_low_normal 'void (int *, int *, int *, int)'
| |-ParmVarDecl 0x1ec739572f8 <col:24, col:34> col:34 invalid r 'int *'
| |-ParmVarDecl 0x1ec73957378 <col:37, col:47> col:47 invalid a 'int *'
| |-ParmVarDecl 0x1ec739573f8 <col:50, col:60> col:60 invalid b 'int *'
| `-ParmVarDecl 0x1ec73957478 <col:63, col:67> col:67 n 'int'
|-FunctionDecl 0x1ec73953918 <line:667:1, line:668:38> line:667:6 invalid bn_mul_low_recursive 'void (int *, int *, int *, int, int *)'
| |-ParmVarDecl 0x1ec73957640 <col:27, col:37> col:37 invalid r 'int *'
| |-ParmVarDecl 0x1ec739576c0 <col:40, col:50> col:50 invalid a 'int *'
| |-ParmVarDecl 0x1ec73957740 <col:53, col:63> col:63 invalid b 'int *'
| |-ParmVarDecl 0x1ec73953798 <col:66, col:70> col:70 n2 'int'
| `-ParmVarDecl 0x1ec73953818 <line:668:27, col:37> col:37 invalid t 'int *'
|-FunctionDecl 0x1ec73953d88 <line:669:1, line:670:29> line:669:6 invalid bn_mul_high 'void (int *, int *, int *, int *, int, int *)'
| |-ParmVarDecl 0x1ec739539f8 <col:18, col:28> col:28 invalid r 'int *'
| |-ParmVarDecl 0x1ec73953a78 <col:31, col:41> col:41 invalid a 'int *'
| |-ParmVarDecl 0x1ec73953af8 <col:44, col:54> col:54 invalid b 'int *'
| |-ParmVarDecl 0x1ec73953b78 <col:57, col:67> col:67 invalid l 'int *'
| |-ParmVarDecl 0x1ec73953bf8 <col:70, col:74> col:74 n2 'int'
| `-ParmVarDecl 0x1ec73953c78 <line:670:18, col:28> col:28 invalid t 'int *'
|-FunctionDecl 0x1ec73954180 <line:671:1, line:672:42> line:671:10 invalid bn_add_part_words 'int (int *, const int *, const int *, int, int)'
| |-ParmVarDecl 0x1ec73953e70 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x1ec73953ef0 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x1ec73953f70 <col:60, col:76> col:76 invalid b 'const int *'
| |-ParmVarDecl 0x1ec73953ff0 <line:672:28, col:32> col:32 cl 'int'
| `-ParmVarDecl 0x1ec73954070 <col:36, col:40> col:40 dl 'int'
|-FunctionDecl 0x1ec73954518 <line:673:1, line:674:42> line:673:10 invalid bn_sub_part_words 'int (int *, const int *, const int *, int, int)'
| |-ParmVarDecl 0x1ec73954260 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x1ec739542e0 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x1ec73954360 <col:60, col:76> col:76 invalid b 'const int *'
| |-ParmVarDecl 0x1ec739543e0 <line:674:28, col:32> col:32 cl 'int'
| `-ParmVarDecl 0x1ec73954460 <col:36, col:40> col:40 dl 'int'
|-FunctionDecl 0x1ec73952990 <line:675:1, line:676:64> line:675:5 invalid bn_mul_mont 'int (int *, const int *, const int *, const int *, const int *, int)'
| |-ParmVarDecl 0x1ec739545f8 <col:17, col:27> col:27 invalid rp 'int *'
| |-ParmVarDecl 0x1ec73954678 <col:31, col:47> col:47 invalid ap 'const int *'
| |-ParmVarDecl 0x1ec739546f8 <col:51, col:67> col:67 invalid bp 'const int *'
| |-ParmVarDecl 0x1ec73952770 <line:676:17, col:33> col:33 invalid np 'const int *'
| |-ParmVarDecl 0x1ec739527f0 <col:37, col:53> col:53 invalid n0 'const int *'
| `-ParmVarDecl 0x1ec73952870 <col:57, col:61> col:61 num 'int'
|-FunctionDecl 0x1ec73952d80 <line:678:1, line:680:38> line:678:9 invalid int_bn_mod_inverse 'int *(int *, const int *, const int *, int *, int *)'
| |-ParmVarDecl 0x1ec73952a78 <col:28, col:36> col:36 invalid in 'int *'
| |-ParmVarDecl 0x1ec73952af8 <line:679:28, col:42> col:42 invalid a 'const int *'
| |-ParmVarDecl 0x1ec73952b78 <col:45, col:59> col:59 invalid n 'const int *'
| |-ParmVarDecl 0x1ec73952bf8 <col:62, col:70> col:70 invalid ctx 'int *'
| `-ParmVarDecl 0x1ec73952c78 <line:680:28, col:33> col:33 noinv 'int *'
|-FunctionDecl 0x1ec73953170 <line:682:1, line:683:75> line:682:5 invalid bn_probable_prime_dh 'int (int *, int, const int *, const int *, int *)'
| |-ParmVarDecl 0x1ec73952e60 <col:26, col:34> col:34 invalid rnd 'int *'
| |-ParmVarDecl 0x1ec73952ee0 <col:39, col:43> col:43 bits 'int'
| |-ParmVarDecl 0x1ec73952f60 <line:683:26, col:40> col:40 invalid add 'const int *'
| |-ParmVarDecl 0x1ec73952fe0 <col:45, col:59> col:59 invalid rem 'const int *'
| `-ParmVarDecl 0x1ec73953060 <col:64, col:72> col:72 invalid ctx 'int *'
|-FunctionDecl 0x1ec73953440 <line:684:1, col:66> col:5 invalid bn_probable_prime_dh_retry 'int (int *, int, int *)'
| |-ParmVarDecl 0x1ec73953250 <col:32, col:40> col:40 invalid rnd 'int *'
| |-ParmVarDecl 0x1ec739532d0 <col:45, col:49> col:49 bits 'int'
| `-ParmVarDecl 0x1ec73953350 <col:55, col:63> col:63 invalid ctx 'int *'
|-FunctionDecl 0x1ec739536b8 <line:685:1, col:68> col:5 invalid bn_probable_prime_dh_coprime 'int (int *, int, int *)'
| |-ParmVarDecl 0x1ec73953510 <col:34, col:42> col:42 invalid rnd 'int *'
| |-ParmVarDecl 0x1ec73953590 <col:47, col:51> col:51 bits 'int'
| `-ParmVarDecl 0x1ec73953610 <col:57, col:65> col:65 invalid ctx 'int *'
|-VarDecl 0x1ec739557b8 <line:687:1, col:20> col:20 invalid BIGNUM 'int' static
|-FunctionDecl 0x1ec73955900 <.//openssl//file_jk/before\crypto\bn\bn_print.c:20:1, line:50:1> line:20:7 invalid BN_bn2hex 'char *(const int *)'
| |-ParmVarDecl 0x1ec73955838 <col:17, col:31> col:31 invalid a 'const int *'
| `-CompoundStmt 0x1ec7395bfb0 <line:21:1, line:50:1>
|   |-DeclStmt 0x1ec73955c10 <line:22:5, col:23>
|   | |-VarDecl 0x1ec739559d8 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x1ec73955a58 <col:5, col:12> col:12 used j 'int'
|   | |-VarDecl 0x1ec73955ad8 <col:5, col:15> col:15 used v 'int'
|   | `-VarDecl 0x1ec73955b58 <col:5, col:22> col:18 used z 'int' cinit
|   |   `-IntegerLiteral 0x1ec73955bc0 <col:22> 'int' 0
|   |-DeclStmt 0x1ec73955ca8 <line:23:5, col:14>
|   | `-VarDecl 0x1ec73955c40 <col:5, col:11> col:11 used buf 'char *'
|   |-DeclStmt 0x1ec73955d40 <line:24:5, col:12>
|   | `-VarDecl 0x1ec73955cd8 <col:5, col:11> col:11 used p 'char *'
|   |-IfStmt 0x1ec739560d0 <line:26:5, line:27:34>
|   | |-OpaqueValueExpr 0x1ec739560b8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1ec739560a8 <col:9, col:34>
|   |   `-ImplicitCastExpr 0x1ec73956090 <col:16, col:34> 'char *' <IntegralToPointer>
|   |     `-CallExpr 0x1ec73956050 <col:16, col:34> 'int'
|   |       |-ImplicitCastExpr 0x1ec73956038 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1ec73955f88 <col:16> 'int ()' Function 0x1ec73955ec0 'OPENSSL_strdup' 'int ()'
|   |       `-ImplicitCastExpr 0x1ec73956078 <col:31> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x1ec73955fe8 <col:31> 'char [2]' lvalue "0"
|   |-IfStmt 0x1ec73956508 <line:29:5, line:32:5>
|   | |-BinaryOperator 0x1ec73956358 <line:29:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1ec73956328 <.//openssl//file_jk/before\crypto\bn\bn_print.c:29:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ec73956280 <col:9> 'char *' lvalue Var 0x1ec73955c40 'buf' 'char *'
|   | | `-ImplicitCastExpr 0x1ec73956340 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1ec73956308 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1ec739562e0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1ec739562a0 <col:26> 'int' 0
|   | `-CompoundStmt 0x1ec739564f0 <.//openssl//file_jk/before\crypto\bn\bn_print.c:29:22, line:32:5>
|   |   `-GotoStmt 0x1ec739564d8 <line:31:9, col:14> 'err' 0x1ec73956488
|   |-BinaryOperator 0x1ec73956590 <line:33:5, col:9> 'char *' '='
|   | |-DeclRefExpr 0x1ec73956520 <col:5> 'char *' lvalue Var 0x1ec73955cd8 'p' 'char *'
|   | `-ImplicitCastExpr 0x1ec73956578 <col:9> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1ec73956558 <col:9> 'char *' lvalue Var 0x1ec73955c40 'buf' 'char *'
|   |-IfStmt 0x1ec73956688 <line:34:5, line:35:18>
|   | |-OpaqueValueExpr 0x1ec73956670 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x1ec73956650 <col:9, col:18> 'char' '='
|   |   |-UnaryOperator 0x1ec73956608 <col:9, col:14> 'char' lvalue prefix '*' cannot overflow
|   |   | `-ParenExpr 0x1ec739565e8 <col:10, col:14> 'char *'
|   |   |   `-UnaryOperator 0x1ec739565d0 <col:11, col:12> 'char *' postfix '++'
|   |   |     `-DeclRefExpr 0x1ec739565b0 <col:11> 'char *' lvalue Var 0x1ec73955cd8 'p' 'char *'
|   |   `-ImplicitCastExpr 0x1ec73956638 <col:18> 'char' <IntegralCast>
|   |     `-CharacterLiteral 0x1ec73956620 <col:18> 'int' 45
|   |-ForStmt 0x1ec7395be58 <line:36:5, line:46:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1ec73956760 <line:36:26, col:31> 'int' '>='
|   | | |-ImplicitCastExpr 0x1ec73956748 <col:26> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ec73956700 <col:26> 'int' lvalue Var 0x1ec739559d8 'i' 'int'
|   | | `-IntegerLiteral 0x1ec73956720 <col:31> 'int' 0
|   | |-UnaryOperator 0x1ec7395b800 <col:34, col:35> 'int' postfix '--'
|   | | `-DeclRefExpr 0x1ec73956780 <col:34> 'int' lvalue Var 0x1ec739559d8 'i' 'int'
|   | `-CompoundStmt 0x1ec7395be40 <col:39, line:46:5>
|   |   `-ForStmt 0x1ec7395be08 <line:37:9, line:45:9>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x1ec7395b8d8 <line:37:32, col:37> 'int' '>='
|   |     | |-ImplicitCastExpr 0x1ec7395b8c0 <col:32> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1ec7395b878 <col:32> 'int' lvalue Var 0x1ec73955a58 'j' 'int'
|   |     | `-IntegerLiteral 0x1ec7395b898 <col:37> 'int' 0
|   |     |-CompoundAssignOperator 0x1ec7395b940 <col:40, col:45> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     | |-DeclRefExpr 0x1ec7395b8f8 <col:40> 'int' lvalue Var 0x1ec73955a58 'j' 'int'
|   |     | `-IntegerLiteral 0x1ec7395b918 <col:45> 'int' 8
|   |     `-CompoundStmt 0x1ec7395bdf0 <col:48, line:45:9>
|   |       `-IfStmt 0x1ec7395bdd8 <line:40:13, line:44:13>
|   |         |-BinaryOperator 0x1ec7395bb58 <line:40:17, col:29> 'int' '||'
|   |         | |-ImplicitCastExpr 0x1ec7395bb40 <col:17> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x1ec7395ba68 <col:17> 'int' lvalue Var 0x1ec73955b58 'z' 'int'
|   |         | `-ParenExpr 0x1ec7395bb20 <col:22, col:29> 'int'
|   |         |   `-BinaryOperator 0x1ec7395bb00 <col:23, col:28> 'int' '!='
|   |         |     |-ImplicitCastExpr 0x1ec7395bae8 <col:23> 'int' <LValueToRValue>
|   |         |     | `-DeclRefExpr 0x1ec7395baa0 <col:23> 'int' lvalue Var 0x1ec73955ad8 'v' 'int'
|   |         |     `-IntegerLiteral 0x1ec7395bac0 <col:28> 'int' 0
|   |         `-CompoundStmt 0x1ec7395bdc0 <col:32, line:44:13>
|   |           `-BinaryOperator 0x1ec7395bda0 <line:43:17, col:21> 'int' '='
|   |             |-DeclRefExpr 0x1ec7395bd58 <col:17> 'int' lvalue Var 0x1ec73955b58 'z' 'int'
|   |             `-IntegerLiteral 0x1ec7395bd78 <col:21> 'int' 1
|   |-BinaryOperator 0x1ec7395bf10 <line:47:5, col:10> 'char' '='
|   | |-UnaryOperator 0x1ec7395bec8 <col:5, col:6> 'char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1ec7395beb0 <col:6> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ec7395be90 <col:6> 'char *' lvalue Var 0x1ec73955cd8 'p' 'char *'
|   | `-ImplicitCastExpr 0x1ec7395bef8 <col:10> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x1ec7395bee0 <col:10> 'int' 0
|   `-LabelStmt 0x1ec7395bf98 <line:48:2, line:49:16> 'err'
|     `-ReturnStmt 0x1ec7395bf88 <col:5, col:16>
|       `-ImplicitCastExpr 0x1ec7395bf70 <col:12, col:16> 'char *' <LValueToRValue>
|         `-ParenExpr 0x1ec7395bf50 <col:12, col:16> 'char *' lvalue
|           `-DeclRefExpr 0x1ec7395bf30 <col:13> 'char *' lvalue Var 0x1ec73955c40 'buf' 'char *'
|-FunctionDecl 0x1ec7395c0c0 <line:53:1, line:122:1> line:53:7 invalid BN_bn2dec 'char *(const int *)'
| |-ParmVarDecl 0x1ec7395c028 <col:17, col:31> col:31 invalid a 'const int *'
| `-CompoundStmt 0x1ec7395a370 <line:54:1, line:122:1>
|   |-DeclStmt 0x1ec7395c370 <line:55:5, col:27>
|   | |-VarDecl 0x1ec7395c198 <col:5, col:13> col:9 used i 'int' cinit
|   | | `-IntegerLiteral 0x1ec7395c200 <col:13> 'int' 0
|   | |-VarDecl 0x1ec7395c240 <col:5, col:16> col:16 used num 'int'
|   | `-VarDecl 0x1ec7395c2c0 <col:5, col:26> col:21 used ok 'int' cinit
|   |   `-IntegerLiteral 0x1ec7395c328 <col:26> 'int' 0
|   |-DeclStmt 0x1ec7395c4a8 <line:56:5, col:21>
|   | `-VarDecl 0x1ec7395c3a0 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/before\crypto\bn\bn_print.c:56:11 used buf 'char *' cinit
|   |   `-ImplicitCastExpr 0x1ec7395c490 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1ec7395c470 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1ec7395c448 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1ec7395c408 <col:26> 'int' 0
|   |-DeclStmt 0x1ec7395c540 <.//openssl//file_jk/before\crypto\bn\bn_print.c:57:5, col:12>
|   | `-VarDecl 0x1ec7395c4d8 <col:5, col:11> col:11 used p 'char *'
|   |-DeclStmt 0x1ec7395c6e8 <line:60:5, col:20>
|   | `-VarDecl 0x1ec7395c680 <col:5, col:9> col:9 used bn_data_num 'int'
|   |-BinaryOperator 0x1ec73957a38 <line:69:5, col:37> 'int' '='
|   | |-DeclRefExpr 0x1ec73957830 <col:5> 'int' lvalue Var 0x1ec7395c240 'num' 'int'
|   | `-BinaryOperator 0x1ec73957a18 <col:11, col:37> 'int' '+'
|   |   |-ParenExpr 0x1ec739579d0 <col:11, col:33> 'int'
|   |   | `-BinaryOperator 0x1ec739579b0 <col:12, col:32> 'int' '+'
|   |   |   |-BinaryOperator 0x1ec73957968 <col:12, col:25> 'int' '+'
|   |   |   | |-BinaryOperator 0x1ec739578c8 <col:12, col:16> 'int' '/'
|   |   |   | | |-ImplicitCastExpr 0x1ec739578b0 <col:12> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x1ec73957868 <col:12> 'int' lvalue Var 0x1ec7395c198 'i' 'int'
|   |   |   | | `-IntegerLiteral 0x1ec73957888 <col:16> 'int' 10
|   |   |   | `-BinaryOperator 0x1ec73957948 <col:21, col:25> 'int' '/'
|   |   |   |   |-ImplicitCastExpr 0x1ec73957930 <col:21> 'int' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x1ec739578e8 <col:21> 'int' lvalue Var 0x1ec7395c198 'i' 'int'
|   |   |   |   `-IntegerLiteral 0x1ec73957908 <col:25> 'int' 1000
|   |   |   `-IntegerLiteral 0x1ec73957988 <col:32> 'int' 1
|   |   `-IntegerLiteral 0x1ec739579f0 <col:37> 'int' 1
|   |-BinaryOperator 0x1ec73957c48 <line:72:5, col:33> 'char *' '='
|   | |-DeclRefExpr 0x1ec73957b18 <col:5> 'char *' lvalue Var 0x1ec7395c3a0 'buf' 'char *'
|   | `-ImplicitCastExpr 0x1ec73957c30 <col:11, col:33> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x1ec73957c08 <col:11, col:33> 'int'
|   |     |-ImplicitCastExpr 0x1ec73957bf0 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1ec73957b50 <col:11> 'int ()' Function 0x1ec73956148 'OPENSSL_malloc' 'int ()'
|   |     `-BinaryOperator 0x1ec73957bd0 <col:26, col:32> 'int' '+'
|   |       |-ImplicitCastExpr 0x1ec73957bb8 <col:26> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1ec73957b70 <col:26> 'int' lvalue Var 0x1ec7395c240 'num' 'int'
|   |       `-IntegerLiteral 0x1ec73957b90 <col:32> 'int' 3
|   |-IfStmt 0x1ec73957ec0 <line:73:5, line:76:5>
|   | |-OpaqueValueExpr 0x1ec73957ea8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ec73957e90 <line:73:45, line:76:5>
|   |   `-GotoStmt 0x1ec73957e78 <line:75:9, col:14> 'err' 0x1ec73957e28
|   |-IfStmt 0x1ec739580a0 <line:77:5, line:78:14>
|   | |-OpaqueValueExpr 0x1ec73958088 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1ec73958070 <col:9, col:14> 'err' 0x1ec73957e28
|   |-BinaryOperator 0x1ec73958128 <line:81:5, col:9> 'char *' '='
|   | |-DeclRefExpr 0x1ec739580b8 <col:5> 'char *' lvalue Var 0x1ec7395c4d8 'p' 'char *'
|   | `-ImplicitCastExpr 0x1ec73958110 <col:9> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1ec739580f0 <col:9> 'char *' lvalue Var 0x1ec7395c3a0 'buf' 'char *'
|   |-IfStmt 0x1ec73959ea8 <line:83:5, line:113:5> has_else
|   | |-OpaqueValueExpr 0x1ec73959e90 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x1ec739582e8 <line:83:24, line:86:5>
|   | | |-BinaryOperator 0x1ec73958208 <line:84:9, col:18> 'char' '='
|   | | | |-UnaryOperator 0x1ec739581c0 <col:9, col:14> 'char' lvalue prefix '*' cannot overflow
|   | | | | `-ParenExpr 0x1ec739581a0 <col:10, col:14> 'char *'
|   | | | |   `-UnaryOperator 0x1ec73958188 <col:11, col:12> 'char *' postfix '++'
|   | | | |     `-DeclRefExpr 0x1ec73958168 <col:11> 'char *' lvalue Var 0x1ec7395c4d8 'p' 'char *'
|   | | | `-ImplicitCastExpr 0x1ec739581f0 <col:18> 'char' <IntegralCast>
|   | | |   `-CharacterLiteral 0x1ec739581d8 <col:18> 'int' 48
|   | | `-BinaryOperator 0x1ec739582c8 <line:85:9, col:18> 'char' '='
|   | |   |-UnaryOperator 0x1ec73958280 <col:9, col:14> 'char' lvalue prefix '*' cannot overflow
|   | |   | `-ParenExpr 0x1ec73958260 <col:10, col:14> 'char *'
|   | |   |   `-UnaryOperator 0x1ec73958248 <col:11, col:12> 'char *' postfix '++'
|   | |   |     `-DeclRefExpr 0x1ec73958228 <col:11> 'char *' lvalue Var 0x1ec7395c4d8 'p' 'char *'
|   | |   `-ImplicitCastExpr 0x1ec739582b0 <col:18> 'char' <IntegralCast>
|   | |     `-CharacterLiteral 0x1ec73958298 <col:18> 'int' 0
|   | `-CompoundStmt 0x1ec73959e70 <line:86:12, line:113:5>
|   |   |-IfStmt 0x1ec739584d0 <line:87:9, line:88:20>
|   |   | |-OpaqueValueExpr 0x1ec739584b8 <<invalid sloc>> '_Bool'
|   |   | `-BinaryOperator 0x1ec73958498 <col:13, col:20> 'char' '='
|   |   |   |-UnaryOperator 0x1ec73958450 <col:13, col:15> 'char' lvalue prefix '*' cannot overflow
|   |   |   | `-UnaryOperator 0x1ec73958438 <col:14, col:15> 'char *' postfix '++'
|   |   |   |   `-DeclRefExpr 0x1ec73958418 <col:14> 'char *' lvalue Var 0x1ec7395c4d8 'p' 'char *'
|   |   |   `-ImplicitCastExpr 0x1ec73958480 <col:20> 'char' <IntegralCast>
|   |   |     `-CharacterLiteral 0x1ec73958468 <col:20> 'int' 45
|   |   `-WhileStmt 0x1ec73959b68 <line:105:9, line:106:14>
|   |     |-ImplicitCastExpr 0x1ec73959b18 <line:105:16, col:17> 'char' <LValueToRValue>
|   |     | `-UnaryOperator 0x1ec73959b00 <col:16, col:17> 'char' lvalue prefix '*' cannot overflow
|   |     |   `-ImplicitCastExpr 0x1ec73959ae8 <col:17> 'char *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1ec73959ac8 <col:17> 'char *' lvalue Var 0x1ec7395c4d8 'p' 'char *'
|   |     `-UnaryOperator 0x1ec73959b50 <line:106:13, col:14> 'char *' postfix '++'
|   |       `-DeclRefExpr 0x1ec73959b30 <col:13> 'char *' lvalue Var 0x1ec7395c4d8 'p' 'char *'
|   |-BinaryOperator 0x1ec73959f30 <line:114:5, col:10> 'int' '='
|   | |-DeclRefExpr 0x1ec73959ed0 <col:5> 'int' lvalue Var 0x1ec7395c2c0 'ok' 'int'
|   | `-IntegerLiteral 0x1ec73959f08 <col:10> 'int' 1
|   |-LabelStmt 0x1ec7395a068 <line:115:2, col:5> 'err'
|   | `-NullStmt 0x1ec7395a060 <col:5>
|   |-IfStmt 0x1ec7395a210 <line:118:5, line:119:16>
|   | |-ImplicitCastExpr 0x1ec7395a1b0 <line:118:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ec7395a190 <col:9> 'int' lvalue Var 0x1ec7395c2c0 'ok' 'int'
|   | `-ReturnStmt 0x1ec7395a200 <line:119:9, col:16>
|   |   `-ImplicitCastExpr 0x1ec7395a1e8 <col:16> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ec7395a1c8 <col:16> 'char *' lvalue Var 0x1ec7395c3a0 'buf' 'char *'
|   |-CallExpr 0x1ec7395a280 <line:120:5, col:21> 'int'
|   | |-ImplicitCastExpr 0x1ec7395a268 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ec7395a228 <col:5> 'int ()' Function 0x1ec73959f78 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1ec7395a2a8 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1ec7395a248 <col:18> 'char *' lvalue Var 0x1ec7395c3a0 'buf' 'char *'
|   `-ReturnStmt 0x1ec7395a360 <line:121:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|     `-ImplicitCastExpr 0x1ec7395a348 <col:17, col:27> 'char *' <NullToPointer>
|       `-ParenExpr 0x1ec7395a328 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x1ec7395a300 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x1ec7395a2c0 <col:26> 'int' 0
|-FunctionDecl 0x1ec7395a5a0 <.//openssl//file_jk/before\crypto\bn\bn_print.c:124:1, line:195:1> line:124:5 invalid BN_hex2bn 'int (int **, const char *)'
| |-ParmVarDecl 0x1ec7395a448 <col:15, col:24> col:24 invalid bn 'int **'
| |-ParmVarDecl 0x1ec7395a4c8 <col:28, col:40> col:40 used a 'const char *'
| `-CompoundStmt 0x1ec7395db08 <line:125:1, line:195:1>
|   |-DeclStmt 0x1ec7395ab18 <line:128:5, col:34>
|   | |-VarDecl 0x1ec7395a708 <col:5, col:15> col:9 used neg 'int' cinit
|   | | `-IntegerLiteral 0x1ec7395a770 <col:15> 'int' 0
|   | |-VarDecl 0x1ec7395a7f0 <col:5, col:18> col:18 used h 'int'
|   | |-VarDecl 0x1ec7395a870 <col:5, col:21> col:21 used m 'int'
|   | |-VarDecl 0x1ec7395a8f0 <col:5, col:24> col:24 used i 'int'
|   | |-VarDecl 0x1ec7395a970 <col:5, col:27> col:27 used j 'int'
|   | |-VarDecl 0x1ec7395a9f0 <col:5, col:30> col:30 used k 'int'
|   | `-VarDecl 0x1ec7395aa70 <col:5, col:33> col:33 used c 'int'
|   |-DeclStmt 0x1ec7395abb0 <line:129:5, col:12>
|   | `-VarDecl 0x1ec7395ab48 <col:5, col:9> col:9 used num 'int'
|   |-IfStmt 0x1ec7395ae78 <line:131:5, line:132:18>
|   | |-BinaryOperator 0x1ec7395ae00 <line:131:9, col:35> 'int' '||'
|   | | |-ParenExpr 0x1ec7395acd8 <col:9, col:19> 'int'
|   | | | `-BinaryOperator 0x1ec7395acb8 <col:10, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x1ec7395ac88 <.//openssl//file_jk/before\crypto\bn\bn_print.c:131:10> 'const char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x1ec7395abc8 <col:10> 'const char *' lvalue ParmVar 0x1ec7395a4c8 'a' 'const char *'
|   | | |   `-ImplicitCastExpr 0x1ec7395aca0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |     `-ParenExpr 0x1ec7395ac68 <col:17, col:27> 'void *'
|   | | |       `-CStyleCastExpr 0x1ec7395ac40 <col:18, col:26> 'void *' <NullToPointer>
|   | | |         `-IntegerLiteral 0x1ec7395ac00 <col:26> 'int' 0
|   | | `-ParenExpr 0x1ec7395ade0 <.//openssl//file_jk/before\crypto\bn\bn_print.c:131:24, col:35> 'int'
|   | |   `-BinaryOperator 0x1ec7395adc0 <col:25, col:31> 'int' '=='
|   | |     |-ImplicitCastExpr 0x1ec7395ada8 <col:25, col:26> 'int' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x1ec7395ad90 <col:25, col:26> 'char' <LValueToRValue>
|   | |     |   `-UnaryOperator 0x1ec7395ad60 <col:25, col:26> 'const char' lvalue prefix '*' cannot overflow
|   | |     |     `-ImplicitCastExpr 0x1ec7395ad48 <col:26> 'const char *' <LValueToRValue>
|   | |     |       `-DeclRefExpr 0x1ec7395ad28 <col:26> 'const char *' lvalue ParmVar 0x1ec7395a4c8 'a' 'const char *'
|   | |     `-CharacterLiteral 0x1ec7395ad78 <col:31> 'int' 0
|   | `-ReturnStmt 0x1ec7395ae68 <line:132:9, col:18>
|   |   `-ParenExpr 0x1ec7395ae48 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1ec7395ae20 <col:17> 'int' 0
|   |-IfStmt 0x1ec7395b020 <line:134:5, line:137:5>
|   | |-BinaryOperator 0x1ec7395af28 <line:134:9, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x1ec7395af10 <col:9, col:10> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1ec7395aef8 <col:9, col:10> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x1ec7395aec8 <col:9, col:10> 'const char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x1ec7395aeb0 <col:10> 'const char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1ec7395ae90 <col:10> 'const char *' lvalue ParmVar 0x1ec7395a4c8 'a' 'const char *'
|   | | `-CharacterLiteral 0x1ec7395aee0 <col:15> 'int' 45
|   | `-CompoundStmt 0x1ec7395b000 <col:20, line:137:5>
|   |   |-BinaryOperator 0x1ec7395afa8 <line:135:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x1ec7395af48 <col:9> 'int' lvalue Var 0x1ec7395a708 'neg' 'int'
|   |   | `-IntegerLiteral 0x1ec7395af80 <col:15> 'int' 1
|   |   `-UnaryOperator 0x1ec7395afe8 <line:136:9, col:10> 'const char *' postfix '++'
|   |     `-DeclRefExpr 0x1ec7395afc8 <col:9> 'const char *' lvalue ParmVar 0x1ec7395a4c8 'a' 'const char *'
|   |-ForStmt 0x1ec7395b390 <line:139:5, line:140:9>
|   | |-BinaryOperator 0x1ec7395b098 <line:139:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x1ec7395b038 <col:10> 'int' lvalue Var 0x1ec7395a8f0 'i' 'int'
|   | | `-IntegerLiteral 0x1ec7395b070 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1ec7395b330 <col:17, col:65> 'int' '&&'
|   | | |-BinaryOperator 0x1ec7395b180 <col:17, col:32> 'int' '<='
|   | | | |-ImplicitCastExpr 0x1ec7395b168 <col:17> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1ec7395b0b8 <col:17> 'int' lvalue Var 0x1ec7395a8f0 'i' 'int'
|   | | | `-ParenExpr 0x1ec7395b148 <col:22, col:32> 'int'
|   | | |   `-BinaryOperator 0x1ec7395b128 <<built-in>:30:21, .//openssl//file_jk/before\crypto\bn\bn_print.c:139:31> 'int' '/'
|   | | |     |-IntegerLiteral 0x1ec7395b0d8 <<built-in>:30:21> 'int' 2147483647
|   | | |     `-IntegerLiteral 0x1ec7395b100 <.//openssl//file_jk/before\crypto\bn\bn_print.c:139:31> 'int' 4
|   | | `-CallExpr 0x1ec7395b2f0 <col:37, col:65> 'int'
|   | |   |-ImplicitCastExpr 0x1ec7395b2d8 <col:37> 'int (*)(int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1ec7395b1a0 <col:37> 'int (int)' Function 0x1ec73931110 'isxdigit' 'int (int)'
|   | |   `-ImplicitCastExpr 0x1ec7395b318 <col:46, col:64> 'int' <IntegralCast>
|   | |     `-CStyleCastExpr 0x1ec7395b280 <col:46, col:64> 'unsigned char' <IntegralCast>
|   | |       `-ImplicitCastExpr 0x1ec7395b268 <col:61, col:64> 'char' <LValueToRValue> part_of_explicit_cast
|   | |         `-ArraySubscriptExpr 0x1ec7395b230 <col:61, col:64> 'const char' lvalue
|   | |           |-ImplicitCastExpr 0x1ec7395b200 <col:61> 'const char *' <LValueToRValue>
|   | |           | `-DeclRefExpr 0x1ec7395b1c0 <col:61> 'const char *' lvalue ParmVar 0x1ec7395a4c8 'a' 'const char *'
|   | |           `-ImplicitCastExpr 0x1ec7395b218 <col:63> 'int' <LValueToRValue>
|   | |             `-DeclRefExpr 0x1ec7395b1e0 <col:63> 'int' lvalue Var 0x1ec7395a8f0 'i' 'int'
|   | |-UnaryOperator 0x1ec7395b370 <col:68, col:69> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1ec7395b350 <col:68> 'int' lvalue Var 0x1ec7395a8f0 'i' 'int'
|   | `-ContinueStmt 0x1ec7395b388 <line:140:9>
|   |-IfStmt 0x1ec7395b598 <line:142:5, line:143:14>
|   | |-BinaryOperator 0x1ec7395b510 <line:142:9, col:31> 'int' '||'
|   | | |-BinaryOperator 0x1ec7395b428 <col:9, col:14> 'int' '=='
|   | | | |-ImplicitCastExpr 0x1ec7395b410 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1ec7395b3c8 <col:9> 'int' lvalue Var 0x1ec7395a8f0 'i' 'int'
|   | | | `-IntegerLiteral 0x1ec7395b3e8 <col:14> 'int' 0
|   | | `-BinaryOperator 0x1ec7395b4f0 <col:19, col:31> 'int' '>'
|   | |   |-ImplicitCastExpr 0x1ec7395b4d8 <col:19> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1ec7395b448 <col:19> 'int' lvalue Var 0x1ec7395a8f0 'i' 'int'
|   | |   `-BinaryOperator 0x1ec7395b4b8 <<built-in>:30:21, .//openssl//file_jk/before\crypto\bn\bn_print.c:142:31> 'int' '/'
|   | |     |-IntegerLiteral 0x1ec7395b468 <<built-in>:30:21> 'int' 2147483647
|   | |     `-IntegerLiteral 0x1ec7395b490 <.//openssl//file_jk/before\crypto\bn\bn_print.c:142:31> 'int' 4
|   | `-GotoStmt 0x1ec7395b580 <line:143:9, col:14> 'err' 0x1ec7395b530
|   |-BinaryOperator 0x1ec7395b678 <line:145:5, col:15> 'int' '='
|   | |-DeclRefExpr 0x1ec7395b5b0 <col:5> 'int' lvalue Var 0x1ec7395ab48 'num' 'int'
|   | `-BinaryOperator 0x1ec7395b658 <col:11, col:15> 'int' '+'
|   |   |-ImplicitCastExpr 0x1ec7395b628 <col:11> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ec7395b5e8 <col:11> 'int' lvalue Var 0x1ec7395a8f0 'i' 'int'
|   |   `-ImplicitCastExpr 0x1ec7395b640 <col:15> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ec7395b608 <col:15> 'int' lvalue Var 0x1ec7395a708 'neg' 'int'
|   |-IfStmt 0x1ec7395b7a0 <line:146:5, line:147:20>
|   | |-OpaqueValueExpr 0x1ec7395b788 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1ec7395b778 <col:9, col:20>
|   |   `-ImplicitCastExpr 0x1ec7395b760 <col:16, col:20> 'int' <LValueToRValue>
|   |     `-ParenExpr 0x1ec7395b740 <col:16, col:20> 'int' lvalue
|   |       `-DeclRefExpr 0x1ec7395b720 <col:17> 'int' lvalue Var 0x1ec7395ab48 'num' 'int'
|   |-IfStmt 0x1ec7395cc18 <line:150:5, line:156:5> has_else
|   | |-OpaqueValueExpr 0x1ec7395cc00 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x1ec7395cac8 <line:150:22, line:153:5>
|   | | `-IfStmt 0x1ec7395cab0 <line:151:9, line:152:22>
|   | |   |-OpaqueValueExpr 0x1ec7395ca98 <<invalid sloc>> '_Bool'
|   | |   `-ReturnStmt 0x1ec7395ca88 <col:13, col:22>
|   | |     `-ParenExpr 0x1ec7395ca68 <col:20, col:22> 'int'
|   | |       `-IntegerLiteral 0x1ec7395ca40 <col:21> 'int' 0
|   | `-CompoundStmt 0x1ec7395cbf0 <line:153:12, line:156:5>
|   |-IfStmt 0x1ec7395ce88 <line:159:5, line:160:14>
|   | |-OpaqueValueExpr 0x1ec7395ce70 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1ec7395ce58 <col:9, col:14> 'err' 0x1ec7395b530
|   |-BinaryOperator 0x1ec7395cf10 <line:162:5, col:9> 'int' '='
|   | |-DeclRefExpr 0x1ec7395cea0 <col:5> 'int' lvalue Var 0x1ec7395a970 'j' 'int'
|   | `-ImplicitCastExpr 0x1ec7395cef8 <col:9> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1ec7395ced8 <col:9> 'int' lvalue Var 0x1ec7395a8f0 'i' 'int'
|   |-BinaryOperator 0x1ec7395cf90 <line:163:5, col:9> 'int' '='
|   | |-DeclRefExpr 0x1ec7395cf30 <col:5> 'int' lvalue Var 0x1ec7395a870 'm' 'int'
|   | `-IntegerLiteral 0x1ec7395cf68 <col:9> 'int' 0
|   |-BinaryOperator 0x1ec7395d010 <line:164:5, col:9> 'int' '='
|   | |-DeclRefExpr 0x1ec7395cfb0 <col:5> 'int' lvalue Var 0x1ec7395a7f0 'h' 'int'
|   | `-IntegerLiteral 0x1ec7395cfe8 <col:9> 'int' 0
|   |-WhileStmt 0x1ec7395d7d8 <line:165:5, line:181:5>
|   | |-BinaryOperator 0x1ec7395d090 <line:165:12, col:16> 'int' '>'
|   | | |-ImplicitCastExpr 0x1ec7395d078 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ec7395d030 <col:12> 'int' lvalue Var 0x1ec7395a970 'j' 'int'
|   | | `-IntegerLiteral 0x1ec7395d050 <col:16> 'int' 0
|   | `-CompoundStmt 0x1ec7395d7c0 <col:19, line:181:5>
|   |   `-ForStmt 0x1ec7395d740 <line:168:9, line:179:9>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     `-CompoundStmt 0x1ec7395d710 <line:168:18, line:179:9>
|   |       |-BinaryOperator 0x1ec7395d2d8 <line:169:13, col:24> 'int' '='
|   |       | |-DeclRefExpr 0x1ec7395d188 <col:13> 'int' lvalue Var 0x1ec7395aa70 'c' 'int'
|   |       | `-ImplicitCastExpr 0x1ec7395d2c0 <col:17, col:24> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x1ec7395d2a8 <col:17, col:24> 'char' <LValueToRValue>
|   |       |     `-ArraySubscriptExpr 0x1ec7395d288 <col:17, col:24> 'const char' lvalue
|   |       |       |-ImplicitCastExpr 0x1ec7395d270 <col:17> 'const char *' <LValueToRValue>
|   |       |       | `-DeclRefExpr 0x1ec7395d1c0 <col:17> 'const char *' lvalue ParmVar 0x1ec7395a4c8 'a' 'const char *'
|   |       |       `-BinaryOperator 0x1ec7395d250 <col:19, col:23> 'int' '-'
|   |       |         |-ImplicitCastExpr 0x1ec7395d220 <col:19> 'int' <LValueToRValue>
|   |       |         | `-DeclRefExpr 0x1ec7395d1e0 <col:19> 'int' lvalue Var 0x1ec7395a970 'j' 'int'
|   |       |         `-ImplicitCastExpr 0x1ec7395d238 <col:23> 'int' <LValueToRValue>
|   |       |           `-DeclRefExpr 0x1ec7395d200 <col:23> 'int' lvalue Var 0x1ec7395a870 'm' 'int'
|   |       |-BinaryOperator 0x1ec7395d4b8 <line:170:13, col:38> 'int' '='
|   |       | |-DeclRefExpr 0x1ec7395d2f8 <col:13> 'int' lvalue Var 0x1ec7395a9f0 'k' 'int'
|   |       | `-CallExpr 0x1ec7395d478 <col:17, col:38> 'int'
|   |       |   |-ImplicitCastExpr 0x1ec7395d460 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x1ec7395d420 <col:17> 'int ()' Function 0x1ec7395d358 'OPENSSL_hexchar2int' 'int ()'
|   |       |   `-ImplicitCastExpr 0x1ec7395d4a0 <col:37> 'int' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x1ec7395d440 <col:37> 'int' lvalue Var 0x1ec7395aa70 'c' 'int'
|   |       |-IfStmt 0x1ec7395d5c0 <line:171:13, line:172:21>
|   |       | |-BinaryOperator 0x1ec7395d538 <line:171:17, col:21> 'int' '<'
|   |       | | |-ImplicitCastExpr 0x1ec7395d520 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x1ec7395d4d8 <col:17> 'int' lvalue Var 0x1ec7395a9f0 'k' 'int'
|   |       | | `-IntegerLiteral 0x1ec7395d4f8 <col:21> 'int' 0
|   |       | `-BinaryOperator 0x1ec7395d5a0 <line:172:17, col:21> 'int' '='
|   |       |   |-DeclRefExpr 0x1ec7395d558 <col:17> 'int' lvalue Var 0x1ec7395a9f0 'k' 'int'
|   |       |   `-IntegerLiteral 0x1ec7395d578 <col:21> 'int' 0
|   |       `-IfStmt 0x1ec7395d6f8 <line:175:13, line:178:13>
|   |         |-BinaryOperator 0x1ec7395d680 <line:175:17, col:24> 'int' '<='
|   |         | |-UnaryOperator 0x1ec7395d640 <col:17, col:19> 'int' prefix '--'
|   |         | | `-DeclRefExpr 0x1ec7395d620 <col:19> 'int' lvalue Var 0x1ec7395a870 'm' 'int'
|   |         | `-IntegerLiteral 0x1ec7395d658 <col:24> 'int' 0
|   |         `-CompoundStmt 0x1ec7395d6e0 <col:27, line:178:13>
|   |           `-BreakStmt 0x1ec7395d6d8 <line:177:17>
|   |-NullStmt 0x1ec7395d930 <line:186:22>
|   |-ReturnStmt 0x1ec7395d9d8 <line:190:5, col:16>
|   | `-ImplicitCastExpr 0x1ec7395d9c0 <col:12, col:16> 'int' <LValueToRValue>
|   |   `-ParenExpr 0x1ec7395d9a0 <col:12, col:16> 'int' lvalue
|   |     `-DeclRefExpr 0x1ec7395d980 <col:13> 'int' lvalue Var 0x1ec7395ab48 'num' 'int'
|   |-LabelStmt 0x1ec7395da98 <line:191:2, col:5> 'err'
|   | `-NullStmt 0x1ec7395da90 <col:5>
|   `-ReturnStmt 0x1ec7395daf8 <line:194:5, col:14>
|     `-ParenExpr 0x1ec7395dad8 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x1ec7395dab0 <col:13> 'int' 0
|-FunctionDecl 0x1ec7395dce8 <line:197:1, line:265:1> line:197:5 invalid BN_dec2bn 'int (int **, const char *)'
| |-ParmVarDecl 0x1ec7395dbc8 <col:15, col:24> col:24 invalid bn 'int **'
| |-ParmVarDecl 0x1ec7395dc48 <col:28, col:40> col:40 used a 'const char *'
| `-CompoundStmt 0x1ec73964928 <line:198:1, line:265:1>
|   |-DeclStmt 0x1ec7395e000 <line:201:5, col:22>
|   | |-VarDecl 0x1ec7395de50 <col:5, col:15> col:9 used neg 'int' cinit
|   | | `-IntegerLiteral 0x1ec7395deb8 <col:15> 'int' 0
|   | |-VarDecl 0x1ec7395def8 <col:5, col:18> col:18 used i 'int'
|   | `-VarDecl 0x1ec7395df78 <col:5, col:21> col:21 used j 'int'
|   |-DeclStmt 0x1ec7395e098 <line:202:5, col:12>
|   | `-VarDecl 0x1ec7395e030 <col:5, col:9> col:9 used num 'int'
|   |-IfStmt 0x1ec7395e330 <line:204:5, line:205:18>
|   | |-BinaryOperator 0x1ec7395e2b8 <line:204:9, col:35> 'int' '||'
|   | | |-ParenExpr 0x1ec7395e1c0 <col:9, col:19> 'int'
|   | | | `-BinaryOperator 0x1ec7395e1a0 <col:10, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x1ec7395e170 <.//openssl//file_jk/before\crypto\bn\bn_print.c:204:10> 'const char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x1ec7395e0b0 <col:10> 'const char *' lvalue ParmVar 0x1ec7395dc48 'a' 'const char *'
|   | | |   `-ImplicitCastExpr 0x1ec7395e188 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |     `-ParenExpr 0x1ec7395e150 <col:17, col:27> 'void *'
|   | | |       `-CStyleCastExpr 0x1ec7395e128 <col:18, col:26> 'void *' <NullToPointer>
|   | | |         `-IntegerLiteral 0x1ec7395e0e8 <col:26> 'int' 0
|   | | `-ParenExpr 0x1ec7395e298 <.//openssl//file_jk/before\crypto\bn\bn_print.c:204:24, col:35> 'int'
|   | |   `-BinaryOperator 0x1ec7395e278 <col:25, col:31> 'int' '=='
|   | |     |-ImplicitCastExpr 0x1ec7395e260 <col:25, col:26> 'int' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x1ec7395e248 <col:25, col:26> 'char' <LValueToRValue>
|   | |     |   `-UnaryOperator 0x1ec7395e218 <col:25, col:26> 'const char' lvalue prefix '*' cannot overflow
|   | |     |     `-ImplicitCastExpr 0x1ec7395e200 <col:26> 'const char *' <LValueToRValue>
|   | |     |       `-DeclRefExpr 0x1ec7395e1e0 <col:26> 'const char *' lvalue ParmVar 0x1ec7395dc48 'a' 'const char *'
|   | |     `-CharacterLiteral 0x1ec7395e230 <col:31> 'int' 0
|   | `-ReturnStmt 0x1ec7395e320 <line:205:9, col:18>
|   |   `-ParenExpr 0x1ec7395e300 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1ec7395e2d8 <col:17> 'int' 0
|   |-IfStmt 0x1ec7395e4d8 <line:206:5, line:209:5>
|   | |-BinaryOperator 0x1ec7395e3e0 <line:206:9, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x1ec7395e3c8 <col:9, col:10> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1ec7395e3b0 <col:9, col:10> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x1ec7395e380 <col:9, col:10> 'const char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x1ec7395e368 <col:10> 'const char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1ec7395e348 <col:10> 'const char *' lvalue ParmVar 0x1ec7395dc48 'a' 'const char *'
|   | | `-CharacterLiteral 0x1ec7395e398 <col:15> 'int' 45
|   | `-CompoundStmt 0x1ec7395e4b8 <col:20, line:209:5>
|   |   |-BinaryOperator 0x1ec7395e460 <line:207:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x1ec7395e400 <col:9> 'int' lvalue Var 0x1ec7395de50 'neg' 'int'
|   |   | `-IntegerLiteral 0x1ec7395e438 <col:15> 'int' 1
|   |   `-UnaryOperator 0x1ec7395e4a0 <line:208:9, col:10> 'const char *' postfix '++'
|   |     `-DeclRefExpr 0x1ec7395e480 <col:9> 'const char *' lvalue ParmVar 0x1ec7395dc48 'a' 'const char *'
|   |-ForStmt 0x1ec739587d0 <line:211:5, line:212:9>
|   | |-BinaryOperator 0x1ec7395e550 <line:211:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x1ec7395e4f0 <col:10> 'int' lvalue Var 0x1ec7395def8 'i' 'int'
|   | | `-IntegerLiteral 0x1ec7395e528 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1ec7395e7b8 <col:17, col:64> 'int' '&&'
|   | | |-BinaryOperator 0x1ec7395e638 <col:17, col:32> 'int' '<='
|   | | | |-ImplicitCastExpr 0x1ec7395e620 <col:17> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1ec7395e570 <col:17> 'int' lvalue Var 0x1ec7395def8 'i' 'int'
|   | | | `-ParenExpr 0x1ec7395e600 <col:22, col:32> 'int'
|   | | |   `-BinaryOperator 0x1ec7395e5e0 <<built-in>:30:21, .//openssl//file_jk/before\crypto\bn\bn_print.c:211:31> 'int' '/'
|   | | |     |-IntegerLiteral 0x1ec7395e590 <<built-in>:30:21> 'int' 2147483647
|   | | |     `-IntegerLiteral 0x1ec7395e5b8 <.//openssl//file_jk/before\crypto\bn\bn_print.c:211:31> 'int' 4
|   | | `-CallExpr 0x1ec7395e778 <col:37, col:64> 'int'
|   | |   |-ImplicitCastExpr 0x1ec7395e760 <col:37> 'int (*)(int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1ec7395e658 <col:37> 'int (int)' Function 0x1ec73929a00 'isdigit' 'int (int)'
|   | |   `-ImplicitCastExpr 0x1ec7395e7a0 <col:45, col:63> 'int' <IntegralCast>
|   | |     `-CStyleCastExpr 0x1ec7395e738 <col:45, col:63> 'unsigned char' <IntegralCast>
|   | |       `-ImplicitCastExpr 0x1ec7395e720 <col:60, col:63> 'char' <LValueToRValue> part_of_explicit_cast
|   | |         `-ArraySubscriptExpr 0x1ec7395e6e8 <col:60, col:63> 'const char' lvalue
|   | |           |-ImplicitCastExpr 0x1ec7395e6b8 <col:60> 'const char *' <LValueToRValue>
|   | |           | `-DeclRefExpr 0x1ec7395e678 <col:60> 'const char *' lvalue ParmVar 0x1ec7395dc48 'a' 'const char *'
|   | |           `-ImplicitCastExpr 0x1ec7395e6d0 <col:62> 'int' <LValueToRValue>
|   | |             `-DeclRefExpr 0x1ec7395e698 <col:62> 'int' lvalue Var 0x1ec7395def8 'i' 'int'
|   | |-UnaryOperator 0x1ec7395e7f8 <col:67, col:68> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1ec7395e7d8 <col:67> 'int' lvalue Var 0x1ec7395def8 'i' 'int'
|   | `-ContinueStmt 0x1ec7395e810 <line:212:9>
|   |-IfStmt 0x1ec739589d8 <line:214:5, line:215:14>
|   | |-BinaryOperator 0x1ec73958950 <line:214:9, col:31> 'int' '||'
|   | | |-BinaryOperator 0x1ec73958868 <col:9, col:14> 'int' '=='
|   | | | |-ImplicitCastExpr 0x1ec73958850 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1ec73958808 <col:9> 'int' lvalue Var 0x1ec7395def8 'i' 'int'
|   | | | `-IntegerLiteral 0x1ec73958828 <col:14> 'int' 0
|   | | `-BinaryOperator 0x1ec73958930 <col:19, col:31> 'int' '>'
|   | |   |-ImplicitCastExpr 0x1ec73958918 <col:19> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1ec73958888 <col:19> 'int' lvalue Var 0x1ec7395def8 'i' 'int'
|   | |   `-BinaryOperator 0x1ec739588f8 <<built-in>:30:21, .//openssl//file_jk/before\crypto\bn\bn_print.c:214:31> 'int' '/'
|   | |     |-IntegerLiteral 0x1ec739588a8 <<built-in>:30:21> 'int' 2147483647
|   | |     `-IntegerLiteral 0x1ec739588d0 <.//openssl//file_jk/before\crypto\bn\bn_print.c:214:31> 'int' 4
|   | `-GotoStmt 0x1ec739589c0 <line:215:9, col:14> 'err' 0x1ec73958970
|   |-BinaryOperator 0x1ec73958ab8 <line:217:5, col:15> 'int' '='
|   | |-DeclRefExpr 0x1ec739589f0 <col:5> 'int' lvalue Var 0x1ec7395e030 'num' 'int'
|   | `-BinaryOperator 0x1ec73958a98 <col:11, col:15> 'int' '+'
|   |   |-ImplicitCastExpr 0x1ec73958a68 <col:11> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ec73958a28 <col:11> 'int' lvalue Var 0x1ec7395def8 'i' 'int'
|   |   `-ImplicitCastExpr 0x1ec73958a80 <col:15> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ec73958a48 <col:15> 'int' lvalue Var 0x1ec7395de50 'neg' 'int'
|   |-IfStmt 0x1ec73958be0 <line:218:5, line:219:20>
|   | |-OpaqueValueExpr 0x1ec73958bc8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1ec73958bb8 <col:9, col:20>
|   |   `-ImplicitCastExpr 0x1ec73958ba0 <col:16, col:20> 'int' <LValueToRValue>
|   |     `-ParenExpr 0x1ec73958b80 <col:16, col:20> 'int' lvalue
|   |       `-DeclRefExpr 0x1ec73958b60 <col:17> 'int' lvalue Var 0x1ec7395e030 'num' 'int'
|   |-IfStmt 0x1ec73958e48 <line:225:5, line:231:5> has_else
|   | |-OpaqueValueExpr 0x1ec73958e30 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x1ec73958de8 <line:225:22, line:228:5>
|   | | `-IfStmt 0x1ec73958dd0 <line:226:9, line:227:22>
|   | |   |-OpaqueValueExpr 0x1ec73958db8 <<invalid sloc>> '_Bool'
|   | |   `-ReturnStmt 0x1ec73958da8 <col:13, col:22>
|   | |     `-ParenExpr 0x1ec73958d88 <col:20, col:22> 'int'
|   | |       `-IntegerLiteral 0x1ec73958d60 <col:21> 'int' 0
|   | `-CompoundStmt 0x1ec73958e20 <line:228:12, line:231:5>
|   |-IfStmt 0x1ec73958fc8 <line:234:5, line:235:14>
|   | |-OpaqueValueExpr 0x1ec73958fb0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1ec73958f98 <col:9, col:14> 'err' 0x1ec73958970
|   |-IfStmt 0x1ec739590d8 <line:238:5, line:239:13>
|   | |-OpaqueValueExpr 0x1ec739590c0 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x1ec739590a0 <col:9, col:13> 'int' '='
|   |   |-DeclRefExpr 0x1ec73959058 <col:9> 'int' lvalue Var 0x1ec7395df78 'j' 'int'
|   |   `-IntegerLiteral 0x1ec73959078 <col:13> 'int' 0
|   |-WhileStmt 0x1ec73959650 <line:241:5, line:252:5>
|   | |-BinaryOperator 0x1ec73959178 <line:241:12, col:19> 'int' '>='
|   | | |-UnaryOperator 0x1ec73959138 <col:12, col:14> 'int' prefix '--'
|   | | | `-DeclRefExpr 0x1ec73959118 <col:14> 'int' lvalue Var 0x1ec7395def8 'i' 'int'
|   | | `-IntegerLiteral 0x1ec73959150 <col:19> 'int' 0
|   | `-CompoundStmt 0x1ec73959630 <col:22, line:252:5>
|   |   |-UnaryOperator 0x1ec73959298 <line:244:9, col:10> 'const char *' postfix '++'
|   |   | `-DeclRefExpr 0x1ec73959278 <col:9> 'const char *' lvalue ParmVar 0x1ec7395dc48 'a' 'const char *'
|   |   `-IfStmt 0x1ec73959618 <line:245:9, line:251:9>
|   |     |-OpaqueValueExpr 0x1ec73959600 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1ec739595e0 <line:245:32, line:251:9>
|   |       |-IfStmt 0x1ec73959538 <line:246:13, line:248:22>
|   |       | |-OpaqueValueExpr 0x1ec73959520 <<invalid sloc>> '_Bool'
|   |       | `-GotoStmt 0x1ec73959508 <col:17, col:22> 'err' 0x1ec73958970
|   |       `-BinaryOperator 0x1ec739595c0 <line:250:13, col:17> 'int' '='
|   |         |-DeclRefExpr 0x1ec73959578 <col:13> 'int' lvalue Var 0x1ec7395df78 'j' 'int'
|   |         `-IntegerLiteral 0x1ec73959598 <col:17> 'int' 0
|   |-NullStmt 0x1ec73959688 <line:256:22>
|   |-ReturnStmt 0x1ec73959730 <line:260:5, col:16>
|   | `-ImplicitCastExpr 0x1ec73959718 <col:12, col:16> 'int' <LValueToRValue>
|   |   `-ParenExpr 0x1ec739596f8 <col:12, col:16> 'int' lvalue
|   |     `-DeclRefExpr 0x1ec739596d8 <col:13> 'int' lvalue Var 0x1ec7395e030 'num' 'int'
|   |-LabelStmt 0x1ec739648b8 <line:261:2, col:5> 'err'
|   | `-NullStmt 0x1ec739648b0 <col:5>
|   `-ReturnStmt 0x1ec73964918 <line:264:5, col:14>
|     `-ParenExpr 0x1ec739648f8 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x1ec739648d0 <col:13> 'int' 0
|-FunctionDecl 0x1ec73964af8 <line:267:1, line:285:1> line:267:5 invalid BN_asc2bn 'int (int **, const char *)'
| |-ParmVarDecl 0x1ec739649d8 <col:15, col:24> col:24 invalid bn 'int **'
| |-ParmVarDecl 0x1ec73964a58 <col:28, col:40> col:40 used a 'const char *'
| `-CompoundStmt 0x1ec739653e8 <line:268:1, line:285:1>
|   |-DeclStmt 0x1ec73964c90 <line:269:5, col:22>
|   | `-VarDecl 0x1ec73964bd8 <col:5, col:21> col:17 used p 'const char *' cinit
|   |   `-ImplicitCastExpr 0x1ec73964c78 <col:21> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ec73964c40 <col:21> 'const char *' lvalue ParmVar 0x1ec73964a58 'a' 'const char *'
|   |-IfStmt 0x1ec73964db0 <line:271:5, line:272:10>
|   | |-BinaryOperator 0x1ec73964d58 <line:271:9, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x1ec73964d40 <col:9, col:10> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1ec73964d28 <col:9, col:10> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x1ec73964cf8 <col:9, col:10> 'const char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x1ec73964ce0 <col:10> 'const char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1ec73964ca8 <col:10> 'const char *' lvalue Var 0x1ec73964bd8 'p' 'const char *'
|   | | `-CharacterLiteral 0x1ec73964d10 <col:15> 'int' 45
|   | `-UnaryOperator 0x1ec73964d98 <line:272:9, col:10> 'const char *' postfix '++'
|   |   `-DeclRefExpr 0x1ec73964d78 <col:9> 'const char *' lvalue Var 0x1ec73964bd8 'p' 'const char *'
|   |-IfStmt 0x1ec73965280 <line:274:5, line:280:5> has_else
|   | |-BinaryOperator 0x1ec739650c0 <line:274:9, col:51> 'int' '&&'
|   | | |-BinaryOperator 0x1ec73964e90 <col:9, col:17> 'int' '=='
|   | | | |-ImplicitCastExpr 0x1ec73964e78 <col:9, col:12> 'int' <IntegralCast>
|   | | | | `-ImplicitCastExpr 0x1ec73964e60 <col:9, col:12> 'char' <LValueToRValue>
|   | | | |   `-ArraySubscriptExpr 0x1ec73964e28 <col:9, col:12> 'const char' lvalue
|   | | | |     |-ImplicitCastExpr 0x1ec73964e10 <col:9> 'const char *' <LValueToRValue>
|   | | | |     | `-DeclRefExpr 0x1ec73964dc8 <col:9> 'const char *' lvalue Var 0x1ec73964bd8 'p' 'const char *'
|   | | | |     `-IntegerLiteral 0x1ec73964de8 <col:11> 'int' 0
|   | | | `-CharacterLiteral 0x1ec73964e48 <col:17> 'int' 48
|   | | `-ParenExpr 0x1ec739650a0 <col:24, col:51> 'int'
|   | |   `-BinaryOperator 0x1ec73965080 <col:25, col:48> 'int' '||'
|   | |     |-BinaryOperator 0x1ec73964f78 <col:25, col:33> 'int' '=='
|   | |     | |-ImplicitCastExpr 0x1ec73964f60 <col:25, col:28> 'int' <IntegralCast>
|   | |     | | `-ImplicitCastExpr 0x1ec73964f48 <col:25, col:28> 'char' <LValueToRValue>
|   | |     | |   `-ArraySubscriptExpr 0x1ec73964f10 <col:25, col:28> 'const char' lvalue
|   | |     | |     |-ImplicitCastExpr 0x1ec73964ef8 <col:25> 'const char *' <LValueToRValue>
|   | |     | |     | `-DeclRefExpr 0x1ec73964eb0 <col:25> 'const char *' lvalue Var 0x1ec73964bd8 'p' 'const char *'
|   | |     | |     `-IntegerLiteral 0x1ec73964ed0 <col:27> 'int' 1
|   | |     | `-CharacterLiteral 0x1ec73964f30 <col:33> 'int' 88
|   | |     `-BinaryOperator 0x1ec73965060 <col:40, col:48> 'int' '=='
|   | |       |-ImplicitCastExpr 0x1ec73965048 <col:40, col:43> 'int' <IntegralCast>
|   | |       | `-ImplicitCastExpr 0x1ec73965030 <col:40, col:43> 'char' <LValueToRValue>
|   | |       |   `-ArraySubscriptExpr 0x1ec73964ff8 <col:40, col:43> 'const char' lvalue
|   | |       |     |-ImplicitCastExpr 0x1ec73964fe0 <col:40> 'const char *' <LValueToRValue>
|   | |       |     | `-DeclRefExpr 0x1ec73964f98 <col:40> 'const char *' lvalue Var 0x1ec73964bd8 'p' 'const char *'
|   | |       |     `-IntegerLiteral 0x1ec73964fb8 <col:42> 'int' 1
|   | |       `-CharacterLiteral 0x1ec73965018 <col:48> 'int' 120
|   | |-CompoundStmt 0x1ec739651c8 <col:54, line:277:5>
|   | | `-IfStmt 0x1ec739651b0 <line:275:9, line:276:20>
|   | |   |-OpaqueValueExpr 0x1ec73965198 <<invalid sloc>> '_Bool'
|   | |   `-ReturnStmt 0x1ec73965188 <col:13, col:20>
|   | |     `-IntegerLiteral 0x1ec73965160 <col:20> 'int' 0
|   | `-CompoundStmt 0x1ec73965268 <line:277:12, line:280:5>
|   |   `-IfStmt 0x1ec73965250 <line:278:9, line:279:20>
|   |     |-OpaqueValueExpr 0x1ec73965238 <<invalid sloc>> '_Bool'
|   |     `-ReturnStmt 0x1ec73965228 <col:13, col:20>
|   |       `-IntegerLiteral 0x1ec73965200 <col:20> 'int' 0
|   `-ReturnStmt 0x1ec739653d8 <line:284:5, col:12>
|     `-IntegerLiteral 0x1ec739653b0 <col:12> 'int' 1
|-FunctionDecl 0x1ec739655c0 <line:288:1, line:299:1> line:288:5 invalid BN_print_fp 'int (FILE *, const int *)'
| |-ParmVarDecl 0x1ec73965428 <col:17, col:23> col:23 used fp 'FILE *'
| |-ParmVarDecl 0x1ec739654a8 <col:27, col:41> col:41 invalid a 'const int *'
| `-CompoundStmt 0x1ec73962ee8 <line:289:1, line:299:1>
|   |-DeclStmt 0x1ec73965708 <line:291:5, col:12>
|   | `-VarDecl 0x1ec739656a0 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x1ec73962ac8 <line:293:5, line:294:18>
|   | |-OpaqueValueExpr 0x1ec73962ab0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1ec73962aa0 <col:9, col:18>
|   |   `-ParenExpr 0x1ec73962a80 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1ec73962a58 <col:17> 'int' 0
|   `-ReturnStmt 0x1ec73962ed8 <line:298:5, col:16>
|     `-ImplicitCastExpr 0x1ec73962ec0 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x1ec73962ea0 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x1ec73962e80 <col:13> 'int' lvalue Var 0x1ec739656a0 'ret' 'int'
|-FunctionDecl 0x1ec73963080 <line:302:1, line:325:1> line:302:5 invalid BN_print 'int (int *, const int *)'
| |-ParmVarDecl 0x1ec73962f28 <col:14, col:19> col:19 invalid bp 'int *'
| |-ParmVarDecl 0x1ec73962fa8 <col:23, col:37> col:37 invalid a 'const int *'
| `-CompoundStmt 0x1ec73961f10 <line:303:1, line:325:1>
|   |-DeclStmt 0x1ec73963398 <line:304:5, col:23>
|   | |-VarDecl 0x1ec73963160 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x1ec739631e0 <col:5, col:12> col:12 used j 'int'
|   | |-VarDecl 0x1ec73963260 <col:5, col:15> col:15 used v 'int'
|   | `-VarDecl 0x1ec739632e0 <col:5, col:22> col:18 used z 'int' cinit
|   |   `-IntegerLiteral 0x1ec73963348 <col:22> 'int' 0
|   |-DeclStmt 0x1ec73963458 <line:305:5, col:16>
|   | `-VarDecl 0x1ec739633c8 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1ec73963430 <col:15> 'int' 0
|   |-IfStmt 0x1ec73963670 <line:307:5, line:308:14>
|   | |-OpaqueValueExpr 0x1ec73963658 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1ec73963640 <col:9, col:14> 'end' 0x1ec739635f0
|   |-IfStmt 0x1ec73963768 <line:309:5, line:310:14>
|   | |-OpaqueValueExpr 0x1ec73963750 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1ec73963738 <col:9, col:14> 'end' 0x1ec739635f0
|   |-ForStmt 0x1ec73961dd8 <line:311:5, line:321:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1ec73963840 <line:311:26, col:31> 'int' '>='
|   | | |-ImplicitCastExpr 0x1ec73963828 <col:26> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ec739637e0 <col:26> 'int' lvalue Var 0x1ec73963160 'i' 'int'
|   | | `-IntegerLiteral 0x1ec73963800 <col:31> 'int' 0
|   | |-UnaryOperator 0x1ec73961880 <col:34, col:35> 'int' postfix '--'
|   | | `-DeclRefExpr 0x1ec73961860 <col:34> 'int' lvalue Var 0x1ec73963160 'i' 'int'
|   | `-CompoundStmt 0x1ec73961dc0 <col:39, line:321:5>
|   |   `-ForStmt 0x1ec73961d88 <line:312:9, line:320:9>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x1ec73961958 <line:312:32, col:37> 'int' '>='
|   |     | |-ImplicitCastExpr 0x1ec73961940 <col:32> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1ec739618f8 <col:32> 'int' lvalue Var 0x1ec739631e0 'j' 'int'
|   |     | `-IntegerLiteral 0x1ec73961918 <col:37> 'int' 0
|   |     |-CompoundAssignOperator 0x1ec739619c0 <col:40, col:45> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     | |-DeclRefExpr 0x1ec73961978 <col:40> 'int' lvalue Var 0x1ec739631e0 'j' 'int'
|   |     | `-IntegerLiteral 0x1ec73961998 <col:45> 'int' 4
|   |     `-CompoundStmt 0x1ec73961d70 <col:48, line:320:9>
|   |       `-IfStmt 0x1ec73961d58 <line:315:13, line:319:13>
|   |         |-BinaryOperator 0x1ec73961bd8 <line:315:17, col:29> 'int' '||'
|   |         | |-ImplicitCastExpr 0x1ec73961bc0 <col:17> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x1ec73961ae8 <col:17> 'int' lvalue Var 0x1ec739632e0 'z' 'int'
|   |         | `-ParenExpr 0x1ec73961ba0 <col:22, col:29> 'int'
|   |         |   `-BinaryOperator 0x1ec73961b80 <col:23, col:28> 'int' '!='
|   |         |     |-ImplicitCastExpr 0x1ec73961b68 <col:23> 'int' <LValueToRValue>
|   |         |     | `-DeclRefExpr 0x1ec73961b20 <col:23> 'int' lvalue Var 0x1ec73963260 'v' 'int'
|   |         |     `-IntegerLiteral 0x1ec73961b40 <col:28> 'int' 0
|   |         `-CompoundStmt 0x1ec73961d38 <col:32, line:319:13>
|   |           |-IfStmt 0x1ec73961cb8 <line:316:17, line:317:26>
|   |           | |-OpaqueValueExpr 0x1ec73961ca0 <<invalid sloc>> '_Bool'
|   |           | `-GotoStmt 0x1ec73961c88 <col:21, col:26> 'end' 0x1ec739635f0
|   |           `-BinaryOperator 0x1ec73961d18 <line:318:17, col:21> 'int' '='
|   |             |-DeclRefExpr 0x1ec73961cd0 <col:17> 'int' lvalue Var 0x1ec739632e0 'z' 'int'
|   |             `-IntegerLiteral 0x1ec73961cf0 <col:21> 'int' 1
|   |-BinaryOperator 0x1ec73961e70 <line:322:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x1ec73961e10 <col:5> 'int' lvalue Var 0x1ec739633c8 'ret' 'int'
|   | `-IntegerLiteral 0x1ec73961e48 <col:11> 'int' 1
|   `-LabelStmt 0x1ec73961ef8 <line:323:2, line:324:16> 'end'
|     `-ReturnStmt 0x1ec73961ee8 <col:5, col:16>
|       `-ImplicitCastExpr 0x1ec73961ed0 <col:12, col:16> 'int' <LValueToRValue>
|         `-ParenExpr 0x1ec73961eb0 <col:12, col:16> 'int' lvalue
|           `-DeclRefExpr 0x1ec73961e90 <col:13> 'int' lvalue Var 0x1ec739633c8 'ret' 'int'
`-FunctionDecl 0x1ec73962020 <line:327:1, line:343:1> line:327:7 BN_options 'char *(void)'
  `-CompoundStmt 0x1ec73962558 <line:328:1, line:343:1>
    |-DeclStmt 0x1ec73962180 <line:329:5, col:24>
    | `-VarDecl 0x1ec739620f0 <col:5, col:23> col:16 used init 'int' static cinit
    |   `-IntegerLiteral 0x1ec73962158 <col:23> 'int' 0
    |-DeclStmt 0x1ec739622a0 <line:330:5, col:25>
    | `-VarDecl 0x1ec73962238 <col:5, col:24> col:17 used data 'char [16]' static
    |-IfStmt 0x1ec739624d8 <line:332:5, line:341:5>
    | |-UnaryOperator 0x1ec73962308 <line:332:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1ec739622f0 <col:10> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x1ec739622b8 <col:10> 'int' lvalue Var 0x1ec739620f0 'init' 'int'
    | `-CompoundStmt 0x1ec739624c0 <col:16, line:341:5>
    |   `-UnaryOperator 0x1ec73962340 <line:333:9, col:13> 'int' postfix '++'
    |     `-DeclRefExpr 0x1ec73962320 <col:9> 'int' lvalue Var 0x1ec739620f0 'init' 'int'
    `-ReturnStmt 0x1ec73962548 <line:342:5, col:17>
      `-ImplicitCastExpr 0x1ec73962530 <col:12, col:17> 'char *' <ArrayToPointerDecay>
        `-ParenExpr 0x1ec73962510 <col:12, col:17> 'char [16]' lvalue
          `-DeclRefExpr 0x1ec739624f0 <col:13> 'char [16]' lvalue Var 0x1ec73962238 'data' 'char [16]'
