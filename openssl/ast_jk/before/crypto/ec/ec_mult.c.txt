TranslationUnitDecl 0x1fa40d5d538 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1fa40d5ddd0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1fa40d5dad0 '__int128'
|-TypedefDecl 0x1fa40d5de40 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1fa40d5daf0 'unsigned __int128'
|-TypedefDecl 0x1fa40d5e178 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1fa40d5df30 'struct __NSConstantString_tag'
|   `-Record 0x1fa40d5de98 '__NSConstantString_tag'
|-TypedefDecl 0x1fa40d5e1e8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1fa40d5d710 'unsigned long long'
|-TypedefDecl 0x1fa40d5e280 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1fa40d5e240 'char *'
|   `-BuiltinType 0x1fa40d5d5d0 'char'
|-TypedefDecl 0x1fa40d5e2f0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1fa40d5e240 'char *'
|   `-BuiltinType 0x1fa40d5d5d0 'char'
|-TypedefDecl 0x1fa40d5e3b0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1fa40d5d710 'unsigned long long'
|-TypedefDecl 0x1fa40d5e420 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1fa40d5e240 'char *'
|   `-BuiltinType 0x1fa40d5d5d0 'char'
|-FunctionDecl 0x1fa42837410 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1fa428374b0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1fa42837520 <col:21> Implicit
|-FunctionDecl 0x1fa42837578 prev 0x1fa42837410 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1fa428372a0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1fa42837668 <col:21> Inherited Implicit
|-TypedefDecl 0x1fa428376a8 prev 0x1fa40d5e1e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1fa40d5d710 'unsigned long long'
|-TypedefDecl 0x1fa42837750 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1fa42837720 'size_t' sugar
|   |-Typedef 0x1fa428376a8 'size_t'
|   `-BuiltinType 0x1fa40d5d710 'unsigned long long'
|-TypedefDecl 0x1fa428377c0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1fa40d5d670 'long long'
|-TypedefDecl 0x1fa42837830 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1fa40d5d670 'long long'
|-TypedefDecl 0x1fa428378a0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1fa40d5d6b0 'unsigned short'
|-TypedefDecl 0x1fa42837910 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x1fa40d5d6b0 'unsigned short'
|-TypedefDecl 0x1fa42837980 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1fa40d5d6b0 'unsigned short'
|-TypedefDecl 0x1fa428379f0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1fa40d5d630 'int'
|-TypedefDecl 0x1fa42837a60 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1fa40d5d650 'long'
|-TypedefDecl 0x1fa42837ad0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1fa40d5d670 'long long'
|-TypedefDecl 0x1fa42837b60 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1fa42837b30 '__time64_t' sugar
|   |-Typedef 0x1fa42837ad0 '__time64_t'
|   `-BuiltinType 0x1fa40d5d670 'long long'
|-FunctionDecl 0x1fa42837cd8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1fa42837ef8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1fa42870080 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1fa42838038 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1fa428380b0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1fa42838128 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1fa428381a8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1fa4286fe20 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1fa42870160 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1fa42870220 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1fa42870390 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1fa42870340 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1fa428702e0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1fa42870200 'struct threadlocaleinfostruct'
|       `-Record 0x1fa42876e90 'threadlocaleinfostruct'
|-TypedefDecl 0x1fa428704a0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1fa42870450 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1fa428703f0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1fa428702c0 'struct threadmbcinfostruct'
|       `-Record 0x1fa42870220 'threadmbcinfostruct'
|-RecordDecl 0x1fa428704f8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1fa428705b0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1fa42870670 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1fa42870700 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1fa42870790 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1fa42870848 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1fa428707f0 'struct localeinfo_struct' sugar
|   `-RecordType 0x1fa42870650 'struct localeinfo_struct'
|     `-Record 0x1fa428705b0 'localeinfo_struct'
|-TypedefDecl 0x1fa42870920 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1fa428708d0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1fa428707f0 'struct localeinfo_struct' sugar
|     `-RecordType 0x1fa42870650 'struct localeinfo_struct'
|       `-Record 0x1fa428705b0 'localeinfo_struct'
|-RecordDecl 0x1fa42870998 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1fa42870a50 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1fa42870ac8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1fa42870b88 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1fa42870c20 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1fa42870c90 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1fa42870d48 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1fa42870cf0 'struct localerefcount' sugar
|   `-RecordType 0x1fa42870a30 'struct localerefcount'
|     `-Record 0x1fa42870998 'localerefcount'
|-RecordDecl 0x1fa42876e90 prev 0x1fa42870160 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1fa42876f10 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1fa42876f88 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1fa42876ff8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1fa42877068 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1fa428770d8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1fa42877298 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1fa42877308 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1fa42877378 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1fa428773e8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1fa42877458 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1fa428774c8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1fa42877520 parent 0x1fa40d5d538 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1fa428776b0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1fa42877720 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1fa42877790 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1fa42877800 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1fa428778a0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1fa42877910 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1fa42877a20 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1fa42877b58 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1fa42877c08 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1fa42877bb0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1fa42870200 'struct threadlocaleinfostruct'
|     `-Record 0x1fa42876e90 'threadlocaleinfostruct'
|-FunctionDecl 0x1fa4287d100 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x1fa42877c90 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x1fa42877d40 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x1fa42877dc0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x1fa4287cef0 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa4287d4c8 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1fa4287d568 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1fa4287d5d0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1fa4287d638 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fa4287d6b8 prev 0x1fa4287d4c8 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1fa4287d1f0 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x1fa4287d270 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x1fa4287d2e8 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa4287da78 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1fa4287d7a0 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x1fa4287d820 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x1fa4287d898 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa42875ed0 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fa4287db60 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x1fa4287dbe0 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x1fa4287dc58 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa4287dcf0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa428761d8 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1fa42876278 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1fa428762e0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1fa42876348 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fa428763c8 prev 0x1fa428761d8 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1fa42875fc0 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x1fa42876040 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x1fa428760b8 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa42876788 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1fa42876828 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1fa42876890 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1fa428768f8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fa42876978 prev 0x1fa42876788 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1fa428764b0 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x1fa42876530 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x1fa428765a8 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa42881f40 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1fa42876a88 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x1fa42876b20 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1fa42876ba0 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1fa42876c18 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1fa42882308 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1fa428823a8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1fa42882410 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1fa42882478 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fa428824f8 prev 0x1fa42882308 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x1fa42882030 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x1fa428820b0 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x1fa42882128 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa42882978 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1fa42882a18 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1fa42882a80 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1fa42882ae8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1fa42882b50 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fa42882bd8 prev 0x1fa42882978 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1fa428826c0 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x1fa42882740 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x1fa428827c0 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x1fa42882838 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fa42882c98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x1fa42885108 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1fa42882e60 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x1fa42884f70 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x1fa42884fe8 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fa428851c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x1fa428855b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1fa428852e8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1fa42885360 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa428853e0 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x1fa42885980 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1fa42885790 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x1fa42885810 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x1fa42885a30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa42885e40 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1fa42885b78 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1fa42885bf0 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1fa42885c70 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x1fa4287f1d0 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1fa4287f270 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1fa4287f2d8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fa4287f350 prev 0x1fa4287f1d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x1fa4287efe8 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x1fa4287f068 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x1fa4287f400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa4287f758 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1fa4287f548 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1fa4287f5c0 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1fa4287f640 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x1fa4287fa80 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1fa4287fb20 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1fa4287fb88 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fa4287fc00 prev 0x1fa4287fa80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x1fa4287f900 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x1fa4287f980 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x1fa4287fcb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa42881000 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1fa428810a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fa42881108 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fa42881180 prev 0x1fa42881000 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x1fa4287fdf8 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x1fa4287fe78 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x1fa428813d0 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1fa42881470 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fa428814e0 prev 0x1fa428813d0 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x1fa42881260 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x1fa428817d8 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1fa428815b8 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1fa42881630 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa42881a28 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x1fa428818b8 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x1fa42881930 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1fa42881d58 <line:131:1, line:133:1>
|   `-ReturnStmt 0x1fa42881d48 <line:132:5, col:51>
|     `-ConditionalOperator 0x1fa42881d18 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x1fa42881b88 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x1fa42881b68 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x1fa42881b38 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1fa42881af0 <col:13> 'const char *' lvalue ParmVar 0x1fa428818b8 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x1fa42881b50 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x1fa42881b10 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x1fa42881d00 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1fa42881ba8 <col:24> 'int' 0
|       `-CallExpr 0x1fa42881ca0 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1fa42881c88 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1fa42881bd0 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x1fa428817d8 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x1fa42881cd0 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1fa42881bf0 <col:36> 'const char *' lvalue ParmVar 0x1fa428818b8 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x1fa42881ce8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1fa42881c10 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x1fa42881930 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa42883088 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1fa42881d88 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x1fa42881e00 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1fa42881e80 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x1fa42882f50 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1fa42883390 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1fa42883430 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1fa42883498 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1fa42883500 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fa42883580 prev 0x1fa42883390 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1fa42883178 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x1fa428831f8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1fa42883270 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa428837b8 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x1fa42883668 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x1fa42883a80 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1fa42883b20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fa42883b88 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1fa42883c00 prev 0x1fa42883a80 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1fa42883890 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x1fa42883910 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x1fa42883e60 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1fa42883ce0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1fa42883d60 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1fa428840e0 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1fa42883f60 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1fa42883fe0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1fa42884498 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1fa428841c0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1fa42884240 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1fa428842b8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa42884700 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1fa42884580 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x1fa42884600 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1fa428849f8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1fa428847e0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1fa42884860 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1fa428848d8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa42884c60 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1fa42884ae0 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x1fa42884b60 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x1fa4287df00 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1fa42884d40 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x1fa42884dc0 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x1fa42884e38 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa4287e2b8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1fa4287dfe8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1fa4287e068 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1fa4287e0e0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa4287e720 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fa4287e3a0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1fa4287e420 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1fa4287e498 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa4287e510 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa4287ea28 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1fa4287e810 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1fa4287e890 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1fa4287e908 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa4287edc0 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fa4287eb10 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x1fa4287eb90 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x1fa4287ec08 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa4287ec80 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa428891d8 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1fa42889278 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fa428892e0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fa42889358 prev 0x1fa428891d8 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1fa42888fb0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1fa42889030 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x1fa42889610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1fa42889530 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x1fa428896b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa42889a90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x1fa42889800 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x1fa42889878 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa428898f8 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x1fa42889da8 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x1fa42889e48 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1fa42889eb8 prev 0x1fa42889da8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x1fa42889c70 <col:90> col:93 'int'
| `-DeprecatedAttr 0x1fa42889f60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa428882b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1fa428880a0 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x1fa42888118 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa42888198 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x1fa428885b8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1fa42888398 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1fa42888410 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa428888a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1fa42888758 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1fa42888950 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa42888d60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fa42888a98 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1fa42888b10 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa42888b88 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa42886130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1fa42888f08 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1fa42885f80 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1fa428861e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa42886698 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1fa42886328 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x1fa428863a0 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1fa42886420 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x1fa42886498 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1fa42886b18 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1fa42886bb8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1fa42886c20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fa42886c88 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fa42886d08 prev 0x1fa42886b18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1fa42886848 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x1fa428868c8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x1fa42886940 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fa42886dc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa42887140 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1fa428871e0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1fa42887248 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fa428872b0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fa42887330 prev 0x1fa42887140 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1fa42886f08 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x1fa42886fa8 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x1fa42887020 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa42887630 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1fa42887418 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x1fa42887498 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x1fa42887510 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa428879c8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fa42887718 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1fa42887798 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1fa42887810 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa42887888 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa42887d60 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1fa42887ab8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1fa42887b30 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1fa42887bb0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x1fa42887c28 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1fa4288b168 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1fa4288b208 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1fa4288b270 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fa4288b2d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fa4288b358 prev 0x1fa4288b168 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1fa42887f10 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x1fa4288afd0 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x1fa4288b048 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fa4288b410 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa4288b8c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x1fa4288b558 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x1fa4288b5d0 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa4288b650 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x1fa4288b6c8 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa4288bd48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1fa4288ba78 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x1fa4288baf8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x1fa4288bb70 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fa4288be00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa4288a130 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1fa4288a1d0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fa4288a238 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fa4288a2b0 prev 0x1fa4288a130 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1fa4288bf48 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1fa42889fc0 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x1fa4288a510 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1fa4288a5b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fa4288a618 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1fa4288a690 prev 0x1fa4288a510 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1fa4288a390 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1fa4288a410 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x1fa4288a850 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x1fa4288a770 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x1fa4288aaa0 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1fa4288ab40 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fa4288aba8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fa4288ac20 prev 0x1fa4288aaa0 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1fa4288a928 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x1fa4288a9a8 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x1fa4288ae80 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1fa4288af20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fa428fef90 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fa428ff008 prev 0x1fa4288ae80 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1fa4288ad00 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x1fa4288ad80 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x1fa428ff328 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1fa428ff3c8 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1fa428ff430 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fa428ff4a8 prev 0x1fa428ff328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x1fa428ff1a8 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x1fa428ff228 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x1fa428ff558 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa428ff938 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x1fa428ff6a0 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x1fa428ff720 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x1fa428ff7a0 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x1fa428ffb90 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1fa428ffa20 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1fa428ffa98 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa428ffe10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1fa428ffd30 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1fa428ffeb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa429042e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fa429040e0 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1fa42904158 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa429041d0 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa42904608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1fa42904490 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1fa42904508 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1fa429046b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa42904ad0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1fa42904b70 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1fa42904bd8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fa42904c40 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fa42904cc0 prev 0x1fa42904ad0 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1fa42904800 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1fa42904880 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x1fa429048f8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa42905128 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fa42904da8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1fa42904e28 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x1fa42904ea0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa42904f18 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa429053d0 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x1fa42905470 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fa429054e0 prev 0x1fa429053d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x1fa429052f0 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x1fa42905588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x1fa429058d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1fa42905750 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1fa429057d0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1fa42905980 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x1fa42905cc8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1fa42905b48 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1fa42905bc8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1fa42905d78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x1fa42901ff8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1fa42905f40 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1fa429020a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x1fa429024b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1fa429022a0 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x1fa42902320 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x1fa42902398 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fa42902570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x1fa42902950 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1fa42902738 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x1fa429027b8 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x1fa42902830 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fa42902a08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x1fa42902cb0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1fa42902bd0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1fa42902d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x1fa429030d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1fa42902f20 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x1fa42902fd0 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x1fa42903180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x1fa42903428 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1fa42903348 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1fa429034d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x1fa42903760 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x1fa429035f0 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x1fa42903af0 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1fa42903830 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1fa429038a8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1fa42903920 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x1fa42903ea8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fa42903c90 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1fa42903d08 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1fa42903f58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa428fe298 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x1fa428fe338 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1fa428fe3a0 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x1fa428fe418 prev 0x1fa428fe298 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x1fa428fe078 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1fa428fe0f0 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1fa428fe710 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x1fa428fe7b0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1fa428fe818 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1fa428fe890 prev 0x1fa428fe710 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x1fa428fe4f0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1fa428fe568 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x1fa428feb70 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1fa428fe968 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1fa428fe9e0 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1fa428fea58 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x1fa428fee80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fa428fed10 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1fa428fed88 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1fa428fef30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa42906318 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fa429060f8 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1fa42906170 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x1fa42906560 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x1fa42906600 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1fa42906670 prev 0x1fa42906560 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x1fa429063f0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x1fa42906958 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x1fa42906740 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1fa429067b8 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa42906ba0 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x1fa42906a30 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x1fa42906aa8 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1fa42906f38 <line:306:1, line:308:1>
|   `-ReturnStmt 0x1fa42906f28 <line:307:5, col:56>
|     `-ConditionalOperator 0x1fa42906ef8 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x1fa42906d60 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x1fa42906d40 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x1fa42906d10 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1fa42906c68 <col:13> 'const wchar_t *' lvalue ParmVar 0x1fa42906a30 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x1fa42906d28 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x1fa42906cf0 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x1fa42906cc8 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x1fa42906c88 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x1fa42906ee0 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1fa42906d80 <col:29> 'int' 0
|       `-CallExpr 0x1fa42906e80 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1fa42906e68 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1fa42906da8 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x1fa42906958 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x1fa42906eb0 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x1fa42906dc8 <col:41> 'const wchar_t *' lvalue ParmVar 0x1fa42906a30 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x1fa42906ec8 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1fa42906de8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1fa42906aa8 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa42908318 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1fa42906f60 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1fa42908020 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1fa42908098 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1fa42908110 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1fa42908780 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1fa429084c0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1fa42908538 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1fa429085b0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fa42908838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa42908c48 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x1fa42908ce8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x1fa42908d50 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1fa42908db8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fa42908e38 prev 0x1fa42908c48 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x1fa42908978 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fa429089f0 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1fa42908a68 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa429071c0 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1fa42908f18 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1fa42908f90 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1fa42907010 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1fa42907088 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1fa42907570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1fa42907368 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1fa429073e0 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1fa42907458 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fa42907628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa42907988 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fa42907768 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1fa429077e0 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x1fa42907bd0 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1fa42907a60 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1fa42907ad8 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1fa42907e18 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fa42907ca8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1fa42907d20 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x1fa42901010 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fa42907ef0 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1fa42907f68 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x1fa42901318 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fa429011a8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1fa42901220 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x1fa429013c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa42901830 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1fa42901508 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x1fa42901580 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x1fa42901660 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x1fa42901b50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x1fa429019d8 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x1fa42901bf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa4290f100 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1fa42901d38 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1fa42901db0 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa42901e30 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x1fa4290f3b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1fa4290f2d8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1fa4290f458 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa4290f820 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1fa4290f598 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1fa4290f610 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa4290f688 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1fa4290fa78 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fa4290f900 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1fa4290f978 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x1fa4290fe18 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1fa4290fb50 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fa4290fbc8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1fa4290fc40 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa429090b8 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1fa4290fef8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fa4290ff70 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1fa4290ffe8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa42909510 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fa42909198 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fa42909210 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1fa42909288 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa42909300 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa42909968 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x1fa429095f8 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1fa42909670 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa429096e8 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1fa42909760 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa42909dd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1fa42909b10 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x1fa42909b88 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1fa42909c00 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fa42909e88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa4290e190 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x1fa42909fc8 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x1fa4290e520 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x1fa4290e260 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1fa4290e2d8 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa4290e350 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x1fa4290e8d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1fa4290e6c0 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x1fa4290e738 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1fa4290e988 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa4290ece8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1fa4290eac8 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x1fa4290eb40 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa4290ef58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1fa4290ee80 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1fa4290f000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa4290d430 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fa4290d168 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x1fa4290d1e0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa4290d258 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa4290d7e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1fa4290d5d0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1fa4290d648 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1fa4290d898 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa4290db48 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1fa4290d9d8 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x1fa4290da50 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa4290ddb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1fa4290dce0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1fa4290de60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa42911240 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fa4290dfa0 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x1fa429110b0 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa42911128 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa42911550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1fa429113e0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1fa42911458 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1fa42911600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa42911a00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1fa42911740 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1fa429117b8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1fa42911830 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa42911e48 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fa42911ae0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1fa42911b58 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1fa42911bd0 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa42911c48 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa4290a040 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fa42911f30 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1fa42911fa8 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x1fa4290a328 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1fa4290a118 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fa4290a190 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1fa4290a208 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa4290a580 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fa4290a408 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1fa4290a480 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x1fa4290a868 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1fa4290a658 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fa4290a6d0 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1fa4290a748 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa4290ab58 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1fa4290a948 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fa4290a9c0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1fa4290aa38 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa4290aee0 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fa4290ac38 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fa4290acb0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1fa4290ad28 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa4290ada0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa4290c1f8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1fa4290afc8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fa4290c060 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1fa4290c0d8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa4290c580 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fa4290c2d8 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fa4290c350 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1fa4290c3c8 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa4290c440 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa4290c7e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1fa4290c708 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1fa4290c888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x1fa4290cbc0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fa4290ca48 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fa4290cac0 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1fa4290cc70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x1fa4290b050 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1fa4290ce30 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fa4290cea8 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1fa4290cf20 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fa4290b108 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x1fa4290b4d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1fa4290b2c8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1fa4290b340 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1fa4290b3b8 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fa4290b588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x1fa4290b820 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1fa4290b748 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1fa4290b8c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x1fa4290bbf8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1fa4290ba88 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x1fa4290bb00 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1fa4290bca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x1fa4290bf40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1fa4290be68 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1fa4290bfe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x1fa42914330 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1fa42914258 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1fa429143d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x1fa42914710 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fa42914598 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fa42914610 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1fa429147c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-TypedefDecl 0x1fa42914ab8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:52:1, col:24> col:24 referenced _onexit_t 'int (*)(void) __attribute__((cdecl))'
| `-PointerType 0x1fa42914a50 'int (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x1fa429149f0 'int (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x1fa429149a0 'int (void)' sugar
|     | `-FunctionProtoType 0x1fa42914970 'int (void)' cdecl
|     |   `-BuiltinType 0x1fa40d5d630 'int'
|     `-ParenType 0x1fa429149a0 'int (void)' sugar
|       `-FunctionProtoType 0x1fa42914970 'int (void)' cdecl
|         `-BuiltinType 0x1fa40d5d630 'int'
|-RecordDecl 0x1fa42914b10 <line:75:9, line:78:1> line:75:16 struct _div_t definition
| |-MaxFieldAlignmentAttr 0x1fa42914bd0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1fa42914c48 <line:76:9, col:13> col:13 quot 'int'
| `-FieldDecl 0x1fa42914cb8 <line:77:9, col:13> col:13 rem 'int'
|-TypedefDecl 0x1fa42914d68 <line:75:1, line:78:3> col:3 referenced div_t 'struct _div_t':'struct _div_t'
| `-ElaboratedType 0x1fa42914d10 'struct _div_t' sugar
|   `-RecordType 0x1fa42914bb0 'struct _div_t'
|     `-Record 0x1fa42914b10 '_div_t'
|-RecordDecl 0x1fa42914dd8 <line:80:9, line:83:1> line:80:16 struct _ldiv_t definition
| |-MaxFieldAlignmentAttr 0x1fa42914e90 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1fa42914f08 <line:81:9, col:14> col:14 quot 'long'
| `-FieldDecl 0x1fa42914f78 <line:82:9, col:14> col:14 rem 'long'
|-TypedefDecl 0x1fa42915028 <line:80:1, line:83:3> col:3 referenced ldiv_t 'struct _ldiv_t':'struct _ldiv_t'
| `-ElaboratedType 0x1fa42914fd0 'struct _ldiv_t' sugar
|   `-RecordType 0x1fa42914e70 'struct _ldiv_t'
|     `-Record 0x1fa42914dd8 '_ldiv_t'
|-RecordDecl 0x1fa4291a140 <line:85:9, line:88:1> line:85:16 struct _lldiv_t definition
| |-MaxFieldAlignmentAttr 0x1fa4291a200 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1fa4291a278 <line:86:9, col:19> col:19 quot 'long long'
| `-FieldDecl 0x1fa4291a2e8 <line:87:9, col:19> col:19 rem 'long long'
|-TypedefDecl 0x1fa4291a398 <line:85:1, line:88:3> col:3 referenced lldiv_t 'struct _lldiv_t':'struct _lldiv_t'
| `-ElaboratedType 0x1fa4291a340 'struct _lldiv_t' sugar
|   `-RecordType 0x1fa4291a1e0 'struct _lldiv_t'
|     `-Record 0x1fa4291a140 '_lldiv_t'
|-RecordDecl 0x1fa4291a430 <line:103:9, line:105:1> line:103:9 struct definition
| |-MaxFieldAlignmentAttr 0x1fa4291a4f0 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x1fa4291a5f0 <line:104:5, col:24> col:19 ld 'unsigned char [10]'
|-TypedefDecl 0x1fa4291a6a8 <line:103:1, line:105:3> col:3 referenced _LDOUBLE 'struct _LDOUBLE':'_LDOUBLE'
| `-ElaboratedType 0x1fa4291a650 'struct _LDOUBLE' sugar
|   `-RecordType 0x1fa4291a4d0 '_LDOUBLE'
|     `-Record 0x1fa4291a430 ''
|-RecordDecl 0x1fa4291a718 <line:122:9, line:124:1> line:122:9 struct definition
| `-FieldDecl 0x1fa4291a7e8 <line:123:9, col:16> col:16 x 'double'
|-TypedefDecl 0x1fa4291a898 <line:122:1, line:124:3> col:3 referenced _CRT_DOUBLE 'struct _CRT_DOUBLE':'_CRT_DOUBLE'
| `-ElaboratedType 0x1fa4291a840 'struct _CRT_DOUBLE' sugar
|   `-RecordType 0x1fa4291a7b0 '_CRT_DOUBLE'
|     `-Record 0x1fa4291a718 ''
|-RecordDecl 0x1fa4291a908 <line:126:9, line:128:1> line:126:9 struct definition
| `-FieldDecl 0x1fa4291a9d8 <line:127:5, col:11> col:11 f 'float'
|-TypedefDecl 0x1fa4291aa88 <line:126:1, line:128:3> col:3 referenced _CRT_FLOAT 'struct _CRT_FLOAT':'_CRT_FLOAT'
| `-ElaboratedType 0x1fa4291aa30 'struct _CRT_FLOAT' sugar
|   `-RecordType 0x1fa4291a9a0 '_CRT_FLOAT'
|     `-Record 0x1fa4291a908 ''
|-RecordDecl 0x1fa4291aaf8 <line:134:9, line:139:1> line:134:9 struct definition
| `-FieldDecl 0x1fa4291abc8 <line:138:9, col:21> col:21 x 'long double'
|-TypedefDecl 0x1fa4291ac78 <line:134:1, line:139:3> col:3 _LONGDOUBLE 'struct _LONGDOUBLE':'_LONGDOUBLE'
| `-ElaboratedType 0x1fa4291ac20 'struct _LONGDOUBLE' sugar
|   `-RecordType 0x1fa4291ab90 '_LONGDOUBLE'
|     `-Record 0x1fa4291aaf8 ''
|-RecordDecl 0x1fa4291ad10 <line:144:9, line:146:1> line:144:9 struct definition
| |-MaxFieldAlignmentAttr 0x1fa4291add0 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x1fa4291aed0 <line:145:5, col:26> col:19 ld12 'unsigned char [12]'
|-TypedefDecl 0x1fa4291af88 <line:144:1, line:146:3> col:3 _LDBL12 'struct _LDBL12':'_LDBL12'
| `-ElaboratedType 0x1fa4291af30 'struct _LDBL12' sugar
|   `-RecordType 0x1fa4291adb0 '_LDBL12'
|     `-Record 0x1fa4291ad10 ''
|-VarDecl 0x1fa4291b010 <line:170:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x1fa42919190 <line:175:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1fa429193b8 <line:176:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x1fa42919258 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-TypedefDecl 0x1fa42919600 <line:215:1, col:24> col:24 referenced _purecall_handler 'void (*)(void) __attribute__((cdecl))'
| `-PointerType 0x1fa429195a0 'void (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x1fa42919540 'void (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x1fa429194f0 'void (void)' sugar
|     | `-FunctionProtoType 0x1fa42837c30 'void (void)' cdecl
|     |   `-BuiltinType 0x1fa40d5d590 'void'
|     `-ParenType 0x1fa429194f0 'void (void)' sugar
|       `-FunctionProtoType 0x1fa42837c30 'void (void)' cdecl
|         `-BuiltinType 0x1fa40d5d590 'void'
|-FunctionDecl 0x1fa42919800 <line:218:9, col:92> col:35 _set_purecall_handler '_purecall_handler (_purecall_handler) __attribute__((cdecl))':'_purecall_handler (_purecall_handler)'
| `-ParmVarDecl 0x1fa42919690 <col:66, col:84> col:84 _Handler '_purecall_handler':'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x1fa42919a18 <line:219:9, col:61> col:35 _get_purecall_handler '_purecall_handler (void) __attribute__((cdecl))':'_purecall_handler (void)'
|-TypedefDecl 0x1fa42919e68 <line:235:1, col:24> col:24 referenced _invalid_parameter_handler 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
| `-PointerType 0x1fa42919de0 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|   `-AttributedType 0x1fa42919d80 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))' sugar
|     |-ParenType 0x1fa42919d30 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|     | `-FunctionProtoType 0x1fa4286fee0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|     |   |-BuiltinType 0x1fa40d5d590 'void'
|     |   |-PointerType 0x1fa42838000 'const wchar_t *'
|     |   | `-QualType 0x1fa42837fb1 'const wchar_t' const
|     |   |   `-TypedefType 0x1fa42837fb0 'wchar_t' sugar
|     |   |     |-Typedef 0x1fa428378a0 'wchar_t'
|     |   |     `-BuiltinType 0x1fa40d5d6b0 'unsigned short'
|     |   |-PointerType 0x1fa42838000 'const wchar_t *'
|     |   | `-QualType 0x1fa42837fb1 'const wchar_t' const
|     |   |   `-TypedefType 0x1fa42837fb0 'wchar_t' sugar
|     |   |     |-Typedef 0x1fa428378a0 'wchar_t'
|     |   |     `-BuiltinType 0x1fa40d5d6b0 'unsigned short'
|     |   |-PointerType 0x1fa42838000 'const wchar_t *'
|     |   | `-QualType 0x1fa42837fb1 'const wchar_t' const
|     |   |   `-TypedefType 0x1fa42837fb0 'wchar_t' sugar
|     |   |     |-Typedef 0x1fa428378a0 'wchar_t'
|     |   |     `-BuiltinType 0x1fa40d5d6b0 'unsigned short'
|     |   |-BuiltinType 0x1fa40d5d6d0 'unsigned int'
|     |   `-TypedefType 0x1fa42838210 'uintptr_t' sugar
|     |     |-Typedef 0x1fa40d5e3b0 'uintptr_t'
|     |     `-BuiltinType 0x1fa40d5d710 'unsigned long long'
|     `-ParenType 0x1fa42919d30 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|       `-FunctionProtoType 0x1fa4286fee0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|         |-BuiltinType 0x1fa40d5d590 'void'
|         |-PointerType 0x1fa42838000 'const wchar_t *'
|         | `-QualType 0x1fa42837fb1 'const wchar_t' const
|         |   `-TypedefType 0x1fa42837fb0 'wchar_t' sugar
|         |     |-Typedef 0x1fa428378a0 'wchar_t'
|         |     `-BuiltinType 0x1fa40d5d6b0 'unsigned short'
|         |-PointerType 0x1fa42838000 'const wchar_t *'
|         | `-QualType 0x1fa42837fb1 'const wchar_t' const
|         |   `-TypedefType 0x1fa42837fb0 'wchar_t' sugar
|         |     |-Typedef 0x1fa428378a0 'wchar_t'
|         |     `-BuiltinType 0x1fa40d5d6b0 'unsigned short'
|         |-PointerType 0x1fa42838000 'const wchar_t *'
|         | `-QualType 0x1fa42837fb1 'const wchar_t' const
|         |   `-TypedefType 0x1fa42837fb0 'wchar_t' sugar
|         |     |-Typedef 0x1fa428378a0 'wchar_t'
|         |     `-BuiltinType 0x1fa40d5d6b0 'unsigned short'
|         |-BuiltinType 0x1fa40d5d6d0 'unsigned int'
|         `-TypedefType 0x1fa42838210 'uintptr_t' sugar
|           |-Typedef 0x1fa40d5e3b0 'uintptr_t'
|           `-BuiltinType 0x1fa40d5d710 'unsigned long long'
|-FunctionDecl 0x1fa4291a060 <line:238:9, col:119> col:44 _set_invalid_parameter_handler '_invalid_parameter_handler (_invalid_parameter_handler) __attribute__((cdecl))':'_invalid_parameter_handler (_invalid_parameter_handler)'
| `-ParmVarDecl 0x1fa42919ef0 <col:84, col:111> col:111 _Handler '_invalid_parameter_handler':'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|-FunctionDecl 0x1fa428c2108 <line:239:9, col:79> col:44 _get_invalid_parameter_handler '_invalid_parameter_handler (void) __attribute__((cdecl))':'_invalid_parameter_handler (void)'
|-FunctionDecl 0x1fa428c22f0 <line:245:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x1fa428c2530 <line:248:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x1fa428c23c0 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x1fa428c2780 <line:249:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1fa428c2608 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x1fa428c29a0 <line:252:9, col:48> col:33 __doserrno 'unsigned long *(void) __attribute__((cdecl))':'unsigned long *(void)'
|-FunctionDecl 0x1fa428c2be0 <line:255:1, col:56> col:17 _set_doserrno 'errno_t (unsigned long) __attribute__((cdecl))':'errno_t (unsigned long)'
| `-ParmVarDecl 0x1fa428c2a70 <col:36, col:50> col:50 _Value 'unsigned long'
|-FunctionDecl 0x1fa428c2e30 <line:256:1, col:59> col:17 _get_doserrno 'errno_t (unsigned long *) __attribute__((cdecl))':'errno_t (unsigned long *)'
| `-ParmVarDecl 0x1fa428c2cb8 <col:37, col:53> col:53 _Value 'unsigned long *'
|-FunctionDecl 0x1fa428c30f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:259:77> col:59 __sys_errlist 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x1fa428c3190 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa428c3450 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:262:72> col:57 __sys_nerr 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x1fa428c34f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x1fa428c3638 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:288:9, col:20> col:20 __argc 'int' extern
|-VarDecl 0x1fa428c36d0 <line:289:9, col:24> col:24 __argv 'char **' extern
|-VarDecl 0x1fa428c3768 <line:290:9, col:27> col:27 __wargv 'wchar_t **' extern
|-VarDecl 0x1fa428c3800 <line:306:9, col:24> col:24 _environ 'char **' extern
|-VarDecl 0x1fa428c3898 <line:307:9, col:27> col:27 _wenviron 'wchar_t **' extern
|-VarDecl 0x1fa428c39f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:311:68> col:68 _pgmptr 'char *' extern
| `-DeprecatedAttr 0x1fa428c3a58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_pgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x1fa428c3c58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:312:72> col:72 _wpgmptr 'wchar_t *' extern
| `-DeprecatedAttr 0x1fa428c3cc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_wpgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa428cb050 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:339:1, col:61> col:17 _get_pgmptr 'errno_t (char **) __attribute__((cdecl))':'errno_t (char **)'
| `-ParmVarDecl 0x1fa428c3e08 <col:47, col:55> col:55 _Value 'char **'
|-FunctionDecl 0x1fa428cb2a0 <line:340:1, col:65> col:17 _get_wpgmptr 'errno_t (wchar_t **) __attribute__((cdecl))':'errno_t (wchar_t **)'
| `-ParmVarDecl 0x1fa428cb128 <col:48, col:59> col:59 _Value 'wchar_t **'
|-VarDecl 0x1fa428cb438 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:346:64> col:64 _fmode 'int' extern
| `-DeprecatedAttr 0x1fa428cb4a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_fmode instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa428cb6c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:353:9, col:50> col:25 _set_fmode 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x1fa428cb5e8 <col:41, col:45> col:45 _Mode 'int'
|-FunctionDecl 0x1fa428cb870 <line:354:9, col:54> col:25 _get_fmode 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1fa428cb798 <col:42, col:48> col:48 _PMode 'int *'
|-FunctionDecl 0x1fa428cbac0 <line:376:43> col:43 implicit exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x1fa428cbb60 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1fa428cbbd0 prev 0x1fa428cbac0 <col:9, col:62> col:43 exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x1fa428cb948 <col:53, col:57> col:57 _Code 'int'
|-FunctionDecl 0x1fa428cbd80 <line:378:43> col:43 implicit _exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x1fa428cbe20 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1fa428cbe90 prev 0x1fa428cbd80 <col:9, col:63> col:43 _exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x1fa428cbca8 <col:54, col:58> col:58 _Code 'int'
|-FunctionDecl 0x1fa428ca040 <line:379:43> col:43 implicit abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x1fa428ca0e0 prev 0x1fa428ca040 <col:9, col:53> col:43 abort 'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1fa428ca3a0 <line:382:9, col:99> col:30 _set_abort_behavior 'unsigned int (unsigned int, unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int, unsigned int)'
| |-ParmVarDecl 0x1fa428ca1b0 <col:55, col:68> col:68 _Flags 'unsigned int'
| `-ParmVarDecl 0x1fa428ca230 <col:81, col:94> col:94 _Mask 'unsigned int'
|-FunctionDecl 0x1fa428ca598 <line:384:19> col:19 implicit abs 'int (int)' extern
| |-ParmVarDecl 0x1fa428ca638 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1fa428ca6a8 <col:19> Implicit
| `-ConstAttr 0x1fa428ca700 <col:19> Implicit
|-FunctionDecl 0x1fa428ca728 prev 0x1fa428ca598 <col:1, col:34> col:19 abs 'int (int)'
| |-ParmVarDecl 0x1fa428ca480 <col:28, col:32> col:32 _X 'int'
| |-NoThrowAttr 0x1fa428ca818 <col:19> Inherited Implicit
| `-ConstAttr 0x1fa428ca840 <col:19> Inherited Implicit
|-FunctionDecl 0x1fa428ca9c8 <line:385:19> col:19 implicit labs 'long (long)' extern
| |-ParmVarDecl 0x1fa428caa68 <<invalid sloc>> <invalid sloc> 'long'
| |-NoThrowAttr 0x1fa428caad8 <col:19> Implicit
| `-ConstAttr 0x1fa428cab30 <col:19> Implicit
|-FunctionDecl 0x1fa428cab58 prev 0x1fa428ca9c8 <col:1, col:36> col:19 labs 'long (long)'
| |-ParmVarDecl 0x1fa428ca880 <col:29, col:34> col:34 _X 'long'
| |-NoThrowAttr 0x1fa428cac48 <col:19> Inherited Implicit
| `-ConstAttr 0x1fa428cac70 <col:19> Inherited Implicit
|-FunctionDecl 0x1fa428cadf8 <line:386:19> col:19 implicit llabs 'long long (long long)' extern
| |-ParmVarDecl 0x1fa428cae98 <<invalid sloc>> <invalid sloc> 'long long'
| |-NoThrowAttr 0x1fa428caf08 <col:19> Implicit
| `-ConstAttr 0x1fa428caf60 <col:19> Implicit
|-FunctionDecl 0x1fa428caf88 prev 0x1fa428cadf8 <col:1, col:42> col:19 llabs 'long long (long long)'
| |-ParmVarDecl 0x1fa428cacb0 <col:30, col:40> col:40 _X 'long long'
| |-NoThrowAttr 0x1fa428cc0a8 <col:19> Inherited Implicit
| `-ConstAttr 0x1fa428cc0d0 <col:19> Inherited Implicit
|-FunctionDecl 0x1fa428cc1d8 <line:388:9, col:42> col:28 _abs64 'long long (long long) __attribute__((cdecl))':'long long (long long)'
| `-ParmVarDecl 0x1fa428cc110 <col:35> col:42 'long long'
|-FunctionDecl 0x1fa428cc4d8 <line:426:9, col:53> col:24 atexit 'int (void (*)(void) __attribute__((cdecl))) __attribute__((cdecl))':'int (void (*)(void) __attribute__((cdecl)))'
| `-ParmVarDecl 0x1fa428cc370 <col:31, col:45> col:46 'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x1fa428cc6f8 <line:428:24, col:71> col:40 atof 'double (const char *) __attribute__((cdecl))':'double (const char *)'
| `-ParmVarDecl 0x1fa428cc5b0 <col:52, col:64> col:64 _String 'const char *'
|-FunctionDecl 0x1fa428cc9f0 <line:429:24, col:102> col:40 _atof_l 'double (const char *, _locale_t) __attribute__((cdecl))':'double (const char *, _locale_t)'
| |-ParmVarDecl 0x1fa428cc7d0 <col:55, col:67> col:67 _String 'const char *'
| `-ParmVarDecl 0x1fa428cc848 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa428ccc18 <line:430:43, col:86> col:58 atoi 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1fa428ccad0 <col:70, col:82> col:82 _Str 'const char *'
|-FunctionDecl 0x1fa428ccf10 <line:431:24, col:98> col:39 _atoi_l 'int (const char *, _locale_t) __attribute__((cdecl))':'int (const char *, _locale_t)'
| |-ParmVarDecl 0x1fa428cccf0 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1fa428ccd68 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa428c50d8 <line:432:24, col:67> col:39 atol 'long (const char *) __attribute__((cdecl))':'long (const char *)'
| `-ParmVarDecl 0x1fa428ccff0 <col:51, col:63> col:63 _Str 'const char *'
|-FunctionDecl 0x1fa428c53d0 <line:433:24, col:98> col:39 _atol_l 'long (const char *, _locale_t) __attribute__((cdecl))':'long (const char *, _locale_t)'
| |-ParmVarDecl 0x1fa428c51b0 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1fa428c5228 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa428c55f8 <line:434:24, col:71> col:42 atoll 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x1fa428c54b0 <col:55, col:67> col:67 _Str 'const char *'
|-FunctionDecl 0x1fa428c58f0 <line:435:24, col:102> col:42 _atoll_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x1fa428c56d0 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x1fa428c5748 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa428c81c0 <line:439:24, line:441:97> line:439:39 bsearch_s 'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x1fa428c59d0 <col:54, col:67> col:67 _Key 'const void *'
| |-ParmVarDecl 0x1fa428c5a50 <col:124, col:137> col:137 _Base 'const void *'
| |-ParmVarDecl 0x1fa428c5ac8 <line:440:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1fa428c5b40 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1fa428c5ea0 <line:441:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x1fa428c5f20 <col:82, col:89> col:89 _Context 'void *'
|-FunctionDecl 0x1fa428c8948 <line:443:24, line:445:72> line:443:39 bsearch 'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x1fa428c82c0 <col:52, col:65> col:65 _Key 'const void *'
| |-ParmVarDecl 0x1fa428c8340 <col:122, col:135> col:135 _Base 'const void *'
| |-ParmVarDecl 0x1fa428c83b8 <line:444:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa428c8430 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa428c8708 <line:445:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x1fa428ce0d0 <line:448:9, line:450:96> line:448:22 qsort_s 'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x1fa428c8a40 <col:85, col:92> col:92 _Base 'void *'
| |-ParmVarDecl 0x1fa428c8ab8 <line:449:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1fa428c8b30 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1fa428c8d98 <line:450:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x1fa428c8e18 <col:82, col:88> col:88 _Context 'void *'
|-FunctionDecl 0x1fa428ce698 <line:452:9, line:454:72> line:452:22 qsort 'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x1fa428ce1c8 <col:84, col:91> col:91 _Base 'void *'
| |-ParmVarDecl 0x1fa428ce240 <line:453:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa428ce2b8 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa428ce498 <line:454:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x1fa428ce8d8 <line:456:47> col:47 implicit _byteswap_ushort 'unsigned short (unsigned short)' extern
| |-ParmVarDecl 0x1fa428ce978 <<invalid sloc>> <invalid sloc> 'unsigned short'
| |-NoThrowAttr 0x1fa428ce9e8 <col:47> Implicit
| `-ConstAttr 0x1fa428cea40 <col:47> Implicit
|-FunctionDecl 0x1fa428cea68 prev 0x1fa428ce8d8 <col:24, col:90> col:47 _byteswap_ushort 'unsigned short (unsigned short)'
| |-ParmVarDecl 0x1fa428ce788 <col:69, col:84> col:84 _Short 'unsigned short'
| |-NoThrowAttr 0x1fa428ceb58 <col:47> Inherited Implicit
| `-ConstAttr 0x1fa428ceb80 <col:47> Inherited Implicit
|-FunctionDecl 0x1fa428ced08 <line:457:47> col:47 implicit _byteswap_ulong 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x1fa428ceda8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x1fa428cee18 <col:47> Implicit
| `-ConstAttr 0x1fa428cee70 <col:47> Implicit
|-FunctionDecl 0x1fa428cee98 prev 0x1fa428ced08 <col:24, col:88> col:47 _byteswap_ulong 'unsigned long (unsigned long)'
| |-ParmVarDecl 0x1fa428cebc0 <col:69, col:83> col:83 _Long 'unsigned long'
| |-NoThrowAttr 0x1fa428cef88 <col:47> Inherited Implicit
| `-ConstAttr 0x1fa428cefb0 <col:47> Inherited Implicit
|-FunctionDecl 0x1fa428d0168 <line:458:49> col:49 implicit _byteswap_uint64 'unsigned long long (unsigned long long)' extern
| |-ParmVarDecl 0x1fa428d0208 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-NoThrowAttr 0x1fa428d0278 <col:49> Implicit
| `-ConstAttr 0x1fa428d02d0 <col:49> Implicit
|-FunctionDecl 0x1fa428d02f8 prev 0x1fa428d0168 <col:24, col:94> col:49 _byteswap_uint64 'unsigned long long (unsigned long long)'
| |-ParmVarDecl 0x1fa428ceff0 <col:71, col:88> col:88 _Int64 'unsigned long long'
| |-NoThrowAttr 0x1fa428d03e8 <col:49> Inherited Implicit
| `-ConstAttr 0x1fa428d0410 <col:49> Inherited Implicit
|-FunctionDecl 0x1fa428d0698 <line:459:24, col:85> col:39 div 'div_t (int, int) __attribute__((cdecl))':'div_t (int, int)'
| |-ParmVarDecl 0x1fa428d0478 <col:48, col:52> col:52 _Numerator 'int'
| `-ParmVarDecl 0x1fa428d04f8 <col:69, col:73> col:73 _Denominator 'int'
|-FunctionDecl 0x1fa428d0918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:462:109> col:74 getenv 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1fa428d0838 <col:88, col:101> col:101 _VarName 'const char *'
| `-DeprecatedAttr 0x1fa428d09c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _dupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa428d0ed8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:464:28, col:177> col:44 getenv_s 'errno_t (size_t *, char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (size_t *, char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1fa428d0b58 <col:59, col:68> col:68 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x1fa428d0bd8 <col:110, col:117> col:117 _DstBuf 'char *'
| |-ParmVarDecl 0x1fa428d0c50 <col:131, col:139> col:139 _DstSize 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1fa428d0cd0 <col:156, col:169> col:169 _VarName 'const char *'
|-FunctionDecl 0x1fa428cf2e0 <line:472:28, col:212> col:44 _dupenv_s 'errno_t (char **, size_t *, const char *) __attribute__((cdecl))':'errno_t (char **, size_t *, const char *)'
| |-ParmVarDecl 0x1fa428d0fc8 <col:127, col:134> col:134 _PBuffer 'char **'
| |-ParmVarDecl 0x1fa428cf090 <col:154, col:163> col:163 _PBufferSizeInBytes 'size_t *'
| `-ParmVarDecl 0x1fa428cf110 <col:191, col:204> col:204 _VarName 'const char *'
|-FunctionDecl 0x1fa428cf748 <line:479:28, col:141> col:44 _itoa_s 'errno_t (int, char *, size_t, int) __attribute__((cdecl))':'errno_t (int, char *, size_t, int)'
| |-ParmVarDecl 0x1fa428cf3c8 <col:57, col:61> col:61 _Value 'int'
| |-ParmVarDecl 0x1fa428cf448 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1fa428cf4c0 <col:112, col:119> col:119 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa428cf540 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x1fa428cfbc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:481:79 _itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x1fa428cf930 <col:91, col:96> col:96 _Value 'int'
| |-ParmVarDecl 0x1fa428cf9b0 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1fa428cfa30 <col:146, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x1fa428cfc80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa428d31b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:482:28, col:145> col:44 _i64toa_s 'errno_t (long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long long, char *, size_t, int)'
| |-ParmVarDecl 0x1fa428cfdc8 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x1fa428cfe48 <col:95, col:102> col:102 _DstBuf 'char *'
| |-ParmVarDecl 0x1fa428cfec0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa428cff40 <col:135, col:139> col:139 _Radix 'int'
|-FunctionDecl 0x1fa428d3608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:483:140> col:59 _i64toa 'char *(long long, char *, int) __attribute__((cdecl))':'char *(long long, char *, int)'
| |-ParmVarDecl 0x1fa428d3368 <col:72, col:80> col:80 _Val 'long long'
| |-ParmVarDecl 0x1fa428d33e8 <col:109, col:116> col:116 _DstBuf 'char *'
| |-ParmVarDecl 0x1fa428d3468 <col:130, col:134> col:134 _Radix 'int'
| `-DeprecatedAttr 0x1fa428d36c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa428d3b88 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:484:28, col:155> col:44 _ui64toa_s 'errno_t (unsigned long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, char *, size_t, int)'
| |-ParmVarDecl 0x1fa428d3808 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x1fa428d3888 <col:105, col:112> col:112 _DstBuf 'char *'
| |-ParmVarDecl 0x1fa428d3900 <col:126, col:133> col:133 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa428d3980 <col:145, col:149> col:149 _Radix 'int'
|-FunctionDecl 0x1fa428d3fd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:485:151> col:60 _ui64toa 'char *(unsigned long long, char *, int) __attribute__((cdecl))':'char *(unsigned long long, char *, int)'
| |-ParmVarDecl 0x1fa428d3d38 <col:74, col:91> col:91 _Val 'unsigned long long'
| |-ParmVarDecl 0x1fa428d3db8 <col:120, col:127> col:127 _DstBuf 'char *'
| |-ParmVarDecl 0x1fa428d3e38 <col:141, col:145> col:145 _Radix 'int'
| `-DeprecatedAttr 0x1fa428d10b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa428d12d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:486:24, col:75> col:40 _atoi64 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x1fa428d11f8 <col:55, col:68> col:68 _String 'const char *'
|-FunctionDecl 0x1fa428d1528 <line:487:24, col:105> col:40 _atoi64_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x1fa428d13b0 <col:57, col:70> col:70 _String 'const char *'
| `-ParmVarDecl 0x1fa428d1428 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa428d18a8 <line:488:24, col:136> col:40 _strtoi64 'long long (const char *, char **, int) __attribute__((cdecl))':'long long (const char *, char **, int)'
| |-ParmVarDecl 0x1fa428d1608 <col:57, col:70> col:70 _String 'const char *'
| |-ParmVarDecl 0x1fa428d1688 <col:104, col:112> col:112 _EndPtr 'char **'
| `-ParmVarDecl 0x1fa428d1708 <col:126, col:130> col:130 _Radix 'int'
|-FunctionDecl 0x1fa428d1d10 <line:489:24, col:166> col:40 _strtoi64_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1fa428d1990 <col:59, col:72> col:72 _String 'const char *'
| |-ParmVarDecl 0x1fa428d1a10 <col:106, col:114> col:114 _EndPtr 'char **'
| |-ParmVarDecl 0x1fa428d1a90 <col:128, col:132> col:132 _Radix 'int'
| `-ParmVarDecl 0x1fa428d1b08 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa428d20c0 <line:490:24, col:146> col:49 _strtoui64 'unsigned long long (const char *, char **, int) __attribute__((cdecl))':'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x1fa428d1e00 <col:67, col:80> col:80 _String 'const char *'
| |-ParmVarDecl 0x1fa428d1e80 <col:114, col:122> col:122 _EndPtr 'char **'
| `-ParmVarDecl 0x1fa428d1f00 <col:136, col:140> col:140 _Radix 'int'
|-FunctionDecl 0x1fa428d2530 <line:491:24, col:177> col:49 _strtoui64_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1fa428d21a8 <col:69, col:82> col:82 _String 'const char *'
| |-ParmVarDecl 0x1fa428d2228 <col:116, col:124> col:124 _EndPtr 'char **'
| |-ParmVarDecl 0x1fa428d22a8 <col:138, col:143> col:143 _Radix 'int'
| `-ParmVarDecl 0x1fa428d2320 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa428d2868 <line:492:24, col:88> col:39 ldiv 'ldiv_t (long, long) __attribute__((cdecl))':'ldiv_t (long, long)'
| |-ParmVarDecl 0x1fa428d2648 <col:49, col:54> col:54 _Numerator 'long'
| `-ParmVarDecl 0x1fa428d26c8 <col:71, col:76> col:76 _Denominator 'long'
|-FunctionDecl 0x1fa428d2b88 <line:493:24, col:100> col:40 lldiv 'lldiv_t (long long, long long) __attribute__((cdecl))':'lldiv_t (long long, long long)'
| |-ParmVarDecl 0x1fa428d2968 <col:51, col:61> col:61 _Numerator 'long long'
| `-ParmVarDecl 0x1fa428d29e8 <col:78, col:88> col:88 _Denominator 'long long'
|-FunctionDecl 0x1fa428d2fe8 <line:515:28, col:140> col:44 _ltoa_s 'errno_t (long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long, char *, size_t, int)'
| |-ParmVarDecl 0x1fa428d2c68 <col:57, col:62> col:62 _Val 'long'
| |-ParmVarDecl 0x1fa428d2ce8 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1fa428d2d60 <col:111, col:118> col:118 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa428d2de0 <col:130, col:134> col:134 _Radix 'int'
|-FunctionDecl 0x1fa428cd3e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:517:79 _ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x1fa428cd148 <col:91, col:97> col:97 _Value 'long'
| |-ParmVarDecl 0x1fa428cd1c8 <col:129, col:135> col:135 _Dest 'char *'
| |-ParmVarDecl 0x1fa428cd248 <col:147, col:152> col:152 _Radix 'int'
| `-DeprecatedAttr 0x1fa428cd4a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa428cd810 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:518:24, col:128> col:39 mblen 'int (const char *, size_t) __attribute__((cdecl))':'int (const char *, size_t)'
| |-ParmVarDecl 0x1fa428cd5e8 <col:89, col:102> col:102 _Ch 'const char *'
| `-ParmVarDecl 0x1fa428cd660 <col:112, col:119> col:119 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa428cdbb8 <line:519:24, col:159> col:39 _mblen_l 'int (const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fa428cd8f0 <col:92, col:105> col:105 _Ch 'const char *'
| |-ParmVarDecl 0x1fa428cd968 <col:115, col:122> col:122 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa428cd9e0 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa428cdd78 <line:520:24, col:73> col:39 _mbstrlen 'size_t (const char *) __attribute__((cdecl))':'size_t (const char *)'
| `-ParmVarDecl 0x1fa428cdca0 <col:56, col:69> col:69 _Str 'const char *'
|-FunctionDecl 0x1fa428da140 <line:521:24, col:102> col:39 _mbstrlen_l 'size_t (const char *, _locale_t) __attribute__((cdecl))':'size_t (const char *, _locale_t)'
| |-ParmVarDecl 0x1fa428cde50 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x1fa428cdec8 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa428da390 <line:522:24, col:96> col:39 _mbstrnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1fa428da220 <col:57, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1fa428da298 <col:80, col:87> col:87 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa428da730 <line:523:24, col:126> col:39 _mbstrnlen_l 'size_t (const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fa428da470 <col:59, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x1fa428da4e8 <col:82, col:89> col:89 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa428da560 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa428daae8 <line:524:9, col:170> col:24 mbtowc 'int (wchar_t *, const char *, size_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x1fa428da810 <col:54, col:64> col:64 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x1fa428da890 <col:122, col:135> col:135 _SrcCh 'const char *'
| `-ParmVarDecl 0x1fa428da908 <col:148, col:155> col:155 _SrcSizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa428daf40 <line:525:9, col:201> col:24 _mbtowc_l 'int (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fa428dabc8 <col:57, col:67> col:67 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x1fa428dac48 <col:125, col:138> col:138 _SrcCh 'const char *'
| |-ParmVarDecl 0x1fa428dacc0 <col:151, col:158> col:158 _SrcSizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa428dad38 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa428d5420 <line:526:28, col:271> col:44 mbstowcs_s 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t)'
| |-ParmVarDecl 0x1fa428db028 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1fa428db0a0 <col:155, col:165> col:165 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1fa428d50f0 <col:179, col:186> col:186 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa428d5170 <col:227, col:240> col:240 _SrcBuf 'const char *'
| `-ParmVarDecl 0x1fa428d51e8 <col:254, col:261> col:261 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa428d58a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:528:56 mbstowcs 'size_t (wchar_t *, const char *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x1fa428d55d0 <col:97, col:106> col:106 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1fa428d5650 <col:120, col:134> col:134 _Source 'const char *'
| |-ParmVarDecl 0x1fa428d56c8 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fa428d5958 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using mbstowcs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa428d5f58 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:530:28, col:301> col:44 _mbstowcs_s_l 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fa428d5a98 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1fa428d5b10 <col:158, col:168> col:168 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1fa428d5b88 <col:182, col:189> col:189 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa428d5c08 <col:230, col:243> col:243 _SrcBuf 'const char *'
| |-ParmVarDecl 0x1fa428d5c80 <col:257, col:264> col:264 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa428d5cf8 <col:284, col:294> col:294 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa428db598 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:532:59 _mbstowcs_l 'size_t (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fa428db220 <col:149, col:158> col:158 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1fa428db2a0 <col:172, col:186> col:186 _Source 'const char *'
| |-ParmVarDecl 0x1fa428db318 <col:200, col:208> col:208 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa428db390 <col:228, col:239> col:239 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1fa428db658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _mbstowcs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa428db858 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:534:24, col:48> col:39 rand 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1fa428dba08 <line:539:28, col:73> col:43 _set_error_mode 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1fa428db928 <col:64, col:68> col:68 _Mode 'int'
|-FunctionDecl 0x1fa428dbc20 <line:541:9, col:53> col:24 srand 'void (unsigned int) __attribute__((cdecl))':'void (unsigned int)'
| `-ParmVarDecl 0x1fa428dbae0 <col:35, col:48> col:48 _Seed 'unsigned int'
|-FunctionDecl 0x1fa428dbee0 <line:542:39> col:39 implicit strtod 'double (const char *, char **)' extern
| |-ParmVarDecl 0x1fa428dbf80 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fa428dbfe8 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x1fa428dc060 prev 0x1fa428dbee0 <col:24, col:112> col:39 strtod 'double (const char *, char **)'
| |-ParmVarDecl 0x1fa428dbcf8 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1fa428dbd78 <col:97, col:105> col:105 _EndPtr 'char **'
|-FunctionDecl 0x1fa428dc438 <line:543:24, col:143> col:39 _strtod_l 'double (const char *, char **, _locale_t) __attribute__((cdecl))':'double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x1fa428dc160 <col:56, col:69> col:69 _Str 'const char *'
| |-ParmVarDecl 0x1fa428dc1e0 <col:100, col:108> col:108 _EndPtr 'char **'
| `-ParmVarDecl 0x1fa428dc258 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa428dc7b8 <line:544:39> col:39 implicit strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1fa428dc858 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1fa428dc8c0 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1fa428dc928 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1fa428dc9a8 prev 0x1fa428dc7b8 <col:24, col:130> col:39 strtol 'long (const char *, char **, int)'
| |-ParmVarDecl 0x1fa428dc520 <col:53, col:66> col:66 _Str 'const char *'
| |-ParmVarDecl 0x1fa428dc5a0 <col:97, col:105> col:105 _EndPtr 'char **'
| `-ParmVarDecl 0x1fa428dc620 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x1fa428dce10 <line:545:24, col:158> col:39 _strtol_l 'long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1fa428dca90 <col:56, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x1fa428dcb10 <col:99, col:106> col:106 _EndPtr 'char **'
| |-ParmVarDecl 0x1fa428dcb90 <col:120, col:124> col:124 _Radix 'int'
| `-ParmVarDecl 0x1fa428dcc08 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa428dd170 <line:546:43> col:43 implicit strtoll 'long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1fa428dd210 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1fa428dd278 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1fa428dd2e0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1fa428dd360 prev 0x1fa428dd170 <col:24, col:135> col:43 strtoll 'long long (const char *, char **, int)'
| |-ParmVarDecl 0x1fa428dcf00 <col:58, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x1fa428dcf80 <col:102, col:110> col:110 _EndPtr 'char **'
| `-ParmVarDecl 0x1fa428dd000 <col:124, col:128> col:128 _Radix 'int'
|-FunctionDecl 0x1fa428dd700 <line:547:24, col:166> col:43 _strtoll_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1fa428dd448 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x1fa428dd4c8 <col:105, col:113> col:113 _EndPtr 'char **'
| |-ParmVarDecl 0x1fa428dd548 <col:127, col:131> col:131 _Radix 'int'
| `-ParmVarDecl 0x1fa428dd5c0 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa428dda88 <line:548:46> col:46 implicit strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1fa428ddb28 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1fa428ddb90 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1fa428ddbf8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1fa428ddc78 prev 0x1fa428dda88 <col:24, col:137> col:46 strtoul 'unsigned long (const char *, char **, int)'
| |-ParmVarDecl 0x1fa428dd7f0 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x1fa428dd870 <col:105, col:113> col:113 _EndPtr 'char **'
| `-ParmVarDecl 0x1fa428dd8f0 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x1fa428d6100 <line:549:24, col:160> col:46 _strtoul_l 'unsigned long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1fa428ddd60 <col:57, col:70> col:70 _Str 'const char *'
| |-ParmVarDecl 0x1fa428ddde0 <col:101, col:108> col:108 _EndPtr 'char **'
| |-ParmVarDecl 0x1fa428dde60 <col:122, col:126> col:126 _Radix 'int'
| `-ParmVarDecl 0x1fa428dded8 <col:143, col:153> col:153 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa428d6410 <line:550:51> col:51 implicit strtoull 'unsigned long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1fa428d64b0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1fa428d6518 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1fa428d6580 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1fa428d6600 prev 0x1fa428d6410 <col:24, col:143> col:51 strtoull 'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x1fa428d61f0 <col:67, col:80> col:80 _Str 'const char *'
| |-ParmVarDecl 0x1fa428d6270 <col:111, col:119> col:119 _EndPtr 'char **'
| `-ParmVarDecl 0x1fa428d62f0 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x1fa428d69a0 <line:551:24, col:174> col:51 _strtoull_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1fa428d66e8 <col:70, col:83> col:83 _Str 'const char *'
| |-ParmVarDecl 0x1fa428d6768 <col:114, col:122> col:122 _EndPtr 'char **'
| |-ParmVarDecl 0x1fa428d67e8 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x1fa428d6860 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa428d6c80 <line:552:44> col:44 implicit strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0x1fa428d6d20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fa428d6d88 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x1fa428d6e00 prev 0x1fa428d6c80 <col:24, col:118> col:44 strtold 'long double (const char *, char **)'
| |-ParmVarDecl 0x1fa428d6a90 <col:59, col:72> col:72 _Str 'const char *'
| `-ParmVarDecl 0x1fa428d6b10 <col:103, col:111> col:111 _EndPtr 'char **'
|-FunctionDecl 0x1fa428d71f8 <line:553:24, col:149> col:44 _strtold_l 'long double (const char *, char **, _locale_t) __attribute__((cdecl))':'long double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x1fa428d6ee0 <col:62, col:75> col:75 _Str 'const char *'
| |-ParmVarDecl 0x1fa428d6f60 <col:106, col:114> col:114 _EndPtr 'char **'
| `-ParmVarDecl 0x1fa428d6fd8 <col:132, col:142> col:142 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa428d74d0 <line:554:38> col:38 implicit strtof 'float (const char *, char **)' extern
| |-ParmVarDecl 0x1fa428d7570 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fa428d75d8 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x1fa428d7650 prev 0x1fa428d74d0 <col:24, col:111> col:38 strtof 'float (const char *, char **)'
| |-ParmVarDecl 0x1fa428d72e0 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1fa428d7360 <col:96, col:104> col:104 _EndPtr 'char **'
|-FunctionDecl 0x1fa428d7a08 <line:555:24, col:142> col:38 _strtof_l 'float (const char *, char **, _locale_t) __attribute__((cdecl))':'float (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x1fa428d7730 <col:55, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x1fa428d77b0 <col:99, col:107> col:107 _EndPtr 'char **'
| `-ParmVarDecl 0x1fa428d7828 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa428d7bd0 <line:560:9, col:60> col:21 system 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1fa428d7af0 <col:39, col:52> col:52 _Command 'const char *'
|-FunctionDecl 0x1fa428d8028 <line:564:28, col:150> col:44 _ultoa_s 'errno_t (unsigned long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, char *, size_t, int)'
| |-ParmVarDecl 0x1fa428d7ca8 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x1fa428d7d28 <col:100, col:107> col:107 _DstBuf 'char *'
| |-ParmVarDecl 0x1fa428d7da0 <col:121, col:128> col:128 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa428d7e20 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x1fa428d94a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:566:79 _ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x1fa428d9208 <col:92, col:107> col:107 _Value 'unsigned long'
| |-ParmVarDecl 0x1fa428d9288 <col:139, col:145> col:145 _Dest 'char *'
| |-ParmVarDecl 0x1fa428d9308 <col:157, col:162> col:162 _Radix 'int'
| `-DeprecatedAttr 0x1fa428d9560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa428d9990 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:567:127> col:58 wctomb 'int (char *, wchar_t) __attribute__((cdecl))':'int (char *, wchar_t)'
| |-ParmVarDecl 0x1fa428d9768 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x1fa428d97e0 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1fa428d9a40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wctomb_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa428d9f18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:568:155> col:61 _wctomb_l 'int (char *, wchar_t, _locale_t) __attribute__((cdecl))':'int (char *, wchar_t, _locale_t)'
| |-ParmVarDecl 0x1fa428d9c48 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x1fa428d9cc0 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1fa428d9d38 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1fa428d9fd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctomb_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa428de4f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:570:28, col:200> col:44 wctomb_s 'errno_t (int *, char *, rsize_t, wchar_t) __attribute__((cdecl))':'errno_t (int *, char *, rsize_t, wchar_t)'
| |-ParmVarDecl 0x1fa428de180 <col:63, col:69> col:69 _SizeConverted 'int *'
| |-ParmVarDecl 0x1fa428de200 <col:142, col:149> col:149 _MbCh 'char *'
| |-ParmVarDecl 0x1fa428de278 <col:161, col:169> col:169 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1fa428de2f0 <col:188, col:196> col:196 _WCh 'wchar_t':'unsigned short'
|-FunctionDecl 0x1fa428dea00 <line:572:28, col:206> col:44 _wctomb_s_l 'errno_t (int *, char *, size_t, wchar_t, _locale_t) __attribute__((cdecl))':'errno_t (int *, char *, size_t, wchar_t, _locale_t)'
| |-ParmVarDecl 0x1fa428de5e8 <col:66, col:72> col:72 _SizeConverted 'int *'
| |-ParmVarDecl 0x1fa428de668 <col:121, col:128> col:128 _MbCh 'char *'
| |-ParmVarDecl 0x1fa428de6e0 <col:140, col:147> col:147 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa428de758 <col:166, col:174> col:174 _WCh 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1fa428de7d0 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa428def10 <line:573:28, col:263> col:44 wcstombs_s 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1fa428deaf0 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1fa428deb70 <col:164, col:171> col:171 _Dst 'char *'
| |-ParmVarDecl 0x1fa428debe8 <col:182, col:189> col:189 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa428dec60 <col:213, col:229> col:229 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1fa428decd8 <col:240, col:247> col:247 _MaxCountInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa428df3e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:575:56 wcstombs 'size_t (char *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1fa428df0c8 <col:97, col:103> col:103 _Dest 'char *'
| |-ParmVarDecl 0x1fa428df190 <col:117, col:134> col:134 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1fa428df208 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fa428df498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstombs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa428dfa98 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:576:28, col:294> col:44 _wcstombs_s_l 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fa428df5d8 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1fa428df658 <col:167, col:174> col:174 _Dst 'char *'
| |-ParmVarDecl 0x1fa428df6d0 <col:185, col:192> col:192 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa428df748 <col:216, col:232> col:232 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1fa428df7c0 <col:243, col:250> col:250 _MaxCountInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa428df838 <col:277, col:287> col:287 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa428dffc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:578:59 _wcstombs_l 'size_t (char *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fa428dfc58 <col:146, col:152> col:152 _Dest 'char *'
| |-ParmVarDecl 0x1fa428dfcd0 <col:166, col:183> col:183 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1fa428dfd48 <col:197, col:205> col:205 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa428dfdc0 <col:225, col:236> col:236 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1fa428e0088 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcstombs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa428d83a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:142> col:142 implicit calloc 'void *(unsigned long long, unsigned long long)' extern
| |-ParmVarDecl 0x1fa428d8440 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1fa428d84a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fa428d8520 prev 0x1fa428d83a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:224> col:142 calloc 'void *(unsigned long long, unsigned long long)'
| |-ParmVarDecl 0x1fa428d8178 <col:173, col:180> col:180 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa428d81f0 <col:212, col:219> col:219 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1fa428d85d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1fa428d8628 <line:615:33> restrict
|-FunctionDecl 0x1fa428d87c0 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:641:182> col:132 free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x1fa428d8680 <col:168, col:175> col:175 _Memory 'void *'
| `-NoAliasAttr 0x1fa428d8868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x1fa428d8a68 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:161> col:161 implicit malloc 'void *(unsigned long long)' extern
| `-ParmVarDecl 0x1fa428d8b08 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fa428d8b78 prev 0x1fa428d8a68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:204> col:161 malloc 'void *(unsigned long long)'
| |-ParmVarDecl 0x1fa428d88e8 <col:192, col:199> col:199 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1fa428d8c20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1fa428d8c78 <line:615:33> restrict
|-FunctionDecl 0x1fa428d8ef0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:142> col:142 implicit realloc 'void *(void *, unsigned long long)' extern
| |-ParmVarDecl 0x1fa428d8f90 <<invalid sloc>> <invalid sloc> 'void *'
| `-ParmVarDecl 0x1fa428d8ff8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fa428d9070 prev 0x1fa428d8ef0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:236> col:142 realloc 'void *(void *, unsigned long long)'
| |-ParmVarDecl 0x1fa428d8cd0 <col:181, col:188> col:188 _Memory 'void *'
| |-ParmVarDecl 0x1fa428d8d48 <col:221, col:228> col:228 _NewSize 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1fa428e01a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1fa428e01f8 <line:615:33> restrict
|-FunctionDecl 0x1fa428e0518 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:646:274> col:142 _recalloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x1fa428e0250 <col:183, col:190> col:190 _Memory 'void *'
| |-ParmVarDecl 0x1fa428e02c8 <col:223, col:230> col:230 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa428e0340 <col:262, col:269> col:269 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1fa428e05d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1fa428e0628 <line:615:33> restrict
|-FunctionDecl 0x1fa428e0758 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:647:191> col:132 _aligned_free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x1fa428e0680 <col:177, col:184> col:184 _Memory 'void *'
| `-NoAliasAttr 0x1fa428e0800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x1fa428e09f8 <col:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:648:218> col:142 _aligned_malloc 'void *(size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t)'
| |-ParmVarDecl 0x1fa428e0880 <col:182, col:189> col:189 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa428e08f8 <col:201, col:208> col:208 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1fa428e0aa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1fa428e0b00 <line:615:33> restrict
|-FunctionDecl 0x1fa428e0e18 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:649:246> col:142 _aligned_offset_malloc 'void *(size_t, size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t, size_t)'
| |-ParmVarDecl 0x1fa428e0b50 <col:189, col:196> col:196 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa428e0bc8 <col:208, col:215> col:215 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa428e0c40 <col:232, col:239> col:239 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1fa428e0ed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1fa428e0f28 <line:615:33> restrict
|-FunctionDecl 0x1fa42921e20 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:651:272> col:145 _aligned_realloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x1fa428e0f80 <col:193, col:200> col:200 _Memory 'void *'
| |-ParmVarDecl 0x1fa428e0ff8 <col:233, col:240> col:240 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa428e1070 <col:255, col:262> col:262 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1fa42921ed8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1fa42921f30 <line:615:33> restrict
|-FunctionDecl 0x1fa42922300 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:653:306> col:142 _aligned_recalloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x1fa42921f88 <col:191, col:198> col:198 _Memory 'void *'
| |-ParmVarDecl 0x1fa42922000 <col:231, col:238> col:238 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa42922078 <col:270, col:277> col:277 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa429220f0 <col:289, col:296> col:296 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1fa429223c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1fa42922418 <line:615:33> restrict
|-FunctionDecl 0x1fa42922718 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:655:300> col:145 _aligned_offset_realloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x1fa42922470 <col:200, col:207> col:207 _Memory 'void *'
| |-ParmVarDecl 0x1fa429224e8 <col:240, col:247> col:247 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa42922560 <col:262, col:269> col:269 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa429225d8 <col:286, col:293> col:293 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1fa429227d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1fa42922830 <line:615:33> restrict
|-FunctionDecl 0x1fa42922ca8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:657:334> col:142 _aligned_offset_recalloc 'void *(void *, size_t, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t, size_t)'
| |-ParmVarDecl 0x1fa42922888 <col:198, col:205> col:205 _Memory 'void *'
| |-ParmVarDecl 0x1fa42922900 <col:238, col:245> col:245 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa42922978 <col:277, col:284> col:284 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa429229f0 <col:296, col:303> col:303 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa42922a68 <col:320, col:327> col:327 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1fa42922d70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1fa42922dc8 <line:615:33> restrict
|-FunctionDecl 0x1fa42925110 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:658:73, col:176> col:88 _aligned_msize 'size_t (void *, size_t, size_t) __attribute__((cdecl))':'size_t (void *, size_t, size_t)'
| |-ParmVarDecl 0x1fa42924e50 <col:117, col:124> col:124 _Memory 'void *'
| |-ParmVarDecl 0x1fa42924ec8 <col:138, col:145> col:145 _Alignment 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa42924f40 <col:162, col:169> col:169 _Offset 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa42925568 <line:685:28, col:157> col:44 _itow_s 'errno_t (int, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (int, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1fa429251f8 <col:58, col:62> col:62 _Val 'int'
| |-ParmVarDecl 0x1fa42925270 <col:97, col:107> col:107 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1fa429252e8 <col:121, col:128> col:128 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa42925368 <col:147, col:151> col:151 _Radix 'int'
|-FunctionDecl 0x1fa429259e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:687:82 _itow 'wchar_t *(int, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(int, wchar_t *, int)'
| |-ParmVarDecl 0x1fa42925718 <col:94, col:99> col:99 _Value 'int'
| |-ParmVarDecl 0x1fa42925790 <col:131, col:140> col:140 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1fa42925810 <col:152, col:157> col:157 _Radix 'int'
| `-DeprecatedAttr 0x1fa42925a98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa42920f48 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:688:28, col:158> col:44 _ltow_s 'errno_t (long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1fa42925be0 <col:58, col:63> col:63 _Val 'long'
| |-ParmVarDecl 0x1fa42925c58 <col:98, col:108> col:108 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1fa42925cd0 <col:122, col:129> col:129 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa42925d50 <col:148, col:152> col:152 _Radix 'int'
|-FunctionDecl 0x1fa429213c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:690:82 _ltow 'wchar_t *(long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long, wchar_t *, int)'
| |-ParmVarDecl 0x1fa429210f8 <col:94, col:100> col:100 _Value 'long'
| |-ParmVarDecl 0x1fa42921170 <col:132, col:141> col:141 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1fa429211f0 <col:153, col:158> col:158 _Radix 'int'
| `-DeprecatedAttr 0x1fa42921478 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa42921938 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:691:28, col:168> col:44 _ultow_s 'errno_t (unsigned long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1fa429215c0 <col:59, col:73> col:73 _Val 'unsigned long'
| |-ParmVarDecl 0x1fa42921638 <col:108, col:118> col:118 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1fa429216b0 <col:132, col:139> col:139 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa42921730 <col:158, col:162> col:162 _Radix 'int'
|-FunctionDecl 0x1fa4291fe00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:693:82 _ultow 'wchar_t *(unsigned long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long, wchar_t *, int)'
| |-ParmVarDecl 0x1fa42921ae8 <col:95, col:110> col:110 _Value 'unsigned long'
| |-ParmVarDecl 0x1fa42921b60 <col:142, col:151> col:151 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1fa42921be0 <col:163, col:168> col:168 _Radix 'int'
| `-DeprecatedAttr 0x1fa4291feb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa42920220 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:694:24, col:118> col:39 wcstod 'double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1fa4291fff8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1fa42920078 <col:100, col:111> col:111 _EndPtr 'wchar_t **'
|-FunctionDecl 0x1fa429205c8 <line:695:24, col:148> col:39 _wcstod_l 'double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x1fa429202f8 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1fa42920378 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1fa429203f0 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa42920988 <line:696:24, col:129> col:39 wcstol 'long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1fa429206a8 <col:53, col:68> col:68 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1fa42920728 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1fa429207a8 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x1fa42925e60 <line:697:24, col:159> col:39 _wcstol_l 'long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1fa42920a68 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1fa42920ae8 <col:102, col:112> col:112 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1fa42920b68 <col:121, col:125> col:125 _Radix 'int'
| `-ParmVarDecl 0x1fa42920be0 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa42926228 <line:698:24, col:133> col:43 wcstoll 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1fa42925f48 <col:58, col:73> col:73 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1fa42925fc8 <col:104, col:114> col:114 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1fa42926048 <col:123, col:127> col:127 _Radix 'int'
|-FunctionDecl 0x1fa42926690 <line:699:24, col:164> col:43 _wcstoll_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1fa42926308 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1fa42926388 <col:107, col:117> col:117 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1fa42926408 <col:126, col:130> col:130 _Radix 'int'
| `-ParmVarDecl 0x1fa42926480 <col:147, col:157> col:157 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa42926a58 <line:700:24, col:137> col:46 wcstoul 'unsigned long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1fa42926778 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1fa429267f8 <col:107, col:118> col:118 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1fa42926878 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x1fa4291ee70 <line:701:24, col:167> col:46 _wcstoul_l 'unsigned long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1fa42926b38 <col:64, col:79> col:79 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1fa42926bb8 <col:110, col:120> col:120 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1fa42926c38 <col:129, col:133> col:133 _Radix 'int'
| `-ParmVarDecl 0x1fa42926cb0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa4291f238 <line:702:24, col:143> col:51 wcstoull 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1fa4291ef58 <col:67, col:82> col:82 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1fa4291efd8 <col:113, col:124> col:124 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1fa4291f058 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x1fa4291f6a0 <line:703:24, col:174> col:51 _wcstoull_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1fa4291f318 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1fa4291f398 <col:116, col:127> col:127 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1fa4291f418 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x1fa4291f490 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa4291f9b0 <line:704:24, col:124> col:44 wcstold 'long double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1fa4291f788 <col:59, col:75> col:75 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1fa4291f808 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
|-FunctionDecl 0x1fa4292ced0 <line:705:24, col:155> col:44 _wcstold_l 'long double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x1fa4291fa88 <col:62, col:78> col:78 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1fa4291fb08 <col:109, col:120> col:120 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1fa4291fb80 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa4292d1e0 <line:706:24, col:117> col:38 wcstof 'float (const wchar_t *, wchar_t **) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1fa4292cfb0 <col:52, col:68> col:68 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1fa4292d030 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
|-FunctionDecl 0x1fa4292d588 <line:707:24, col:148> col:38 _wcstof_l 'float (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x1fa4292d2b8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1fa4292d338 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1fa4292d3b0 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa4292d800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:711:118> col:78 _wgetenv 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1fa4292d728 <col:94, col:110> col:110 _VarName 'const wchar_t *'
| `-DeprecatedAttr 0x1fa4292d8a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wdupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa4292dd58 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:712:28, col:198> col:44 _wgetenv_s 'errno_t (size_t *, wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1fa4292d9e8 <col:61, col:70> col:70 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x1fa4292da60 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1fa4292dad8 <col:143, col:150> col:150 _DstSizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa4292db50 <col:174, col:190> col:190 _VarName 'const wchar_t *'
|-FunctionDecl 0x1fa4292a0f0 <line:720:28, col:214> col:44 _wdupenv_s 'errno_t (wchar_t **, size_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t **, size_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fa4292de48 <col:127, col:137> col:137 _Buffer 'wchar_t **'
| |-ParmVarDecl 0x1fa42929ea0 <col:156, col:164> col:164 _BufferSizeInWords 'size_t *'
| `-ParmVarDecl 0x1fa42929f18 <col:191, col:206> col:206 _VarName 'const wchar_t *'
|-FunctionDecl 0x1fa4292a348 <line:728:9, col:65> col:21 _wsystem 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1fa4292a1d0 <col:41, col:57> col:57 _Command 'const wchar_t *'
|-FunctionDecl 0x1fa4292a598 <line:733:24, col:71> col:39 _wtof 'double (const wchar_t *) __attribute__((cdecl))':'double (const wchar_t *)'
| `-ParmVarDecl 0x1fa4292a418 <col:52, col:67> col:67 _Str 'const wchar_t *'
|-FunctionDecl 0x1fa4292a890 <line:734:24, col:101> col:39 _wtof_l 'double (const wchar_t *, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1fa4292a668 <col:54, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1fa4292a6e0 <col:84, col:94> col:94 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa4292aa48 <line:735:24, col:68> col:36 _wtoi 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1fa4292a968 <col:49, col:64> col:64 _Str 'const wchar_t *'
|-FunctionDecl 0x1fa4292ad40 <line:736:24, col:98> col:36 _wtoi_l 'int (const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1fa4292ab18 <col:51, col:66> col:66 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1fa4292ab90 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa42928f88 <line:737:24, col:69> col:37 _wtol 'long (const wchar_t *) __attribute__((cdecl))':'long (const wchar_t *)'
| `-ParmVarDecl 0x1fa4292ae18 <col:50, col:65> col:65 _Str 'const wchar_t *'
|-FunctionDecl 0x1fa42929280 <line:738:24, col:99> col:37 _wtol_l 'long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1fa42929058 <col:52, col:67> col:67 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1fa429290d0 <col:82, col:92> col:92 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa429294d8 <line:739:24, col:75> col:42 _wtoll 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x1fa42929358 <col:56, col:71> col:71 _Str 'const wchar_t *'
|-FunctionDecl 0x1fa429297d0 <line:740:24, col:105> col:42 _wtoll_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1fa429295a8 <col:58, col:73> col:73 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1fa42929620 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa42929c28 <line:742:28, col:162> col:44 _i64tow_s 'errno_t (long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1fa429298b0 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x1fa42929928 <col:102, col:112> col:112 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1fa429299a0 <col:126, col:133> col:133 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa42929a20 <col:152, col:156> col:156 _Radix 'int'
|-FunctionDecl 0x1fa4292e130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:743:146> col:62 _i64tow 'wchar_t *(long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long long, wchar_t *, int)'
| |-ParmVarDecl 0x1fa42929dd8 <col:75, col:83> col:83 _Val 'long long'
| |-ParmVarDecl 0x1fa4292dee0 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1fa4292df60 <col:136, col:140> col:140 _Radix 'int'
| `-DeprecatedAttr 0x1fa4292e1e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa4292e6a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:744:28, col:172> col:44 _ui64tow_s 'errno_t (unsigned long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1fa4292e330 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x1fa4292e3a8 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1fa4292e420 <col:136, col:143> col:143 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa4292e4a0 <col:162, col:166> col:166 _Radix 'int'
|-FunctionDecl 0x1fa4292eb20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:745:157> col:63 _ui64tow 'wchar_t *(unsigned long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long long, wchar_t *, int)'
| |-ParmVarDecl 0x1fa4292e858 <col:77, col:94> col:94 _Val 'unsigned long long'
| |-ParmVarDecl 0x1fa4292e8d0 <col:123, col:133> col:133 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1fa4292e950 <col:147, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x1fa4292ebd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa4292edf8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:746:24, col:76> col:42 _wtoi64 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x1fa4292ed18 <col:57, col:72> col:72 _Str 'const wchar_t *'
|-FunctionDecl 0x1fa4292b028 <line:747:24, col:106> col:42 _wtoi64_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1fa4292aeb0 <col:59, col:74> col:74 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1fa4292af28 <col:89, col:99> col:99 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa4292b320 <line:748:24, col:141> col:42 _wcstoi64 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1fa4292b100 <col:59, col:75> col:75 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1fa4292b180 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1fa4292b200 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x1fa4292b6b8 <line:749:24, col:171> col:42 _wcstoi64_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1fa4292b400 <col:61, col:77> col:77 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1fa4292b480 <col:108, col:119> col:119 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1fa4292b500 <col:133, col:137> col:137 _Radix 'int'
| `-ParmVarDecl 0x1fa4292b578 <col:154, col:164> col:164 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa4292b9c0 <line:750:24, col:150> col:50 _wcstoui64 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1fa4292b7a0 <col:68, col:84> col:84 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1fa4292b820 <col:115, col:126> col:126 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1fa4292b8a0 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x1fa4292bd58 <line:751:24, col:180> col:50 _wcstoui64_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1fa4292baa0 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1fa4292bb20 <col:117, col:128> col:128 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1fa4292bba0 <col:142, col:146> col:146 _Radix 'int'
| `-ParmVarDecl 0x1fa4292bc18 <col:163, col:173> col:173 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa4292c070 <line:770:24, col:151> col:39 _fullpath 'char *(char *, const char *, size_t) __attribute__((cdecl))':'char *(char *, const char *, size_t)'
| |-ParmVarDecl 0x1fa4292be48 <col:82, col:89> col:89 _FullPath 'char *'
| |-ParmVarDecl 0x1fa4292bed8 <col:107, col:120> col:120 _Path 'const char *'
| `-ParmVarDecl 0x1fa4292bf50 <col:132, col:139> col:139 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa4292c638 <line:778:28, col:189> col:44 _ecvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x1fa4292c158 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x1fa4292c1d0 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa4292c250 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x1fa4292c2d0 <col:132, col:136> col:136 _NumOfDights 'int'
| |-ParmVarDecl 0x1fa4292c350 <col:156, col:162> col:162 _PtDec 'int *'
| `-ParmVarDecl 0x1fa4292c3d0 <col:176, col:182> col:182 _PtSign 'int *'
|-FunctionDecl 0x1fa4292cb30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:780:158> col:72 _ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1fa4292c7f8 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x1fa4292c878 <col:101, col:105> col:105 _NumOfDigits 'int'
| |-ParmVarDecl 0x1fa4292c8f8 <col:125, col:131> col:131 _PtDec 'int *'
| |-ParmVarDecl 0x1fa4292c978 <col:145, col:151> col:151 _PtSign 'int *'
| `-DeprecatedAttr 0x1fa4292cbf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa429270e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:781:28, col:186> col:44 _fcvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x1fa4292cd38 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x1fa4292cdb0 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa4292ce30 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x1fa42926e70 <col:132, col:136> col:136 _NumOfDec 'int'
| |-ParmVarDecl 0x1fa42926ef0 <col:153, col:159> col:159 _PtDec 'int *'
| `-ParmVarDecl 0x1fa42926f70 <col:173, col:179> col:179 _PtSign 'int *'
|-FunctionDecl 0x1fa42927568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:783:155> col:72 _fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1fa429272a8 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x1fa42927328 <col:101, col:105> col:105 _NumOfDec 'int'
| |-ParmVarDecl 0x1fa429273a8 <col:122, col:128> col:128 _PtDec 'int *'
| |-ParmVarDecl 0x1fa42927428 <col:142, col:148> col:148 _PtSign 'int *'
| `-DeprecatedAttr 0x1fa42927628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa42927ae8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:784:9, col:129> col:25 _gcvt_s 'errno_t (char *, size_t, double, int) __attribute__((cdecl))':'errno_t (char *, size_t, double, int)'
| |-ParmVarDecl 0x1fa42927770 <col:55, col:62> col:62 _DstBuf 'char *'
| |-ParmVarDecl 0x1fa429277e8 <col:76, col:83> col:83 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa42927868 <col:95, col:102> col:102 _Val 'double'
| `-ParmVarDecl 0x1fa429278e8 <col:113, col:117> col:117 _NumOfDigits 'int'
|-FunctionDecl 0x1fa4292efd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:786:141> col:57 _gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x1fa42927c98 <col:68, col:75> col:75 _Val 'double'
| |-ParmVarDecl 0x1fa42927d18 <col:86, col:90> col:90 _NumOfDigits 'int'
| |-ParmVarDecl 0x1fa42927d98 <col:127, col:134> col:134 _DstBuf 'char *'
| `-DeprecatedAttr 0x1fa4292f090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa4292f470 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:788:24, col:91> col:36 _atodbl 'int (_CRT_DOUBLE *, char *) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *)'
| |-ParmVarDecl 0x1fa4292f248 <col:50, col:64> col:64 _Result '_CRT_DOUBLE *'
| `-ParmVarDecl 0x1fa4292f2c8 <col:80, col:87> col:87 _Str 'char *'
|-FunctionDecl 0x1fa4292f7f0 <line:789:24, col:89> col:36 _atoldbl 'int (_LDOUBLE *, char *) __attribute__((cdecl))':'int (_LDOUBLE *, char *)'
| |-ParmVarDecl 0x1fa4292f5c8 <col:51, col:62> col:62 _Result '_LDOUBLE *'
| `-ParmVarDecl 0x1fa4292f648 <col:78, col:85> col:85 _Str 'char *'
|-FunctionDecl 0x1fa4292fb70 <line:790:24, col:96> col:36 _atoflt 'int (_CRT_FLOAT *, const char *) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *)'
| |-ParmVarDecl 0x1fa4292f948 <col:50, col:63> col:63 _Result '_CRT_FLOAT *'
| `-ParmVarDecl 0x1fa4292f9c8 <col:79, col:92> col:92 _Str 'const char *'
|-FunctionDecl 0x1fa42927ec8 <line:791:24, col:121> col:36 _atodbl_l 'int (_CRT_DOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x1fa4292fc48 <col:52, col:66> col:66 _Result '_CRT_DOUBLE *'
| |-ParmVarDecl 0x1fa4292fcc8 <col:82, col:89> col:89 _Str 'char *'
| `-ParmVarDecl 0x1fa4292fd40 <col:104, col:114> col:114 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa42928278 <line:792:24, col:119> col:36 _atoldbl_l 'int (_LDOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_LDOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x1fa42927fa8 <col:53, col:64> col:64 _Result '_LDOUBLE *'
| |-ParmVarDecl 0x1fa42928028 <col:80, col:87> col:87 _Str 'char *'
| `-ParmVarDecl 0x1fa429280a0 <col:102, col:112> col:112 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa42928628 <line:793:24, col:126> col:36 _atoflt_l 'int (_CRT_FLOAT *, const char *, _locale_t) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *, _locale_t)'
| |-ParmVarDecl 0x1fa42928358 <col:52, col:65> col:65 _Result '_CRT_FLOAT *'
| |-ParmVarDecl 0x1fa429283d8 <col:81, col:94> col:94 _Str 'const char *'
| `-ParmVarDecl 0x1fa42928450 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fa42928900 <line:794:46> col:46 implicit _lrotl 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x1fa429289a0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x1fa42928a08 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1fa42928a80 <col:46> Implicit
|-FunctionDecl 0x1fa42928ad8 prev 0x1fa42928900 <col:24, col:93> col:46 _lrotl 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x1fa42928710 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x1fa42928790 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x1fa42928bd0 <col:46> Inherited Implicit
|-FunctionDecl 0x1fa42928d90 <line:795:46> col:46 implicit _lrotr 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x1fa42930f10 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x1fa42930f78 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1fa42930ff0 <col:46> Implicit
|-FunctionDecl 0x1fa42931048 prev 0x1fa42928d90 <col:24, col:93> col:46 _lrotr 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x1fa42928c10 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x1fa42928c90 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x1fa42931140 <col:46> Inherited Implicit
|-FunctionDecl 0x1fa42931658 <line:796:40, line:797:37> line:796:58 _makepath_s 'errno_t (char *, size_t, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x1fa42931180 <col:99, col:106> col:106 _PathResult 'char *'
| |-ParmVarDecl 0x1fa429311f8 <col:124, col:131> col:131 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa42931278 <col:156, col:169> col:169 _Drive 'const char *'
| |-ParmVarDecl 0x1fa429312f8 <col:188, col:201> col:201 _Dir 'const char *'
| |-ParmVarDecl 0x1fa42931378 <col:218, col:231> col:231 _Filename 'const char *'
| `-ParmVarDecl 0x1fa429313f8 <line:797:20, col:33> col:33 _Ext 'const char *'
|-FunctionDecl 0x1fa42931c00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:799:78 _makepath 'void (char *, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'void (char *, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x1fa42931818 <col:113, col:119> col:119 _Path 'char *'
| |-ParmVarDecl 0x1fa42931898 <col:137, col:151> col:151 _Drive 'const char *'
| |-ParmVarDecl 0x1fa42931918 <col:170, col:184> col:184 _Dir 'const char *'
| |-ParmVarDecl 0x1fa42931998 <col:201, col:215> col:215 _Filename 'const char *'
| |-ParmVarDecl 0x1fa42931a18 <col:237, col:251> col:251 _Ext 'const char *'
| `-DeprecatedAttr 0x1fa42931cc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _makepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa42937000 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:826:9, col:59> col:27 _onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x1fa42931e30 <col:44, col:54> col:54 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x1fa42937220 <line:831:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1fa429370d8 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1fa429373d8 <line:838:24, col:77> col:39 _putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1fa429372f8 <col:54, col:67> col:67 _EnvString 'const char *'
|-FunctionDecl 0x1fa42937698 <line:839:28, col:107> col:44 _putenv_s 'errno_t (const char *, const char *) __attribute__((cdecl))':'errno_t (const char *, const char *)'
| |-ParmVarDecl 0x1fa429374b0 <col:61, col:74> col:74 _Name 'const char *'
| `-ParmVarDecl 0x1fa42937530 <col:88, col:101> col:101 _Value 'const char *'
|-FunctionDecl 0x1fa42937960 <line:842:30> col:30 implicit _rotl 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x1fa42937a00 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x1fa42937a68 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1fa42937ae0 <col:30> Implicit
|-FunctionDecl 0x1fa42937b38 prev 0x1fa42937960 <col:9, col:75> col:30 _rotl 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x1fa42937778 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x1fa429377f8 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x1fa42937c30 <col:30> Inherited Implicit
|-FunctionDecl 0x1fa42937e60 <line:843:34> col:34 implicit _rotl64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x1fa42937f00 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1fa42933f40 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1fa42933fb8 <col:34> Implicit
|-FunctionDecl 0x1fa42934010 prev 0x1fa42937e60 <col:9, col:85> col:34 _rotl64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x1fa42937c70 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x1fa42937cf0 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x1fa42934108 <col:34> Inherited Implicit
|-FunctionDecl 0x1fa429342c8 <line:844:30> col:30 implicit _rotr 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x1fa42934368 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x1fa429343d0 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1fa42934448 <col:30> Implicit
|-FunctionDecl 0x1fa429344a0 prev 0x1fa429342c8 <col:9, col:75> col:30 _rotr 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x1fa42934148 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x1fa429341c8 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x1fa42934598 <col:30> Inherited Implicit
|-FunctionDecl 0x1fa42934758 <line:845:34> col:34 implicit _rotr64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x1fa429347f8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1fa42934860 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1fa429348d8 <col:34> Implicit
|-FunctionDecl 0x1fa42934930 prev 0x1fa42934758 <col:9, col:85> col:34 _rotr64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x1fa429345d8 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x1fa42934658 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x1fa42934a28 <col:34> Inherited Implicit
|-FunctionDecl 0x1fa42934de8 <line:849:9, col:171> col:25 _searchenv_s 'errno_t (const char *, const char *, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, const char *, char *, size_t)'
| |-ParmVarDecl 0x1fa42934a68 <col:45, col:58> col:58 _Filename 'const char *'
| |-ParmVarDecl 0x1fa42934ae8 <col:76, col:89> col:89 _EnvVar 'const char *'
| |-ParmVarDecl 0x1fa42934b68 <col:127, col:134> col:134 _ResultPath 'char *'
| `-ParmVarDecl 0x1fa42934be0 <col:152, col:159> col:159 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa42930270 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:851:78 _searchenv 'void (const char *, const char *, char *) __attribute__((cdecl))':'void (const char *, const char *, char *)'
| |-ParmVarDecl 0x1fa4292ffd8 <col:97, col:111> col:111 _Filename 'const char *'
| |-ParmVarDecl 0x1fa42930058 <col:129, col:143> col:143 _EnvVar 'const char *'
| |-ParmVarDecl 0x1fa429300d8 <col:176, col:182> col:182 _ResultPath 'char *'
| `-DeprecatedAttr 0x1fa42930328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _searchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa42930910 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:854:261> col:62 _splitpath 'void (const char *, char *, char *, char *, char *) __attribute__((cdecl))':'void (const char *, char *, char *, char *, char *)'
| |-ParmVarDecl 0x1fa42930530 <col:80, col:93> col:93 _FullPath 'const char *'
| |-ParmVarDecl 0x1fa429305b0 <col:129, col:136> col:136 _Drive 'char *'
| |-ParmVarDecl 0x1fa42930630 <col:169, col:176> col:176 _Dir 'char *'
| |-ParmVarDecl 0x1fa429306b0 <col:207, col:214> col:214 _Filename 'char *'
| |-ParmVarDecl 0x1fa42930730 <col:250, col:257> col:257 _Ext 'char *'
| `-DeprecatedAttr 0x1fa429309d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _splitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa42938270 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:855:40, line:859:79> line:855:57 _splitpath_s 'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t)'
| |-ParmVarDecl 0x1fa42930b20 <col:77, col:90> col:90 _FullPath 'const char *'
| |-ParmVarDecl 0x1fa42930ba0 <line:856:48, col:55> col:55 _Drive 'char *'
| |-ParmVarDecl 0x1fa42930c18 <col:68, col:75> col:75 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa42930c98 <line:857:46, col:53> col:53 _Dir 'char *'
| |-ParmVarDecl 0x1fa42930d10 <col:64, col:71> col:71 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa42930d90 <line:858:51, col:58> col:58 _Filename 'char *'
| |-ParmVarDecl 0x1fa42930e08 <col:74, col:81> col:81 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa42930e88 <line:859:46, col:53> col:53 _Ext 'char *'
| `-ParmVarDecl 0x1fa42937f80 <col:64, col:71> col:71 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa42938620 <line:862:9, col:204> col:24 _swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x1fa42938388 <col:95, col:102> col:102 _Buf1 'char *'
| |-ParmVarDecl 0x1fa42938408 <col:174, col:181> col:181 _Buf2 'char *'
| `-ParmVarDecl 0x1fa42938488 <col:188, col:192> col:192 _SizeInBytes 'int'
|-FunctionDecl 0x1fa42938908 <line:873:24, col:161> col:42 _wfullpath 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1fa42938700 <col:86, col:96> col:96 _FullPath 'wchar_t *'
| |-ParmVarDecl 0x1fa42938778 <col:114, col:130> col:130 _Path 'const wchar_t *'
| `-ParmVarDecl 0x1fa429387f0 <col:142, col:149> col:149 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa42938ea8 <line:879:40, line:880:40> line:879:56 _wmakepath_s 'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fa429389e8 <col:91, col:101> col:101 _PathResult 'wchar_t *'
| |-ParmVarDecl 0x1fa42938a60 <col:119, col:126> col:126 _SIZE 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa42938ad8 <col:144, col:160> col:160 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x1fa42938b50 <col:179, col:195> col:195 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x1fa42938bc8 <col:212, col:228> col:228 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1fa42938c40 <line:880:20, col:36> col:36 _Ext 'const wchar_t *'
|-FunctionDecl 0x1fa42936460 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:882:78 _wmakepath 'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fa42936048 <col:114, col:123> col:123 _ResultPath 'wchar_t *'
| |-ParmVarDecl 0x1fa429360c0 <col:147, col:164> col:164 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x1fa42936138 <col:183, col:200> col:200 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x1fa429361b0 <col:217, col:234> col:234 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1fa42936228 <col:256, col:273> col:273 _Ext 'const wchar_t *'
| `-DeprecatedAttr 0x1fa42936528 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wmakepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa429367e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:885:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1fa42936668 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1fa42936990 <line:889:24, col:81> col:39 _wputenv 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1fa429368b0 <col:55, col:71> col:71 _EnvString 'const wchar_t *'
|-FunctionDecl 0x1fa42936c38 <line:890:28, col:114> col:44 _wputenv_s 'errno_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fa42936a60 <col:62, col:78> col:78 _Name 'const wchar_t *'
| `-ParmVarDecl 0x1fa42936ad8 <col:92, col:108> col:108 _Value 'const wchar_t *'
|-FunctionDecl 0x1fa429390c8 <line:891:9, col:181> col:25 _wsearchenv_s 'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t)'
| |-ParmVarDecl 0x1fa42936d10 <col:46, col:62> col:62 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1fa42936d88 <col:80, col:96> col:96 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x1fa42936e00 <col:134, col:144> col:144 _ResultPath 'wchar_t *'
| `-ParmVarDecl 0x1fa42936e78 <col:162, col:169> col:169 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa42939530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:893:78 _wsearchenv 'void (const wchar_t *, const wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x1fa42939270 <col:98, col:115> col:115 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1fa429392e8 <col:133, col:150> col:150 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x1fa42939360 <col:183, col:192> col:192 _ResultPath 'wchar_t *'
| `-DeprecatedAttr 0x1fa429395e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsearchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa42939c00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:896:278> col:63 _wsplitpath 'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x1fa429397e8 <col:82, col:98> col:98 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x1fa42939860 <col:134, col:144> col:144 _Drive 'wchar_t *'
| |-ParmVarDecl 0x1fa429398d8 <col:177, col:187> col:187 _Dir 'wchar_t *'
| |-ParmVarDecl 0x1fa42939950 <col:218, col:228> col:228 _Filename 'wchar_t *'
| |-ParmVarDecl 0x1fa429399c8 <col:264, col:274> col:274 _Ext 'wchar_t *'
| `-DeprecatedAttr 0x1fa42939cc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsplitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa42932470 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:897:21, line:901:82> line:897:37 _wsplitpath_s 'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t)'
| |-ParmVarDecl 0x1fa42939e08 <col:58, col:74> col:74 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x1fa42939e80 <line:898:48, col:58> col:58 _Drive 'wchar_t *'
| |-ParmVarDecl 0x1fa42939ef8 <col:71, col:78> col:78 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa42931f20 <line:899:46, col:56> col:56 _Dir 'wchar_t *'
| |-ParmVarDecl 0x1fa42931f98 <col:67, col:74> col:74 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa42932010 <line:900:51, col:61> col:61 _Filename 'wchar_t *'
| |-ParmVarDecl 0x1fa42932088 <col:77, col:84> col:84 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa42932100 <line:901:46, col:56> col:56 _Ext 'wchar_t *'
| `-ParmVarDecl 0x1fa42932178 <col:67, col:74> col:74 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa42932790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:909:78> col:50 _seterrormode 'void (int) __attribute__((cdecl))':'void (int)'
| |-ParmVarDecl 0x1fa42932688 <col:69, col:73> col:73 _Mode 'int'
| `-DeprecatedAttr 0x1fa42932838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetErrorMode instead. See online help for details." ""
|-FunctionDecl 0x1fa42932c28 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:910:97> col:42 _beep 'void (unsigned int, unsigned int) __attribute__((cdecl))':'void (unsigned int, unsigned int)'
| |-ParmVarDecl 0x1fa42932a48 <col:53, col:62> col:62 _Frequency 'unsigned int'
| |-ParmVarDecl 0x1fa42932ac8 <col:79, col:88> col:88 _Duration 'unsigned int'
| `-DeprecatedAttr 0x1fa42932cd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Beep instead. See online help for details." ""
|-FunctionDecl 0x1fa4293a0e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:911:78> col:43 _sleep 'void (unsigned long) __attribute__((cdecl))':'void (unsigned long)'
| |-ParmVarDecl 0x1fa42939fa0 <col:55, col:69> col:69 _Duration 'unsigned long'
| `-DeprecatedAttr 0x1fa4293a188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Sleep instead. See online help for details." ""
|-FunctionDecl 0x1fa4293a730 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:934:187> col:102 ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1fa4293a470 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x1fa4293a4f0 <col:130, col:134> col:134 _NumOfDigits 'int'
| |-ParmVarDecl 0x1fa4293a570 <col:154, col:160> col:160 _PtDec 'int *'
| |-ParmVarDecl 0x1fa4293a5f0 <col:174, col:180> col:180 _PtSign 'int *'
| |-DeprecatedAttr 0x1fa4293a7f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ecvt. See online help for details." ""
| `-DeprecatedAttr 0x1fa4293a8e8 <col:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa4293ae20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:935:184> col:102 fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1fa4293ab60 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x1fa4293abe0 <col:130, col:134> col:134 _NumOfDec 'int'
| |-ParmVarDecl 0x1fa4293ac60 <col:151, col:157> col:157 _PtDec 'int *'
| |-ParmVarDecl 0x1fa4293ace0 <col:171, col:177> col:177 _PtSign 'int *'
| |-DeprecatedAttr 0x1fa4293aee0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcvt. See online help for details." ""
| `-DeprecatedAttr 0x1fa4293b060 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa4293b4f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:936:179> col:96 gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x1fa4293b2d8 <col:106, col:113> col:113 _Val 'double'
| |-ParmVarDecl 0x1fa4293b358 <col:124, col:128> col:128 _NumOfDigits 'int'
| |-ParmVarDecl 0x1fa4293b3d8 <col:165, col:172> col:172 _DstBuf 'char *'
| |-DeprecatedAttr 0x1fa4293b5b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _gcvt. See online help for details." ""
| `-DeprecatedAttr 0x1fa4293b6a8 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa4293bb40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:937:170> col:96 itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x1fa4293b920 <col:106, col:110> col:110 _Val 'int'
| |-ParmVarDecl 0x1fa4293b9a0 <col:139, col:146> col:146 _DstBuf 'char *'
| |-ParmVarDecl 0x1fa4293ba20 <col:160, col:164> col:164 _Radix 'int'
| |-DeprecatedAttr 0x1fa4293bbf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _itoa. See online help for details." ""
| `-DeprecatedAttr 0x1fa4293bcf0 <col:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa42942240 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:938:171> col:96 ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x1fa42942020 <col:106, col:111> col:111 _Val 'long'
| |-ParmVarDecl 0x1fa429420a0 <col:140, col:147> col:147 _DstBuf 'char *'
| |-ParmVarDecl 0x1fa42942120 <col:161, col:165> col:165 _Radix 'int'
| |-DeprecatedAttr 0x1fa429422f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ltoa. See online help for details." ""
| `-DeprecatedAttr 0x1fa429423f0 <col:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa42942688 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:941:108> col:71 putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1fa429425a8 <col:85, col:98> col:98 _EnvString 'const char *'
| `-DeprecatedAttr 0x1fa42942730 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putenv. See online help for details." ""
|-FunctionDecl 0x1fa42942b10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:944:245> col:128 swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x1fa429428f8 <col:165, col:172> col:172 _Buf1 'char *'
| |-ParmVarDecl 0x1fa42942978 <col:210, col:217> col:217 _Buf2 'char *'
| |-ParmVarDecl 0x1fa429429f8 <col:229, col:233> col:233 _SizeInBytes 'int'
| `-DeprecatedAttr 0x1fa42942bc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _swab. See online help for details." ""
|-FunctionDecl 0x1fa4293c060 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:945:181> col:96 ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x1fa42942e90 <col:107, col:121> col:121 _Val 'unsigned long'
| |-ParmVarDecl 0x1fa42942f10 <col:150, col:157> col:157 _Dstbuf 'char *'
| |-ParmVarDecl 0x1fa42942f90 <col:171, col:175> col:175 _Radix 'int'
| |-DeprecatedAttr 0x1fa4293c118 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ultoa. See online help for details." ""
| `-DeprecatedAttr 0x1fa4293c210 <col:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fa4293c3f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:64:18, line:947:48> col:18 onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x1fa4293c320 <line:64:18, line:947:43> col:43 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-RecordDecl 0x1fa4293c4b8 <.//openssl//file_jk/before\crypto\ec/ec_lcl.h:52:1, line:173:1> line:52:8 struct ec_method_st definition
| |-FieldDecl 0x1fa4293c588 <line:54:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x1fa4293c5f8 <line:56:5, col:9> col:9 field_type 'int'
| |-FieldDecl 0x1fa4293c798 <line:61:5, col:34> col:11 group_init 'int (*)(int *)'
| |-FieldDecl 0x1fa4293c960 <line:62:5, col:37> col:12 group_finish 'void (*)(int *)'
| |-FieldDecl 0x1fa4293ca70 <line:63:5, col:43> col:12 group_clear_finish 'void (*)(int *)'
| |-FieldDecl 0x1fa4293cce0 <line:64:5, col:52> col:11 group_copy 'int (*)(int *, const int *)'
| |-FieldDecl 0x1fa42943168 <line:67:5, line:68:54> line:67:11 group_set_curve 'int (*)(int *, const int *, const int *, const int *, int *)'
| |-FieldDecl 0x1fa42943578 <line:69:5, line:70:37> line:69:11 group_get_curve 'int (*)(const int *, int *, int *, int *, int *)'
| |-FieldDecl 0x1fa42943748 <line:72:5, col:46> col:11 group_get_degree 'int (*)(const int *)'
| |-FieldDecl 0x1fa42943860 <line:73:5, col:46> col:11 group_order_bits 'int (*)(const int *)'
| |-FieldDecl 0x1fa42943ad0 <line:75:5, col:64> col:11 group_check_discriminant 'int (*)(const int *, int *)'
| |-FieldDecl 0x1fa42943be8 <line:80:5, col:34> col:11 point_init 'int (*)(int *)'
| |-FieldDecl 0x1fa42943cf8 <line:81:5, col:37> col:12 point_finish 'void (*)(int *)'
| |-FieldDecl 0x1fa42943e08 <line:82:5, col:43> col:12 point_clear_finish 'void (*)(int *)'
| |-FieldDecl 0x1fa42943fa8 <line:83:5, col:52> col:11 point_copy 'int (*)(int *, const int *)'
| |-FieldDecl 0x1fa42940130 <line:92:5, col:63> col:11 point_set_to_infinity 'int (*)(const int *, int *)'
| |-FieldDecl 0x1fa429405e0 <line:93:5, line:96:76> line:93:11 point_set_Jprojective_coordinates_GFp 'int (*)(const int *, int *, const int *, const int *, const int *, int *)'
| |-FieldDecl 0x1fa42940a90 <line:97:5, line:100:59> line:97:11 point_get_Jprojective_coordinates_GFp 'int (*)(const int *, const int *, int *, int *, int *, int *)'
| |-FieldDecl 0x1fa42940ea8 <line:101:5, line:103:50> line:101:11 point_set_affine_coordinates 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x1fa429442f8 <line:104:5, line:105:72> line:104:11 point_get_affine_coordinates 'int (*)(const int *, const int *, int *, int *, int *)'
| |-FieldDecl 0x1fa42944708 <line:106:5, line:108:54> line:106:11 point_set_compressed_coordinates 'int (*)(const int *, int *, const int *, int, int *)'
| |-FieldDecl 0x1fa42944c28 <line:110:5, line:112:46> line:110:14 point2oct 'size_t (*)(const int *, const int *, int, unsigned char *, size_t, int *)'
| |-FieldDecl 0x1fa4293f050 <line:113:5, line:114:43> line:113:11 oct2point 'int (*)(const int *, int *, const unsigned char *, size_t, int *)'
| |-FieldDecl 0x1fa4293f388 <line:116:5, line:117:44> line:116:11 add 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x1fa4293f710 <line:118:5, col:75> col:11 dbl 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x1fa4293fa08 <line:119:5, col:58> col:11 invert 'int (*)(const int *, int *, int *)'
| |-FieldDecl 0x1fa4293fc70 <line:123:5, col:62> col:11 is_at_infinity 'int (*)(const int *, const int *)'
| |-FieldDecl 0x1fa4293ff68 <line:124:5, col:69> col:11 is_on_curve 'int (*)(const int *, const int *, int *)'
| |-FieldDecl 0x1fa42945370 <line:125:5, line:126:31> line:125:11 point_cmp 'int (*)(const int *, const int *, const int *, int *)'
| |-FieldDecl 0x1fa42945598 <line:128:5, col:63> col:11 make_affine 'int (*)(const int *, int *, int *)'
| |-FieldDecl 0x1fa42945a10 <line:129:5, line:130:40> line:129:11 points_make_affine 'int (*)(const int *, size_t, int **, int *)'
| |-FieldDecl 0x1fa4293dfe0 <line:136:5, line:138:25> line:136:11 mul 'int (*)(const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-FieldDecl 0x1fa4293e250 <line:139:5, col:54> col:11 precompute_mult 'int (*)(int *, int *)'
| |-FieldDecl 0x1fa4293e368 <line:140:5, col:55> col:11 have_precompute_mult 'int (*)(const int *)'
| |-FieldDecl 0x1fa4293e6a0 <line:148:5, line:149:48> line:148:11 field_mul 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x1fa4293e950 <line:150:5, col:77> col:11 field_sqr 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x1fa4293ec88 <line:151:5, line:152:48> line:151:11 field_div 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x1fa4293ef38 <line:154:5, line:155:34> line:154:11 field_encode 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x1fa42941250 <line:157:5, line:158:34> line:157:11 field_decode 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x1fa42941478 <line:159:5, col:67> col:11 field_set_to_one 'int (*)(const int *, int *, int *)'
| |-FieldDecl 0x1fa429417a0 <line:161:5, col:75> col:14 priv2oct 'size_t (*)(const int *, unsigned char *, size_t)'
| |-FieldDecl 0x1fa42941ac8 <line:162:5, col:72> col:11 oct2priv 'int (*)(int *, const unsigned char *, size_t)'
| |-FieldDecl 0x1fa42941c68 <line:163:5, col:61> col:11 set_private 'int (*)(int *, const int *)'
| |-FieldDecl 0x1fa42941d80 <line:164:5, col:32> col:11 keygen 'int (*)(int *)'
| |-FieldDecl 0x1fa42941e98 <line:165:5, col:40> col:11 keycheck 'int (*)(const int *)'
| |-FieldDecl 0x1fa42941fb0 <line:166:5, col:35> col:11 keygenpub 'int (*)(int *)'
| |-FieldDecl 0x1fa4294c208 <line:167:5, col:50> col:11 keycopy 'int (*)(int *, const int *)'
| |-FieldDecl 0x1fa4294c318 <line:168:5, col:36> col:12 keyfinish 'void (*)(int *)'
| |-FieldDecl 0x1fa4294c720 <line:170:5, line:171:72> line:170:11 ecdh_compute_key 'int (*)(unsigned char **, size_t *, const int *, const int *)'
| `-FieldDecl 0x1fa4294c948 <line:172:5, col:77> col:11 blind_coordinates 'int (*)(const int *, int *, int *)'
|-RecordDecl 0x1fa4294c9a0 <line:178:9, col:16> col:16 struct nistp224_pre_comp_st
|-TypedefDecl 0x1fa4294cab8 <col:1, col:37> col:37 referenced NISTP224_PRE_COMP 'struct nistp224_pre_comp_st':'struct nistp224_pre_comp_st'
| `-ElaboratedType 0x1fa4294ca60 'struct nistp224_pre_comp_st' sugar
|   `-RecordType 0x1fa4294ca40 'struct nistp224_pre_comp_st'
|     `-Record 0x1fa4294c9a0 'nistp224_pre_comp_st'
|-RecordDecl 0x1fa4294cb28 <line:179:9, col:16> col:16 struct nistp256_pre_comp_st
|-TypedefDecl 0x1fa4294cc38 <col:1, col:37> col:37 referenced NISTP256_PRE_COMP 'struct nistp256_pre_comp_st':'struct nistp256_pre_comp_st'
| `-ElaboratedType 0x1fa4294cbe0 'struct nistp256_pre_comp_st' sugar
|   `-RecordType 0x1fa4294cbc0 'struct nistp256_pre_comp_st'
|     `-Record 0x1fa4294cb28 'nistp256_pre_comp_st'
|-RecordDecl 0x1fa4294cca8 <line:180:9, col:16> col:16 struct nistp521_pre_comp_st
|-TypedefDecl 0x1fa4294cdb8 <col:1, col:37> col:37 referenced NISTP521_PRE_COMP 'struct nistp521_pre_comp_st':'struct nistp521_pre_comp_st'
| `-ElaboratedType 0x1fa4294cd60 'struct nistp521_pre_comp_st' sugar
|   `-RecordType 0x1fa4294cd40 'struct nistp521_pre_comp_st'
|     `-Record 0x1fa4294cca8 'nistp521_pre_comp_st'
|-RecordDecl 0x1fa4294ce28 <line:181:9, col:16> col:16 struct nistz256_pre_comp_st
|-TypedefDecl 0x1fa4294cf38 <col:1, col:37> col:37 referenced NISTZ256_PRE_COMP 'struct nistz256_pre_comp_st':'struct nistz256_pre_comp_st'
| `-ElaboratedType 0x1fa4294cee0 'struct nistz256_pre_comp_st' sugar
|   `-RecordType 0x1fa4294cec0 'struct nistz256_pre_comp_st'
|     `-Record 0x1fa4294ce28 'nistz256_pre_comp_st'
|-RecordDecl 0x1fa4294cfa8 <line:182:9, col:16> col:16 struct ec_pre_comp_st
|-TypedefDecl 0x1fa4294d0d0 <col:1, col:31> col:31 referenced EC_PRE_COMP 'struct ec_pre_comp_st':'struct ec_pre_comp_st'
| `-ElaboratedType 0x1fa4294d060 'struct ec_pre_comp_st' sugar
|   `-RecordType 0x1fa4294d040 'struct ec_pre_comp_st'
|     `-Record 0x1fa4296c200 'ec_pre_comp_st'
|-RecordDecl 0x1fa4294d140 <line:184:1, line:249:1> line:184:8 invalid struct ec_group_st definition
| |-FieldDecl 0x1fa4294d218 <line:185:5, col:22> col:22 invalid meth 'const int *'
| |-FieldDecl 0x1fa4294d288 <line:186:5, col:15> col:15 invalid generator 'int *'
| |-FieldDecl 0x1fa4294d2f8 <line:187:5, col:13> col:13 invalid order 'int *'
| |-FieldDecl 0x1fa4294d368 <col:5, col:21> col:21 invalid cofactor 'int *'
| |-FieldDecl 0x1fa4294d3d8 <line:188:5, col:9> col:9 curve_name 'int'
| |-FieldDecl 0x1fa4294d448 <line:189:5, col:9> col:9 asn1_flag 'int'
| |-FieldDecl 0x1fa4294d4b8 <line:190:5, col:29> col:29 invalid asn1_form 'int'
| |-FieldDecl 0x1fa4294d528 <line:191:5, col:20> col:20 seed 'unsigned char *'
| |-FieldDecl 0x1fa4294d590 <line:193:5, col:12> col:12 seed_len 'size_t':'unsigned long long'
| |-FieldDecl 0x1fa4294d600 <line:203:5, col:13> col:13 invalid field 'int *'
| |-FieldDecl 0x1fa4294d700 <line:211:5, col:15> col:9 poly 'int [6]'
| |-FieldDecl 0x1fa4294d770 <line:219:5, col:13> col:13 invalid a 'int *'
| |-FieldDecl 0x1fa4294d7e0 <col:5, col:17> col:17 invalid b 'int *'
| |-FieldDecl 0x1fa4294d850 <line:221:5, col:9> col:9 a_is_minus3 'int'
| |-FieldDecl 0x1fa4294d8c0 <line:223:5, col:11> col:11 field_data1 'void *'
| |-FieldDecl 0x1fa4294d930 <line:225:5, col:11> col:11 field_data2 'void *'
| |-FieldDecl 0x1fa4294dcc0 <line:227:5, line:228:36> line:227:11 field_mod_func 'int (*)(int *, const int *, const int *, int *)'
| |-FieldDecl 0x1fa4294dd30 <line:230:5, col:18> col:18 invalid mont_data 'int *'
| |-EnumDecl 0x1fa4294dd88 <line:237:5, line:241:5> line:237:5
| | |-EnumConstantDecl 0x1fa4294de60 <line:238:9> col:9 PCT_none 'int'
| | |-EnumConstantDecl 0x1fa4294deb8 <line:239:9> col:9 PCT_nistp224 'int'
| | |-EnumConstantDecl 0x1fa4294df10 <col:23> col:23 PCT_nistp256 'int'
| | |-EnumConstantDecl 0x1fa4294df68 <col:37> col:37 PCT_nistp521 'int'
| | |-EnumConstantDecl 0x1fa4294dfc0 <col:51> col:51 PCT_nistz256 'int'
| | `-EnumConstantDecl 0x1fa4294e018 <line:240:9> col:9 referenced PCT_ec 'int'
| |-FieldDecl 0x1fa42946060 <line:237:5, line:241:7> col:7 pre_comp_type 'enum (anonymous enum at .//openssl//file_jk/before\crypto\ec/ec_lcl.h:237:5)':'enum ec_group_st::(anonymous at .//openssl//file_jk/before\crypto\ec/ec_lcl.h:237:5)'
| |-RecordDecl 0x1fa429460b8 <line:242:5, line:248:5> line:242:5 union definition
| | |-FieldDecl 0x1fa429461f8 <line:243:9, col:28> col:28 nistp224 'NISTP224_PRE_COMP *'
| | |-FieldDecl 0x1fa429462d8 <line:244:9, col:28> col:28 nistp256 'NISTP256_PRE_COMP *'
| | |-FieldDecl 0x1fa429463b8 <line:245:9, col:28> col:28 nistp521 'NISTP521_PRE_COMP *'
| | |-FieldDecl 0x1fa42946498 <line:246:9, col:28> col:28 nistz256 'NISTZ256_PRE_COMP *'
| | `-FieldDecl 0x1fa42946578 <line:247:9, col:22> col:22 ec 'EC_PRE_COMP *'
| `-FieldDecl 0x1fa42946628 <line:242:5, line:248:7> col:7 pre_comp 'union (anonymous union at .//openssl//file_jk/before\crypto\ec/ec_lcl.h:242:5)':'union ec_group_st::(anonymous at .//openssl//file_jk/before\crypto\ec/ec_lcl.h:242:5)'
|-RecordDecl 0x1fa42946680 <line:256:1, line:269:1> line:256:8 invalid struct ec_key_st definition
| |-FieldDecl 0x1fa42946758 <line:257:5, col:26> col:26 invalid meth 'const int *'
| |-FieldDecl 0x1fa429467c8 <line:258:5, col:13> col:13 invalid engine 'int *'
| |-FieldDecl 0x1fa42946838 <line:259:5, col:9> col:9 version 'int'
| |-FieldDecl 0x1fa429468a8 <line:260:5, col:15> col:15 invalid group 'int *'
| |-FieldDecl 0x1fa42946918 <line:261:5, col:15> col:15 invalid pub_key 'int *'
| |-FieldDecl 0x1fa42946988 <line:262:5, col:13> col:13 invalid priv_key 'int *'
| |-FieldDecl 0x1fa429469f8 <line:263:5, col:18> col:18 enc_flag 'unsigned int'
| |-FieldDecl 0x1fa42946a68 <line:264:5, col:29> col:29 invalid conv_form 'int'
| |-FieldDecl 0x1fa42946ad8 <line:265:5, col:9> col:9 references 'int'
| |-FieldDecl 0x1fa42946b48 <line:266:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x1fa42946bb8 <line:267:5, col:20> col:20 invalid ex_data 'int'
| `-FieldDecl 0x1fa42946c28 <line:268:5, col:20> col:20 invalid lock 'int *'
|-RecordDecl 0x1fa42946c80 <line:271:1, line:285:1> line:271:8 invalid struct ec_point_st definition
| |-FieldDecl 0x1fa42946d58 <line:272:5, col:22> col:22 invalid meth 'const int *'
| |-FieldDecl 0x1fa42946dc8 <line:274:5, col:9> col:9 curve_name 'int'
| |-FieldDecl 0x1fa42946e38 <line:279:5, col:13> col:13 invalid X 'int *'
| |-FieldDecl 0x1fa42946ea8 <line:280:5, col:13> col:13 invalid Y 'int *'
| |-FieldDecl 0x1fa42946f18 <line:281:5, col:13> col:13 invalid Z 'int *'
| `-FieldDecl 0x1fa42946f88 <line:283:5, col:9> col:9 Z_is_one 'int'
|-FunctionDecl 0x1fa4294e198 <line:288:1, line:298:1> line:288:24 invalid ec_point_is_compat 'int (const int *, const int *)' static
| |-ParmVarDecl 0x1fa42946ff8 <col:43, col:59> col:59 invalid point 'const int *'
| |-ParmVarDecl 0x1fa4294e0f8 <line:289:43, col:59> col:59 invalid group 'const int *'
| `-CompoundStmt 0x1fa4294e350 <line:290:1, line:298:1>
|   |-IfStmt 0x1fa4294e300 <line:291:5, line:295:16>
|   | |-OpaqueValueExpr 0x1fa4294e2e8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1fa4294e2d8 <col:9, col:16>
|   |   `-IntegerLiteral 0x1fa4294e2b0 <col:16> 'int' 0
|   `-ReturnStmt 0x1fa4294e340 <line:297:5, col:12>
|     `-IntegerLiteral 0x1fa4294e318 <col:12> 'int' 1
|-FunctionDecl 0x1fa4294e478 <line:301:1, col:64> col:20 EC_nistp224_pre_comp_dup 'NISTP224_PRE_COMP *(NISTP224_PRE_COMP *)'
| `-ParmVarDecl 0x1fa4294e380 <col:45, col:63> col:64 'NISTP224_PRE_COMP *'
|-FunctionDecl 0x1fa4294e638 <line:302:1, col:64> col:20 EC_nistp256_pre_comp_dup 'NISTP256_PRE_COMP *(NISTP256_PRE_COMP *)'
| `-ParmVarDecl 0x1fa4294e548 <col:45, col:63> col:64 'NISTP256_PRE_COMP *'
|-FunctionDecl 0x1fa4294e7f8 <line:303:1, col:64> col:20 EC_nistp521_pre_comp_dup 'NISTP521_PRE_COMP *(NISTP521_PRE_COMP *)'
| `-ParmVarDecl 0x1fa4294e708 <col:45, col:63> col:64 'NISTP521_PRE_COMP *'
|-FunctionDecl 0x1fa4294e9b8 <line:304:1, col:64> col:20 EC_nistz256_pre_comp_dup 'NISTZ256_PRE_COMP *(NISTZ256_PRE_COMP *)'
| `-ParmVarDecl 0x1fa4294e8c8 <col:45, col:63> col:64 'NISTZ256_PRE_COMP *'
|-FunctionDecl 0x1fa4294eb18 prev 0x1fa4294e638 <line:305:1, col:64> col:20 EC_nistp256_pre_comp_dup 'NISTP256_PRE_COMP *(NISTP256_PRE_COMP *)'
| `-ParmVarDecl 0x1fa4294ea88 <col:45, col:63> col:64 'NISTP256_PRE_COMP *'
|-FunctionDecl 0x1fa4294ecc8 <line:306:1, col:46> col:14 EC_ec_pre_comp_dup 'EC_PRE_COMP *(EC_PRE_COMP *)'
| `-ParmVarDecl 0x1fa4294ebd0 <col:33, col:45> col:46 'EC_PRE_COMP *'
|-FunctionDecl 0x1fa4294ee30 <line:308:1, col:38> col:6 invalid EC_pre_comp_free 'void (int *)'
| `-ParmVarDecl 0x1fa4294eda0 <col:23, col:33> col:33 invalid group 'int *'
|-FunctionDecl 0x1fa4294efd8 <line:309:1, col:51> col:6 EC_nistp224_pre_comp_free 'void (NISTP224_PRE_COMP *)'
| `-ParmVarDecl 0x1fa4294eee8 <col:32, col:50> col:51 'NISTP224_PRE_COMP *'
|-FunctionDecl 0x1fa42947168 <line:310:1, col:51> col:6 EC_nistp256_pre_comp_free 'void (NISTP256_PRE_COMP *)'
| `-ParmVarDecl 0x1fa42947070 <col:32, col:50> col:51 'NISTP256_PRE_COMP *'
|-FunctionDecl 0x1fa42947328 <line:311:1, col:51> col:6 EC_nistp521_pre_comp_free 'void (NISTP521_PRE_COMP *)'
| `-ParmVarDecl 0x1fa42947238 <col:32, col:50> col:51 'NISTP521_PRE_COMP *'
|-FunctionDecl 0x1fa429474e8 <line:312:1, col:51> col:6 EC_nistz256_pre_comp_free 'void (NISTZ256_PRE_COMP *)'
| `-ParmVarDecl 0x1fa429473f8 <col:32, col:50> col:51 'NISTZ256_PRE_COMP *'
|-FunctionDecl 0x1fa429476a8 <line:313:1, col:39> col:6 used EC_ec_pre_comp_free 'void (EC_PRE_COMP *)'
| `-ParmVarDecl 0x1fa429475b8 <col:26, col:38> col:39 'EC_PRE_COMP *'
|-FunctionDecl 0x1fa42947b60 <line:319:1, line:321:25> line:319:5 invalid ec_wNAF_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1fa42947780 <col:17, col:33> col:33 invalid group 'const int *'
| |-ParmVarDecl 0x1fa42947800 <col:40, col:50> col:50 invalid r 'int *'
| |-ParmVarDecl 0x1fa42947880 <col:53, col:67> col:67 invalid scalar 'const int *'
| |-ParmVarDecl 0x1fa429478f8 <line:320:17, col:24> col:24 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa42947988 <col:29, <invalid sloc>> col:45 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1fa42947a18 <col:55, <invalid sloc>> col:69 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1fa42947a98 <line:321:17, <invalid sloc>> col:25 invalid 'int *'
|-FunctionDecl 0x1fa42947d70 <line:322:1, col:54> col:5 invalid ec_wNAF_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x1fa42947c50 <col:29, col:39> col:39 invalid group 'int *'
| `-ParmVarDecl 0x1fa42947cd0 <col:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x1fa42947ed0 <line:323:1, col:55> col:5 invalid ec_wNAF_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x1fa42947e38 <col:34, col:50> col:50 invalid group 'const int *'
|-FunctionDecl 0x1fa4294f0f0 <line:326:1, col:40> col:5 invalid ec_GFp_simple_group_init 'int (int *)'
| `-ParmVarDecl 0x1fa42947f90 <col:30, <invalid sloc>> col:40 invalid 'int *'
|-FunctionDecl 0x1fa4294f240 <line:327:1, col:43> col:6 invalid ec_GFp_simple_group_finish 'void (int *)'
| `-ParmVarDecl 0x1fa4294f1b0 <col:33, <invalid sloc>> col:43 invalid 'int *'
|-FunctionDecl 0x1fa4294f390 <line:328:1, col:49> col:6 invalid ec_GFp_simple_group_clear_finish 'void (int *)'
| `-ParmVarDecl 0x1fa4294f300 <col:39, <invalid sloc>> col:49 invalid 'int *'
|-FunctionDecl 0x1fa4294f570 <line:329:1, col:58> col:5 invalid ec_GFp_simple_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x1fa4294f450 <col:30, <invalid sloc>> col:40 invalid 'int *'
| `-ParmVarDecl 0x1fa4294f4d0 <col:42, <invalid sloc>> col:58 invalid 'const int *'
|-FunctionDecl 0x1fa4294f8f0 <line:330:1, line:331:77> line:330:5 invalid ec_GFp_simple_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1fa4294f638 <col:35, <invalid sloc>> col:45 invalid 'int *'
| |-ParmVarDecl 0x1fa4294f6b8 <col:47, col:61> col:61 invalid p 'const int *'
| |-ParmVarDecl 0x1fa4294f738 <line:331:35, col:49> col:49 invalid a 'const int *'
| |-ParmVarDecl 0x1fa4294f7b8 <col:52, col:66> col:66 invalid b 'const int *'
| `-ParmVarDecl 0x1fa4294f838 <col:69, <invalid sloc>> col:77 invalid 'int *'
|-FunctionDecl 0x1fa4294fc88 <line:332:1, line:333:54> line:332:5 invalid ec_GFp_simple_group_get_curve 'int (const int *, int *, int *, int *, int *)'
| |-ParmVarDecl 0x1fa4294f9d0 <col:35, <invalid sloc>> col:51 invalid 'const int *'
| |-ParmVarDecl 0x1fa4294fa50 <col:53, col:61> col:61 invalid p 'int *'
| |-ParmVarDecl 0x1fa4294fad0 <col:64, col:72> col:72 invalid a 'int *'
| |-ParmVarDecl 0x1fa4294fb50 <line:333:35, col:43> col:43 invalid b 'int *'
| `-ParmVarDecl 0x1fa4294fbd0 <col:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x1fa4294fe00 <line:334:1, col:52> col:5 invalid ec_GFp_simple_group_get_degree 'int (const int *)'
| `-ParmVarDecl 0x1fa4294fd68 <col:36, <invalid sloc>> col:52 invalid 'const int *'
|-FunctionDecl 0x1fa4294ffe0 <line:335:1, col:70> col:5 invalid ec_GFp_simple_group_check_discriminant 'int (const int *, int *)'
| |-ParmVarDecl 0x1fa4294fec0 <col:44, <invalid sloc>> col:60 invalid 'const int *'
| `-ParmVarDecl 0x1fa4294ff40 <col:62, <invalid sloc>> col:70 invalid 'int *'
|-FunctionDecl 0x1fa42948118 <line:336:1, col:40> col:5 invalid ec_GFp_simple_point_init 'int (int *)'
| `-ParmVarDecl 0x1fa42948080 <col:30, <invalid sloc>> col:40 invalid 'int *'
|-FunctionDecl 0x1fa42948268 <line:337:1, col:43> col:6 invalid ec_GFp_simple_point_finish 'void (int *)'
| `-ParmVarDecl 0x1fa429481d8 <col:33, <invalid sloc>> col:43 invalid 'int *'
|-FunctionDecl 0x1fa429483b8 <line:338:1, col:49> col:6 invalid ec_GFp_simple_point_clear_finish 'void (int *)'
| `-ParmVarDecl 0x1fa42948328 <col:39, <invalid sloc>> col:49 invalid 'int *'
|-FunctionDecl 0x1fa42948598 <line:339:1, col:58> col:5 invalid ec_GFp_simple_point_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x1fa42948478 <col:30, <invalid sloc>> col:40 invalid 'int *'
| `-ParmVarDecl 0x1fa429484f8 <col:42, <invalid sloc>> col:58 invalid 'const int *'
|-FunctionDecl 0x1fa42948780 <line:340:1, col:69> col:5 invalid ec_GFp_simple_point_set_to_infinity 'int (const int *, int *)'
| |-ParmVarDecl 0x1fa42948660 <col:41, <invalid sloc>> col:57 invalid 'const int *'
| `-ParmVarDecl 0x1fa429486e0 <col:59, <invalid sloc>> col:69 invalid 'int *'
|-FunctionDecl 0x1fa42948b88 <line:341:1, line:344:76> line:341:5 invalid ec_GFp_simple_set_Jprojective_coordinates_GFp 'int (const int *, int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1fa42948848 <col:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x1fa429488c8 <line:342:51, <invalid sloc>> col:61 invalid 'int *'
| |-ParmVarDecl 0x1fa42948948 <col:63, col:77> col:77 invalid x 'const int *'
| |-ParmVarDecl 0x1fa429489c8 <line:343:51, col:65> col:65 invalid y 'const int *'
| |-ParmVarDecl 0x1fa42948a48 <line:344:51, col:65> col:65 invalid z 'const int *'
| `-ParmVarDecl 0x1fa42948ac8 <col:68, <invalid sloc>> col:76 invalid 'int *'
|-FunctionDecl 0x1fa42948fb0 <line:345:1, line:348:59> line:345:5 invalid ec_GFp_simple_get_Jprojective_coordinates_GFp 'int (const int *, const int *, int *, int *, int *, int *)'
| |-ParmVarDecl 0x1fa42948c70 <col:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x1fa42948cf0 <line:346:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x1fa42948d70 <col:69, col:77> col:77 invalid x 'int *'
| |-ParmVarDecl 0x1fa42948df0 <line:347:51, col:59> col:59 invalid y 'int *'
| |-ParmVarDecl 0x1fa42948e70 <col:62, col:70> col:70 invalid z 'int *'
| `-ParmVarDecl 0x1fa42948ef0 <line:348:51, <invalid sloc>> col:59 invalid 'int *'
|-FunctionDecl 0x1fa429503d0 <line:349:1, line:351:73> line:349:5 invalid ec_GFp_simple_point_set_affine_coordinates 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1fa42950118 <col:48, <invalid sloc>> col:64 invalid 'const int *'
| |-ParmVarDecl 0x1fa42950198 <col:66, <invalid sloc>> col:76 invalid 'int *'
| |-ParmVarDecl 0x1fa42950218 <line:350:48, col:62> col:62 invalid x 'const int *'
| |-ParmVarDecl 0x1fa42950298 <line:351:48, col:62> col:62 invalid y 'const int *'
| `-ParmVarDecl 0x1fa42950318 <col:65, <invalid sloc>> col:73 invalid 'int *'
|-FunctionDecl 0x1fa42950768 <line:352:1, line:354:67> line:352:5 invalid ec_GFp_simple_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x1fa429504b0 <col:48, <invalid sloc>> col:64 invalid 'const int *'
| |-ParmVarDecl 0x1fa42950530 <line:353:48, <invalid sloc>> col:64 invalid 'const int *'
| |-ParmVarDecl 0x1fa429505b0 <col:66, col:74> col:74 invalid x 'int *'
| |-ParmVarDecl 0x1fa42950630 <line:354:48, col:56> col:56 invalid y 'int *'
| `-ParmVarDecl 0x1fa429506b0 <col:59, <invalid sloc>> col:67 invalid 'int *'
|-FunctionDecl 0x1fa42950b00 <line:355:1, line:357:54> line:355:5 invalid ec_GFp_simple_set_compressed_coordinates 'int (const int *, int *, const int *, int, int *)'
| |-ParmVarDecl 0x1fa42950848 <col:46, <invalid sloc>> col:62 invalid 'const int *'
| |-ParmVarDecl 0x1fa429508c8 <col:64, <invalid sloc>> col:74 invalid 'int *'
| |-ParmVarDecl 0x1fa42950948 <line:356:46, col:60> col:60 invalid x 'const int *'
| |-ParmVarDecl 0x1fa429509c8 <col:63, col:67> col:67 y_bit 'int'
| `-ParmVarDecl 0x1fa42950a48 <line:357:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x1fa42950f10 <line:358:1, line:360:72> line:358:8 invalid ec_GFp_simple_point2oct 'size_t (const int *, const int *, int, unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x1fa42950be0 <col:32, <invalid sloc>> col:48 invalid 'const int *'
| |-ParmVarDecl 0x1fa42950c60 <col:50, <invalid sloc>> col:66 invalid 'const int *'
| |-ParmVarDecl 0x1fa42950ce0 <line:359:32, col:56> col:56 invalid form 'int'
| |-ParmVarDecl 0x1fa42950d60 <line:360:32, col:47> col:47 buf 'unsigned char *'
| |-ParmVarDecl 0x1fa42950dd8 <col:52, col:59> col:59 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa42950e58 <col:64, <invalid sloc>> col:72 invalid 'int *'
|-FunctionDecl 0x1fa429512c0 <line:361:1, line:362:75> line:361:5 invalid ec_GFp_simple_oct2point 'int (const int *, int *, const unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x1fa42950ff8 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x1fa42951078 <col:47, <invalid sloc>> col:57 invalid 'int *'
| |-ParmVarDecl 0x1fa42951110 <line:362:29, col:50> col:50 buf 'const unsigned char *'
| |-ParmVarDecl 0x1fa42951188 <col:55, col:62> col:62 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa42951208 <col:67, <invalid sloc>> col:75 invalid 'int *'
|-FunctionDecl 0x1fa42951658 <line:363:1, line:364:50> line:363:5 invalid ec_GFp_simple_add 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1fa429513a0 <col:23, <invalid sloc>> col:39 invalid 'const int *'
| |-ParmVarDecl 0x1fa42951420 <col:41, col:51> col:51 invalid r 'int *'
| |-ParmVarDecl 0x1fa429514a0 <col:54, col:70> col:70 invalid a 'const int *'
| |-ParmVarDecl 0x1fa42951520 <line:364:23, col:39> col:39 invalid b 'const int *'
| `-ParmVarDecl 0x1fa429515a0 <col:42, <invalid sloc>> col:50 invalid 'int *'
|-FunctionDecl 0x1fa42951968 <line:365:1, line:366:31> line:365:5 invalid ec_GFp_simple_dbl 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1fa42951738 <col:23, <invalid sloc>> col:39 invalid 'const int *'
| |-ParmVarDecl 0x1fa429517b8 <col:41, col:51> col:51 invalid r 'int *'
| |-ParmVarDecl 0x1fa42951838 <col:54, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x1fa429518b8 <line:366:23, <invalid sloc>> col:31 invalid 'int *'
|-FunctionDecl 0x1fa42951be8 <line:367:1, col:64> col:5 invalid ec_GFp_simple_invert 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1fa42951a40 <col:26, <invalid sloc>> col:42 invalid 'const int *'
| |-ParmVarDecl 0x1fa42951ac0 <col:44, <invalid sloc>> col:54 invalid 'int *'
| `-ParmVarDecl 0x1fa42951b40 <col:56, <invalid sloc>> col:64 invalid 'int *'
|-FunctionDecl 0x1fa42951dd8 <line:368:1, col:68> col:5 invalid ec_GFp_simple_is_at_infinity 'int (const int *, const int *)'
| |-ParmVarDecl 0x1fa42951cb8 <col:34, <invalid sloc>> col:50 invalid 'const int *'
| `-ParmVarDecl 0x1fa42951d38 <col:52, <invalid sloc>> col:68 invalid 'const int *'
|-FunctionDecl 0x1fa42952048 <line:369:1, col:75> col:5 invalid ec_GFp_simple_is_on_curve 'int (const int *, const int *, int *)'
| |-ParmVarDecl 0x1fa42951ea0 <col:31, <invalid sloc>> col:47 invalid 'const int *'
| |-ParmVarDecl 0x1fa42951f20 <col:49, <invalid sloc>> col:65 invalid 'const int *'
| `-ParmVarDecl 0x1fa42951fa0 <col:67, <invalid sloc>> col:75 invalid 'int *'
|-FunctionDecl 0x1fa42952368 <line:370:1, line:371:31> line:370:5 invalid ec_GFp_simple_cmp 'int (const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1fa42952138 <col:23, <invalid sloc>> col:39 invalid 'const int *'
| |-ParmVarDecl 0x1fa429521b8 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x1fa42952238 <col:60, col:76> col:76 invalid b 'const int *'
| `-ParmVarDecl 0x1fa429522b8 <line:371:23, <invalid sloc>> col:31 invalid 'int *'
|-FunctionDecl 0x1fa429525e8 <line:372:1, col:69> col:5 invalid ec_GFp_simple_make_affine 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1fa42952440 <col:31, <invalid sloc>> col:47 invalid 'const int *'
| |-ParmVarDecl 0x1fa429524c0 <col:49, <invalid sloc>> col:59 invalid 'int *'
| `-ParmVarDecl 0x1fa42952540 <col:61, <invalid sloc>> col:69 invalid 'int *'
|-FunctionDecl 0x1fa429528f0 <line:373:1, line:374:60> line:373:5 invalid ec_GFp_simple_points_make_affine 'int (const int *, size_t, int **, int *)'
| |-ParmVarDecl 0x1fa429526b8 <col:38, <invalid sloc>> col:54 invalid 'const int *'
| |-ParmVarDecl 0x1fa42952730 <col:56, col:63> col:63 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa429527c0 <line:374:38, <invalid sloc>> col:48 invalid 'int **':'int **'
| `-ParmVarDecl 0x1fa42952840 <col:52, <invalid sloc>> col:60 invalid 'int *'
|-FunctionDecl 0x1fa42952c80 <line:375:1, line:376:54> line:375:5 invalid ec_GFp_simple_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1fa429529c8 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x1fa42952a48 <col:47, col:55> col:55 invalid r 'int *'
| |-ParmVarDecl 0x1fa42952ac8 <col:58, col:72> col:72 invalid a 'const int *'
| |-ParmVarDecl 0x1fa42952b48 <line:376:29, col:43> col:43 invalid b 'const int *'
| `-ParmVarDecl 0x1fa42952bc8 <col:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x1fa42952f90 <line:377:1, line:378:37> line:377:5 invalid ec_GFp_simple_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1fa42952d60 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x1fa42952de0 <col:47, col:55> col:55 invalid r 'int *'
| |-ParmVarDecl 0x1fa42952e60 <col:58, col:72> col:72 invalid a 'const int *'
| `-ParmVarDecl 0x1fa42952ee0 <line:378:29, <invalid sloc>> col:37 invalid 'int *'
|-FunctionDecl 0x1fa4294b1d8 <line:379:1, line:380:48> line:379:5 invalid ec_GFp_simple_blind_coordinates 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1fa42953068 <col:37, col:53> col:53 invalid group 'const int *'
| |-ParmVarDecl 0x1fa4294b0b0 <col:60, col:70> col:70 invalid p 'int *'
| `-ParmVarDecl 0x1fa4294b130 <line:380:37, col:45> col:45 invalid ctx 'int *'
|-FunctionDecl 0x1fa4294b340 <line:383:1, col:38> col:5 invalid ec_GFp_mont_group_init 'int (int *)'
| `-ParmVarDecl 0x1fa4294b2a8 <col:28, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x1fa4294b6b8 <line:384:1, line:385:58> line:384:5 invalid ec_GFp_mont_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1fa4294b400 <col:33, <invalid sloc>> col:43 invalid 'int *'
| |-ParmVarDecl 0x1fa4294b480 <col:45, col:59> col:59 invalid p 'const int *'
| |-ParmVarDecl 0x1fa4294b500 <col:62, col:76> col:76 invalid a 'const int *'
| |-ParmVarDecl 0x1fa4294b580 <line:385:33, col:47> col:47 invalid b 'const int *'
| `-ParmVarDecl 0x1fa4294b600 <col:50, <invalid sloc>> col:58 invalid 'int *'
|-FunctionDecl 0x1fa4294b828 <line:386:1, col:41> col:6 invalid ec_GFp_mont_group_finish 'void (int *)'
| `-ParmVarDecl 0x1fa4294b798 <col:31, <invalid sloc>> col:41 invalid 'int *'
|-FunctionDecl 0x1fa4294b978 <line:387:1, col:47> col:6 invalid ec_GFp_mont_group_clear_finish 'void (int *)'
| `-ParmVarDecl 0x1fa4294b8e8 <col:37, <invalid sloc>> col:47 invalid 'int *'
|-FunctionDecl 0x1fa4294bb58 <line:388:1, col:56> col:5 invalid ec_GFp_mont_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x1fa4294ba38 <col:28, <invalid sloc>> col:38 invalid 'int *'
| `-ParmVarDecl 0x1fa4294bab8 <col:40, <invalid sloc>> col:56 invalid 'const int *'
|-FunctionDecl 0x1fa4294bed8 <line:389:1, line:390:52> line:389:5 invalid ec_GFp_mont_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1fa4294bc20 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x1fa4294bca0 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x1fa4294bd20 <col:56, col:70> col:70 invalid a 'const int *'
| |-ParmVarDecl 0x1fa4294bda0 <line:390:27, col:41> col:41 invalid b 'const int *'
| `-ParmVarDecl 0x1fa4294be20 <col:44, <invalid sloc>> col:52 invalid 'int *'
|-FunctionDecl 0x1fa4295a2e8 <line:391:1, line:392:35> line:391:5 invalid ec_GFp_mont_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1fa4294bfb8 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x1fa4294c038 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x1fa4295a1b8 <col:56, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x1fa4295a238 <line:392:27, <invalid sloc>> col:35 invalid 'int *'
|-FunctionDecl 0x1fa4295a5f0 <line:393:1, line:394:38> line:393:5 invalid ec_GFp_mont_field_encode 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1fa4295a3c0 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x1fa4295a440 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x1fa4295a4c0 <col:59, col:73> col:73 invalid a 'const int *'
| `-ParmVarDecl 0x1fa4295a540 <line:394:30, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x1fa4295a8f8 <line:395:1, line:396:38> line:395:5 invalid ec_GFp_mont_field_decode 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1fa4295a6c8 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x1fa4295a748 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x1fa4295a7c8 <col:59, col:73> col:73 invalid a 'const int *'
| `-ParmVarDecl 0x1fa4295a848 <line:396:30, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x1fa4295ab78 <line:397:1, col:71> col:5 invalid ec_GFp_mont_field_set_to_one 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1fa4295a9d0 <col:34, <invalid sloc>> col:50 invalid 'const int *'
| |-ParmVarDecl 0x1fa4295aa50 <col:52, col:60> col:60 invalid r 'int *'
| `-ParmVarDecl 0x1fa4295aad0 <col:63, <invalid sloc>> col:71 invalid 'int *'
|-FunctionDecl 0x1fa4295ad68 <line:400:1, col:63> col:5 invalid ec_GFp_nist_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x1fa4295ac48 <col:28, col:38> col:38 invalid dest 'int *'
| `-ParmVarDecl 0x1fa4295acc8 <col:44, col:60> col:60 invalid src 'const int *'
|-FunctionDecl 0x1fa4295b0e8 <line:401:1, line:402:58> line:401:5 invalid ec_GFp_nist_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1fa4295ae30 <col:33, <invalid sloc>> col:43 invalid 'int *'
| |-ParmVarDecl 0x1fa4295aeb0 <col:45, col:59> col:59 invalid p 'const int *'
| |-ParmVarDecl 0x1fa4295af30 <col:62, col:76> col:76 invalid a 'const int *'
| |-ParmVarDecl 0x1fa4295afb0 <line:402:33, col:47> col:47 invalid b 'const int *'
| `-ParmVarDecl 0x1fa4295b030 <col:50, <invalid sloc>> col:58 invalid 'int *'
|-FunctionDecl 0x1fa42958478 <line:403:1, line:404:52> line:403:5 invalid ec_GFp_nist_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1fa429581c0 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x1fa42958240 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x1fa429582c0 <col:56, col:70> col:70 invalid a 'const int *'
| |-ParmVarDecl 0x1fa42958340 <line:404:27, col:41> col:41 invalid b 'const int *'
| `-ParmVarDecl 0x1fa429583c0 <col:44, <invalid sloc>> col:52 invalid 'int *'
|-FunctionDecl 0x1fa42958788 <line:405:1, line:406:35> line:405:5 invalid ec_GFp_nist_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1fa42958558 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x1fa429585d8 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x1fa42958658 <col:56, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x1fa429586d8 <line:406:27, <invalid sloc>> col:35 invalid 'int *'
|-FunctionDecl 0x1fa429588f8 <line:409:1, col:41> col:5 invalid ec_GF2m_simple_group_init 'int (int *)'
| `-ParmVarDecl 0x1fa42958860 <col:31, <invalid sloc>> col:41 invalid 'int *'
|-FunctionDecl 0x1fa42958a48 <line:410:1, col:44> col:6 invalid ec_GF2m_simple_group_finish 'void (int *)'
| `-ParmVarDecl 0x1fa429589b8 <col:34, <invalid sloc>> col:44 invalid 'int *'
|-FunctionDecl 0x1fa42958b98 <line:411:1, col:50> col:6 invalid ec_GF2m_simple_group_clear_finish 'void (int *)'
| `-ParmVarDecl 0x1fa42958b08 <col:40, <invalid sloc>> col:50 invalid 'int *'
|-FunctionDecl 0x1fa42958d78 <line:412:1, col:59> col:5 invalid ec_GF2m_simple_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x1fa42958c58 <col:31, <invalid sloc>> col:41 invalid 'int *'
| `-ParmVarDecl 0x1fa42958cd8 <col:43, <invalid sloc>> col:59 invalid 'const int *'
|-FunctionDecl 0x1fa42959190 <line:413:1, line:415:44> line:413:5 invalid ec_GF2m_simple_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1fa42958e40 <col:36, <invalid sloc>> col:46 invalid 'int *'
| |-ParmVarDecl 0x1fa42958ec0 <col:48, col:62> col:62 invalid p 'const int *'
| |-ParmVarDecl 0x1fa42958f40 <line:414:36, col:50> col:50 invalid a 'const int *'
| |-ParmVarDecl 0x1fa42958fc0 <col:53, col:67> col:67 invalid b 'const int *'
| `-ParmVarDecl 0x1fa42959040 <line:415:36, <invalid sloc>> col:44 invalid 'int *'
|-FunctionDecl 0x1fa42959528 <line:416:1, line:417:55> line:416:5 invalid ec_GF2m_simple_group_get_curve 'int (const int *, int *, int *, int *, int *)'
| |-ParmVarDecl 0x1fa42959270 <col:36, <invalid sloc>> col:52 invalid 'const int *'
| |-ParmVarDecl 0x1fa429592f0 <col:54, col:62> col:62 invalid p 'int *'
| |-ParmVarDecl 0x1fa42959370 <col:65, col:73> col:73 invalid a 'int *'
| |-ParmVarDecl 0x1fa429593f0 <line:417:36, col:44> col:44 invalid b 'int *'
| `-ParmVarDecl 0x1fa42959470 <col:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x1fa429596a0 <line:418:1, col:53> col:5 invalid ec_GF2m_simple_group_get_degree 'int (const int *)'
| `-ParmVarDecl 0x1fa42959608 <col:37, <invalid sloc>> col:53 invalid 'const int *'
|-FunctionDecl 0x1fa42959880 <line:419:1, col:71> col:5 invalid ec_GF2m_simple_group_check_discriminant 'int (const int *, int *)'
| |-ParmVarDecl 0x1fa42959760 <col:45, <invalid sloc>> col:61 invalid 'const int *'
| `-ParmVarDecl 0x1fa429597e0 <col:63, <invalid sloc>> col:71 invalid 'int *'
|-FunctionDecl 0x1fa429599e0 <line:420:1, col:41> col:5 invalid ec_GF2m_simple_point_init 'int (int *)'
| `-ParmVarDecl 0x1fa42959948 <col:31, <invalid sloc>> col:41 invalid 'int *'
|-FunctionDecl 0x1fa42959b30 <line:421:1, col:44> col:6 invalid ec_GF2m_simple_point_finish 'void (int *)'
| `-ParmVarDecl 0x1fa42959aa0 <col:34, <invalid sloc>> col:44 invalid 'int *'
|-FunctionDecl 0x1fa42959c80 <line:422:1, col:50> col:6 invalid ec_GF2m_simple_point_clear_finish 'void (int *)'
| `-ParmVarDecl 0x1fa42959bf0 <col:40, <invalid sloc>> col:50 invalid 'int *'
|-FunctionDecl 0x1fa42959e60 <line:423:1, col:59> col:5 invalid ec_GF2m_simple_point_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x1fa42959d40 <col:31, <invalid sloc>> col:41 invalid 'int *'
| `-ParmVarDecl 0x1fa42959dc0 <col:43, <invalid sloc>> col:59 invalid 'const int *'
|-FunctionDecl 0x1fa4295a048 <line:424:1, col:70> col:5 invalid ec_GF2m_simple_point_set_to_infinity 'int (const int *, int *)'
| |-ParmVarDecl 0x1fa42959f28 <col:42, <invalid sloc>> col:58 invalid 'const int *'
| `-ParmVarDecl 0x1fa42959fa8 <col:60, <invalid sloc>> col:70 invalid 'int *'
|-FunctionDecl 0x1fa429573a8 <line:425:1, line:427:74> line:425:5 invalid ec_GF2m_simple_point_set_affine_coordinates 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1fa4295a110 <col:49, <invalid sloc>> col:65 invalid 'const int *'
| |-ParmVarDecl 0x1fa42957170 <col:67, <invalid sloc>> col:77 invalid 'int *'
| |-ParmVarDecl 0x1fa429571f0 <line:426:49, col:63> col:63 invalid x 'const int *'
| |-ParmVarDecl 0x1fa42957270 <line:427:49, col:63> col:63 invalid y 'const int *'
| `-ParmVarDecl 0x1fa429572f0 <col:66, <invalid sloc>> col:74 invalid 'int *'
|-FunctionDecl 0x1fa42957740 <line:428:1, line:430:68> line:428:5 invalid ec_GF2m_simple_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x1fa42957488 <col:49, <invalid sloc>> col:65 invalid 'const int *'
| |-ParmVarDecl 0x1fa42957508 <line:429:49, <invalid sloc>> col:65 invalid 'const int *'
| |-ParmVarDecl 0x1fa42957588 <col:67, col:75> col:75 invalid x 'int *'
| |-ParmVarDecl 0x1fa42957608 <line:430:49, col:57> col:57 invalid y 'int *'
| `-ParmVarDecl 0x1fa42957688 <col:60, <invalid sloc>> col:68 invalid 'int *'
|-FunctionDecl 0x1fa42957ad8 <line:431:1, line:433:55> line:431:5 invalid ec_GF2m_simple_set_compressed_coordinates 'int (const int *, int *, const int *, int, int *)'
| |-ParmVarDecl 0x1fa42957820 <col:47, <invalid sloc>> col:63 invalid 'const int *'
| |-ParmVarDecl 0x1fa429578a0 <col:65, <invalid sloc>> col:75 invalid 'int *'
| |-ParmVarDecl 0x1fa42957920 <line:432:47, col:61> col:61 invalid x 'const int *'
| |-ParmVarDecl 0x1fa429579a0 <col:64, col:68> col:68 y_bit 'int'
| `-ParmVarDecl 0x1fa42957a20 <line:433:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x1fa42957ee8 <line:434:1, line:436:73> line:434:8 invalid ec_GF2m_simple_point2oct 'size_t (const int *, const int *, int, unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x1fa42957bb8 <col:33, <invalid sloc>> col:49 invalid 'const int *'
| |-ParmVarDecl 0x1fa42957c38 <col:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x1fa42957cb8 <line:435:33, col:57> col:57 invalid form 'int'
| |-ParmVarDecl 0x1fa42957d38 <line:436:33, col:48> col:48 buf 'unsigned char *'
| |-ParmVarDecl 0x1fa42957db0 <col:53, col:60> col:60 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa42957e30 <col:65, <invalid sloc>> col:73 invalid 'int *'
|-FunctionDecl 0x1fa42953268 <line:437:1, line:438:76> line:437:5 invalid ec_GF2m_simple_oct2point 'int (const int *, int *, const unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x1fa42957fd0 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x1fa42958050 <col:48, <invalid sloc>> col:58 invalid 'int *'
| |-ParmVarDecl 0x1fa429580d0 <line:438:30, col:51> col:51 buf 'const unsigned char *'
| |-ParmVarDecl 0x1fa42953130 <col:56, col:63> col:63 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fa429531b0 <col:68, <invalid sloc>> col:76 invalid 'int *'
|-FunctionDecl 0x1fa42953600 <line:439:1, line:440:51> line:439:5 invalid ec_GF2m_simple_add 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1fa42953348 <col:24, <invalid sloc>> col:40 invalid 'const int *'
| |-ParmVarDecl 0x1fa429533c8 <col:42, col:52> col:52 invalid r 'int *'
| |-ParmVarDecl 0x1fa42953448 <col:55, col:71> col:71 invalid a 'const int *'
| |-ParmVarDecl 0x1fa429534c8 <line:440:24, col:40> col:40 invalid b 'const int *'
| `-ParmVarDecl 0x1fa42953548 <col:43, <invalid sloc>> col:51 invalid 'int *'
|-FunctionDecl 0x1fa42953910 <line:441:1, line:442:32> line:441:5 invalid ec_GF2m_simple_dbl 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1fa429536e0 <col:24, <invalid sloc>> col:40 invalid 'const int *'
| |-ParmVarDecl 0x1fa42953760 <col:42, col:52> col:52 invalid r 'int *'
| |-ParmVarDecl 0x1fa429537e0 <col:55, col:71> col:71 invalid a 'const int *'
| `-ParmVarDecl 0x1fa42953860 <line:442:24, <invalid sloc>> col:32 invalid 'int *'
|-FunctionDecl 0x1fa42953b90 <line:443:1, col:65> col:5 invalid ec_GF2m_simple_invert 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1fa429539e8 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x1fa42953a68 <col:45, <invalid sloc>> col:55 invalid 'int *'
| `-ParmVarDecl 0x1fa42953ae8 <col:57, <invalid sloc>> col:65 invalid 'int *'
|-FunctionDecl 0x1fa42953d80 <line:444:1, col:69> col:5 invalid ec_GF2m_simple_is_at_infinity 'int (const int *, const int *)'
| |-ParmVarDecl 0x1fa42953c60 <col:35, <invalid sloc>> col:51 invalid 'const int *'
| `-ParmVarDecl 0x1fa42953ce0 <col:53, <invalid sloc>> col:69 invalid 'const int *'
|-FunctionDecl 0x1fa42953ff0 <line:445:1, col:76> col:5 invalid ec_GF2m_simple_is_on_curve 'int (const int *, const int *, int *)'
| |-ParmVarDecl 0x1fa42953e48 <col:32, <invalid sloc>> col:48 invalid 'const int *'
| |-ParmVarDecl 0x1fa42953ec8 <col:50, <invalid sloc>> col:66 invalid 'const int *'
| `-ParmVarDecl 0x1fa42953f48 <col:68, <invalid sloc>> col:76 invalid 'int *'
|-FunctionDecl 0x1fa4295b378 <line:446:1, line:447:32> line:446:5 invalid ec_GF2m_simple_cmp 'int (const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1fa429540c0 <col:24, <invalid sloc>> col:40 invalid 'const int *'
| |-ParmVarDecl 0x1fa4295b1c8 <col:42, col:58> col:58 invalid a 'const int *'
| |-ParmVarDecl 0x1fa4295b248 <col:61, col:77> col:77 invalid b 'const int *'
| `-ParmVarDecl 0x1fa4295b2c8 <line:447:24, <invalid sloc>> col:32 invalid 'int *'
|-FunctionDecl 0x1fa4295b5f8 <line:448:1, col:70> col:5 invalid ec_GF2m_simple_make_affine 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1fa4295b450 <col:32, <invalid sloc>> col:48 invalid 'const int *'
| |-ParmVarDecl 0x1fa4295b4d0 <col:50, <invalid sloc>> col:60 invalid 'int *'
| `-ParmVarDecl 0x1fa4295b550 <col:62, <invalid sloc>> col:70 invalid 'int *'
|-FunctionDecl 0x1fa4295b900 <line:449:1, line:450:61> line:449:5 invalid ec_GF2m_simple_points_make_affine 'int (const int *, size_t, int **, int *)'
| |-ParmVarDecl 0x1fa4295b6c8 <col:39, <invalid sloc>> col:55 invalid 'const int *'
| |-ParmVarDecl 0x1fa4295b740 <col:57, col:64> col:64 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa4295b7d0 <line:450:39, <invalid sloc>> col:49 invalid 'int **':'int **'
| `-ParmVarDecl 0x1fa4295b850 <col:53, <invalid sloc>> col:61 invalid 'int *'
|-FunctionDecl 0x1fa4295bc90 <line:451:1, line:452:55> line:451:5 invalid ec_GF2m_simple_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1fa4295b9d8 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x1fa4295ba58 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x1fa4295bad8 <col:59, col:73> col:73 invalid a 'const int *'
| |-ParmVarDecl 0x1fa4295bb58 <line:452:30, col:44> col:44 invalid b 'const int *'
| `-ParmVarDecl 0x1fa4295bbd8 <col:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x1fa4295bfa0 <line:453:1, line:454:38> line:453:5 invalid ec_GF2m_simple_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1fa4295bd70 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x1fa4295bdf0 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x1fa4295be70 <col:59, col:73> col:73 invalid a 'const int *'
| `-ParmVarDecl 0x1fa4295bef0 <line:454:30, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x1fa4295c378 <line:455:1, line:456:55> line:455:5 invalid ec_GF2m_simple_field_div 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1fa4295c078 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x1fa4295c0f8 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x1fa4295c1c0 <col:59, col:73> col:73 invalid a 'const int *'
| |-ParmVarDecl 0x1fa4295c240 <line:456:30, col:44> col:44 invalid b 'const int *'
| `-ParmVarDecl 0x1fa4295c2c0 <col:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x1fa4295c838 <line:459:1, line:462:32> line:459:5 invalid ec_GF2m_simple_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1fa4295c458 <col:24, col:40> col:40 invalid group 'const int *'
| |-ParmVarDecl 0x1fa4295c4d8 <col:47, col:57> col:57 invalid r 'int *'
| |-ParmVarDecl 0x1fa4295c558 <line:460:24, col:38> col:38 invalid scalar 'const int *'
| |-ParmVarDecl 0x1fa4295c5d0 <col:46, col:53> col:53 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa4295c660 <line:461:24, <invalid sloc>> col:40 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1fa4295c6f0 <col:50, <invalid sloc>> col:64 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1fa4295c770 <line:462:24, <invalid sloc>> col:32 invalid 'int *'
|-FunctionDecl 0x1fa4295ca48 <line:463:1, col:57> col:5 invalid ec_GF2m_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x1fa4295c928 <col:29, col:39> col:39 invalid group 'int *'
| `-ParmVarDecl 0x1fa4295c9a8 <col:46, col:54> col:54 invalid ctx 'int *'
|-FunctionDecl 0x1fa4295cba8 <line:464:1, col:55> col:5 invalid ec_GF2m_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x1fa4295cb10 <col:34, col:50> col:50 invalid group 'const int *'
|-FunctionDecl 0x1fa4295cd00 <line:468:1, col:47> col:5 invalid ec_GFp_nistp224_group_init 'int (int *)'
| `-ParmVarDecl 0x1fa4295cc68 <col:32, col:42> col:42 invalid group 'int *'
|-FunctionDecl 0x1fa4295d078 <line:469:1, line:471:45> line:469:5 invalid ec_GFp_nistp224_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1fa4295cdc0 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x1fa4295ce40 <col:54, col:68> col:68 invalid p 'const int *'
| |-ParmVarDecl 0x1fa4295cec0 <line:470:37, col:51> col:51 invalid a 'const int *'
| |-ParmVarDecl 0x1fa4295cf40 <col:54, col:68> col:68 invalid n 'const int *'
| `-ParmVarDecl 0x1fa4295cfc0 <line:471:37, <invalid sloc>> col:45 invalid 'int *'
|-FunctionDecl 0x1fa429553a0 <line:472:1, line:475:61> line:472:5 invalid ec_GFp_nistp224_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x1fa4295d158 <col:50, col:66> col:66 invalid group 'const int *'
| |-ParmVarDecl 0x1fa42955168 <line:473:50, col:66> col:66 invalid point 'const int *'
| |-ParmVarDecl 0x1fa429551e8 <line:474:50, col:58> col:58 invalid x 'int *'
| |-ParmVarDecl 0x1fa42955268 <col:61, col:69> col:69 invalid y 'int *'
| `-ParmVarDecl 0x1fa429552e8 <line:475:50, col:58> col:58 invalid ctx 'int *'
|-FunctionDecl 0x1fa42955860 <line:476:1, line:479:33> line:476:5 invalid ec_GFp_nistp224_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1fa42955480 <col:25, col:41> col:41 invalid group 'const int *'
| |-ParmVarDecl 0x1fa42955500 <col:48, col:58> col:58 invalid r 'int *'
| |-ParmVarDecl 0x1fa42955580 <line:477:25, col:39> col:39 invalid scalar 'const int *'
| |-ParmVarDecl 0x1fa429555f8 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa42955688 <line:478:25, <invalid sloc>> col:41 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1fa42955718 <col:51, <invalid sloc>> col:65 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1fa42955798 <line:479:25, <invalid sloc>> col:33 invalid 'int *'
|-FunctionDecl 0x1fa42955d30 <line:480:1, line:483:68> line:480:5 invalid ec_GFp_nistp224_points_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1fa42955950 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x1fa429559d0 <col:55, col:65> col:65 invalid r 'int *'
| |-ParmVarDecl 0x1fa42955a50 <line:481:32, col:46> col:46 invalid scalar 'const int *'
| |-ParmVarDecl 0x1fa42955ac8 <col:54, col:61> col:61 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa42955b58 <line:482:32, <invalid sloc>> col:48 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1fa42955be8 <line:483:32, <invalid sloc>> col:46 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1fa42955c68 <col:57, col:65> col:65 invalid ctx 'int *'
|-FunctionDecl 0x1fa42955f40 <line:484:1, col:65> col:5 invalid ec_GFp_nistp224_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x1fa42955e20 <col:37, col:47> col:47 invalid group 'int *'
| `-ParmVarDecl 0x1fa42955ea0 <col:54, col:62> col:62 invalid ctx 'int *'
|-FunctionDecl 0x1fa429560a0 <line:485:1, col:63> col:5 invalid ec_GFp_nistp224_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x1fa42956008 <col:42, col:58> col:58 invalid group 'const int *'
|-FunctionDecl 0x1fa4295d280 <line:488:1, col:47> col:5 invalid ec_GFp_nistp256_group_init 'int (int *)'
| `-ParmVarDecl 0x1fa4295d1e8 <col:32, col:42> col:42 invalid group 'int *'
|-FunctionDecl 0x1fa4295d5f8 <line:489:1, line:491:45> line:489:5 invalid ec_GFp_nistp256_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1fa4295d340 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x1fa4295d3c0 <col:54, col:68> col:68 invalid p 'const int *'
| |-ParmVarDecl 0x1fa4295d440 <line:490:37, col:51> col:51 invalid a 'const int *'
| |-ParmVarDecl 0x1fa4295d4c0 <col:54, col:68> col:68 invalid n 'const int *'
| `-ParmVarDecl 0x1fa4295d540 <line:491:37, <invalid sloc>> col:45 invalid 'int *'
|-FunctionDecl 0x1fa4295d990 <line:492:1, line:495:61> line:492:5 invalid ec_GFp_nistp256_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x1fa4295d6d8 <col:50, col:66> col:66 invalid group 'const int *'
| |-ParmVarDecl 0x1fa4295d758 <line:493:50, col:66> col:66 invalid point 'const int *'
| |-ParmVarDecl 0x1fa4295d7d8 <line:494:50, col:58> col:58 invalid x 'int *'
| |-ParmVarDecl 0x1fa4295d858 <col:61, col:69> col:69 invalid y 'int *'
| `-ParmVarDecl 0x1fa4295d8d8 <line:495:50, col:58> col:58 invalid ctx 'int *'
|-FunctionDecl 0x1fa4295de50 <line:496:1, line:499:33> line:496:5 invalid ec_GFp_nistp256_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1fa4295da70 <col:25, col:41> col:41 invalid group 'const int *'
| |-ParmVarDecl 0x1fa4295daf0 <col:48, col:58> col:58 invalid r 'int *'
| |-ParmVarDecl 0x1fa4295db70 <line:497:25, col:39> col:39 invalid scalar 'const int *'
| |-ParmVarDecl 0x1fa4295dbe8 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa4295dc78 <line:498:25, <invalid sloc>> col:41 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1fa4295dd08 <col:51, <invalid sloc>> col:65 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1fa4295dd88 <line:499:25, <invalid sloc>> col:33 invalid 'int *'
|-FunctionDecl 0x1fa429562d0 <line:500:1, line:503:68> line:500:5 invalid ec_GFp_nistp256_points_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1fa4295df40 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x1fa4295dfc0 <col:55, col:65> col:65 invalid r 'int *'
| |-ParmVarDecl 0x1fa4295e040 <line:501:32, col:46> col:46 invalid scalar 'const int *'
| |-ParmVarDecl 0x1fa4295e0b8 <col:54, col:61> col:61 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa4295e148 <line:502:32, <invalid sloc>> col:48 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1fa42956188 <line:503:32, <invalid sloc>> col:46 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1fa42956208 <col:57, col:65> col:65 invalid ctx 'int *'
|-FunctionDecl 0x1fa429564e0 <line:504:1, col:65> col:5 invalid ec_GFp_nistp256_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x1fa429563c0 <col:37, col:47> col:47 invalid group 'int *'
| `-ParmVarDecl 0x1fa42956440 <col:54, col:62> col:62 invalid ctx 'int *'
|-FunctionDecl 0x1fa42956640 <line:505:1, col:63> col:5 invalid ec_GFp_nistp256_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x1fa429565a8 <col:42, col:58> col:58 invalid group 'const int *'
|-FunctionDecl 0x1fa42956798 <line:508:1, col:47> col:5 invalid ec_GFp_nistp521_group_init 'int (int *)'
| `-ParmVarDecl 0x1fa42956700 <col:32, col:42> col:42 invalid group 'int *'
|-FunctionDecl 0x1fa42956b10 <line:509:1, line:511:45> line:509:5 invalid ec_GFp_nistp521_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1fa42956858 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x1fa429568d8 <col:54, col:68> col:68 invalid p 'const int *'
| |-ParmVarDecl 0x1fa42956958 <line:510:37, col:51> col:51 invalid a 'const int *'
| |-ParmVarDecl 0x1fa429569d8 <col:54, col:68> col:68 invalid n 'const int *'
| `-ParmVarDecl 0x1fa42956a58 <line:511:37, <invalid sloc>> col:45 invalid 'int *'
|-FunctionDecl 0x1fa42956ea8 <line:512:1, line:515:61> line:512:5 invalid ec_GFp_nistp521_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x1fa42956bf0 <col:50, col:66> col:66 invalid group 'const int *'
| |-ParmVarDecl 0x1fa42956c70 <line:513:50, col:66> col:66 invalid point 'const int *'
| |-ParmVarDecl 0x1fa42956cf0 <line:514:50, col:58> col:58 invalid x 'int *'
| |-ParmVarDecl 0x1fa42956d70 <col:61, col:69> col:69 invalid y 'int *'
| `-ParmVarDecl 0x1fa42956df0 <line:515:50, col:58> col:58 invalid ctx 'int *'
|-FunctionDecl 0x1fa428c9298 <line:516:1, line:519:33> line:516:5 invalid ec_GFp_nistp521_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1fa42956f88 <col:25, col:41> col:41 invalid group 'const int *'
| |-ParmVarDecl 0x1fa42957008 <col:48, col:58> col:58 invalid r 'int *'
| |-ParmVarDecl 0x1fa42957088 <line:517:25, col:39> col:39 invalid scalar 'const int *'
| |-ParmVarDecl 0x1fa428c9030 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa428c90c0 <line:518:25, <invalid sloc>> col:41 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1fa428c9150 <col:51, <invalid sloc>> col:65 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1fa428c91d0 <line:519:25, <invalid sloc>> col:33 invalid 'int *'
|-FunctionDecl 0x1fa428c9768 <line:520:1, line:523:68> line:520:5 invalid ec_GFp_nistp521_points_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1fa428c9388 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x1fa428c9408 <col:55, col:65> col:65 invalid r 'int *'
| |-ParmVarDecl 0x1fa428c9488 <line:521:32, col:46> col:46 invalid scalar 'const int *'
| |-ParmVarDecl 0x1fa428c9500 <col:54, col:61> col:61 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa428c9590 <line:522:32, <invalid sloc>> col:48 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1fa428c9620 <line:523:32, <invalid sloc>> col:46 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1fa428c96a0 <col:57, col:65> col:65 invalid ctx 'int *'
|-FunctionDecl 0x1fa428c9978 <line:524:1, col:65> col:5 invalid ec_GFp_nistp521_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x1fa428c9858 <col:37, col:47> col:47 invalid group 'int *'
| `-ParmVarDecl 0x1fa428c98d8 <col:54, col:62> col:62 invalid ctx 'int *'
|-FunctionDecl 0x1fa428c9ad8 <line:525:1, col:63> col:5 invalid ec_GFp_nistp521_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x1fa428c9a40 <col:42, col:58> col:58 invalid group 'const int *'
|-FunctionDecl 0x1fa42a11fc8 <line:528:1, line:552:75> line:528:6 ec_GFp_nistp_points_make_affine_internal 'void (size_t, void *, size_t, void *, void (*)(void *), int (*)(const void *), void (*)(void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *))'
| |-ParmVarDecl 0x1fa428c9b90 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa428c9c10 <col:59, col:65> col:65 point_array 'void *'
| |-ParmVarDecl 0x1fa428c9c88 <line:529:47, col:54> col:54 felem_size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa428c9d08 <line:530:47, col:53> col:53 tmp_felems 'void *'
| |-ParmVarDecl 0x1fa428c9ed0 <line:531:47, col:75> col:54 felem_one 'void (*)(void *)'
| |-ParmVarDecl 0x1fa42a11178 <line:532:47, line:533:72> line:532:53 felem_is_zero 'int (*)(const void *)'
| |-ParmVarDecl 0x1fa42a11418 <line:534:47, line:536:72> line:534:54 felem_assign 'void (*)(void *, const void *)'
| |-ParmVarDecl 0x1fa42a115f0 <line:537:47, line:539:72> line:537:54 felem_square 'void (*)(void *, const void *)'
| |-ParmVarDecl 0x1fa42a11930 <line:540:47, line:544:70> line:540:54 felem_mul 'void (*)(void *, const void *, const void *)'
| |-ParmVarDecl 0x1fa42a11b08 <line:545:47, line:547:69> line:545:54 felem_inv 'void (*)(void *, const void *)'
| `-ParmVarDecl 0x1fa42a11ce0 <line:548:47, line:552:74> line:548:54 felem_contract 'void (*)(void *, const void *)'
|-FunctionDecl 0x1fa42a12338 <line:553:1, line:554:76> line:553:6 ec_GFp_nistp_recode_scalar_bits 'void (unsigned char *, unsigned char *, unsigned char)'
| |-ParmVarDecl 0x1fa42a12108 <col:38, col:53> col:53 sign 'unsigned char *'
| |-ParmVarDecl 0x1fa42a12188 <line:554:38, col:53> col:53 digit 'unsigned char *'
| `-ParmVarDecl 0x1fa42a12208 <col:60, col:74> col:74 in 'unsigned char'
|-FunctionDecl 0x1fa42a124b8 <line:556:1, col:39> col:5 invalid ec_precompute_mont_data 'int (int *)'
| `-ParmVarDecl 0x1fa42a12420 <col:29, <invalid sloc>> col:39 invalid 'int *'
|-FunctionDecl 0x1fa42a12610 <line:557:1, col:53> col:5 invalid ec_group_simple_order_bits 'int (const int *)'
| `-ParmVarDecl 0x1fa42a12578 <col:32, col:48> col:48 invalid group 'const int *'
|-FunctionDecl 0x1fa42a12868 <line:567:1, line:568:61> line:567:8 invalid ec_key_simple_priv2oct 'size_t (const int *, unsigned char *, size_t)'
| |-ParmVarDecl 0x1fa42a126d0 <col:31, col:45> col:45 invalid eckey 'const int *'
| |-ParmVarDecl 0x1fa42a12750 <line:568:31, col:46> col:46 buf 'unsigned char *'
| `-ParmVarDecl 0x1fa42a127c8 <col:51, col:58> col:58 len 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa42a12ad8 <line:569:1, col:79> col:5 invalid ec_key_simple_oct2priv 'int (int *, const unsigned char *, size_t)'
| |-ParmVarDecl 0x1fa42a12938 <col:28, col:36> col:36 invalid eckey 'int *'
| |-ParmVarDecl 0x1fa42a129b8 <col:43, col:64> col:64 buf 'const unsigned char *'
| `-ParmVarDecl 0x1fa42a12a30 <col:69, col:76> col:76 len 'size_t':'unsigned long long'
|-FunctionDecl 0x1fa42a12c40 <line:570:1, col:45> col:5 invalid ec_key_simple_generate_key 'int (int *)'
| `-ParmVarDecl 0x1fa42a12ba8 <col:32, col:40> col:40 invalid eckey 'int *'
|-FunctionDecl 0x1fa42a12d98 <line:571:1, col:52> col:5 invalid ec_key_simple_generate_public_key 'int (int *)'
| `-ParmVarDecl 0x1fa42a12d00 <col:39, col:47> col:47 invalid eckey 'int *'
|-FunctionDecl 0x1fa42a12ef0 <line:572:1, col:48> col:5 invalid ec_key_simple_check_key 'int (const int *)'
| `-ParmVarDecl 0x1fa42a12e58 <col:29, col:43> col:43 invalid eckey 'const int *'
|-RecordDecl 0x1fa42a12f98 <line:576:1, line:601:1> line:576:8 invalid struct ec_key_method_st definition
| |-FieldDecl 0x1fa42a13068 <line:577:5, col:17> col:17 name 'const char *'
| |-FieldDecl 0x1fa42a13100 <line:578:5, col:13> col:13 invalid flags 'int'
| |-FieldDecl 0x1fa42a13218 <line:579:5, col:28> col:11 init 'int (*)(int *)'
| |-FieldDecl 0x1fa42a13328 <line:580:5, col:31> col:12 finish 'void (*)(int *)'
| |-FieldDecl 0x1fa42a134c8 <line:581:5, col:48> col:11 copy 'int (*)(int *, const int *)'
| |-FieldDecl 0x1fa42a13668 <line:582:5, col:54> col:11 set_group 'int (*)(int *, const int *)'
| |-FieldDecl 0x1fa42a13808 <line:583:5, col:59> col:11 set_private 'int (*)(int *, const int *)'
| |-FieldDecl 0x1fa42a139a8 <line:584:5, col:59> col:11 set_public 'int (*)(int *, const int *)'
| |-FieldDecl 0x1fa42a13ac0 <line:585:5, col:30> col:11 keygen 'int (*)(int *)'
| |-FieldDecl 0x1fa42a13d70 <line:586:5, line:587:67> line:586:11 compute_key 'int (*)(unsigned char **, size_t *, const int *, const int *)'
| |-FieldDecl 0x1fa42a10340 <line:588:5, line:590:47> line:588:11 sign 'int (*)(int, const unsigned char *, int, unsigned char *, unsigned int *, const int *, const int *, int *)'
| |-FieldDecl 0x1fa42a106e0 <line:591:5, line:592:34> line:591:11 sign_setup 'int (*)(int *, int *, int **, int **)'
| |-FieldDecl 0x1fa42a10af8 <line:593:5, <invalid sloc>> col:18 invalid sign_sig 'int *(*)(const unsigned char *, int, const int *, const int *, int *)'
| |-FieldDecl 0x1fa42a10fa0 <line:597:5, line:598:74> line:597:11 verify 'int (*)(int, const unsigned char *, int, const unsigned char *, int, int *)'
| `-FieldDecl 0x1fa42a1a410 <line:599:5, line:600:58> line:599:11 verify_sig 'int (*)(const unsigned char *, int, const int *, int *)'
|-FunctionDecl 0x1fa42a1a518 <line:605:1, col:34> col:5 invalid ossl_ec_key_gen 'int (int *)'
| `-ParmVarDecl 0x1fa42a1a480 <col:21, col:29> col:29 invalid eckey 'int *'
|-FunctionDecl 0x1fa42a1a808 <line:606:1, line:607:70> line:606:5 invalid ossl_ecdh_compute_key 'int (unsigned char **, size_t *, const int *, const int *)'
| |-ParmVarDecl 0x1fa42a1a5e0 <col:27, col:43> col:43 pout 'unsigned char **'
| |-ParmVarDecl 0x1fa42a1a658 <col:49, col:57> col:57 poutlen 'size_t *'
| |-ParmVarDecl 0x1fa42a1a6d8 <line:607:27, col:43> col:43 invalid pub_key 'const int *'
| `-ParmVarDecl 0x1fa42a1a758 <col:52, col:66> col:66 invalid ecdh 'const int *'
|-FunctionDecl 0x1fa42a1ab10 <line:608:1, line:609:72> line:608:5 invalid ecdh_simple_compute_key 'int (unsigned char **, size_t *, const int *, const int *)'
| |-ParmVarDecl 0x1fa42a1a8e8 <col:29, col:45> col:45 pout 'unsigned char **'
| |-ParmVarDecl 0x1fa42a1a960 <col:51, col:59> col:59 poutlen 'size_t *'
| |-ParmVarDecl 0x1fa42a1a9e0 <line:609:29, col:45> col:45 invalid pub_key 'const int *'
| `-ParmVarDecl 0x1fa42a1aa60 <col:54, col:68> col:68 invalid ecdh 'const int *'
|-RecordDecl 0x1fa42a1abd0 <line:611:1, line:614:1> line:611:8 invalid struct ECDSA_SIG_st definition
| |-FieldDecl 0x1fa42a1aca8 <line:612:5, col:13> col:13 invalid r 'int *'
| `-FieldDecl 0x1fa42a1ad18 <line:613:5, col:13> col:13 invalid s 'int *'
|-FunctionDecl 0x1fa42a1afc8 <line:616:1, line:617:38> line:616:5 invalid ossl_ecdsa_sign_setup 'int (int *, int *, int **, int **)'
| |-ParmVarDecl 0x1fa42a1ad88 <col:27, col:35> col:35 invalid eckey 'int *'
| |-ParmVarDecl 0x1fa42a1ae08 <col:42, col:50> col:50 invalid ctx_in 'int *'
| |-ParmVarDecl 0x1fa42a1ae90 <col:58, col:67> col:67 invalid kinvp 'int **'
| `-ParmVarDecl 0x1fa42a1af18 <line:617:27, col:36> col:36 invalid rp 'int **'
|-FunctionDecl 0x1fa42a19530 <line:618:1, line:620:71> line:618:5 invalid ossl_ecdsa_sign 'int (int, const unsigned char *, int, unsigned char *, unsigned int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1fa42a1b0a0 <col:21, col:25> col:25 type 'int'
| |-ParmVarDecl 0x1fa42a19160 <col:31, col:52> col:52 dgst 'const unsigned char *'
| |-ParmVarDecl 0x1fa42a191e0 <col:58, col:62> col:62 dlen 'int'
| |-ParmVarDecl 0x1fa42a19260 <line:619:21, col:36> col:36 sig 'unsigned char *'
| |-ParmVarDecl 0x1fa42a192e0 <col:41, col:55> col:55 siglen 'unsigned int *'
| |-ParmVarDecl 0x1fa42a19360 <line:620:21, col:35> col:35 invalid kinv 'const int *'
| |-ParmVarDecl 0x1fa42a193e0 <col:41, col:55> col:55 invalid r 'const int *'
| `-ParmVarDecl 0x1fa42a19460 <col:58, col:66> col:66 invalid eckey 'int *'
|-FunctionDecl 0x1fa42a198e0 <line:621:1, line:623:45> line:621:12 invalid ossl_ecdsa_sign_sig 'int *(const unsigned char *, int, const int *, const int *, int *)'
| |-ParmVarDecl 0x1fa42a19628 <col:32, col:53> col:53 dgst 'const unsigned char *'
| |-ParmVarDecl 0x1fa42a196a8 <col:59, col:63> col:63 dgst_len 'int'
| |-ParmVarDecl 0x1fa42a19728 <line:622:32, col:46> col:46 invalid in_kinv 'const int *'
| |-ParmVarDecl 0x1fa42a197a8 <col:55, col:69> col:69 invalid in_r 'const int *'
| `-ParmVarDecl 0x1fa42a19828 <line:623:32, col:40> col:40 invalid eckey 'int *'
|-FunctionDecl 0x1fa42a19d00 <line:624:1, line:625:78> line:624:5 invalid ossl_ecdsa_verify 'int (int, const unsigned char *, int, const unsigned char *, int, int *)'
| |-ParmVarDecl 0x1fa42a199c0 <col:23, col:27> col:27 type 'int'
| |-ParmVarDecl 0x1fa42a19a40 <col:33, col:54> col:54 dgst 'const unsigned char *'
| |-ParmVarDecl 0x1fa42a19ac0 <col:60, col:64> col:64 dgst_len 'int'
| |-ParmVarDecl 0x1fa42a19b40 <line:625:23, col:44> col:44 sigbuf 'const unsigned char *'
| |-ParmVarDecl 0x1fa42a19bc0 <col:52, col:56> col:56 sig_len 'int'
| `-ParmVarDecl 0x1fa42a19c40 <col:65, col:73> col:73 invalid eckey 'int *'
|-FunctionDecl 0x1fa42a1a018 <line:626:1, line:627:62> line:626:5 invalid ossl_ecdsa_verify_sig 'int (const unsigned char *, int, const int *, int *)'
| |-ParmVarDecl 0x1fa42a19de8 <col:27, col:48> col:48 dgst 'const unsigned char *'
| |-ParmVarDecl 0x1fa42a19e68 <col:54, col:58> col:58 dgst_len 'int'
| |-ParmVarDecl 0x1fa42a19ee8 <line:627:27, col:44> col:44 invalid sig 'const int *'
| `-ParmVarDecl 0x1fa42a19f68 <col:49, col:57> col:57 invalid eckey 'int *'
|-FunctionDecl 0x1fa4296bbd0 <line:629:1, line:630:47> line:629:5 invalid X25519 'int (int *, const int *, const int *)'
| |-ParmVarDecl 0x1fa4296b890 <col:12, <invalid sloc>> col:20 invalid out_shared_key 'int *':'int *'
| |-ParmVarDecl 0x1fa4296b9d0 <col:40, <invalid sloc>> col:54 invalid private_key 'const int *':'const int *'
| `-ParmVarDecl 0x1fa4296baa0 <line:630:12, <invalid sloc>> col:26 invalid peer_public_value 'const int *':'const int *'
|-FunctionDecl 0x1fa4296bed8 <line:631:1, line:632:62> line:631:6 invalid X25519_public_from_private 'void (int *, const int *)'
| |-ParmVarDecl 0x1fa4296bcf0 <col:33, <invalid sloc>> col:41 invalid out_public_value 'int *':'int *'
| `-ParmVarDecl 0x1fa4296bdc0 <line:632:33, <invalid sloc>> col:47 invalid private_key 'const int *':'const int *'
|-FunctionDecl 0x1fa4296c148 <line:634:1, col:79> col:5 invalid ec_point_blind_coordinates 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1fa4296bfa0 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x1fa4296c020 <col:55, col:65> col:65 invalid p 'int *'
| `-ParmVarDecl 0x1fa4296c0a0 <col:68, col:76> col:76 invalid ctx 'int *'
|-RecordDecl 0x1fa4296c200 prev 0x1fa4294cfa8 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:35:1, line:47:1> line:35:8 invalid struct ec_pre_comp_st definition
| |-FieldDecl 0x1fa4296c298 <line:36:5, col:21> col:21 invalid group 'const int *'
| |-FieldDecl 0x1fa4296c300 <line:37:5, col:12> col:12 referenced blocksize 'size_t':'unsigned long long'
| |-FieldDecl 0x1fa4296c368 <line:38:5, col:12> col:12 referenced numblocks 'size_t':'unsigned long long'
| |-FieldDecl 0x1fa4296c3d0 <line:40:5, col:12> col:12 referenced w 'size_t':'unsigned long long'
| |-FieldDecl 0x1fa4296c448 <line:41:5, col:16> col:16 invalid points 'int **'
| |-FieldDecl 0x1fa4296c4b0 <line:44:5, col:12> col:12 referenced num 'size_t':'unsigned long long'
| |-FieldDecl 0x1fa4296c520 <line:45:5, col:9> col:9 referenced references 'int'
| `-FieldDecl 0x1fa4296c590 <line:46:5, col:20> col:20 invalid lock 'int *'
|-FunctionDecl 0x1fa4296c6f8 <line:49:1, line:74:1> line:49:21 invalid ec_pre_comp_new 'EC_PRE_COMP *(const int *)' static
| |-ParmVarDecl 0x1fa4296c600 <col:37, col:53> col:53 invalid group 'const int *'
| `-CompoundStmt 0x1fa4296d698 <line:50:1, line:74:1>
|   |-DeclStmt 0x1fa4296c8d0 <line:51:5, col:28>
|   | `-VarDecl 0x1fa4296c7c8 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\crypto\ec\ec_mult.c:51:18 used ret 'EC_PRE_COMP *' cinit
|   |   `-ImplicitCastExpr 0x1fa4296c8b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'EC_PRE_COMP *' <NullToPointer>
|   |     `-ParenExpr 0x1fa4296c898 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1fa4296c870 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1fa4296c830 <col:26> 'int' 0
|   |-IfStmt 0x1fa4296c9b0 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:53:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-OpaqueValueExpr 0x1fa4296c998 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1fa4296c988 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:54:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |   `-ImplicitCastExpr 0x1fa4296c970 <col:17, col:27> 'EC_PRE_COMP *' <NullToPointer>
|   |     `-ParenExpr 0x1fa4296c950 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1fa4296c928 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1fa4296c8e8 <col:26> 'int' 0
|   |-BinaryOperator 0x1fa4296cc50 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:56:5, col:38> 'EC_PRE_COMP *' '='
|   | |-DeclRefExpr 0x1fa4296c9c8 <col:5> 'EC_PRE_COMP *' lvalue Var 0x1fa4296c7c8 'ret' 'EC_PRE_COMP *'
|   | `-ImplicitCastExpr 0x1fa4296cc38 <col:11, col:38> 'EC_PRE_COMP *' <IntegralToPointer>
|   |   `-CallExpr 0x1fa4296cc10 <col:11, col:38> 'int'
|   |     |-ImplicitCastExpr 0x1fa4296cbf8 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1fa4296cb18 <col:11> 'int ()' Function 0x1fa4296ca50 'OPENSSL_zalloc' 'int ()'
|   |     `-UnaryExprOrTypeTraitExpr 0x1fa4296cba8 <col:26, col:37> 'unsigned long long' sizeof
|   |       `-ParenExpr 0x1fa4296cb88 <col:32, col:37> 'EC_PRE_COMP':'struct ec_pre_comp_st' lvalue
|   |         `-UnaryOperator 0x1fa4296cb70 <col:33, col:34> 'EC_PRE_COMP':'struct ec_pre_comp_st' lvalue prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x1fa4296cb58 <col:34> 'EC_PRE_COMP *' <LValueToRValue>
|   |             `-DeclRefExpr 0x1fa4296cb38 <col:34> 'EC_PRE_COMP *' lvalue Var 0x1fa4296c7c8 'ret' 'EC_PRE_COMP *' non_odr_use_unevaluated
|   |-IfStmt 0x1fa4296ced8 <line:57:5, line:60:5>
|   | |-BinaryOperator 0x1fa4296cd48 <line:57:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1fa4296cd18 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:57:9> 'EC_PRE_COMP *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1fa4296cc70 <col:9> 'EC_PRE_COMP *' lvalue Var 0x1fa4296c7c8 'ret' 'EC_PRE_COMP *'
|   | | `-ImplicitCastExpr 0x1fa4296cd30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'EC_PRE_COMP *' <BitCast>
|   | |   `-ParenExpr 0x1fa4296ccf8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1fa4296ccd0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1fa4296cc90 <col:26> 'int' 0
|   | `-CompoundStmt 0x1fa4296cec0 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:57:22, line:60:5>
|   |   `-ReturnStmt 0x1fa4296ceb0 <line:59:9, col:16>
|   |     `-ImplicitCastExpr 0x1fa4296ce98 <col:16> 'EC_PRE_COMP *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1fa4296ce78 <col:16> 'EC_PRE_COMP *' lvalue Var 0x1fa4296c7c8 'ret' 'EC_PRE_COMP *'
|   |-BinaryOperator 0x1fa4296cfd0 <line:63:5, col:22> 'size_t':'unsigned long long' '='
|   | |-MemberExpr 0x1fa4296cf60 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->blocksize 0x1fa4296c300
|   | | `-ImplicitCastExpr 0x1fa4296cf48 <col:5> 'EC_PRE_COMP *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1fa4296cf28 <col:5> 'EC_PRE_COMP *' lvalue Var 0x1fa4296c7c8 'ret' 'EC_PRE_COMP *'
|   | `-ImplicitCastExpr 0x1fa4296cfb8 <col:22> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x1fa4296cf90 <col:22> 'int' 8
|   |-BinaryOperator 0x1fa4296d098 <line:64:5, col:14> 'size_t':'unsigned long long' '='
|   | |-MemberExpr 0x1fa4296d028 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->w 0x1fa4296c3d0
|   | | `-ImplicitCastExpr 0x1fa4296d010 <col:5> 'EC_PRE_COMP *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1fa4296cff0 <col:5> 'EC_PRE_COMP *' lvalue Var 0x1fa4296c7c8 'ret' 'EC_PRE_COMP *'
|   | `-ImplicitCastExpr 0x1fa4296d080 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x1fa4296d058 <col:14> 'int' 4
|   |-BinaryOperator 0x1fa4296d148 <line:65:5, col:23> 'int' '='
|   | |-MemberExpr 0x1fa4296d0f0 <col:5, col:10> 'int' lvalue ->references 0x1fa4296c520
|   | | `-ImplicitCastExpr 0x1fa4296d0d8 <col:5> 'EC_PRE_COMP *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1fa4296d0b8 <col:5> 'EC_PRE_COMP *' lvalue Var 0x1fa4296c7c8 'ret' 'EC_PRE_COMP *'
|   | `-IntegerLiteral 0x1fa4296d120 <col:23> 'int' 1
|   |-IfStmt 0x1fa4296d638 <line:68:5, line:72:5>
|   | |-OpaqueValueExpr 0x1fa4296d620 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1fa4296d600 <line:68:28, line:72:5>
|   |   |-CallExpr 0x1fa4296d510 <line:70:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x1fa4296d4f8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1fa4296d4b8 <col:9> 'int ()' Function 0x1fa4296d3f0 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x1fa4296d538 <col:22> 'EC_PRE_COMP *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1fa4296d4d8 <col:22> 'EC_PRE_COMP *' lvalue Var 0x1fa4296c7c8 'ret' 'EC_PRE_COMP *'
|   |   `-ReturnStmt 0x1fa4296d5f0 <line:71:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |     `-ImplicitCastExpr 0x1fa4296d5d8 <col:17, col:27> 'EC_PRE_COMP *' <NullToPointer>
|   |       `-ParenExpr 0x1fa4296d5b8 <col:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x1fa4296d590 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x1fa4296d550 <col:26> 'int' 0
|   `-ReturnStmt 0x1fa4296d688 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:73:5, col:12>
|     `-ImplicitCastExpr 0x1fa4296d670 <col:12> 'EC_PRE_COMP *' <LValueToRValue>
|       `-DeclRefExpr 0x1fa4296d650 <col:12> 'EC_PRE_COMP *' lvalue Var 0x1fa4296c7c8 'ret' 'EC_PRE_COMP *'
|-FunctionDecl 0x1fa428e1f80 prev 0x1fa4294ecc8 <line:76:1, line:82:1> line:76:14 EC_ec_pre_comp_dup 'EC_PRE_COMP *(EC_PRE_COMP *)'
| |-ParmVarDecl 0x1fa4296d700 <col:33, col:46> col:46 used pre 'EC_PRE_COMP *'
| `-CompoundStmt 0x1fa428e2440 <line:77:1, line:82:1>
|   |-DeclStmt 0x1fa428e20a8 <line:78:5, col:10>
|   | `-VarDecl 0x1fa428e2040 <col:5, col:9> col:9 used i 'int'
|   `-ReturnStmt 0x1fa428e2430 <line:81:5, col:12>
|     `-ImplicitCastExpr 0x1fa428e2418 <col:12> 'EC_PRE_COMP *' <LValueToRValue>
|       `-DeclRefExpr 0x1fa428e23f8 <col:12> 'EC_PRE_COMP *' lvalue ParmVar 0x1fa4296d700 'pre' 'EC_PRE_COMP *'
|-FunctionDecl 0x1fa428e2518 prev 0x1fa429476a8 <line:84:1, line:106:1> line:84:6 used EC_ec_pre_comp_free 'void (EC_PRE_COMP *)'
| |-ParmVarDecl 0x1fa428e2470 <col:26, col:39> col:39 used pre 'EC_PRE_COMP *'
| `-CompoundStmt 0x1fa428e3260 <line:85:1, line:106:1>
|   |-DeclStmt 0x1fa428e2640 <line:86:5, col:10>
|   | `-VarDecl 0x1fa428e25d8 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x1fa428e2760 <line:88:5, line:89:9>
|   | |-BinaryOperator 0x1fa428e2730 <line:88:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1fa428e2700 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:88:9> 'EC_PRE_COMP *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1fa428e2658 <col:9> 'EC_PRE_COMP *' lvalue ParmVar 0x1fa428e2470 'pre' 'EC_PRE_COMP *'
|   | | `-ImplicitCastExpr 0x1fa428e2718 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'EC_PRE_COMP *' <BitCast>
|   | |   `-ParenExpr 0x1fa428e26e0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1fa428e26b8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1fa428e2678 <col:26> 'int' 0
|   | `-ReturnStmt 0x1fa428e2750 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:89:9>
|   |-CallExpr 0x1fa428e2a80 <line:92:5, col:33> 'int'
|   | |-ImplicitCastExpr 0x1fa428e2a68 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1fa428e29d0 <col:5> 'int ()' Function 0x1fa428e2908 'REF_PRINT_COUNT' 'int ()'
|   | |-ImplicitCastExpr 0x1fa428e2ab0 <col:21> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x1fa428e2a28 <col:21> 'char [6]' lvalue "EC_ec"
|   | `-ImplicitCastExpr 0x1fa428e2ac8 <col:30> 'EC_PRE_COMP *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1fa428e2a48 <col:30> 'EC_PRE_COMP *' lvalue ParmVar 0x1fa428e2470 'pre' 'EC_PRE_COMP *'
|   |-IfStmt 0x1fa428e2b70 <line:93:5, line:94:9>
|   | |-BinaryOperator 0x1fa428e2b40 <line:93:9, col:13> 'int' '>'
|   | | |-ImplicitCastExpr 0x1fa428e2b28 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1fa428e2ae0 <col:9> 'int' lvalue Var 0x1fa428e25d8 'i' 'int'
|   | | `-IntegerLiteral 0x1fa428e2b00 <col:13> 'int' 0
|   | `-ReturnStmt 0x1fa428e2b60 <line:94:9>
|   |-CallExpr 0x1fa428e2d30 <line:95:5, col:26> 'int'
|   | |-ImplicitCastExpr 0x1fa428e2d18 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1fa428e2c78 <col:5> 'int ()' Function 0x1fa428e2bb0 'REF_ASSERT_ISNT' 'int ()'
|   | `-BinaryOperator 0x1fa428e2cf8 <col:21, col:25> 'int' '<'
|   |   |-ImplicitCastExpr 0x1fa428e2ce0 <col:21> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1fa428e2c98 <col:21> 'int' lvalue Var 0x1fa428e25d8 'i' 'int'
|   |   `-IntegerLiteral 0x1fa428e2cb8 <col:25> 'int' 0
|   |-IfStmt 0x1fa428e3068 <line:97:5, line:103:5>
|   | |-OpaqueValueExpr 0x1fa428e3050 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1fa428e3040 <line:97:30, line:103:5>
|   `-CallExpr 0x1fa428e3220 <line:105:5, col:21> 'int'
|     |-ImplicitCastExpr 0x1fa428e3208 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1fa428e31c8 <col:5> 'int ()' Function 0x1fa4296d3f0 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x1fa428e3248 <col:18> 'EC_PRE_COMP *' <LValueToRValue>
|       `-DeclRefExpr 0x1fa428e31e8 <col:18> 'EC_PRE_COMP *' lvalue ParmVar 0x1fa428e2470 'pre' 'EC_PRE_COMP *'
|-FunctionDecl 0x1fa428e3578 <line:135:1, line:333:1> line:135:12 invalid ec_mul_consttime 'int (const int *, int *, const int *, const int *, int *)' static
| |-ParmVarDecl 0x1fa428e32c0 <col:29, col:45> col:45 invalid group 'const int *'
| |-ParmVarDecl 0x1fa428e3340 <col:52, col:62> col:62 invalid r 'int *'
| |-ParmVarDecl 0x1fa428e33c0 <line:136:29, col:43> col:43 invalid scalar 'const int *'
| |-ParmVarDecl 0x1fa428e3440 <col:51, col:67> col:67 invalid point 'const int *'
| |-ParmVarDecl 0x1fa428e34c0 <line:137:29, col:37> col:37 invalid ctx 'int *'
| `-CompoundStmt 0x1fa428e6f78 <line:138:1, line:333:1>
|   |-DeclStmt 0x1fa428e3990 <line:139:5, col:61>
|   | |-VarDecl 0x1fa428e3670 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x1fa428e36f0 <col:5, col:12> col:12 used cardinality_bits 'int'
|   | |-VarDecl 0x1fa428e3770 <col:5, col:30> col:30 used group_top 'int'
|   | |-VarDecl 0x1fa428e37f0 <col:5, col:41> col:41 used kbit 'int'
|   | |-VarDecl 0x1fa428e3870 <col:5, col:47> col:47 used pbit 'int'
|   | `-VarDecl 0x1fa428e38f0 <col:5, col:53> col:53 used Z_is_one 'int'
|   |-DeclStmt 0x1fa428e3cf8 <line:145:5, col:16>
|   | `-VarDecl 0x1fa428e3c68 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1fa428e3cd0 <col:15> 'int' 0
|   |-IfStmt 0x1fa428e3fe0 <line:147:5, line:148:16>
|   | |-OpaqueValueExpr 0x1fa428e3fc8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1fa428e3fb8 <col:9, col:16>
|   |   `-IntegerLiteral 0x1fa428e3f90 <col:16> 'int' 0
|   |-IfStmt 0x1fa428e4320 <line:153:5, line:154:14>
|   | |-OpaqueValueExpr 0x1fa428e4308 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1fa428e42f0 <col:9, col:14> 'err' 0x1fa428e42a0
|   |-IfStmt 0x1fa428e45c8 <line:156:5, line:162:5> has_else
|   | |-OpaqueValueExpr 0x1fa428e45b0 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x1fa428e4518 <line:156:24, line:159:5>
|   | | `-IfStmt 0x1fa428e4500 <line:157:9, line:158:18>
|   | |   |-OpaqueValueExpr 0x1fa428e44e8 <<invalid sloc>> '_Bool'
|   | |   `-GotoStmt 0x1fa428e44d0 <col:13, col:18> 'err' 0x1fa428e42a0
|   | `-CompoundStmt 0x1fa428e4598 <line:159:12, line:162:5>
|   |   `-IfStmt 0x1fa428e4580 <line:160:9, line:161:18>
|   |     |-OpaqueValueExpr 0x1fa428e4568 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x1fa428e4550 <col:13, col:18> 'err' 0x1fa428e42a0
|   |-DoStmt 0x1fa428e4778 <line:108:41, line:112:10>
|   | |-CompoundStmt 0x1fa428e4740 <line:108:44, line:111:36>
|   | `-IntegerLiteral 0x1fa428e4750 <line:112:9> 'int' 0
|   |-IfStmt 0x1fa428e4ab0 <line:169:5, line:170:14>
|   | |-OpaqueValueExpr 0x1fa428e4a98 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1fa428e4a80 <col:9, col:14> 'err' 0x1fa428e42a0
|   |-IfStmt 0x1fa428e50c8 <line:180:5, line:182:14>
|   | |-OpaqueValueExpr 0x1fa428e50b0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1fa428e5098 <col:9, col:14> 'err' 0x1fa428e42a0
|   |-IfStmt 0x1fa428e5220 <line:184:5, line:185:14>
|   | |-OpaqueValueExpr 0x1fa428e5208 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1fa428e51f0 <col:9, col:14> 'err' 0x1fa428e42a0
|   |-IfStmt 0x1fa428e5530 <line:189:5, line:196:5>
|   | |-OpaqueValueExpr 0x1fa428e5518 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1fa428e5500 <line:189:69, line:196:5>
|   |   `-IfStmt 0x1fa428e54e8 <line:194:9, line:195:18>
|   |     |-OpaqueValueExpr 0x1fa428e54d0 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x1fa428e54b8 <col:13, col:18> 'err' 0x1fa428e42a0
|   |-IfStmt 0x1fa428e5688 <line:198:5, line:199:14>
|   | |-OpaqueValueExpr 0x1fa428e5670 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1fa428e5658 <col:9, col:14> 'err' 0x1fa428e42a0
|   |-IfStmt 0x1fa428e5710 <line:201:5, line:202:14>
|   | |-OpaqueValueExpr 0x1fa428e56f8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1fa428e56e0 <col:9, col:14> 'err' 0x1fa428e42a0
|   |-IfStmt 0x1fa428e5f60 <line:211:5, line:217:14>
|   | |-OpaqueValueExpr 0x1fa428e5f48 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1fa428e5f30 <col:9, col:14> 'err' 0x1fa428e42a0
|   |-IfStmt 0x1fa428e5fb8 <line:227:5, line:228:14>
|   | |-OpaqueValueExpr 0x1fa428e5fa0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1fa428e5f78 <col:9, col:14> 'err' 0x1fa428e42a0
|   |-IfStmt 0x1fa428e6020 <line:231:5, line:232:14>
|   | |-OpaqueValueExpr 0x1fa428e6008 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1fa428e5ff0 <col:9, col:14> 'err' 0x1fa428e42a0
|   |-DoStmt 0x1fa428e60d0 <line:108:41, line:112:10>
|   | |-CompoundStmt 0x1fa428e6098 <line:108:44, line:111:36>
|   | `-IntegerLiteral 0x1fa428e60a8 <line:112:9> 'int' 0
|   |-IfStmt 0x1fa428e6230 <line:236:5, line:237:14>
|   | |-OpaqueValueExpr 0x1fa428e6218 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1fa428e6200 <col:9, col:14> 'err' 0x1fa428e42a0
|   |-BinaryOperator 0x1fa428e62a8 <line:239:5, col:12> 'int' '='
|   | |-DeclRefExpr 0x1fa428e6248 <col:5> 'int' lvalue Var 0x1fa428e3870 'pbit' 'int'
|   | `-IntegerLiteral 0x1fa428e6280 <col:12> 'int' 0
|   |-ForStmt 0x1fa428e69c0 <line:308:5, line:320:5>
|   | |-BinaryOperator 0x1fa428e6380 <line:308:10, col:33> 'int' '='
|   | | |-DeclRefExpr 0x1fa428e62c8 <col:10> 'int' lvalue Var 0x1fa428e3670 'i' 'int'
|   | | `-BinaryOperator 0x1fa428e6360 <col:14, col:33> 'int' '-'
|   | |   |-ImplicitCastExpr 0x1fa428e6348 <col:14> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1fa428e6300 <col:14> 'int' lvalue Var 0x1fa428e36f0 'cardinality_bits' 'int'
|   | |   `-IntegerLiteral 0x1fa428e6320 <col:33> 'int' 1
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1fa428e6400 <col:36, col:41> 'int' '>='
|   | | |-ImplicitCastExpr 0x1fa428e63e8 <col:36> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1fa428e63a0 <col:36> 'int' lvalue Var 0x1fa428e3670 'i' 'int'
|   | | `-IntegerLiteral 0x1fa428e63c0 <col:41> 'int' 0
|   | |-UnaryOperator 0x1fa428e6440 <col:44, col:45> 'int' postfix '--'
|   | | `-DeclRefExpr 0x1fa428e6420 <col:44> 'int' lvalue Var 0x1fa428e3670 'i' 'int'
|   | `-CompoundStmt 0x1fa428e6990 <col:49, line:320:5>
|   |   |-DoStmt 0x1fa428e6728 <line:241:39, line:248:10>
|   |   | |-CompoundStmt 0x1fa428e66f0 <line:241:42, line:247:52>
|   |   | `-IntegerLiteral 0x1fa428e6700 <line:248:9> 'int' 0
|   |   |-IfStmt 0x1fa428e6888 <line:311:9, line:312:18>
|   |   | |-OpaqueValueExpr 0x1fa428e6870 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x1fa428e6858 <col:13, col:18> 'err' 0x1fa428e42a0
|   |   |-IfStmt 0x1fa428e68f0 <line:313:9, line:314:18>
|   |   | |-OpaqueValueExpr 0x1fa428e68d8 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x1fa428e68c0 <col:13, col:18> 'err' 0x1fa428e42a0
|   |   `-CompoundAssignOperator 0x1fa428e6960 <line:319:9, col:17> 'int' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x1fa428e6908 <col:9> 'int' lvalue Var 0x1fa428e3870 'pbit' 'int'
|   |     `-ImplicitCastExpr 0x1fa428e6948 <col:17> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1fa428e6928 <col:17> 'int' lvalue Var 0x1fa428e37f0 'kbit' 'int'
|   |-DoStmt 0x1fa428e6c30 <line:241:39, line:248:10>
|   | |-CompoundStmt 0x1fa428e6bf8 <line:241:42, line:247:52>
|   | `-IntegerLiteral 0x1fa428e6c08 <line:248:9> 'int' 0
|   |-BinaryOperator 0x1fa428e6cb0 <line:325:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x1fa428e6c50 <col:5> 'int' lvalue Var 0x1fa428e3c68 'ret' 'int'
|   | `-IntegerLiteral 0x1fa428e6c88 <col:11> 'int' 1
|   |-LabelStmt 0x1fa428e6cf8 <line:327:2, col:5> 'err'
|   | `-NullStmt 0x1fa428e6cf0 <col:5>
|   `-ReturnStmt 0x1fa428e6f68 <line:332:5, col:12>
|     `-ImplicitCastExpr 0x1fa428e6f50 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1fa428e6f30 <col:12> 'int' lvalue Var 0x1fa428e3c68 'ret' 'int'
|-FunctionDecl 0x1fa428e7438 <line:358:1, line:763:1> line:358:5 invalid ec_wNAF_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1fa428e7058 <col:17, col:33> col:33 invalid group 'const int *'
| |-ParmVarDecl 0x1fa428e70d8 <col:40, col:50> col:50 invalid r 'int *'
| |-ParmVarDecl 0x1fa428e7158 <col:53, col:67> col:67 invalid scalar 'const int *'
| |-ParmVarDecl 0x1fa428e71d0 <line:359:17, col:24> col:24 used num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fa428e7260 <col:29, <invalid sloc>> col:45 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1fa428e72f0 <col:55, <invalid sloc>> col:69 invalid scalars 'const int **':'const int **'
| |-ParmVarDecl 0x1fa428e7370 <line:360:17, col:25> col:25 invalid ctx 'int *'
| `-CompoundStmt 0x1fa428f28f8 <line:361:1, line:763:1>
|   |-DeclStmt 0x1fa428e76b8 <line:363:5, col:37>
|   | `-VarDecl 0x1fa428e75c8 <col:5, col:21> col:21 invalid generator 'const int *'
|   |-DeclStmt 0x1fa428e77d0 <line:365:5, col:20>
|   | `-VarDecl 0x1fa428e7768 <col:5, col:12> col:12 used totalnum 'size_t':'unsigned long long'
|   |-DeclStmt 0x1fa428e7970 <line:366:5, col:40>
|   | |-VarDecl 0x1fa428e77f8 <col:5, col:24> col:12 used blocksize 'size_t':'unsigned long long' cinit
|   | | `-ImplicitCastExpr 0x1fa428e7888 <col:24> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1fa428e7860 <col:24> 'int' 0
|   | `-VarDecl 0x1fa428e78b0 <col:5, col:39> col:27 used numblocks 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x1fa428e7940 <col:39> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1fa428e7918 <col:39> 'int' 0
|   |-DeclStmt 0x1fa428e7a40 <line:367:5, col:36>
|   | `-VarDecl 0x1fa428e7998 <col:5, col:35> col:12 used pre_points_per_block 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x1fa428e7a28 <col:35> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1fa428e7a00 <col:35> 'int' 0
|   |-DeclStmt 0x1fa428e7b60 <line:368:5, col:16>
|   | |-VarDecl 0x1fa428e7a68 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   | `-VarDecl 0x1fa428e7ae0 <col:5, col:15> col:15 used j 'size_t':'unsigned long long'
|   |-DeclStmt 0x1fa428e7bf8 <line:369:5, col:10>
|   | `-VarDecl 0x1fa428e7b90 <col:5, col:9> col:9 used k 'int'
|   |-DeclStmt 0x1fa428e7cb8 <line:370:5, col:26>
|   | `-VarDecl 0x1fa428e7c28 <col:5, col:25> col:9 used r_is_inverted 'int' cinit
|   |   `-IntegerLiteral 0x1fa428e7c90 <col:25> 'int' 0
|   |-DeclStmt 0x1fa428e7d78 <line:371:5, col:29>
|   | `-VarDecl 0x1fa428e7ce8 <col:5, col:28> col:9 used r_is_at_infinity 'int' cinit
|   |   `-IntegerLiteral 0x1fa428e7d50 <col:28> 'int' 1
|   |-DeclStmt 0x1fa428e7ea8 <line:372:5, col:25>
|   | `-VarDecl 0x1fa428e7da0 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\crypto\ec\ec_mult.c:372:13 used wsize 'size_t *' cinit
|   |   `-ImplicitCastExpr 0x1fa428e7e90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'size_t *' <NullToPointer>
|   |     `-ParenExpr 0x1fa428e7e70 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1fa428e7e48 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1fa428e7e08 <col:26> 'int' 0
|   |-DeclStmt 0x1fa428e8050 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:373:5, col:30>
|   | `-VarDecl 0x1fa428e7f38 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\crypto\ec\ec_mult.c:373:19 used wNAF 'signed char **' cinit
|   |   `-ImplicitCastExpr 0x1fa428e8038 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char **' <NullToPointer>
|   |     `-ParenExpr 0x1fa428e8018 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1fa428e7ff0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1fa428e7fb0 <col:26> 'int' 0
|   |-DeclStmt 0x1fa428e8180 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:374:5, col:28>
|   | `-VarDecl 0x1fa428e8078 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\crypto\ec\ec_mult.c:374:13 used wNAF_len 'size_t *' cinit
|   |   `-ImplicitCastExpr 0x1fa428e8168 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'size_t *' <NullToPointer>
|   |     `-ParenExpr 0x1fa428e8148 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1fa428e8120 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1fa428e80e0 <col:26> 'int' 0
|   |-DeclStmt 0x1fa428e8250 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:375:5, col:23>
|   | `-VarDecl 0x1fa428e81a8 <col:5, col:22> col:12 used max_len 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x1fa428e8238 <col:22> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1fa428e8210 <col:22> 'int' 0
|   |-DeclStmt 0x1fa428e82e0 <line:376:5, col:19>
|   | `-VarDecl 0x1fa428e8278 <col:5, col:12> col:12 used num_val 'size_t':'unsigned long long'
|   |-DeclStmt 0x1fa428e8580 <line:381:5, col:39>
|   | `-VarDecl 0x1fa428e8478 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\crypto\ec\ec_mult.c:381:24 used pre_comp 'const EC_PRE_COMP *' cinit
|   |   `-ImplicitCastExpr 0x1fa428e8568 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const EC_PRE_COMP *' <NullToPointer>
|   |     `-ParenExpr 0x1fa428e8548 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1fa428e8520 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1fa428e84e0 <col:26> 'int' 0
|   |-DeclStmt 0x1fa428e8640 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:382:5, col:23>
|   | `-VarDecl 0x1fa428e85b0 <col:5, col:22> col:9 used num_scalar 'int' cinit
|   |   `-IntegerLiteral 0x1fa428e8618 <col:22> 'int' 0
|   |-DeclStmt 0x1fa428e8700 <line:385:5, col:16>
|   | `-VarDecl 0x1fa428e8670 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1fa428e86d8 <col:15> 'int' 0
|   |-IfStmt 0x1fa428e87a0 <line:387:5, line:390:5>
|   | |-OpaqueValueExpr 0x1fa428e8788 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1fa428e8770 <line:387:40, line:390:5>
|   |   `-ReturnStmt 0x1fa428e8760 <line:389:9, col:16>
|   |     `-IntegerLiteral 0x1fa428e8738 <col:16> 'int' 0
|   |-IfStmt 0x1fa428e8a48 <line:392:5, line:394:5>
|   | |-OpaqueValueExpr 0x1fa428e8a30 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1fa428e8a20 <line:392:41, line:394:5>
|   |-IfStmt 0x1fa428e8fa0 <line:396:5, line:422:5>
|   | |-OpaqueValueExpr 0x1fa428e8f88 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1fa428e8f68 <line:396:68, line:422:5>
|   |   |-IfStmt 0x1fa428e8d80 <line:401:9, line:411:9>
|   |   | |-OpaqueValueExpr 0x1fa428e8d68 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x1fa428e8d58 <line:401:45, line:411:9>
|   |   `-IfStmt 0x1fa428e8f50 <line:412:9, line:421:9>
|   |     |-OpaqueValueExpr 0x1fa428e8f38 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1fa428e8f28 <line:412:45, line:421:9>
|   |-ForStmt 0x1fa428e91f0 <line:424:5, line:429:5>
|   | |-BinaryOperator 0x1fa428e9030 <line:424:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x1fa428e8fb8 <col:10> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1fa428e9018 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1fa428e8ff0 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1fa428e90c0 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1fa428e9090 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1fa428e9050 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1fa428e90a8 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1fa428e9070 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x1fa428e71d0 'num' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x1fa428e9100 <col:26, col:27> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x1fa428e90e0 <col:26> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1fa428e91d8 <col:31, line:429:5>
|   |   `-IfStmt 0x1fa428e91c0 <line:425:9, line:428:9>
|   |     |-OpaqueValueExpr 0x1fa428e91a8 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1fa428e9190 <line:425:52, line:428:9>
|   |       `-ReturnStmt 0x1fa428e9180 <line:427:13, col:20>
|   |         `-IntegerLiteral 0x1fa428e9158 <col:20> 'int' 0
|   |-IfStmt 0x1fa428e9548 <line:431:5, line:435:5>
|   | |-OpaqueValueExpr 0x1fa428e9530 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1fa428e9518 <line:431:22, line:435:5>
|   |   `-IfStmt 0x1fa428e9500 <line:433:9, line:434:18>
|   |     |-OpaqueValueExpr 0x1fa428e94e8 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x1fa428e94d0 <col:13, col:18> 'err' 0x1fa428e9480
|   |-IfStmt 0x1fa428ea470 <line:437:5, line:478:5>
|   | |-OpaqueValueExpr 0x1fa428ea458 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1fa428ea438 <line:437:25, line:478:5>
|   |   |-IfStmt 0x1fa428e97e8 <line:439:9, line:442:9>
|   |   | |-OpaqueValueExpr 0x1fa428e97d0 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x1fa428e97b8 <line:439:32, line:442:9>
|   |   |   `-GotoStmt 0x1fa428e97a0 <line:441:13, col:18> 'err' 0x1fa428e9480
|   |   `-IfStmt 0x1fa428ea410 <line:447:9, line:477:9> has_else
|   |     |-OpaqueValueExpr 0x1fa428ea3f8 <<invalid sloc>> '_Bool'
|   |     |-CompoundStmt 0x1fa428ea1c0 <line:449:21, line:471:9>
|   |     | |-BinaryOperator 0x1fa428e9b60 <line:450:13, col:35> 'size_t':'unsigned long long' '='
|   |     | | |-DeclRefExpr 0x1fa428e9aa8 <col:13> 'size_t':'unsigned long long' lvalue Var 0x1fa428e77f8 'blocksize' 'size_t':'unsigned long long'
|   |     | | `-ImplicitCastExpr 0x1fa428e9b48 <col:25, col:35> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |   `-MemberExpr 0x1fa428e9b18 <col:25, col:35> 'const size_t':'const unsigned long long' lvalue ->blocksize 0x1fa4296c300
|   |     | |     `-ImplicitCastExpr 0x1fa428e9b00 <col:25> 'const EC_PRE_COMP *' <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x1fa428e9ae0 <col:25> 'const EC_PRE_COMP *' lvalue Var 0x1fa428e8478 'pre_comp' 'const EC_PRE_COMP *'
|   |     | |-IfStmt 0x1fa428e9db8 <line:461:13, line:462:39>
|   |     | | |-BinaryOperator 0x1fa428e9cd8 <line:461:17, col:39> 'int' '>'
|   |     | | | |-ImplicitCastExpr 0x1fa428e9ca8 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x1fa428e9c20 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1fa428e78b0 'numblocks' 'size_t':'unsigned long long'
|   |     | | | `-ImplicitCastExpr 0x1fa428e9cc0 <col:29, col:39> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | |   `-MemberExpr 0x1fa428e9c78 <col:29, col:39> 'const size_t':'const unsigned long long' lvalue ->numblocks 0x1fa4296c368
|   |     | | |     `-ImplicitCastExpr 0x1fa428e9c60 <col:29> 'const EC_PRE_COMP *' <LValueToRValue>
|   |     | | |       `-DeclRefExpr 0x1fa428e9c40 <col:29> 'const EC_PRE_COMP *' lvalue Var 0x1fa428e8478 'pre_comp' 'const EC_PRE_COMP *'
|   |     | | `-BinaryOperator 0x1fa428e9d98 <line:462:17, col:39> 'size_t':'unsigned long long' '='
|   |     | |   |-DeclRefExpr 0x1fa428e9cf8 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1fa428e78b0 'numblocks' 'size_t':'unsigned long long'
|   |     | |   `-ImplicitCastExpr 0x1fa428e9d80 <col:29, col:39> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |     `-MemberExpr 0x1fa428e9d50 <col:29, col:39> 'const size_t':'const unsigned long long' lvalue ->numblocks 0x1fa4296c368
|   |     | |       `-ImplicitCastExpr 0x1fa428e9d38 <col:29> 'const EC_PRE_COMP *' <LValueToRValue>
|   |     | |         `-DeclRefExpr 0x1fa428e9d18 <col:29> 'const EC_PRE_COMP *' lvalue Var 0x1fa428e8478 'pre_comp' 'const EC_PRE_COMP *'
|   |     | |-BinaryOperator 0x1fa428e9f88 <line:464:13, col:65> 'size_t':'unsigned long long' '='
|   |     | | |-DeclRefExpr 0x1fa428e9dd0 <col:13> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7998 'pre_points_per_block' 'size_t':'unsigned long long'
|   |     | | `-BinaryOperator 0x1fa428e9f68 <col:36, col:65> 'size_t':'unsigned long long' '<<'
|   |     | |   |-CStyleCastExpr 0x1fa428e9e40 <col:36, col:44> 'size_t':'unsigned long long' <IntegralCast>
|   |     | |   | `-IntegerLiteral 0x1fa428e9e08 <col:44> 'int' 1
|   |     | |   `-ParenExpr 0x1fa428e9f48 <col:49, col:65> 'unsigned long long'
|   |     | |     `-BinaryOperator 0x1fa428e9f28 <col:50, col:64> 'unsigned long long' '-'
|   |     | |       |-ImplicitCastExpr 0x1fa428e9ef8 <col:50, col:60> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |       | `-MemberExpr 0x1fa428e9ea0 <col:50, col:60> 'const size_t':'const unsigned long long' lvalue ->w 0x1fa4296c3d0
|   |     | |       |   `-ImplicitCastExpr 0x1fa428e9e88 <col:50> 'const EC_PRE_COMP *' <LValueToRValue>
|   |     | |       |     `-DeclRefExpr 0x1fa428e9e68 <col:50> 'const EC_PRE_COMP *' lvalue Var 0x1fa428e8478 'pre_comp' 'const EC_PRE_COMP *'
|   |     | |       `-ImplicitCastExpr 0x1fa428e9f10 <col:64> 'unsigned long long' <IntegralCast>
|   |     | |         `-IntegerLiteral 0x1fa428e9ed0 <col:64> 'int' 1
|   |     | `-IfStmt 0x1fa428ea1a8 <line:467:13, line:470:13>
|   |     |   |-BinaryOperator 0x1fa428ea138 <line:467:17, col:77> 'int' '!='
|   |     |   | |-ImplicitCastExpr 0x1fa428ea120 <col:17, col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   | | `-MemberExpr 0x1fa428e9ff8 <col:17, col:27> 'const size_t':'const unsigned long long' lvalue ->num 0x1fa4296c4b0
|   |     |   | |   `-ImplicitCastExpr 0x1fa428e9fe0 <col:17> 'const EC_PRE_COMP *' <LValueToRValue>
|   |     |   | |     `-DeclRefExpr 0x1fa428e9fc0 <col:17> 'const EC_PRE_COMP *' lvalue Var 0x1fa428e8478 'pre_comp' 'const EC_PRE_COMP *'
|   |     |   | `-ParenExpr 0x1fa428ea100 <col:34, col:77> 'unsigned long long'
|   |     |   |   `-BinaryOperator 0x1fa428ea0e0 <col:35, col:57> 'unsigned long long' '*'
|   |     |   |     |-ImplicitCastExpr 0x1fa428ea0b0 <col:35, col:45> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   |     | `-MemberExpr 0x1fa428ea060 <col:35, col:45> 'const size_t':'const unsigned long long' lvalue ->numblocks 0x1fa4296c368
|   |     |   |     |   `-ImplicitCastExpr 0x1fa428ea048 <col:35> 'const EC_PRE_COMP *' <LValueToRValue>
|   |     |   |     |     `-DeclRefExpr 0x1fa428ea028 <col:35> 'const EC_PRE_COMP *' lvalue Var 0x1fa428e8478 'pre_comp' 'const EC_PRE_COMP *'
|   |     |   |     `-ImplicitCastExpr 0x1fa428ea0c8 <col:57> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   |       `-DeclRefExpr 0x1fa428ea090 <col:57> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7998 'pre_points_per_block' 'size_t':'unsigned long long'
|   |     |   `-CompoundStmt 0x1fa428ea190 <col:80, line:470:13>
|   |     |     `-GotoStmt 0x1fa428ea178 <line:469:17, col:22> 'err' 0x1fa428e9480
|   |     `-CompoundStmt 0x1fa428ea3d0 <line:471:16, line:477:9>
|   |       |-BinaryOperator 0x1fa428ea2b0 <line:473:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'const EC_PRE_COMP *' '='
|   |       | |-DeclRefExpr 0x1fa428ea1f0 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:473:13> 'const EC_PRE_COMP *' lvalue Var 0x1fa428e8478 'pre_comp' 'const EC_PRE_COMP *'
|   |       | `-ImplicitCastExpr 0x1fa428ea298 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const EC_PRE_COMP *' <NullToPointer>
|   |       |   `-ParenExpr 0x1fa428ea278 <col:17, col:27> 'void *'
|   |       |     `-CStyleCastExpr 0x1fa428ea250 <col:18, col:26> 'void *' <NullToPointer>
|   |       |       `-IntegerLiteral 0x1fa428ea210 <col:26> 'int' 0
|   |       |-BinaryOperator 0x1fa428ea330 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:474:13, col:25> 'size_t':'unsigned long long' '='
|   |       | |-DeclRefExpr 0x1fa428ea2d0 <col:13> 'size_t':'unsigned long long' lvalue Var 0x1fa428e78b0 'numblocks' 'size_t':'unsigned long long'
|   |       | `-ImplicitCastExpr 0x1fa428ea318 <col:25> 'size_t':'unsigned long long' <IntegralCast>
|   |       |   `-IntegerLiteral 0x1fa428ea2f0 <col:25> 'int' 1
|   |       `-BinaryOperator 0x1fa428ea3b0 <line:475:13, col:26> 'int' '='
|   |         |-DeclRefExpr 0x1fa428ea350 <col:13> 'int' lvalue Var 0x1fa428e85b0 'num_scalar' 'int'
|   |         `-IntegerLiteral 0x1fa428ea388 <col:26> 'int' 1
|   |-BinaryOperator 0x1fa428ea550 <line:480:5, col:22> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1fa428ea488 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7768 'totalnum' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x1fa428ea530 <col:16, col:22> 'unsigned long long' '+'
|   |   |-ImplicitCastExpr 0x1fa428ea500 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1fa428ea4c0 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x1fa428e71d0 'num' 'size_t':'unsigned long long'
|   |   `-ImplicitCastExpr 0x1fa428ea518 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1fa428ea4e0 <col:22> 'size_t':'unsigned long long' lvalue Var 0x1fa428e78b0 'numblocks' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x1fa428ea828 <line:482:5, col:55> 'size_t *' '='
|   | |-DeclRefExpr 0x1fa428ea570 <col:5> 'size_t *' lvalue Var 0x1fa428e7da0 'wsize' 'size_t *'
|   | `-ImplicitCastExpr 0x1fa428ea810 <col:13, col:55> 'size_t *' <IntegralToPointer>
|   |   `-CallExpr 0x1fa428ea7e8 <col:13, col:55> 'int'
|   |     |-ImplicitCastExpr 0x1fa428ea7d0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1fa428ea698 <col:13> 'int ()' Function 0x1fa428ea5d0 'OPENSSL_malloc' 'int ()'
|   |     `-BinaryOperator 0x1fa428ea7b0 <col:28, col:54> 'unsigned long long' '*'
|   |       |-ImplicitCastExpr 0x1fa428ea798 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1fa428ea6b8 <col:28> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7768 'totalnum' 'size_t':'unsigned long long'
|   |       `-UnaryExprOrTypeTraitExpr 0x1fa428ea778 <col:39, col:54> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x1fa428ea758 <col:45, col:54> 'size_t':'unsigned long long' lvalue
|   |           `-ArraySubscriptExpr 0x1fa428ea738 <col:46, col:53> 'size_t':'unsigned long long' lvalue
|   |             |-ImplicitCastExpr 0x1fa428ea720 <col:46> 'size_t *' <LValueToRValue>
|   |             | `-DeclRefExpr 0x1fa428ea6d8 <col:46> 'size_t *' lvalue Var 0x1fa428e7da0 'wsize' 'size_t *' non_odr_use_unevaluated
|   |             `-IntegerLiteral 0x1fa428ea6f8 <col:52> 'int' 0
|   |-BinaryOperator 0x1fa428eaa10 <line:483:5, col:61> 'size_t *' '='
|   | |-DeclRefExpr 0x1fa428ea848 <col:5> 'size_t *' lvalue Var 0x1fa428e8078 'wNAF_len' 'size_t *'
|   | `-ImplicitCastExpr 0x1fa428ea9f8 <col:16, col:61> 'size_t *' <IntegralToPointer>
|   |   `-CallExpr 0x1fa428ea9d0 <col:16, col:61> 'int'
|   |     |-ImplicitCastExpr 0x1fa428ea9b8 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1fa428ea880 <col:16> 'int ()' Function 0x1fa428ea5d0 'OPENSSL_malloc' 'int ()'
|   |     `-BinaryOperator 0x1fa428ea998 <col:31, col:60> 'unsigned long long' '*'
|   |       |-ImplicitCastExpr 0x1fa428ea980 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1fa428ea8a0 <col:31> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7768 'totalnum' 'size_t':'unsigned long long'
|   |       `-UnaryExprOrTypeTraitExpr 0x1fa428ea960 <col:42, col:60> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x1fa428ea940 <col:48, col:60> 'size_t':'unsigned long long' lvalue
|   |           `-ArraySubscriptExpr 0x1fa428ea920 <col:49, col:59> 'size_t':'unsigned long long' lvalue
|   |             |-ImplicitCastExpr 0x1fa428ea908 <col:49> 'size_t *' <LValueToRValue>
|   |             | `-DeclRefExpr 0x1fa428ea8c0 <col:49> 'size_t *' lvalue Var 0x1fa428e8078 'wNAF_len' 'size_t *' non_odr_use_unevaluated
|   |             `-IntegerLiteral 0x1fa428ea8e0 <col:58> 'int' 0
|   |-BinaryOperator 0x1fa428eac78 <line:485:5, col:59> 'signed char **' '='
|   | |-DeclRefExpr 0x1fa428eaa30 <col:5> 'signed char **' lvalue Var 0x1fa428e7f38 'wNAF' 'signed char **'
|   | `-ImplicitCastExpr 0x1fa428eac60 <col:12, col:59> 'signed char **' <IntegralToPointer>
|   |   `-CallExpr 0x1fa428eac38 <col:12, col:59> 'int'
|   |     |-ImplicitCastExpr 0x1fa428eac20 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1fa428eaa68 <col:12> 'int ()' Function 0x1fa428ea5d0 'OPENSSL_malloc' 'int ()'
|   |     `-BinaryOperator 0x1fa428eac00 <col:27, col:58> 'unsigned long long' '*'
|   |       |-ParenExpr 0x1fa428eab20 <col:27, col:40> 'unsigned long long'
|   |       | `-BinaryOperator 0x1fa428eab00 <col:28, col:39> 'unsigned long long' '+'
|   |       |   |-ImplicitCastExpr 0x1fa428eaad0 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x1fa428eaa88 <col:28> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7768 'totalnum' 'size_t':'unsigned long long'
|   |       |   `-ImplicitCastExpr 0x1fa428eaae8 <col:39> 'unsigned long long' <IntegralCast>
|   |       |     `-IntegerLiteral 0x1fa428eaaa8 <col:39> 'int' 1
|   |       `-UnaryExprOrTypeTraitExpr 0x1fa428eabe0 <col:44, col:58> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x1fa428eabc0 <col:50, col:58> 'signed char *' lvalue
|   |           `-ArraySubscriptExpr 0x1fa428eaba0 <col:51, col:57> 'signed char *' lvalue
|   |             |-ImplicitCastExpr 0x1fa428eab88 <col:51> 'signed char **' <LValueToRValue>
|   |             | `-DeclRefExpr 0x1fa428eab40 <col:51> 'signed char **' lvalue Var 0x1fa428e7f38 'wNAF' 'signed char **' non_odr_use_unevaluated
|   |             `-IntegerLiteral 0x1fa428eab60 <col:56> 'int' 0
|   |-IfStmt 0x1fa428eaf38 <line:489:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-BinaryOperator 0x1fa428eadd8 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:489:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1fa428eada8 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:489:9> 'signed char **' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1fa428ead00 <col:9> 'signed char **' lvalue Var 0x1fa428e7f38 'wNAF' 'signed char **'
|   | | `-ImplicitCastExpr 0x1fa428eadc0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char **' <BitCast>
|   | |   `-ParenExpr 0x1fa428ead88 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1fa428ead60 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1fa428ead20 <col:26> 'int' 0
|   | `-BinaryOperator 0x1fa428eaf18 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:490:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'signed char *' '='
|   |   |-ArraySubscriptExpr 0x1fa428eae58 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:490:9, col:15> 'signed char *' lvalue
|   |   | |-ImplicitCastExpr 0x1fa428eae40 <col:9> 'signed char **' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1fa428eadf8 <col:9> 'signed char **' lvalue Var 0x1fa428e7f38 'wNAF' 'signed char **'
|   |   | `-IntegerLiteral 0x1fa428eae18 <col:14> 'int' 0
|   |   `-ImplicitCastExpr 0x1fa428eaf00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char *' <NullToPointer>
|   |     `-ParenExpr 0x1fa428eaee0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1fa428eaeb8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1fa428eae78 <col:26> 'int' 0
|   |-IfStmt 0x1fa428eb368 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:492:5, line:495:5>
|   | |-OpaqueValueExpr 0x1fa428eb350 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1fa428eb338 <line:492:79, line:495:5>
|   |   `-GotoStmt 0x1fa428eb320 <line:494:9, col:14> 'err' 0x1fa428e9480
|   |-BinaryOperator 0x1fa428eb3f8 <line:500:5, col:15> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1fa428eb380 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1fa428e8278 'num_val' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x1fa428eb3e0 <col:15> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x1fa428eb3b8 <col:15> 'int' 0
|   |-ForStmt 0x1fa428ec988 <line:502:5, line:516:5>
|   | |-BinaryOperator 0x1fa428eb478 <line:502:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x1fa428eb418 <col:10> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1fa428eb460 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1fa428eb438 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1fa428eb578 <col:17, col:27> 'int' '<'
|   | | |-ImplicitCastExpr 0x1fa428eb560 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1fa428eb498 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   | | `-BinaryOperator 0x1fa428eb540 <col:21, col:27> 'unsigned long long' '+'
|   | |   |-ImplicitCastExpr 0x1fa428eb4f8 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1fa428eb4b8 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x1fa428e71d0 'num' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x1fa428eb528 <col:27> 'unsigned long long' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x1fa428eb510 <col:27> 'int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1fa428eb4d8 <col:27> 'int' lvalue Var 0x1fa428e85b0 'num_scalar' 'int'
|   | |-UnaryOperator 0x1fa428eb5b8 <col:39, col:40> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x1fa428eb598 <col:39> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1fa428ec948 <col:44, line:516:5>
|   |   |-DeclStmt 0x1fa428eb648 <line:503:9, col:20>
|   |   | `-VarDecl 0x1fa428eb5e0 <col:9, col:16> col:16 used bits 'size_t':'unsigned long long'
|   |   |-BinaryOperator 0x1fa428ebe28 <line:506:9, line:349:21> 'size_t':'unsigned long long' '='
|   |   | |-ArraySubscriptExpr 0x1fa428eb7f8 <line:506:9, col:16> 'size_t':'unsigned long long' lvalue
|   |   | | |-ImplicitCastExpr 0x1fa428eb7c8 <col:9> 'size_t *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1fa428eb788 <col:9> 'size_t *' lvalue Var 0x1fa428e7da0 'wsize' 'size_t *'
|   |   | | `-ImplicitCastExpr 0x1fa428eb7e0 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1fa428eb7a8 <col:15> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |   | `-ParenExpr 0x1fa428ebe08 <line:343:17, line:349:21> 'size_t':'unsigned long long'
|   |   |   `-CStyleCastExpr 0x1fa428ebde0 <line:343:18, line:349:20> 'size_t':'unsigned long long' <IntegralCast>
|   |   |     `-ParenExpr 0x1fa428ebdc0 <line:344:18, line:349:20> 'int'
|   |   |       `-ConditionalOperator 0x1fa428ebd60 <line:344:19, line:349:19> 'int'
|   |   |         |-BinaryOperator 0x1fa428eb8b0 <line:344:19, col:26> 'int' '>='
|   |   |         | |-ImplicitCastExpr 0x1fa428eb880 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |         | | `-ParenExpr 0x1fa428eb838 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |   |         | |   `-DeclRefExpr 0x1fa428eb818 <line:506:51> 'size_t':'unsigned long long' lvalue Var 0x1fa428eb5e0 'bits' 'size_t':'unsigned long long'
|   |   |         | `-ImplicitCastExpr 0x1fa428eb898 <line:344:26> 'unsigned long long' <IntegralCast>
|   |   |         |   `-IntegerLiteral 0x1fa428eb858 <col:26> 'int' 2000
|   |   |         |-IntegerLiteral 0x1fa428eb8d0 <col:33> 'int' 6
|   |   |         `-ConditionalOperator 0x1fa428ebd30 <line:345:19, line:349:19> 'int'
|   |   |           |-BinaryOperator 0x1fa428eb990 <line:345:19, col:27> 'int' '>='
|   |   |           | |-ImplicitCastExpr 0x1fa428eb960 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |           | | `-ParenExpr 0x1fa428eb918 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |   |           | |   `-DeclRefExpr 0x1fa428eb8f8 <line:506:51> 'size_t':'unsigned long long' lvalue Var 0x1fa428eb5e0 'bits' 'size_t':'unsigned long long'
|   |   |           | `-ImplicitCastExpr 0x1fa428eb978 <line:345:27> 'unsigned long long' <IntegralCast>
|   |   |           |   `-IntegerLiteral 0x1fa428eb938 <col:27> 'int' 800
|   |   |           |-IntegerLiteral 0x1fa428eb9b0 <col:33> 'int' 5
|   |   |           `-ConditionalOperator 0x1fa428ebd00 <line:346:19, line:349:19> 'int'
|   |   |             |-BinaryOperator 0x1fa428eba70 <line:346:19, col:27> 'int' '>='
|   |   |             | |-ImplicitCastExpr 0x1fa428eba40 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |             | | `-ParenExpr 0x1fa428eb9f8 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |   |             | |   `-DeclRefExpr 0x1fa428eb9d8 <line:506:51> 'size_t':'unsigned long long' lvalue Var 0x1fa428eb5e0 'bits' 'size_t':'unsigned long long'
|   |   |             | `-ImplicitCastExpr 0x1fa428eba58 <line:346:27> 'unsigned long long' <IntegralCast>
|   |   |             |   `-IntegerLiteral 0x1fa428eba18 <col:27> 'int' 300
|   |   |             |-IntegerLiteral 0x1fa428eba90 <col:33> 'int' 4
|   |   |             `-ConditionalOperator 0x1fa428ebcd0 <line:347:19, line:349:19> 'int'
|   |   |               |-BinaryOperator 0x1fa428ebb50 <line:347:19, col:28> 'int' '>='
|   |   |               | |-ImplicitCastExpr 0x1fa428ebb20 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |               | | `-ParenExpr 0x1fa428ebad8 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |   |               | |   `-DeclRefExpr 0x1fa428ebab8 <line:506:51> 'size_t':'unsigned long long' lvalue Var 0x1fa428eb5e0 'bits' 'size_t':'unsigned long long'
|   |   |               | `-ImplicitCastExpr 0x1fa428ebb38 <line:347:28> 'unsigned long long' <IntegralCast>
|   |   |               |   `-IntegerLiteral 0x1fa428ebaf8 <col:28> 'int' 70
|   |   |               |-IntegerLiteral 0x1fa428ebb70 <col:33> 'int' 3
|   |   |               `-ConditionalOperator 0x1fa428ebca0 <line:348:19, line:349:19> 'int'
|   |   |                 |-BinaryOperator 0x1fa428ebc30 <line:348:19, col:28> 'int' '>='
|   |   |                 | |-ImplicitCastExpr 0x1fa428ebc00 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |                 | | `-ParenExpr 0x1fa428ebbb8 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |   |                 | |   `-DeclRefExpr 0x1fa428ebb98 <line:506:51> 'size_t':'unsigned long long' lvalue Var 0x1fa428eb5e0 'bits' 'size_t':'unsigned long long'
|   |   |                 | `-ImplicitCastExpr 0x1fa428ebc18 <line:348:28> 'unsigned long long' <IntegralCast>
|   |   |                 |   `-IntegerLiteral 0x1fa428ebbd8 <col:28> 'int' 20
|   |   |                 |-IntegerLiteral 0x1fa428ebc50 <col:33> 'int' 2
|   |   |                 `-IntegerLiteral 0x1fa428ebc78 <line:349:19> 'int' 1
|   |   |-CompoundAssignOperator 0x1fa428ec030 <line:507:9, col:46> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-DeclRefExpr 0x1fa428ebe48 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1fa428e8278 'num_val' 'size_t':'unsigned long long'
|   |   | `-BinaryOperator 0x1fa428ec010 <col:20, col:46> 'size_t':'unsigned long long' '<<'
|   |   |   |-CStyleCastExpr 0x1fa428ebea0 <col:20, col:28> 'size_t':'unsigned long long' <IntegralCast>
|   |   |   | `-IntegerLiteral 0x1fa428ebe68 <col:28> 'int' 1
|   |   |   `-ParenExpr 0x1fa428ebff0 <col:33, col:46> 'unsigned long long'
|   |   |     `-BinaryOperator 0x1fa428ebfd0 <col:34, col:45> 'unsigned long long' '-'
|   |   |       |-ImplicitCastExpr 0x1fa428ebf80 <col:34, col:41> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       | `-ArraySubscriptExpr 0x1fa428ebf38 <col:34, col:41> 'size_t':'unsigned long long' lvalue
|   |   |       |   |-ImplicitCastExpr 0x1fa428ebf08 <col:34> 'size_t *' <LValueToRValue>
|   |   |       |   | `-DeclRefExpr 0x1fa428ebec8 <col:34> 'size_t *' lvalue Var 0x1fa428e7da0 'wsize' 'size_t *'
|   |   |       |   `-ImplicitCastExpr 0x1fa428ebf20 <col:40> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       |     `-DeclRefExpr 0x1fa428ebee8 <col:40> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |   |       `-ImplicitCastExpr 0x1fa428ebf98 <col:45> 'unsigned long long' <IntegralCast>
|   |   |         `-IntegerLiteral 0x1fa428ebf58 <col:45> 'int' 1
|   |   |-BinaryOperator 0x1fa428ec1f0 <line:508:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'signed char *' '='
|   |   | |-ArraySubscriptExpr 0x1fa428ec130 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:508:9, col:19> 'signed char *' lvalue
|   |   | | |-ImplicitCastExpr 0x1fa428ec118 <col:9> 'signed char **' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1fa428ec060 <col:9> 'signed char **' lvalue Var 0x1fa428e7f38 'wNAF' 'signed char **'
|   |   | | `-BinaryOperator 0x1fa428ec0f8 <col:14, col:18> 'unsigned long long' '+'
|   |   | |   |-ImplicitCastExpr 0x1fa428ec0c8 <col:14> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x1fa428ec080 <col:14> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |   | |   `-ImplicitCastExpr 0x1fa428ec0e0 <col:18> 'unsigned long long' <IntegralCast>
|   |   | |     `-IntegerLiteral 0x1fa428ec0a0 <col:18> 'int' 1
|   |   | `-ImplicitCastExpr 0x1fa428ec1d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char *' <NullToPointer>
|   |   |   `-ParenExpr 0x1fa428ec1b8 <col:17, col:27> 'void *'
|   |   |     `-CStyleCastExpr 0x1fa428ec190 <col:18, col:26> 'void *' <NullToPointer>
|   |   |       `-IntegerLiteral 0x1fa428ec150 <col:26> 'int' 0
|   |   |-IfStmt 0x1fa428ec718 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:512:9, line:513:18>
|   |   | |-BinaryOperator 0x1fa428ec6e0 <line:512:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1fa428ec6b0 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:512:13, col:19> 'signed char *' <LValueToRValue>
|   |   | | | `-ArraySubscriptExpr 0x1fa428ec608 <col:13, col:19> 'signed char *' lvalue
|   |   | | |   |-ImplicitCastExpr 0x1fa428ec5d8 <col:13> 'signed char **' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x1fa428ec598 <col:13> 'signed char **' lvalue Var 0x1fa428e7f38 'wNAF' 'signed char **'
|   |   | | |   `-ImplicitCastExpr 0x1fa428ec5f0 <col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1fa428ec5b8 <col:18> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |   | | `-ImplicitCastExpr 0x1fa428ec6c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char *' <BitCast>
|   |   | |   `-ParenExpr 0x1fa428ec690 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x1fa428ec668 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x1fa428ec628 <col:26> 'int' 0
|   |   | `-GotoStmt 0x1fa428ec700 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:513:13, col:18> 'err' 0x1fa428e9480
|   |   `-IfStmt 0x1fa428ec930 <line:514:9, line:515:33>
|   |     |-BinaryOperator 0x1fa428ec828 <line:514:13, col:27> 'int' '>'
|   |     | |-ImplicitCastExpr 0x1fa428ec7f8 <col:13, col:23> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | `-ArraySubscriptExpr 0x1fa428ec7a0 <col:13, col:23> 'size_t':'unsigned long long' lvalue
|   |     | |   |-ImplicitCastExpr 0x1fa428ec770 <col:13> 'size_t *' <LValueToRValue>
|   |     | |   | `-DeclRefExpr 0x1fa428ec730 <col:13> 'size_t *' lvalue Var 0x1fa428e8078 'wNAF_len' 'size_t *'
|   |     | |   `-ImplicitCastExpr 0x1fa428ec788 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x1fa428ec750 <col:22> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x1fa428ec810 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1fa428ec7c0 <col:27> 'size_t':'unsigned long long' lvalue Var 0x1fa428e81a8 'max_len' 'size_t':'unsigned long long'
|   |     `-BinaryOperator 0x1fa428ec910 <line:515:13, col:33> 'size_t':'unsigned long long' '='
|   |       |-DeclRefExpr 0x1fa428ec848 <col:13> 'size_t':'unsigned long long' lvalue Var 0x1fa428e81a8 'max_len' 'size_t':'unsigned long long'
|   |       `-ImplicitCastExpr 0x1fa428ec8f8 <col:23, col:33> 'size_t':'unsigned long long' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x1fa428ec8d8 <col:23, col:33> 'size_t':'unsigned long long' lvalue
|   |           |-ImplicitCastExpr 0x1fa428ec8a8 <col:23> 'size_t *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x1fa428ec868 <col:23> 'size_t *' lvalue Var 0x1fa428e8078 'wNAF_len' 'size_t *'
|   |           `-ImplicitCastExpr 0x1fa428ec8c0 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|   |             `-DeclRefExpr 0x1fa428ec888 <col:32> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |-IfStmt 0x1fa428ef420 <line:518:5, line:625:5>
|   | |-ImplicitCastExpr 0x1fa428ec9e0 <line:518:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x1fa428ec9c0 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1fa428e78b0 'numblocks' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1fa428ef408 <col:20, line:625:5>
|   |   `-IfStmt 0x1fa428ef3e0 <line:521:9, line:624:9> has_else
|   |     |-BinaryOperator 0x1fa428ecad0 <line:521:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   |     | |-ImplicitCastExpr 0x1fa428ecaa0 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:521:13> 'const EC_PRE_COMP *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1fa428ec9f8 <col:13> 'const EC_PRE_COMP *' lvalue Var 0x1fa428e8478 'pre_comp' 'const EC_PRE_COMP *'
|   |     | `-ImplicitCastExpr 0x1fa428ecab8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const EC_PRE_COMP *' <BitCast>
|   |     |   `-ParenExpr 0x1fa428eca80 <col:17, col:27> 'void *'
|   |     |     `-CStyleCastExpr 0x1fa428eca58 <col:18, col:26> 'void *' <NullToPointer>
|   |     |       `-IntegerLiteral 0x1fa428eca18 <col:26> 'int' 0
|   |     |-CompoundStmt 0x1fa428ecbd8 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:521:31, line:527:9>
|   |     | `-IfStmt 0x1fa428ecbc0 <line:522:13, line:525:13>
|   |     |   |-BinaryOperator 0x1fa428ecb50 <line:522:17, col:31> 'int' '!='
|   |     |   | |-ImplicitCastExpr 0x1fa428ecb38 <col:17> 'int' <LValueToRValue>
|   |     |   | | `-DeclRefExpr 0x1fa428ecaf0 <col:17> 'int' lvalue Var 0x1fa428e85b0 'num_scalar' 'int'
|   |     |   | `-IntegerLiteral 0x1fa428ecb10 <col:31> 'int' 1
|   |     |   `-CompoundStmt 0x1fa428ecba8 <col:34, line:525:13>
|   |     |     `-GotoStmt 0x1fa428ecb90 <line:524:17, col:22> 'err' 0x1fa428e9480
|   |     `-CompoundStmt 0x1fa428ef3a0 <line:527:16, line:624:9>
|   |       |-DeclStmt 0x1fa428ecd10 <line:528:13, col:41>
|   |       | `-VarDecl 0x1fa428ecc08 <col:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/before\crypto\ec\ec_mult.c:528:26 used tmp_wNAF 'signed char *' cinit
|   |       |   `-ImplicitCastExpr 0x1fa428eccf8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char *' <NullToPointer>
|   |       |     `-ParenExpr 0x1fa428eccd8 <col:17, col:27> 'void *'
|   |       |       `-CStyleCastExpr 0x1fa428eccb0 <col:18, col:26> 'void *' <NullToPointer>
|   |       |         `-IntegerLiteral 0x1fa428ecc70 <col:26> 'int' 0
|   |       |-DeclStmt 0x1fa428ecde0 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:529:13, col:31>
|   |       | `-VarDecl 0x1fa428ecd38 <col:13, col:30> col:20 used tmp_len 'size_t':'unsigned long long' cinit
|   |       |   `-ImplicitCastExpr 0x1fa428ecdc8 <col:30> 'size_t':'unsigned long long' <IntegralCast>
|   |       |     `-IntegerLiteral 0x1fa428ecda0 <col:30> 'int' 0
|   |       |-IfStmt 0x1fa428ecec8 <line:531:13, line:534:13>
|   |       | |-BinaryOperator 0x1fa428ece58 <line:531:17, col:31> 'int' '!='
|   |       | | |-ImplicitCastExpr 0x1fa428ece40 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x1fa428ecdf8 <col:17> 'int' lvalue Var 0x1fa428e85b0 'num_scalar' 'int'
|   |       | | `-IntegerLiteral 0x1fa428ece18 <col:31> 'int' 0
|   |       | `-CompoundStmt 0x1fa428eceb0 <col:34, line:534:13>
|   |       |   `-GotoStmt 0x1fa428ece98 <line:533:17, col:22> 'err' 0x1fa428e9480
|   |       |-BinaryOperator 0x1fa428ecff0 <line:539:13, col:36> 'size_t':'unsigned long long' '='
|   |       | |-ArraySubscriptExpr 0x1fa428ecf50 <col:13, col:22> 'size_t':'unsigned long long' lvalue
|   |       | | |-ImplicitCastExpr 0x1fa428ecf20 <col:13> 'size_t *' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x1fa428ecee0 <col:13> 'size_t *' lvalue Var 0x1fa428e7da0 'wsize' 'size_t *'
|   |       | | `-ImplicitCastExpr 0x1fa428ecf38 <col:19> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1fa428ecf00 <col:19> 'size_t':'unsigned long long' lvalue ParmVar 0x1fa428e71d0 'num' 'size_t':'unsigned long long'
|   |       | `-ImplicitCastExpr 0x1fa428ecfd8 <col:26, col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |       |   `-MemberExpr 0x1fa428ecfa8 <col:26, col:36> 'const size_t':'const unsigned long long' lvalue ->w 0x1fa4296c3d0
|   |       |     `-ImplicitCastExpr 0x1fa428ecf90 <col:26> 'const EC_PRE_COMP *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x1fa428ecf70 <col:26> 'const EC_PRE_COMP *' lvalue Var 0x1fa428e8478 'pre_comp' 'const EC_PRE_COMP *'
|   |       |-IfStmt 0x1fa428ed1b0 <line:541:13, line:542:22>
|   |       | |-UnaryOperator 0x1fa428ed180 <line:541:17, col:18> 'int' prefix '!' cannot overflow
|   |       | | `-ImplicitCastExpr 0x1fa428ed168 <col:18> 'signed char *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1fa428ed148 <col:18> 'signed char *' lvalue Var 0x1fa428ecc08 'tmp_wNAF' 'signed char *'
|   |       | `-GotoStmt 0x1fa428ed198 <line:542:17, col:22> 'err' 0x1fa428e9480
|   |       `-IfStmt 0x1fa428ef378 <line:544:13, line:623:13> has_else
|   |         |-BinaryOperator 0x1fa428ed238 <line:544:17, col:28> 'int' '<='
|   |         | |-ImplicitCastExpr 0x1fa428ed208 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x1fa428ed1c8 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1fa428ecd38 'tmp_len' 'size_t':'unsigned long long'
|   |         | `-ImplicitCastExpr 0x1fa428ed220 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x1fa428ed1e8 <col:28> 'size_t':'unsigned long long' lvalue Var 0x1fa428e81a8 'max_len' 'size_t':'unsigned long long'
|   |         |-CompoundStmt 0x1fa428ed788 <col:37, line:560:13>
|   |         | |-BinaryOperator 0x1fa428ed2b8 <line:551:17, col:29> 'size_t':'unsigned long long' '='
|   |         | | |-DeclRefExpr 0x1fa428ed258 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1fa428e78b0 'numblocks' 'size_t':'unsigned long long'
|   |         | | `-ImplicitCastExpr 0x1fa428ed2a0 <col:29> 'size_t':'unsigned long long' <IntegralCast>
|   |         | |   `-IntegerLiteral 0x1fa428ed278 <col:29> 'int' 1
|   |         | |-BinaryOperator 0x1fa428ed390 <line:552:17, col:34> 'size_t':'unsigned long long' '='
|   |         | | |-DeclRefExpr 0x1fa428ed2d8 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7768 'totalnum' 'size_t':'unsigned long long'
|   |         | | `-BinaryOperator 0x1fa428ed370 <col:28, col:34> 'unsigned long long' '+'
|   |         | |   |-ImplicitCastExpr 0x1fa428ed340 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | |   | `-DeclRefExpr 0x1fa428ed2f8 <col:28> 'size_t':'unsigned long long' lvalue ParmVar 0x1fa428e71d0 'num' 'size_t':'unsigned long long'
|   |         | |   `-ImplicitCastExpr 0x1fa428ed358 <col:34> 'unsigned long long' <IntegralCast>
|   |         | |     `-IntegerLiteral 0x1fa428ed318 <col:34> 'int' 1
|   |         | |-BinaryOperator 0x1fa428ed478 <line:553:17, col:29> 'signed char *' '='
|   |         | | |-ArraySubscriptExpr 0x1fa428ed420 <col:17, col:25> 'signed char *' lvalue
|   |         | | | |-ImplicitCastExpr 0x1fa428ed3f0 <col:17> 'signed char **' <LValueToRValue>
|   |         | | | | `-DeclRefExpr 0x1fa428ed3b0 <col:17> 'signed char **' lvalue Var 0x1fa428e7f38 'wNAF' 'signed char **'
|   |         | | | `-ImplicitCastExpr 0x1fa428ed408 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x1fa428ed3d0 <col:22> 'size_t':'unsigned long long' lvalue ParmVar 0x1fa428e71d0 'num' 'size_t':'unsigned long long'
|   |         | | `-ImplicitCastExpr 0x1fa428ed460 <col:29> 'signed char *' <LValueToRValue>
|   |         | |   `-DeclRefExpr 0x1fa428ed440 <col:29> 'signed char *' lvalue Var 0x1fa428ecc08 'tmp_wNAF' 'signed char *'
|   |         | |-BinaryOperator 0x1fa428ed628 <line:554:17, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'signed char *' '='
|   |         | | |-ArraySubscriptExpr 0x1fa428ed568 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:554:17, col:29> 'signed char *' lvalue
|   |         | | | |-ImplicitCastExpr 0x1fa428ed550 <col:17> 'signed char **' <LValueToRValue>
|   |         | | | | `-DeclRefExpr 0x1fa428ed498 <col:17> 'signed char **' lvalue Var 0x1fa428e7f38 'wNAF' 'signed char **'
|   |         | | | `-BinaryOperator 0x1fa428ed530 <col:22, col:28> 'unsigned long long' '+'
|   |         | | |   |-ImplicitCastExpr 0x1fa428ed500 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | | |   | `-DeclRefExpr 0x1fa428ed4b8 <col:22> 'size_t':'unsigned long long' lvalue ParmVar 0x1fa428e71d0 'num' 'size_t':'unsigned long long'
|   |         | | |   `-ImplicitCastExpr 0x1fa428ed518 <col:28> 'unsigned long long' <IntegralCast>
|   |         | | |     `-IntegerLiteral 0x1fa428ed4d8 <col:28> 'int' 1
|   |         | | `-ImplicitCastExpr 0x1fa428ed610 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char *' <NullToPointer>
|   |         | |   `-ParenExpr 0x1fa428ed5f0 <col:17, col:27> 'void *'
|   |         | |     `-CStyleCastExpr 0x1fa428ed5c8 <col:18, col:26> 'void *' <NullToPointer>
|   |         | |       `-IntegerLiteral 0x1fa428ed588 <col:26> 'int' 0
|   |         | `-BinaryOperator 0x1fa428ed710 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:555:17, col:33> 'size_t':'unsigned long long' '='
|   |         |   |-ArraySubscriptExpr 0x1fa428ed6b8 <col:17, col:29> 'size_t':'unsigned long long' lvalue
|   |         |   | |-ImplicitCastExpr 0x1fa428ed688 <col:17> 'size_t *' <LValueToRValue>
|   |         |   | | `-DeclRefExpr 0x1fa428ed648 <col:17> 'size_t *' lvalue Var 0x1fa428e8078 'wNAF_len' 'size_t *'
|   |         |   | `-ImplicitCastExpr 0x1fa428ed6a0 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x1fa428ed668 <col:26> 'size_t':'unsigned long long' lvalue ParmVar 0x1fa428e71d0 'num' 'size_t':'unsigned long long'
|   |         |   `-ImplicitCastExpr 0x1fa428ed6f8 <col:33> 'size_t':'unsigned long long' <LValueToRValue>
|   |         |     `-DeclRefExpr 0x1fa428ed6d8 <col:33> 'size_t':'unsigned long long' lvalue Var 0x1fa428ecd38 'tmp_len' 'size_t':'unsigned long long'
|   |         `-CompoundStmt 0x1fa428ef340 <line:560:20, line:623:13>
|   |           |-DeclStmt 0x1fa428ed840 <line:566:17, col:32>
|   |           | `-VarDecl 0x1fa428ed7d8 <col:17, col:30> col:30 used pp 'signed char *'
|   |           |-IfStmt 0x1fa428eddc0 <line:569:17, line:580:17>
|   |           | |-BinaryOperator 0x1fa428ed920 <line:569:21, col:43> 'int' '<'
|   |           | | |-ImplicitCastExpr 0x1fa428ed908 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |           | | | `-DeclRefExpr 0x1fa428ed858 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1fa428ecd38 'tmp_len' 'size_t':'unsigned long long'
|   |           | | `-BinaryOperator 0x1fa428ed8e8 <col:31, col:43> 'unsigned long long' '*'
|   |           | |   |-ImplicitCastExpr 0x1fa428ed8b8 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
|   |           | |   | `-DeclRefExpr 0x1fa428ed878 <col:31> 'size_t':'unsigned long long' lvalue Var 0x1fa428e78b0 'numblocks' 'size_t':'unsigned long long'
|   |           | |   `-ImplicitCastExpr 0x1fa428ed8d0 <col:43> 'size_t':'unsigned long long' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x1fa428ed898 <col:43> 'size_t':'unsigned long long' lvalue Var 0x1fa428e77f8 'blocksize' 'size_t':'unsigned long long'
|   |           | `-CompoundStmt 0x1fa428edd98 <col:54, line:580:17>
|   |           |   |-BinaryOperator 0x1fa428edac8 <line:573:21, col:61> 'size_t':'unsigned long long' '='
|   |           |   | |-DeclRefExpr 0x1fa428ed940 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1fa428e78b0 'numblocks' 'size_t':'unsigned long long'
|   |           |   | `-BinaryOperator 0x1fa428edaa8 <col:33, col:61> 'unsigned long long' '/'
|   |           |   |   |-ParenExpr 0x1fa428eda50 <col:33, col:57> 'unsigned long long'
|   |           |   |   | `-BinaryOperator 0x1fa428eda30 <col:34, col:56> 'unsigned long long' '-'
|   |           |   |   |   |-BinaryOperator 0x1fa428ed9d0 <col:34, col:44> 'unsigned long long' '+'
|   |           |   |   |   | |-ImplicitCastExpr 0x1fa428ed9a0 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |   |   | | `-DeclRefExpr 0x1fa428ed960 <col:34> 'size_t':'unsigned long long' lvalue Var 0x1fa428ecd38 'tmp_len' 'size_t':'unsigned long long'
|   |           |   |   |   | `-ImplicitCastExpr 0x1fa428ed9b8 <col:44> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |   |   |   `-DeclRefExpr 0x1fa428ed980 <col:44> 'size_t':'unsigned long long' lvalue Var 0x1fa428e77f8 'blocksize' 'size_t':'unsigned long long'
|   |           |   |   |   `-ImplicitCastExpr 0x1fa428eda18 <col:56> 'unsigned long long' <IntegralCast>
|   |           |   |   |     `-IntegerLiteral 0x1fa428ed9f0 <col:56> 'int' 1
|   |           |   |   `-ImplicitCastExpr 0x1fa428eda90 <col:61> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |     `-DeclRefExpr 0x1fa428eda70 <col:61> 'size_t':'unsigned long long' lvalue Var 0x1fa428e77f8 'blocksize' 'size_t':'unsigned long long'
|   |           |   |-IfStmt 0x1fa428edcb0 <line:574:21, line:578:21>
|   |           |   | |-BinaryOperator 0x1fa428edba0 <line:574:25, col:47> 'int' '>'
|   |           |   | | |-ImplicitCastExpr 0x1fa428edb70 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | | | `-DeclRefExpr 0x1fa428edae8 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1fa428e78b0 'numblocks' 'size_t':'unsigned long long'
|   |           |   | | `-ImplicitCastExpr 0x1fa428edb88 <col:37, col:47> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | |   `-MemberExpr 0x1fa428edb40 <col:37, col:47> 'const size_t':'const unsigned long long' lvalue ->numblocks 0x1fa4296c368
|   |           |   | |     `-ImplicitCastExpr 0x1fa428edb28 <col:37> 'const EC_PRE_COMP *' <LValueToRValue>
|   |           |   | |       `-DeclRefExpr 0x1fa428edb08 <col:37> 'const EC_PRE_COMP *' lvalue Var 0x1fa428e8478 'pre_comp' 'const EC_PRE_COMP *'
|   |           |   | `-CompoundStmt 0x1fa428edc90 <col:58, line:578:21>
|   |           |   |   |-CallExpr 0x1fa428edc38 <line:576:25, col:46> 'int'
|   |           |   |   | |-ImplicitCastExpr 0x1fa428edc20 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   |           |   |   | | `-DeclRefExpr 0x1fa428edbe0 <col:25> 'int ()' Function 0x1fa4296d3f0 'OPENSSL_free' 'int ()'
|   |           |   |   | `-ImplicitCastExpr 0x1fa428edc60 <col:38> 'signed char *' <LValueToRValue>
|   |           |   |   |   `-DeclRefExpr 0x1fa428edc00 <col:38> 'signed char *' lvalue Var 0x1fa428ecc08 'tmp_wNAF' 'signed char *'
|   |           |   |   `-GotoStmt 0x1fa428edc78 <line:577:25, col:30> 'err' 0x1fa428e9480
|   |           |   `-BinaryOperator 0x1fa428edd78 <line:579:21, col:38> 'size_t':'unsigned long long' '='
|   |           |     |-DeclRefExpr 0x1fa428edcc8 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7768 'totalnum' 'size_t':'unsigned long long'
|   |           |     `-BinaryOperator 0x1fa428edd58 <col:32, col:38> 'unsigned long long' '+'
|   |           |       |-ImplicitCastExpr 0x1fa428edd28 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |       | `-DeclRefExpr 0x1fa428edce8 <col:32> 'size_t':'unsigned long long' lvalue ParmVar 0x1fa428e71d0 'num' 'size_t':'unsigned long long'
|   |           |       `-ImplicitCastExpr 0x1fa428edd40 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |         `-DeclRefExpr 0x1fa428edd08 <col:38> 'size_t':'unsigned long long' lvalue Var 0x1fa428e78b0 'numblocks' 'size_t':'unsigned long long'
|   |           |-BinaryOperator 0x1fa428ede48 <line:583:17, col:22> 'signed char *' '='
|   |           | |-DeclRefExpr 0x1fa428eddd8 <col:17> 'signed char *' lvalue Var 0x1fa428ed7d8 'pp' 'signed char *'
|   |           | `-ImplicitCastExpr 0x1fa428ede30 <col:22> 'signed char *' <LValueToRValue>
|   |           |   `-DeclRefExpr 0x1fa428ede10 <col:22> 'signed char *' lvalue Var 0x1fa428ecc08 'tmp_wNAF' 'signed char *'
|   |           |-ForStmt 0x1fa428ef270 <line:586:17, line:621:17>
|   |           | |-BinaryOperator 0x1fa428edef8 <line:586:22, col:26> 'size_t':'unsigned long long' '='
|   |           | | |-DeclRefExpr 0x1fa428edea0 <col:22> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |           | | `-ImplicitCastExpr 0x1fa428edee0 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x1fa428edec0 <col:26> 'size_t':'unsigned long long' lvalue ParmVar 0x1fa428e71d0 'num' 'size_t':'unsigned long long'
|   |           | |-<<<NULL>>>
|   |           | |-BinaryOperator 0x1fa428edf88 <col:31, col:35> 'int' '<'
|   |           | | |-ImplicitCastExpr 0x1fa428edf58 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
|   |           | | | `-DeclRefExpr 0x1fa428edf18 <col:31> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |           | | `-ImplicitCastExpr 0x1fa428edf70 <col:35> 'size_t':'unsigned long long' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x1fa428edf38 <col:35> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7768 'totalnum' 'size_t':'unsigned long long'
|   |           | |-UnaryOperator 0x1fa428edfe0 <col:45, col:46> 'size_t':'unsigned long long' postfix '++'
|   |           | | `-DeclRefExpr 0x1fa428edfa8 <col:45> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |           | `-CompoundStmt 0x1fa428ef220 <col:50, line:621:17>
|   |           |   |-IfStmt 0x1fa428ee500 <line:587:21, line:600:39> has_else
|   |           |   | |-BinaryOperator 0x1fa428ee0c8 <line:587:25, col:40> 'int' '<'
|   |           |   | | |-ImplicitCastExpr 0x1fa428ee0b0 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | | | `-DeclRefExpr 0x1fa428edff8 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |           |   | | `-BinaryOperator 0x1fa428ee090 <col:29, col:40> 'unsigned long long' '-'
|   |           |   | |   |-ImplicitCastExpr 0x1fa428ee060 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | |   | `-DeclRefExpr 0x1fa428ee018 <col:29> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7768 'totalnum' 'size_t':'unsigned long long'
|   |           |   | |   `-ImplicitCastExpr 0x1fa428ee078 <col:40> 'unsigned long long' <IntegralCast>
|   |           |   | |     `-IntegerLiteral 0x1fa428ee038 <col:40> 'int' 1
|   |           |   | |-CompoundStmt 0x1fa428ee3f0 <col:43, line:595:21>
|   |           |   | | |-BinaryOperator 0x1fa428ee1b0 <line:588:25, col:39> 'size_t':'unsigned long long' '='
|   |           |   | | | |-ArraySubscriptExpr 0x1fa428ee158 <col:25, col:35> 'size_t':'unsigned long long' lvalue
|   |           |   | | | | |-ImplicitCastExpr 0x1fa428ee128 <col:25> 'size_t *' <LValueToRValue>
|   |           |   | | | | | `-DeclRefExpr 0x1fa428ee0e8 <col:25> 'size_t *' lvalue Var 0x1fa428e8078 'wNAF_len' 'size_t *'
|   |           |   | | | | `-ImplicitCastExpr 0x1fa428ee140 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | | | |   `-DeclRefExpr 0x1fa428ee108 <col:34> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |           |   | | | `-ImplicitCastExpr 0x1fa428ee198 <col:39> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | | |   `-DeclRefExpr 0x1fa428ee178 <col:39> 'size_t':'unsigned long long' lvalue Var 0x1fa428e77f8 'blocksize' 'size_t':'unsigned long long'
|   |           |   | | |-IfStmt 0x1fa428ee350 <line:589:25, line:593:25>
|   |           |   | | | |-BinaryOperator 0x1fa428ee240 <line:589:29, col:39> 'int' '<'
|   |           |   | | | | |-ImplicitCastExpr 0x1fa428ee210 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | | | | | `-DeclRefExpr 0x1fa428ee1d0 <col:29> 'size_t':'unsigned long long' lvalue Var 0x1fa428ecd38 'tmp_len' 'size_t':'unsigned long long'
|   |           |   | | | | `-ImplicitCastExpr 0x1fa428ee228 <col:39> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | | | |   `-DeclRefExpr 0x1fa428ee1f0 <col:39> 'size_t':'unsigned long long' lvalue Var 0x1fa428e77f8 'blocksize' 'size_t':'unsigned long long'
|   |           |   | | | `-CompoundStmt 0x1fa428ee330 <col:50, line:593:25>
|   |           |   | | |   |-CallExpr 0x1fa428ee2d8 <line:591:29, col:50> 'int'
|   |           |   | | |   | |-ImplicitCastExpr 0x1fa428ee2c0 <col:29> 'int (*)()' <FunctionToPointerDecay>
|   |           |   | | |   | | `-DeclRefExpr 0x1fa428ee280 <col:29> 'int ()' Function 0x1fa4296d3f0 'OPENSSL_free' 'int ()'
|   |           |   | | |   | `-ImplicitCastExpr 0x1fa428ee300 <col:42> 'signed char *' <LValueToRValue>
|   |           |   | | |   |   `-DeclRefExpr 0x1fa428ee2a0 <col:42> 'signed char *' lvalue Var 0x1fa428ecc08 'tmp_wNAF' 'signed char *'
|   |           |   | | |   `-GotoStmt 0x1fa428ee318 <line:592:29, col:34> 'err' 0x1fa428e9480
|   |           |   | | `-CompoundAssignOperator 0x1fa428ee3c0 <line:594:25, col:36> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |           |   | |   |-DeclRefExpr 0x1fa428ee368 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1fa428ecd38 'tmp_len' 'size_t':'unsigned long long'
|   |           |   | |   `-ImplicitCastExpr 0x1fa428ee3a8 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | |     `-DeclRefExpr 0x1fa428ee388 <col:36> 'size_t':'unsigned long long' lvalue Var 0x1fa428e77f8 'blocksize' 'size_t':'unsigned long long'
|   |           |   | `-BinaryOperator 0x1fa428ee4e0 <line:600:25, col:39> 'size_t':'unsigned long long' '='
|   |           |   |   |-ArraySubscriptExpr 0x1fa428ee488 <col:25, col:35> 'size_t':'unsigned long long' lvalue
|   |           |   |   | |-ImplicitCastExpr 0x1fa428ee458 <col:25> 'size_t *' <LValueToRValue>
|   |           |   |   | | `-DeclRefExpr 0x1fa428ee418 <col:25> 'size_t *' lvalue Var 0x1fa428e8078 'wNAF_len' 'size_t *'
|   |           |   |   | `-ImplicitCastExpr 0x1fa428ee470 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |   |   `-DeclRefExpr 0x1fa428ee438 <col:34> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |           |   |   `-ImplicitCastExpr 0x1fa428ee4c8 <col:39> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |     `-DeclRefExpr 0x1fa428ee4a8 <col:39> 'size_t':'unsigned long long' lvalue Var 0x1fa428ecd38 'tmp_len' 'size_t':'unsigned long long'
|   |           |   |-BinaryOperator 0x1fa428ee6b8 <line:602:21, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'signed char *' '='
|   |           |   | |-ArraySubscriptExpr 0x1fa428ee5f8 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:602:21, col:31> 'signed char *' lvalue
|   |           |   | | |-ImplicitCastExpr 0x1fa428ee5e0 <col:21> 'signed char **' <LValueToRValue>
|   |           |   | | | `-DeclRefExpr 0x1fa428ee528 <col:21> 'signed char **' lvalue Var 0x1fa428e7f38 'wNAF' 'signed char **'
|   |           |   | | `-BinaryOperator 0x1fa428ee5c0 <col:26, col:30> 'unsigned long long' '+'
|   |           |   | |   |-ImplicitCastExpr 0x1fa428ee590 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | |   | `-DeclRefExpr 0x1fa428ee548 <col:26> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |           |   | |   `-ImplicitCastExpr 0x1fa428ee5a8 <col:30> 'unsigned long long' <IntegralCast>
|   |           |   | |     `-IntegerLiteral 0x1fa428ee568 <col:30> 'int' 1
|   |           |   | `-ImplicitCastExpr 0x1fa428ee6a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char *' <NullToPointer>
|   |           |   |   `-ParenExpr 0x1fa428ee680 <col:17, col:27> 'void *'
|   |           |   |     `-CStyleCastExpr 0x1fa428ee658 <col:18, col:26> 'void *' <NullToPointer>
|   |           |   |       `-IntegerLiteral 0x1fa428ee618 <col:26> 'int' 0
|   |           |   |-BinaryOperator 0x1fa428ee888 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:603:21, col:57> 'signed char *' '='
|   |           |   | |-ArraySubscriptExpr 0x1fa428ee748 <col:21, col:27> 'signed char *' lvalue
|   |           |   | | |-ImplicitCastExpr 0x1fa428ee718 <col:21> 'signed char **' <LValueToRValue>
|   |           |   | | | `-DeclRefExpr 0x1fa428ee6d8 <col:21> 'signed char **' lvalue Var 0x1fa428e7f38 'wNAF' 'signed char **'
|   |           |   | | `-ImplicitCastExpr 0x1fa428ee730 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | |   `-DeclRefExpr 0x1fa428ee6f8 <col:26> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |           |   | `-ImplicitCastExpr 0x1fa428ee870 <col:31, col:57> 'signed char *' <IntegralToPointer>
|   |           |   |   `-CallExpr 0x1fa428ee830 <col:31, col:57> 'int'
|   |           |   |     |-ImplicitCastExpr 0x1fa428ee818 <col:31> 'int (*)()' <FunctionToPointerDecay>
|   |           |   |     | `-DeclRefExpr 0x1fa428ee768 <col:31> 'int ()' Function 0x1fa428ea5d0 'OPENSSL_malloc' 'int ()'
|   |           |   |     `-ImplicitCastExpr 0x1fa428ee858 <col:46, col:56> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |       `-ArraySubscriptExpr 0x1fa428ee7f8 <col:46, col:56> 'size_t':'unsigned long long' lvalue
|   |           |   |         |-ImplicitCastExpr 0x1fa428ee7c8 <col:46> 'size_t *' <LValueToRValue>
|   |           |   |         | `-DeclRefExpr 0x1fa428ee788 <col:46> 'size_t *' lvalue Var 0x1fa428e8078 'wNAF_len' 'size_t *'
|   |           |   |         `-ImplicitCastExpr 0x1fa428ee7e0 <col:55> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |           `-DeclRefExpr 0x1fa428ee7a8 <col:55> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |           |   |-IfStmt 0x1fa428eeb00 <line:604:21, line:608:21>
|   |           |   | |-BinaryOperator 0x1fa428ee9f0 <line:604:25, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   |           |   | | |-ImplicitCastExpr 0x1fa428ee9c0 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:604:25, col:31> 'signed char *' <LValueToRValue>
|   |           |   | | | `-ArraySubscriptExpr 0x1fa428ee918 <col:25, col:31> 'signed char *' lvalue
|   |           |   | | |   |-ImplicitCastExpr 0x1fa428ee8e8 <col:25> 'signed char **' <LValueToRValue>
|   |           |   | | |   | `-DeclRefExpr 0x1fa428ee8a8 <col:25> 'signed char **' lvalue Var 0x1fa428e7f38 'wNAF' 'signed char **'
|   |           |   | | |   `-ImplicitCastExpr 0x1fa428ee900 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | | |     `-DeclRefExpr 0x1fa428ee8c8 <col:30> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |           |   | | `-ImplicitCastExpr 0x1fa428ee9d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char *' <BitCast>
|   |           |   | |   `-ParenExpr 0x1fa428ee9a0 <col:17, col:27> 'void *'
|   |           |   | |     `-CStyleCastExpr 0x1fa428ee978 <col:18, col:26> 'void *' <NullToPointer>
|   |           |   | |       `-IntegerLiteral 0x1fa428ee938 <col:26> 'int' 0
|   |           |   | `-CompoundStmt 0x1fa428eeae0 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:604:42, line:608:21>
|   |           |   |   |-CallExpr 0x1fa428eea88 <line:606:25, col:46> 'int'
|   |           |   |   | |-ImplicitCastExpr 0x1fa428eea70 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   |           |   |   | | `-DeclRefExpr 0x1fa428eea30 <col:25> 'int ()' Function 0x1fa4296d3f0 'OPENSSL_free' 'int ()'
|   |           |   |   | `-ImplicitCastExpr 0x1fa428eeab0 <col:38> 'signed char *' <LValueToRValue>
|   |           |   |   |   `-DeclRefExpr 0x1fa428eea50 <col:38> 'signed char *' lvalue Var 0x1fa428ecc08 'tmp_wNAF' 'signed char *'
|   |           |   |   `-GotoStmt 0x1fa428eeac8 <line:607:25, col:30> 'err' 0x1fa428e9480
|   |           |   |-CallExpr 0x1fa428eed00 <line:609:21, col:52> 'void *'
|   |           |   | |-ImplicitCastExpr 0x1fa428eece8 <col:21> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |           |   | | `-DeclRefExpr 0x1fa428eeb18 <col:21> 'void *(void *, const void *, unsigned long long)' Function 0x1fa42876978 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |           |   | |-ImplicitCastExpr 0x1fa428eed50 <col:28, col:34> 'void *' <BitCast>
|   |           |   | | `-ImplicitCastExpr 0x1fa428eed38 <col:28, col:34> 'signed char *' <LValueToRValue>
|   |           |   | |   `-ArraySubscriptExpr 0x1fa428eeba8 <col:28, col:34> 'signed char *' lvalue
|   |           |   | |     |-ImplicitCastExpr 0x1fa428eeb78 <col:28> 'signed char **' <LValueToRValue>
|   |           |   | |     | `-DeclRefExpr 0x1fa428eeb38 <col:28> 'signed char **' lvalue Var 0x1fa428e7f38 'wNAF' 'signed char **'
|   |           |   | |     `-ImplicitCastExpr 0x1fa428eeb90 <col:33> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | |       `-DeclRefExpr 0x1fa428eeb58 <col:33> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |           |   | |-ImplicitCastExpr 0x1fa428eed80 <col:37> 'const void *' <BitCast>
|   |           |   | | `-ImplicitCastExpr 0x1fa428eed68 <col:37> 'signed char *' <LValueToRValue>
|   |           |   | |   `-DeclRefExpr 0x1fa428eebc8 <col:37> 'signed char *' lvalue Var 0x1fa428ed7d8 'pp' 'signed char *'
|   |           |   | `-ImplicitCastExpr 0x1fa428eed98 <col:41, col:51> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |   `-ArraySubscriptExpr 0x1fa428eec58 <col:41, col:51> 'size_t':'unsigned long long' lvalue
|   |           |   |     |-ImplicitCastExpr 0x1fa428eec28 <col:41> 'size_t *' <LValueToRValue>
|   |           |   |     | `-DeclRefExpr 0x1fa428eebe8 <col:41> 'size_t *' lvalue Var 0x1fa428e8078 'wNAF_len' 'size_t *'
|   |           |   |     `-ImplicitCastExpr 0x1fa428eec40 <col:50> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |       `-DeclRefExpr 0x1fa428eec08 <col:50> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |           |   |-IfStmt 0x1fa428eef98 <line:610:21, line:611:45>
|   |           |   | |-BinaryOperator 0x1fa428eee90 <line:610:25, col:39> 'int' '>'
|   |           |   | | |-ImplicitCastExpr 0x1fa428eee60 <col:25, col:35> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | | | `-ArraySubscriptExpr 0x1fa428eee20 <col:25, col:35> 'size_t':'unsigned long long' lvalue
|   |           |   | | |   |-ImplicitCastExpr 0x1fa428eedf0 <col:25> 'size_t *' <LValueToRValue>
|   |           |   | | |   | `-DeclRefExpr 0x1fa428eedb0 <col:25> 'size_t *' lvalue Var 0x1fa428e8078 'wNAF_len' 'size_t *'
|   |           |   | | |   `-ImplicitCastExpr 0x1fa428eee08 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | | |     `-DeclRefExpr 0x1fa428eedd0 <col:34> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |           |   | | `-ImplicitCastExpr 0x1fa428eee78 <col:39> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | |   `-DeclRefExpr 0x1fa428eee40 <col:39> 'size_t':'unsigned long long' lvalue Var 0x1fa428e81a8 'max_len' 'size_t':'unsigned long long'
|   |           |   | `-BinaryOperator 0x1fa428eef78 <line:611:25, col:45> 'size_t':'unsigned long long' '='
|   |           |   |   |-DeclRefExpr 0x1fa428eeeb0 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1fa428e81a8 'max_len' 'size_t':'unsigned long long'
|   |           |   |   `-ImplicitCastExpr 0x1fa428eef60 <col:35, col:45> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |     `-ArraySubscriptExpr 0x1fa428eef40 <col:35, col:45> 'size_t':'unsigned long long' lvalue
|   |           |   |       |-ImplicitCastExpr 0x1fa428eef10 <col:35> 'size_t *' <LValueToRValue>
|   |           |   |       | `-DeclRefExpr 0x1fa428eeed0 <col:35> 'size_t *' lvalue Var 0x1fa428e8078 'wNAF_len' 'size_t *'
|   |           |   |       `-ImplicitCastExpr 0x1fa428eef28 <col:44> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |         `-DeclRefExpr 0x1fa428eeef0 <col:44> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |           |   |-IfStmt 0x1fa428ef140 <line:613:21, line:617:21>
|   |           |   | |-OpaqueValueExpr 0x1fa428ef128 <<invalid sloc>> '_Bool'
|   |           |   | `-CompoundStmt 0x1fa428ef108 <line:613:46, line:617:21>
|   |           |   |   |-CallExpr 0x1fa428ef0b0 <line:615:25, col:46> 'int'
|   |           |   |   | |-ImplicitCastExpr 0x1fa428ef098 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   |           |   |   | | `-DeclRefExpr 0x1fa428ef058 <col:25> 'int ()' Function 0x1fa4296d3f0 'OPENSSL_free' 'int ()'
|   |           |   |   | `-ImplicitCastExpr 0x1fa428ef0d8 <col:38> 'signed char *' <LValueToRValue>
|   |           |   |   |   `-DeclRefExpr 0x1fa428ef078 <col:38> 'signed char *' lvalue Var 0x1fa428ecc08 'tmp_wNAF' 'signed char *'
|   |           |   |   `-GotoStmt 0x1fa428ef0f0 <line:616:25, col:30> 'err' 0x1fa428e9480
|   |           |   `-CompoundAssignOperator 0x1fa428ef1f0 <line:620:21, col:27> 'signed char *' '+=' ComputeLHSTy='signed char *' ComputeResultTy='signed char *'
|   |           |     |-DeclRefExpr 0x1fa428ef198 <col:21> 'signed char *' lvalue Var 0x1fa428ed7d8 'pp' 'signed char *'
|   |           |     `-ImplicitCastExpr 0x1fa428ef1d8 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |       `-DeclRefExpr 0x1fa428ef1b8 <col:27> 'size_t':'unsigned long long' lvalue Var 0x1fa428e77f8 'blocksize' 'size_t':'unsigned long long'
|   |           `-CallExpr 0x1fa428ef300 <line:622:17, col:38> 'int'
|   |             |-ImplicitCastExpr 0x1fa428ef2e8 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |             | `-DeclRefExpr 0x1fa428ef2a8 <col:17> 'int ()' Function 0x1fa4296d3f0 'OPENSSL_free' 'int ()'
|   |             `-ImplicitCastExpr 0x1fa428ef328 <col:30> 'signed char *' <LValueToRValue>
|   |               `-DeclRefExpr 0x1fa428ef2c8 <col:30> 'signed char *' lvalue Var 0x1fa428ecc08 'tmp_wNAF' 'signed char *'
|   |-IfStmt 0x1fa428ef628 <line:633:5, line:636:5>
|   | |-OpaqueValueExpr 0x1fa428ef610 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1fa428ef5f8 <line:633:22, line:636:5>
|   |   `-GotoStmt 0x1fa428ef5e0 <line:635:9, col:14> 'err' 0x1fa428e9480
|   |-ForStmt 0x1fa428efd08 <line:641:5, line:649:5>
|   | |-BinaryOperator 0x1fa428ef748 <line:641:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x1fa428ef6e8 <col:10> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1fa428ef730 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1fa428ef708 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1fa428ef848 <col:17, col:27> 'int' '<'
|   | | |-ImplicitCastExpr 0x1fa428ef830 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1fa428ef768 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   | | `-BinaryOperator 0x1fa428ef810 <col:21, col:27> 'unsigned long long' '+'
|   | |   |-ImplicitCastExpr 0x1fa428ef7c8 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1fa428ef788 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x1fa428e71d0 'num' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x1fa428ef7f8 <col:27> 'unsigned long long' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x1fa428ef7e0 <col:27> 'int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1fa428ef7a8 <col:27> 'int' lvalue Var 0x1fa428e85b0 'num_scalar' 'int'
|   | |-UnaryOperator 0x1fa428ef888 <col:39, col:40> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x1fa428ef868 <col:39> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1fa428efcf0 <col:44, line:649:5>
|   |   `-ForStmt 0x1fa428efcb8 <line:643:9, line:648:9>
|   |     |-BinaryOperator 0x1fa428ef938 <line:643:14, col:18> 'size_t':'unsigned long long' '='
|   |     | |-DeclRefExpr 0x1fa428ef8c0 <col:14> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7ae0 'j' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x1fa428ef920 <col:18> 'size_t':'unsigned long long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x1fa428ef8f8 <col:18> 'int' 0
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x1fa428efb58 <col:21, col:53> 'int' '<'
|   |     | |-ImplicitCastExpr 0x1fa428efb40 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1fa428ef958 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7ae0 'j' 'size_t':'unsigned long long'
|   |     | `-ParenExpr 0x1fa428efb20 <col:25, col:53> 'size_t':'unsigned long long'
|   |     |   `-BinaryOperator 0x1fa428efb00 <col:26, col:52> 'size_t':'unsigned long long' '<<'
|   |     |     |-CStyleCastExpr 0x1fa428ef9b0 <col:26, col:34> 'size_t':'unsigned long long' <IntegralCast>
|   |     |     | `-IntegerLiteral 0x1fa428ef978 <col:34> 'int' 1
|   |     |     `-ParenExpr 0x1fa428efae0 <col:39, col:52> 'unsigned long long'
|   |     |       `-BinaryOperator 0x1fa428efac0 <col:40, col:51> 'unsigned long long' '-'
|   |     |         |-ImplicitCastExpr 0x1fa428efa90 <col:40, col:47> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |         | `-ArraySubscriptExpr 0x1fa428efa48 <col:40, col:47> 'size_t':'unsigned long long' lvalue
|   |     |         |   |-ImplicitCastExpr 0x1fa428efa18 <col:40> 'size_t *' <LValueToRValue>
|   |     |         |   | `-DeclRefExpr 0x1fa428ef9d8 <col:40> 'size_t *' lvalue Var 0x1fa428e7da0 'wsize' 'size_t *'
|   |     |         |   `-ImplicitCastExpr 0x1fa428efa30 <col:46> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |         |     `-DeclRefExpr 0x1fa428ef9f8 <col:46> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |     |         `-ImplicitCastExpr 0x1fa428efaa8 <col:51> 'unsigned long long' <IntegralCast>
|   |     |           `-IntegerLiteral 0x1fa428efa68 <col:51> 'int' 1
|   |     |-UnaryOperator 0x1fa428efb98 <col:56, col:57> 'size_t':'unsigned long long' postfix '++'
|   |     | `-DeclRefExpr 0x1fa428efb78 <col:56> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7ae0 'j' 'size_t':'unsigned long long'
|   |     `-CompoundStmt 0x1fa428efca0 <col:61, line:648:9>
|   |       `-IfStmt 0x1fa428efc88 <line:645:13, line:646:22>
|   |         |-OpaqueValueExpr 0x1fa428efc70 <<invalid sloc>> '_Bool'
|   |         `-GotoStmt 0x1fa428efc58 <col:17, col:22> 'err' 0x1fa428e9480
|   |-IfStmt 0x1fa428efdc8 <line:650:5, line:653:5>
|   | |-OpaqueValueExpr 0x1fa428efdb0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1fa428efd98 <line:650:32, line:653:5>
|   |   `-GotoStmt 0x1fa428efd80 <line:652:9, col:14> 'err' 0x1fa428e9480
|   |-IfStmt 0x1fa428efeb8 <line:655:5, line:656:14>
|   | |-OpaqueValueExpr 0x1fa428efea0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1fa428efe88 <col:9, col:14> 'err' 0x1fa428e9480
|   |-ForStmt 0x1fa428f0998 <line:665:5, line:683:5>
|   | |-BinaryOperator 0x1fa428eff30 <line:665:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x1fa428efed0 <col:10> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1fa428eff18 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1fa428efef0 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1fa428f0040 <col:17, col:27> 'int' '<'
|   | | |-ImplicitCastExpr 0x1fa428f0028 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1fa428eff50 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   | | `-BinaryOperator 0x1fa428f0008 <col:21, col:27> 'unsigned long long' '+'
|   | |   |-ImplicitCastExpr 0x1fa428effb0 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1fa428eff70 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x1fa428e71d0 'num' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x1fa428efff0 <col:27> 'unsigned long long' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x1fa428effc8 <col:27> 'int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1fa428eff90 <col:27> 'int' lvalue Var 0x1fa428e85b0 'num_scalar' 'int'
|   | |-UnaryOperator 0x1fa428f0080 <col:39, col:40> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x1fa428f0060 <col:39> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1fa428f0978 <col:44, line:683:5>
|   |   |-IfStmt 0x1fa428f02d8 <line:666:9, line:672:9> has_else
|   |   | |-BinaryOperator 0x1fa428f0108 <line:666:13, col:17> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x1fa428f00d8 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1fa428f0098 <col:13> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |   | | `-ImplicitCastExpr 0x1fa428f00f0 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1fa428f00b8 <col:17> 'size_t':'unsigned long long' lvalue ParmVar 0x1fa428e71d0 'num' 'size_t':'unsigned long long'
|   |   | |-CompoundStmt 0x1fa428f01f8 <col:22, line:669:9>
|   |   | | `-IfStmt 0x1fa428f01e0 <line:667:13, line:668:22>
|   |   | |   |-OpaqueValueExpr 0x1fa428f01c8 <<invalid sloc>> '_Bool'
|   |   | |   `-GotoStmt 0x1fa428f01b0 <col:17, col:22> 'err' 0x1fa428e9480
|   |   | `-CompoundStmt 0x1fa428f02c0 <line:669:16, line:672:9>
|   |   |   `-IfStmt 0x1fa428f02a8 <line:670:13, line:671:22>
|   |   |     |-OpaqueValueExpr 0x1fa428f0290 <<invalid sloc>> '_Bool'
|   |   |     `-GotoStmt 0x1fa428f0278 <col:17, col:22> 'err' 0x1fa428e9480
|   |   `-IfStmt 0x1fa428f0960 <line:674:9, line:682:9>
|   |     |-BinaryOperator 0x1fa428f03e8 <line:674:13, col:24> 'int' '>'
|   |     | |-ImplicitCastExpr 0x1fa428f03b8 <col:13, col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | `-ArraySubscriptExpr 0x1fa428f0370 <col:13, col:20> 'size_t':'unsigned long long' lvalue
|   |     | |   |-ImplicitCastExpr 0x1fa428f0340 <col:13> 'size_t *' <LValueToRValue>
|   |     | |   | `-DeclRefExpr 0x1fa428f0300 <col:13> 'size_t *' lvalue Var 0x1fa428e7da0 'wsize' 'size_t *'
|   |     | |   `-ImplicitCastExpr 0x1fa428f0358 <col:19> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x1fa428f0320 <col:19> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x1fa428f03d0 <col:24> 'unsigned long long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x1fa428f0390 <col:24> 'int' 1
|   |     `-CompoundStmt 0x1fa428f0940 <col:27, line:682:9>
|   |       |-IfStmt 0x1fa428f04a0 <line:675:13, line:676:22>
|   |       | |-OpaqueValueExpr 0x1fa428f0488 <<invalid sloc>> '_Bool'
|   |       | `-GotoStmt 0x1fa428f0470 <col:17, col:22> 'err' 0x1fa428e9480
|   |       `-ForStmt 0x1fa428f0908 <line:677:13, line:681:13>
|   |         |-BinaryOperator 0x1fa428f0518 <line:677:18, col:22> 'size_t':'unsigned long long' '='
|   |         | |-DeclRefExpr 0x1fa428f04b8 <col:18> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7ae0 'j' 'size_t':'unsigned long long'
|   |         | `-ImplicitCastExpr 0x1fa428f0500 <col:22> 'size_t':'unsigned long long' <IntegralCast>
|   |         |   `-IntegerLiteral 0x1fa428f04d8 <col:22> 'int' 1
|   |         |-<<<NULL>>>
|   |         |-BinaryOperator 0x1fa428f0738 <col:25, col:57> 'int' '<'
|   |         | |-ImplicitCastExpr 0x1fa428f0720 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x1fa428f0538 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7ae0 'j' 'size_t':'unsigned long long'
|   |         | `-ParenExpr 0x1fa428f0700 <col:29, col:57> 'size_t':'unsigned long long'
|   |         |   `-BinaryOperator 0x1fa428f06e0 <col:30, col:56> 'size_t':'unsigned long long' '<<'
|   |         |     |-CStyleCastExpr 0x1fa428f0590 <col:30, col:38> 'size_t':'unsigned long long' <IntegralCast>
|   |         |     | `-IntegerLiteral 0x1fa428f0558 <col:38> 'int' 1
|   |         |     `-ParenExpr 0x1fa428f06c0 <col:43, col:56> 'unsigned long long'
|   |         |       `-BinaryOperator 0x1fa428f06a0 <col:44, col:55> 'unsigned long long' '-'
|   |         |         |-ImplicitCastExpr 0x1fa428f0670 <col:44, col:51> 'size_t':'unsigned long long' <LValueToRValue>
|   |         |         | `-ArraySubscriptExpr 0x1fa428f0628 <col:44, col:51> 'size_t':'unsigned long long' lvalue
|   |         |         |   |-ImplicitCastExpr 0x1fa428f05f8 <col:44> 'size_t *' <LValueToRValue>
|   |         |         |   | `-DeclRefExpr 0x1fa428f05b8 <col:44> 'size_t *' lvalue Var 0x1fa428e7da0 'wsize' 'size_t *'
|   |         |         |   `-ImplicitCastExpr 0x1fa428f0610 <col:50> 'size_t':'unsigned long long' <LValueToRValue>
|   |         |         |     `-DeclRefExpr 0x1fa428f05d8 <col:50> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |         |         `-ImplicitCastExpr 0x1fa428f0688 <col:55> 'unsigned long long' <IntegralCast>
|   |         |           `-IntegerLiteral 0x1fa428f0648 <col:55> 'int' 1
|   |         |-UnaryOperator 0x1fa428f0778 <col:60, col:61> 'size_t':'unsigned long long' postfix '++'
|   |         | `-DeclRefExpr 0x1fa428f0758 <col:60> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7ae0 'j' 'size_t':'unsigned long long'
|   |         `-CompoundStmt 0x1fa428f08f0 <col:65, line:681:13>
|   |           `-IfStmt 0x1fa428f08d8 <line:678:17, line:680:26>
|   |             |-OpaqueValueExpr 0x1fa428f08c0 <<invalid sloc>> '_Bool'
|   |             `-GotoStmt 0x1fa428f08a8 <col:21, col:26> 'err' 0x1fa428e9480
|   |-IfStmt 0x1fa428f0b30 <line:685:5, line:686:14>
|   | |-OpaqueValueExpr 0x1fa428f0b18 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1fa428f0b00 <col:9, col:14> 'err' 0x1fa428e9480
|   |-BinaryOperator 0x1fa428f0ba8 <line:688:5, col:24> 'int' '='
|   | |-DeclRefExpr 0x1fa428f0b48 <col:5> 'int' lvalue Var 0x1fa428e7ce8 'r_is_at_infinity' 'int'
|   | `-IntegerLiteral 0x1fa428f0b80 <col:24> 'int' 1
|   |-ForStmt 0x1fa428f1ca8 <line:690:5, line:729:5>
|   | |-BinaryOperator 0x1fa428f0cb0 <line:690:10, col:24> 'int' '='
|   | | |-DeclRefExpr 0x1fa428f0bc8 <col:10> 'int' lvalue Var 0x1fa428e7b90 'k' 'int'
|   | | `-ImplicitCastExpr 0x1fa428f0c98 <col:14, col:24> 'int' <IntegralCast>
|   | |   `-BinaryOperator 0x1fa428f0c78 <col:14, col:24> 'unsigned long long' '-'
|   | |     |-ImplicitCastExpr 0x1fa428f0c48 <col:14> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x1fa428f0c00 <col:14> 'size_t':'unsigned long long' lvalue Var 0x1fa428e81a8 'max_len' 'size_t':'unsigned long long'
|   | |     `-ImplicitCastExpr 0x1fa428f0c60 <col:24> 'unsigned long long' <IntegralCast>
|   | |       `-IntegerLiteral 0x1fa428f0c20 <col:24> 'int' 1
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1fa428f0d30 <col:27, col:32> 'int' '>='
|   | | |-ImplicitCastExpr 0x1fa428f0d18 <col:27> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1fa428f0cd0 <col:27> 'int' lvalue Var 0x1fa428e7b90 'k' 'int'
|   | | `-IntegerLiteral 0x1fa428f0cf0 <col:32> 'int' 0
|   | |-UnaryOperator 0x1fa428f0d70 <col:35, col:36> 'int' postfix '--'
|   | | `-DeclRefExpr 0x1fa428f0d50 <col:35> 'int' lvalue Var 0x1fa428e7b90 'k' 'int'
|   | `-CompoundStmt 0x1fa428f1c88 <col:40, line:729:5>
|   |   |-IfStmt 0x1fa428f0e58 <line:691:9, line:694:9>
|   |   | |-UnaryOperator 0x1fa428f0dc0 <line:691:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1fa428f0da8 <col:14> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1fa428f0d88 <col:14> 'int' lvalue Var 0x1fa428e7ce8 'r_is_at_infinity' 'int'
|   |   | `-CompoundStmt 0x1fa428f0e40 <col:32, line:694:9>
|   |   |   `-IfStmt 0x1fa428f0e28 <line:692:13, line:693:22>
|   |   |     |-OpaqueValueExpr 0x1fa428f0e10 <<invalid sloc>> '_Bool'
|   |   |     `-GotoStmt 0x1fa428f0df8 <col:17, col:22> 'err' 0x1fa428e9480
|   |   `-ForStmt 0x1fa428f1c50 <line:696:9, line:728:9>
|   |     |-BinaryOperator 0x1fa428f0ed0 <line:696:14, col:18> 'size_t':'unsigned long long' '='
|   |     | |-DeclRefExpr 0x1fa428f0e70 <col:14> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x1fa428f0eb8 <col:18> 'size_t':'unsigned long long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x1fa428f0e90 <col:18> 'int' 0
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x1fa428f0f60 <col:21, col:25> 'int' '<'
|   |     | |-ImplicitCastExpr 0x1fa428f0f30 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1fa428f0ef0 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x1fa428f0f48 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1fa428f0f10 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7768 'totalnum' 'size_t':'unsigned long long'
|   |     |-UnaryOperator 0x1fa428f0fa0 <col:35, col:36> 'size_t':'unsigned long long' postfix '++'
|   |     | `-DeclRefExpr 0x1fa428f0f80 <col:35> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |     `-CompoundStmt 0x1fa428f1c38 <col:40, line:728:9>
|   |       `-IfStmt 0x1fa428f1c20 <line:697:13, line:727:13>
|   |         |-BinaryOperator 0x1fa428f10d0 <line:697:17, col:39> 'int' '>'
|   |         | |-ImplicitCastExpr 0x1fa428f10b8 <col:17, col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | | `-ArraySubscriptExpr 0x1fa428f1028 <col:17, col:27> 'size_t':'unsigned long long' lvalue
|   |         | |   |-ImplicitCastExpr 0x1fa428f0ff8 <col:17> 'size_t *' <LValueToRValue>
|   |         | |   | `-DeclRefExpr 0x1fa428f0fb8 <col:17> 'size_t *' lvalue Var 0x1fa428e8078 'wNAF_len' 'size_t *'
|   |         | |   `-ImplicitCastExpr 0x1fa428f1010 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | |     `-DeclRefExpr 0x1fa428f0fd8 <col:26> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |         | `-CStyleCastExpr 0x1fa428f1090 <col:31, col:39> 'size_t':'unsigned long long' <IntegralCast>
|   |         |   `-ImplicitCastExpr 0x1fa428f1078 <col:39> 'int' <LValueToRValue> part_of_explicit_cast
|   |         |     `-DeclRefExpr 0x1fa428f1048 <col:39> 'int' lvalue Var 0x1fa428e7b90 'k' 'int'
|   |         `-CompoundStmt 0x1fa428f1bf8 <col:42, line:727:13>
|   |           |-DeclStmt 0x1fa428f12a0 <line:698:17, col:39>
|   |           | `-VarDecl 0x1fa428f1108 <col:17, col:38> col:21 used digit 'int' cinit
|   |           |   `-ImplicitCastExpr 0x1fa428f1288 <col:29, col:38> 'int' <IntegralCast>
|   |           |     `-ImplicitCastExpr 0x1fa428f1270 <col:29, col:38> 'signed char' <LValueToRValue>
|   |           |       `-ArraySubscriptExpr 0x1fa428f1250 <col:29, col:38> 'signed char' lvalue
|   |           |         |-ImplicitCastExpr 0x1fa428f1220 <col:29, col:35> 'signed char *' <LValueToRValue>
|   |           |         | `-ArraySubscriptExpr 0x1fa428f11e0 <col:29, col:35> 'signed char *' lvalue
|   |           |         |   |-ImplicitCastExpr 0x1fa428f11b0 <col:29> 'signed char **' <LValueToRValue>
|   |           |         |   | `-DeclRefExpr 0x1fa428f1170 <col:29> 'signed char **' lvalue Var 0x1fa428e7f38 'wNAF' 'signed char **'
|   |           |         |   `-ImplicitCastExpr 0x1fa428f11c8 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |         |     `-DeclRefExpr 0x1fa428f1190 <col:34> 'size_t':'unsigned long long' lvalue Var 0x1fa428e7a68 'i' 'size_t':'unsigned long long'
|   |           |         `-ImplicitCastExpr 0x1fa428f1238 <col:37> 'int' <LValueToRValue>
|   |           |           `-DeclRefExpr 0x1fa428f1200 <col:37> 'int' lvalue Var 0x1fa428e7b90 'k' 'int'
|   |           |-DeclStmt 0x1fa428f1338 <line:699:17, col:27>
|   |           | `-VarDecl 0x1fa428f12d0 <col:17, col:21> col:21 used is_neg 'int'
|   |           `-IfStmt 0x1fa428f1be0 <line:701:17, line:726:17>
|   |             |-ImplicitCastExpr 0x1fa428f1388 <line:701:21> 'int' <LValueToRValue>
|   |             | `-DeclRefExpr 0x1fa428f1350 <col:21> 'int' lvalue Var 0x1fa428f1108 'digit' 'int'
|   |             `-CompoundStmt 0x1fa428f1bb0 <col:28, line:726:17>
|   |               |-BinaryOperator 0x1fa428f1458 <line:702:21, col:38> 'int' '='
|   |               | |-DeclRefExpr 0x1fa428f13a0 <col:21> 'int' lvalue Var 0x1fa428f12d0 'is_neg' 'int'
|   |               | `-BinaryOperator 0x1fa428f1438 <col:30, col:38> 'int' '<'
|   |               |   |-ImplicitCastExpr 0x1fa428f1420 <col:30> 'int' <LValueToRValue>
|   |               |   | `-DeclRefExpr 0x1fa428f13d8 <col:30> 'int' lvalue Var 0x1fa428f1108 'digit' 'int'
|   |               |   `-IntegerLiteral 0x1fa428f13f8 <col:38> 'int' 0
|   |               |-IfStmt 0x1fa428f1540 <line:704:21, line:705:34>
|   |               | |-ImplicitCastExpr 0x1fa428f1498 <line:704:25> 'int' <LValueToRValue>
|   |               | | `-DeclRefExpr 0x1fa428f1478 <col:25> 'int' lvalue Var 0x1fa428f12d0 'is_neg' 'int'
|   |               | `-BinaryOperator 0x1fa428f1520 <line:705:25, col:34> 'int' '='
|   |               |   |-DeclRefExpr 0x1fa428f14b0 <col:25> 'int' lvalue Var 0x1fa428f1108 'digit' 'int'
|   |               |   `-UnaryOperator 0x1fa428f1508 <col:33, col:34> 'int' prefix '-'
|   |               |     `-ImplicitCastExpr 0x1fa428f14f0 <col:34> 'int' <LValueToRValue>
|   |               |       `-DeclRefExpr 0x1fa428f14d0 <col:34> 'int' lvalue Var 0x1fa428f1108 'digit' 'int'
|   |               |-IfStmt 0x1fa428f1888 <line:707:21, line:713:21>
|   |               | |-BinaryOperator 0x1fa428f15e0 <line:707:25, col:35> 'int' '!='
|   |               | | |-ImplicitCastExpr 0x1fa428f15b0 <col:25> 'int' <LValueToRValue>
|   |               | | | `-DeclRefExpr 0x1fa428f1558 <col:25> 'int' lvalue Var 0x1fa428f12d0 'is_neg' 'int'
|   |               | | `-ImplicitCastExpr 0x1fa428f15c8 <col:35> 'int' <LValueToRValue>
|   |               | |   `-DeclRefExpr 0x1fa428f1578 <col:35> 'int' lvalue Var 0x1fa428e7c28 'r_is_inverted' 'int'
|   |               | `-CompoundStmt 0x1fa428f1868 <col:50, line:713:21>
|   |               |   |-IfStmt 0x1fa428f17c0 <line:708:25, line:711:25>
|   |               |   | |-UnaryOperator 0x1fa428f1638 <line:708:29, col:30> 'int' prefix '!' cannot overflow
|   |               |   | | `-ImplicitCastExpr 0x1fa428f1620 <col:30> 'int' <LValueToRValue>
|   |               |   | |   `-DeclRefExpr 0x1fa428f1600 <col:30> 'int' lvalue Var 0x1fa428e7ce8 'r_is_at_infinity' 'int'
|   |               |   | `-CompoundStmt 0x1fa428f17a8 <col:48, line:711:25>
|   |               |   |   `-IfStmt 0x1fa428f1790 <line:709:29, line:710:38>
|   |               |   |     |-OpaqueValueExpr 0x1fa428f1778 <<invalid sloc>> '_Bool'
|   |               |   |     `-GotoStmt 0x1fa428f1760 <col:33, col:38> 'err' 0x1fa428e9480
|   |               |   `-BinaryOperator 0x1fa428f1848 <line:712:25, col:42> 'int' '='
|   |               |     |-DeclRefExpr 0x1fa428f17d8 <col:25> 'int' lvalue Var 0x1fa428e7c28 'r_is_inverted' 'int'
|   |               |     `-UnaryOperator 0x1fa428f1830 <col:41, col:42> 'int' prefix '!' cannot overflow
|   |               |       `-ImplicitCastExpr 0x1fa428f1818 <col:42> 'int' <LValueToRValue>
|   |               |         `-DeclRefExpr 0x1fa428f17f8 <col:42> 'int' lvalue Var 0x1fa428e7c28 'r_is_inverted' 'int'
|   |               `-IfStmt 0x1fa428f1b88 <line:717:21, line:725:21> has_else
|   |                 |-ImplicitCastExpr 0x1fa428f18c0 <line:717:25> 'int' <LValueToRValue>
|   |                 | `-DeclRefExpr 0x1fa428f18a0 <col:25> 'int' lvalue Var 0x1fa428e7ce8 'r_is_at_infinity' 'int'
|   |                 |-CompoundStmt 0x1fa428f1a48 <col:43, line:721:21>
|   |                 | |-IfStmt 0x1fa428f19c8 <line:718:25, line:719:34>
|   |                 | | |-OpaqueValueExpr 0x1fa428f19b0 <<invalid sloc>> '_Bool'
|   |                 | | `-GotoStmt 0x1fa428f1998 <col:29, col:34> 'err' 0x1fa428e9480
|   |                 | `-BinaryOperator 0x1fa428f1a28 <line:720:25, col:44> 'int' '='
|   |                 |   |-DeclRefExpr 0x1fa428f19e0 <col:25> 'int' lvalue Var 0x1fa428e7ce8 'r_is_at_infinity' 'int'
|   |                 |   `-IntegerLiteral 0x1fa428f1a00 <col:44> 'int' 0
|   |                 `-CompoundStmt 0x1fa428f1b70 <line:721:28, line:725:21>
|   |                   `-IfStmt 0x1fa428f1b58 <line:722:25, line:724:34>
|   |                     |-OpaqueValueExpr 0x1fa428f1b40 <<invalid sloc>> '_Bool'
|   |                     `-GotoStmt 0x1fa428f1b28 <col:29, col:34> 'err' 0x1fa428e9480
|   |-IfStmt 0x1fa428f1e68 <line:731:5, line:738:5> has_else
|   | |-ImplicitCastExpr 0x1fa428f1d00 <line:731:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1fa428f1ce0 <col:9> 'int' lvalue Var 0x1fa428e7ce8 'r_is_at_infinity' 'int'
|   | |-CompoundStmt 0x1fa428f1d80 <col:27, line:734:5>
|   | | `-IfStmt 0x1fa428f1d68 <line:732:9, line:733:18>
|   | |   |-OpaqueValueExpr 0x1fa428f1d50 <<invalid sloc>> '_Bool'
|   | |   `-GotoStmt 0x1fa428f1d38 <col:13, col:18> 'err' 0x1fa428e9480
|   | `-CompoundStmt 0x1fa428f1e50 <line:734:12, line:738:5>
|   |   `-IfStmt 0x1fa428f1e38 <line:735:9, line:737:22>
|   |     |-ImplicitCastExpr 0x1fa428f1db8 <line:735:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1fa428f1d98 <col:13> 'int' lvalue Var 0x1fa428e7c28 'r_is_inverted' 'int'
|   |     `-IfStmt 0x1fa428f1e20 <line:736:13, line:737:22>
|   |       |-OpaqueValueExpr 0x1fa428f1e08 <<invalid sloc>> '_Bool'
|   |       `-GotoStmt 0x1fa428f1df0 <col:17, col:22> 'err' 0x1fa428e9480
|   |-BinaryOperator 0x1fa428f1ef0 <line:740:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x1fa428f1e90 <col:5> 'int' lvalue Var 0x1fa428e8670 'ret' 'int'
|   | `-IntegerLiteral 0x1fa428f1ec8 <col:11> 'int' 1
|   |-LabelStmt 0x1fa428f1f38 <line:742:2, col:5> 'err'
|   | `-NullStmt 0x1fa428f1f30 <col:5>
|   |-CallExpr 0x1fa428f1fc8 <line:745:5, col:23> 'int'
|   | |-ImplicitCastExpr 0x1fa428f1fb0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1fa428f1f70 <col:5> 'int ()' Function 0x1fa4296d3f0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1fa428f2000 <col:18> 'size_t *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1fa428f1f90 <col:18> 'size_t *' lvalue Var 0x1fa428e7da0 'wsize' 'size_t *'
|   |-CallExpr 0x1fa428f2070 <line:746:5, col:26> 'int'
|   | |-ImplicitCastExpr 0x1fa428f2058 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1fa428f2018 <col:5> 'int ()' Function 0x1fa4296d3f0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1fa428f2098 <col:18> 'size_t *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1fa428f2038 <col:18> 'size_t *' lvalue Var 0x1fa428e8078 'wNAF_len' 'size_t *'
|   |-IfStmt 0x1fa428f25f8 <line:747:5, line:754:5>
|   | |-BinaryOperator 0x1fa428f2188 <line:747:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1fa428f2158 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:747:9> 'signed char **' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1fa428f20b0 <col:9> 'signed char **' lvalue Var 0x1fa428e7f38 'wNAF' 'signed char **'
|   | | `-ImplicitCastExpr 0x1fa428f2170 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char **' <BitCast>
|   | |   `-ParenExpr 0x1fa428f2138 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1fa428f2110 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1fa428f20d0 <col:26> 'int' 0
|   | `-CompoundStmt 0x1fa428f25d0 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:747:23, line:754:5>
|   |   |-DeclStmt 0x1fa428f2230 <line:748:9, col:24>
|   |   | `-VarDecl 0x1fa428f21c8 <col:9, col:23> col:23 used w 'signed char **'
|   |   |-ForStmt 0x1fa428f2500 <line:750:9, line:751:28>
|   |   | |-BinaryOperator 0x1fa428f22b8 <line:750:14, col:18> 'signed char **' '='
|   |   | | |-DeclRefExpr 0x1fa428f2248 <col:14> 'signed char **' lvalue Var 0x1fa428f21c8 'w' 'signed char **'
|   |   | | `-ImplicitCastExpr 0x1fa428f22a0 <col:18> 'signed char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1fa428f2280 <col:18> 'signed char **' lvalue Var 0x1fa428e7f38 'wNAF' 'signed char **'
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x1fa428f23e0 <col:24, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1fa428f23b0 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:750:24, col:25> 'signed char *' <LValueToRValue>
|   |   | | | `-UnaryOperator 0x1fa428f2310 <col:24, col:25> 'signed char *' lvalue prefix '*' cannot overflow
|   |   | | |   `-ImplicitCastExpr 0x1fa428f22f8 <col:25> 'signed char **' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1fa428f22d8 <col:25> 'signed char **' lvalue Var 0x1fa428f21c8 'w' 'signed char **'
|   |   | | `-ImplicitCastExpr 0x1fa428f23c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char *' <BitCast>
|   |   | |   `-ParenExpr 0x1fa428f2390 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x1fa428f2368 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x1fa428f2328 <col:26> 'int' 0
|   |   | |-UnaryOperator 0x1fa428f2420 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:750:36, col:37> 'signed char **' postfix '++'
|   |   | | `-DeclRefExpr 0x1fa428f2400 <col:36> 'signed char **' lvalue Var 0x1fa428f21c8 'w' 'signed char **'
|   |   | `-CallExpr 0x1fa428f24c0 <line:751:13, col:28> 'int'
|   |   |   |-ImplicitCastExpr 0x1fa428f24a8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1fa428f2438 <col:13> 'int ()' Function 0x1fa4296d3f0 'OPENSSL_free' 'int ()'
|   |   |   `-ImplicitCastExpr 0x1fa428f24e8 <col:26, col:27> 'signed char *' <LValueToRValue>
|   |   |     `-UnaryOperator 0x1fa428f2490 <col:26, col:27> 'signed char *' lvalue prefix '*' cannot overflow
|   |   |       `-ImplicitCastExpr 0x1fa428f2478 <col:27> 'signed char **' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1fa428f2458 <col:27> 'signed char **' lvalue Var 0x1fa428f21c8 'w' 'signed char **'
|   |   `-CallExpr 0x1fa428f2590 <line:753:9, col:26> 'int'
|   |     |-ImplicitCastExpr 0x1fa428f2578 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1fa428f2538 <col:9> 'int ()' Function 0x1fa4296d3f0 'OPENSSL_free' 'int ()'
|   |     `-ImplicitCastExpr 0x1fa428f25b8 <col:22> 'signed char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x1fa428f2558 <col:22> 'signed char **' lvalue Var 0x1fa428e7f38 'wNAF' 'signed char **'
|   |-IfStmt 0x1fa428f2878 <line:755:5, line:760:5>
|   | |-OpaqueValueExpr 0x1fa428f2860 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1fa428f2850 <line:755:22, line:760:5>
|   `-ReturnStmt 0x1fa428f28e8 <line:762:5, col:12>
|     `-ImplicitCastExpr 0x1fa428f28d0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1fa428f28b0 <col:12> 'int' lvalue Var 0x1fa428e8670 'ret' 'int'
|-FunctionDecl 0x1fa428f2bb8 <line:785:1, line:936:1> line:785:5 invalid ec_wNAF_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x1fa428f2a98 <col:29, col:39> col:39 invalid group 'int *'
| |-ParmVarDecl 0x1fa428f2b18 <col:46, col:54> col:54 invalid ctx 'int *'
| `-CompoundStmt 0x1fa428f6ab0 <line:786:1, line:936:1>
|   |-DeclStmt 0x1fa428f2d00 <line:787:5, col:30>
|   | `-VarDecl 0x1fa428f2c98 <col:5, col:21> col:21 invalid generator 'const int *'
|   |-DeclStmt 0x1fa428f2f30 <line:790:5, col:24>
|   | `-VarDecl 0x1fa428f2ec8 <col:5, col:19> col:19 invalid order 'const int *'
|   |-DeclStmt 0x1fa428f32d0 <line:791:5, col:71>
|   | |-VarDecl 0x1fa428f2f58 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   | |-VarDecl 0x1fa428f2fd0 <col:5, col:15> col:15 used bits 'size_t':'unsigned long long'
|   | |-VarDecl 0x1fa428f3048 <col:5, col:21> col:21 used w 'size_t':'unsigned long long'
|   | |-VarDecl 0x1fa428f30c0 <col:5, col:24> col:24 used pre_points_per_block 'size_t':'unsigned long long'
|   | |-VarDecl 0x1fa428f3138 <col:5, col:46> col:46 used blocksize 'size_t':'unsigned long long'
|   | |-VarDecl 0x1fa428f31b0 <col:5, col:57> col:57 used numblocks 'size_t':'unsigned long long'
|   | `-VarDecl 0x1fa428f3228 <col:5, col:68> col:68 used num 'size_t':'unsigned long long'
|   |-DeclStmt 0x1fa428f33e8 <line:793:5, col:26>
|   | `-VarDecl 0x1fa428f3380 <col:5, col:18> col:18 used pre_comp 'EC_PRE_COMP *'
|   |-DeclStmt 0x1fa428f34a8 <line:794:5, col:16>
|   | `-VarDecl 0x1fa428f3418 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1fa428f3480 <col:15> 'int' 0
|   |-IfStmt 0x1fa428f35d0 <line:798:5, line:799:16>
|   | |-OpaqueValueExpr 0x1fa428f35b8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1fa428f35a8 <col:9, col:16>
|   |   `-IntegerLiteral 0x1fa428f3580 <col:16> 'int' 0
|   |-IfStmt 0x1fa428f3748 <line:802:5, line:805:5>
|   | |-OpaqueValueExpr 0x1fa428f3730 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1fa428f3718 <line:802:28, line:805:5>
|   |   `-GotoStmt 0x1fa428f3700 <line:804:9, col:14> 'err' 0x1fa428f36b0
|   |-IfStmt 0x1fa428f3940 <line:807:5, line:811:5>
|   | |-OpaqueValueExpr 0x1fa428f3928 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1fa428f3910 <line:807:22, line:811:5>
|   |   `-IfStmt 0x1fa428f38f8 <line:809:9, line:810:18>
|   |     |-OpaqueValueExpr 0x1fa428f38e0 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x1fa428f38c8 <col:13, col:18> 'err' 0x1fa428f36b0
|   |-IfStmt 0x1fa428f3b40 <line:816:5, line:817:14>
|   | |-OpaqueValueExpr 0x1fa428f3b28 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1fa428f3b10 <col:9, col:14> 'err' 0x1fa428f36b0
|   |-IfStmt 0x1fa428f3be0 <line:818:5, line:821:5>
|   | |-OpaqueValueExpr 0x1fa428f3bc8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1fa428f3bb0 <line:818:28, line:821:5>
|   |   `-GotoStmt 0x1fa428f3b98 <line:820:9, col:14> 'err' 0x1fa428f36b0
|   |-BinaryOperator 0x1fa428f3cc8 <line:830:5, col:17> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1fa428f3c50 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1fa428f3138 'blocksize' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x1fa428f3cb0 <col:17> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x1fa428f3c88 <col:17> 'int' 8
|   |-BinaryOperator 0x1fa428f3d60 <line:831:5, col:9> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1fa428f3ce8 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1fa428f3048 'w' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x1fa428f3d48 <col:9> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x1fa428f3d20 <col:9> 'int' 4
|   |-IfStmt 0x1fa428f4a68 <line:832:5, line:835:5>
|   | |-BinaryOperator 0x1fa428f43e0 <line:343:17, line:832:48> 'int' '>'
|   | | |-ParenExpr 0x1fa428f4388 <line:343:17, line:349:21> 'size_t':'unsigned long long'
|   | | | `-CStyleCastExpr 0x1fa428f4360 <line:343:18, line:349:20> 'size_t':'unsigned long long' <IntegralCast>
|   | | |   `-ParenExpr 0x1fa428f4340 <line:344:18, line:349:20> 'int'
|   | | |     `-ConditionalOperator 0x1fa428f42e0 <line:344:19, line:349:19> 'int'
|   | | |       |-BinaryOperator 0x1fa428f3e18 <line:344:19, col:26> 'int' '>='
|   | | |       | |-ImplicitCastExpr 0x1fa428f3de8 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |       | | `-ParenExpr 0x1fa428f3da0 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   | | |       | |   `-DeclRefExpr 0x1fa428f3d80 <line:832:40> 'size_t':'unsigned long long' lvalue Var 0x1fa428f2fd0 'bits' 'size_t':'unsigned long long'
|   | | |       | `-ImplicitCastExpr 0x1fa428f3e00 <line:344:26> 'unsigned long long' <IntegralCast>
|   | | |       |   `-IntegerLiteral 0x1fa428f3dc0 <col:26> 'int' 2000
|   | | |       |-IntegerLiteral 0x1fa428f3e38 <col:33> 'int' 6
|   | | |       `-ConditionalOperator 0x1fa428f42b0 <line:345:19, line:349:19> 'int'
|   | | |         |-BinaryOperator 0x1fa428f3ef8 <line:345:19, col:27> 'int' '>='
|   | | |         | |-ImplicitCastExpr 0x1fa428f3ec8 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |         | | `-ParenExpr 0x1fa428f3e80 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   | | |         | |   `-DeclRefExpr 0x1fa428f3e60 <line:832:40> 'size_t':'unsigned long long' lvalue Var 0x1fa428f2fd0 'bits' 'size_t':'unsigned long long'
|   | | |         | `-ImplicitCastExpr 0x1fa428f3ee0 <line:345:27> 'unsigned long long' <IntegralCast>
|   | | |         |   `-IntegerLiteral 0x1fa428f3ea0 <col:27> 'int' 800
|   | | |         |-IntegerLiteral 0x1fa428f3f18 <col:33> 'int' 5
|   | | |         `-ConditionalOperator 0x1fa428f4280 <line:346:19, line:349:19> 'int'
|   | | |           |-BinaryOperator 0x1fa428f3fd8 <line:346:19, col:27> 'int' '>='
|   | | |           | |-ImplicitCastExpr 0x1fa428f3fa8 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |           | | `-ParenExpr 0x1fa428f3f60 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   | | |           | |   `-DeclRefExpr 0x1fa428f3f40 <line:832:40> 'size_t':'unsigned long long' lvalue Var 0x1fa428f2fd0 'bits' 'size_t':'unsigned long long'
|   | | |           | `-ImplicitCastExpr 0x1fa428f3fc0 <line:346:27> 'unsigned long long' <IntegralCast>
|   | | |           |   `-IntegerLiteral 0x1fa428f3f80 <col:27> 'int' 300
|   | | |           |-IntegerLiteral 0x1fa428f4010 <col:33> 'int' 4
|   | | |           `-ConditionalOperator 0x1fa428f4250 <line:347:19, line:349:19> 'int'
|   | | |             |-BinaryOperator 0x1fa428f40d0 <line:347:19, col:28> 'int' '>='
|   | | |             | |-ImplicitCastExpr 0x1fa428f40a0 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |             | | `-ParenExpr 0x1fa428f4058 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   | | |             | |   `-DeclRefExpr 0x1fa428f4038 <line:832:40> 'size_t':'unsigned long long' lvalue Var 0x1fa428f2fd0 'bits' 'size_t':'unsigned long long'
|   | | |             | `-ImplicitCastExpr 0x1fa428f40b8 <line:347:28> 'unsigned long long' <IntegralCast>
|   | | |             |   `-IntegerLiteral 0x1fa428f4078 <col:28> 'int' 70
|   | | |             |-IntegerLiteral 0x1fa428f40f0 <col:33> 'int' 3
|   | | |             `-ConditionalOperator 0x1fa428f4220 <line:348:19, line:349:19> 'int'
|   | | |               |-BinaryOperator 0x1fa428f41b0 <line:348:19, col:28> 'int' '>='
|   | | |               | |-ImplicitCastExpr 0x1fa428f4180 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |               | | `-ParenExpr 0x1fa428f4138 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   | | |               | |   `-DeclRefExpr 0x1fa428f4118 <line:832:40> 'size_t':'unsigned long long' lvalue Var 0x1fa428f2fd0 'bits' 'size_t':'unsigned long long'
|   | | |               | `-ImplicitCastExpr 0x1fa428f4198 <line:348:28> 'unsigned long long' <IntegralCast>
|   | | |               |   `-IntegerLiteral 0x1fa428f4158 <col:28> 'int' 20
|   | | |               |-IntegerLiteral 0x1fa428f41d0 <col:33> 'int' 2
|   | | |               `-IntegerLiteral 0x1fa428f41f8 <line:349:19> 'int' 1
|   | | `-ImplicitCastExpr 0x1fa428f43c8 <line:832:48> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1fa428f43a8 <col:48> 'size_t':'unsigned long long' lvalue Var 0x1fa428f3048 'w' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1fa428f4a50 <col:51, line:835:5>
|   |   `-BinaryOperator 0x1fa428f4a30 <line:834:9, line:349:21> 'size_t':'unsigned long long' '='
|   |     |-DeclRefExpr 0x1fa428f4400 <line:834:9> 'size_t':'unsigned long long' lvalue Var 0x1fa428f3048 'w' 'size_t':'unsigned long long'
|   |     `-ParenExpr 0x1fa428f4a10 <line:343:17, line:349:21> 'size_t':'unsigned long long'
|   |       `-CStyleCastExpr 0x1fa428f49e8 <line:343:18, line:349:20> 'size_t':'unsigned long long' <IntegralCast>
|   |         `-ParenExpr 0x1fa428f49c8 <line:344:18, line:349:20> 'int'
|   |           `-ConditionalOperator 0x1fa428f4968 <line:344:19, line:349:19> 'int'
|   |             |-BinaryOperator 0x1fa428f44b8 <line:344:19, col:26> 'int' '>='
|   |             | |-ImplicitCastExpr 0x1fa428f4488 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |             | | `-ParenExpr 0x1fa428f4440 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |             | |   `-DeclRefExpr 0x1fa428f4420 <line:834:44> 'size_t':'unsigned long long' lvalue Var 0x1fa428f2fd0 'bits' 'size_t':'unsigned long long'
|   |             | `-ImplicitCastExpr 0x1fa428f44a0 <line:344:26> 'unsigned long long' <IntegralCast>
|   |             |   `-IntegerLiteral 0x1fa428f4460 <col:26> 'int' 2000
|   |             |-IntegerLiteral 0x1fa428f44d8 <col:33> 'int' 6
|   |             `-ConditionalOperator 0x1fa428f4938 <line:345:19, line:349:19> 'int'
|   |               |-BinaryOperator 0x1fa428f4598 <line:345:19, col:27> 'int' '>='
|   |               | |-ImplicitCastExpr 0x1fa428f4568 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |               | | `-ParenExpr 0x1fa428f4520 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |               | |   `-DeclRefExpr 0x1fa428f4500 <line:834:44> 'size_t':'unsigned long long' lvalue Var 0x1fa428f2fd0 'bits' 'size_t':'unsigned long long'
|   |               | `-ImplicitCastExpr 0x1fa428f4580 <line:345:27> 'unsigned long long' <IntegralCast>
|   |               |   `-IntegerLiteral 0x1fa428f4540 <col:27> 'int' 800
|   |               |-IntegerLiteral 0x1fa428f45b8 <col:33> 'int' 5
|   |               `-ConditionalOperator 0x1fa428f4908 <line:346:19, line:349:19> 'int'
|   |                 |-BinaryOperator 0x1fa428f4678 <line:346:19, col:27> 'int' '>='
|   |                 | |-ImplicitCastExpr 0x1fa428f4648 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |                 | | `-ParenExpr 0x1fa428f4600 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |                 | |   `-DeclRefExpr 0x1fa428f45e0 <line:834:44> 'size_t':'unsigned long long' lvalue Var 0x1fa428f2fd0 'bits' 'size_t':'unsigned long long'
|   |                 | `-ImplicitCastExpr 0x1fa428f4660 <line:346:27> 'unsigned long long' <IntegralCast>
|   |                 |   `-IntegerLiteral 0x1fa428f4620 <col:27> 'int' 300
|   |                 |-IntegerLiteral 0x1fa428f4698 <col:33> 'int' 4
|   |                 `-ConditionalOperator 0x1fa428f48d8 <line:347:19, line:349:19> 'int'
|   |                   |-BinaryOperator 0x1fa428f4758 <line:347:19, col:28> 'int' '>='
|   |                   | |-ImplicitCastExpr 0x1fa428f4728 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |                   | | `-ParenExpr 0x1fa428f46e0 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |                   | |   `-DeclRefExpr 0x1fa428f46c0 <line:834:44> 'size_t':'unsigned long long' lvalue Var 0x1fa428f2fd0 'bits' 'size_t':'unsigned long long'
|   |                   | `-ImplicitCastExpr 0x1fa428f4740 <line:347:28> 'unsigned long long' <IntegralCast>
|   |                   |   `-IntegerLiteral 0x1fa428f4700 <col:28> 'int' 70
|   |                   |-IntegerLiteral 0x1fa428f4778 <col:33> 'int' 3
|   |                   `-ConditionalOperator 0x1fa428f48a8 <line:348:19, line:349:19> 'int'
|   |                     |-BinaryOperator 0x1fa428f4838 <line:348:19, col:28> 'int' '>='
|   |                     | |-ImplicitCastExpr 0x1fa428f4808 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |                     | | `-ParenExpr 0x1fa428f47c0 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |                     | |   `-DeclRefExpr 0x1fa428f47a0 <line:834:44> 'size_t':'unsigned long long' lvalue Var 0x1fa428f2fd0 'bits' 'size_t':'unsigned long long'
|   |                     | `-ImplicitCastExpr 0x1fa428f4820 <line:348:28> 'unsigned long long' <IntegralCast>
|   |                     |   `-IntegerLiteral 0x1fa428f47e0 <col:28> 'int' 20
|   |                     |-IntegerLiteral 0x1fa428f4858 <col:33> 'int' 2
|   |                     `-IntegerLiteral 0x1fa428f4880 <line:349:19> 'int' 1
|   |-BinaryOperator 0x1fa428f4c20 <line:837:5, col:42> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1fa428f4a80 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1fa428f31b0 'numblocks' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x1fa428f4c00 <col:17, col:42> 'unsigned long long' '/'
|   |   |-ParenExpr 0x1fa428f4ba8 <col:17, col:38> 'unsigned long long'
|   |   | `-BinaryOperator 0x1fa428f4b88 <col:18, col:37> 'unsigned long long' '-'
|   |   |   |-BinaryOperator 0x1fa428f4b28 <col:18, col:25> 'unsigned long long' '+'
|   |   |   | |-ImplicitCastExpr 0x1fa428f4af8 <col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x1fa428f4ab8 <col:18> 'size_t':'unsigned long long' lvalue Var 0x1fa428f2fd0 'bits' 'size_t':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x1fa428f4b10 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1fa428f4ad8 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1fa428f3138 'blocksize' 'size_t':'unsigned long long'
|   |   |   `-ImplicitCastExpr 0x1fa428f4b70 <col:37> 'unsigned long long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x1fa428f4b48 <col:37> 'int' 1
|   |   `-ImplicitCastExpr 0x1fa428f4be8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1fa428f4bc8 <col:42> 'size_t':'unsigned long long' lvalue Var 0x1fa428f3138 'blocksize' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x1fa428f4db0 <line:841:5, col:47> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1fa428f4c40 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1fa428f30c0 'pre_points_per_block' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x1fa428f4d90 <col:28, col:47> 'size_t':'unsigned long long' '<<'
|   |   |-CStyleCastExpr 0x1fa428f4cb0 <col:28, col:36> 'size_t':'unsigned long long' <IntegralCast>
|   |   | `-IntegerLiteral 0x1fa428f4c78 <col:36> 'int' 1
|   |   `-ParenExpr 0x1fa428f4d70 <col:41, col:47> 'unsigned long long'
|   |     `-BinaryOperator 0x1fa428f4d50 <col:42, col:46> 'unsigned long long' '-'
|   |       |-ImplicitCastExpr 0x1fa428f4d20 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1fa428f4cd8 <col:42> 'size_t':'unsigned long long' lvalue Var 0x1fa428f3048 'w' 'size_t':'unsigned long long'
|   |       `-ImplicitCastExpr 0x1fa428f4d38 <col:46> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x1fa428f4cf8 <col:46> 'int' 1
|   |-BinaryOperator 0x1fa428f4e98 <line:842:5, col:34> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1fa428f4dd0 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1fa428f3228 'num' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x1fa428f4e78 <col:11, col:34> 'unsigned long long' '*'
|   |   |-ImplicitCastExpr 0x1fa428f4e48 <col:11> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1fa428f4e08 <col:11> 'size_t':'unsigned long long' lvalue Var 0x1fa428f30c0 'pre_points_per_block' 'size_t':'unsigned long long'
|   |   `-ImplicitCastExpr 0x1fa428f4e60 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1fa428f4e28 <col:34> 'size_t':'unsigned long long' lvalue Var 0x1fa428f31b0 'numblocks' 'size_t':'unsigned long long'
|   |-IfStmt 0x1fa428f5080 <line:846:5, line:849:5>
|   | |-OpaqueValueExpr 0x1fa428f5068 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1fa428f5050 <line:846:25, line:849:5>
|   |   `-GotoStmt 0x1fa428f5038 <line:848:9, col:14> 'err' 0x1fa428f36b0
|   |-ForStmt 0x1fa428f5400 <line:853:5, line:858:5>
|   | |-BinaryOperator 0x1fa428f51b8 <line:853:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x1fa428f5140 <col:10> 'size_t':'unsigned long long' lvalue Var 0x1fa428f2f58 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1fa428f51a0 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1fa428f5178 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1fa428f5248 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1fa428f5218 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1fa428f51d8 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1fa428f2f58 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1fa428f5230 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1fa428f51f8 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1fa428f3228 'num' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x1fa428f5288 <col:26, col:27> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x1fa428f5268 <col:26> 'size_t':'unsigned long long' lvalue Var 0x1fa428f2f58 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1fa428f53e8 <col:31, line:858:5>
|   |   `-IfStmt 0x1fa428f53d0 <line:854:9, line:857:9>
|   |     |-OpaqueValueExpr 0x1fa428f53b8 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1fa428f53a0 <line:854:53, line:857:9>
|   |       `-GotoStmt 0x1fa428f5388 <line:856:13, col:18> 'err' 0x1fa428f36b0
|   |-IfStmt 0x1fa428f55f0 <line:860:5, line:864:5>
|   | |-OpaqueValueExpr 0x1fa428f55d8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1fa428f55c0 <line:861:50, line:864:5>
|   |   `-GotoStmt 0x1fa428f55a8 <line:863:9, col:14> 'err' 0x1fa428f36b0
|   |-IfStmt 0x1fa428f5658 <line:866:5, line:867:14>
|   | |-OpaqueValueExpr 0x1fa428f5640 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1fa428f5628 <col:9, col:14> 'err' 0x1fa428f36b0
|   |-ForStmt 0x1fa428f60f0 <line:870:5, line:905:5>
|   | |-BinaryOperator 0x1fa428f56d0 <line:870:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x1fa428f5670 <col:10> 'size_t':'unsigned long long' lvalue Var 0x1fa428f2f58 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1fa428f56b8 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1fa428f5690 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1fa428f5760 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1fa428f5730 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1fa428f56f0 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1fa428f2f58 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1fa428f5748 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1fa428f5710 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1fa428f31b0 'numblocks' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x1fa428f57a0 <col:32, col:33> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x1fa428f5780 <col:32> 'size_t':'unsigned long long' lvalue Var 0x1fa428f2f58 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1fa428f60b8 <col:37, line:905:5>
|   |   |-DeclStmt 0x1fa428f5830 <line:871:9, col:17>
|   |   | `-VarDecl 0x1fa428f57c8 <col:9, col:16> col:16 used j 'size_t':'unsigned long long'
|   |   |-IfStmt 0x1fa428f5898 <line:873:9, line:874:18>
|   |   | |-OpaqueValueExpr 0x1fa428f5880 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x1fa428f5868 <col:13, col:18> 'err' 0x1fa428f36b0
|   |   |-IfStmt 0x1fa428f5900 <line:876:9, line:877:18>
|   |   | |-OpaqueValueExpr 0x1fa428f58e8 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x1fa428f58d0 <col:13, col:18> 'err' 0x1fa428f36b0
|   |   |-ForStmt 0x1fa428f5b20 <line:879:9, line:885:9>
|   |   | |-BinaryOperator 0x1fa428f5990 <line:879:14, col:18> 'size_t':'unsigned long long' '='
|   |   | | |-DeclRefExpr 0x1fa428f5918 <col:14> 'size_t':'unsigned long long' lvalue Var 0x1fa428f57c8 'j' 'size_t':'unsigned long long'
|   |   | | `-ImplicitCastExpr 0x1fa428f5978 <col:18> 'size_t':'unsigned long long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x1fa428f5950 <col:18> 'int' 1
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x1fa428f5a20 <col:21, col:25> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x1fa428f59f0 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1fa428f59b0 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1fa428f57c8 'j' 'size_t':'unsigned long long'
|   |   | | `-ImplicitCastExpr 0x1fa428f5a08 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1fa428f59d0 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1fa428f30c0 'pre_points_per_block' 'size_t':'unsigned long long'
|   |   | |-<<<NULL>>>
|   |   | `-CompoundStmt 0x1fa428f5b08 <col:59, line:885:9>
|   |   |   `-IfStmt 0x1fa428f5af0 <line:883:13, line:884:22>
|   |   |     |-OpaqueValueExpr 0x1fa428f5ad8 <<invalid sloc>> '_Bool'
|   |   |     `-GotoStmt 0x1fa428f5ac0 <col:17, col:22> 'err' 0x1fa428f36b0
|   |   `-IfStmt 0x1fa428f60a0 <line:887:9, line:904:9>
|   |     |-BinaryOperator 0x1fa428f5c28 <line:887:13, col:29> 'int' '<'
|   |     | |-ImplicitCastExpr 0x1fa428f5c10 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1fa428f5b58 <col:13> 'size_t':'unsigned long long' lvalue Var 0x1fa428f2f58 'i' 'size_t':'unsigned long long'
|   |     | `-BinaryOperator 0x1fa428f5bf0 <col:17, col:29> 'unsigned long long' '-'
|   |     |   |-ImplicitCastExpr 0x1fa428f5bc0 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x1fa428f5b78 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1fa428f31b0 'numblocks' 'size_t':'unsigned long long'
|   |     |   `-ImplicitCastExpr 0x1fa428f5bd8 <col:29> 'unsigned long long' <IntegralCast>
|   |     |     `-IntegerLiteral 0x1fa428f5b98 <col:29> 'int' 1
|   |     `-CompoundStmt 0x1fa428f6070 <col:32, line:904:9>
|   |       |-DeclStmt 0x1fa428f5cc0 <line:891:13, col:21>
|   |       | `-VarDecl 0x1fa428f5c58 <col:13, col:20> col:20 used k 'size_t':'unsigned long long'
|   |       |-IfStmt 0x1fa428f5dc0 <line:893:13, line:896:13>
|   |       | |-BinaryOperator 0x1fa428f5d50 <line:893:17, col:30> 'int' '<='
|   |       | | |-ImplicitCastExpr 0x1fa428f5d20 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x1fa428f5cd8 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1fa428f3138 'blocksize' 'size_t':'unsigned long long'
|   |       | | `-ImplicitCastExpr 0x1fa428f5d38 <col:30> 'unsigned long long' <IntegralCast>
|   |       | |   `-IntegerLiteral 0x1fa428f5cf8 <col:30> 'int' 2
|   |       | `-CompoundStmt 0x1fa428f5da8 <col:33, line:896:13>
|   |       |   `-GotoStmt 0x1fa428f5d90 <line:895:17, col:22> 'err' 0x1fa428f36b0
|   |       |-IfStmt 0x1fa428f5e28 <line:898:13, line:899:22>
|   |       | |-OpaqueValueExpr 0x1fa428f5e10 <<invalid sloc>> '_Bool'
|   |       | `-GotoStmt 0x1fa428f5df8 <col:17, col:22> 'err' 0x1fa428f36b0
|   |       `-ForStmt 0x1fa428f6038 <line:900:13, line:903:13>
|   |         |-BinaryOperator 0x1fa428f5eb8 <line:900:18, col:22> 'size_t':'unsigned long long' '='
|   |         | |-DeclRefExpr 0x1fa428f5e40 <col:18> 'size_t':'unsigned long long' lvalue Var 0x1fa428f5c58 'k' 'size_t':'unsigned long long'
|   |         | `-ImplicitCastExpr 0x1fa428f5ea0 <col:22> 'size_t':'unsigned long long' <IntegralCast>
|   |         |   `-IntegerLiteral 0x1fa428f5e78 <col:22> 'int' 2
|   |         |-<<<NULL>>>
|   |         |-BinaryOperator 0x1fa428f5f48 <col:25, col:29> 'int' '<'
|   |         | |-ImplicitCastExpr 0x1fa428f5f18 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x1fa428f5ed8 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1fa428f5c58 'k' 'size_t':'unsigned long long'
|   |         | `-ImplicitCastExpr 0x1fa428f5f30 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x1fa428f5ef8 <col:29> 'size_t':'unsigned long long' lvalue Var 0x1fa428f3138 'blocksize' 'size_t':'unsigned long long'
|   |         |-UnaryOperator 0x1fa428f5f88 <col:40, col:41> 'size_t':'unsigned long long' postfix '++'
|   |         | `-DeclRefExpr 0x1fa428f5f68 <col:40> 'size_t':'unsigned long long' lvalue Var 0x1fa428f5c58 'k' 'size_t':'unsigned long long'
|   |         `-CompoundStmt 0x1fa428f6020 <col:45, line:903:13>
|   |           `-IfStmt 0x1fa428f5ff0 <line:901:17, line:902:26>
|   |             |-OpaqueValueExpr 0x1fa428f5fd8 <<invalid sloc>> '_Bool'
|   |             `-GotoStmt 0x1fa428f5fc0 <col:21, col:26> 'err' 0x1fa428f36b0
|   |-IfStmt 0x1fa428f6198 <line:907:5, line:908:14>
|   | |-OpaqueValueExpr 0x1fa428f6180 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1fa428f6168 <col:9, col:14> 'err' 0x1fa428f36b0
|   |-BinaryOperator 0x1fa428f6288 <line:911:5, col:27> 'size_t':'unsigned long long' '='
|   | |-MemberExpr 0x1fa428f6220 <col:5, col:15> 'size_t':'unsigned long long' lvalue ->blocksize 0x1fa4296c300
|   | | `-ImplicitCastExpr 0x1fa428f6208 <col:5> 'EC_PRE_COMP *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1fa428f61e8 <col:5> 'EC_PRE_COMP *' lvalue Var 0x1fa428f3380 'pre_comp' 'EC_PRE_COMP *'
|   | `-ImplicitCastExpr 0x1fa428f6270 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1fa428f6250 <col:27> 'size_t':'unsigned long long' lvalue Var 0x1fa428f3138 'blocksize' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x1fa428f6348 <line:912:5, col:27> 'size_t':'unsigned long long' '='
|   | |-MemberExpr 0x1fa428f62e0 <col:5, col:15> 'size_t':'unsigned long long' lvalue ->numblocks 0x1fa4296c368
|   | | `-ImplicitCastExpr 0x1fa428f62c8 <col:5> 'EC_PRE_COMP *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1fa428f62a8 <col:5> 'EC_PRE_COMP *' lvalue Var 0x1fa428f3380 'pre_comp' 'EC_PRE_COMP *'
|   | `-ImplicitCastExpr 0x1fa428f6330 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1fa428f6310 <col:27> 'size_t':'unsigned long long' lvalue Var 0x1fa428f31b0 'numblocks' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x1fa428f6408 <line:913:5, col:19> 'size_t':'unsigned long long' '='
|   | |-MemberExpr 0x1fa428f63a0 <col:5, col:15> 'size_t':'unsigned long long' lvalue ->w 0x1fa4296c3d0
|   | | `-ImplicitCastExpr 0x1fa428f6388 <col:5> 'EC_PRE_COMP *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1fa428f6368 <col:5> 'EC_PRE_COMP *' lvalue Var 0x1fa428f3380 'pre_comp' 'EC_PRE_COMP *'
|   | `-ImplicitCastExpr 0x1fa428f63f0 <col:19> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1fa428f63d0 <col:19> 'size_t':'unsigned long long' lvalue Var 0x1fa428f3048 'w' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x1fa428f6588 <line:916:5, col:21> 'size_t':'unsigned long long' '='
|   | |-MemberExpr 0x1fa428f6520 <col:5, col:15> 'size_t':'unsigned long long' lvalue ->num 0x1fa4296c4b0
|   | | `-ImplicitCastExpr 0x1fa428f6508 <col:5> 'EC_PRE_COMP *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1fa428f64e8 <col:5> 'EC_PRE_COMP *' lvalue Var 0x1fa428f3380 'pre_comp' 'EC_PRE_COMP *'
|   | `-ImplicitCastExpr 0x1fa428f6570 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1fa428f6550 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1fa428f3228 'num' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x1fa428f66a8 <line:918:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'EC_PRE_COMP *' '='
|   | |-DeclRefExpr 0x1fa428f65e8 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:918:5> 'EC_PRE_COMP *' lvalue Var 0x1fa428f3380 'pre_comp' 'EC_PRE_COMP *'
|   | `-ImplicitCastExpr 0x1fa428f6690 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'EC_PRE_COMP *' <NullToPointer>
|   |   `-ParenExpr 0x1fa428f6670 <col:17, col:27> 'void *'
|   |     `-CStyleCastExpr 0x1fa428f6648 <col:18, col:26> 'void *' <NullToPointer>
|   |       `-IntegerLiteral 0x1fa428f6608 <col:26> 'int' 0
|   |-BinaryOperator 0x1fa428f6728 <.//openssl//file_jk/before\crypto\ec\ec_mult.c:919:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x1fa428f66c8 <col:5> 'int' lvalue Var 0x1fa428f3418 'ret' 'int'
|   | `-IntegerLiteral 0x1fa428f6700 <col:11> 'int' 1
|   |-LabelStmt 0x1fa428f67f8 <line:921:2, col:5> 'err'
|   | `-NullStmt 0x1fa428f67f0 <col:5>
|   |-CallExpr 0x1fa428f68e0 <line:925:5, col:33> 'void'
|   | |-ImplicitCastExpr 0x1fa428f68c8 <col:5> 'void (*)(EC_PRE_COMP *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1fa428f6830 <col:5> 'void (EC_PRE_COMP *)' Function 0x1fa428e2518 'EC_ec_pre_comp_free' 'void (EC_PRE_COMP *)'
|   | `-ImplicitCastExpr 0x1fa428f6908 <col:25> 'EC_PRE_COMP *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1fa428f6850 <col:25> 'EC_PRE_COMP *' lvalue Var 0x1fa428f3380 'pre_comp' 'EC_PRE_COMP *'
|   |-IfStmt 0x1fa428f6a10 <line:926:5, line:932:5>
|   | |-OpaqueValueExpr 0x1fa428f69f8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1fa428f69e8 <line:926:17, line:932:5>
|   `-ReturnStmt 0x1fa428f6aa0 <line:935:5, col:12>
|     `-ImplicitCastExpr 0x1fa428f6a88 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1fa428f6a68 <col:12> 'int' lvalue Var 0x1fa428f3418 'ret' 'int'
`-FunctionDecl 0x1fa428f6c70 <line:938:1, line:941:1> line:938:5 invalid ec_wNAF_have_precompute_mult 'int (const int *)'
  |-ParmVarDecl 0x1fa428f6bd8 <col:34, col:50> col:50 invalid group 'const int *'
  `-CompoundStmt 0x1fa428f6dd8 <line:939:1, line:941:1>
